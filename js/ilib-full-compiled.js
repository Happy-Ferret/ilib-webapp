/*

 Copyright Â© 2012-2013, JEDLSoft

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

 See the License for the specific language governing permissions and
 limitations under the License.
*/
var ilib=ilib||{};ilib.getVersion=function $ilib$getVersion$(){return"10.0"};ilib.data={norm:{nfc:{},nfd:{},nfkd:{},ccc:{}},zoneinfo:{"Etc/UTC":{o:"0:0",f:"UTC"},local:{f:"local"}},ctype:null,ctype_c:null,ctype_l:null,ctype_m:null,ctype_p:null,ctype_z:null,scriptToRange:null,dateformats:null};"undefined"!==typeof window&&(window.ilib=ilib);"undefined"!==typeof exports&&(exports.ilib=ilib);ilib.pseudoLocales=["zxx-XX"];
ilib.setAsPseudoLocale=function $ilib$setAsPseudoLocale$($localename$$){$localename$$&&ilib.pseudoLocales.push($localename$$)};ilib.clearPseudoLocales=function $ilib$clearPseudoLocales$(){ilib.pseudoLocales=["zxx-XX"]};ilib._getPlatform=function $ilib$_getPlatform$(){if(!ilib._platform)ilib._platform=typeof environment!=="undefined"?"rhino":typeof process!=="undefined"||typeof require!=="undefined"?"nodejs":typeof window!=="undefined"?typeof PalmSystem!=="undefined"?"webos":"browser":"unknown";return ilib._platform};
ilib._getBrowser=function $ilib$_getBrowser$(){var $browser$$=void 0;if(ilib._getPlatform()==="browser"&&navigator&&navigator.userAgent){navigator.userAgent.indexOf("Firefox")>-1&&($browser$$="firefox");navigator.userAgent.indexOf("Opera")>-1&&($browser$$="opera");navigator.userAgent.indexOf("Chrome")>-1&&($browser$$="chrome");navigator.userAgent.indexOf(" .NET")>-1&&($browser$$="ie");navigator.userAgent.indexOf("Safari")>-1&&($browser$$="safari")}return $browser$$};
ilib._isGlobal=function $ilib$_isGlobal$($name$$){switch(ilib._getPlatform()){case "rhino":return typeof function(){return typeof global==="object"?global:this}()[$name$$]!==void 0;case "nodejs":var $root$$=typeof global!=="undefined"?global:this;return $root$$&&typeof $root$$[$name$$]!==void 0;default:return typeof window[$name$$]!==void 0}};ilib.setLocale=function $ilib$setLocale$($spec$$){if(typeof $spec$$==="string"||!$spec$$)ilib.locale=$spec$$};
ilib.getLocale=function $ilib$getLocale$(){if(typeof ilib.locale!=="string"){if(typeof navigator!=="undefined"&&typeof navigator.language!=="undefined"){ilib.locale=navigator.language.substring(0,3)+navigator.language.substring(3,5).toUpperCase();if(!ilib.locale){var $lang$$=typeof navigator.browserLanguage!=="undefined"?navigator.browserLanguage:typeof navigator.userLanguage!=="undefined"?navigator.userLanguage:typeof navigator.systemLanguage!=="undefined"?navigator.systemLanguage:void 0;if(typeof $lang$$!==
"undefined"&&$lang$$)ilib.locale=$lang$$.substring(0,3)+$lang$$.substring(3,5).toUpperCase()}}else if(typeof PalmSystem!=="undefined"&&typeof PalmSystem.locales!=="undefined"){if(typeof PalmSystem.locales.UI!="undefined"&&PalmSystem.locales.UI.length>0)ilib.locale=PalmSystem.locales.UI}else if(typeof environment!=="undefined"&&typeof environment.user!=="undefined"){if(typeof environment.user.language==="string"&&environment.user.language.length>0){ilib.locale=environment.user.language;if(typeof environment.user.country===
"string"&&environment.user.country.length>0)ilib.locale=ilib.locale+("-"+environment.user.country)}}else if(typeof process!=="undefined"&&typeof process.env!=="undefined")if(($lang$$=process.env.LANG||process.env.LC_ALL)&&$lang$$!=="undefined")ilib.locale=$lang$$.substring(0,2).toLowerCase()+"-"+$lang$$.substring(3,5).toUpperCase();ilib.locale=typeof ilib.locale==="string"?ilib.locale:"en-US"}return ilib.locale};ilib.setTimeZone=function $ilib$setTimeZone$($tz$$){ilib.tz=$tz$$||ilib.tz};
ilib.getTimeZone=function $ilib$getTimeZone$(){if(typeof ilib.tz==="undefined"){if(typeof navigator!=="undefined"&&typeof navigator.timezone!=="undefined"){if(navigator.timezone.length>0)ilib.tz=navigator.timezone}else if(typeof PalmSystem!=="undefined"&&typeof PalmSystem.timezone!=="undefined"){if(PalmSystem.timezone.length>0)ilib.tz=PalmSystem.timezone}else if(typeof environment!=="undefined"&&typeof environment.user!=="undefined"){if(typeof environment.user.timezone!=="undefined"&&environment.user.timezone.length>
0)ilib.tz=environment.user.timezone}else if(typeof process!=="undefined"&&typeof process.env!=="undefined"&&process.env.TZ&&process.env.TZ!=="undefined")ilib.tz=process.env.TZ;ilib.tz=ilib.tz||"local"}return ilib.tz};ilib.Loader=function $ilib$Loader$(){};ilib.Loader.prototype.loadFiles=function $ilib$Loader$$loadFiles$(){};ilib.Loader.prototype.listAvailableFiles=function $ilib$Loader$$listAvailableFiles$(){};ilib.Loader.prototype.isAvailable=function $ilib$Loader$$isAvailable$(){};
ilib.setLoaderCallback=function $ilib$setLoaderCallback$($loader$$){if(typeof $loader$$==="object"&&$loader$$ instanceof ilib.Loader||typeof $loader$$==="function"||typeof $loader$$==="undefined"){ilib._load=$loader$$;return true}return false};
ilib.Locale=function $ilib$Locale$($language_parts_spec$$,$i$$,$variant$$,$script$$){if(typeof $i$$==="undefined"){$language_parts_spec$$=$language_parts_spec$$||ilib.getLocale();if(typeof $language_parts_spec$$==="string"){$language_parts_spec$$=$language_parts_spec$$.split("-");for($i$$=0;$i$$<$language_parts_spec$$.length;$i$$++)ilib.Locale._isLanguageCode($language_parts_spec$$[$i$$])?this.language=$language_parts_spec$$[$i$$]:ilib.Locale._isRegionCode($language_parts_spec$$[$i$$])?this.region=
$language_parts_spec$$[$i$$]:ilib.Locale._isScriptCode($language_parts_spec$$[$i$$])?this.script=$language_parts_spec$$[$i$$]:this.variant=$language_parts_spec$$[$i$$];this.language=this.language||void 0;this.region=this.region||void 0;this.script=this.script||void 0;this.variant=this.variant||void 0}else if(typeof $language_parts_spec$$==="object"){this.language=$language_parts_spec$$.language||void 0;this.region=$language_parts_spec$$.region||void 0;this.script=$language_parts_spec$$.script||void 0;
this.variant=$language_parts_spec$$.variant||void 0}}else{if($language_parts_spec$$){$language_parts_spec$$=$language_parts_spec$$.trim();this.language=$language_parts_spec$$.length>0?$language_parts_spec$$.toLowerCase():void 0}else this.language=void 0;if($i$$){$i$$=$i$$.trim();this.region=$i$$.length>0?$i$$.toUpperCase():void 0}else this.region=void 0;if($variant$$){$variant$$=$variant$$.trim();this.variant=$variant$$.length>0?$variant$$:void 0}else this.variant=void 0;if($script$$){$script$$=$script$$.trim();
this.script=$script$$.length>0?$script$$:void 0}else this.script=void 0}this._genSpec()};
ilib.Locale.a2toa3regmap={AF:"AFG",AX:"ALA",AL:"ALB",DZ:"DZA",AS:"ASM",AD:"AND",AO:"AGO",AI:"AIA",AQ:"ATA",AG:"ATG",AR:"ARG",AM:"ARM",AW:"ABW",AU:"AUS",AT:"AUT",AZ:"AZE",BS:"BHS",BH:"BHR",BD:"BGD",BB:"BRB",BY:"BLR",BE:"BEL",BZ:"BLZ",BJ:"BEN",BM:"BMU",BT:"BTN",BO:"BOL",BQ:"BES",BA:"BIH",BW:"BWA",BV:"BVT",BR:"BRA",IO:"IOT",BN:"BRN",BG:"BGR",BF:"BFA",BI:"BDI",KH:"KHM",CM:"CMR",CA:"CAN",CV:"CPV",KY:"CYM",CF:"CAF",TD:"TCD",CL:"CHL",CN:"CHN",CX:"CXR",CC:"CCK",CO:"COL",KM:"COM",CG:"COG",CD:"COD",CK:"COK",
CR:"CRI",CI:"CIV",HR:"HRV",CU:"CUB",CW:"CUW",CY:"CYP",CZ:"CZE",DK:"DNK",DJ:"DJI",DM:"DMA",DO:"DOM",EC:"ECU",EG:"EGY",SV:"SLV",GQ:"GNQ",ER:"ERI",EE:"EST",ET:"ETH",FK:"FLK",FO:"FRO",FJ:"FJI",FI:"FIN",FR:"FRA",GF:"GUF",PF:"PYF",TF:"ATF",GA:"GAB",GM:"GMB",GE:"GEO",DE:"DEU",GH:"GHA",GI:"GIB",GR:"GRC",GL:"GRL",GD:"GRD",GP:"GLP",GU:"GUM",GT:"GTM",GG:"GGY",GN:"GIN",GW:"GNB",GY:"GUY",HT:"HTI",HM:"HMD",VA:"VAT",HN:"HND",HK:"HKG",HU:"HUN",IS:"ISL",IN:"IND",ID:"IDN",IR:"IRN",IQ:"IRQ",IE:"IRL",IM:"IMN",IL:"ISR",
IT:"ITA",JM:"JAM",JP:"JPN",JE:"JEY",JO:"JOR",KZ:"KAZ",KE:"KEN",KI:"KIR",KP:"PRK",KR:"KOR",KW:"KWT",KG:"KGZ",LA:"LAO",LV:"LVA",LB:"LBN",LS:"LSO",LR:"LBR",LY:"LBY",LI:"LIE",LT:"LTU",LU:"LUX",MO:"MAC",MK:"MKD",MG:"MDG",MW:"MWI",MY:"MYS",MV:"MDV",ML:"MLI",MT:"MLT",MH:"MHL",MQ:"MTQ",MR:"MRT",MU:"MUS",YT:"MYT",MX:"MEX",FM:"FSM",MD:"MDA",MC:"MCO",MN:"MNG",ME:"MNE",MS:"MSR",MA:"MAR",MZ:"MOZ",MM:"MMR",NA:"NAM",NR:"NRU",NP:"NPL",NL:"NLD",NC:"NCL",NZ:"NZL",NI:"NIC",NE:"NER",NG:"NGA",NU:"NIU",NF:"NFK",MP:"MNP",
NO:"NOR",OM:"OMN",PK:"PAK",PW:"PLW",PS:"PSE",PA:"PAN",PG:"PNG",PY:"PRY",PE:"PER",PH:"PHL",PN:"PCN",PL:"POL",PT:"PRT",PR:"PRI",QA:"QAT",RE:"REU",RO:"ROU",RU:"RUS",RW:"RWA",BL:"BLM",SH:"SHN",KN:"KNA",LC:"LCA",MF:"MAF",PM:"SPM",VC:"VCT",WS:"WSM",SM:"SMR",ST:"STP",SA:"SAU",SN:"SEN",RS:"SRB",SC:"SYC",SL:"SLE",SG:"SGP",SX:"SXM",SK:"SVK",SI:"SVN",SB:"SLB",SO:"SOM",ZA:"ZAF",GS:"SGS",SS:"SSD",ES:"ESP",LK:"LKA",SD:"SDN",SR:"SUR",SJ:"SJM",SZ:"SWZ",SE:"SWE",CH:"CHE",SY:"SYR",TW:"TWN",TJ:"TJK",TZ:"TZA",TH:"THA",
TL:"TLS",TG:"TGO",TK:"TKL",TO:"TON",TT:"TTO",TN:"TUN",TR:"TUR",TM:"TKM",TC:"TCA",TV:"TUV",UG:"UGA",UA:"UKR",AE:"ARE",GB:"GBR",US:"USA",UM:"UMI",UY:"URY",UZ:"UZB",VU:"VUT",VE:"VEN",VN:"VNM",VG:"VGB",VI:"VIR",WF:"WLF",EH:"ESH",YE:"YEM",ZM:"ZMB",ZW:"ZWE"};
ilib.Locale.a1toa3langmap={ab:"abk",aa:"aar",af:"afr",ak:"aka",sq:"sqi",am:"amh",ar:"ara",an:"arg",hy:"hye",as:"asm",av:"ava",ae:"ave",ay:"aym",az:"aze",bm:"bam",ba:"bak",eu:"eus",be:"bel",bn:"ben",bh:"bih",bi:"bis",bs:"bos",br:"bre",bg:"bul",my:"mya",ca:"cat",ch:"cha",ce:"che",ny:"nya",zh:"zho",cv:"chv",kw:"cor",co:"cos",cr:"cre",hr:"hrv",cs:"ces",da:"dan",dv:"div",nl:"nld",dz:"dzo",en:"eng",eo:"epo",et:"est",ee:"ewe",fo:"fao",fj:"fij",fi:"fin",fr:"fra",ff:"ful",gl:"glg",ka:"kat",de:"deu",el:"ell",
gn:"grn",gu:"guj",ht:"hat",ha:"hau",he:"heb",hz:"her",hi:"hin",ho:"hmo",hu:"hun",ia:"ina",id:"ind",ie:"ile",ga:"gle",ig:"ibo",ik:"ipk",io:"ido",is:"isl",it:"ita",iu:"iku",ja:"jpn",jv:"jav",kl:"kal",kn:"kan",kr:"kau",ks:"kas",kk:"kaz",km:"khm",ki:"kik",rw:"kin",ky:"kir",kv:"kom",kg:"kon",ko:"kor",ku:"kur",kj:"kua",la:"lat",lb:"ltz",lg:"lug",li:"lim",ln:"lin",lo:"lao",lt:"lit",lu:"lub",lv:"lav",gv:"glv",mk:"mkd",mg:"mlg",ms:"msa",ml:"mal",mt:"mlt",mi:"mri",mr:"mar",mh:"mah",mn:"mon",na:"nau",nv:"nav",
nb:"nob",nd:"nde",ne:"nep",ng:"ndo",nn:"nno",no:"nor",ii:"iii",nr:"nbl",oc:"oci",oj:"oji",cu:"chu",om:"orm",or:"ori",os:"oss",pa:"pan",pi:"pli",fa:"fas",pl:"pol",ps:"pus",pt:"por",qu:"que",rm:"roh",rn:"run",ro:"ron",ru:"rus",sa:"san",sc:"srd",sd:"snd",se:"sme",sm:"smo",sg:"sag",sr:"srp",gd:"gla",sn:"sna",si:"sin",sk:"slk",sl:"slv",so:"som",st:"sot",az:"azb",es:"spa",su:"sun",sw:"swa",ss:"ssw",sv:"swe",ta:"tam",te:"tel",tg:"tgk",th:"tha",ti:"tir",bo:"bod",tk:"tuk",tl:"tgl",tn:"tsn",to:"ton",tr:"tur",
ts:"tso",tt:"tat",tw:"twi",ty:"tah",ug:"uig",uk:"ukr",ur:"urd",uz:"uzb",ve:"ven",vi:"vie",vo:"vol",wa:"wln",cy:"cym",wo:"wol",fy:"fry",xh:"xho",yi:"yid",yo:"yor",za:"zha",zu:"zul"};ilib.Locale._notLower=function $ilib$Locale$_notLower$($ch_str$$){$ch_str$$=$ch_str$$.charCodeAt(0);return $ch_str$$<97||$ch_str$$>122};ilib.Locale._notUpper=function $ilib$Locale$_notUpper$($ch$$1_str$$){$ch$$1_str$$=$ch$$1_str$$.charCodeAt(0);return $ch$$1_str$$<65||$ch$$1_str$$>90};
ilib.Locale._notDigit=function $ilib$Locale$_notDigit$($ch$$2_str$$){$ch$$2_str$$=$ch$$2_str$$.charCodeAt(0);return $ch$$2_str$$<48||$ch$$2_str$$>57};ilib.Locale._isLanguageCode=function $ilib$Locale$_isLanguageCode$($str$$){if(typeof $str$$==="undefined"||$str$$.length<2||$str$$.length>3)return false;for(var $i$$=0;$i$$<$str$$.length;$i$$++)if(ilib.Locale._notLower($str$$.charAt($i$$)))return false;return true};
ilib.Locale._isRegionCode=function $ilib$Locale$_isRegionCode$($str$$){if(typeof $str$$==="undefined"||$str$$.length<2||$str$$.length>3)return false;if($str$$.length===2)for(var $i$$=0;$i$$<$str$$.length;$i$$++){if(ilib.Locale._notUpper($str$$.charAt($i$$)))return false}else for($i$$=0;$i$$<$str$$.length;$i$$++)if(ilib.Locale._notDigit($str$$.charAt($i$$)))return false;return true};
ilib.Locale._isScriptCode=function $ilib$Locale$_isScriptCode$($str$$){if(typeof $str$$==="undefined"||$str$$.length!==4||ilib.Locale._notUpper($str$$.charAt(0)))return false;for(var $i$$=1;$i$$<4;$i$$++)if(ilib.Locale._notLower($str$$.charAt($i$$)))return false;return true};ilib.Locale.regionAlpha2ToAlpha3=function $ilib$Locale$regionAlpha2ToAlpha3$($alpha2$$){return ilib.Locale.a2toa3regmap[$alpha2$$]||$alpha2$$};
ilib.Locale.languageAlpha1ToAlpha3=function $ilib$Locale$languageAlpha1ToAlpha3$($alpha1$$){return ilib.Locale.a1toa3langmap[$alpha1$$]||$alpha1$$};
ilib.Locale.prototype={_genSpec:function $ilib$Locale$$_genSpec$(){this.spec=this.language||"";if(this.script){if(this.spec.length>0)this.spec=this.spec+"-";this.spec=this.spec+this.script}if(this.region){if(this.spec.length>0)this.spec=this.spec+"-";this.spec=this.spec+this.region}if(this.variant){if(this.spec.length>0)this.spec=this.spec+"-";this.spec=this.spec+this.variant}},getLanguage:function $ilib$Locale$$getLanguage$(){return this.language},getLanguageAlpha3:function $ilib$Locale$$getLanguageAlpha3$(){return ilib.Locale.languageAlpha1ToAlpha3(this.language)},
getRegion:function $ilib$Locale$$getRegion$(){return this.region},getRegionAlpha3:function $ilib$Locale$$getRegionAlpha3$(){return ilib.Locale.regionAlpha2ToAlpha3(this.region)},getScript:function $ilib$Locale$$getScript$(){return this.script},getVariant:function $ilib$Locale$$getVariant$(){return this.variant},getSpec:function $ilib$Locale$$getSpec$(){return this.spec},toString:function $ilib$Locale$$toString$(){return this.getSpec()},equals:function $ilib$Locale$$equals$($other$$){return this.language===
$other$$.language&&this.region===$other$$.region&&this.script===$other$$.script&&this.variant===$other$$.variant},isPseudo:function $ilib$Locale$$isPseudo$(){return ilib.pseudoLocales.indexOf(this.language+"-"+this.region)>-1}};ilib.Locale.locales="en-AU en-CA en-GB en-IN en-NG en-PH en-PK en-US en-ZA de-DE fr-CA fr-FR es-AR es-ES es-MX id-ID it-IT ja-JP ko-KR pt-BR ru-RU tr-TR vi-VN zxx-XX zh-CN zh-HK zh-TW zh-SG".split(" ");ilib.Locale.getAvailableLocales=function $ilib$Locale$getAvailableLocales$(){return ilib.Locale.locales};
ilib.data.localeinfo={calendar:"gregorian",clock:"24",currency:"USD",delimiter:{quotationStart:"\u201c",quotationEnd:"\u201d",alternateQuotationStart:"\u2018",alternateQuotationEnd:"\u2019"},firstDayOfWeek:1,numfmt:{script:"Latn",decimalChar:",",groupChar:".",prigroupSize:3,pctFmt:"{n}%",pctChar:"%",roundingMode:"halfdown",exponential:"e",currencyFormats:{common:"{s}{n}",commonNegative:"{s}-{n}"}},timezone:"Etc/UTC",units:"metric",weekendEnd:0,weekendStart:6};
ilib.data.localeinfo_en={clock:"12","language.name":"English",numfmt:{decimalChar:".",groupChar:",",currencyFormats:{commonNegative:"({s}{n})"}},scripts:["Latn","Dsrt","Shaw"],locale:"en"};ilib.data.localeinfo_AU={currency:"AUD",firstDayOfWeek:0,"region.name":"Australia",timezone:"Australia/Sydney",locale:"AU"};ilib.data.localeinfo_CA={currency:"CAD",firstDayOfWeek:0,paperSizes:{regular:"8x11"},"region.name":"Canada",timezone:"America/Toronto",locale:"CA"};ilib.data.localeinfo_en_GB={clock:"24",locale:"en-GB"};
ilib.data.localeinfo_GB={currency:"GBP",firstDayOfWeek:1,paperSizes:{regular:"A4",photo:"24x16"},"region.name":"United Kingdom",timezone:"Europe/London",units:"imperial",locale:"GB"};ilib.data.localeinfo_en_IN={numfmt:{secgroupSize:2,currencyFormats:{common:"{s}\u00a0{n}"}},locale:"en-IN"};ilib.data.localeinfo_IN={currency:"INR",firstDayOfWeek:0,"region.name":"India",timezone:"Asia/Kolkata",weekendStart:0,locale:"IN"};
ilib.data.localeinfo_NG={currency:"NGN","region.name":"Nigeria",timezone:"Africa/Lagos",locale:"NG"};ilib.data.localeinfo_PH={currency:"PHP",firstDayOfWeek:0,paperSizes:{regular:"8x11"},"region.name":"Philippines",timezone:"Asia/Manila",locale:"PH"};ilib.data.localeinfo_PK={currency:"PKR",firstDayOfWeek:0,"region.name":"Pakistan",timezone:"Asia/Karachi",locale:"PK"};
ilib.data.localeinfo_US={currency:"USD",firstDayOfWeek:0,paperSizes:{regular:"8x11"},"region.name":"United States",timezone:"America/New_York",units:"uscustomary",locale:"US"};ilib.data.localeinfo_en_ZA={numfmt:{decimalChar:",",groupChar:"\u00a0"},locale:"en-ZA"};ilib.data.localeinfo_ZA={currency:"ZAR",firstDayOfWeek:0,"region.name":"South Africa",timezone:"Africa/Johannesburg",locale:"ZA"};
ilib.data.localeinfo_de={delimiter:{quotationStart:"\u201e",quotationEnd:"\u201c",alternateQuotationStart:"\u201a",alternateQuotationEnd:"\u2018"},"language.name":"German",numfmt:{exponential:"E",currencyFormats:{common:"{n}\u00a0{s}"},pctFmt:"{n}\u00a0%"},paperSizes:{regular:"A4",photo:"4x6"},scripts:["Latn","Runr"],locale:"de"};ilib.data.localeinfo_DE={currency:"EUR",firstDayOfWeek:1,"region.name":"Germany",timezone:"Europe/Berlin",locale:"DE"};
ilib.data.localeinfo_fr={delimiter:{quotationStart:"\u00ab",quotationEnd:"\u00bb",alternateQuotationStart:"\u00ab",alternateQuotationEnd:"\u00bb"},"language.name":"French",numfmt:{groupChar:"\u00a0",exponential:"E",currencyFormats:{common:"{n}\u00a0{s}",commonNegative:"({n}\u00a0{s})"},pctFmt:"{n}\u00a0%"},paperSizes:{regular:"A4",photo:"4x6"},scripts:["Latn"],locale:"fr"};
ilib.data.localeinfo_fr_CA={delimiter:{alternateQuotationStart:"\u2039",alternateQuotationEnd:"\u203a"},paperSizes:{regular:"8x11",photo:"3x5"},locale:"fr-CA"};ilib.data.localeinfo_FR={currency:"EUR",firstDayOfWeek:1,"region.name":"France",timezone:"Europe/Paris",locale:"FR"};
ilib.data.localeinfo_es={delimiter:{alternateQuotationStart:"\u00ab",alternateQuotationEnd:"\u00bb"},"language.name":"Spanish",numfmt:{exponential:"E",currencyFormats:{common:"{n}\u00a0{s}"}},paperSizes:{regular:"A4",photo:"4x6"},scripts:["Latn"],locale:"es"};ilib.data.localeinfo_es_AR={numfmt:{currencyFormats:{common:"{s}{n}"}},locale:"es-AR"};ilib.data.localeinfo_AR={currency:"ARS",firstDayOfWeek:0,"region.name":"Argentina",timezone:"America/Argentina/Buenos_Aires",locale:"AR"};
ilib.data.localeinfo_ES={currency:"EUR",firstDayOfWeek:1,"region.name":"Spain",timezone:"Europe/Madrid",locale:"ES"};ilib.data.localeinfo_es_MX={numfmt:{decimalChar:".",groupChar:",",currencyFormats:{common:"{s}{n}"}},locale:"es-MX"};ilib.data.localeinfo_MX={currency:"MXN",firstDayOfWeek:0,paperSizes:{regular:"8x11"},"region.name":"Mexico",timezone:"America/Mexico_City",locale:"MX"};ilib.data.localeinfo_id={"language.name":"Indonesian",numfmt:{exponential:"E"},scripts:["Latn","Arab"],locale:"id"};
ilib.data.localeinfo_ID={currency:"IDR",firstDayOfWeek:0,"region.name":"Indonesia",timezone:"Asia/Jakarta",locale:"ID"};ilib.data.localeinfo_it={delimiter:{quotationStart:"\u00ab",quotationEnd:"\u00bb",alternateQuotationStart:"\u201c",alternateQuotationEnd:"\u201d"},"language.name":"Italian",numfmt:{exponential:"E",currencyFormats:{common:"{s}\u00a0{n}"}},paperSizes:{regular:"A4",photo:"4x6"},scripts:["Latn"],locale:"it"};
ilib.data.localeinfo_IT={currency:"EUR",firstDayOfWeek:1,"region.name":"Italy",timezone:"Europe/Rome",locale:"IT"};ilib.data.localeinfo_ja={delimiter:{quotationStart:"\u300c",quotationEnd:"\u300d",alternateQuotationStart:"\u300e",alternateQuotationEnd:"\u300f"},"language.name":"Japanese",numfmt:{decimalChar:".",groupChar:",",exponential:"E"},paperSizes:{regular:"A4",photo:"L"},scripts:["Jpan"],locale:"ja"};
ilib.data.localeinfo_JP={currency:"JPY",firstDayOfWeek:0,"region.name":"Japan",timezone:"Asia/Tokyo",locale:"JP"};ilib.data.localeinfo_ko={clock:"12","language.name":"Korean",numfmt:{decimalChar:".",groupChar:",",exponential:"E",currencyFormats:{commonNegative:"({s}{n})"}},paperSizes:{regular:"A4",photo:"3R"},scripts:["Kore"],locale:"ko"};ilib.data.localeinfo_KR={currency:"KRW",firstDayOfWeek:0,"region.name":"South Korea",timezone:"Asia/Seoul",locale:"KR"};
ilib.data.localeinfo_pt={"language.name":"Portuguese",numfmt:{exponential:"E",currencyFormats:{commonNegative:"({s}{n})"}},scripts:["Latn"],locale:"pt"};ilib.data.localeinfo_BR={currency:"BRL",firstDayOfWeek:0,"region.name":"Brazil",timezone:"America/Sao_Paulo",locale:"BR"};
ilib.data.localeinfo_ru={delimiter:{quotationStart:"\u00ab",quotationEnd:"\u00bb",alternateQuotationStart:"\u201e",alternateQuotationEnd:"\u201c"},"language.name":"Russian",numfmt:{groupChar:"\u00a0",exponential:"E",currencyFormats:{common:"{n}\u00a0{s}"},pctFmt:"{n}\u00a0%"},scripts:["Cyrl"],locale:"ru"};ilib.data.localeinfo_RU={currency:"RUB",firstDayOfWeek:1,"region.name":"Russia",timezone:"Europe/Moscow",locale:"RU"};
ilib.data.localeinfo_tr={"language.name":"Turkish",numfmt:{exponential:"E",currencyFormats:{common:"{n}\u00a0{s}",commonNegative:"({n}\u00a0{s})"},pctFmt:"%{n}"},scripts:["Latn","Arab"],locale:"tr"};ilib.data.localeinfo_TR={currency:"TRY",firstDayOfWeek:1,"region.name":"Turkey",timezone:"Europe/Istanbul",locale:"TR"};ilib.data.localeinfo_vi={"language.name":"Vietnamese",numfmt:{exponential:"E",currencyFormats:{common:"{n}\u00a0{s}"}},scripts:["Latn","Hani"],locale:"vi"};
ilib.data.localeinfo_VN={currency:"VND",firstDayOfWeek:1,"region.name":"Vietnam",timezone:"Asia/Ho_Chi_Minh",locale:"VN"};ilib.data.localeinfo_zxx={currency:"USD","language.name":"No linguistic content",paperSizes:{regular:"8x11",photo:"3x5"},scripts:["Latn"],locale:"zxx"};ilib.data.localeinfo_XX={"region.name":"Unknown",locale:"XX"};
ilib.data.localeinfo_zh={clock:"12","language.name":"Chinese",native_numfmt:{script:"Hani",decimalChar:".",groupChar:",",pctChar:"%",exponential:"E",prigroupSize:3,currencyFormats:{common:"{s}{n}",commonNegative:"({s}{n})"},pctFmt:"{n}%",roundingMode:"halfdown",useNative:!0,digits:"\u3007\u4e00\u4e8c\u4e09\u56db\u4e94\u516d\u4e03\u516b\u4e5d"},numfmt:{decimalChar:".",groupChar:",",exponential:"E",useNative:!1,currencyFormats:{commonNegative:"({s}{n})"}},scripts:["Hans","Hant","Bopo","Phag"],locale:"zh"};
ilib.data.localeinfo_CN={currency:"CNY",firstDayOfWeek:0,"region.name":"China",timezone:"Asia/Shanghai",locale:"CN"};ilib.data.localeinfo_HK={currency:"HKD",firstDayOfWeek:0,"region.name":"Hong Kong SAR China",timezone:"Asia/Hong_Kong",locale:"HK"};ilib.data.localeinfo_TW={currency:"TWD",firstDayOfWeek:0,"region.name":"Taiwan",timezone:"Asia/Taipei",locale:"TW"};ilib.data.localeinfo_SG={currency:"SGD",firstDayOfWeek:0,"region.name":"Singapore",timezone:"Asia/Singapore",locale:"SG"};
ilib.LocaleInfo=function $ilib$LocaleInfo$($locale$$,$options$$){var $sync$$=true,$loadParams$$=void 0;this.info=ilib.LocaleInfo.defaultInfo;switch(typeof $locale$$){case "string":this.locale=new ilib.Locale($locale$$);break;default:case "undefined":this.locale=new ilib.Locale;break;case "object":this.locale=$locale$$}if($options$$){typeof $options$$.sync!=="undefined"&&($sync$$=$options$$.sync==true);if(typeof $options$$.loadParams!=="undefined")$loadParams$$=$options$$.loadParams}if(!ilib.LocaleInfo.cache)ilib.LocaleInfo.cache=
{};ilib.loadData({object:ilib.LocaleInfo,locale:this.locale,name:"localeinfo.json",sync:$sync$$,loadParams:$loadParams$$,callback:ilib.bind(this,function($info$$){if(!$info$$){var $info$$=ilib.LocaleInfo.defaultInfo,$spec$$=this.locale.getSpec().replace(/-/g,"_");ilib.LocaleInfo.cache[$spec$$]=$info$$}this.info=$info$$;if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad(this)})})};ilib.LocaleInfo.defaultInfo=ilib.data.localeinfo;
ilib.LocaleInfo.defaultInfo=ilib.LocaleInfo.defaultInfo||{scripts:["Latn"],timezone:"Etc/UTC",units:"metric",calendar:"gregorian",clock:"24",currency:"USD",firstDayOfWeek:1,meridiems:"gregorian",numfmt:{currencyFormats:{common:"{s}{n}",commonNegative:"{s}-{n}",iso:"{s}{n}",isoNegative:"{s}-{n}"},script:"Latn",decimalChar:",",groupChar:".",prigroupSize:3,secgroupSize:0,pctFmt:"{n}%",negativepctFmt:"-{n}%",pctChar:"%",roundingMode:"halfdown",exponential:"e",digits:""}};
ilib.LocaleInfo.prototype={getLanguageName:function $ilib$LocaleInfo$$getLanguageName$(){return this.info["language.name"]},getRegionName:function $ilib$LocaleInfo$$getRegionName$(){return this.info["region.name"]},getClock:function $ilib$LocaleInfo$$getClock$(){return this.info.clock},getLocale:function $ilib$LocaleInfo$$getLocale$(){return this.locale},getUnits:function $ilib$LocaleInfo$$getUnits$(){return this.info.units},getUnitFormat:function $ilib$LocaleInfo$$getUnitFormat$(){return this.info.unitfmt},
getCalendar:function $ilib$LocaleInfo$$getCalendar$(){return this.info.calendar},getFirstDayOfWeek:function $ilib$LocaleInfo$$getFirstDayOfWeek$(){return this.info.firstDayOfWeek},getWeekEndStart:function $ilib$LocaleInfo$$getWeekEndStart$(){return this.info.weekendStart},getWeekEndEnd:function $ilib$LocaleInfo$$getWeekEndEnd$(){return this.info.weekendEnd},getTimeZone:function $ilib$LocaleInfo$$getTimeZone$(){return this.info.timezone},getDecimalSeparator:function $ilib$LocaleInfo$$getDecimalSeparator$(){return this.info.numfmt.decimalChar},
getNativeDecimalSeparator:function $ilib$LocaleInfo$$getNativeDecimalSeparator$(){return this.info.native_numfmt&&this.info.native_numfmt.decimalChar||this.info.numfmt.decimalChar},getGroupingSeparator:function $ilib$LocaleInfo$$getGroupingSeparator$(){return this.info.numfmt.groupChar},getNativeGroupingSeparator:function $ilib$LocaleInfo$$getNativeGroupingSeparator$(){return this.info.native_numfmt&&this.info.native_numfmt.groupChar||this.info.numfmt.groupChar},getPrimaryGroupingDigits:function $ilib$LocaleInfo$$getPrimaryGroupingDigits$(){return typeof this.info.numfmt.prigroupSize!==
"undefined"&&this.info.numfmt.prigroupSize||0},getSecondaryGroupingDigits:function $ilib$LocaleInfo$$getSecondaryGroupingDigits$(){return this.info.numfmt.secgroupSize||0},getPercentageFormat:function $ilib$LocaleInfo$$getPercentageFormat$(){return this.info.numfmt.pctFmt},getNegativePercentageFormat:function $ilib$LocaleInfo$$getNegativePercentageFormat$(){return this.info.numfmt.negativepctFmt},getPercentageSymbol:function $ilib$LocaleInfo$$getPercentageSymbol$(){return this.info.numfmt.pctChar||
"%"},getExponential:function $ilib$LocaleInfo$$getExponential$(){return this.info.numfmt.exponential},getNativeExponential:function $ilib$LocaleInfo$$getNativeExponential$(){return this.info.native_numfmt&&this.info.native_numfmt.exponential||this.info.numfmt.exponential},getNativePercentageSymbol:function $ilib$LocaleInfo$$getNativePercentageSymbol$(){return this.info.native_numfmt&&this.info.native_numfmt.pctChar||this.info.numfmt.pctChar||"%"},getNegativeNumberFormat:function $ilib$LocaleInfo$$getNegativeNumberFormat$(){return this.info.numfmt.negativenumFmt},
getCurrencyFormats:function $ilib$LocaleInfo$$getCurrencyFormats$(){return this.info.numfmt.currencyFormats},getCurrency:function $ilib$LocaleInfo$$getCurrency$(){return this.info.currency},getDigitsStyle:function $ilib$LocaleInfo$$getDigitsStyle$(){return this.info.numfmt.useNative?"native":typeof this.info.native_numfmt!=="undefined"?"optional":"western"},getDigits:function $ilib$LocaleInfo$$getDigits$(){return this.info.numfmt.digits},getNativeDigits:function $ilib$LocaleInfo$$getNativeDigits$(){return this.info.numfmt.useNative&&
this.info.numfmt.digits||this.info.native_numfmt&&this.info.native_numfmt.digits},getRoundingMode:function $ilib$LocaleInfo$$getRoundingMode$(){return this.info.numfmt.roundingMode},getDefaultScript:function $ilib$LocaleInfo$$getDefaultScript$(){return this.info.scripts?this.info.scripts[0]:"Latn"},getScript:function $ilib$LocaleInfo$$getScript$(){return this.locale.getScript()||this.getDefaultScript()},getAllScripts:function $ilib$LocaleInfo$$getAllScripts$(){return this.info.scripts||["Latn"]},
getMeridiemsStyle:function $ilib$LocaleInfo$$getMeridiemsStyle$(){return this.info.meridiems||"gregorian"}};ilib.Date=function $ilib$Date$($options$$){if(!$options$$||typeof $options$$.noinstance==="undefined")return ilib.Date.newInstance($options$$)};
ilib.Date.newInstance=function $ilib$Date$newInstance$($options$$){var $cons_locale$$=$options$$&&$options$$.locale,$type$$=$options$$&&($options$$.type||$options$$.calendar);$cons_locale$$||($cons_locale$$=new ilib.Locale);$type$$||($type$$=(new ilib.LocaleInfo($cons_locale$$)).getCalendar());return($cons_locale$$=ilib.Date._constructors[$type$$])&&new $cons_locale$$($options$$)};
ilib.Date._dateToIlib=function $ilib$Date$_dateToIlib$($inDate$$,$timezone$$){if(typeof $inDate$$==="undefined"||$inDate$$===null)return $inDate$$;if($inDate$$ instanceof ilib.Date)return $inDate$$;if($inDate$$ instanceof Date)return ilib.Date.newInstance({unixtime:$inDate$$.getTime(),timezone:$timezone$$});if($inDate$$ instanceof ilib.JulianDay)return ilib.Date.newInstance({jd:$inDate$$,timezone:$timezone$$});if(typeof $inDate$$==="number")return ilib.Date.newInstance({unixtime:$inDate$$,timezone:$timezone$$});
if(typeof $inDate$$==="object")return ilib.Date.newInstance($inDate$$);typeof $inDate$$==="string"&&($inDate$$=new Date($inDate$$));return ilib.Date.newInstance({unixtime:$inDate$$.getTime(),timezone:$timezone$$})};ilib.Date._constructors={};
ilib.Date.prototype={getType:function $ilib$Date$$getType$(){return"ilib.Date"},getTime:function $ilib$Date$$getTime$(){return this.rd.getTime()},getTimeExtended:function $ilib$Date$$getTimeExtended$(){return this.rd.getTimeExtended()},setTime:function $ilib$Date$$setTime$($millis$$){this.rd=this.newRd({unixtime:$millis$$,cal:this.cal});this._calcDateComponents()},getDays:function $ilib$Date$$getDays$(){return this.day},getMonths:function $ilib$Date$$getMonths$(){return this.month},getYears:function $ilib$Date$$getYears$(){return this.year},
getHours:function $ilib$Date$$getHours$(){return this.hour},getMinutes:function $ilib$Date$$getMinutes$(){return this.minute},getSeconds:function $ilib$Date$$getSeconds$(){return this.second},getMilliseconds:function $ilib$Date$$getMilliseconds$(){return this.millisecond},setDays:function $ilib$Date$$setDays$($day$$){this.day=parseInt($day$$,10)||1;this.rd._setDateComponents(this)},setMonths:function $ilib$Date$$setMonths$($month$$){this.month=parseInt($month$$,10)||1;this.rd._setDateComponents(this)},
setYears:function $ilib$Date$$setYears$($year$$){this.year=parseInt($year$$,10)||0;this.rd._setDateComponents(this)},setHours:function $ilib$Date$$setHours$($hour$$){this.hour=parseInt($hour$$,10)||0;this.rd._setDateComponents(this)},setMinutes:function $ilib$Date$$setMinutes$($minute$$){this.minute=parseInt($minute$$,10)||0;this.rd._setDateComponents(this)},setSeconds:function $ilib$Date$$setSeconds$($second$$){this.second=parseInt($second$$,10)||0;this.rd._setDateComponents(this)},setMilliseconds:function $ilib$Date$$setMilliseconds$($milli$$){this.millisecond=
parseInt($milli$$,10)||0;this.rd._setDateComponents(this)},before:function $ilib$Date$$before$($dow$$){return this.cal.newDateInstance({rd:this.rd.before($dow$$,this.offset),timezone:this.timezone})},after:function $ilib$Date$$after$($dow$$){return this.cal.newDateInstance({rd:this.rd.after($dow$$,this.offset),timezone:this.timezone})},onOrBefore:function $ilib$Date$$onOrBefore$($dow$$){return this.cal.newDateInstance({rd:this.rd.onOrBefore($dow$$,this.offset),timezone:this.timezone})},onOrAfter:function $ilib$Date$$onOrAfter$($dow$$){return this.cal.newDateInstance({rd:this.rd.onOrAfter($dow$$,
this.offset),timezone:this.timezone})},getJSDate:function $ilib$Date$$getJSDate$(){var $unix$$=this.rd.getTimeExtended();return isNaN($unix$$)?void 0:new Date($unix$$)},getRataDie:function $ilib$Date$$getRataDie$(){return this.rd.getRataDie()},setRd:function $ilib$Date$$setRd$($rd$$){this.rd=this.newRd({rd:$rd$$,cal:this.cal});this._calcDateComponents()},getJulianDay:function $ilib$Date$$getJulianDay$(){return this.rd.getJulianDay()},setJulianDay:function $ilib$Date$$setJulianDay$($date$$){this.rd=
this.newRd({julianday:typeof $date$$==="object"?$date$$.getDate():$date$$,cal:this.cal});this._calcDateComponents()},getTimeZone:function $ilib$Date$$getTimeZone$(){return this.timezone||"local"},setTimeZone:function $ilib$Date$$setTimeZone$($tzName$$){if(!$tzName$$||$tzName$$==="")this.tz=this.timezone=void 0;else if(typeof $tzName$$==="string"){this.timezone=$tzName$$;this.tz=void 0;this._calcDateComponents()}},firstSunday:function $ilib$Date$$firstSunday$($year$$){return this.newRd({rd:this.newRd({year:$year$$,
month:1,day:1,hour:0,minute:0,second:0,millisecond:0,cal:this.cal}).onOrAfter(4),cal:this.cal}).before(0)},getWeekOfYear:function $ilib$Date$$getWeekOfYear$(){var $rd$$=Math.floor(this.rd.getRataDie()),$nextYear_year$$=this._calcYear($rd$$+this.offset),$yearStart$$=this.firstSunday($nextYear_year$$);if($rd$$<$yearStart$$)$yearStart$$=this.firstSunday($nextYear_year$$-1);else{$nextYear_year$$=this.firstSunday($nextYear_year$$+1);$rd$$>=$nextYear_year$$&&($yearStart$$=$nextYear_year$$)}return Math.floor(($rd$$-
$yearStart$$)/7)+1},getWeekOfMonth:function $ilib$Date$$getWeekOfMonth$($first$$1_locale$$){var $li_weekStart$$=new ilib.LocaleInfo($first$$1_locale$$),$first$$1_locale$$=this.newRd({year:this._calcYear(this.rd.getRataDie()+this.offset),month:this.getMonths(),day:1,hour:0,minute:0,second:0,millisecond:0,cal:this.cal}),$li_weekStart$$=$first$$1_locale$$.onOrAfter($li_weekStart$$.getFirstDayOfWeek());$li_weekStart$$-$first$$1_locale$$.getRataDie()>3&&($li_weekStart$$=$li_weekStart$$-7);return Math.floor((this.rd.getRataDie()-
$li_weekStart$$)/7)+1}};
ilib.bind=function $ilib$bind$($scope$$,$method$$){function $cloneArray$$($inArrayLike$$,$inOffset$$){for(var $arr$$=[],$i$$=$inOffset$$||0,$l$$=$inArrayLike$$.length;$i$$<$l$$;$i$$++)$arr$$.push($inArrayLike$$[$i$$]);return $arr$$}if($scope$$&&$method$$&&typeof $method$$==="function"){var $args$$=$cloneArray$$(arguments,2);return typeof $method$$.bind==="function"?$method$$.bind.apply($method$$,[$scope$$].concat($args$$)):function(){var $nargs$$=$cloneArray$$(arguments);return $method$$.apply($scope$$,$args$$.concat($nargs$$))}}};
ilib.merge=function $ilib$merge$($object1$$,$object2$$,$replace$$,$name1$$,$name2$$){var $prop$$=void 0,$newObj$$={};for($prop$$ in $object1$$)$prop$$&&typeof $object1$$[$prop$$]!=="undefined"&&($newObj$$[$prop$$]=$object1$$[$prop$$]);for($prop$$ in $object2$$)if($prop$$&&typeof $object2$$[$prop$$]!=="undefined")if($object1$$[$prop$$]instanceof Array&&$object2$$[$prop$$]instanceof Array)if(typeof $replace$$!=="boolean"||!$replace$$){$newObj$$[$prop$$]=[];$newObj$$[$prop$$]=$newObj$$[$prop$$].concat($object1$$[$prop$$]);
$newObj$$[$prop$$]=$newObj$$[$prop$$].concat($object2$$[$prop$$])}else $newObj$$[$prop$$]=$object2$$[$prop$$];else if(typeof $object1$$[$prop$$]==="object"&&typeof $object2$$[$prop$$]==="object")$newObj$$[$prop$$]=ilib.merge($object1$$[$prop$$],$object2$$[$prop$$],$replace$$);else{$name1$$&&($name2$$&&$newObj$$[$prop$$]==$object2$$[$prop$$])&&console.log("Property "+$prop$$+" in "+$name1$$+" is being overridden by the same value in "+$name2$$);$newObj$$[$prop$$]=$object2$$[$prop$$]}return $newObj$$};
ilib.mergeLocData=function $ilib$mergeLocData$($prefix$$,$loc_locale$$,$replaceArrays$$,$returnOne$$){var $data$$=void 0,$loc_locale$$=$loc_locale$$||new ilib.Locale,$foundLocaleData$$=false,$property$$=$prefix$$,$mostSpecific$$;$mostSpecific$$=$data$$=ilib.data[$prefix$$]||{};if($loc_locale$$.getLanguage()){$property$$=$prefix$$+"_"+$loc_locale$$.getLanguage();if(ilib.data[$property$$]){$foundLocaleData$$=true;$data$$=ilib.merge($data$$,ilib.data[$property$$],$replaceArrays$$);$mostSpecific$$=ilib.data[$property$$]}}if($loc_locale$$.getRegion()){$property$$=
$prefix$$+"_"+$loc_locale$$.getRegion();if(ilib.data[$property$$]){$foundLocaleData$$=true;$data$$=ilib.merge($data$$,ilib.data[$property$$],$replaceArrays$$);$mostSpecific$$=ilib.data[$property$$]}}if($loc_locale$$.getLanguage()){$loc_locale$$.getLanguage();if($loc_locale$$.getScript()){$property$$=$prefix$$+"_"+$loc_locale$$.getLanguage()+"_"+$loc_locale$$.getScript();if(ilib.data[$property$$]){$foundLocaleData$$=true;$data$$=ilib.merge($data$$,ilib.data[$property$$],$replaceArrays$$);$mostSpecific$$=
ilib.data[$property$$]}}if($loc_locale$$.getRegion()){$property$$=$prefix$$+"_"+$loc_locale$$.getLanguage()+"_"+$loc_locale$$.getRegion();if(ilib.data[$property$$]){$foundLocaleData$$=true;$data$$=ilib.merge($data$$,ilib.data[$property$$],$replaceArrays$$);$mostSpecific$$=ilib.data[$property$$]}}}if($loc_locale$$.getRegion()&&$loc_locale$$.getVariant()){$property$$=$prefix$$+"_"+$loc_locale$$.getLanguage()+"_"+$loc_locale$$.getVariant();if(ilib.data[$property$$]){$foundLocaleData$$=true;$data$$=ilib.merge($data$$,
ilib.data[$property$$],$replaceArrays$$);$mostSpecific$$=ilib.data[$property$$]}}if($loc_locale$$.getLanguage()&&$loc_locale$$.getScript()&&$loc_locale$$.getRegion()){$property$$=$prefix$$+"_"+$loc_locale$$.getLanguage()+"_"+$loc_locale$$.getScript()+"_"+$loc_locale$$.getRegion();if(ilib.data[$property$$]){$foundLocaleData$$=true;$data$$=ilib.merge($data$$,ilib.data[$property$$],$replaceArrays$$);$mostSpecific$$=ilib.data[$property$$]}}if($loc_locale$$.getLanguage()&&$loc_locale$$.getRegion()&&$loc_locale$$.getVariant()){$property$$=
$prefix$$+"_"+$loc_locale$$.getLanguage()+"_"+$loc_locale$$.getRegion()+"_"+$loc_locale$$.getVariant();if(ilib.data[$property$$]){$foundLocaleData$$=true;$data$$=ilib.merge($data$$,ilib.data[$property$$],$replaceArrays$$);$mostSpecific$$=ilib.data[$property$$]}}if($loc_locale$$.getLanguage()&&$loc_locale$$.getScript()&&$loc_locale$$.getRegion()&&$loc_locale$$.getVariant()){$property$$=$prefix$$+"_"+$loc_locale$$.getLanguage()+"_"+$loc_locale$$.getScript()+"_"+$loc_locale$$.getRegion()+"_"+$loc_locale$$.getVariant();
if(ilib.data[$property$$]){$foundLocaleData$$=true;$data$$=ilib.merge($data$$,ilib.data[$property$$],$replaceArrays$$);$mostSpecific$$=ilib.data[$property$$]}}return $foundLocaleData$$?$returnOne$$?$mostSpecific$$:$data$$:void 0};
ilib.getLocFiles=function $ilib$getLocFiles$($locale$$,$name$$){var $files$$=[],$filename$$=$name$$||"resources.json",$loc$$1_variant$$=$locale$$||new ilib.Locale,$language$$=$loc$$1_variant$$.getLanguage(),$region$$=$loc$$1_variant$$.getRegion(),$script$$=$loc$$1_variant$$.getScript(),$loc$$1_variant$$=$loc$$1_variant$$.getVariant();$files$$.push($filename$$);$language$$&&$files$$.push($language$$+"/"+$filename$$);$region$$&&$files$$.push("und/"+$region$$+"/"+$filename$$);if($language$$){$script$$&&
$files$$.push($language$$+"/"+$script$$+"/"+$filename$$);$region$$&&$files$$.push($language$$+"/"+$region$$+"/"+$filename$$)}$region$$&&$loc$$1_variant$$&&$files$$.push("und/"+$region$$+"/"+$loc$$1_variant$$+"/"+$filename$$);$language$$&&($script$$&&$region$$)&&$files$$.push($language$$+"/"+$script$$+"/"+$region$$+"/"+$filename$$);$language$$&&($region$$&&$loc$$1_variant$$)&&$files$$.push($language$$+"/"+$region$$+"/"+$loc$$1_variant$$+"/"+$filename$$);$language$$&&($script$$&&$region$$&&$loc$$1_variant$$)&&
$files$$.push($language$$+"/"+$script$$+"/"+$region$$+"/"+$loc$$1_variant$$+"/"+$filename$$);return $files$$};ilib.isEmpty=function $ilib$isEmpty$($obj$$){var $prop$$=void 0;if(!$obj$$)return true;for($prop$$ in $obj$$)if($prop$$&&typeof $obj$$[$prop$$]!=="undefined")return false;return true};
ilib.hashCode=function $ilib$hashCode$($obj$$){function $addHash$$($hash$$,$newValue$$){return($hash$$*65543+$newValue$$)%2147483647}function $stringHash$$($str$$){for(var $hash$$=0,$i$$=0;$i$$<$str$$.length;$i$$++)$hash$$=$addHash$$($hash$$,$str$$.charCodeAt($i$$));return $hash$$}var $hash$$=0;switch(typeof $obj$$){case "undefined":$hash$$=0;break;case "string":$hash$$=$stringHash$$($obj$$);break;case "function":case "number":case "xml":$hash$$=$stringHash$$(""+$obj$$);break;case "boolean":$hash$$=
$obj$$?1:0;break;case "object":var $props$$=[],$i$$0$$;for($i$$0$$ in $obj$$)$obj$$.hasOwnProperty($i$$0$$)&&$props$$.push($i$$0$$);$props$$.sort();for($i$$0$$=0;$i$$0$$<$props$$.length;$i$$0$$++){$hash$$=$addHash$$($hash$$,$stringHash$$($props$$[$i$$0$$]));$hash$$=$addHash$$($hash$$,ilib.hashCode($obj$$[$props$$[$i$$0$$]]))}}return $hash$$};
ilib._callLoadData=function $ilib$_callLoadData$($files$$,$sync$$,$params$$,$callback$$){if(typeof ilib._load==="function")return ilib._load($files$$,$sync$$,$params$$,$callback$$);if(typeof ilib._load==="object"&&ilib._load instanceof ilib.Loader)return ilib._load.loadFiles($files$$,$sync$$,$params$$,$callback$$)};
ilib.loadData=function $ilib$loadData$($dot_params$$2_returnOne$$){var $files$$2_name$$="resources.json",$object$$=void 0,$locale$$=new ilib.Locale(ilib.getLocale()),$sync$$=false,$type$$=void 0,$loadParams$$={},$callback$$=void 0,$nonlocale$$=false,$replace$$=false,$basename$$;if($dot_params$$2_returnOne$$&&typeof $dot_params$$2_returnOne$$.callback==="function"){if($dot_params$$2_returnOne$$.name)$files$$2_name$$=$dot_params$$2_returnOne$$.name;if($dot_params$$2_returnOne$$.object)$object$$=$dot_params$$2_returnOne$$.object;
$dot_params$$2_returnOne$$.locale&&($locale$$=typeof $dot_params$$2_returnOne$$.locale==="string"?new ilib.Locale($dot_params$$2_returnOne$$.locale):$dot_params$$2_returnOne$$.locale);if($dot_params$$2_returnOne$$.type)$type$$=$dot_params$$2_returnOne$$.type;if($dot_params$$2_returnOne$$.loadParams)$loadParams$$=$dot_params$$2_returnOne$$.loadParams;if($dot_params$$2_returnOne$$.sync)$sync$$=$dot_params$$2_returnOne$$.sync;$dot_params$$2_returnOne$$.nonlocale&&($nonlocale$$=!!$dot_params$$2_returnOne$$.nonlocale);
if(typeof $dot_params$$2_returnOne$$.replace==="boolean")$replace$$=$dot_params$$2_returnOne$$.replace;$callback$$=$dot_params$$2_returnOne$$.callback;if($object$$&&!$object$$.cache)$object$$.cache={};if(!$type$$){$dot_params$$2_returnOne$$=$files$$2_name$$.lastIndexOf(".");$type$$=$dot_params$$2_returnOne$$!==-1?$files$$2_name$$.substring($dot_params$$2_returnOne$$+1):"text"}var $spec$$=(!$nonlocale$$&&$locale$$.getSpec().replace(/-/g,"_")||"root")+","+$files$$2_name$$+","+(""+ilib.hashCode($loadParams$$));
if(!$object$$||typeof $object$$.cache[$spec$$]==="undefined"){var $data$$,$dot_params$$2_returnOne$$=$loadParams$$&&$loadParams$$.returnOne;if($type$$==="json"){$basename$$=$files$$2_name$$.substring(0,$files$$2_name$$.lastIndexOf("."));if($nonlocale$$){$basename$$=$basename$$.replace(/\//g,".").replace(/[\\\+\-]/g,"_");$data$$=ilib.data[$basename$$]}else $data$$=ilib.mergeLocData($basename$$,$locale$$,$replace$$,$dot_params$$2_returnOne$$);if($data$$){$object$$&&($object$$.cache[$spec$$]=$data$$);
$callback$$($data$$);return}}if(typeof ilib._load!=="undefined"){$files$$2_name$$=$nonlocale$$?[$files$$2_name$$||"resources.json"]:ilib.getLocFiles($locale$$,$files$$2_name$$);if($type$$!=="json")$loadParams$$.returnOne=true;ilib._callLoadData($files$$2_name$$,$sync$$,$loadParams$$,ilib.bind(this,function($arr$$){if($type$$==="json"){$data$$=ilib.data[$basename$$]||{};for(var $i$$=0;$i$$<$arr$$.length;$i$$++)typeof $arr$$[$i$$]!=="undefined"&&($data$$=$loadParams$$.returnOne?$arr$$[$i$$]:ilib.merge($data$$,
$arr$$[$i$$],$replace$$));$object$$&&($object$$.cache[$spec$$]=$data$$);$callback$$($data$$)}else{for($i$$=$arr$$.length-1;$i$$>-1&&!$arr$$[$i$$];)$i$$--;if($i$$>-1){$object$$&&($object$$.cache[$spec$$]=$arr$$[$i$$]);$callback$$($arr$$[$i$$])}else $callback$$(void 0)}}))}else{$type$$==="json"&&($data$$=ilib.data[$basename$$]);$object$$&&$data$$&&($object$$.cache[$spec$$]=$data$$);$callback$$($data$$)}}else $callback$$($object$$.cache[$spec$$])}};
ilib.signum=function $ilib$signum$($num$$){var $n$$=$num$$;if(typeof $num$$==="string")$n$$=parseInt($num$$,10);else if(typeof $num$$!=="number")return 1;return $n$$<0?-1:1};
ilib._roundFnc={floor:function $ilib$_roundFnc$floor$($num$$){return Math.floor($num$$)},ceiling:function $ilib$_roundFnc$ceiling$($num$$){return Math.ceil($num$$)},down:function $ilib$_roundFnc$down$($num$$){return $num$$<0?Math.ceil($num$$):Math.floor($num$$)},up:function $ilib$_roundFnc$up$($num$$){return $num$$<0?Math.floor($num$$):Math.ceil($num$$)},halfup:function $ilib$_roundFnc$halfup$($num$$){return $num$$<0?Math.ceil($num$$-0.5):Math.floor($num$$+0.5)},halfdown:function $ilib$_roundFnc$halfdown$($num$$){return $num$$<
0?Math.floor($num$$+0.5):Math.ceil($num$$-0.5)},halfeven:function $ilib$_roundFnc$halfeven$($num$$){return Math.floor($num$$)%2===0?Math.ceil($num$$-0.5):Math.floor($num$$+0.5)},halfodd:function $ilib$_roundFnc$halfodd$($num$$){return Math.floor($num$$)%2!==0?Math.ceil($num$$-0.5):Math.floor($num$$+0.5)}};ilib.mod=function $ilib$mod$($dividend$$,$modulus$$){if($modulus$$==0)return 0;var $x$$=$dividend$$%$modulus$$;return $x$$<0?$x$$+$modulus$$:$x$$};
ilib.amod=function $ilib$amod$($dividend$$,$modulus$$){if($modulus$$==0)return 0;var $x$$=$dividend$$%$modulus$$;return $x$$<=0?$x$$+$modulus$$:$x$$};ilib.data.plurals_en={one:{is:["n",1]}};ilib.data.plurals_de={one:{is:["n",1]}};ilib.data.plurals_fr={one:{and:[{within:["n",[[0,2]]]},{isnot:["n",2]}]}};ilib.data.plurals_es={one:{is:["n",1]}};ilib.data.plurals_it={one:{is:["n",1]}};ilib.data.plurals_pt={one:{is:["n",1]}};
ilib.data.plurals_ru={few:{and:[{inrange:[{mod:["n",10]},[[2,4]]]},{notin:[{mod:["n",100]},[[12,14]]]}]},many:{or:[{or:[{is:[{mod:["n",10]},0]},{inrange:[{mod:["n",10]},[[5,9]]]}]},{inrange:[{mod:["n",100]},[[11,14]]]}]},one:{and:[{is:[{mod:["n",10]},1]},{isnot:[{mod:["n",100]},11]}]}};
ilib.String=function $ilib$String$($string$$){this.str=typeof $string$$==="object"?$string$$ instanceof ilib.String?$string$$.str:$string$$.toString():typeof $string$$==="string"?new String($string$$):"";this.length=this.str.length;this.cpLength=-1;this.localeSpec=ilib.getLocale()};ilib.String._isSurrogate=function $ilib$String$_isSurrogate$($ch$$3_n$$){$ch$$3_n$$=$ch$$3_n$$.charCodeAt(0);return $ch$$3_n$$>=56320&&$ch$$3_n$$<=57343||$ch$$3_n$$>=55296&&$ch$$3_n$$<=56319};
ilib.String.fromCodePoint=function $ilib$String$fromCodePoint$($codepoint$$){if($codepoint$$<65536)return String.fromCharCode($codepoint$$);var $low$$=$codepoint$$&65535;return String.fromCharCode(55296|(Math.floor($codepoint$$/65536)-1&15)<<6|($low$$&64512)>>10)+String.fromCharCode(56320|$low$$&1023)};
ilib.String.toCodePoint=function $ilib$String$toCodePoint$($str$$,$index$$){if(!$str$$||$str$$.length===0)return-1;var $code$$=-1,$high$$=$str$$.charCodeAt($index$$);if($high$$>=55296&&$high$$<=56319){if($str$$.length>$index$$+1){var $low$$=$str$$.charCodeAt($index$$+1);$low$$>=56320&&$low$$<=57343&&($code$$=(($high$$&960)>>6)+1<<16|($high$$&63)<<10|$low$$&1023)}}else $code$$=$high$$;return $code$$};
ilib.String.loadPlurals=function $ilib$String$loadPlurals$($sync$$,$loc$$2_locale$$,$loadParams$$,$onLoad$$){var $loc$$2_locale$$=$loc$$2_locale$$?typeof $loc$$2_locale$$==="string"?new ilib.Locale($loc$$2_locale$$):$loc$$2_locale$$:new ilib.Locale(ilib.getLocale()),$spec$$=$loc$$2_locale$$.getLanguage();ilib.data["plurals_"+$spec$$]?$onLoad$$&&typeof $onLoad$$==="function"&&$onLoad$$(ilib.data["plurals_"+$spec$$]):ilib.loadData({name:"plurals.json",object:ilib.String,locale:$loc$$2_locale$$,sync:$sync$$,
loadParams:$loadParams$$,callback:ilib.bind(this,function($plurals$$){$plurals$$||(ilib.String.cache[$spec$$]={});ilib.data["plurals_"+$spec$$]=$plurals$$||{};$onLoad$$&&typeof $onLoad$$==="function"&&$onLoad$$(ilib.data["plurals_"+$spec$$])})})};
ilib.String._fncs={firstProp:function $ilib$String$_fncs$firstProp$($obj$$){for(var $p$$ in $obj$$)if($p$$&&$obj$$[$p$$])return $p$$},getValue:function $ilib$String$_fncs$getValue$($obj$$,$n$$){if(typeof $obj$$==="object"){var $subrule$$=ilib.String._fncs.firstProp($obj$$);return ilib.String._fncs[$subrule$$]($obj$$[$subrule$$],$n$$)}return typeof $obj$$==="string"?$n$$:$obj$$},matchRangeContinuous:function $ilib$String$_fncs$matchRangeContinuous$($n$$,$range$$){for(var $num$$ in $range$$)if(typeof $num$$!==
"undefined"&&typeof $range$$[$num$$]!=="undefined"){var $obj$$=$range$$[$num$$];if(typeof $obj$$==="number"){if($n$$===$range$$[$num$$])return true}else if(Object.prototype.toString.call($obj$$)==="[object Array]"&&$n$$>=$obj$$[0]&&$n$$<=$obj$$[1])return true}return false},matchRange:function $ilib$String$_fncs$matchRange$($n$$,$range$$){return Math.floor($n$$)!==$n$$?false:ilib.String._fncs.matchRangeContinuous($n$$,$range$$)},is:function $ilib$String$_fncs$is$($rule$$,$n$$){var $left$$=ilib.String._fncs.getValue($rule$$[0],
$n$$),$right$$=ilib.String._fncs.getValue($rule$$[1],$n$$);return $left$$==$right$$},isnot:function $ilib$String$_fncs$isnot$($rule$$,$n$$){return ilib.String._fncs.getValue($rule$$[0],$n$$)!=ilib.String._fncs.getValue($rule$$[1],$n$$)},inrange:function $ilib$String$_fncs$inrange$($rule$$,$n$$){return ilib.String._fncs.matchRange(ilib.String._fncs.getValue($rule$$[0],$n$$),$rule$$[1])},notin:function $ilib$String$_fncs$notin$($rule$$,$n$$){return!ilib.String._fncs.matchRange(ilib.String._fncs.getValue($rule$$[0],
$n$$),$rule$$[1])},within:function $ilib$String$_fncs$within$($rule$$,$n$$){return ilib.String._fncs.matchRangeContinuous(ilib.String._fncs.getValue($rule$$[0],$n$$),$rule$$[1])},mod:function $ilib$String$_fncs$mod$($rule$$,$n$$){return ilib.mod(ilib.String._fncs.getValue($rule$$[0],$n$$),ilib.String._fncs.getValue($rule$$[1],$n$$))},n:function $ilib$String$_fncs$n$($rule$$,$n$$){return $n$$},or:function $ilib$String$_fncs$or$($rule$$,$n$$){return ilib.String._fncs.getValue($rule$$[0],$n$$)||ilib.String._fncs.getValue($rule$$[1],
$n$$)},and:function $ilib$String$_fncs$and$($rule$$,$n$$){return ilib.String._fncs.getValue($rule$$[0],$n$$)&&ilib.String._fncs.getValue($rule$$[1],$n$$)}};
ilib.String.prototype={_length:function $ilib$String$$_length$(){return this.str.length},format:function $ilib$String$$format$($params$$){var $formatted$$=this.str;if($params$$){var $regex$$,$p$$;for($p$$ in $params$$)if(typeof $params$$[$p$$]!=="undefined"){$regex$$=RegExp("{"+$p$$+"}","g");$formatted$$=$formatted$$.replace($regex$$,$params$$[$p$$])}}return $formatted$$.toString()},formatChoice:function $ilib$String$$formatChoice$($argIndex$$,$params$$){var $arg$$=this.str.split("|"),$type$$=typeof $argIndex$$,
$limits$$=[],$strings$$=[],$i$$,$limit_parts$$1_ruleset_start$$,$result$$=void 0,$defaultCase$$="";if(this.str.length===0)return"";for($i$$=0;$i$$<$arg$$.length;$i$$++){$limit_parts$$1_ruleset_start$$=$arg$$[$i$$].split("#");if($limit_parts$$1_ruleset_start$$.length>2){$limits$$[$i$$]=$limit_parts$$1_ruleset_start$$[0];$limit_parts$$1_ruleset_start$$=$limit_parts$$1_ruleset_start$$.shift();$strings$$[$i$$]=$limit_parts$$1_ruleset_start$$.join("#")}else if($limit_parts$$1_ruleset_start$$.length===
2){$limits$$[$i$$]=$limit_parts$$1_ruleset_start$$[0];$strings$$[$i$$]=$limit_parts$$1_ruleset_start$$[1]}else throw"syntax error in choice format pattern: "+$arg$$[$i$$];}for($i$$=0;$i$$<$limits$$.length;$i$$++)if($limits$$[$i$$].length===0)$defaultCase$$=new ilib.String($strings$$[$i$$]);else switch($type$$){case "number":$arg$$=parseInt($argIndex$$,10);if($limits$$[$i$$].substring(0,2)==="<="){$limit_parts$$1_ruleset_start$$=parseFloat($limits$$[$i$$].substring(2));if($arg$$<=$limit_parts$$1_ruleset_start$$){$result$$=
new ilib.String($strings$$[$i$$]);$i$$=$limits$$.length}}else if($limits$$[$i$$].substring(0,2)===">="){$limit_parts$$1_ruleset_start$$=parseFloat($limits$$[$i$$].substring(2));if($arg$$>=$limit_parts$$1_ruleset_start$$){$result$$=new ilib.String($strings$$[$i$$]);$i$$=$limits$$.length}}else if($limits$$[$i$$].charAt(0)==="<"){$limit_parts$$1_ruleset_start$$=parseFloat($limits$$[$i$$].substring(1));if($arg$$<$limit_parts$$1_ruleset_start$$){$result$$=new ilib.String($strings$$[$i$$]);$i$$=$limits$$.length}}else if($limits$$[$i$$].charAt(0)===
">"){$limit_parts$$1_ruleset_start$$=parseFloat($limits$$[$i$$].substring(1));if($arg$$>$limit_parts$$1_ruleset_start$$){$result$$=new ilib.String($strings$$[$i$$]);$i$$=$limits$$.length}}else{this.locale=this.locale||new ilib.Locale(this.localeSpec);switch($limits$$[$i$$]){case "zero":case "one":case "two":case "few":case "many":if(($limit_parts$$1_ruleset_start$$=ilib.data["plurals_"+this.locale.getLanguage()])&&ilib.String._fncs.getValue($limit_parts$$1_ruleset_start$$[$limits$$[$i$$]],$arg$$)){$result$$=
new ilib.String($strings$$[$i$$]);$i$$=$limits$$.length}break;default:var $dash_end$$=$limits$$[$i$$].indexOf("-");if($dash_end$$!==-1){$limit_parts$$1_ruleset_start$$=$limits$$[$i$$].substring(0,$dash_end$$);$dash_end$$=$limits$$[$i$$].substring($dash_end$$+1);if($arg$$>=parseInt($limit_parts$$1_ruleset_start$$,10)&&$arg$$<=parseInt($dash_end$$,10)){$result$$=new ilib.String($strings$$[$i$$]);$i$$=$limits$$.length}}else if($arg$$===parseInt($limits$$[$i$$],10)){$result$$=new ilib.String($strings$$[$i$$]);
$i$$=$limits$$.length}}}break;case "boolean":if($limits$$[$i$$]==="true"&&$argIndex$$===true){$result$$=new ilib.String($strings$$[$i$$]);$i$$=$limits$$.length}else if($limits$$[$i$$]==="false"&&$argIndex$$===false){$result$$=new ilib.String($strings$$[$i$$]);$i$$=$limits$$.length}break;case "string":if(RegExp($limits$$[$i$$],"i").test($argIndex$$)){$result$$=new ilib.String($strings$$[$i$$]);$i$$=$limits$$.length}break;case "object":throw"syntax error: fmtChoice parameter for the argument index cannot be an object";
}$result$$||($result$$=$defaultCase$$||new ilib.String(""));$result$$=$result$$.format($params$$);return $result$$.toString()},toString:function $ilib$String$$toString$(){return this.str.toString()},valueOf:function $ilib$String$$valueOf$(){return this.str.valueOf()},charAt:function $ilib$String$$charAt$($index$$){return new ilib.String(this.str.charAt($index$$))},charCodeAt:function $ilib$String$$charCodeAt$($index$$){return this.str.charCodeAt($index$$)},concat:function $ilib$String$$concat$($strings$$){return new ilib.String(this.str.concat($strings$$))},
indexOf:function $ilib$String$$indexOf$($searchValue$$,$start$$){return this.str.indexOf($searchValue$$,$start$$)},lastIndexOf:function $ilib$String$$lastIndexOf$($searchValue$$,$start$$){return this.str.lastIndexOf($searchValue$$,$start$$)},match:function $ilib$String$$match$($regexp$$){return this.str.match($regexp$$)},replace:function $ilib$String$$replace$($searchValue$$,$newValue$$){return new ilib.String(this.str.replace($searchValue$$,$newValue$$))},search:function $ilib$String$$search$($regexp$$){return this.str.search($regexp$$)},
slice:function $ilib$String$$slice$($start$$,$end$$){return new ilib.String(this.str.slice($start$$,$end$$))},split:function $ilib$String$$split$($separator$$,$limit$$){return this.str.split($separator$$,$limit$$)},substr:function $ilib$String$$substr$($start$$,$length$$){return new ilib.String(this.str.substr($start$$,$length$$))},substring:function $ilib$String$$substring$($from$$,$to$$){return this.str.substring($from$$,$to$$)},toLowerCase:function $ilib$String$$toLowerCase$(){return this.str.toLowerCase()},
toUpperCase:function $ilib$String$$toUpperCase$(){return this.str.toUpperCase()},_toCodePoint:function $ilib$String$$_toCodePoint$($index$$){return ilib.String.toCodePoint(this.str,$index$$)},forEach:function $ilib$String$$forEach$($callback$$){if(typeof $callback$$==="function")for(var $it$$=this.charIterator();$it$$.hasNext();)$callback$$($it$$.next())},forEachCodePoint:function $ilib$String$$forEachCodePoint$($callback$$){if(typeof $callback$$==="function")for(var $it$$=this.iterator();$it$$.hasNext();)$callback$$($it$$.next())},
iterator:function $ilib$String$$iterator$(){return new function _iterator($istring$$){this.index=0;this.hasNext=function $this$hasNext$(){return this.index<$istring$$.str.length};this.next=function $this$next$(){if(this.index<$istring$$.str.length){var $num$$=$istring$$._toCodePoint(this.index);this.index=this.index+($num$$>65535?2:1)}else $num$$=-1;return $num$$}}(this)},charIterator:function $ilib$String$$charIterator$(){return new function _chiterator($istring$$){this.index=0;this.hasNext=function $this$hasNext$(){return this.index<
$istring$$.str.length};this.next=function $this$next$(){var $ch$$;if(this.index<$istring$$.str.length){$ch$$=$istring$$.str.charAt(this.index);if(ilib.String._isSurrogate($ch$$)&&this.index+1<$istring$$.str.length&&ilib.String._isSurrogate($istring$$.str.charAt(this.index+1))){this.index++;$ch$$=$ch$$+$istring$$.str.charAt(this.index)}this.index++}return $ch$$}}(this)},codePointAt:function $ilib$String$$codePointAt$($count$$6_index$$){if($count$$6_index$$<0)return-1;for(var $it$$=this.iterator(),
$ch$$;$count$$6_index$$>=0&&$it$$.hasNext();$count$$6_index$$--)$ch$$=$it$$.next();return $count$$6_index$$<0?$ch$$:-1},setLocale:function $ilib$String$$setLocale$($locale$$,$sync$$,$loadParams$$,$onLoad$$){if(typeof $locale$$==="object")this.locale=$locale$$;else{this.localeSpec=$locale$$;this.locale=new ilib.Locale($locale$$)}ilib.String.loadPlurals(typeof $sync$$!=="undefined"?$sync$$:true,this.locale,$loadParams$$,$onLoad$$)},getLocale:function $ilib$String$$getLocale$(){return(this.locale?this.locale.getSpec():
this.localeSpec)||ilib.getLocale()},codePointLength:function $ilib$String$$codePointLength$(){if(this.cpLength===-1){var $it$$=this.iterator();for(this.cpLength=0;$it$$.hasNext();){this.cpLength++;$it$$.next()}}return this.cpLength}};ilib.Cal=function $ilib$Cal$(){};
ilib.Cal.newInstance=function $ilib$Cal$newInstance$($options$$){var $cons$$1_locale$$=$options$$&&$options$$.locale,$type$$=$options$$&&$options$$.type;$cons$$1_locale$$||($cons$$1_locale$$=new ilib.Locale);$type$$||($type$$=(new ilib.LocaleInfo($cons$$1_locale$$)).getCalendar());return($cons$$1_locale$$=ilib.Cal._constructors[$type$$])&&new $cons$$1_locale$$($options$$)};ilib.Cal._constructors={};
ilib.Cal.getCalendars=function $ilib$Cal$getCalendars$(){var $arr$$=[],$c$$;for($c$$ in ilib.Cal._constructors)$c$$&&ilib.Cal._constructors[$c$$]&&$arr$$.push($c$$);return $arr$$};
ilib.Cal.prototype={getType:function $ilib$Cal$$getType$(){throw"Cannot call methods of abstract class ilib.Cal";},getNumMonths:function $ilib$Cal$$getNumMonths$(){throw"Cannot call methods of abstract class ilib.Cal";},getMonLength:function $ilib$Cal$$getMonLength$(){throw"Cannot call methods of abstract class ilib.Cal";},isLeapYear:function $ilib$Cal$$isLeapYear$(){throw"Cannot call methods of abstract class ilib.Cal";}};
ilib.JulianDay=function $ilib$JulianDay$($num$$){this.jd=$num$$;this.days=Math.floor(this.jd);this.frac=$num$$-this.days};
ilib.JulianDay.prototype={getDays:function $ilib$JulianDay$$getDays$(){return this.days},setDays:function $ilib$JulianDay$$setDays$($days$$){this.days=Math.floor($days$$);this.jd=this.days+this.frac},getDayFraction:function $ilib$JulianDay$$getDayFraction$(){return this.frac},setDayFraction:function $ilib$JulianDay$$setDayFraction$($fraction$$){this.frac=$fraction$$-Math.floor($fraction$$);this.jd=this.days+this.frac},getDate:function $ilib$JulianDay$$getDate$(){return this.jd},setDate:function $ilib$JulianDay$$setDate$($num$$){this.jd=
$num$$},addDate:function $ilib$JulianDay$$addDate$($offset$$){if(typeof $offset$$==="number"){this.jd=this.jd+$offset$$;this.days=Math.floor(this.jd);this.frac=this.jd-this.days}}};ilib.Cal.Gregorian=function $ilib$Cal$Gregorian$(){this.type="gregorian"};ilib.Cal.Gregorian.monthLengths=[31,28,31,30,31,30,31,31,30,31,30,31];ilib.Cal.Gregorian.prototype.getNumMonths=function $ilib$Cal$Gregorian$$getNumMonths$(){return 12};
ilib.Cal.Gregorian.prototype.getMonLength=function $ilib$Cal$Gregorian$$getMonLength$($month$$,$year$$){return $month$$!==2||!this.isLeapYear($year$$)?ilib.Cal.Gregorian.monthLengths[$month$$-1]:29};
ilib.Cal.Gregorian.prototype.isLeapYear=function $ilib$Cal$Gregorian$$isLeapYear$($y$$35_year$$){var $y$$35_year$$=typeof $y$$35_year$$==="number"?$y$$35_year$$:$y$$35_year$$.getYears(),$centuries$$=ilib.mod($y$$35_year$$,400);return ilib.mod($y$$35_year$$,4)===0&&$centuries$$!==100&&$centuries$$!==200&&$centuries$$!==300};ilib.Cal.Gregorian.prototype.getType=function $ilib$Cal$Gregorian$$getType$(){return this.type};ilib.Cal.Gregorian.prototype.newDateInstance=function $ilib$Cal$Gregorian$$newDateInstance$($options$$){return new ilib.Date.GregDate($options$$)};
ilib.Cal._constructors.gregorian=ilib.Cal.Gregorian;
ilib.Date.RataDie=function $ilib$Date$RataDie$($date$$2_params$$){if($date$$2_params$$)if(typeof $date$$2_params$$.date!=="undefined"){$date$$2_params$$=$date$$2_params$$.date;$date$$2_params$$ instanceof Date||($date$$2_params$$=new Date($date$$2_params$$));this._setTime($date$$2_params$$.getTime())}else if(typeof $date$$2_params$$.unixtime!=="undefined")this._setTime(parseInt($date$$2_params$$.unixtime,10));else if(typeof $date$$2_params$$.julianday!=="undefined")this._setJulianDay(parseFloat($date$$2_params$$.julianday));
else if($date$$2_params$$.year||$date$$2_params$$.month||$date$$2_params$$.day||$date$$2_params$$.hour||$date$$2_params$$.minute||$date$$2_params$$.second||$date$$2_params$$.millisecond||$date$$2_params$$.parts||$date$$2_params$$.cycle)this._setDateComponents($date$$2_params$$);else if(typeof $date$$2_params$$.rd!=="undefined")this.rd=typeof $date$$2_params$$.rd==="object"&&$date$$2_params$$.rd instanceof ilib.Date.RataDie?$date$$2_params$$.rd.rd:$date$$2_params$$.rd;typeof this.rd==="undefined"&&
this._setTime((new Date).getTime())};ilib.Date.RataDie.gregorianEpoch=1721424.5;
ilib.Date.RataDie.prototype={epoch:ilib.Date.RataDie.gregorianEpoch,_setTime:function $ilib$Date$RataDie$$_setTime$($millis$$){this._setJulianDay(2440587.5+$millis$$/864E5)},_setJulianDay:function $ilib$Date$RataDie$$_setJulianDay$($date$$){$date$$=typeof $date$$==="number"?new ilib.JulianDay($date$$):$date$$;this.rd=ilib._roundFnc.halfup(($date$$.getDate()-this.epoch)*864E5)/864E5},_onOrBefore:function $ilib$Date$RataDie$$_onOrBefore$($rd$$,$dayOfWeek$$){return $rd$$-ilib.mod(Math.floor($rd$$)-$dayOfWeek$$-
2,7)},onOrBefore:function $ilib$Date$RataDie$$onOrBefore$($dayOfWeek$$,$offset$$){$offset$$=$offset$$||0;return this._onOrBefore(this.rd+$offset$$,$dayOfWeek$$)-$offset$$},onOrAfter:function $ilib$Date$RataDie$$onOrAfter$($dayOfWeek$$,$offset$$){$offset$$=$offset$$||0;return this._onOrBefore(this.rd+6+$offset$$,$dayOfWeek$$)-$offset$$},before:function $ilib$Date$RataDie$$before$($dayOfWeek$$,$offset$$){$offset$$=$offset$$||0;return this._onOrBefore(this.rd-1+$offset$$,$dayOfWeek$$)-$offset$$},after:function $ilib$Date$RataDie$$after$($dayOfWeek$$,
$offset$$){$offset$$=$offset$$||0;return this._onOrBefore(this.rd+7+$offset$$,$dayOfWeek$$)-$offset$$},getTime:function $ilib$Date$RataDie$$getTime$(){var $jd$$=this.getJulianDay();return $jd$$<2440587.5||$jd$$>2465442.634803241?-1:Math.round(($jd$$-2440587.5)*864E5)},getTimeExtended:function $ilib$Date$RataDie$$getTimeExtended$(){var $jd$$=this.getJulianDay();return $jd$$<-9.75594125E7||$jd$$>1.024405875E8?NaN:Math.round(($jd$$-2440587.5)*864E5)},getJulianDay:function $ilib$Date$RataDie$$getJulianDay$(){return this.rd+
this.epoch},getRataDie:function $ilib$Date$RataDie$$getRataDie$(){return this.rd}};ilib.Date.GregRataDie=function $ilib$Date$GregRataDie$($params$$){this.cal=$params$$&&$params$$.cal||new ilib.Cal.Gregorian;this.rd=void 0;ilib.Date.RataDie.call(this,$params$$)};ilib.Date.GregRataDie.prototype=new ilib.Date.RataDie;ilib.Date.GregRataDie.prototype.parent=ilib.Date.RataDie;ilib.Date.GregRataDie.prototype.constructor=ilib.Date.GregRataDie;
ilib.Date.GregRataDie.cumMonthLengths=[0,31,59,90,120,151,181,212,243,273,304,334,365];ilib.Date.GregRataDie.cumMonthLengthsLeap=[0,31,60,91,121,152,182,213,244,274,305,335,366];
ilib.Date.GregRataDie.prototype._setDateComponents=function $ilib$Date$GregRataDie$$_setDateComponents$($date$$){var $dayInYear_year$$=parseInt($date$$.year,10)||0,$month$$=parseInt($date$$.month,10)||1,$day$$=parseInt($date$$.day,10)||1,$hour$$=parseInt($date$$.hour,10)||0,$minute$$=parseInt($date$$.minute,10)||0,$second$$=parseInt($date$$.second,10)||0,$date$$=parseInt($date$$.millisecond,10)||0,$years$$=365*($dayInYear_year$$-1)+Math.floor(($dayInYear_year$$-1)/4)-Math.floor(($dayInYear_year$$-
1)/100)+Math.floor(($dayInYear_year$$-1)/400),$dayInYear_year$$=($month$$>1?ilib.Date.GregRataDie.cumMonthLengths[$month$$-1]:0)+$day$$+(ilib.Cal.Gregorian.prototype.isLeapYear.call(this.cal,$dayInYear_year$$)&&$month$$>2?1:0);this.rd=$years$$+$dayInYear_year$$+($hour$$*36E5+$minute$$*6E4+$second$$*1E3+$date$$)/864E5};ilib.Date.GregRataDie.prototype._onOrBefore=function $ilib$Date$GregRataDie$$_onOrBefore$($rd$$,$dayOfWeek$$){return $rd$$-ilib.mod(Math.floor($rd$$)-$dayOfWeek$$,7)};
ilib.data.zoneinfo["Australia/Lord_Howe"]={e:{c:"S",m:4,r:"0>1",t:"2:0"},f:"LH{c}T",o:"10:30",s:{c:"D",m:10,r:"0>1",t:"2:0",v:"0:30"},c:"AU"};ilib.data.zoneinfo["Antarctica/Macquarie"]={f:"MIST",o:"11:0",c:"AU",n:"Central Pacific {c} Time"};ilib.data.zoneinfo["Australia/Hobart"]={e:{c:"S",m:4,r:"0>1",t:"3:0"},f:"AE{c}T",o:"10:0",s:{c:"D",m:10,r:"0>1",t:"2:0",v:"1:0"},c:"AU",n:"Tasmania {c} Time"};
ilib.data.zoneinfo["Australia/Currie"]={e:{c:"S",m:4,r:"0>1",t:"3:0"},f:"AE{c}T",o:"10:0",s:{c:"D",m:10,r:"0>1",t:"2:0",v:"1:0"},c:"AU",n:"Tasmania {c} Time"};ilib.data.zoneinfo["Australia/Melbourne"]={e:{c:"S",m:4,r:"0>1",t:"3:0"},f:"AE{c}T",o:"10:0",s:{c:"D",m:10,r:"0>1",t:"2:0",v:"1:0"},c:"AU",n:"AUS Eastern {c} Time"};ilib.data.zoneinfo["Australia/Sydney"]={e:{c:"S",m:4,r:"0>1",t:"3:0"},f:"AE{c}T",o:"10:0",s:{c:"D",m:10,r:"0>1",t:"2:0",v:"1:0"},c:"AU",n:"AUS Eastern {c} Time"};
ilib.data.zoneinfo["Australia/Broken_Hill"]={e:{c:"S",m:4,r:"0>1",t:"3:0"},f:"AC{c}T",o:"9:30",s:{c:"D",m:10,r:"0>1",t:"2:0",v:"1:0"},c:"AU",n:"Cen. Australia {c} Time"};ilib.data.zoneinfo["Australia/Brisbane"]={f:"AEST",o:"10:0",c:"AU",n:"E. Australia {c} Time"};ilib.data.zoneinfo["Australia/Lindeman"]={f:"AEST",o:"10:0",c:"AU",n:"E. Australia {c} Time"};ilib.data.zoneinfo["Australia/Adelaide"]={e:{c:"S",m:4,r:"0>1",t:"3:0"},f:"AC{c}T",o:"9:30",s:{c:"D",m:10,r:"0>1",t:"2:0",v:"1:0"},c:"AU",n:"Cen. Australia {c} Time"};
ilib.data.zoneinfo["Australia/Darwin"]={f:"ACST",o:"9:30",c:"AU",n:"AUS Central {c} Time"};ilib.data.zoneinfo["Australia/Perth"]={f:"AWST",o:"8:0",c:"AU",n:"W. Australia {c} Time"};ilib.data.zoneinfo["Australia/Eucla"]={f:"ACWST",o:"8:45",c:"AU"};ilib.data.zoneinfo["America/St_Johns"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"N{c}T",o:"-3:30",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"CA",n:"Newfoundland {c} Time"};
ilib.data.zoneinfo["America/Halifax"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"A{c}T",o:"-4:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"CA",n:"Atlantic {c} Time"};ilib.data.zoneinfo["America/Glace_Bay"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"A{c}T",o:"-4:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"CA",n:"Atlantic {c} Time"};ilib.data.zoneinfo["America/Moncton"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"A{c}T",o:"-4:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"CA",n:"Atlantic {c} Time"};
ilib.data.zoneinfo["America/Goose_Bay"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"A{c}T",o:"-4:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"CA",n:"Atlantic {c} Time"};ilib.data.zoneinfo["America/Blanc-Sablon"]={f:"AST",o:"-4:0",c:"CA",n:"SA Western {c} Time"};ilib.data.zoneinfo["America/Toronto"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"E{c}T",o:"-5:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"CA",n:"Eastern {c} Time"};
ilib.data.zoneinfo["America/Nipigon"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"E{c}T",o:"-5:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"CA",n:"Eastern {c} Time"};ilib.data.zoneinfo["America/Thunder_Bay"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"E{c}T",o:"-5:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"CA",n:"Eastern {c} Time"};ilib.data.zoneinfo["America/Iqaluit"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"E{c}T",o:"-5:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"CA",n:"Eastern {c} Time"};
ilib.data.zoneinfo["America/Pangnirtung"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"E{c}T",o:"-5:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"CA",n:"Eastern {c} Time"};ilib.data.zoneinfo["America/Resolute"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"C{c}T",o:"-6:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"CA",n:"Central {c} Time"};ilib.data.zoneinfo["America/Atikokan"]={f:"EST",o:"-5:0",c:"CA",n:"SA Pacific {c} Time"};
ilib.data.zoneinfo["America/Rankin_Inlet"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"C{c}T",o:"-6:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"CA",n:"Central {c} Time"};ilib.data.zoneinfo["America/Winnipeg"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"C{c}T",o:"-6:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"CA",n:"Central {c} Time"};ilib.data.zoneinfo["America/Rainy_River"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"C{c}T",o:"-6:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"CA",n:"Central {c} Time"};
ilib.data.zoneinfo["America/Regina"]={f:"CST",o:"-6:0",c:"CA",n:"Canada Central {c} Time"};ilib.data.zoneinfo["America/Swift_Current"]={f:"CST",o:"-6:0",c:"CA",n:"Canada Central {c} Time"};ilib.data.zoneinfo["America/Edmonton"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"M{c}T",o:"-7:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"CA",n:"Mountain {c} Time"};ilib.data.zoneinfo["America/Cambridge_Bay"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"M{c}T",o:"-7:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"CA",n:"Mountain {c} Time"};
ilib.data.zoneinfo["America/Yellowknife"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"M{c}T",o:"-7:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"CA",n:"Mountain {c} Time"};ilib.data.zoneinfo["America/Inuvik"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"M{c}T",o:"-7:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"CA",n:"Mountain {c} Time"};ilib.data.zoneinfo["America/Creston"]={f:"MST",o:"-7:0",c:"CA",n:"US Mountain {c} Time"};ilib.data.zoneinfo["America/Dawson_Creek"]={f:"MST",o:"-7:0",c:"CA",n:"US Mountain {c} Time"};
ilib.data.zoneinfo["America/Vancouver"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"P{c}T",o:"-8:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"CA",n:"Pacific {c} Time"};ilib.data.zoneinfo["America/Whitehorse"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"P{c}T",o:"-8:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"CA",n:"Pacific {c} Time"};ilib.data.zoneinfo["America/Dawson"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"P{c}T",o:"-8:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"CA",n:"Pacific {c} Time"};
ilib.data.zoneinfo["America/Montreal"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"E{c}T",o:"-5:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},n:"Eastern {c} Time"};ilib.data.zoneinfo["Europe/London"]={e:{m:10,r:"l0",t:"2:0"},f:"GMT/BST",o:"0:0",s:{c:"S",m:3,r:"l0",t:"1:0",v:"1:0"},c:"GB",n:"GMT {c} Time"};ilib.data.zoneinfo["Asia/Kolkata"]={f:"IST",o:"5:30",c:"IN",n:"India {c} Time"};ilib.data.zoneinfo["Africa/Lagos"]={f:"WAT",o:"1:0",c:"NG",n:"W. Central Africa {c} Time"};
ilib.data.zoneinfo["Asia/Manila"]={f:"PHST",o:"8:0",c:"PH",n:"Singapore {c} Time"};ilib.data.zoneinfo["Asia/Karachi"]={f:"PKST",o:"5:0",c:"PK",n:"Pakistan {c} Time"};ilib.data.zoneinfo["America/New_York"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"E{c}T",o:"-5:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"US",n:"Eastern {c} Time"};ilib.data.zoneinfo["America/Detroit"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"E{c}T",o:"-5:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"US",n:"Eastern {c} Time"};
ilib.data.zoneinfo["America/Chicago"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"C{c}T",o:"-6:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"US",n:"Central {c} Time"};ilib.data.zoneinfo["America/Menominee"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"C{c}T",o:"-6:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"US",n:"Central {c} Time"};ilib.data.zoneinfo["America/Denver"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"M{c}T",o:"-7:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"US",n:"Mountain {c} Time"};
ilib.data.zoneinfo["America/Boise"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"M{c}T",o:"-7:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"US",n:"Mountain {c} Time"};ilib.data.zoneinfo["America/Phoenix"]={f:"MST",o:"-7:0",c:"US",n:"US Mountain {c} Time"};ilib.data.zoneinfo["America/Los_Angeles"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"P{c}T",o:"-8:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"US",n:"Pacific {c} Time"};ilib.data.zoneinfo["America/Metlakatla"]={f:"PST",o:"-8:0",c:"US"};
ilib.data.zoneinfo["America/Anchorage"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"AK{c}T",o:"-9:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"US",n:"Alaskan {c} Time"};ilib.data.zoneinfo["America/Juneau"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"AK{c}T",o:"-9:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"US",n:"Alaskan {c} Time"};ilib.data.zoneinfo["America/Sitka"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"AK{c}T",o:"-9:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"US",n:"Alaskan {c} Time"};
ilib.data.zoneinfo["America/Yakutat"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"AK{c}T",o:"-9:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"US",n:"Alaskan {c} Time"};ilib.data.zoneinfo["America/Nome"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"AK{c}T",o:"-9:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"US",n:"Alaskan {c} Time"};ilib.data.zoneinfo["America/Adak"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"HA{c}T",o:"-10:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"US"};
ilib.data.zoneinfo["Pacific/Honolulu"]={f:"HST",o:"-10:0",c:"US",n:"Hawaiian {c} Time"};ilib.data.zoneinfo["Africa/Johannesburg"]={f:"SAST",o:"2:0",c:"ZA",n:"South Africa {c} Time"};ilib.data.zoneinfo["Europe/Berlin"]={e:{m:10,r:"l0",t:"3:0"},f:"CE{c}T",o:"1:0",s:{c:"S",m:3,r:"l0",t:"2:0",v:"1:0"},c:"DE",n:"W. Europe {c} Time"};ilib.data.zoneinfo["Europe/Paris"]={e:{m:10,r:"l0",t:"3:0"},f:"CE{c}T",o:"1:0",s:{c:"S",m:3,r:"l0",t:"2:0",v:"1:0"},c:"FR",n:"Romance {c} Time"};
ilib.data.zoneinfo["Europe/Madrid"]={e:{m:10,r:"l0",t:"3:0"},f:"CE{c}T",o:"1:0",s:{c:"S",m:3,r:"l0",t:"2:0",v:"1:0"},c:"ES",n:"Romance {c} Time"};ilib.data.zoneinfo["Africa/Ceuta"]={e:{m:10,r:"l0",t:"3:0"},f:"CE{c}T",o:"1:0",s:{c:"S",m:3,r:"l0",t:"2:0",v:"1:0"},c:"ES",n:"Romance {c} Time"};ilib.data.zoneinfo["Atlantic/Canary"]={e:{m:10,r:"l0",t:"2:0"},f:"WE{c}T",o:"0:0",s:{c:"S",m:3,r:"l0",t:"1:0",v:"1:0"},c:"ES",n:"GMT {c} Time"};
ilib.data.zoneinfo["America/Mexico_City"]={e:{c:"S",m:10,r:"l0",t:"2:0"},f:"C{c}T",o:"-6:0",s:{c:"D",m:4,r:"0>1",t:"2:0",v:"1:0"},c:"MX",n:"Central {c} Time (Mexico)"};ilib.data.zoneinfo["America/Cancun"]={f:"EST",o:"-5:0",c:"MX",n:"Central {c} Time (Mexico)"};ilib.data.zoneinfo["America/Merida"]={e:{c:"S",m:10,r:"l0",t:"2:0"},f:"C{c}T",o:"-6:0",s:{c:"D",m:4,r:"0>1",t:"2:0",v:"1:0"},c:"MX",n:"Central {c} Time (Mexico)"};
ilib.data.zoneinfo["America/Monterrey"]={e:{c:"S",m:10,r:"l0",t:"2:0"},f:"C{c}T",o:"-6:0",s:{c:"D",m:4,r:"0>1",t:"2:0",v:"1:0"},c:"MX",n:"Central {c} Time (Mexico)"};ilib.data.zoneinfo["America/Matamoros"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"C{c}T",o:"-6:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"MX",n:"Central {c} Time"};ilib.data.zoneinfo["America/Mazatlan"]={e:{c:"S",m:10,r:"l0",t:"2:0"},f:"M{c}T",o:"-7:0",s:{c:"D",m:4,r:"0>1",t:"2:0",v:"1:0"},c:"MX",n:"Mountain {c} Time (Mexico)"};
ilib.data.zoneinfo["America/Chihuahua"]={e:{c:"S",m:10,r:"l0",t:"2:0"},f:"M{c}T",o:"-7:0",s:{c:"D",m:4,r:"0>1",t:"2:0",v:"1:0"},c:"MX",n:"Mountain {c} Time (Mexico)"};ilib.data.zoneinfo["America/Ojinaga"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"M{c}T",o:"-7:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"MX",n:"Mountain {c} Time"};ilib.data.zoneinfo["America/Hermosillo"]={f:"MST",o:"-7:0",c:"MX",n:"US Mountain {c} Time"};
ilib.data.zoneinfo["America/Tijuana"]={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"P{c}T",o:"-8:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},c:"MX",n:"Pacific {c} Time"};ilib.data.zoneinfo["America/Santa_Isabel"]={e:{c:"S",m:10,r:"l0",t:"2:0"},f:"P{c}T",o:"-8:0",s:{c:"D",m:4,r:"0>1",t:"2:0",v:"1:0"},c:"MX",n:"Pacific {c} Time (Mexico)"};ilib.data.zoneinfo["America/Bahia_Banderas"]={e:{c:"S",m:10,r:"l0",t:"2:0"},f:"C{c}T",o:"-6:0",s:{c:"D",m:4,r:"0>1",t:"2:0",v:"1:0"},c:"MX",n:"Central {c} Time (Mexico)"};
ilib.data.zoneinfo["Asia/Jakarta"]={f:"WIB",o:"7:0",c:"ID",n:"SE Asia {c} Time"};ilib.data.zoneinfo["Asia/Pontianak"]={f:"WIB",o:"7:0",c:"ID",n:"SE Asia {c} Time"};ilib.data.zoneinfo["Asia/Makassar"]={f:"WITA",o:"8:0",c:"ID",n:"Singapore {c} Time"};ilib.data.zoneinfo["Asia/Jayapura"]={f:"WIT",o:"9:0",c:"ID",n:"Tokyo {c} Time"};ilib.data.zoneinfo["Europe/Rome"]={e:{m:10,r:"l0",t:"3:0"},f:"CE{c}T",o:"1:0",s:{c:"S",m:3,r:"l0",t:"2:0",v:"1:0"},c:"IT",n:"W. Europe {c} Time"};
ilib.data.zoneinfo["Asia/Tokyo"]={f:"JST",o:"9:0",c:"JP",n:"Tokyo {c} Time"};ilib.data.zoneinfo["Asia/Seoul"]={f:"KST",o:"9:0",c:"KR",n:"Korea {c} Time"};ilib.data.zoneinfo["America/Noronha"]={f:"FNT",o:"-2:0",c:"BR",n:"UTC-02"};ilib.data.zoneinfo["America/Belem"]={f:"BRT",o:"-3:0",c:"BR",n:"SA Eastern {c} Time"};ilib.data.zoneinfo["America/Fortaleza"]={f:"BRT",o:"-3:0",c:"BR",n:"SA Eastern {c} Time"};ilib.data.zoneinfo["America/Recife"]={f:"BRT",o:"-3:0",c:"BR",n:"SA Eastern {c} Time"};
ilib.data.zoneinfo["America/Araguaina"]={f:"BRT",o:"-3:0",c:"BR",n:"SA Eastern {c} Time"};ilib.data.zoneinfo["America/Maceio"]={f:"BRT",o:"-3:0",c:"BR",n:"SA Eastern {c} Time"};ilib.data.zoneinfo["America/Bahia"]={f:"BRT",o:"-3:0",c:"BR",n:"Bahia {c} Time"};ilib.data.zoneinfo["America/Sao_Paulo"]={e:{m:2,r:"0>22",t:"0:0"},f:"BR{c}T",o:"-3:0",s:{c:"S",m:10,r:"0>15",t:"0:0",v:"1:0"},c:"BR",n:"E. South America {c} Time"};
ilib.data.zoneinfo["America/Campo_Grande"]={e:{m:2,r:"0>22",t:"0:0"},f:"AM{c}T",o:"-4:0",s:{c:"S",m:10,r:"0>15",t:"0:0",v:"1:0"},c:"BR",n:"Central Brazilian {c} Time"};ilib.data.zoneinfo["America/Cuiaba"]={e:{m:2,r:"0>22",t:"0:0"},f:"AM{c}T",o:"-4:0",s:{c:"S",m:10,r:"0>15",t:"0:0",v:"1:0"},c:"BR",n:"Central Brazilian {c} Time"};ilib.data.zoneinfo["America/Santarem"]={f:"BRT",o:"-3:0",c:"BR",n:"SA Eastern {c} Time"};ilib.data.zoneinfo["America/Porto_Velho"]={f:"AMT",o:"-4:0",c:"BR",n:"SA Western {c} Time"};
ilib.data.zoneinfo["America/Boa_Vista"]={f:"AMT",o:"-4:0",c:"BR",n:"SA Western {c} Time"};ilib.data.zoneinfo["America/Manaus"]={f:"AMT",o:"-4:0",c:"BR",n:"SA Western {c} Time"};ilib.data.zoneinfo["America/Eirunepe"]={f:"ACT",o:"-5:0",c:"BR",n:"SA Pacific {c} Time"};ilib.data.zoneinfo["America/Rio_Branco"]={f:"ACT",o:"-5:0",c:"BR",n:"SA Pacific {c} Time"};ilib.data.zoneinfo["Europe/Kaliningrad"]={f:"EET",o:"2:0",c:"RU",n:"Kaliningrad {c} Time"};
ilib.data.zoneinfo["Europe/Moscow"]={f:"MSK",o:"3:0",c:"RU",n:"Russian {c} Time"};ilib.data.zoneinfo["Europe/Simferopol"]={f:"MSK",o:"3:0",c:"RU",n:"Russian {c} Time"};ilib.data.zoneinfo["Europe/Volgograd"]={f:"MSK",o:"3:0",c:"RU",n:"Russian {c} Time"};ilib.data.zoneinfo["Europe/Samara"]={f:"SAMT",o:"4:0",c:"RU",n:"Russian {c} Time"};ilib.data.zoneinfo["Asia/Yekaterinburg"]={f:"YEKT",o:"5:0",c:"RU",n:"Ekaterinburg {c} Time"};ilib.data.zoneinfo["Asia/Omsk"]={f:"OMST",o:"6:0",c:"RU",n:"N. Central Asia {c} Time"};
ilib.data.zoneinfo["Asia/Novosibirsk"]={f:"NOVT",o:"6:0",c:"RU",n:"N. Central Asia {c} Time"};ilib.data.zoneinfo["Asia/Novokuznetsk"]={f:"KRAT",o:"7:0",c:"RU",n:"N. Central Asia {c} Time"};ilib.data.zoneinfo["Asia/Krasnoyarsk"]={f:"KRAT",o:"7:0",c:"RU",n:"North Asia {c} Time"};ilib.data.zoneinfo["Asia/Irkutsk"]={f:"IRKT",o:"8:0",c:"RU",n:"North Asia East {c} Time"};ilib.data.zoneinfo["Asia/Chita"]={f:"IRKT",o:"8:0",c:"RU",n:"Yakutsk {c} Time"};
ilib.data.zoneinfo["Asia/Yakutsk"]={f:"YAKT",o:"9:0",c:"RU",n:"Yakutsk {c} Time"};ilib.data.zoneinfo["Asia/Khandyga"]={f:"YAKT",o:"9:0",c:"RU",n:"Yakutsk {c} Time"};ilib.data.zoneinfo["Asia/Vladivostok"]={f:"VLAT",o:"10:0",c:"RU",n:"Vladivostok {c} Time"};ilib.data.zoneinfo["Asia/Sakhalin"]={f:"SAKT",o:"10:0",c:"RU",n:"Vladivostok {c} Time"};ilib.data.zoneinfo["Asia/Ust-Nera"]={f:"VLAT",o:"10:0",c:"RU",n:"Vladivostok {c} Time"};ilib.data.zoneinfo["Asia/Magadan"]={f:"MAGT",o:"10:0",c:"RU",n:"Magadan {c} Time"};
ilib.data.zoneinfo["Asia/Srednekolymsk"]={f:"SRET",o:"11:0",c:"RU",n:"Magadan {c} Time"};ilib.data.zoneinfo["Asia/Kamchatka"]={f:"PETT",o:"12:0",c:"RU",n:"Magadan {c} Time"};ilib.data.zoneinfo["Asia/Anadyr"]={f:"ANAT",o:"12:0",c:"RU",n:"Magadan {c} Time"};ilib.data.zoneinfo["Europe/Istanbul"]={e:{m:10,r:"l0",t:"4:0"},f:"EE{c}T",o:"2:0",s:{c:"S",m:3,r:"l0",t:"3:0",v:"1:0"},c:"TR",n:"Turkey {c} Time"};ilib.data.zoneinfo["Asia/Ho_Chi_Minh"]={f:"ICT",o:"7:0",c:"VN",n:"SE Asia {c} Time"};
ilib.data.zoneinfo["Asia/Shanghai"]={f:"CST",o:"8:0",c:"CN",n:"China {c} Time"};ilib.data.zoneinfo["Asia/Harbin"]={f:"CST",o:"8:0",c:"CN"};ilib.data.zoneinfo["Asia/Chongqing"]={f:"CST",o:"8:0",c:"CN"};ilib.data.zoneinfo["Asia/Urumqi"]={f:"XJT",o:"6:0",c:"CN",n:"Central Asia {c} Time"};ilib.data.zoneinfo["Asia/Kashgar"]={f:"CST",o:"8:0",c:"CN"};ilib.data.zoneinfo["Asia/Hong_Kong"]={f:"HKST",o:"8:0",c:"HK",n:"China {c} Time"};ilib.data.zoneinfo["Asia/Taipei"]={f:"CST",o:"8:0",c:"TW",n:"Taipei {c} Time"};
ilib.data.zoneinfo["Asia/Singapore"]={f:"SGT",o:"8:0",c:"SG",n:"Singapore {c} Time"};ilib.data.zoneinfo.WET={e:{m:10,r:"l0",t:"2:0"},f:"WE{c}T",o:"0:0",s:{c:"S",m:3,r:"l0",t:"1:0",v:"1:0"}};ilib.data.zoneinfo.PST8PDT={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"P{c}T",o:"-8:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},n:"Pacific {c} Time"};ilib.data.zoneinfo.Iceland={f:"GMT",o:"0:0",c:"IS"};ilib.data.zoneinfo.MST7MDT={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"M{c}T",o:"-7:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},n:"Mountain {c} Time"};
ilib.data.zoneinfo.EST5EDT={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"E{c}T",o:"-5:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},n:"Eastern {c} Time"};ilib.data.zoneinfo.MET={e:{m:10,r:"l0",t:"3:0"},f:"ME{c}T",o:"1:0",s:{c:"S",m:3,r:"l0",t:"2:0",v:"1:0"}};ilib.data.zoneinfo.CET={e:{m:10,r:"l0",t:"3:0"},f:"CE{c}T",o:"1:0",s:{c:"S",m:3,r:"l0",t:"2:0",v:"1:0"}};ilib.data.zoneinfo.CST6CDT={e:{c:"S",m:11,r:"0>1",t:"2:0"},f:"C{c}T",o:"-6:0",s:{c:"D",m:3,r:"0>8",t:"2:0",v:"1:0"},n:"Central {c} Time"};
ilib.data.zoneinfo.MST={f:"MST",o:"-7:0"};ilib.data.zoneinfo.EET={e:{m:10,r:"l0",t:"4:0"},f:"EE{c}T",o:"2:0",s:{c:"S",m:3,r:"l0",t:"3:0",v:"1:0"}};
ilib.data.zoneinfo.zonetab={AD:["Europe/Andorra"],AE:["Asia/Dubai"],AF:["Asia/Kabul"],AG:["America/Antigua"],AI:["America/Anguilla"],AL:["Europe/Tirane"],AM:["Asia/Yerevan"],AO:["Africa/Luanda"],AQ:"Antarctica/McMurdo Antarctica/Rothera Antarctica/Palmer Antarctica/Mawson Antarctica/Davis Antarctica/Casey Antarctica/Vostok Antarctica/DumontDUrville Antarctica/Syowa Antarctica/Troll".split(" "),AR:"America/Argentina/Buenos_Aires America/Argentina/Cordoba America/Argentina/Salta America/Argentina/Jujuy America/Argentina/Tucuman America/Argentina/Catamarca America/Argentina/La_Rioja America/Argentina/San_Juan America/Argentina/Mendoza America/Argentina/San_Luis America/Argentina/Rio_Gallegos America/Argentina/Ushuaia".split(" "),
AS:["Pacific/Pago_Pago"],AT:["Europe/Vienna"],AU:"Australia/Lord_Howe Antarctica/Macquarie Australia/Hobart Australia/Currie Australia/Melbourne Australia/Sydney Australia/Broken_Hill Australia/Brisbane Australia/Lindeman Australia/Adelaide Australia/Darwin Australia/Perth Australia/Eucla".split(" "),AW:["America/Aruba"],AX:["Europe/Mariehamn"],AZ:["Asia/Baku"],BA:["Europe/Sarajevo"],BB:["America/Barbados"],BD:["Asia/Dhaka"],BE:["Europe/Brussels"],BF:["Africa/Ouagadougou"],BG:["Europe/Sofia"],BH:["Asia/Bahrain"],
BI:["Africa/Bujumbura"],BJ:["Africa/Porto-Novo"],BL:["America/St_Barthelemy"],BM:["Atlantic/Bermuda"],BN:["Asia/Brunei"],BO:["America/La_Paz"],BQ:["America/Kralendijk"],BR:"America/Noronha America/Belem America/Fortaleza America/Recife America/Araguaina America/Maceio America/Bahia America/Sao_Paulo America/Campo_Grande America/Cuiaba America/Santarem America/Porto_Velho America/Boa_Vista America/Manaus America/Eirunepe America/Rio_Branco".split(" "),BS:["America/Nassau"],BT:["Asia/Thimphu"],BW:["Africa/Gaborone"],
BY:["Europe/Minsk"],BZ:["America/Belize"],CA:"America/St_Johns America/Halifax America/Glace_Bay America/Moncton America/Goose_Bay America/Blanc-Sablon America/Toronto America/Nipigon America/Thunder_Bay America/Iqaluit America/Pangnirtung America/Resolute America/Atikokan America/Rankin_Inlet America/Winnipeg America/Rainy_River America/Regina America/Swift_Current America/Edmonton America/Cambridge_Bay America/Yellowknife America/Inuvik America/Creston America/Dawson_Creek America/Vancouver America/Whitehorse America/Dawson America/Montreal".split(" "),
CC:["Indian/Cocos"],CD:["Africa/Kinshasa","Africa/Lubumbashi"],CF:["Africa/Bangui"],CG:["Africa/Brazzaville"],CH:["Europe/Zurich"],CI:["Africa/Abidjan"],CK:["Pacific/Rarotonga"],CL:["America/Santiago","Pacific/Easter"],CM:["Africa/Douala"],CN:["Asia/Shanghai","Asia/Harbin","Asia/Chongqing","Asia/Urumqi","Asia/Kashgar"],CO:["America/Bogota"],CR:["America/Costa_Rica"],CU:["America/Havana"],CV:["Atlantic/Cape_Verde"],CW:["America/Curacao"],CX:["Indian/Christmas"],CY:["Asia/Nicosia"],CZ:["Europe/Prague"],
DE:["Europe/Berlin","Europe/Busingen"],DJ:["Africa/Djibouti"],DK:["Europe/Copenhagen"],DM:["America/Dominica"],DO:["America/Santo_Domingo"],DZ:["Africa/Algiers"],EC:["America/Guayaquil","Pacific/Galapagos"],EE:["Europe/Tallinn"],EG:["Africa/Cairo"],EH:["Africa/El_Aaiun"],ER:["Africa/Asmara"],ES:["Europe/Madrid","Africa/Ceuta","Atlantic/Canary"],ET:["Africa/Addis_Ababa"],FI:["Europe/Helsinki"],FJ:["Pacific/Fiji"],FK:["Atlantic/Stanley"],FM:["Pacific/Chuuk","Pacific/Pohnpei","Pacific/Kosrae"],FO:["Atlantic/Faroe"],
FR:["Europe/Paris"],GA:["Africa/Libreville"],GB:["Europe/London"],GD:["America/Grenada"],GE:["Asia/Tbilisi"],GF:["America/Cayenne"],GG:["Europe/Guernsey"],GH:["Africa/Accra"],GI:["Europe/Gibraltar"],GL:["America/Godthab","America/Danmarkshavn","America/Scoresbysund","America/Thule"],GM:["Africa/Banjul"],GN:["Africa/Conakry"],GP:["America/Guadeloupe"],GQ:["Africa/Malabo"],GR:["Europe/Athens"],GS:["Atlantic/South_Georgia"],GT:["America/Guatemala"],GU:["Pacific/Guam"],GW:["Africa/Bissau"],GY:["America/Guyana"],
HK:["Asia/Hong_Kong"],HN:["America/Tegucigalpa"],HR:["Europe/Zagreb"],HT:["America/Port-au-Prince"],HU:["Europe/Budapest"],ID:["Asia/Jakarta","Asia/Pontianak","Asia/Makassar","Asia/Jayapura"],IE:["Europe/Dublin"],IL:["Asia/Jerusalem"],IM:["Europe/Isle_of_Man"],IN:["Asia/Kolkata"],IO:["Indian/Chagos"],IQ:["Asia/Baghdad"],IR:["Asia/Tehran"],IS:["Atlantic/Reykjavik"],IT:["Europe/Rome"],JE:["Europe/Jersey"],JM:["America/Jamaica"],JO:["Asia/Amman"],JP:["Asia/Tokyo"],KE:["Africa/Nairobi"],KG:["Asia/Bishkek"],
KH:["Asia/Phnom_Penh"],KI:["Pacific/Tarawa","Pacific/Enderbury","Pacific/Kiritimati"],KM:["Indian/Comoro"],KN:["America/St_Kitts"],KP:["Asia/Pyongyang"],KR:["Asia/Seoul"],KW:["Asia/Kuwait"],KY:["America/Cayman"],KZ:["Asia/Almaty","Asia/Qyzylorda","Asia/Aqtobe","Asia/Aqtau","Asia/Oral"],LA:["Asia/Vientiane"],LB:["Asia/Beirut"],LC:["America/St_Lucia"],LI:["Europe/Vaduz"],LK:["Asia/Colombo"],LR:["Africa/Monrovia"],LS:["Africa/Maseru"],LT:["Europe/Vilnius"],LU:["Europe/Luxembourg"],LV:["Europe/Riga"],
LY:["Africa/Tripoli"],MA:["Africa/Casablanca"],MC:["Europe/Monaco"],MD:["Europe/Chisinau"],ME:["Europe/Podgorica"],MF:["America/Marigot"],MG:["Indian/Antananarivo"],MH:["Pacific/Majuro","Pacific/Kwajalein"],MK:["Europe/Skopje"],ML:["Africa/Bamako"],MM:["Asia/Rangoon"],MN:["Asia/Ulaanbaatar","Asia/Hovd","Asia/Choibalsan"],MO:["Asia/Macau"],MP:["Pacific/Saipan"],MQ:["America/Martinique"],MR:["Africa/Nouakchott"],MS:["America/Montserrat"],MT:["Europe/Malta"],MU:["Indian/Mauritius"],MV:["Indian/Maldives"],
MW:["Africa/Blantyre"],MX:"America/Mexico_City America/Cancun America/Merida America/Monterrey America/Matamoros America/Mazatlan America/Chihuahua America/Ojinaga America/Hermosillo America/Tijuana America/Santa_Isabel America/Bahia_Banderas".split(" "),MY:["Asia/Kuala_Lumpur","Asia/Kuching"],MZ:["Africa/Maputo"],NA:["Africa/Windhoek"],NC:["Pacific/Noumea"],NE:["Africa/Niamey"],NF:["Pacific/Norfolk"],NG:["Africa/Lagos"],NI:["America/Managua"],NL:["Europe/Amsterdam"],NO:["Europe/Oslo"],NP:["Asia/Kathmandu"],
NR:["Pacific/Nauru"],NU:["Pacific/Niue"],NZ:["Pacific/Auckland","Pacific/Chatham"],OM:["Asia/Muscat"],PA:["America/Panama"],PE:["America/Lima"],PF:["Pacific/Tahiti","Pacific/Marquesas","Pacific/Gambier"],PG:["Pacific/Port_Moresby","Pacific/Bougainville"],PH:["Asia/Manila"],PK:["Asia/Karachi"],PL:["Europe/Warsaw"],PM:["America/Miquelon"],PN:["Pacific/Pitcairn"],PR:["America/Puerto_Rico"],PS:["Asia/Gaza","Asia/Hebron"],PT:["Europe/Lisbon","Atlantic/Madeira","Atlantic/Azores"],PW:["Pacific/Palau"],PY:["America/Asuncion"],
QA:["Asia/Qatar"],RE:["Indian/Reunion"],RO:["Europe/Bucharest"],RS:["Europe/Belgrade"],RU:"Europe/Kaliningrad Europe/Moscow Europe/Simferopol Europe/Volgograd Europe/Samara Asia/Yekaterinburg Asia/Omsk Asia/Novosibirsk Asia/Novokuznetsk Asia/Krasnoyarsk Asia/Irkutsk Asia/Chita Asia/Yakutsk Asia/Khandyga Asia/Vladivostok Asia/Sakhalin Asia/Ust-Nera Asia/Magadan Asia/Srednekolymsk Asia/Kamchatka Asia/Anadyr".split(" "),RW:["Africa/Kigali"],SA:["Asia/Riyadh"],SB:["Pacific/Guadalcanal"],SC:["Indian/Mahe"],
SD:["Africa/Khartoum"],SE:["Europe/Stockholm"],SG:["Asia/Singapore"],SH:["Atlantic/St_Helena"],SI:["Europe/Ljubljana"],SJ:["Arctic/Longyearbyen"],SK:["Europe/Bratislava"],SL:["Africa/Freetown"],SM:["Europe/San_Marino"],SN:["Africa/Dakar"],SO:["Africa/Mogadishu"],SR:["America/Paramaribo"],SS:["Africa/Juba"],ST:["Africa/Sao_Tome"],SV:["America/El_Salvador"],SX:["America/Lower_Princes"],SY:["Asia/Damascus"],SZ:["Africa/Mbabane"],TC:["America/Grand_Turk"],TD:["Africa/Ndjamena"],TF:["Indian/Kerguelen"],
TG:["Africa/Lome"],TH:["Asia/Bangkok"],TJ:["Asia/Dushanbe"],TK:["Pacific/Fakaofo"],TL:["Asia/Dili"],TM:["Asia/Ashgabat"],TN:["Africa/Tunis"],TO:["Pacific/Tongatapu"],TR:["Europe/Istanbul"],TT:["America/Port_of_Spain"],TV:["Pacific/Funafuti"],TW:["Asia/Taipei"],TZ:["Africa/Dar_es_Salaam"],UA:["Europe/Kiev","Europe/Uzhgorod","Europe/Zaporozhye"],UG:["Africa/Kampala"],UM:["Pacific/Johnston","Pacific/Midway","Pacific/Wake"],US:"America/New_York America/Detroit America/Kentucky/Louisville America/Kentucky/Monticello America/Indiana/Indianapolis America/Indiana/Vincennes America/Indiana/Winamac America/Indiana/Marengo America/Indiana/Petersburg America/Indiana/Vevay America/Chicago America/Indiana/Tell_City America/Indiana/Knox America/Menominee America/North_Dakota/Center America/North_Dakota/New_Salem America/North_Dakota/Beulah America/Denver America/Boise America/Phoenix America/Los_Angeles America/Metlakatla America/Anchorage America/Juneau America/Sitka America/Yakutat America/Nome America/Adak Pacific/Honolulu".split(" "),
UY:["America/Montevideo"],UZ:["Asia/Samarkand","Asia/Tashkent"],VA:["Europe/Vatican"],VC:["America/St_Vincent"],VE:["America/Caracas"],VG:["America/Tortola"],VI:["America/St_Thomas"],VN:["Asia/Ho_Chi_Minh"],VU:["Pacific/Efate"],WF:["Pacific/Wallis"],WS:["Pacific/Apia"],YE:["Asia/Aden"],YT:["Indian/Mayotte"],ZA:["Africa/Johannesburg"],ZM:["Africa/Lusaka"],ZW:["Africa/Harare"]};ilib.data.zoneinfo.EST={f:"EST",o:"-5:0"};ilib.data.zoneinfo.Factory={f:'"Local',o:"0:0"};
ilib.data.zoneinfo.HST={f:"HST",o:"-10:0"};ilib.data.zoneinfo["Etc/GMT+2"]={f:"GMT+2",o:"-2:0",n:"UTC-02"};ilib.data.zoneinfo["Etc/GMT+12"]={f:"GMT+12",o:"-12:0",n:"Dateline {c} Time"};ilib.data.zoneinfo["Etc/GMT"]={f:"GMT",o:"0:0",n:"UTC"};ilib.data.zoneinfo["Etc/GMT+4"]={f:"GMT+4",o:"-4:0",n:"SA Western {c} Time"};ilib.data.zoneinfo["Etc/GMT-8"]={f:"GMT-8",o:"8:0",n:"Singapore {c} Time"};ilib.data.zoneinfo["Etc/GMT-10"]={f:"GMT-10",o:"10:0",n:"West Pacific {c} Time"};
ilib.data.zoneinfo["Etc/GMT+7"]={f:"GMT+7",o:"-7:0",n:"US Mountain {c} Time"};ilib.data.zoneinfo["Etc/GMT-6"]={f:"GMT-6",o:"6:0",n:"Central Asia {c} Time"};ilib.data.zoneinfo["Etc/UTC"]={f:"UTC",o:"0:0"};ilib.data.zoneinfo["Etc/GMT-13"]={f:"GMT-13",o:"13:0",n:"Tonga {c} Time"};ilib.data.zoneinfo["Etc/GMT+1"]={f:"GMT+1",o:"-1:0",n:"Cape Verde {c} Time"};ilib.data.zoneinfo["Etc/GMT-14"]={f:"GMT-14",o:"14:0",n:"Line Islands {c} Time"};ilib.data.zoneinfo["Etc/GMT+8"]={f:"GMT+8",o:"-8:0"};
ilib.data.zoneinfo["Etc/GMT-12"]={f:"GMT-12",o:"12:0",n:"UTC+12"};ilib.data.zoneinfo["Etc/GMT-4"]={f:"GMT-4",o:"4:0",n:"Arabian {c} Time"};ilib.data.zoneinfo["Etc/GMT-3"]={f:"GMT-3",o:"3:0",n:"E. Africa {c} Time"};ilib.data.zoneinfo["Etc/GMT-7"]={f:"GMT-7",o:"7:0",n:"SE Asia {c} Time"};ilib.data.zoneinfo["Etc/GMT-11"]={f:"GMT-11",o:"11:0",n:"Central Pacific {c} Time"};ilib.data.zoneinfo["Etc/GMT+6"]={f:"GMT+6",o:"-6:0",n:"Central America {c} Time"};
ilib.data.zoneinfo["Etc/GMT-9"]={f:"GMT-9",o:"9:0",n:"Tokyo {c} Time"};ilib.data.zoneinfo["Etc/GMT+11"]={f:"GMT+11",o:"-11:0",n:"UTC-11"};ilib.data.zoneinfo["Etc/GMT-1"]={f:"GMT-1",o:"1:0",n:"W. Central Africa {c} Time"};ilib.data.zoneinfo["Etc/UCT"]={f:"UCT",o:"0:0"};ilib.data.zoneinfo["Etc/GMT+9"]={f:"GMT+9",o:"-9:0"};ilib.data.zoneinfo["Etc/GMT-2"]={f:"GMT-2",o:"2:0",n:"South Africa {c} Time"};ilib.data.zoneinfo["Etc/GMT+3"]={f:"GMT+3",o:"-3:0",n:"SA Eastern {c} Time"};
ilib.data.zoneinfo["Etc/GMT+10"]={f:"GMT+10",o:"-10:0",n:"Hawaiian {c} Time"};ilib.data.zoneinfo["Etc/GMT-5"]={f:"GMT-5",o:"5:0",n:"West Asia {c} Time"};ilib.data.zoneinfo["Etc/GMT+5"]={f:"GMT+5",o:"-5:0",n:"SA Pacific {c} Time"};
ilib.TimeZone=function $ilib$TimeZone$($options$$){this.sync=true;this.locale=new ilib.Locale;this.isLocal=false;if($options$$){if($options$$.locale)this.locale=typeof $options$$.locale==="string"?new ilib.Locale($options$$.locale):$options$$.locale;if($options$$.id){var $id$$=$options$$.id.toString();if($id$$==="local"){this.isLocal=true;var $jun1_now$$=new Date,$jan1$$=new Date($jun1_now$$.getFullYear(),0,1),$jun1_now$$=new Date($jun1_now$$.getFullYear(),5,1);this.offsetJan1=-$jan1$$.getTimezoneOffset();
this.offsetJun1=-$jun1_now$$.getTimezoneOffset();this.offset=Math.min(this.offsetJan1,this.offsetJun1)}this.id=$id$$}else if($options$$.offset){this.offset=typeof $options$$.offset==="string"?parseInt($options$$.offset,10):$options$$.offset;this.id=this.getDisplayName(void 0,void 0)}if(typeof $options$$.sync!=="undefined")this.sync=!!$options$$.sync;this.loadParams=$options$$.loadParams;this.onLoad=$options$$.onLoad}this.id?this._loadtzdata():new ilib.LocaleInfo(this.locale,{sync:this.sync,onLoad:ilib.bind(this,
function($li$$){this.id=$li$$.getTimeZone()||"Etc/UTC";this._loadtzdata()})})};ilib.TimeZone.prototype._loadtzdata=function $ilib$TimeZone$$_loadtzdata$(){!ilib.data.zoneinfo[this.id]&&typeof this.offset==="undefined"?ilib.loadData({object:ilib.TimeZone,nonlocale:true,name:"zoneinfo/"+this.id+".json",sync:this.sync,loadParams:this.loadParams,callback:ilib.bind(this,function($tzdata$$){$tzdata$$&&!ilib.isEmpty($tzdata$$)&&(ilib.data.zoneinfo[this.id]=$tzdata$$);this._initZone()})}):this._initZone()};
ilib.TimeZone.prototype._initZone=function $ilib$TimeZone$$_initZone$(){this.zone=ilib.data.zoneinfo[this.id];if(!this.zone&&typeof this.offset==="undefined"){this.id="Etc/UTC";this.zone=ilib.data.zoneinfo[this.id]}this._calcDSTSavings();if(typeof this.offset==="undefined"&&this.zone.o){var $offsetParts$$=this._offsetStringToObj(this.zone.o);this.offset=(Math.abs($offsetParts$$.h||0)*60+($offsetParts$$.m||0))*ilib.signum($offsetParts$$.h||0)}if(this.onLoad&&typeof this.onLoad==="function")this.onLoad(this)};
ilib.data.timezone={};
ilib.TimeZone.getAvailableIds=function $ilib$TimeZone$getAvailableIds$($country$$){var $tz$$,$ids$$=[];if(!ilib.data.timezone.list){ilib.data.timezone.list=[];if(ilib._load instanceof ilib.Loader){var $hash$$=ilib._load.listAvailableFiles(),$dir$$;for($dir$$ in $hash$$){var $files$$=$hash$$[$dir$$];typeof $files$$==="object"&&$files$$ instanceof Array&&$files$$.forEach(function($filename$$){$filename$$&&$filename$$.match(/^zoneinfo/)&&ilib.data.timezone.list.push($filename$$.replace(/^zoneinfo\//,"").replace(/\.json$/,
""))})}}else for($tz$$ in ilib.data.zoneinfo)ilib.data.zoneinfo[$tz$$]&&ilib.data.timezone.list.push($tz$$)}if($country$$){ilib.data.zoneinfo.zonetab||ilib.loadData({object:ilib.TimeZone,nonlocale:true,name:"zoneinfo/zonetab.json",sync:true,callback:ilib.bind(this,function($tzdata$$){if($tzdata$$)ilib.data.zoneinfo.zonetab=$tzdata$$})});$ids$$=ilib.data.zoneinfo.zonetab[$country$$]}else{$ids$$.push("local");for($tz$$ in ilib.data.timezone.list)ilib.data.timezone.list[$tz$$]&&$ids$$.push(ilib.data.timezone.list[$tz$$])}return $ids$$};
ilib.TimeZone.prototype.getId=function $ilib$TimeZone$$getId$(){return this.id.toString()};
ilib.TimeZone.prototype.getDisplayName=function $ilib$TimeZone$$getDisplayName$($date$$,$style$$){$style$$=this.isLocal||typeof this.zone==="undefined"?"rfc822":$style$$||"standard";switch($style$$){default:case "standard":if(this.zone.f&&this.zone.f!=="zzz"){if(this.zone.f.indexOf("{c}")!==-1){var $hour$$2_letter_str$$="",$hour$$2_letter_str$$=this.inDaylightTime($date$$)?this.zone.s&&this.zone.s.c:this.zone.e&&this.zone.e.c,$ret_temp$$=new ilib.String(this.zone.f);return $ret_temp$$.format({c:$hour$$2_letter_str$$||
""})}return this.zone.f}$ret_temp$$="GMT"+this.zone.o;this.inDaylightTime($date$$)&&($ret_temp$$=$ret_temp$$+("+"+this.zone.s.v));return $ret_temp$$;case "rfc822":var $minute$$2_offset$$=this.getOffset($date$$),$ret_temp$$="UTC",$hour$$2_letter_str$$=$minute$$2_offset$$.h||0,$minute$$2_offset$$=$minute$$2_offset$$.m||0;if($hour$$2_letter_str$$!==0){$ret_temp$$=$ret_temp$$+($hour$$2_letter_str$$>0?"+":"-");Math.abs($hour$$2_letter_str$$)<10&&($ret_temp$$=$ret_temp$$+"0");$ret_temp$$=$ret_temp$$+($hour$$2_letter_str$$<
0?-$hour$$2_letter_str$$:$hour$$2_letter_str$$);$minute$$2_offset$$<10&&($ret_temp$$=$ret_temp$$+"0");$ret_temp$$=$ret_temp$$+$minute$$2_offset$$}return $ret_temp$$;case "long":if(this.zone.n){if(this.zone.n.indexOf("{c}")!==-1){$hour$$2_letter_str$$=this.inDaylightTime($date$$)?"Daylight":"Standard";$ret_temp$$=new ilib.String(this.zone.n);return $ret_temp$$.format({c:$hour$$2_letter_str$$||""})}return this.zone.n}$ret_temp$$="GMT"+this.zone.o;this.inDaylightTime($date$$)&&($ret_temp$$=$ret_temp$$+
("+"+this.zone.s.v));return $ret_temp$$}};
ilib.TimeZone.prototype._offsetStringToObj=function $ilib$TimeZone$$_offsetStringToObj$($offsetParts$$1_str$$){var $offsetParts$$1_str$$=typeof $offsetParts$$1_str$$==="string"?$offsetParts$$1_str$$.split(":"):[],$ret$$={h:0},$temp$$;if($offsetParts$$1_str$$.length>0){$ret$$.h=parseInt($offsetParts$$1_str$$[0],10);if($offsetParts$$1_str$$.length>1){if($temp$$=parseInt($offsetParts$$1_str$$[1],10))$ret$$.m=$temp$$;if($offsetParts$$1_str$$.length>2)if($temp$$=parseInt($offsetParts$$1_str$$[2],10))$ret$$.s=
$temp$$}}return $ret$$};ilib.TimeZone.prototype.getOffset=function $ilib$TimeZone$$getOffset$($date$$6_hours_ret$$){if(!$date$$6_hours_ret$$)return this.getRawOffset();var $minutes_offset$$=this.getOffsetMillis($date$$6_hours_ret$$)/6E4,$date$$6_hours_ret$$=ilib._roundFnc.down($minutes_offset$$/60),$minutes_offset$$=Math.abs($minutes_offset$$)-Math.abs($date$$6_hours_ret$$)*60,$date$$6_hours_ret$$={h:$date$$6_hours_ret$$};if($minutes_offset$$!=0)$date$$6_hours_ret$$.m=$minutes_offset$$;return $date$$6_hours_ret$$};
ilib.TimeZone.prototype.getOffsetMillis=function $ilib$TimeZone$$getOffsetMillis$($date$$){var $ret$$;if(this.isLocal&&typeof $date$$.dst==="undefined")return-(!$date$$?new Date:new Date($date$$.getTimeExtended())).getTimezoneOffset()*6E4;$ret$$=this.offset;$date$$&&this.inDaylightTime($date$$)&&($ret$$=$ret$$+this.dstSavings);return $ret$$*6E4};
ilib.TimeZone.prototype._getOffsetMillisWallTime=function $ilib$TimeZone$$_getOffsetMillisWallTime$($date$$){var $ret$$;$ret$$=this.offset;$date$$&&this.inDaylightTime($date$$,true)&&($ret$$=$ret$$+this.dstSavings);return $ret$$*6E4};
ilib.TimeZone.prototype.getOffsetStr=function $ilib$TimeZone$$getOffsetStr$($date$$9_offset$$){var $date$$9_offset$$=this.getOffset($date$$9_offset$$),$ret$$;$ret$$=$date$$9_offset$$.h;if(typeof $date$$9_offset$$.m!=="undefined"){$ret$$=$ret$$+(":"+$date$$9_offset$$.m);typeof $date$$9_offset$$.s!=="undefined"&&($ret$$=$ret$$+(":"+$date$$9_offset$$.s))}else $ret$$=$ret$$+":0";return $ret$$};
ilib.TimeZone.prototype.getRawOffset=function $ilib$TimeZone$$getRawOffset$(){var $hours$$1_ret$$=ilib._roundFnc.down(this.offset/60),$minutes$$=Math.abs(this.offset)-Math.abs($hours$$1_ret$$)*60,$hours$$1_ret$$={h:$hours$$1_ret$$};if($minutes$$!=0)$hours$$1_ret$$.m=$minutes$$;return $hours$$1_ret$$};ilib.TimeZone.prototype.getRawOffsetMillis=function $ilib$TimeZone$$getRawOffsetMillis$(){return this.offset*6E4};
ilib.TimeZone.prototype.getRawOffsetStr=function $ilib$TimeZone$$getRawOffsetStr$(){var $off$$=this.getRawOffset();return $off$$.h+":"+($off$$.m||"0")};ilib.TimeZone.prototype.getDSTSavings=function $ilib$TimeZone$$getDSTSavings$(){if(this.isLocal){var $savings$$=Math.abs(this.offsetJan1-this.offsetJun1),$hours$$=ilib._roundFnc.down($savings$$/60);return{h:$hours$$,m:$savings$$-$hours$$*60}}return this.zone&&this.zone.s?this._offsetStringToObj(this.zone.s.v):{h:0}};
ilib.TimeZone.prototype.getDSTSavingsStr=function $ilib$TimeZone$$getDSTSavingsStr$(){if(this.isLocal){var $savings$$=this.getDSTSavings();return $savings$$.h+":"+$savings$$.m}return typeof this.offset!=="undefined"&&this.zone&&this.zone.s?this.zone.s.v:"0:0"};
ilib.TimeZone.prototype._calcRuleStart=function $ilib$TimeZone$$_calcRuleStart$($rule$$,$year$$){var $type$$="=",$weekday$$=0,$cal_day$$2_i$$,$hour$$,$d$$1_minute$$=$hour$$=0,$second$$=0,$time$$;if(typeof $rule$$.j!=="undefined")$hour$$=new ilib.Date.GregRataDie({julianday:$rule$$.j});else{if($rule$$.r.charAt(0)=="l"||$rule$$.r.charAt(0)=="f"){$cal_day$$2_i$$=ilib.Cal.newInstance({type:"gregorian"});$type$$=$rule$$.r.charAt(0);$weekday$$=parseInt($rule$$.r.substring(1),10);$cal_day$$2_i$$=$type$$===
"l"?$cal_day$$2_i$$.getMonLength($rule$$.m,$year$$):1}else{$cal_day$$2_i$$=$rule$$.r.indexOf("<");$cal_day$$2_i$$==-1&&($cal_day$$2_i$$=$rule$$.r.indexOf(">"));if($cal_day$$2_i$$!=-1){$type$$=$rule$$.r.charAt($cal_day$$2_i$$);$weekday$$=parseInt($rule$$.r.substring(0,$cal_day$$2_i$$),10);$cal_day$$2_i$$=parseInt($rule$$.r.substring($cal_day$$2_i$$+1),10)}else $cal_day$$2_i$$=parseInt($rule$$.r,10)}if($rule$$.t){$time$$=$rule$$.t.split(":");$hour$$=parseInt($time$$[0],10);if($time$$.length>1){$d$$1_minute$$=
parseInt($time$$[1],10);$time$$.length>2&&($second$$=parseInt($time$$[2],10))}}$hour$$=new ilib.Date.GregRataDie({year:$year$$,month:$rule$$.m,day:$cal_day$$2_i$$,hour:$hour$$,minute:$d$$1_minute$$,second:$second$$})}$d$$1_minute$$=$hour$$.getRataDie();switch($type$$){case "l":case "<":$d$$1_minute$$=$hour$$.onOrBefore($weekday$$);break;case "f":case ">":$d$$1_minute$$=$hour$$.onOrAfter($weekday$$)}return $d$$1_minute$$};
ilib.TimeZone.prototype._calcDSTSavings=function $ilib$TimeZone$$_calcDSTSavings$(){var $saveParts$$=this.getDSTSavings();this.dstSavings=(Math.abs($saveParts$$.h||0)*60+($saveParts$$.m||0))*ilib.signum($saveParts$$.h||0)};ilib.TimeZone.prototype._getDSTStartRule=function $ilib$TimeZone$$_getDSTStartRule$(){return this.zone.s};ilib.TimeZone.prototype._getDSTEndRule=function $ilib$TimeZone$$_getDSTEndRule$(){return this.zone.e};
ilib.TimeZone.prototype.inDaylightTime=function $ilib$TimeZone$$inDaylightTime$($date$$,$wallTime$$){var $d$$2_offset$$22_rd$$,$dst_startRd_startrule$$,$endRd_endrule$$;if(this.isLocal){$d$$2_offset$$22_rd$$=0;typeof $date$$.dst!=="undefined"&&!$date$$.dst&&($d$$2_offset$$22_rd$$=this.dstSavings*6E4);$d$$2_offset$$22_rd$$=new Date($date$$?$date$$.getTimeExtended()+$d$$2_offset$$22_rd$$:void 0);$dst_startRd_startrule$$=Math.max(this.offsetJan1,this.offsetJun1);return-$d$$2_offset$$22_rd$$.getTimezoneOffset()===
$dst_startRd_startrule$$}$date$$?$date$$ instanceof ilib.Date.GregDate||($date$$=new ilib.Date.GregDate({julianday:$date$$.getJulianDay(),timezone:$date$$.getTimeZone()})):$date$$=new ilib.Date.GregDate;if(!this.useDaylightTime($date$$.year))return false;$d$$2_offset$$22_rd$$=$date$$.rd.getRataDie();$dst_startRd_startrule$$=this._getDSTStartRule($date$$.year);$endRd_endrule$$=this._getDSTEndRule($date$$.year);$dst_startRd_startrule$$=this._calcRuleStart($dst_startRd_startrule$$,$date$$.year);$endRd_endrule$$=
this._calcRuleStart($endRd_endrule$$,$date$$.year);if($wallTime$$)$dst_startRd_startrule$$=$dst_startRd_startrule$$+this.dstSavings/1440;else{$dst_startRd_startrule$$=$dst_startRd_startrule$$-this.offset/1440;$endRd_endrule$$=$endRd_endrule$$-(this.offset+this.dstSavings)/1440}return $d$$2_offset$$22_rd$$<$endRd_endrule$$&&$endRd_endrule$$-$d$$2_offset$$22_rd$$<=this.dstSavings/1440&&typeof $date$$.dst==="boolean"?$date$$.dst:$dst_startRd_startrule$$<$endRd_endrule$$?$d$$2_offset$$22_rd$$>=$dst_startRd_startrule$$&&
$d$$2_offset$$22_rd$$<$endRd_endrule$$?true:false:$d$$2_offset$$22_rd$$>=$dst_startRd_startrule$$||$d$$2_offset$$22_rd$$<$endRd_endrule$$?true:false};ilib.TimeZone.prototype.useDaylightTime=function $ilib$TimeZone$$useDaylightTime$(){return this.isLocal&&this.offsetJan1!==this.offsetJun1||typeof this.zone!=="undefined"&&typeof this.zone.s!=="undefined"&&typeof this.zone.e!=="undefined"};ilib.TimeZone.prototype.getCountry=function $ilib$TimeZone$$getCountry$(){return this.zone.c};
ilib.data.pseudomap={a:"\u00e0",c:"\u00e7",d:"\u00f0",e:"\u00eb",g:"\u011f",h:"\u0125",i:"\u00ed",j:"\u0135",k:"\u0137",l:"\u013e",n:"\u00f1",o:"\u00f5",p:"\u00fe",r:"\u0155",s:"\u0161",t:"\u0163",u:"\u00fc",w:"\u0175",y:"\u00ff",z:"\u017e",A:"\u00c3",B:"\u00df",C:"\u00c7",D:"\u00d0",E:"\u00cb",G:"\u011c",H:"\u0126",I:"\u00cf",J:"\u0134",K:"\u0138",L:"\u013d",N:"\u0147",O:"\u00d8",R:"\u0156",S:"\u0160",T:"\u0164",U:"\u00da",W:"\u0174",Y:"\u0176",Z:"\u017b"};
ilib.ResBundle=function $ilib$ResBundle$($options$$){var $lookupLocale$$,$spec$$;this.locale=new ilib.Locale;this.baseName="strings";this.type="text";this.loadParams={};this.missing="source";this.sync=true;if($options$$){if($options$$.locale)this.locale=typeof $options$$.locale==="string"?new ilib.Locale($options$$.locale):$options$$.locale;if($options$$.name)this.baseName=$options$$.name;if($options$$.type)this.type=$options$$.type;this.lengthen=$options$$.lengthen||false;if(typeof $options$$.sync!==
"undefined")this.sync=$options$$.sync==true;if(typeof $options$$.loadParams!=="undefined")this.loadParams=$options$$.loadParams;if(typeof $options$$.missing!=="undefined"&&($options$$.missing==="pseudo"||$options$$.missing==="empty"))this.missing=$options$$.missing}this.map={};ilib.ResBundle[this.baseName]||(ilib.ResBundle[this.baseName]={});$lookupLocale$$=this.locale.isPseudo()?new ilib.Locale("en-US"):this.locale;ilib.loadData({object:ilib.ResBundle[this.baseName],locale:$lookupLocale$$,name:this.baseName+
".json",sync:this.sync,loadParams:this.loadParams,callback:ilib.bind(this,function($map$$){if(!$map$$){$map$$=ilib.data[this.baseName]||{};$spec$$=$lookupLocale$$.getSpec().replace(/-/g,"_");ilib.ResBundle[this.baseName].cache[$spec$$]=$map$$}this.map=$map$$;if(this.locale.isPseudo()){if(!ilib.ResBundle.pseudomap)ilib.ResBundle.pseudomap={};this._loadPseudo(this.locale,$options$$.onLoad)}else if(this.missing==="pseudo"){if(!ilib.ResBundle.pseudomap)ilib.ResBundle.pseudomap={};new ilib.LocaleInfo(this.locale,
{sync:this.sync,loadParams:this.loadParams,onLoad:ilib.bind(this,function($li$$){this._loadPseudo(new ilib.Locale("zxx","XX",void 0,$li$$.getDefaultScript()),$options$$.onLoad)})})}else if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad(this)})})};ilib.ResBundle.defaultPseudo=ilib.data.pseudomap||{a:"\u00e0",e:"\u00eb",i:"\u00ed",o:"\u00f5",u:"\u00fc",y:"\u00ff",A:"\u00c3",E:"\u00cb",I:"\u00cf",O:"\u00d8",U:"\u00da",Y:"\u0176"};
ilib.ResBundle.prototype={_loadPseudo:function $ilib$ResBundle$$_loadPseudo$($pseudoLocale$$,$onLoad$$){ilib.loadData({object:ilib.ResBundle.pseudomap,locale:$pseudoLocale$$,name:"pseudomap.json",sync:this.sync,loadParams:this.loadParams,callback:ilib.bind(this,function($map$$){if(!$map$$||ilib.isEmpty($map$$)){var $map$$=ilib.ResBundle.defaultPseudo,$spec$$=$pseudoLocale$$.getSpec().replace(/-/g,"_");ilib.ResBundle.pseudomap.cache[$spec$$]=$map$$}this.pseudomap=$map$$;typeof $onLoad$$==="function"&&
$onLoad$$(this)})})},getLocale:function $ilib$ResBundle$$getLocale$(){return this.locale},getName:function $ilib$ResBundle$$getName$(){return this.baseName},getType:function $ilib$ResBundle$$getType$(){return this.type},pseudo:function $ilib$ResBundle$$pseudo$($str$$){if($str$$){var $ret$$="",$i$$;for($i$$=0;$i$$<$str$$.length;$i$$++)if(this.type!=="raw"){if(this.type==="html"||this.type==="xml")if($str$$.charAt($i$$)==="<"){for($ret$$=$ret$$+$str$$.charAt($i$$++);$i$$<$str$$.length&&$str$$.charAt($i$$)!==
">";)$ret$$=$ret$$+$str$$.charAt($i$$++);$i$$<$str$$.length&&($ret$$=$ret$$+$str$$.charAt($i$$++))}else if($str$$.charAt($i$$)==="&"){for($ret$$=$ret$$+$str$$.charAt($i$$++);$i$$<$str$$.length&&$str$$.charAt($i$$)!==";"&&$str$$.charAt($i$$)!==" ";)$ret$$=$ret$$+$str$$.charAt($i$$++);$i$$<$str$$.length&&($ret$$=$ret$$+$str$$.charAt($i$$++))}if($i$$<$str$$.length)if($str$$.charAt($i$$)==="{"){for($ret$$=$ret$$+$str$$.charAt($i$$++);$i$$<$str$$.length&&$str$$.charAt($i$$)!=="}";)$ret$$=$ret$$+$str$$.charAt($i$$++);
$i$$<$str$$.length&&($ret$$=$ret$$+$str$$.charAt($i$$))}else $ret$$=$ret$$+(this.pseudomap[$str$$.charAt($i$$)]||$str$$.charAt($i$$))}else $ret$$=$ret$$+(this.pseudomap[$str$$.charAt($i$$)]||$str$$.charAt($i$$));if(this.lengthen)for($i$$=($ret$$.length<=20?Math.round($ret$$.length/2):$ret$$.length>20&&$ret$$.length<=40?Math.round($ret$$.length/3):Math.round($ret$$.length/5))-1;$i$$>=0;$i$$--)$ret$$=$ret$$+$i$$%10;if(this.locale.getScript()==="Hans"||this.locale.getScript()==="Hant"||this.locale.getScript()===
"Hani"||this.locale.getScript()==="Hrkt"||this.locale.getScript()==="Jpan"||this.locale.getScript()==="Hira"||this.locale.getScript()==="Kana")$ret$$=$ret$$.replace(/ /g,"");return $ret$$}},escapeXml:function $ilib$ResBundle$$escapeXml$($str$$){$str$$=$str$$.replace(/&/g,"&amp;");$str$$=$str$$.replace(/</g,"&lt;");return $str$$=$str$$.replace(/>/g,"&gt;")},unescapeXml:function $ilib$ResBundle$$unescapeXml$($str$$){$str$$=$str$$.replace(/&amp;/g,"&");$str$$=$str$$.replace(/&lt;/g,"<");return $str$$=
$str$$.replace(/&gt;/g,">")},makeKey:function $ilib$ResBundle$$makeKey$($key$$13_source$$){$key$$13_source$$=$key$$13_source$$.replace(/\s+/gm," ");return this.type==="xml"||this.type==="html"?this.unescapeXml($key$$13_source$$):$key$$13_source$$},getString:function $ilib$ResBundle$$getString$($source$$,$key$$,$escapeMode_ret$$){if(!$source$$&&!$key$$)return new ilib.String("");if(this.locale.isPseudo())$source$$=this.pseudo(($source$$?$source$$:this.map[$key$$])||$key$$);else var $keyName$$=$key$$||
this.makeKey($source$$),$source$$=typeof this.map[$keyName$$]!=="undefined"?this.map[$keyName$$]:this.missing==="pseudo"?this.pseudo($source$$||$key$$):this.missing==="empty"?"":$source$$;if($escapeMode_ret$$&&$escapeMode_ret$$!=="none"){if($escapeMode_ret$$=="default")$escapeMode_ret$$=this.type;if($escapeMode_ret$$==="xml"||$escapeMode_ret$$==="html")$source$$=this.escapeXml($source$$);else if($escapeMode_ret$$=="js"||$escapeMode_ret$$==="attribute")$source$$=$source$$.replace(/'/g,"\\'").replace(/"/g,
'\\"')}if($source$$!==void 0){$escapeMode_ret$$=new ilib.String($source$$);$escapeMode_ret$$.setLocale(this.locale.getSpec(),true,this.loadParams);return $escapeMode_ret$$}},getStringJS:function $ilib$ResBundle$$getStringJS$($source$$,$key$$,$escapeMode$$){return this.getString($source$$,$key$$,$escapeMode$$).toString()},containsKey:function $ilib$ResBundle$$containsKey$($source$$,$key$$){return typeof $source$$==="undefined"&&typeof $key$$==="undefined"?false:typeof this.map[$key$$||this.makeKey($source$$)]!==
"undefined"},getResObj:function $ilib$ResBundle$$getResObj$(){return this.map}};ilib.shallowCopy=function $ilib$shallowCopy$($source$$,$target$$){var $prop$$=void 0;if($source$$&&$target$$)for($prop$$ in $source$$)$prop$$!==void 0&&typeof $source$$[$prop$$]!=="undefined"&&($target$$[$prop$$]=$source$$[$prop$$])};
ilib.deepCopy=function $ilib$deepCopy$($from$$,$to$$){for(var $prop$$ in $from$$)if($prop$$)if(typeof $from$$[$prop$$]==="object"){$to$$[$prop$$]={};ilib.deepCopy($from$$[$prop$$],$to$$[$prop$$])}else $to$$[$prop$$]=$from$$[$prop$$];return $to$$};ilib.mapString=function $ilib$mapString$($str$$,$map$$){var $mapped$$="";if($map$$&&$str$$)for(var $i$$=0;$i$$<$str$$.length;$i$$++)var $c$$=$str$$.charAt($i$$),$mapped$$=$mapped$$+($map$$[$c$$]||$c$$);else $mapped$$=$str$$;return $mapped$$};
ilib.indexOf=function $ilib$indexOf$($array$$,$obj$$){if(!$array$$||!$obj$$)return-1;if(typeof $array$$.indexOf==="function")return $array$$.indexOf($obj$$);for(var $i$$=0;$i$$<$array$$.length;$i$$++)if($array$$[$i$$]===$obj$$)return $i$$;return-1};
ilib.toHexString=function $ilib$toHexString$($string$$,$limit$$){var $i$$,$result$$="",$lim$$=$limit$$&&$limit$$<9?$limit$$:4;if(!$string$$)return"";for($i$$=0;$i$$<$string$$.length;$i$$++)var $ch$$=$string$$.charCodeAt($i$$).toString(16),$result$$=$result$$+("00000000".substring(0,$lim$$-$ch$$.length)+$ch$$);return $result$$.toUpperCase()};
ilib.data.dateformats={gregorian:{order:"{date} {time}",date:{dmwy:{s:"EE d/M/yy",m:"EEE d/MM/yyyy",l:"EEE d MMM yyyy",f:"EEEE d MMMM yyyy"},dmy:{s:"d/M/yy",m:"d/MM/yyyy",l:"d MMM yyyy",f:"d MMMM yyyy"},dmw:{s:"EE d/M",m:"EE d/MM",l:"EEE d MMM",f:"EEEE d MMMM"},dm:{s:"d/M",m:"d/MM",l:"d MMM",f:"d MMMM"},my:{s:"M/yy",m:"MM/yyyy",l:"MMM yyyy",f:"MMMM yyyy"},dw:{s:"EE d",m:"EE d",l:"EEE d",f:"EEEE d"},d:"dd",m:{s:"M",m:"MM",l:"MMM",f:"MMMM"},y:{s:"yy",m:"yyyy",l:"yyyy",f:"yyyy"},n:{s:"N",m:"NN",l:"MMM",
f:"MMMM"},w:{s:"E",m:"EE",l:"EEE",f:"EEEE"}},time:{12:{ahmsz:"h:mm:ssa z",ahms:"h:mm:ssa",hmsz:"h:mm:ss z",hms:"h:mm:ss",ahmz:"h:mma z",ahm:"h:mma",hmz:"h:mm z",ah:"ha",hm:"h:mm",ms:"mm:ss",h:"h",m:"mm",s:"ss"},24:{ahmsz:"H:mm:ss z",ahms:"H:mm:ss",hmsz:"H:mm:ss z",hms:"H:mm:ss",ahmz:"H:mm z",ahm:"H:mm",hmz:"H:mm z",ah:"H",hm:"H:mm",ms:"mm:ss",h:"H",m:"mm",s:"ss"}},range:{c00:{s:"{st} - {et} {sd}/{sm}/{sy}",m:"{st} - {et}, {sd}/{sm}/{sy}",l:"{st} - {et}, {sd} {sm} {sy}",f:"{st} - {et}, {sd} {sm} {sy}"},
c01:{s:"{sd}/{sm}/{sy} {st} - {ed}/{em}/{ey} {et}",m:"{sd}/{sm} {st} - {ed}/{em} {et}, {sy}",l:"{sd} {st} - {ed} {et}, {sm} {sy}",f:"{sd} {st} - {ed} {et}, {sm} {sy}"},c02:{s:"{sd}/{sm}/{sy} {st} - {ed}/{em}/{ey} {et}",m:"{sd}/{sm} {st} - {ed}/{em} {et}, {sy}",l:"{sd} {sm} {st} - {ed} {em} {et}, {sy}",f:"{sd} {sm} {st} - {ed} {em} {et}, {sy}"},c03:{s:"{sd}/{sm}/{sy} {st} - {ed}/{em}/{ey} {et}",m:"{sd}/{sm}/{sy} {st} - {ed}/{em}/{ey} {et}",l:"{sd} {sm} {sy} {st} - {ed} {em} {ey} {et}",f:"{sd} {sm} {sy} {st} - {ed} {em} {ey} {et}"},
c10:{s:"{sd}-{ed}/{sm}/{sy}",m:"{sd}-{ed}/{sm}/{sy}",l:"{sd}-{ed} {sm} {sy}",f:"{sd}-{ed} {sm} {sy}"},c11:{s:"{sd}/{sm}-{ed}/{em} {sy}",m:"{sd}/{sm} - {ed}/{em} {sy}",l:"{sd} {sm} - {ed} {em} {sy}",f:"{sd} {sm} - {ed} {em} {sy}"},c12:{s:"{sd}/{sm}/{sy}-{ed}/{em}/{ey}",m:"{sd}/{sm}/{sy} - {ed}/{em}/{ey}",l:"{sd} {sm} {sy} - {ed} {em} {ey}",f:"{sd} {sm} {sy} - {ed} {em} {ey}"},c20:{s:"{sm}/{sy}-{em}/{ey}",m:"{sm}/{sy} - {em}/{ey}",l:"{sm} {sy} - {em} {ey}",f:"{sm} {sy} - {em} {ey}"},c30:"{sy} - {ey}"}},
islamic:"gregorian",hebrew:"gregorian",julian:"gregorian",thaisolar:"gregorian",persian:"gregorian","persian-algo":"gregorian",han:"gregorian",ethiopic:{order:"{date} {time}",date:{dmwy:{s:"E, dd/MM/yyyy",m:"EE, d MMM yyyy",l:"EEE, d MMM yyyy",f:"EEEE, d MMMM yyyy"},dmy:{s:"dd/MM/yyyy",m:"d MMM yyyy",l:"d MMM yyyy",f:"d MMMM yyyy"},dmw:{s:"E, dd/MM",m:"EE, d MMM",l:"EEE, d MMM",f:"EEEE, d MMMM"},dm:{s:"MM/dd",m:"MMM d",l:"MMM d",f:"MMMM d"},my:{s:"MM/yyyy",m:"MMM yyyy",l:"MMM yyyy",f:"MMMM yyyy"},
dw:{s:"E d",m:"EE d",l:"EEE d",f:"EEEE d"},d:"d",m:{s:"MM",m:"MMM",l:"MMM",f:"MMMM"},y:{s:"yyyy",m:"yyyy",l:"yyyy",f:"yyyy"},n:{s:"N",m:"NN",l:"MMM",f:"MMMM"},w:{s:"E",m:"EE",l:"EEE",f:"EEEE"}},time:{12:{ahmsz:"h:mm:ss a z",ahms:"h:mm:ss a",hmsz:"h:mm:ss z",hms:"h:mm:ss",ahmz:"h:mm a z",ahm:"h:mm a",hmz:"h:mm z",ah:"h a",hm:"h:mm",ms:"mm:ss",h:"h",m:"mm",s:"ss"},24:{ahmsz:"H:mm:ss z",ahms:"H:mm:ss",hmsz:"H:mm:ss z",hms:"H:mm:ss",ahmz:"H:mm z",ahm:"H:mm",hmz:"H:mm z",ah:"H",hm:"H:mm",ms:"mm:ss",h:"H",
m:"mm",s:"ss"}},range:{c00:{s:"{st} \u2013 {et} {sd}/{sm}/{sy}",m:"{st} \u2013 {et}, {sd} {sm} {sy}",l:"{st} \u2013 {et}, {sd} {sm} {sy}",f:"{st} \u2013 {et}, {sd} {sm} {sy}"},c01:{s:"{sd}/{sm}/{sy} {st} \u2013 {ed}/{em}/{ey} {et}",m:"{sd} {sm} {st} \u2013 {ed} {em} {et} {sy}",l:"{sd} {st} \u2013 {ed} {et} {sm} {sy}",f:"{sd} {st} \u2013 {ed} {et} {sm} {sy}"},c02:{s:"{sd}/{sm}/{sy} {st} \u2013 {ed}/{em}/{ey} {et}",m:"{sd} {sm} {st} \u2013 {ed} {em} {et} {sy}",l:"{sd} {sm} {st} \u2013 {ed} {em} {et} {sy}",
f:"{sd} {sm} {st} \u2013 {ed} {em} {et} {sy}"},c03:{s:"{sd}/{sm}/{sy} {st} \u2013 {ed}/{em}/{ey} {et}",m:"{sd} {sm} {sy} {st} \u2013 {ed} {em} {ey} {et}",l:"{sd} {sm} {sy} {st} \u2013 {ed} {em} {ey} {et}",f:"{sd} {sm} {sy} {st} \u2013 {ed} {em} {ey} {et}"},c10:{s:"{sd}\u2013{ed}/{sm}/{sy}",m:"{sd}\u2013{ed} {sm} {sy}",l:"{sd}\u2013{ed} {sm} {sy}",f:"{sd}\u2013{ed} {sm} {sy}"},c11:{s:"{sd}/{sm}/{sy} \u2013 {ed}/{em}/{ey}",m:"{sd} {sm} \u2013 {ed} {em} {sy}",l:"{sd} {sm} \u2013 {ed} {em} {sy}",f:"{sd} {sm} \u2013 {ed} {em} {sy}"},
c12:{s:"{sd}/{sm}/{sy}\u2013{ed}/{em}/{ey}",m:"{sd} {sm} {sy} \u2013 {ed} {em} {ey}",l:"{sd} {sm} {sy} \u2013 {ed} {em} {ey}",f:"{sd} {sm} {sy} \u2013 {ed} {em} {ey}"},c20:{s:"{sm}/{sy}\u2013{em}/{ey}",m:"{sm} {sy} \u2013 {em} {ey}",l:"{sm} {sy} \u2013 {em} {ey}",f:"{sm} {sy} \u2013 {em} {ey}"},c30:"{sy} \u2013 {ey}"}},coptic:"gregorian"};
ilib.data.dateformats_en_CA={gregorian:{date:{dmwy:{l:"EEE d MMM, yyyy",f:"EEEE d MMMM, yyyy"},dmy:{l:"d MMM, yyyy",f:"d MMMM, yyyy"}},range:{c00:{l:"{st} - {et}, {sd} {sm}, {sy}",f:"{st} - {et}, {sd} {sm}, {sy}"},c01:{l:"{sd} {st} - {ed} {et} {sm}, {sy}",f:"{sd} {st} - {ed} {et} {sm}, {sy}"},c10:{l:"{sd}-{ed} {sm}, {sy}",f:"{sd}-{ed} {sm}, {sy}"},c11:{l:"{sd} {sm} - {ed} {em}, {sy}",f:"{sd} {sm} - {ed} {em}, {sy}"},c12:{l:"{sd} {sm}, {sy} - {ed} {em}, {ey}",f:"{sd} {sm}, {sy} - {ed} {em}, {ey}"},
c20:{l:"{sm}, {sy} - {em}, {ey}",f:"{sm}, {sy} - {em}, {ey}"}}}};
ilib.data.dateformats_en_US={gregorian:{date:{dmwy:{s:"EE M/d/yy",m:"EEE M/dd/yyyy",l:"EEE MMM d, yyyy",f:"EEEE MMMM d, yyyy"},dmy:{s:"M/d/yy",m:"M/d/yyyy",l:"MMM d, yyyy",f:"MMMM d, yyyy"},dmw:{s:"EE M/d",m:"EE M/d",l:"EEE MMM d",f:"EEEE MMMM d"},dm:{s:"M/d",m:"M/d",l:"MMM d",f:"MMMM d"}},range:{c00:{s:"{st} - {et} {sm}/{sd}/{sy}",m:"{st} - {et}, {sm}/{sd}/{sy}",l:"{st} - {et}, {sm} {sd}, {sy}",f:"{st} - {et}, {sm} {sd}, {sy}"},c01:{s:"{sm}/{sd}/{sy} {st} - {em}/{ed}/{ey} {et}",m:"{sm}/{sd}/{sy} {st} - {em}/{ed}/{ey} {et}",
l:"{sm} {sd} {st} - {ed} {et}, {sy}",f:"{sm} {sd} {st} - {ed} {et}, {sy}"},c02:{s:"{sm}/{sd}/{sy} {st} - {em}/{ed}/{ey} {et}",m:"{sm}/{sd} {st} - {em}/{ed} {et}, {sy}",l:"{sm} {sd} {st} - {em} {ed} {et}, {sy}",f:"{sm} {sd} {st} - {em} {ed} {et}, {sy}"},c03:{s:"{sm}/{sd}/{sy} {st} - {em}/{ed}/{ey} {et}",m:"{sm}/{sd}/{sy} {st} - {em}/{ed}/{ey} {et}",l:"{sm} {sd}, {sy} {st} - {em} {ed}, {ey} {et}",f:"{sm} {sd}, {sy} {st} - {em} {ed}, {ey} {et}"},c10:{s:"{sm}/{sd}/{sy} - {em}/{ed}/{ey}",m:"{sm}/{sd}/{sy} - {em}/{ed}/{ey}",
l:"{sm} {sd}-{ed}, {sy}",f:"{sm} {sd}-{ed}, {sy}"},c11:{s:"{sm}/{sd}/{sy} - {em}/{ed}/{ey}",m:"{sm}/{sd} - {em}/{ed}, {sy}",l:"{sm} {sd} - {em} {ed}, {sy}",f:"{sm} {sd} - {em} {ed}, {sy}"},c12:{s:"{sm}/{sd}/{sy} - {em}/{ed}/{ey}",m:"{sm}/{sd}/{sy} - {em}/{ed}/{ey}",l:"{sm} {sd}, {sy} - {em} {ed}, {ey}",f:"{sm} {sd}, {sy} - {em} {ed}, {ey}"},c20:{s:"{sm}/{sy} - {em}/{ey}",m:"{sm}/{sy} - {em}/{ey}",l:"{sm} {sy} - {em} {ey}",f:"{sm} {sy} - {em} {ey}"},c30:"{sy} - {ey}"}}};
ilib.data.dateformats_en_ZA={gregorian:{order:"{date} {time}",date:{dmwy:{s:"E yy/MM/dd",m:"EE yyyy/MM/dd",l:"EEE dd MMM yy",f:"EEEE dd MMMM yyyy"},dmy:{s:"yy/MM/dd",m:"yyyy/MM/dd",l:"dd MMM yy",f:"dd MMMM yyyy"},dmw:{s:"E MM/dd",m:"EE MM/dd",l:"EEE dd MMM",f:"EEEE dd MMMM"},dm:{s:"MM/dd",m:"MM/dd",l:"dd MMM",f:"dd MMMM"},my:{s:"yy/MM",m:"yyyy/MM",l:"MMM yy",f:"MMMM yyyy"},d:{s:"dd",m:"dd",l:"dd",f:"dd"},m:{s:"M",m:"MM",l:"MMM",f:"MMMM"},y:{s:"yy",m:"yy",l:"yyyy",f:"yyyy"},n:{s:"N",m:"NN",l:"MMM",
f:"MMMM"}},time:{12:{ahmsz:"h:mm:ss a Z",ahms:"h:mm:ss a ",hmsz:"h:mm:ss Z",ahmz:"h:mm a Z",ahm:"h:mm a",hmz:"h:mm Z",ah:"h a"},24:{ahmsz:"H:mm:ss Z",hmsz:"H:mm:ss Z",ahmz:"H:mm Z",hmz:"H:mm Z",h:"H"}},range:{c00:{s:"{sy}/{sm}/{sd}, {st} - {et}",m:"{sy}/{sm}/{sd}, {st} - {et}",l:"{sd} {sm} {sy}, {st} - {et}",f:"{sd} {sm} {sy}, {st} - {et}"},c01:{s:"{sy}/{sm}/{sd} {st} \u2013 {ed} {et}",m:"{sy}/{sm}/{sd} {st} \u2013 {ed} {et}",l:"{sd} {sm} {sy} {st} \u2013 {ed} {em} {et}",f:"{sd} {sm} {sy} {st} \u2013 {ed} {em} {et}"},
c02:{s:"{sm}/{sd} {st} - {em}/{ed} {et}, {sy}",m:"{sm}/{sd} {st} - {em}/{ed} {et}, {sy}",l:"{sd} {sm} {st} - {ed} {em} {et}, {sy}",f:"{sd} {sm} {st} - {ed} {em} {et}, {sy}"},c03:{s:"{sy}/{sm}/{sd} {st} - {ey}/{em}/{ed} {et}",m:"{sy}/{sm}/{sd} {st} - {ey}/{em}/{ed} {et}",l:"{sd} {sm} {sy}, {st} - {ed} {em} {ey}, {et}",f:"{sd} {sm} {sy}, {st} - {ed} {em} {ey}, {et}"},c10:{s:"{sy}/{sm}/{sd} \u2013 {ed}",m:"{sy}/{sm}/{sd} \u2013 {ed}",l:"{sd} \u2013 {ed} {sm} {sy}",f:"{sd} \u2013 {ed} {sm} {sy}"},c11:{s:"{sy}/{sm}/{sd} \u2013 {em}/{ed}",
m:"{sy}/{sm}/{sd} \u2013 {em}/{ed}",l:"{sd} {sm} \u2013 {ed} {em} {sy}",f:"{sd} {sm} \u2013 {ed} {em} {sy}"},c12:{s:"{sy}/{sm}/{sd} \u2013 {ey}/{em}/{ed}",m:"{sy}/{sm}/{sd} \u2013 {ey}/{em}/{ed}",l:"{sd} {sm} {sy} \u2013 {ed} {em} {ey}",f:"{sd} {sm} {sy} \u2013 {ed} {em} {ey}"},c20:{s:"{sy}/{sm} \u2013 {ey}/{em}",m:"{sy}/{sm} \u2013 {ey}/{em}",l:"{sm} {sy} \u2013 {em} {ey}",f:"{sm} {sy} \u2013 {em} {ey}"},c30:"{sy} \u2013 {ey}"}}};
ilib.data.dateformats_de={gregorian:{order:"{time} {date}",date:{dmwy:{s:"EE dd.MM.yy",m:"EE dd.MM.yyyy",l:"EEE dd. MMM yyyy",f:"EEEE dd. MMMM yyyy"},dmy:{s:"dd.MM.yy",m:"dd.MM.yyyy",l:"dd. MMM yyyy",f:"dd. MMMM yyyy"},dmw:{s:"EE dd.MM",m:"EE dd.MM",l:"EEE dd. MMM",f:"EEEE dd. MMMM"},dm:{s:"dd.MM",m:"dd.MM",l:"dd. MMM",f:"dd. MMMM"},my:{s:"MM.yy",m:"MM.yyyy",l:"MMM yyyy",f:"MMMM yyyy"},dw:{s:"EE dd",m:"EEE dd",l:"EEE dd",f:"EEEE dd"},d:"dd.",m:{s:"MM",m:"MM",l:"MMM",f:"MMMM"},y:{s:"yy",m:"yyyy",l:"yyyy",
f:"yyyy"},n:{s:"N",m:"NN",l:"MMM",f:"MMMM"}},time:{12:{ahmsz:"hh:mm:ss a z",ahms:"hh:mm:ss a",hmsz:"hh:mm:ss z",hms:"hh:mm:ss",ahmz:"hh:mm a z",ahm:"hh:mm a",hmz:"hh:mm z",ah:"hh a",hm:"hh:mm",h:"hh"},24:{ahmsz:"HH:mm:ss z",ahms:"HH:mm:ss",hmsz:"HH:mm:ss z",hms:"HH:mm:ss",ahmz:"HH:mm z",ahm:"HH:mm",hmz:"HH:mm z",ah:"HH",hm:"HH:mm",h:"HH"}},range:{c00:{s:"{st} - {et} {sd}{sm}.{sy}",m:"{st} - {et} {sd}{sm}.{sy}",l:"{st} - {et} {sd} {sm} {sy}",f:"{st} - {et} {sd} {sm} {sy}"},c01:{s:"{st} {sd}{sm}.{sy} - {et} {ed}{em}.{ey}",
m:"{st} {sd}{sm} - {et} {ed}{em} {sy}",l:"{st} {sd} {sm} - {et} {ed} {em} {sy}",f:"{st} {sd} {sm} - {et} {ed} {em} {sy}"},c02:{s:"{st} {sd}{sm}.{sy} - {et} {ed}{em}.{ey}",m:"{st} {sd}{sm} - {et} {ed}{em} {sy}",l:"{st} {sd} {sm} - {et} {ed} {em} {sy}",f:"{st} {sd} {sm} - {et} {ed} {em} {sy}"},c03:{s:"{st} {sd}{sm}.{sy} - {et} {ed}{em}.{ey}",m:"{st} {sd}{sm}.{sy} - {et} {ed}{em}.{ey}",l:"{st} {sd} {sm} {sy} - {et} {ed} {em} {ey}",f:"{st} {sd} {sm} {sy} - {et} {ed} {em} {ey}"},c10:{s:"{sd}{sm}.{sy} - {ed}{em}.{ey}",
m:"{sd}{sm}.{sy} - {ed}{em}.{ey}",l:"{sd}-{ed} {sm} {sy}",f:"{sd}-{ed} {sm} {sy}"},c11:{s:"{sd}{sm}.{sy} - {ed}{em}.{ey}",m:"{sd}{sm} - {ed}{em} {sy}",l:"{sd} {sm} - {ed} {em} {sy}",f:"{sd} {sm} - {ed} {em} {sy}"},c12:{s:"{sd}{sm}.{sy} - {ed}{em}.{ey}",m:"{sd}{sm}.{sy} - {ed}{em}.{ey}",l:"{sd} {sm} {sy} - {ed} {em} {ey}",f:"{sd} {sm} {sy} - {ed} {em} {ey}"},c20:{s:"{sm}.{sy} - {em}.{ey}",m:"{sm}.{sy} - {em}.{ey}",l:"{sm} {sy} - {em} {ey}",f:"{sm} {sy} - {em} {ey}"},c30:"{sy} - {ey}"}}};
ilib.data.dateformats_fr={gregorian:{order:"{time} {date}",date:{dmwy:{s:"EE d/MM/yy",m:"EE d/MM/yyyy",l:"EEE d MMM yyyy",f:"EEEE d MMMM yyyy"},dmy:{s:"d/MM/yy",m:"d/MM/yyyy",l:"d MMM yyyy",f:"d MMMM yyyy"},dmw:{s:"EE d/MM",m:"EE d/MM",l:"EEE d MMM",f:"EEEE d MMMM"},dm:{s:"d/MM",m:"d/MM",l:"d MMM",f:"d MMMM"},my:{s:"MM/yy",m:"MM/yyyy",l:"MMM yyyy",f:"MMMM yyyy"},d:"dd",m:{s:"MM",m:"MM",l:"MMM",f:"MMMM"},y:{s:"yy",m:"yyyy",l:"yyyy",f:"yyyy"},n:{s:"N",m:"NN",l:"MMM",f:"MMMM"}},time:{12:{ahmsz:"hh:mm:ss a z",
ahms:"hh:mm:ss a",hmsz:"hh:mm:ss z",hms:"hh:mm:ss",ahmz:"hh:mm a z",ahm:"hh:mm a",hmz:"hh:mm z",ah:"hh a",hm:"hh:mm",h:"hh"},24:{ahmsz:"HH:mm:ss z",ahms:"HH:mm:ss",hmsz:"HH:mm:ss z",hms:"HH:mm:ss",ahmz:"HH:mm z",ahm:"HH:mm",hmz:"HH:mm z",ah:"HH",hm:"HH:mm",h:"HH"}},range:{c00:{s:"{st} - {et} {sd}/{sm}/{sy}",m:"{st} - {et} {sd}/{sm}/{sy}",l:"{st} - {et} {sd} {sm} {sy}",f:"{st} - {et} {sd} {sm} {sy}"},c01:{s:"{st} {sd}/{sm} - {et} {ed}/{em}/{ey}",m:"{st} {sd}/{sm} - {et} {ed}/{em}/{sy}",l:"{st} {sd} {sm} - {et} {ed} {em} {sy}",
f:"{st} {sd} {sm} - {et} {ed} {em} {sy}"},c02:{s:"{st} {sd}/{sm} - {et} {ed}/{em}/{ey}",m:"{st} {sd}/{sm} - {et} {ed}/{em}/{sy}",l:"{st} {sd} {sm} - {et} {ed} {em} {sy}",f:"{st} {sd} {sm} - {et} {ed} {em} {sy}"},c03:{s:"{st} {sd}/{sm}/{sy} - {et} {ed}/{em}/{ey}",m:"{st} {sd}/{sm}/{sy} - {et} {ed}/{em}/{ey}",l:"{st} {sd} {sm} {sy} - {et} {ed} {em} {ey}",f:"{st} {sd} {sm} {sy} - {et} {ed} {em} {ey}"},c10:{s:"{sd}/{sm}/{sy} - {ed}/{em}/{ey}",m:"{sd}/{sm}/{sy} - {ed}/{em}/{ey}",l:"{sd}-{ed} {sm} {sy}",
f:"{sd}-{ed} {sm} {sy}"},c11:{s:"{sd}/{sm} - {ed}/{em}/{ey}",m:"{sd}/{sm} - {ed}/{em}/{sy}",l:"{sd} {sm} - {ed} {em} {sy}",f:"{sd} {sm} - {ed} {em} {sy}"},c12:{s:"{sd}/{sm}/{sy} - {ed}/{em}/{ey}",m:"{sd}/{sm}/{sy} - {ed}/{em}/{ey}",l:"{sd} {sm} {sy} - {ed} {em} {ey}",f:"{sd} {sm} {sy} - {ed} {em} {ey}"},c20:{s:"{sm}/{sy} - {em}/{ey}",m:"{sm}/{sy} - {em}/{ey}",l:"{sm} {sy} - {em} {ey}",f:"{sm} {sy} - {em} {ey}"},c30:"{sy} - {ey}"}}};
ilib.data.dateformats_es={gregorian:{order:"{date} {time}",date:{dmwy:{s:"EE dd/MM/yy",m:"EEE dd/MM/yyyy",l:"EEE dd 'de' MMM yyyy",f:"EEEE dd 'de' MMMM yyyy"},dmy:{s:"dd/MM/yy",m:"dd/MM/yyyy",l:"dd 'de' MMM yyyy",f:"dd 'de' MMMM yyyy"},dmw:{s:"EE dd/MM",m:"EE dd/MM",l:"EEE dd 'de' MMM",f:"EEEE dd 'de' MMMM"},dm:{s:"dd/MM",m:"dd/MM",l:"dd 'de' MMM",f:"dd 'de' MMMM"},my:{s:"MM/yy",m:"MM/yyyy",l:"MMM yy",f:"MMMM yyyy"},dw:{s:"EE dd",m:"EEE dd",l:"EEE dd",f:"EEEE dd"},d:"dd",m:{s:"M",m:"MM",l:"MMM",f:"MMMM"},
y:{s:"yy",m:"yy",l:"yyyy",f:"yyyy G"},n:{s:"N",m:"NN",l:"MMM",f:"MMMM"}},time:{12:{ahmsz:"hh:mm:ssa z",ahms:"hh:mm:ssa",hmsz:"hh:mm:ss z",hms:"hh:mm:ss",ahmz:"hh:mma z",ahm:"hh:mma",hmz:"hh:mm z",ah:"hha",hm:"hh:mm",h:"hh"},24:{ahmsz:"HH:mm:ss z",ahms:"HH:mm:ss",hmsz:"HH:mm:ss z",hms:"HH:mm:ss",ahmz:"HH:mm z",ahm:"HH:mm",hmz:"HH:mm z",ah:"HH",hm:"HH:mm",h:"HH"}}}};
ilib.data.dateformats_es_AR={gregorian:{time:{12:{ahmsz:"hh'h'mm:ss a Z",ahms:"hh'h'mm:ss a",hmsz:"hh'h'mm:ss Z",ahmz:"hh'h'mm a Z",hms:"hh'h'mm:ss",ahm:"hh'h'mm a",hmz:"hh'h'mm Z",ah:"hh a",hm:"hh'h'mm"},24:{ahmsz:"HH'h'mm:ss Z",ahms:"HH'h'mm:ss",hmsz:"HH'h'mm:ss Z",ahmz:"HH'h'mm Z",hms:"HH'h'mm:ss",ahm:"HH'h'mm",hmz:"HH'h'mm Z",hm:"HH'h'mm"}}}};
ilib.data.dateformats_id={gregorian:{date:{dmwy:{s:"E d/M/yy",m:"EE, d/M/yyyy",l:"EEE, d MMM yyyy",f:"EEEE, d MMMM yyyy"},dmy:{s:"d/M/yy",m:"d/M/yyyy",l:"d MMM yyyy",f:"d MMMM yyyy"},dmw:{s:"E d/M",m:"EE, d/M",l:"EEE, d MMM",f:"EEEE, d MMMM"},dm:{s:"d/M",m:"d/M",l:"d MMM",f:"d MMMM"},my:{s:"M/yy",m:"M/yyyy",l:"MMM yyyy",f:"MMMM yyyy"},dw:{s:"E d",m:"EE, d",l:"EEE, d",f:"EEEE, d"},d:{s:"d",m:"d",l:"d",f:"d"},m:{s:"M",m:"M",l:"MMM",f:"MMMM"},y:{s:"yy",m:"yyyy",l:"yyyy",f:"yyyy"},n:{s:"N",m:"N",l:"MMM",
f:"MMMM"}},range:{c00:{s:"{sd}/{sm}/{sy} {st} \u2013 {et}",m:"{sd}/{sm}/{sy} {st} \u2013 {et}",l:"{sd} {sm} {sy} {st} \u2013 {et}",f:"{sd} {sm} {sy} {st} \u2013 {et} "},c01:{s:"{sd}/{sm}/{sy} {st} \u2013 {ed}/{em}/{ey} {et}",m:"{sd}/{sm} {st} \u2013 {ed}/{em} {et}, {sy}",l:"{sd} {st} \u2013 {ed} {et}, {sm} {sy}",f:"{sd} {st} \u2013 {ed} {et}, {sm} {sy}"},c02:{s:"{sd}/{sm}/{sy} {st} \u2013 {ed}/{em}/{ey} {et}",m:"{sd}/{sm} {st} \u2013 {ed}/{em} {et}, {sy}",l:"{sd} {sm} {st} \u2013 {ed} {em} {et}, {sy}",
f:"{sd} {sm} {st} \u2013 {ed} {em} {et}, {sy}"},c03:{s:"{sd}/{sm}/{sy} {st} \u2013 {ed}/{em}/{ey} {et}",m:"{sd}/{sm}/{sy} {st} \u2013 {ed}/{em}/{ey} {et}",l:"{sd} {sm} {sy} {st} \u2013 {ed} {em} {ey} {et}",f:"{sd} {sm} {sy} {st} \u2013 {ed} {em} {ey} {et}"},c10:{s:"{sd}/{sm}/{sy} \u2013 {ed}/{em}/{ey}",m:"{sd}/{sm}/{sy} \u2013 {ed}/{em}/{ey}",l:"{sd}\u2013{ed} {sm} {sy}",f:"{sd}\u2013{ed} {sm} {sy}"},c11:{s:"{sd}/{sm}/{sy} \u2013 {ed}/{em}/{ey}",m:"{sd}/{sm}/{sy} \u2013 {ed}/{em}/{ey}",l:"{sd} {sm} \u2013 {ed} {em} {sy}",
f:"{sd} {sm} \u2013 {ed} {em} {sy}"},c12:{s:"{sd}/{sm}/{sy} \u2013 {ed}/{em}/{ey}",m:"{sd}/{sm}/{sy} \u2013 {ed}/{em}/{ey}",l:"{sd} {sm} {sy} \u2013 {ed} {em} {ey}",f:"{sd} {sm} {sy} \u2013 {ed} {em} {ey}"},c20:{s:"{sm}/{sy} \u2013 {em}/{ey}",m:"{sm}/{sy} \u2013 {em}/{ey}",l:"{sm} {sy} \u2013 {em} {ey}",f:"{sm} {sy} \u2013 {em} {ey}"},c30:"{sy}\u2013{ey}"}}};
ilib.data.dateformats_it={gregorian:{order:"{date} {time}",date:{dmwy:{s:"EE dd/MM/yy",m:"EEE dd/MM/yyyy",l:"EEE dd MMM yyyy",f:"EEEE dd MMMM yyyy"},dmy:{s:"dd/MM/yy",m:"dd/MM/yyyy",l:"dd MMM yyyy",f:"dd MMMM yyyy"},dmw:{s:"EE dd/MM",m:"EE dd/MM",l:"EEE dd MMM",f:"EEEE dd MMMM"},dm:{s:"dd/MM",m:"dd/MM",l:"dd MMM",f:"dd MMMM"},my:{s:"MM/yy",m:"MM/yyyy",l:"MMM yy",f:"MMMM yyyy"},dw:{s:"EE dd",m:"EEE dd",l:"EEE dd",f:"EEEE dd"},d:"dd",m:{s:"M",m:"MM",l:"MMM",f:"MMMM"},y:{s:"yy",m:"yy",l:"yyyy",f:"yyyy G"},
n:{s:"N",m:"NN",l:"MMM",f:"MMMM"}},time:{12:{ahmsz:"hh.mm.ss a z",ahms:"hh.mm.ss a",hmsz:"hh.mm.ss z",hms:"hh.mm.ss",ahmz:"hh.mm a z",ahm:"hh.mm a",hmz:"hh.mm z",ah:"hh a",hm:"hh.mm",ms:"mm.ss",h:"hh"},24:{ahmsz:"HH.mm.ss z",ahms:"HH.mm.ss",hmsz:"HH.mm.ss z",hms:"HH.mm.ss",ahmz:"HH.mm z",ahm:"HH.mm",hmz:"HH.mm z",ah:"HH",hm:"HH.mm",ms:"mm.ss",h:"HH"}},range:{c00:{s:"{st} - {et} {sd}/{sm}/{sy}",m:"{st} - {et} {sd}/{sm}/{sy}",l:"{st} - {et} {sd} {sm} {sy}",f:"{st} - {et} {sd} {sm} {sy}"},c01:{s:"{sd}/{sm}/{sy} {st} - {ed}/{em}/{ey} {et}",
m:"{sd}/{sm} {st} - {ed}/{em} {et} {sy}",l:"{sd} {st} - {ed} {et} {sm} {sy}",f:"{sd} {st} - {ed} {et} {sm} {sy}"},c02:{s:"{sd}/{sm}/{sy} {st} - {ed}/{em}/{ey} {et}",m:"{sd}/{sm} {st} - {ed}/{em} {et} {sy}",l:"{sd} {sm} {st} - {ed} {em} {et} {sy}",f:"{sd} {sm} {st} - {ed} {em} {et} {sy}"},c03:{s:"{sd}/{sm}/{sy} {st} - {ed}/{em}/{ey} {et}",m:"{sd}/{sm}/{sy} {st} - {ed}/{em}/{ey} {et}",l:"{sd} {sm} {sy} {st} - {ed} {em} {ey} {et}",f:"{sd} {sm} {sy} {st} - {ed} {em} {ey} {et}"},c10:{s:"{sd}-{ed}/{sm}/{sy}",
m:"{sd}-{ed}/{sm}/{sy}",l:"{sd}-{ed} {sm} {sy}",f:"{sd}-{ed} {sm} {sy}"},c11:{s:"{sd}/{sm}-{ed}/{em} {sy}",m:"{sd}/{sm} - {ed}/{em} {sy}",l:"{sd} {sm} - {ed} {em} {sy}",f:"{sd} {sm} - {ed} {em} {sy}"},c12:{s:"{sd}/{sm}/{sy}-{ed}/{em}/{ey}",m:"{sd}/{sm}/{sy} - {ed}/{em}/{ey}",l:"{sd} {sm} {sy} - {ed} {em} {ey}",f:"{sd} {sm} {sy} - {ed} {em} {ey}"},c20:{s:"{sm}/{sy}-{em}/{ey}",m:"{sm}/{sy} - {em}/{ey}",l:"{sm} {sy} - {em} {ey}",f:"{sm} {sy} - {em} {ey}"},c30:"{sy} - {ey}"}}};
ilib.data.dateformats_ja={gregorian:{order:"{date} {time}",date:{dmwy:{s:"yy/MM/dE",m:"yyyy/MM/dEE",l:"yyyy\u5e74MMM\u6708d\u65e5EEE",f:"yyyy\u5e74MMMM\u6708d\u65e5\uff08EEEE\uff09"},dmy:{s:"yy/MM/d",m:"yyyy/MM/d",l:"yyyy\u5e74MMM\u6708d\u65e5",f:"yyyy\u5e74MMMM\u6708d\u65e5"},dmw:{s:"MM/dE",m:"MM/dEE",l:"MMM\u6708d\u65e5EEE",f:"MMMM\u6708d\u65e5\uff08EEEE\uff09"},dm:{s:"MM/d",m:"MM/d",l:"MMM\u6708d\u65e5",f:"MMMM\u6708d\u65e5"},my:{s:"yy/MM",m:"yyyy/MM",l:"yyyy\u5e74MMM\u6708",f:"yyyy\u5e74MMMM\u6708"},
dw:{s:"dEE",m:"dEE",l:"dEEE",f:"dEEEE"},d:"dd",m:{s:"M",m:"MM",l:"MMM",f:"MMMM"},y:{s:"yy",m:"yyyy",l:"yyyy",f:"yyyy"},n:{s:"N",m:"NN",l:"MMM",f:"MMMM"}},time:{12:{ahmsz:"ahh:mm:ss z",ahms:"ahh:mm:ss",hmsz:"hh:mm:ss z",hms:"hh:mm:ss",ahmz:"ahh:mm z",ahm:"ahh:mm",hmz:"hh:mm z",ah:"ahh",hm:"hh:mm",h:"hh"},24:{ahmsz:"HH:mm:ss z",ahms:"HH:mm:ss",hmsz:"HH:mm:ss z",hms:"HH:mm:ss",ahmz:"HH:mm z",ahm:"HH:mm",hmz:"HH:mm z",ah:"HH",hm:"HH:mm",h:"HH"}},range:{c00:{s:"{sy}/{sm}/{sd} {st}-{et}",m:"{sy}/{sm}/{sd} {st}-{et}",
l:"{sy}\u5e74{sm}\u6708{sd}\u65e5{st}-{et}",f:"{sy}\u5e74{sm}\u6708{sd}\u65e5{st}-{et}"},c01:{s:"{sy}/{sm}/{sd} {st}-{ey}/{em}/{ed} {et}",m:"{sy}/{sm}/{sd} {st}-{ey}/{em}/{ed} {et}",l:"{sy}\u5e74{sm}\u6708{sd}\u65e5{st}-{ed}\u65e5{et}",f:"{sy}\u5e74{sm}\u6708{sd}\u65e5{st}-{ed}\u65e5{et}"},c02:{s:"{sy}/{sm}/{sd} {st}-{ey}/{em}/{ed} {et}",m:"{sy}/{sm}/{sd} {st}-{ey}/{em}/{ed} {et}",l:"{sy}\u5e74{sm}\u6708{sd}\u65e5{st}-{em}\u6708{ed}\u65e5{et}",f:"{sy}\u5e74{sm}\u6708{sd}\u65e5{st}-{em}\u6708{ed}\u65e5{et}"},
c03:{s:"{sy}/{sm}/{sd} {st}-{ey}/{em}/{ed} {et}",m:"{sy}/{sm}/{sd} {st}-{ey}/{em}/{ed} {et}",l:"{sy}\u5e74{sm}\u6708{sd}\u65e5{st}-{ey}\u5e74{em}\u6708{ed}\u65e5{et}",f:"{sy}\u5e74{sm}\u6708{sd}\u65e5{st}-{ey}\u5e74{em}\u6708{ed}\u65e5{et}"},c10:{s:"{sy}/{sm}/{sd}-{ed}",m:"{sy}/{sm}/{sd}-{ed}",l:"{sy}\u5e74{sm}\u6708{sd}-{ed}\u65e5",f:"{sy}\u5e74{sm}\u6708{sd}-{ed}\u65e5"},c11:{s:"{sy}/{sm}/{sd}-{ey}/{em}/{ed}",m:"{sy}/{sm}/{sd}-{ey}/{em}/{ed}",l:"{sy}\u5e74{sm}\u6708{sd}\u65e5-{em}\u6708{ed}\u65e5",
f:"{sy}\u5e74{sm}\u6708{sd}\u65e5-{em}\u6708{ed}\u65e5"},c12:{s:"{sy}/{sm}/{sd}-{ey}/{em}/{ed}",m:"{sy}/{sm}/{sd}-{ey}/{em}/{ed}",l:"{sy}\u5e74{sm}\u6708{sd}\u65e5-{ey}\u5e74{em}\u6708{ed}\u65e5",f:"{sy}\u5e74{sm}\u6708{sd}\u65e5-{ey}\u5e74{em}\u6708{ed}\u65e5"},c20:{s:"{sy}/{sm}-{ey}/{em}",m:"{sy}/{sm}-{ey}/{em}",l:"{sy}\u5e74{sm}\u6708-{ey}\u5e74{em}\u6708",f:"{sy}\u5e74{sm}\u6708-{ey}\u5e74{em}\u6708"},c30:"{sy}-{ey}"}}};
ilib.data.dateformats_ko={gregorian:{order:"{date} {time}",date:{dmwy:{s:"E, yy. MM. dd",m:"EE, yyyy. MM. dd",l:"EEE, yyyy\ub144 MMM\uc6d4 d\uc77c",f:"yyyy\ub144 MMM\uc6d4 d\uc77c (EEEE)"},dmy:{s:"yy. MM. dd",m:"yyyy. MM. dd",l:"yyyy\ub144 MMM\uc6d4 d\uc77c",f:"yyyy\ub144 MMM\uc6d4 d\uc77c"},dmw:{s:"E, MM. dd",m:"EE, MM. dd",l:"EEE, MMM\uc6d4 d\uc77c",f:"MMM\uc6d4 d\uc77c (EEEE)"},dm:{s:"MM. dd",m:"MM. dd",l:"MMM\uc6d4 d\uc77c",f:"MMM\uc6d4 d\uc77c"},my:{s:"yy. MM.",m:"yyyy. MM.",l:"yyyy\ub144 MMM\uc6d4",
f:"yyyy\ub144 MMM\uc6d4"},dw:{s:"EE, dd",m:"EE, dd",l:"EEE, d\uc77c",f:"d\uc77c(EEEE)"},d:"dd",m:{s:"M",m:"MM",l:"MMM",f:"MMMM"},y:{s:"yy",m:"yyyy",l:"yyyy",f:"yyyy"},n:{s:"N",m:"NN",l:"MMM",f:"MMMM"}},time:{12:{ahmsz:"a h:mm:ss z",ahms:"a h:mm:ss",ahmz:"a h:mm z",ahm:"a h:mm",ah:"a h"}},range:{c00:{s:"{sy}. {sm}. {sd} {st}\uc5d0\uc11c {et}\uae4c\uc9c0",m:"{sy}. {sm}. {sd} {st}\uc5d0\uc11c {et}\uae4c\uc9c0",l:"{sy}\ub144 {sm}\uc6d4 {sd}\uc77c {st}\uc5d0\uc11c {et}\uae4c\uc9c0",f:"{sy}\ub144 {sm}\uc6d4 {sd}\uc77c {st}\uc5d0\uc11c {et}\uae4c\uc9c0"},
c01:{s:"{sy}. {sm}. {sd} {st}\uc5d0\uc11c {ed} {et}\uae4c\uc9c0",m:"{sy}. {sm}. {sd} {st}\uc5d0\uc11c {ed} {et}\uae4c\uc9c0",l:"{sy}\ub144 {sm}\uc6d4 {sd}\uc77c {st}\uc5d0\uc11c {ed}\uc77c {et}\uae4c\uc9c0",f:"{sy}\ub144 {sm}\uc6d4 {sd}\uc77c {st}\uc5d0\uc11c {ed}\uc77c {et}\uae4c\uc9c0"},c02:{s:"{sy}. {sm}. {sd} {st}\uc5d0\uc11c {em}. {ed} {et}\uae4c\uc9c0",m:"{sy}. {sm}. {sd} {st}\uc5d0\uc11c {em}. {ed} {et}\uae4c\uc9c0",l:"{sy}\ub144 {sm}\uc6d4 {sd}\uc77c {st}\uc5d0\uc11c {em}\uc6d4 {ed}\uc77c {et}\uae4c\uc9c0",
f:"{sy}\ub144 {sm}\uc6d4 {sd}\uc77c {st}\uc5d0\uc11c {em}\uc6d4 {ed}\uc77c {et}\uae4c\uc9c0"},c03:{s:"{sy}. {sm}. {sd} {st}\uc5d0\uc11c {ey}. {em}. {ed} {et}\uae4c\uc9c0",m:"{sy}. {sm}. {sd} {st}\uc5d0\uc11c {ey}. {em}. {ed} {et}\uae4c\uc9c0",l:"{sy}\ub144 {sm}\uc6d4 {sd}\uc77c {st}\uc5d0\uc11c {ey}\ub144 {em}\uc6d4 {ed}\uc77c {et}\uae4c\uc9c0",f:"{sy}\ub144 {sm}\uc6d4 {sd}\uc77c {st}\uc5d0\uc11c {ey}\ub144 {em}\uc6d4 {ed}\uc77c {et}\uae4c\uc9c0"},c10:{s:"{sy}. {sm}. {sd}\uc5d0\uc11c {ed}\uae4c\uc9c0",
m:"{sy}. {sm}. {sd}\uc5d0\uc11c {ed}\uae4c\uc9c0",l:"{sy}\ub144 {sm}\uc6d4 {sd}\uc77c\uc5d0\uc11c {ed}\uc77c\uae4c\uc9c0",f:"{sy}\ub144 {sm}\uc6d4 {sd}\uc77c\uc5d0\uc11c {ed}\uc77c\uae4c\uc9c0"},c11:{s:"{sy}. {sm}. {sd}\uc5d0\uc11c {em}. {ed}\uae4c\uc9c0",m:"{sy}. {sm}. {sd}\uc5d0\uc11c {em}. {ed}\uae4c\uc9c0",l:"{sy}\ub144 {sm}\uc6d4 {sd}\uc77c\uc5d0\uc11c {em}\uc6d4 {ed}\uc77c\uae4c\uc9c0",f:"{sy}\ub144 {sm}\uc6d4 {sd}\uc77c\uc5d0\uc11c {em}\uc6d4 {ed}\uc77c\uae4c\uc9c0"},c12:{s:"{sy}. {sm}. {sd}\uc5d0\uc11c {ey}. {em}. {ed}\uae4c\uc9c0",
m:"{sy}. {sm}. {sd}\uc5d0\uc11c {ey}. {em}. {ed}\uae4c\uc9c0",l:"{sy}\ub144 {sm}\uc6d4 {sd}\uc77c\uc5d0\uc11c {ey}\ub144 {em}\uc6d4 {ed}\uc77c\uae4c\uc9c0",f:"{sy}\ub144 {sm}\uc6d4 {sd}\uc77c\uc5d0\uc11c {ey}\ub144 {em}\uc6d4 {ed}\uc77c\uae4c\uc9c0"},c20:{s:"{sy}. {sm}.\uc5d0\uc11c {ey}. {em}.\uae4c\uc9c0",m:"{sy}. {sm}.\uc5d0\uc11c {ey}. {em}.\uae4c\uc9c0",l:"{sy}\ub144 {sm}\uc6d4\uc5d0\uc11c {ey}\ub144 {em}\uc6d4\uae4c\uc9c0",f:"{sy}\ub144 {sm}\uc6d4\uc5d0\uc11c {ey}\ub144 {em}\uc6d4\uae4c\uc9c0"},
c30:"{sy}\ub144\uc5d0\uc11c {ey}\ub144\uae4c\uc9c0"}}};
ilib.data.dateformats_pt={gregorian:{date:{dmwy:{s:"E, dd/MM/yy",m:"EE, dd/MM/yyyy",l:"EEE, dd 'de' MMM 'de' yyyy",f:"EEEE, dd 'de' MMMM 'de' yyyy"},dmy:{s:"dd/MM/yy",m:"dd/MM/yyyy",l:"dd 'de' MMM 'de' yyyy",f:"dd 'de' MMMM 'de' yyyy"},dmw:{s:"E, dd/MM",m:"EE, dd/MM",l:"EEE, dd 'de' MMM",f:"EEEE, dd 'de' MMMM"},dm:{s:"dd/MM",m:"dd/MM",l:"dd 'de' MMM",f:"dd 'de' MMMM"},my:{s:"MM/yy",m:"MM/yyyy",l:"MMM yyyy",f:"MMMM yyyy"},dw:{s:"EE, dd",m:"EE, dd",l:"EEE, dd",f:"EEEE, dd"},d:{s:"dd",m:"dd",l:"dd",
f:"dd"},m:{s:"M",m:"MM",l:"MMM",f:"MMMM"},y:{s:"yy",m:"yyyy",l:"yyyy",f:"yyyy"},n:{s:"N",m:"NN",l:"MMM",f:"MMMM"}},time:{12:{ahmsz:"hh'h'mm'min'ss's' a z",ahms:"hh'h'mm'min'ss's' a",hmsz:"hh'h'mm'min'ss's' z",ahmz:"hh'h'mm'min' a z",hms:"hh'h'mm'min'ss's'",ahm:"hh'h'mm'min' a",hmz:"hh'h'mm'min' z",ah:"hh'h' a",hm:"hh'h'mm'min'",ms:"mm'min'ss's'",h:"hh"},24:{ahmsz:"HH'h'mm'min'ss's' z",ahms:"HH'h'mm'min'ss's'",hmsz:"HH'h'mm'min'ss's' z",ahmz:"HH'h'mm'min' z",hms:"HH'h'mm'min'ss's'",ahm:"HH'h'mm'min'",
hmz:"HH'h'mm'min' z",ah:"HH'h'",hm:"HH'h'mm'min'",ms:"mm'min'ss's'",h:"HH"}},range:{c00:{s:"{sd}/{sm}/{sy} {st} - {et}",m:"{sd}/{sm}/{sy} {st} - {et}",l:"{sd}/{sm}/{sy} {st} - {et}",f:"{sd} de {sm} de {sy} {st} - {et}"},c01:{s:"{sd}/{sm}/{sy} {st} - {ed}/{em}/{ey} {et}",m:"{sd}/{sm} {st} - {ed}/{em} {et}, {sy}",l:"{sd} {st} - {ed} {et}, {sm} {sy}",f:"{sd} {st} - {ed} {et},  de {sm} {sy}"},c02:{s:"{sd}/{sm}/{sy} {st} - {ed}/{em}/{ey} {et}",m:"{sd}/{sm} {st} - {ed}/{em} {et}, {sy}",l:"{sd} de {sm} {st} - {ed} de {em} {et}, {sy}",
f:"{sd} de {sm} {st} - {ed} de {em} {et}, {sy}"},c03:{s:"{sd}/{sm}/{sy} {st} - {ed}/{em}/{ey} {et}",m:"{sd}/{sm}/{sy} {st} - {ed}/{em}/{ey} {et}",l:"{sd} de {sm} de {sy} {st} - {ed} de {em} de {ey} {et}",f:"{sd} de {sm} de {sy} {st} - {ed} de {em} de {ey} {et}"},c10:{s:"{sd}/{sm}/{sy} - {ed}/{em}/{ey}",m:"{sd}/{sm}/{sy} - {ed}/{em}/{ey}",l:"{sd}-{ed} de {sm} de {sy}",f:"{sd}-{ed} de {sm} de {sy}"},c11:{s:"{sd}/{sm}/{sy} - {ed}/{em}/{ey}",m:"{sd}/{sm}/{sy} - {ed}/{em}/{ey}",l:"{sd} de {sm} - {ed} de {em} de {sy}",
f:"{sd} de {sm} - {ed} de {em} de {sy}"},c12:{s:"{sd}/{sm}/{sy} - {ed}/{em}/{ey}",m:"{sd}/{sm}/{sy} - {ed}/{em}/{ey}",l:"{sd} de {sm} de {sy} - {ed} de {em} de {ey}",f:"{sd} de {sm} de {sy} - {ed} de {em} de {ey}"},c20:{s:"{sm}/{sy} - {em}/{ey}",m:"{sm}/{sy} - {em}/{ey}",l:"{sm} de {sy} - {em} de {ey}",f:"{sm} de {sy} - {em} de {ey}"},c30:"{sy} - {ey}"}}};
ilib.data.dateformats_ru={gregorian:{date:{dmwy:{s:"E, dd.MM.yy",m:"EE, dd.MM.yyyy",l:"EEE, d MMM yyyy",f:"EEEE, d MMMM yyyy\u00a0'\u0433.'"},dmy:{s:"dd.MM.yy",m:"dd.MM.yyyy",l:"d MMM yyyy",f:"d MMMM yyyy\u00a0'\u0433.'"},dmw:{s:"E, dd.MM",m:"EE, dd.MM",l:"EEE, d MMM",f:"EEEE, d MMMM"},dm:{s:"dd.MM",m:"dd.MM",l:"d MMM",f:"d MMMM"},my:{s:"MM.yy",m:"MM.yyyy",l:"MMM yyyy",f:"MMMM yyyy\u00a0'\u0433.'"},dw:{s:"EE, d",m:"EE, d",l:"EEE, d",f:"EEEE, d"},d:{s:"d",m:"d",l:"d",f:"d"},m:{s:"MM",m:"MM",l:"MMM",
f:"MMMM"},y:{s:"yy",m:"yyyy",l:"yyyy",f:"yyyy"},n:{s:"N",m:"NN",l:"MMM",f:"MMMM"}},time:{12:{ahmsz:"h:mm:ss a z",ahms:"h:mm:ss a",ahmz:"h:mm a z",ahm:"h:mm a",ah:"h a"}},range:{c00:{s:"{sd}.{sm}.{sy} {st}-{et}",m:"{sd}.{sm}.{sy} {st}-{et}",l:"{sd}.{sm}.{sy} {st}-{et}",f:"{sd} {sm} {sy}\u00a0\u0433. {st}-{et}"},c01:{s:"{sd}.{sm} {st} - {ed}.{em} {et}, {sy}",m:"{sd}.{sm} {st} - {ed}.{em} {et}, {sy}",l:"{sd} {st} - {ed} {et}, {sm} {sy}",f:"{sd} {st} - {ed} {et}, {sm} {sy} \u0433."},c02:{s:"{sd}.{sm}.{sy} {st} - {ed}.{em}.{ey} {et}",
m:"{sd}.{sm} {st} - {ed}.{em} {et}, {sy}",l:"{sd} {sm} {st} - {ed} {em} {et}, {sy}",f:"{sd} {sm} {st} - {ed} {em} {et}, {sy} \u0433."},c03:{s:"{sd}.{sm}.{sy} {st} - {ed}.{em}.{ey} {et}",m:"{sd}.{sm}.{sy} {st} - {ed}.{em}.{ey} {et}",l:"{sd} {sm} {sy} {st} - {ed} {em} {ey} {et}",f:"{sd} {sm} {sy}\u00a0\u0433. {st} - {ed} {em} {ey}\u00a0\u0433. {et}"},c10:{s:"{sd}.{sm}.{sy} - {ed}.{em}.{ey}",m:"{sd}.{sm}.{sy} - {ed}.{em}.{ey}",l:"{sd}-{ed} {sm} {sy} \u0433.",f:"{sd}-{ed} {sm} {sy} \u0433."},c11:{s:"{sd}.{sm}.{sy} - {ed}.{em}.{ey}",
m:"{sd}.{sm}.{sy} - {ed}.{em}.{ey}",l:"{sd} {sm} - {ed} {em} {sy} \u0433.",f:"{sd} {sm} - {ed} {em} {sy} \u0433."},c12:{s:"{sd}.{sm}.{sy} - {ed}.{em}.{ey}",m:"{sd}.{sm}.{sy} - {ed}.{em}.{ey}",l:"{sd} {sm} {sy} - {ed} {em} {ey} \u0433.",f:"{sd} {sm} {sy} - {ed} {em} {ey} \u0433."},c20:{s:"{sm}.{sy} - {em}.{ey}",m:"{sm}.{sy} - {em}.{ey}",l:"{sm} {sy} - {em} {ey} \u0433.",f:"{sm} {sy} - {em} {ey} \u0433."},c30:"{sy}-{ey}"}}};
ilib.data.dateformats_tr={gregorian:{order:"{date} {time}",date:{dmwy:{s:"dd.MM.yyyy, E",m:"dd.MM.yyyy, EE",l:"dd MMM yyyy, EEE",f:"dd MMMM yyyy EEEE"},dmy:{s:"dd.MM.yyyy",m:"dd.MM.yyyy",l:"dd MMM yyyy",f:"dd MMMM yyyy"},dmw:{s:"dd.MM, E",m:"dd.MM, EE",l:"dd MMM, EEE",f:"dd MMMM, EEEE"},dm:{s:"dd.MM",m:"dd.MM",l:"dd MMM",f:"dd MMMM"},my:{s:"MM.yy",m:"MM.yyyy",l:"MMM yy",f:"MMMM yyyy"},dw:{s:"dd EE",m:"dd EE",l:"dd EEE",f:"dd EEEE"},d:{s:"dd",m:"dd",l:"dd",f:"dd"},m:{s:"M",m:"MM",l:"MMM",f:"MMMM"},
y:{s:"yy",m:"yyyy",l:"yy",f:"yyyy"},n:{s:"N",m:"NN",l:"MMM",f:"MMMM"}},time:{12:{ahmsz:"hh:mm:ss a Z",ahms:"hh:mm:ss a",hmsz:"hh:mm:ss Z",ahmz:"hh:mm a Z",hms:"hh:mm:ss",ahm:"hh:mm a",hmz:"hh:mm Z",ah:"hh a",hm:"hh:mm",h:"hh"},24:{ahmsz:"HH:mm:ss Z",ahms:"HH:mm:ss",hmsz:"HH:mm:ss Z",ahmz:"HH:mm Z",hms:"HH:mm:ss",ahm:"HH:mm",hmz:"HH:mm Z",ah:"HH",hm:"HH:mm",h:"HH"}},range:{c00:{s:"{sd}.{sm}.{sy} {st} - {et}",m:"{sd}.{sm}.{sy} {st} - {et}",l:"{sd} {sm} {sy} {st} - {et}",f:"{sd} {sm} {sy} {st} - {et}"},
c01:{s:"{sd}.{sm}.{sy} {st} - {ed}.{em}.{ey} {et}",m:"{sd}.{sm}.{sy} {st} - {ed}.{em}.{ey} {et}",l:"{sd} {sm} {st} - {ed} {em} {et} {ey}",f:"{sd} {sm} {st} - {ed} {em} {et} {ey}"},c02:{s:"{sd}.{sm}.{sy} {st} - {ed}.{em}.{ey} {et}",m:"{sd}.{sm}.{sy} {st} - {ed}.{em}.{ey} {et}",l:"{sd} {sm} {st} - {ed} {em} {et}, {sy} ",f:"{sd} {sm} {st} - {ed} {em} {et}, {sy}"},c03:{s:"{sd}.{sm}.{sy} {st} - {ed}.{em}.{ey} {et}",m:"{sd}.{sm}.{sy} {st} - {ed}.{em}.{ey} {et}",l:"{sd} {sm} {sy} {st} - {ed} {em} {ey} {et}",
f:"{sd} {sm} {sy} {st} - {ed} {em} {ey} {et}"},c10:{s:"{sd} - {ed}.{sm}.{sy}",m:"{sd} - {ed}.{sm}.{sy}",l:"{sd} - {ed} {sm} {sy}",f:"{sd} - {ed} {sm} {sy}"},c11:{s:"{sd}.{sm} - {ed}.{em} {ey}",m:"{sd}.{sm} - {ed}.{em} {ey}",l:"{sd} {sm} - {ed} {em} {sy}",f:"{sd} {sm} - {ed} {em} {sy}"},c12:{s:"{sd}.{sm}.{sy} - {ed}.{em}.{ey}",m:"{sd}.{sm}.{sy} - {ed}.{em}.{ey}",l:"{sd} {sm} {sy} - {ed} {em} {ey}",f:"{sd} {sm} {sy} - {ed} {em} {ey}"},c20:{s:"{sm}.{sy} - {em}.{ey}",m:"{sm}.{sy} - {em}.{ey}",l:"{sm} {sy} - {em} {ey}",
f:"{sm} {sy} - {em} {ey}"},c30:"{sy} - {ey}"}}};
ilib.data.dateformats_vi={gregorian:{order:"{time} {date}",date:{dmwy:{s:"E dd/M/yy",m:"EE dd/MM/yyyy",l:"EEE dd MMM yyyy",f:"EEEE 'ng\u00e0y' dd MMMM 'n\u0103m' yyyy"},dmy:{s:"d/M/yy",m:"dd/MM/yyyy",l:"dd MMM yyyy",f:"'ng\u00e0y' dd MMMM 'n\u0103m' yyyy"},dmw:{s:"E d/M",m:"EE dd/MM",l:"EEE dd MMM",f:"EEEE 'ng\u00e0y' dd MMMM"},dw:{s:"E dd",m:"EE dd",l:"EEE dd",f:"EEEE 'ng\u00e0y' dd"},dm:{s:"d/M",m:"dd/MM",l:"dd MMM",f:"'ng\u00e0y' dd MMMM"},my:{s:"M/yy",m:"MM/yyyy",l:"MMM yyyy",f:"MMMM 'n\u0103m' yyyy"},
d:{s:"dd",m:"dd",l:"dd",f:"'ng\u00e0y' dd"},m:{s:"M",m:"MM",l:"MMM",f:"MMMM"},y:{s:"yy",m:"yyyy",l:"yyyy",f:"'n\u0103m' yyyy"},n:{s:"N",m:"NN",l:"MMM",f:"MMMM"}},time:{12:{ahmsz:"hh'h'mm:ss a Z",ahms:"hh'h'mm:ss a",hmsz:"hh'h'mm:ss Z",ahmz:"hh'h'mm a Z",hms:"hh'h'mm:ss",ahm:"hh'h'mm a",hmz:"hh'h'mm Z",ah:"hh a",hm:"hh'h'mm",h:"hh"},24:{ahmsz:"HH'h'mm:ss Z",ahms:"HH'h'mm:ss",hmsz:"HH'h'mm:ss Z",ahmz:"HH'h'mm Z",hms:"HH'h'mm:ss",ahm:"HH'h'mm",hmz:"HH'h'mm Z",ah:"HH",hm:"HH'h'mm",h:"HH"}},range:{c00:{s:"{st} \u2013 {et} {sd}/{sm}/{sy}",
m:"{st} \u2013 {et} {sd}/{sm}/{sy}",l:"{st} \u2013 {et} {sd} {sm} {sy}",f:"v\u00e0o l\u00fac {st} \u2013 {et} {sd} {sm} {sy}"},c01:{s:"{st} {sd}/{sm}/{sy} \u2013 {et} {ed}/{em}/{ey}",m:"{st} {sd}/{sm}/{sy} \u2013 {et} {ed}/{em}/{ey}",l:"{st} {sd} \u2013 {et} {ed} {em} {ey}",f:"v\u00e0o l\u00fac {st} {sd} \u2013 v\u00e0o l\u00fac {et} {ed} {em} {ey}"},c02:{s:"{st} {sd}/{sm}/{sy} \u2013 {et} {ed}/{em}/{ey}",m:"{st} {sd}/{sm}/{sy} \u2013 {et} {ed}/{em}/{ey}",l:"{st} {sd} {sm} {sy} \u2013 {et} {ed} {em} {ey}",
f:"v\u00e0o l\u00fac {st} {sd} {sm} \u2013 v\u00e0o l\u00fac {et} {ed} {em} {ey}"},c03:{s:"{sd}/{sm}/{sy} {st} - {ed}/{em}/{ey} {et}",m:"{sd}/{sm}/{sy} {st} - {ed}/{em}/{ey} {et}",l:"{sd} {sm} {sy} {st} - {ed} {em} {ey} {et}",f:"v\u00e0o l\u00fac {st} {sd} {sm} {sy} \u2013 v\u00e0o l\u00fac {et} {ed} {em} {ey}"},c10:{s:"{sd} \u2013 {ed}/{em}/{ey}",m:"{sd} \u2013 {ed}/{em}/{ey}",l:"{sd} \u2013 {ed} {sm} {sy}",f:"{sd} \u2013 {ed} {sm} {sy}"},c11:{s:"{sd}/{sm} \u2013 {ed}/{em}/{ey}",m:"{sd}/{sm} \u2013 {ed}/{em}/{ey}",
l:"{sd} {sm} \u2013 {ed} {em} {sy}",f:"{sd} {sm} \u2013 {ed} {em} {sy}"},c12:{s:"{sd}/{sm}/{sy} \u2013 {ed}/{em}/{ey}",m:"{sd}/{sm}/{sy} \u2013 {ed}/{em}/{ey}",l:"{sd} {sm} {sy} \u2013 {ed} {em} {ey}",f:"{sd} {sm} {sy} \u2013 {ed} {em} {ey}"},c20:{s:"{sm}/{sy} \u2013 {em}/{ey}",m:"{sm}/{sy} \u2013 {em}/{ey}",l:"{sm} {sy} \u2013 {em} {ey}",f:"{sm} {sy} \u2013 {em} {ey}"},c30:{s:"{sy} \u2013 {ey}",m:"{sy} \u2013 {ey}",l:"{sy} \u2013 {ey}",f:"{sy} \u2013 {ey}"}}}};
ilib.data.dateformats_zxx={gregorian:{order:"{date} {time}",date:{dmwy:{s:"EE d/MM/yy",m:"EEE d/MM/yyyy",l:"EEE d MMM, yyyy",f:"EEEE d MMMM, yyyy"},dmy:{s:"d/MM/yy",m:"d/MM/yyyy",l:"d MMM, yyyy",f:"d MMMM, yyyy"},dmw:{s:"EE d/M",m:"EE d/MM",l:"EEE d MMM",f:"EEEE d MMMM"},dm:{s:"d/M",m:"d/M",l:"d MMM",f:"d MMMM"},my:{s:"M/yy",m:"MM/yyyy",l:"MMM yy",f:"MMMM yyyy"},d:"dd",m:{s:"M",m:"MM",l:"MMM",f:"MMMM"},y:{s:"yy",m:"yy",l:"yyyy",f:"yyyy G"},n:{s:"N",m:"NN",l:"MMM",f:"MMMM"}}},julian:"gregorian"};
ilib.data.dateformats_zh={gregorian:{order:{s:"{date} {time}",m:"{date} {time}",l:"{date}{time}",f:"{date}{time}"},date:{dmwy:{s:"yy-MM-dd(E)",m:"yyyy-MM-dd(EE)",l:"yyyy\u5e74MMM\u6708d\u65e5(EEE)",f:"yyyy\u5e74MMMM\u6708d\u65e5(EEEE)"},dmy:{s:"yy-MM-dd",m:"yyyy-MM-dd",l:"yyyy\u5e74MMM\u6708d\u65e5",f:"yyyy\u5e74MMMM\u6708d\u65e5"},dmw:{s:"MM-dd(E)",m:"MM-dd(EE)",l:"MMM\u6708d\u65e5(EEE)",f:"MMMM\u6708d\u65e5(EEEE)"},dm:{s:"MM-dd",m:"MM-dd",l:"MMM\u6708d\u65e5",f:"MMMM\u6708d\u65e5"},my:{s:"yy-MM",
m:"yyyy-MM",l:"yyyy\u5e74MMM\u6708",f:"yyyy\u5e74MMMM\u6708"},dw:{s:"d\u65e5(E)",m:"d\u65e5(EE)",l:"d\u65e5(EEE)",f:"d\u65e5(EEEE)"},d:{s:"d",m:"dd",l:"d\u65e5",f:"d\u65e5"},m:{s:"M",m:"MM",l:"MMM\u6708",f:"MMMM\u6708"},y:{s:"yy",m:"yyyy",l:"yyyy\u5e74",f:"yyyy\u5e74"},n:{s:"N",m:"NN",l:"MMM\u6708",f:"MMMM\u6708"}},time:{12:{ahmsz:"ahh:mm:ssz",ahms:"ahh:mm:ss",hmsz:"hh:mm:ssz",hms:"hh:mm:ss",ahmz:"ahh:mmz",ahm:"ahh:mm",hmz:"hh:mmz",ah:"ahh",hm:"hh:mm",h:"hh"},24:{ahmsz:"HH:mm:ssz",ahms:"HH:mm:ss",
hmsz:"HH:mm:ssz",hms:"HH:mm:ss",ahmz:"HH:mmz",ahm:"HH:mm",hmz:"HH:mmz",ah:"HH",hm:"HH:mm",h:"HH"}},range:{c00:{s:"{sy}-{sm}-{sd}\uff0c{st}\u81f3{et}",m:"{sy}-{sm}-{sd}\uff0c{st}\u81f3{et}",l:"{sy}{sm}{sd}\uff0c{st}\u81f3{et}",f:"{sy}{sm}{sd}\uff0c{st}\u81f3{et}"},c01:{s:"{sy}-{sm}-{sd}\uff0c{st}\u81f3{ey}-{em}-{ed}\uff0c{et}",m:"{sy}-{sm}-{sd}\uff0c{st}\u81f3{ey}-{em}-{ed}\uff0c{et}",l:"{sy}{sm}{sd}{st}\u81f3{ed}{et}",f:"{sy}{sm}{sd}{st}\u81f3{ed}{et}"},c02:{s:"{sy}-{sm}-{sd}\uff0c{st}\u81f3{ey}-{em}-{ed}\uff0c{et}",
m:"{sy}-{sm}-{sd}\uff0c{st}\u81f3{ey}-{em}-{ed}\uff0c{et}",l:"{sy}{sm}{sd}\uff0c{st}\u81f3{em}{ed}\u65e5\uff0c{et}",f:"{sy}{sm}{sd}\uff0c{st}\u81f3{em}{ed}\u65e5\uff0c{et}"},c03:{s:"{sy}-{sm}-{sd}\uff0c{st}\u81f3{ey}-{em}-{ed}\uff0c{et}",m:"{sy}-{sm}-{sd}\uff0c{st}\u81f3{ey}-{em}-{ed}\uff0c{et}",l:"{sy}{sm}{sd}\uff0c{st}\u81f3{ey}{em}{ed}\uff0c{et}",f:"{sy}{sm}{sd}\uff0c{st}\u81f3{ey}{em}{ed}\uff0c{et}"},c10:{s:"{sy}-{sm}-{sd}\u81f3{ed}",m:"{sy}-{sm}-{sd}\u81f3{ed}",l:"{sy}{sm}{sd}\u81f3{ed}",f:"{sy}{sm}{sd}\u81f3{ed}"},
c11:{s:"{sy}-{sm}-{sd}\u81f3{em}-{ed}",m:"{sy}-{sm}-{sd}\u81f3{em}-{ed}",l:"{sy}{sm}{sd}\u81f3{em}{ed}",f:"{sy}{sm}{sd}\u81f3{em}{ed}"},c12:{s:"{sy}-{sm}-{sd}\u81f3{ey}-{em}-{ed}",m:"{sy}-{sm}-{sd}\u81f3{ey}-{em}-{ed}",l:"{sy}{sm}{sd}\u81f3{ey}{em}{ed}",f:"{sy}{sm}{sd}\u81f3{ey}{em}{ed}"},c20:{s:"{sy}-{sm}\u81f3{ey}-{em}",m:"{sy}-{sm}\u81f3{ey}-{em}",l:"{sy}{sm}\u81f3{ey}{em}",f:"{sy}{sm}\u81f3{ey}{em}"},c30:"{sy}\u81f3{ey}"}}};
ilib.data.dateformats_zh_HK={gregorian:{date:{dmwy:{s:"dd.MM.yy(E)",m:"dd.MM.yyyy(EE)"},dmy:{s:"dd.MM.yy",m:"dd.MM.yyyy"},dmw:{s:"dd.MM(E)",m:"dd.MM(EE)"},dm:{s:"dd.MM",m:"dd.MM"},my:{s:"MM.yy",m:"MM.yyyy"}},range:{c00:{s:"{sd}.{sm}.{sy} {st}\u81f3{et}",m:"{sd}.{sm}.{sy} {st}\u81f3{et}"},c01:{s:"{sd}.{sm}.{sy} {st}\u81f3{ed}.{em}.{ey} {et}",m:"{sd}.{sm}.{sy} {st}\u81f3{ed}.{em}.{ey} {et}"},c02:{s:"{sd}.{sm}.{sy} {st}\u81f3{ed}.{em}.{ey} {et}",m:"{sd}.{sm}.{sy} {st}\u81f3{ed}.{em}.{ey} {et}"},c03:{s:"{sd}.{sm}.{sy} {st}\u81f3{ed}.{em}.{ey} {et}",
m:"{sd}.{sm}.{sy} {st}\u81f3{ed}.{em}.{ey} {et}"},c10:{s:"{sd}\u81f3{ed}.{sm}.{sy}",m:"{sd}\u81f3{ed}.{sm}.{sy}"},c11:{s:"{sd}.{sm}\u81f3{ed}.{em}.{sy}",m:"{sd}.{sm}\u81f3{ed}.{em}.{sy}"},c12:{s:"{sd}.{sm}.{sy}\u81f3{ed}.{em}.{ey}",m:"{sd}.{sm}.{sy}\u81f3{ed}.{em}.{ey}"},c20:{s:"{sm}.{sy}\u81f3{em}.{ey}",m:"{sm}.{sy}\u81f3{em}.{ey}"}}}};
ilib.data.dateformats_zh_TW={gregorian:{date:{dmwy:{s:"yyyy-MM-dd(E)",l:"yyyy\u5e74MMM\u6708d\u65e5(EEE)"},dmy:{s:"yyyy-MM-dd",l:"yyyy\u5e74MMM\u6708d\u65e5"},my:{s:"yyyy-MM",l:"yyyy\u5e74MMM\u6708"},y:{s:"yyyy",l:"yyyy\u5e74"}}}};
ilib.data.sysres={MMMM1:"January",MMM1:"Jan",NN1:"Ja",N1:"J",MMMM2:"February",MMM2:"Feb",NN2:"Fe",N2:"F",MMMM3:"March",MMM3:"Mar",NN3:"Ma",N3:"M",MMMM4:"April",MMM4:"Apr",NN4:"Ap",N4:"A",MMMM5:"May",MMM5:"May",NN5:"Ma",N5:"M",MMMM6:"June",MMM6:"Jun",NN6:"Ju",N6:"J",MMMM7:"July",MMM7:"Jul",NN7:"Ju",N7:"J",MMMM8:"August",MMM8:"Aug",NN8:"Au",N8:"A",MMMM9:"September",MMM9:"Sep",NN9:"Se",N9:"S",MMMM10:"October",MMM10:"Oct",NN10:"Oc",N10:"O",MMMM11:"November",MMM11:"Nov",NN11:"No",N11:"N",MMMM12:"December",
MMM12:"Dec",NN12:"De",N12:"D",EEEE0:"Sunday",EEE0:"Sun",EE0:"Su",E0:"S",EEEE1:"Monday",EEE1:"Mon",EE1:"Mo",E1:"M",EEEE2:"Tuesday",EEE2:"Tue",EE2:"Tu",E2:"T",EEEE3:"Wednesday",EEE3:"Wed",EE3:"We",E3:"W",EEEE4:"Thursday",EEE4:"Thu",EE4:"Th",E4:"T",EEEE5:"Friday",EEE5:"Fri",EE5:"Fr",E5:"F",EEEE6:"Saturday",EEE6:"Sat",EE6:"Sa",E6:"S",ordinalChoice:"1#1st|2#2nd|3#3rd|21#21st|22#22nd|23#23rd|31#31st|#{num}th",a0:"AM",a1:"PM",azh0:"AM",azh1:"AM",azh2:"AM",azh3:"PM",azh4:"PM",azh5:"PM",azh6:"PM","a0-ethiopic":"morning",
"a1-ethiopic":"noon","a2-ethiopic":"afternoon","a3-ethiopic":"evening","a4-ethiopic":"night","G-1":"BCE",G1:"CE",separatorFull:", ",finalSeparatorFull:", and ",separatorShort:" ",separatorMedium:" ",separatorLong:", ","N1-hebrew":"N","N2-hebrew":"I","N3-hebrew":"S","N4-hebrew":"T","N5-hebrew":"A","N6-hebrew":"E","N7-hebrew":"T","N8-hebrew":"\u1e24","N9-hebrew":"K","N10-hebrew":"T","N11-hebrew":"S","N12-hebrew":"A","N13-hebrew":"A","NN1-hebrew":"Ni","NN2-hebrew":"Iy","NN3-hebrew":"Si","NN4-hebrew":"Ta",
"NN5-hebrew":"Av","NN6-hebrew":"El","NN7-hebrew":"Ti","NN8-hebrew":"\u1e24e","NN9-hebrew":"Ki","NN10-hebrew":"Te","NN11-hebrew":"Sh","NN12-hebrew":"Ad","NN13-hebrew":"A2","MMM1-hebrew":"Nis","MMM2-hebrew":"Iyy","MMM3-hebrew":"Siv","MMM4-hebrew":"Tam","MMM5-hebrew":"Av","MMM6-hebrew":"Elu","MMM7-hebrew":"Tis","MMM8-hebrew":"\u1e24es","MMM9-hebrew":"Kis","MMM10-hebrew":"Tev","MMM11-hebrew":"She","MMM12-hebrew":"Ada","MMM13-hebrew":"Ad2","MMMM1-hebrew":"Nisan","MMMM2-hebrew":"Iyyar","MMMM3-hebrew":"Sivan",
"MMMM4-hebrew":"Tammuz","MMMM5-hebrew":"Av","MMMM6-hebrew":"Elul","MMMM7-hebrew":"Tishri","MMMM8-hebrew":"\u1e24eshvan","MMMM9-hebrew":"Kislev","MMMM10-hebrew":"Teveth","MMMM11-hebrew":"Shevat","MMMM12-hebrew":"Adar","MMMM13-hebrew":"Adar II","E0-hebrew":"R","E1-hebrew":"S","E2-hebrew":"S","E3-hebrew":"R","E4-hebrew":"\u1e24","E5-hebrew":"S","E6-hebrew":"S","EE0-hebrew":"ri","EE1-hebrew":"se","EE2-hebrew":"sl","EE3-hebrew":"rv","EE4-hebrew":"\u1e25a","EE5-hebrew":"si","EE6-hebrew":"sa","EEE0-hebrew":"ris",
"EEE1-hebrew":"she","EEE2-hebrew":"shl","EEE3-hebrew":"rvi","EEE4-hebrew":"\u1e25am","EEE5-hebrew":"shi","EEE6-hebrew":"sha","EEEE0-hebrew":"yom rishon","EEEE1-hebrew":"yom sheni","EEEE2-hebrew":"yom shlishi","EEEE3-hebrew":"yom r'vi\u2018i","EEEE4-hebrew":"yom \u1e25amishi","EEEE5-hebrew":"yom shishi","EEEE6-hebrew":"yom shabbat","N1-islamic":"M","N2-islamic":"\u1e62","N3-islamic":"R","N4-islamic":"R","N5-islamic":"J","N6-islamic":"J","N7-islamic":"R","N8-islamic":"\u0160","N9-islamic":"R","N10-islamic":"\u0160",
"N11-islamic":"Q","N12-islamic":"\u1e24","NN1-islamic":"Mu","NN2-islamic":"\u1e62a","NN3-islamic":"Rb","NN4-islamic":"R2","NN5-islamic":"Ju","NN6-islamic":"J2","NN7-islamic":"Ra","NN8-islamic":"\u0160h","NN9-islamic":"Ra","NN10-islamic":"\u0160a","NN11-islamic":"Qa","NN12-islamic":"\u1e24i","MMM1-islamic":"Mu\u1e25","MMM2-islamic":"\u1e62af","MMM3-islamic":"Rab","MMM4-islamic":"Ra2","MMM5-islamic":"Jum","MMM6-islamic":"Ju2","MMM7-islamic":"Raj","MMM8-islamic":"\u0160ha","MMM9-islamic":"Ram","MMM10-islamic":"\u0160aw",
"MMM11-islamic":"Qad","MMM12-islamic":"\u1e24ij","MMMM1-islamic":"Mu\u1e25arram","MMMM2-islamic":"\u1e62afar","MMMM3-islamic":"Rab\u012b\u2018 I","MMMM4-islamic":"Rab\u012b\u2018 II","MMMM5-islamic":"Jum\u0101d\u0101 I","MMMM6-islamic":"Jum\u0101d\u0101 II","MMMM7-islamic":"Rajab","MMMM8-islamic":"\u0160ha'b\u0101n","MMMM9-islamic":"Rama\u1e0d\u0101n","MMMM10-islamic":"\u0160aww\u0101l","MMMM11-islamic":"\u1e0eu al-Qa\u2018da","MMMM12-islamic":"\u1e0eu al-\u1e24ijja","E0-islamic":"A","E1-islamic":"I",
"E2-islamic":"T","E3-islamic":"A","E4-islamic":"K","E5-islamic":"J","E6-islamic":"S","EE0-islamic":"ah","EE1-islamic":"it","EE2-islamic":"th","EE3-islamic":"ar","EE4-islamic":"kh","EE5-islamic":"ju","EE6-islamic":"sa","EEE0-islamic":"aha","EEE1-islamic":"ith","EEE2-islamic":"tha","EEE3-islamic":"arb","EEE4-islamic":"kha","EEE5-islamic":"jum","EEE6-islamic":"sab","EEEE0-islamic":"yawn al-ahad","EEEE1-islamic":"yawn al-ithnaya","EEEE2-islamic":"yawn uth-thalathaa","EEEE3-islamic":"yawn al-arba\u2018a",
"EEEE4-islamic":"yawn al-khamis","EEEE5-islamic":"yawn al-jum\u2018a","EEEE6-islamic":"yawn as-sabt","N1-persian":"F","N2-persian":"O","N3-persian":"K","N4-persian":"T","N5-persian":"M","N6-persian":"S","N7-persian":"M","N8-persian":"A","N9-persian":"A","N10-persian":"D","N11-persian":"B","N12-persian":"E","NN1-persian":"Fa","NN2-persian":"Or","NN3-persian":"Kh","NN4-persian":"Ti","NN5-persian":"Mo","NN6-persian":"Sh","NN7-persian":"Me","NN8-persian":"Ab","NN9-persian":"Az","NN10-persian":"De","NN11-persian":"Ba",
"NN12-persian":"Es","MMM1-persian":"Far","MMM2-persian":"Ord","MMM3-persian":"Kho","MMM4-persian":"Tir","MMM5-persian":"Mor","MMM6-persian":"Sha","MMM7-persian":"Meh","MMM8-persian":"Aba","MMM9-persian":"Aza","MMM10-persian":"Dey","MMM11-persian":"Bah","MMM12-persian":"Esf","MMMM1-persian":"Farvardin","MMMM2-persian":"Ordibehesht","MMMM3-persian":"Khordad","MMMM4-persian":"Tir","MMMM5-persian":"Mordad","MMMM6-persian":"Shahrivar","MMMM7-persian":"Mehr","MMMM8-persian":"Aban","MMMM9-persian":"Azar",
"MMMM10-persian":"Dey","MMMM11-persian":"Bahman","MMMM12-persian":"Esfand","EE0-persian":"Ye","EE1-persian":"Do","EE2-persian":"Se","EE3-persian":"Ch","EE4-persian":"Pa","EE5-persian":"Jo","EE6-persian":"Sh","EEE0-persian":"Yek","EEE1-persian":"Dos","EEE2-persian":"Ses","EEE3-persian":"Cha","EEE4-persian":"Pan","EEE5-persian":"Jom","EEE6-persian":"Sha","EEEE0-persian":"Yekshanbeh","EEEE1-persian":"Doshanbeh","EEEE2-persian":"Seshhanbeh","EEEE3-persian":"Chaharshanbeh","EEEE4-persian":"Panjshanbeh",
"EEEE5-persian":"Jomeh","EEEE6-persian":"Shanbeh","N1-persian-algo":"F","N2-persian-algo":"O","N3-persian-algo":"K","N4-persian-algo":"T","N5-persian-algo":"M","N6-persian-algo":"S","N7-persian-algo":"M","N8-persian-algo":"A","N9-persian-algo":"A","N10-persian-algo":"D","N11-persian-algo":"B","N12-persian-algo":"E","NN1-persian-algo":"Fa","NN2-persian-algo":"Or","NN3-persian-algo":"Kh","NN4-persian-algo":"Ti","NN5-persian-algo":"Mo","NN6-persian-algo":"Sh","NN7-persian-algo":"Me","NN8-persian-algo":"Ab",
"NN9-persian-algo":"Az","NN10-persian-algo":"De","NN11-persian-algo":"Ba","NN12-persian-algo":"Es","MMM1-persian-algo":"Far","MMM2-persian-algo":"Ord","MMM3-persian-algo":"Kho","MMM4-persian-algo":"Tir","MMM5-persian-algo":"Mor","MMM6-persian-algo":"Sha","MMM7-persian-algo":"Meh","MMM8-persian-algo":"Aba","MMM9-persian-algo":"Aza","MMM10-persian-algo":"Dey","MMM11-persian-algo":"Bah","MMM12-persian-algo":"Esf","MMMM1-persian-algo":"Farvardin","MMMM2-persian-algo":"Ordibehesht","MMMM3-persian-algo":"Khordad",
"MMMM4-persian-algo":"Tir","MMMM5-persian-algo":"Mordad","MMMM6-persian-algo":"Shahrivar","MMMM7-persian-algo":"Mehr","MMMM8-persian-algo":"Aban","MMMM9-persian-algo":"Azar","MMMM10-persian-algo":"Dey","MMMM11-persian-algo":"Bahman","MMMM12-persian-algo":"Esfand","EE0-persian-algo":"Ye","EE1-persian-algo":"Do","EE2-persian-algo":"Se","EE3-persian-algo":"Ch","EE4-persian-algo":"Pa","EE5-persian-algo":"Jo","EE6-persian-algo":"Sh","EEE0-persian-algo":"Yek","EEE1-persian-algo":"Dos","EEE2-persian-algo":"Ses",
"EEE3-persian-algo":"Cha","EEE4-persian-algo":"Pan","EEE5-persian-algo":"Jom","EEE6-persian-algo":"Sha","EEEE0-persian-algo":"Yekshanbeh","EEEE1-persian-algo":"Doshanbeh","EEEE2-persian-algo":"Seshhanbeh","EEEE3-persian-algo":"Chaharshanbeh","EEEE4-persian-algo":"Panjshanbeh","EEEE5-persian-algo":"Jomeh","EEEE6-persian-algo":"Shanbeh","M1-thaisolar":"M","M2-thaisolar":"K","M3-thaisolar":"M","M4-thaisolar":"M","M5-thaisolar":"P","M6-thaisolar":"M","M7-thaisolar":"K","M8-thaisolar":"S","M9-thaisolar":"K",
"M10-thaisolar":"T","M11-thaisolar":"P","M12-thaisolar":"T","MM1-thaisolar":"MaK","MM2-thaisolar":"KP","MM3-thaisolar":"MiK","MM4-thaisolar":"MY","MM5-thaisolar":"PK","MM6-thaisolar":"MY","MM7-thaisolar":"KK","MM8-thaisolar":"SK","MM9-thaisolar":"KY","MM10-thaisolar":"TuK","MM11-thaisolar":"PY","MM12-thaisolar":"ThK","MMM1-thaisolar":"Ma.K.","MMM2-thaisolar":"Ku.P.","MMM3-thaisolar":"Mi.K.","MMM4-thaisolar":"Me.Y.","MMM5-thaisolar":"Ph.K.","MMM6-thaisolar":"Mi.Y.","MMM7-thaisolar":"Ka.K.","MMM8-thaisolar":"Si.K.",
"MMM9-thaisolar":"Ka.Y.","MMM10-thaisolar":"Tu.K.","MMM11-thaisolar":"Ph.Y.","MMM12-thaisolar":"Th.K.","MMMM1-thaisolar":"Makarakhom","MMMM2-thaisolar":"Kumphaphan","MMMM3-thaisolar":"Minakhom","MMMM4-thaisolar":"Mesayon","MMMM5-thaisolar":"Phruetsaphakhom","MMMM6-thaisolar":"Mithunayon","MMMM7-thaisolar":"Karakadakhom","MMMM8-thaisolar":"Singhakhom","MMMM9-thaisolar":"Kanyayon","MMMM10-thaisolar":"Tulakhom","MMMM11-thaisolar":"Phruetsachikayon","MMMM12-thaisolar":"Thanwakhom","E0-thaisolar":"A",
"E1-thaisolar":"C","E2-thaisolar":"A","E3-thaisolar":"P","E4-thaisolar":"P","E5-thaisolar":"S","E6-thaisolar":"S","EE0-thaisolar":"at","EE1-thaisolar":"ch","EE2-thaisolar":"an","EE3-thaisolar":"pu","EE4-thaisolar":"pr","EE5-thaisolar":"su","EE6-thaisolar":"sa","EEE0-thaisolar":"ath","EEE1-thaisolar":"cha","EEE2-thaisolar":"ang","EEE3-thaisolar":"phu","EEE4-thaisolar":"phr","EEE5-thaisolar":"suk","EEE6-thaisolar":"sao","EEEE0-thaisolar":"wan athit","EEEE1-thaisolar":"wan chan","EEEE2-thaisolar":"wan angkhan",
"EEEE3-thaisolar":"wan phut","EEEE4-thaisolar":"wan phruehatsabodi","EEEE5-thaisolar":"wan suk","EEEE6-thaisolar":"wan sao","N1-coptic":"T","N2-coptic":"P","N3-coptic":"A","N4-coptic":"K","N5-coptic":"T","N6-coptic":"M","N7-coptic":"P","N8-coptic":"P","N9-coptic":"P","N10-coptic":"P","N11-coptic":"E","N12-coptic":"M","N13-coptic":"E","NN1-coptic":"Th","NN2-coptic":"Pa","NN3-coptic":"At","NN4-coptic":"Ko","NN5-coptic":"To","NN6-coptic":"Me","NN7-coptic":"Pa","NN8-coptic":"Pa","NN9-coptic":"Pa","NN10-coptic":"Pa",
"NN11-coptic":"Ep","NN12-coptic":"Me","NN13-coptic":"Ep","MMM1-coptic":"Tho","MMM2-coptic":"Pao","MMM3-coptic":"Ath","MMM4-coptic":"Koi","MMM5-coptic":"Tob","MMM6-coptic":"Mes","MMM7-coptic":"Par","MMM8-coptic":"Par","MMM9-coptic":"Pas","MMM10-coptic":"Pao","MMM11-coptic":"Epe","MMM12-coptic":"Mes","MMM13-coptic":"Epa","MMMM1-coptic":"Thoout","MMMM2-coptic":"Paope","MMMM3-coptic":"Athor","MMMM4-coptic":"Koiak","MMMM5-coptic":"Tobe","MMMM6-coptic":"Meshir","MMMM7-coptic":"Paremotep","MMMM8-coptic":"Parmoute",
"MMMM9-coptic":"Pashons","MMMM10-coptic":"Paoone","MMMM11-coptic":"Epeep","MMMM12-coptic":"Mesore","MMMM13-coptic":"Epagomene","E0-coptic":"T","E1-coptic":"P","E2-coptic":"P","E3-coptic":"P","E4-coptic":"P","E5-coptic":"P","E6-coptic":"P","EE0-coptic":"Tk","EE1-coptic":"Pe","EE2-coptic":"Ps","EE3-coptic":"Pe","EE4-coptic":"Pt","EE5-coptic":"Ps","EE6-coptic":"Ps","EEE0-coptic":"Tky","EEE1-coptic":"Pes","EEE2-coptic":"Psh","EEE3-coptic":"Pef","EEE4-coptic":"Pti","EEE5-coptic":"Pso","EEE6-coptic":"Psa",
"EEEE0-coptic":"Tkyriake","EEEE1-coptic":"Pesnau","EEEE2-coptic":"Pshoment","EEEE3-coptic":"Peftoou","EEEE4-coptic":"Ptiou","EEEE5-coptic":"Psoou","EEEE6-coptic":"Psabbaton","N1-ethiopic":"M","N2-ethiopic":"T","N3-ethiopic":"H","N4-ethiopic":"T","N5-ethiopic":"T","N6-ethiopic":"Y","N7-ethiopic":"M","N8-ethiopic":"M","N9-ethiopic":"G","N10-ethiopic":"S","N11-ethiopic":"H","N12-ethiopic":"N","N13-ethiopic":"P","NN1-ethiopic":"Ma","NN2-ethiopic":"Te","NN3-ethiopic":"He","NN4-ethiopic":"Ta","NN5-ethiopic":"Te",
"NN6-ethiopic":"Ya","NN7-ethiopic":"Ma","NN8-ethiopic":"Mi","NN9-ethiopic":"Ge","NN10-ethiopic":"Sa","NN11-ethiopic":"Ha","NN12-ethiopic":"Na","NN13-ethiopic":"Pa","MMM1-ethiopic":"Mas","MMM2-ethiopic":"Teq","MMM3-ethiopic":"Hed","MMM4-ethiopic":"Tak","MMM5-ethiopic":"Ter","MMM6-ethiopic":"Yak","MMM7-ethiopic":"Mag","MMM8-ethiopic":"Miy","MMM9-ethiopic":"Gen","MMM10-ethiopic":"San","MMM11-ethiopic":"Ham","MMM12-ethiopic":"Nah","MMM13-ethiopic":"Pag","MMMM1-ethiopic":"Maskaram","MMMM2-ethiopic":"Teqemt",
"MMMM3-ethiopic":"Hedar","MMMM4-ethiopic":"Takhsas","MMMM5-ethiopic":"Ter","MMMM6-ethiopic":"Yakatit","MMMM7-ethiopic":"Magabit","MMMM8-ethiopic":"Miyazya","MMMM9-ethiopic":"Genbot","MMMM10-ethiopic":"Sane","MMMM11-ethiopic":"Hamle","MMMM12-ethiopic":"Nahase","MMMM13-ethiopic":"Paguemen","E0-ethiopic":"I","E1-ethiopic":"S","E2-ethiopic":"M","E3-ethiopic":"R","E4-ethiopic":"H","E5-ethiopic":"A","E6-ethiopic":"K","EE0-ethiopic":"Ih","EE1-ethiopic":"Sa","EE2-ethiopic":"Ma","EE3-ethiopic":"Ro","EE4-ethiopic":"Ha",
"EE5-ethiopic":"Ar","EE6-ethiopic":"Ki","EEE0-ethiopic":"Ihu","EEE1-ethiopic":"San","EEE2-ethiopic":"Mak","EEE3-ethiopic":"Rob","EEE4-ethiopic":"Ham","EEE5-ethiopic":"Arb","EEE6-ethiopic":"Kid","EEEE0-ethiopic":"Ihud","EEEE1-ethiopic":"Sanyo","EEEE2-ethiopic":"Maksanyo","EEEE3-ethiopic":"Rob/Rabu'e","EEEE4-ethiopic":"Hamus","EEEE5-ethiopic":"Arb","EEEE6-ethiopic":"Kidamme"};ilib.data.sysres_en_US={a0:"am",a1:"pm","G-1":"BC",G1:"AD",finalSeparatorFull:" and "};
ilib.data.sysres_de={MMMM1:"Januar",MMM1:"Jan.",MMMM2:"Februar",MMM2:"Feb.",MMMM3:"M\u00e4rz",MMM3:"M\u00e4r.",NN3:"M\u00e4",MMM4:"Apr.",MMMM5:"Mai",MMM5:"Mai",MMMM6:"Juni",MMM6:"Jun.",MMMM7:"Juli",MMM7:"Jul.",MMM8:"Aug.",MMM9:"Sep.",MMMM10:"Oktober",MMM10:"Okt.",NN10:"Ok",MMM11:"Nov.",MMMM12:"Dezember",MMM12:"Dez.",EEEE0:"Sonntag",EEE0:"So.",EE0:"So",EEEE1:"Montag",EEE1:"Mo.",EEEE2:"Dienstag",EEE2:"Di.",EE2:"Di",E2:"D",EEEE3:"Mittwoch",EEE3:"Mi.",EE3:"Mi",E3:"M",EEEE4:"Donnerstag",EEE4:"Do.",EE4:"Do",
E4:"D",EEEE5:"Freitag",EEE5:"Fr.",EEEE6:"Samstag",EEE6:"Sa.",ordinalChoice:"#{num}.",a0:"vorm.",a1:"nachm.","G-1":"v. Chr.",G1:"n. Chr.",durationShortMillis:"#{num}Ms","#{num}s":"#{num}S",durationShortMinutes:"#{num}M","#{num}h":"#{num}St","#{num}d":"#{num}T","#{num}w":"#{num}W",durationShortMonths:"#{num}Mo","#{num}y":"#{num}J","#{num} ms":"#{num} Ms.","1#1 se|#{num} sec":"#{num} Se.","1#1 mi|#{num} min":"#{num} Mi.",durationMediumHours:"#{num} St.","1#1 dy|#{num} dys":"#{num} Ta.",durationMediumWeeks:"#{num} Wo.",
"1#1 mo|#{num} mos":"#{num} Mo.",durationMediumYears:"#{num} Ja.","1#1 sec|#{num} sec":"#{num} Sek.","1#1 min|#{num} min":"#{num} Min.","1#1 hr|#{num} hrs":"#{num} Std.",durationLongDays:"1#{num} Tag|#{num} Tage","1#1 wk|#{num} wks":"#{num} Wch.","1#1 mon|#{num} mons":"#{num} Mon.","1#1 yr|#{num} yrs":"#{num} Jhr.","1#1 millisecond|#{num} milliseconds":"1#{num} Millisekunde|#{num} Millisekunden","1#1 second|#{num} seconds":"1#{num} Sekunde|#{num} Sekunden","1#1 minute|#{num} minutes":"1#{num} Minute|#{num} Minuten",
"1#1 hour|#{num} hours":"1#{num} Stunde|#{num} Stunden","1#1 day|#{num} days":"1#{num} Tag|#{num} Tage","1#1 week|#{num} weeks":"1#{num} Woche|#{num} Wochen","1#1 month|#{num} months":"1#{num} Monat|#{num} Monate","1#1 year|#{num} years":"1#{num} Jahr|#{num} Jahre","{duration} ago":"vor {duration}","in {duration}":"in {duration}",separatorShort:" ",separatorMedium:" ",separatorLong:", ",separatorFull:", ",finalSeparatorFull:" und "};
ilib.data.sysres_fr={MMMM1:"janvier",MMM1:"janv",NN1:"ja",MMMM2:"f\u00e9vrier",MMM2:"f\u00e9vr",NN2:"f\u00e9",MMMM3:"mars",MMM3:"mars",NN3:"ma",MMMM4:"avril",MMM4:"avr",NN4:"av",MMMM5:"mai",MMM5:"mai",NN5:"ma",MMMM6:"juin",MMM6:"juin",NN6:"ju",MMMM7:"juillet",MMM7:"juil",NN7:"ju",MMMM8:"ao\u00fbt",MMM8:"ao\u00fbt",NN8:"ao",MMMM9:"septembre",MMM9:"sept",NN9:"se",MMMM10:"octobre",MMM10:"oct",NN10:"oc",MMMM11:"novembre",MMM11:"nov",NN11:"no",MMMM12:"d\u00e9cembre",MMM12:"d\u00e9c",NN12:"d\u00e9",EEEE0:"dimanche",
EEE0:"dim.",EE0:"di",E0:"D",EEEE1:"lundi",EEE1:"lun.",EE1:"lu",E1:"L",EEEE2:"mardi",EEE2:"mar.",EE2:"ma",E2:"M",EEEE3:"mercredi",EEE3:"mer.",EE3:"me",E3:"M",EEEE4:"jeudi",EEE4:"jeu.",EE4:"je",E4:"J",EEEE5:"vendredi",EEE5:"ven.",EE5:"ve",E5:"V",EEEE6:"samedi",EEE6:"sam.",EE6:"sa",ordinalChoice:"1#1er|#{num}e",a0:"matin",a1:"soir","G-1":"av. J.-C.",G1:"ap. J.-C.",durationShortMillis:"#{num}ms","#{num}s":"#{num}s",durationShortMinutes:"#{num}m","#{num}h":"#{num}h","#{num}d":"#{num}j","#{num}w":"#{num}sm",
durationShortMonths:"#{num}mo","#{num}y":"#{num}a","#{num} ms":"#{num} Ms","1#1 se|#{num} sec":"1#{num} se|#{num} ses","1#1 mi|#{num} min":"1#{num} mn|#{num} mns",durationMediumHours:"1#{num} hr|#{num} hrs","1#1 dy|#{num} dys":"1#{num} jr|#{num} jrs",durationMediumWeeks:"1#{num} sm|#{num} sms","1#1 mo|#{num} mos":"1#{num} mo|#{num} mos",durationMediumYears:"1#{num} an|#{num} ans","1#1 sec|#{num} sec":"1#{num} sec|#{num} secs","1#1 min|#{num} min":"1#{num} min|#{num} mins","1#1 hr|#{num} hrs":"1#{num} hr|#{num} hrs",
durationLongDays:"1#{num} jr|#{num} jrs","1#1 wk|#{num} wks":"1#{num} sem|#{num} sems","1#1 mon|#{num} mons":"1#{num} mois|#{num} mois","1#1 yr|#{num} yrs":"1#{num} an|#{num} ans","1#1 millisecond|#{num} milliseconds":"1#{num} milliseconde|#{num} millisecondes","1#1 second|#{num} seconds":"1#{num} seconde|#{num} secondes","1#1 minute|#{num} minutes":"1#{num} minute|#{num} minutes","1#1 hour|#{num} hours":"1#{num} heure|#{num} heures","1#1 day|#{num} days":"1#{num} jour|#{num} jours","1#1 week|#{num} weeks":"1#{num} semaine|#{num} semaines",
"1#1 month|#{num} months":"#{num} mois","1#1 year|#{num} years":"1#{num} an|#{num} ans","{duration} ago":"il y a {duration}","in {duration}":"dans {duration}",separatorShort:" ",separatorMedium:" ",separatorLong:" ",separatorFull:", ",finalSeparatorFull:" et "};
ilib.data.sysres_es={MMMM1:"enero",MMM1:"ene",NN1:"en",N1:"E",MMMM2:"febrero",MMM2:"feb",NN2:"fe",MMMM3:"marzo",MMM3:"mar",NN3:"ma",MMMM4:"abril",MMM4:"abr",NN4:"ab",MMMM5:"mayo",MMM5:"may",NN5:"ma",MMMM6:"junio",MMM6:"jun",NN6:"ju",MMMM7:"julio",MMM7:"jul",NN7:"ju",MMMM8:"agosto",MMM8:"ago",NN8:"ag",MMMM9:"septiembre",MMM9:"sep",NN9:"se",MMMM10:"octubre",MMM10:"oct",NN10:"oc",MMMM11:"noviembre",MMM11:"nov",NN11:"no",MMMM12:"diciembre",MMM12:"dic",NN12:"di",EEEE0:"domingo",EEE0:"dom",EE0:"do",E0:"D",
EEEE1:"lunes",EEE1:"lun",EE1:"lu",E1:"L",EEEE2:"martes",EEE2:"mar",EE2:"ma",E2:"M",EEEE3:"mi\u00e9rcoles",EEE3:"mi\u00e9",EE3:"mi",E3:"M",EEEE4:"jueves",EEE4:"jue",EE4:"ju",E4:"J",EEEE5:"viernes",EEE5:"vie",EE5:"vi",E5:"V",EEEE6:"s\u00e1bado",EEE6:"s\u00e1b",EE6:"s\u00e1",ordinalChoice:"#{num} \u00ba",a0:"a.m.",a1:"p.m.","G-1":"a.C.",G1:"d.C.",durationShortMillis:"#{num}ms","#{num}s":"#{num}s",durationShortMinutes:"#{num}m","#{num}h":"#{num}h","#{num}d":"#{num}d","#{num}w":"#{num}sm",durationShortMonths:"#{num}me",
"#{num}y":"#{num}a","#{num} ms":"#{num} ms","1#1 se|#{num} sec":"1#{num} sg|#{num} sgs","1#1 mi|#{num} min":"1#{num} mn|#{num} mns",durationMediumHours:"1#{num} hr|#{num} hrs","1#1 dy|#{num} dys":"1#{num} d\u00ed|#{num} d\u00eds",durationMediumWeeks:"1#{num} sm|#{num} sms","1#1 mo|#{num} mos":"1#{num} me|#{num} mss",durationMediumYears:"1#{num} a\u00f1|#{num} a\u00f1s","1#1 sec|#{num} sec":"1#{num} seg|#{num} segs","1#1 min|#{num} min":"1#{num} min|#{num} mins","1#1 hr|#{num} hrs":"1#{num} hor|#{num} hors",
durationLongDays:"1#{num} d\u00eda|#{num} d\u00edas","1#1 wk|#{num} wks":"1#{num} sem|#{num} sems","1#1 mon|#{num} mons":"1#{num} mes|#{num} mss","1#1 yr|#{num} yrs":"1#{num} a\u00f1o|#{num} a\u00f1os","1#1 millisecond|#{num} milliseconds":"1#{num} millisegundo|#{num} millisegundos","1#1 second|#{num} seconds":"1#{num} segundo|#{num} segundos","1#1 minute|#{num} minutes":"1#{num} minuto|#{num} minutos","1#1 hour|#{num} hours":"1#{num} hora|#{num} horas","1#1 day|#{num} days":"1#{num} d\u00eda|#{num} d\u00edas",
"1#1 week|#{num} weeks":"1#{num} semana|#{num} semanas","1#1 month|#{num} months":"1#{num} mes|#{num} meses","1#1 year|#{num} years":"1#{num} a\u00f1o|#{num} a\u00f1os","{duration} ago":"hace {duration}","in {duration}":"en {duration}",separatorShort:" ",separatorMedium:" ",separatorLong:" ",separatorFull:", ",finalSeparatorFull:" y "};ilib.data.sysres_es_ES={E3:"X","in {duration}":"dentro de {duration}"};
ilib.data.sysres_id={NN5:"Me",NN8:"Ag",NN10:"Ok",MMM5:"Mei",MMM8:"Agt",MMM10:"Okt",MMM12:"Des",MMMM1:"Januari",MMMM2:"Februari",MMMM3:"Maret",MMMM5:"Mei",MMMM6:"Juni",MMMM7:"Juli",MMMM8:"Agustus",MMMM10:"Oktober",MMMM12:"Desember",E0:"M",E1:"S",E2:"S",E3:"R",E4:"K",E5:"J",EE0:"Mi",EE1:"Se",EE2:"Se",EE3:"Ra",EE4:"Ka",EE5:"Ju",EEE0:"Min",EEE1:"Sen",EEE2:"Sel",EEE3:"Rab",EEE4:"Kam",EEE5:"Jum",EEE6:"Sab",EEEE0:"Minggu",EEEE1:"Senin",EEEE2:"Selasa",EEEE3:"Rabu",EEEE4:"Kamis",EEEE5:"Jumat",EEEE6:"Sabtu",
a0:"AM",a1:"PM","G-1":"SM",G1:"M","in {duration}":"dalam {duration}","{duration} ago":"{duration} yang lalu","1#1 year|#{num} years":"#{num} tahun","1#1 month|#{num} months":"#{num} bulan","1#1 week|#{num} weeks":"#{num} minggu","1#1 day|#{num} days":"#{num} hari","1#1 hour|#{num} hours":"#{num} jam","1#1 minute|#{num} minutes":"#{num} menit","1#1 second|#{num} seconds":"#{num} detik","1#1 yr|#{num} yrs":"#{num} thn","1#1 mon|#{num} mons":"#{num} bln","1#1 wk|#{num} wks":"#{num} mggu",durationLongDays:"#{num} hari",
"1#1 hr|#{num} hrs":"#{num} jam","1#1 min|#{num} min":"#{num} mnt","1#1 sec|#{num} sec":"#{num} dtk",durationMediumYears:"#{num} th","1#1 mo|#{num} mos":"#{num} bl",durationMediumWeeks:"#{num} mg","1#1 dy|#{num} dys":"#{num} hr",durationMediumHours:"#{num} ja","1#1 mi|#{num} min":"#{num} mn","1#1 se|#{num} sec":"#{num} dt","#{num}y":"#{num}t",durationShortMonths:"#{num}b","#{num}w":"#{num}m","#{num}d":"#{num}h","#{num}h":"#{num}j",durationShortMinutes:"#{num}m","#{num}s":"#{num}d",separatorShort:" ",
separatorMedium:" ",separatorLong:" ",separatorFull:", ",finalSeparatorFull:", dan ",durationShortMillis:"#{num}m"};
ilib.data.sysres_it={MMMM1:"gennaio",MMM1:"gen",NN1:"ge",N1:"G",MMMM2:"febbraio",MMM2:"feb",NN2:"fe",MMMM3:"marzo",MMM3:"mar",NN3:"ma",MMMM4:"aprile",MMM4:"apr",NN4:"ap",MMMM5:"maggio",MMM5:"mag",NN5:"ma",MMMM6:"giugno",MMM6:"giu",NN6:"gi",N6:"G",MMMM7:"luglio",MMM7:"lug",NN7:"lu",N7:"L",MMMM8:"agosto",MMM8:"ago",NN8:"ag",MMMM9:"settembre",MMM9:"set",NN9:"se",MMMM10:"ottobre",MMM10:"ott",NN10:"ot",MMMM11:"novembre",MMM11:"nov",NN11:"no",MMMM12:"dicembre",MMM12:"dic",NN12:"di",EEEE0:"domenica",EEE0:"dom",
EE0:"do",E0:"D",EEEE1:"luned\u00ec",EEE1:"lun",EE1:"lu",E1:"L",EEEE2:"marted\u00ec",EEE2:"mar",EE2:"ma",E2:"M",EEEE3:"mercoled\u00ec",EEE3:"mer",EE3:"me",E3:"M",EEEE4:"gioved\u00ec",EEE4:"gio",EE4:"gi",E4:"G",EEEE5:"venerd\u00ec",EEE5:"ven",EE5:"ve",E5:"V",EEEE6:"sabato",EEE6:"sab",EE6:"sa",ordinalChoice:"#{num} \u00ba",a0:"AM",a1:"PM","G-1":"aC",G1:"dC",durationShortMillis:"#{num}ms","#{num}s":"#{num}s",durationShortMinutes:"#{num}m","#{num}h":"#{num}o","#{num}d":"#{num}g","#{num}w":"#{num}st",durationShortMonths:"#{num}me",
"#{num}y":"#{num}a","#{num} ms":"#{num} ms","1#1 se|#{num} sec":"#{num} se","1#1 mi|#{num} min":"#{num} mn",durationMediumHours:"#{num} h","1#1 dy|#{num} dys":"1#{num} g|#{num} gg",durationMediumWeeks:"#{num} set","1#1 mo|#{num} mos":"#{num} me",durationMediumYears:"#{num} an","1#1 sec|#{num} sec":"#{num} sec","1#1 min|#{num} min":"#{num} min","1#1 hr|#{num} hrs":"#{num} h",durationLongDays:"1#{num} g|#{num} gg","1#1 wk|#{num} wks":"#{num} sett","1#1 mon|#{num} mons":"1#{num} mese|#{num} mesi","1#1 yr|#{num} yrs":"1#{num} anno|#{num} anni",
"1#1 millisecond|#{num} milliseconds":"1#{num} millisecondo|#{num} millisecondi","1#1 second|#{num} seconds":"1#{num} secondo|#{num} secondi","1#1 minute|#{num} minutes":"1#{num} minuto|#{num} minuti","1#1 hour|#{num} hours":"1#{num} ora|#{num} ore","1#1 day|#{num} days":"1#{num} giorno|#{num} giorni","1#1 week|#{num} weeks":"1#{num} settimana|#{num} settimane","1#1 month|#{num} months":"1#{num} mese|#{num} mesi","1#1 year|#{num} years":"1#{num} anno|#{num} anni","in {duration}":"tra {duration}",
"{duration} ago":"{duration} fa",separatorShort:" ",separatorMedium:" ",separatorLong:" ",separatorFull:", ",finalSeparatorFull:", e "};
ilib.data.sysres_ja={MMMM1:"1",MMM1:"1",NN1:"1",N1:"\u4e00",MMMM2:"2",MMM2:"2",NN2:"2",N2:"\u4e8c",MMMM3:"3",MMM3:"3",NN3:"3",N3:"\u4e09",MMMM4:"4",MMM4:"4",NN4:"4",N4:"\u56db",MMMM5:"5",MMM5:"5",NN5:"5",N5:"\u4e94",MMMM6:"6",MMM6:"6",NN6:"6",N6:"\u516d",MMMM7:"7",MMM7:"7",NN7:"7",N7:"\u4e03",MMMM8:"8",MMM8:"8",NN8:"8",N8:"\u516b",MMMM9:"9",MMM9:"9",NN9:"9",N9:"\u4e5d",MMMM10:"10",MMM10:"10",NN10:"10",N10:"\u5341",MMMM11:"11",MMM11:"11",NN11:"11",N11:"\u5341\u4e00",MMMM12:"12",MMM12:"12",NN12:"12",
N12:"\u5341\u4e8c",EEEE0:"\u65e5\u66dc\u65e5",EEE0:"\u65e5\u66dc\u65e5",EE0:"\u65e5",E0:"\u65e5",EEEE1:"\u6708\u66dc\u65e5",EEE1:"\u6708\u66dc\u65e5",EE1:"\u6708",E1:"\u6708",EEEE2:"\u706b\u66dc\u65e5",EEE2:"\u706b\u66dc\u65e5",EE2:"\u706b",E2:"\u706b",EEEE3:"\u6c34\u66dc\u65e5",EEE3:"\u6c34\u66dc\u65e5",EE3:"\u6c34",E3:"\u6c34",EEEE4:"\u6728\u66dc\u65e5",EEE4:"\u6728\u66dc\u65e5",EE4:"\u6728",E4:"\u6728",EEEE5:"\u91d1\u66dc\u65e5",EEE5:"\u91d1\u66dc\u65e5",EE5:"\u91d1",E5:"\u91d1",EEEE6:"\u571f\u66dc\u65e5",
EEE6:"\u571f\u66dc\u65e5",EE6:"\u571f",E6:"\u571f",ordinalChoice:"#{num}",a0:"\u5348\u524d",a1:"\u5348\u5f8c","G-1":"\u7d00\u5143\u524d",G1:"\u7d00\u5143",durationShortMillis:"#{num}\u30df\u30ea\u79d2","#{num}s":"#{num}\u79d2",durationShortMinutes:"#{num}\u5206","#{num}h":"#{num}\u6642\u9593","#{num}d":"#{num}\u65e5","#{num}w":"#{num}\u9031\u9593",durationShortMonths:"#{num}\u30f6\u6708","#{num}y":"#{num}\u5e74","#{num} ms":"#{num}\u30df\u30ea\u79d2","1#1 se|#{num} sec":"#{num}\u79d2","1#1 mi|#{num} min":"#{num}\u5206",
durationMediumHours:"#{num}\u6642\u9593","1#1 dy|#{num} dys":"#{num}\u65e5",durationMediumWeeks:"#{num}\u9031\u9593","1#1 mo|#{num} mos":"#{num}\u30f6\u6708",durationMediumYears:"#{num}\u5e74","1#1 sec|#{num} sec":"#{num}\u79d2","1#1 min|#{num} min":"#{num}\u5206","1#1 hr|#{num} hrs":"#{num}\u6642\u9593",durationLongDays:"#{num}\u65e5","1#1 wk|#{num} wks":"#{num}\u9031\u9593","1#1 mon|#{num} mons":"#{num}\u30f6\u6708","1#1 yr|#{num} yrs":"#{num}\u5e74","1#1 millisecond|#{num} milliseconds":"#{num}\u30df\u30ea\u79d2",
"1#1 second|#{num} seconds":"#{num}\u79d2","1#1 minute|#{num} minutes":"#{num}\u5206","1#1 hour|#{num} hours":"#{num}\u6642\u9593","1#1 day|#{num} days":"#{num}\u65e5","1#1 week|#{num} weeks":"#{num}\u9031\u9593","1#1 month|#{num} months":"#{num}\u30f6\u6708","1#1 year|#{num} years":"#{num}\u5e74","{duration} ago":"{duration}\u524d","in {duration}":"{duration}\u3067",separatorShort:"",separatorMedium:"",separatorLong:"\u3001",separatorFull:"\u3001",finalSeparatorFull:"\u3001"};
ilib.data.sysres_ko={MMMM1:"\uc77c",MMM1:"1",NN1:"1",N1:"1",MMMM2:"\uc774",MMM2:"2",NN2:"2",N2:"2",MMMM3:"\uc0bc",MMM3:"3",NN3:"3",N3:"3",MMMM4:"\uc0ac",MMM4:"4",NN4:"4",N4:"4",MMMM5:"\uc624",MMM5:"5",NN5:"5",N5:"5",MMMM6:"\uc720",MMM6:"6",NN6:"6",N6:"6",MMMM7:"\uce60",MMM7:"7",NN7:"7",N7:"7",MMMM8:"\ud314",MMM8:"8",NN8:"8",N8:"8",MMMM9:"\uad6c",MMM9:"9",NN9:"9",N9:"9",MMMM10:"\uc2dc",MMM10:"10",NN10:"10",N10:"1O",MMMM11:"\uc2ed\uc77c",MMM11:"11",NN11:"11",N11:"11",MMMM12:"\uc2ed\uc774",MMM12:"12",
NN12:"12",N12:"12",EEEE0:"\uc77c\uc694\uc77c",EEE0:"\uc77c\uc694\uc77c",EE0:"\uc77c",E0:"\uc77c",EEEE1:"\uc6d4\uc694\uc77c",EEE1:"\uc6d4\uc694\uc77c",EE1:"\uc6d4",E1:"\uc6d4",EEEE2:"\ud654\uc694\uc77c",EEE2:"\ud654\uc694\uc77c",EE2:"\ud654",E2:"\ud654",EEEE3:"\uc218\uc694\uc77c",EEE3:"\uc218\uc694\uc77c",EE3:"\uc218",E3:"\uc218",EEEE4:"\ubaa9\uc694\uc77c",EEE4:"\ubaa9\uc694\uc77c",EE4:"\ubaa9",E4:"\ubaa9",EEEE5:"\uae08\uc694\uc77c",EEE5:"\uae08\uc694\uc77c",EE5:"\uae08",E5:"\uae08",EEEE6:"\ud1a0\uc694\uc77c",
EEE6:"\ud1a0\uc694\uc77c",EE6:"\ud1a0",E6:"\ud1a0",ordinalChoice:"#{num}",a0:"\uc624\uc804",a1:"\uc624\ud6c4","G-1":"\uae30\uc6d0\uc804",G1:"\uc11c\uae30",durationShortMillis:"#{num}\ub9ac\ucd08","#{num}s":"#{num}\ucd08",durationShortMinutes:"#{num}\ubd84","#{num}h":"#{num}\uc2dc","#{num}d":"#{num}\uc77c","#{num}w":"#{num}\uc8fc",durationShortMonths:"#{num}\uac1c","#{num}y":"#{num}\ub144","#{num} ms":"#{num}\ub9ac\ucd08","1#1 se|#{num} sec":"#{num}\ucd08","1#1 mi|#{num} min":"#{num}\ubd84",durationMediumHours:"#{num}\uc2dc\uac04",
"1#1 dy|#{num} dys":"#{num}\uc77c",durationMediumWeeks:"#{num}\uc8fc","1#1 mo|#{num} mos":"#{num}\uac1c\uc6d4",durationMediumYears:"#{num}\ub144","1#1 sec|#{num} sec":"#{num}\ucd08","1#1 min|#{num} min":"#{num}\ubd84","1#1 hr|#{num} hrs":"#{num}\uc2dc\uac04",durationLongDays:"#{num}\uc77c","1#1 wk|#{num} wks":"#{num}\uc8fc","1#1 mon|#{num} mons":"#{num}\uac1c\uc6d4","1#1 yr|#{num} yrs":"#{num}\ub144","1#1 millisecond|#{num} milliseconds":"#{num}\ubc00\ub9ac\ucd08","1#1 second|#{num} seconds":"#{num}\ucd08",
"1#1 minute|#{num} minutes":"#{num}\ubd84","1#1 hour|#{num} hours":"#{num}\uc2dc\uac04","1#1 day|#{num} days":"#{num}\uc77c","1#1 week|#{num} weeks":"#{num}\uc8fc","1#1 month|#{num} months":"#{num}\uac1c\uc6d4","1#1 year|#{num} years":"#{num}\ub144","{duration} ago":"{duration}\uc804","in {duration}":"{duration}\uc5d0",separatorShort:" ",separatorMedium:" ",separatorLong:", ",separatorFull:", ",finalSeparatorFull:" \ubc0f "};
ilib.data.sysres_pt={MMMM1:"Janeiro",MMM1:"Jan",NN1:"Ja",MMMM2:"Fevereiro",MMM2:"Fev",NN2:"Fe",MMMM3:"Mar\u00e7o",MMM3:"Mar",NN3:"Ma",MMMM4:"Abril",MMM4:"Abr",NN4:"Ab",MMMM5:"Maio",MMM5:"Mai",NN5:"Ma",MMMM6:"Junho",MMM6:"Jun",NN6:"Ju",MMMM7:"Julho",MMM7:"Jul",NN7:"Ju",MMMM8:"Agosto",MMM8:"Ago",NN8:"Ag",MMMM9:"Setembro",MMM9:"Set",NN9:"Se",MMMM10:"Outubro",MMM10:"Out",NN10:"Ou",MMMM11:"Novembro",MMM11:"Nov",NN11:"No",MMMM12:"Dezembro",MMM12:"Dez",NN12:"De",EEEE0:"domingo",EEE0:"dom",EE0:"do",E0:"D",
EEEE1:"segunda-feira",EEE1:"seg",EE1:"sg",E1:"S",EEEE2:"ter\u00e7a-feira",EEE2:"ter",EE2:"te",EEEE3:"quarta-feira",EEE3:"qua",EE3:"qu",E3:"Q",EEEE4:"quinta-feira",EEE4:"qui",EE4:"qi",E4:"Q",EEEE5:"sexta-feira",EEE5:"sex",EE5:"sx",E5:"S",EEEE6:"s\u00e1bado",EEE6:"s\u00e1b",EE6:"sb",ordinalChoice:"#{num}",a0:"AM",a1:"PM","G-1":"a.C.",G1:"d.C.",durationShortMillis:"#{num}ms","#{num}s":"#{num}s",durationShortMinutes:"#{num}m","#{num}h":"#{num}h","#{num}d":"#{num}d","#{num}w":"#{num}sm",durationShortMonths:"#{num}me",
"#{num}y":"#{num}a","#{num} ms":"#{num} ms","1#1 se|#{num} sec":"1#{num} sg|#{num} sgs","1#1 mi|#{num} min":"1#{num} mn|#{num} mns",durationMediumHours:"1#{num} hr|#{num} hrs","1#1 dy|#{num} dys":"1#{num} di|#{num} dis",durationMediumWeeks:"1#{num} sm|#{num} sms","1#1 mo|#{num} mos":"1#{num} m\u00ea|#{num} mes",durationMediumYears:"1#{num} an|#{num} ans","1#1 sec|#{num} sec":"1#{num} seg|#{num} segs","1#1 min|#{num} min":"1#{num} min|#{num} mins","1#1 hr|#{num} hrs":"1#{num} hor|#{num} hors",durationLongDays:"1#{num} dia|#{num} dias",
"1#1 wk|#{num} wks":"1#{num} sem|#{num} sems","1#1 mon|#{num} mons":"1#{num} m\u00eas|#{num} mss","1#1 yr|#{num} yrs":"1#{num} ano|#{num} anos","1#1 millisecond|#{num} milliseconds":"1#{num} millisegundo|#{num} millisegundos","1#1 second|#{num} seconds":"1#{num} segundo|#{num} segundos","1#1 minute|#{num} minutes":"1#{num} minuto|#{num} minutos","1#1 hour|#{num} hours":"1#{num} hora|#{num} horas","1#1 day|#{num} days":"1#{num} dia|#{num} dias","1#1 week|#{num} weeks":"1#{num} semana|#{num} semanas",
"1#1 month|#{num} months":"1#{num} m\u00eas|#{num} meses","1#1 year|#{num} years":"1#{num} ano|#{num} anos","{duration} ago":"h\u00e1 {duration}","in {duration}":"dentro de {duration}",separatorShort:" ",separatorMedium:" ",separatorLong:" ",separatorFull:", ",finalSeparatorFull:" e "};
ilib.data.sysres_pt_BR={NN1:"ja",NN2:"fe",NN3:"ma",NN4:"ab",NN5:"ma",NN6:"ju",NN7:"ju",NN8:"ag",NN9:"se",NN10:"ou",NN11:"no",NN12:"de",MMM1:"jan",MMM2:"fev",MMM3:"mar",MMM4:"abr",MMM5:"mai",MMM6:"jun",MMM7:"jul",MMM8:"ago",MMM9:"set",MMM10:"out",MMM11:"nov",MMM12:"dez",MMMM1:"janeiro",MMMM2:"fevereiro",MMMM3:"mar\u00e7o",MMMM4:"abril",MMMM5:"maio",MMMM6:"junho",MMMM7:"julho",MMMM8:"agosto",MMMM9:"setembro",MMMM10:"outubro",MMMM11:"novembro",MMMM12:"dezembro",EE1:"se",EE4:"qu",EE5:"se",EE6:"s\u00e1"};
ilib.data.sysres_ru={N1:"\u042f",N2:"\u0424",N3:"\u041c",N4:"\u0410",N5:"\u041c",N6:"\u0418",N7:"\u0418",N8:"\u0410",N9:"\u0421",N10:"\u041e",N11:"\u041d",N12:"\u0414",NN1:"\u044f\u043d",NN2:"\u0444\u0435",NN3:"\u043c\u0430",NN4:"\u0430\u043f",NN5:"\u043c\u0430",NN6:"\u0438\u044e",NN7:"\u0438\u044e",NN8:"\u0430\u0432",NN9:"\u0441\u0435",NN10:"\u043e\u043a",NN11:"\u043d\u043e",NN12:"\u0434\u0435",MMM1:"\u044f\u043d\u0432.",MMM2:"\u0444\u0435\u0432\u0440.",MMM3:"\u043c\u0430\u0440\u0442\u0430",MMM4:"\u0430\u043f\u0440.",
MMM5:"\u043c\u0430\u044f",MMM6:"\u0438\u044e\u043d\u044f",MMM7:"\u0438\u044e\u043b\u044f",MMM8:"\u0430\u0432\u0433.",MMM9:"\u0441\u0435\u043d\u0442.",MMM10:"\u043e\u043a\u0442.",MMM11:"\u043d\u043e\u044f\u0431.",MMM12:"\u0434\u0435\u043a",MMMM1:"\u044f\u043d\u0432\u0430\u0440\u044f",MMMM2:"\u0444\u0435\u0432\u0440\u0430\u043b\u044f",MMMM3:"\u043c\u0430\u0440\u0442\u0430",MMMM4:"\u0430\u043f\u0440\u0435\u043b\u044f",MMMM5:"\u043c\u0430\u044f",MMMM6:"\u0438\u044e\u043d\u044f",MMMM7:"\u0438\u044e\u043b\u044f",
MMMM8:"\u0430\u0432\u0433\u0443\u0441\u0442\u0430",MMMM9:"\u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044f",MMMM10:"\u043e\u043a\u0442\u044f\u0431\u0440\u044f",MMMM11:"\u043d\u043e\u044f\u0431\u0440\u044f",MMMM12:"\u0434\u0435\u043a\u0430\u0431\u0440\u044f",E0:"\u0412",E1:"\u041f",E2:"\u0412",E3:"\u0421",E4:"\u0427",E5:"\u041f",E6:"\u0421",EE0:"\u0432\u0441",EE1:"\u043f\u043d",EE2:"\u0432\u0442",EE3:"\u0441\u0440",EE4:"\u0447\u0442",EE5:"\u043f\u0442",EE6:"\u0441\u0431",EEE0:"\u0432\u0441",EEE1:"\u043f\u043d",
EEE2:"\u0432\u0442",EEE3:"\u0441\u0440",EEE4:"\u0447\u0442",EEE5:"\u043f\u0442",EEE6:"\u0441\u0431",EEEE0:"\u0432\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435",EEEE1:"\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a",EEEE2:"\u0432\u0442\u043e\u0440\u043d\u0438\u043a",EEEE3:"\u0441\u0440\u0435\u0434\u0430",EEEE4:"\u0447\u0435\u0442\u0432\u0435\u0440\u0433",EEEE5:"\u043f\u044f\u0442\u043d\u0438\u0446\u0430",EEEE6:"\u0441\u0443\u0431\u0431\u043e\u0442\u0430",a0:"\u0434\u043e \u043f\u043e\u043b\u0443\u0434\u043d\u044f",
a1:"\u043f\u043e\u0441\u043b\u0435 \u043f\u043e\u043b\u0443\u0434\u043d\u044f","G-1":"\u0434\u043e \u043d.\u044d.",G1:"\u043d.\u044d.","in {duration}":"\u0447\u0435\u0440\u0435\u0437 {duration}","{duration} ago":"{duration} \u043d\u0430\u0437\u0430\u0434","1#1 year|#{num} years":"one#{num} \u0433\u043e\u0434|many#{num} \u043b\u0435\u0442|#{num} \u0433\u043e\u0434\u0430","1#1 month|#{num} months":"one#{num} \u043c\u0435\u0441\u044f\u0446|many#{num} \u043c\u0435\u0441\u044f\u0446\u0435\u0432|#{num} \u043c\u0435\u0441\u044f\u0446\u0430",
"1#1 week|#{num} weeks":"one#{num} \u043d\u0435\u0434\u0435\u043b\u044f|many#{num} \u043d\u0435\u0434\u0435\u043b\u044c|#{num} \u043d\u0435\u0434\u0435\u043b\u0438","1#1 day|#{num} days":"one#{num} \u0434\u0435\u043d\u044c|many#{num} \u0434\u043d\u0435\u0439|#{num} \u0434\u043d\u044f","1#1 hour|#{num} hours":"one#{num} \u0447\u0430\u0441|many#{num} \u0447\u0430\u0441\u043e\u0432|#{num} \u0447\u0430\u0441\u0430","1#1 minute|#{num} minutes":"one#{num} \u043c\u0438\u043d\u0443\u0442\u0430|many#{num} \u043c\u0438\u043d\u0443\u0442|#{num} \u043c\u0438\u043d\u0443\u0442\u044b",
"1#1 second|#{num} seconds":"one#{num} \u0441\u0435\u043a\u0443\u043d\u0434\u0430|many#{num} \u0441\u0435\u043a\u0443\u043d\u0434|#{num} \u0441\u0435\u043a\u0443\u043d\u0434\u044b","1#1 yr|#{num} yrs":"one#{num} \u0433\u043e\u0434|many#{num} \u043b\u0435\u0442|#{num} \u0433\u043e\u0434\u0430","1#1 mon|#{num} mons":"#{num} \u043c\u0435\u0441","1#1 wk|#{num} wks":"#{num} \u043d\u0435\u0434",durationLongDays:"one#{num} \u0434\u0435\u043d\u044c|many#{num} \u0434\u043d\u0435\u0439|#{num} \u0434\u043d\u044f",
"1#1 hr|#{num} hrs":"one#{num} \u0447\u0430\u0441|many#{num} \u0447\u0430\u0441|#{num} \u0447\u0430\u0441\u0430","1#1 min|#{num} min":"#{num} \u043c\u0438\u043d","1#1 sec|#{num} sec":"#{num} \u0441\u0435\u043a",durationMediumYears:"#{num} \u0433","1#1 mo|#{num} mos":"#{num} \u043c\u0435",durationMediumWeeks:"#{num} \u043d\u0435","1#1 dy|#{num} dys":"#{num} \u0434\u043d",durationMediumHours:"#{num} \u0447","1#1 mi|#{num} min":"#{num} \u043c\u0438","1#1 se|#{num} sec":"#{num} \u0441\u0435","#{num}y":"#{num}\u0433",
durationShortMonths:"#{num}\u043c","#{num}w":"#{num}\u043d","#{num}d":"#{num}\u0434","#{num}h":"#{num}\u0447",durationShortMinutes:"#{num}\u043c","#{num}s":"#{num}\u0441",durationShortMillis:"#{num}\u043c\u0441",separatorShort:" ",separatorMedium:" ",separatorLong:" ",separatorFull:", ",finalSeparatorFull:" \u0438 "};
ilib.data.sysres_tr={N1:"O",N2:"\u015e",N4:"N",N6:"H",N7:"T",N9:"E",N10:"E",N11:"K",N12:"A",NN1:"oc",NN2:"\u015fu",NN3:"ma",NN4:"ni",NN5:"ma",NN6:"ha",NN7:"te",NN8:"a\u011f",NN9:"ey",NN10:"ek",NN11:"ka",NN12:"ar",MMM1:"oca",MMM2:"\u015fub",MMM3:"mar",MMM4:"nis",MMM5:"may",MMM6:"haz",MMM7:"tem",MMM8:"a\u011fu",MMM9:"eyl",MMM10:"eki",MMM11:"kas",MMM12:"ara",MMMM1:"ocak",MMMM2:"\u015fubat",MMMM3:"mart",MMMM4:"nisan",MMMM5:"may\u0131s",MMMM6:"haziran",MMMM7:"temmuz",MMMM8:"a\u011fustos",MMMM9:"eyl\u00fcl",
MMMM10:"ekim",MMMM11:"kas\u0131m",MMMM12:"aral\u0131k",E0:"P",E1:"P",E2:"S",E3:"\u00c7",E4:"P",E5:"C",E6:"C",EE0:"Pa",EE1:"Pt",EE2:"Sa",EE3:"\u00c7a",EE4:"Pe",EE5:"Cu",EE6:"Ct",EEE0:"Paz",EEE1:"Pzt",EEE2:"Sal",EEE3:"\u00c7ar",EEE4:"Per",EEE5:"Cum",EEE6:"Cmt",EEEE0:"Pazar",EEEE1:"Pazartesi",EEEE2:"Sal\u0131",EEEE3:"\u00c7ar\u015famba",EEEE4:"Per\u015fembe",EEEE5:"Cuma",EEEE6:"Cumartesi",a0:"\u00d6\u00d6",a1:"\u00d6S","G-1":"M\u00d6",G1:"MS","in {duration}":"{duration} sonra","{duration} ago":"{duration} \u00f6nce",
"1#1 year|#{num} years":"#{num} y\u0131l","1#1 month|#{num} months":"#{num} ay","1#1 week|#{num} weeks":"#{num} hafta","1#1 day|#{num} days":"#{num} g\u00fcn","1#1 hour|#{num} hours":"#{num} saat","1#1 minute|#{num} minutes":"#{num} dakika","1#1 second|#{num} seconds":"#{num} saniye","1#1 yr|#{num} yrs":"#{num} y\u0131l","1#1 mon|#{num} mons":"#{num} ay","1#1 wk|#{num} wks":"#{num} haf",durationLongDays:"#{num} g\u00fcn","1#1 hr|#{num} hrs":"#{num} saat","1#1 min|#{num} min":"#{num} dak","1#1 sec|#{num} sec":"#{num} san",
durationMediumYears:"#{num} y\u0131l","1#1 mo|#{num} mos":"#{num} ay",durationMediumWeeks:"#{num} hf","1#1 dy|#{num} dys":"#{num} g\u00fcn",durationMediumHours:"#{num} sa","1#1 mi|#{num} min":"#{num} dk","1#1 se|#{num} sec":"#{num} sn","#{num}y":"#{num}y",durationShortMonths:"#{num}a","#{num}w":"#{num}h","#{num}d":"#{num}g","#{num}h":"#{num}s",durationShortMinutes:"#{num}d","#{num}s":"#{num}s",separatorShort:" ",separatorMedium:" ",separatorLong:" ",separatorFull:", ",finalSeparatorFull:" ve ","#{num} ms":"#{num} ms",
"1#1 millisecond|#{num} milliseconds":"#{num} milisaniye"};
ilib.data.sysres_vi={N1:"1",N2:"2",N3:"3",N4:"4",N5:"5",N6:"6",N7:"7",N8:"8",N9:"9",N10:"10",N11:"11",N12:"12",NN1:"1",NN2:"2",NN3:"3",NN4:"4",NN5:"5",NN6:"6",NN7:"7",NN8:"8",NN9:"9",NN10:"10",NN11:"11",NN12:"12",MMM1:"th.1",MMM2:"th.2",MMM3:"th.3",MMM4:"th.4",MMM5:"th.5",MMM6:"th.6",MMM7:"th.7",MMM8:"th.8",MMM9:"th.9",MMM10:"th.10",MMM11:"th.11",MMM12:"th.12",MMMM1:"th\u00e1ng m\u1ed9t",MMMM2:"th\u00e1ng hai",MMMM3:"th\u00e1ng ba",MMMM4:"th\u00e1ng t\u01b0",MMMM5:"th\u00e1ng n\u0103m",MMMM6:"th\u00e1ng s\u00e1u",
MMMM7:"th\u00e1ng b\u1ea3y",MMMM8:"th\u00e1ng t\u00e1m",MMMM9:"th\u00e1ng ch\u00edn",MMMM10:"th\u00e1ng m\u01b0\u1eddi",MMMM11:"th\u00e1ng m\u01b0\u1eddi m\u1ed9t",MMMM12:"th\u00e1ng m\u01b0\u1eddi hai",E0:"cn",E1:"t2",E2:"t3",E3:"t4",E4:"t5",E5:"t6",E6:"t7",EE0:"cn",EE1:"t2",EE2:"t3",EE3:"t4",EE4:"t5",EE5:"t6",EE6:"t7",EEE0:"cn",EEE1:"th 2",EEE2:"th 3",EEE3:"th 4",EEE4:"th 5",EEE5:"th 6",EEE6:"th 7",EEEE0:"ch\u1ee7 nh\u1eadt",EEEE1:"th\u1ee9 hai",EEEE2:"th\u1ee9 ba",EEEE3:"th\u1ee9 t\u01b0",EEEE4:"th\u1ee9 n\u0103m",
EEEE5:"th\u1ee9 s\u00e1u",EEEE6:"th\u1ee9 b\u1ea3y",a0:"SA",a1:"CH","G-1":"tr. CN",G1:"sau CN","in {duration}":"trong {duration}","{duration} ago":"{duration} tr\u01b0\u1edbc","1#1 year|#{num} years":"#{num} n\u0103m","1#1 month|#{num} months":"#{num} th\u00e1ng","1#1 week|#{num} weeks":"#{num} tu\u1ea7n","1#1 day|#{num} days":"#{num} ng\u00e0y","1#1 hour|#{num} hours":"#{num} gi\u1edd","1#1 minute|#{num} minutes":"#{num} ph\u00fat","1#1 second|#{num} seconds":"#{num} gi\u00e2y","1#1 yr|#{num} yrs":"#{num} n\u0103m",
"1#1 mon|#{num} mons":"#{num} th\u00e1","1#1 wk|#{num} wks":"#{num} tu\u1ea7n",durationLongDays:"#{num} ng\u00e0y","1#1 hr|#{num} hrs":"#{num} gi\u1edd","1#1 min|#{num} min":"#{num} ph\u00fat","1#1 sec|#{num} sec":"#{num} gi\u00e2y",durationMediumYears:"#{num} n\u0103m","1#1 mo|#{num} mos":"#{num} th",durationMediumWeeks:"#{num} tu","1#1 dy|#{num} dys":"#{num} ng",durationMediumHours:"#{num} gi\u1edd","1#1 mi|#{num} min":"#{num} ph","1#1 se|#{num} sec":"#{num} gi","#{num}y":"#{num}n",durationShortMonths:"#{num}t",
"#{num}w":"#{num}t","#{num}d":"#{num}n","#{num}h":"#{num}g",durationShortMinutes:"#{num}p","#{num}s":"#{num}g",separatorShort:" ",separatorMedium:" ",separatorLong:", ",separatorFull:", ",finalSeparatorFull:" v\u00e0 "};
ilib.data.sysres_zh={MMMM1:"1",MMM1:"1",NN1:"01",N1:"1",MMMM2:"2",MMM2:"2",NN2:"02",N2:"2",MMMM3:"3",MMM3:"3",NN3:"03",N3:"3",MMMM4:"4",MMM4:"4",NN4:"04",N4:"4",MMMM5:"5",MMM5:"5",NN5:"05",N5:"5",MMMM6:"6",MMM6:"6",NN6:"06",N6:"6",MMMM7:"7",MMM7:"7",NN7:"07",N7:"7",MMMM8:"8",MMM8:"8",NN8:"08",N8:"8",MMMM9:"9",MMM9:"9",NN9:"09",N9:"9",MMMM10:"10",MMM10:"10",NN10:"10",N10:"1O",MMMM11:"11",MMM11:"11",NN11:"11",N11:"11",MMMM12:"12",MMM12:"12",NN12:"12",N12:"12",EEEE0:"\u661f\u671f\u65e5",EEE0:"\u5468\u65e5",
EE0:"\u5468\u65e5",E0:"\u65e5",EEEE1:"\u661f\u671f\u4e00",EEE1:"\u5468\u4e00",EE1:"\u5468\u4e00",E1:"\u4e00",EEEE2:"\u661f\u671f\u4e8c",EEE2:"\u5468\u4e8c",EE2:"\u5468\u4e8c",E2:"\u4e8c",EEEE3:"\u661f\u671f\u4e09",EEE3:"\u5468\u4e09",EE3:"\u5468\u4e09",E3:"\u4e09",EEEE4:"\u661f\u671f\u56db",EEE4:"\u5468\u56db",EE4:"\u5468\u56db",E4:"\u56db",EEEE5:"\u661f\u671f\u4e94",EEE5:"\u5468\u4e94",EE5:"\u5468\u4e94",E5:"\u4e94",EEEE6:"\u661f\u671f\u516d",EEE6:"\u5468\u516d",EE6:"\u5468\u516d",E6:"\u516d",ordinalChoice:"#{num}\u5929",
a0:"\u4e0a\u5348",a1:"\u4e0b\u5348",azh0:"\u51cc\u6668",azh1:"\u65e9\u4e0a",azh2:"\u4e0a\u5348",azh3:"\u4e2d\u5348",azh4:"\u4e0b\u5348",azh5:"\u508d\u665a",azh6:"\u665a\u4e0a","G-1":"\u516c\u5143\u524d",G1:"\u516c\u5143",durationShortMillis:"#{num}\u6beb\u79d2","#{num}s":"#{num}\u79d2",durationShortMinutes:"#{num}\u5206\u949f","#{num}h":"#{num}\u5c0f\u65f6","#{num}d":"#{num}\u5929","#{num}w":"#{num}\u5468",durationShortMonths:"#{num}\u4e2a\u6708","#{num}y":"#{num}\u5e74","#{num} ms":"#{num}\u6beb\u79d2",
"1#1 se|#{num} sec":"#{num}\u79d2","1#1 mi|#{num} min":"#{num}\u5206\u949f",durationMediumHours:"#{num}\u5c0f\u65f6","1#1 dy|#{num} dys":"#{num}\u5929",durationMediumWeeks:"#{num}\u5468","1#1 mo|#{num} mos":"#{num}\u4e2a\u6708",durationMediumYears:"#{num}\u5e74","1#1 sec|#{num} sec":"#{num}\u79d2","1#1 min|#{num} min":"#{num}\u5206\u949f","1#1 hr|#{num} hrs":"#{num}\u5c0f\u65f6",durationLongDays:"#{num}\u5929","1#1 wk|#{num} wks":"#{num}\u5468","1#1 mon|#{num} mons":"#{num}\u4e2a\u6708","1#1 yr|#{num} yrs":"#{num}\u5e74",
"1#1 millisecond|#{num} milliseconds":"#{num}\u6beb\u79d2","1#1 second|#{num} seconds":"#{num}\u79d2","1#1 minute|#{num} minutes":"#{num}\u5206\u949f","1#1 hour|#{num} hours":"#{num}\u5c0f\u65f6","1#1 day|#{num} days":"#{num}\u5929","1#1 week|#{num} weeks":"#{num}\u5468","1#1 month|#{num} months":"#{num}\u4e2a\u6708","1#1 year|#{num} years":"#{num}\u5e74","{duration} ago":"{duration}\u524d","in {duration}":"{duration}\u540e",separatorShort:"",separatorMedium:"",separatorLong:"\u3001",separatorFull:"\u3001",
finalSeparatorFull:"\u548c"};
ilib.data.sysres_zh_HK={EEE0:"\u9031\u65e5",EE0:"\u9031\u65e5",E0:"\u9031\u65e5",EEE1:"\u9031\u4e00",EE1:"\u9031\u4e00",E1:"\u9031\u4e00",EEE2:"\u9031\u4e8c",EE2:"\u9031\u4e8c",E2:"\u9031\u4e8c",EEE3:"\u9031\u4e09",EE3:"\u9031\u4e09",E3:"\u9031\u4e09",EEE4:"\u9031\u56db",EE4:"\u9031\u56db",E4:"\u9031\u56db",EEE5:"\u9031\u4e94",EE5:"\u9031\u4e94",E5:"\u9031\u4e94",EEE6:"\u9031\u516d",EE6:"\u9031\u516d",E6:"\u9031\u516d",azh3:"\u6b63\u5348",durationShortMinutes:"#{num}\u5206\u9418","#{num}h":"#{num}\u5c0f\u6642",
"#{num}w":"#{num}\u9031",durationShortMonths:"#{num}\u500b\u6708","1#1 mi|#{num} min":"#{num}\u5206\u9418",durationMediumHours:"#{num}\u5c0f\u6642","1#1 wk|#{num} wks":"#{num}\u9031","1#1 mo|#{num} mos":"#{num}\u500b\u6708","1#1 min|#{num} min":"#{num}\u5206\u9418","1#1 hr|#{num} hrs":"#{num}\u5c0f\u6642","1#1 mon|#{num} mons":"#{num}\u500b\u6708","1#1 minute|#{num} minutes":"#{num}\u5206\u9418","1#1 hour|#{num} hours":"#{num}\u5c0f\u6642","1#1 week|#{num} weeks":"#{num}\u9031","1#1 month|#{num} months":"#{num}\u500b\u6708"};
ilib.data.sysres_zh_TW={EEE0:"\u9031\u65e5",EE0:"\u9031\u65e5",E0:"\u9031\u65e5",EEE1:"\u9031\u4e00",EE1:"\u9031\u4e00",E1:"\u9031\u4e00",EEE2:"\u9031\u4e8c",EE2:"\u9031\u4e8c",E2:"\u9031\u4e8c",EEE3:"\u9031\u4e09",EE3:"\u9031\u4e09",E3:"\u9031\u4e09",EEE4:"\u9031\u56db",EE4:"\u9031\u56db",E4:"\u9031\u56db",EEE5:"\u9031\u4e94",EE5:"\u9031\u4e94",E5:"\u9031\u4e94",EEE6:"\u9031\u516d",EE6:"\u9031\u516d",E6:"\u9031\u516d",azh3:"\u6b63\u5348",durationShortMinutes:"#{num}\u5206\u9418","#{num}h":"#{num}\u5c0f\u6642",
"#{num}w":"#{num}\u9031",durationShortMonths:"#{num}\u500b\u6708","1#1 mi|#{num} min":"#{num}\u5206\u9418",durationMediumHours:"#{num}\u5c0f\u6642","1#1 wk|#{num} wks":"#{num}\u9031","1#1 mo|#{num} mos":"#{num}\u500b\u6708","1#1 min|#{num} min":"#{num}\u5206\u9418","1#1 hr|#{num} hrs":"#{num}\u5c0f\u6642","1#1 mon|#{num} mons":"#{num}\u500b\u6708","1#1 minute|#{num} minutes":"#{num}\u5206\u9418","1#1 hour|#{num} hours":"#{num}\u5c0f\u6642","1#1 week|#{num} weeks":"#{num}\u9031","1#1 month|#{num} months":"#{num}\u500b\u6708"};
ilib.DateFmt=function $ilib$DateFmt$($options$$){var $arr$$,$i$$,$bad$$,$sync$$=true,$loadParams$$=void 0;this.locale=new ilib.Locale;this.type="date";this.length="s";this.dateComponents="dmy";this.timeComponents="ahm";this.meridiems="default";if($options$$){if($options$$.locale)this.locale=typeof $options$$.locale==="string"?new ilib.Locale($options$$.locale):$options$$.locale;if($options$$.type&&($options$$.type==="date"||$options$$.type==="time"||$options$$.type==="datetime"))this.type=$options$$.type;
if($options$$.calendar)this.calName=$options$$.calendar;if($options$$.length&&($options$$.length==="short"||$options$$.length==="medium"||$options$$.length==="long"||$options$$.length==="full"))this.length=$options$$.length.charAt(0);if($options$$.date){$arr$$=$options$$.date.split("");$arr$$.sort(function($left$$,$right$$){return $left$$<$right$$?-1:$right$$<$left$$?1:0});$bad$$=false;for($i$$=0;$i$$<$arr$$.length;$i$$++)if($arr$$[$i$$]!=="d"&&$arr$$[$i$$]!=="m"&&$arr$$[$i$$]!=="y"&&$arr$$[$i$$]!==
"w"&&$arr$$[$i$$]!=="n"){$bad$$=true;break}if(!$bad$$)this.dateComponents=$arr$$.join("")}if($options$$.time){$arr$$=$options$$.time.split("");$arr$$.sort(function($left$$,$right$$){return $left$$<$right$$?-1:$right$$<$left$$?1:0});this.badTime=false;for($i$$=0;$i$$<$arr$$.length;$i$$++)if($arr$$[$i$$]!=="h"&&$arr$$[$i$$]!=="m"&&$arr$$[$i$$]!=="s"&&$arr$$[$i$$]!=="a"&&$arr$$[$i$$]!=="z"){this.badTime=true;break}if(!this.badTime)this.timeComponents=$arr$$.join("")}if($options$$.clock&&($options$$.clock===
"12"||$options$$.clock==="24"))this.clock=$options$$.clock;if($options$$.template){this.timeComponents=this.dateComponents=this.length=this.type="";this.template=$options$$.template}if($options$$.timezone)this.tz=$options$$.timezone instanceof ilib.TimeZone?$options$$.timezone:new ilib.TimeZone({locale:this.locale,id:$options$$.timezone});else if($options$$.locale)this.tz=new ilib.TimeZone({locale:this.locale});if(typeof $options$$.useNative==="boolean")this.useNative=$options$$.useNative;if(typeof $options$$.meridiems!==
"undefined"&&($options$$.meridiems==="chinese"||$options$$.meridiems==="gregorian"||$options$$.meridiems==="ethiopic"))this.meridiems=$options$$.meridiems;typeof $options$$.sync!=="undefined"&&($sync$$=$options$$.sync===true);$loadParams$$=$options$$.loadParams}if(!ilib.DateFmt.cache)ilib.DateFmt.cache={};new ilib.LocaleInfo(this.locale,{sync:$sync$$,loadParams:$loadParams$$,onLoad:ilib.bind(this,function($li$$){this.locinfo=$li$$;this.calName=this.calName||this.locinfo.getCalendar()||"gregorian";
this.cal=ilib.Cal.newInstance({type:this.calName});if(!this.cal)this.cal=new ilib.Cal.Gregorian;if(this.meridiems==="default")this.meridiems=$li$$.getMeridiemsStyle();new ilib.ResBundle({locale:this.locale,name:"sysres",sync:$sync$$,loadParams:$loadParams$$,onLoad:ilib.bind(this,function($rb$$){this.sysres=$rb$$;if(this.template){this._massageTemplate();if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad(this)}else ilib.loadData({object:ilib.DateFmt,locale:this.locale,name:"dateformats.json",
sync:$sync$$,loadParams:$loadParams$$,callback:ilib.bind(this,function($formats$$){if(!$formats$$){var $formats$$=ilib.data.dateformats||ilib.DateFmt.defaultFmt,$spec$$=this.locale.getSpec().replace(/-/g,"_");ilib.DateFmt.cache[$spec$$]=$formats$$}if(typeof this.clock==="undefined")this.clock=this.locinfo.getClock();this._initTemplate($formats$$);this._massageTemplate();if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad(this)})})})})})})};
ilib.DateFmt.lenmap={s:"short",m:"medium",l:"long",f:"full"};ilib.DateFmt.zeros="0000";
ilib.DateFmt.defaultFmt={gregorian:{order:"{date} {time}",date:{dmwy:"EEE d/MM/yyyy",dmy:"d/MM/yyyy",dmw:"EEE d/MM",dm:"d/MM",my:"MM/yyyy",dw:"EEE d",d:"dd",m:"MM",y:"yyyy",n:"NN",w:"EEE"},time:{12:"h:mm:ssa",24:"H:mm:ss"},range:{c00:"{st} - {et}, {sd}/{sm}/{sy}",c01:"{sd}/{sm} {st} - {ed}/{em} {et}, {sy}",c02:"{sd}/{sm} {st} - {ed}/{em} {et}, {sy}",c03:"{sd}/{sm}/{sy} {st} - {ed}/{em}/{ey} {et}",c10:"{sd}-{ed}/{sm}/{sy}",c11:"{sd}/{sm} - {ed}/{em} {sy}",c12:"{sd}/{sm}/{sy} - {ed}/{em}/{ey}",c20:"{sm}/{sy} - {em}/{ey}",
c30:"{sy} - {ey}"}},islamic:"gregorian",hebrew:"gregorian",julian:"gregorian",buddhist:"gregorian",persian:"gregorian","persian-algo":"gregorian",han:"gregorian"};ilib.DateFmt.monthNameLenMap={"short":"N",medium:"NN","long":"MMM",full:"MMMM"};ilib.DateFmt.weekDayLenMap={"short":"E",medium:"EE","long":"EEE",full:"EEEE"};
ilib.DateFmt.getMeridiemsRange=function $ilib$DateFmt$getMeridiemsRange$($options$$){var $options$$=$options$$||{},$args$$={};if($options$$.locale)$args$$.locale=$options$$.locale;if($options$$.meridiems)$args$$.meridiems=$options$$.meridiems;return(new ilib.DateFmt($args$$)).getMeridiemsRange()};
ilib.DateFmt.prototype={_initTemplate:function $ilib$DateFmt$$_initTemplate$($formats$$){if($formats$$[this.calName]){this.formats=$formats$$[this.calName];if(typeof this.formats==="string")this.formats=$formats$$[this.formats];this.template="";switch(this.type){case "datetime":this.template=this.formats&&this._getLengthFormat(this.formats.order,this.length)||"{date} {time}";this.template=this.template.replace("{date}",this._getFormat(this.formats.date,this.dateComponents,this.length)||"");this.template=
this.template.replace("{time}",this._getFormat(this.formats.time[this.clock],this.timeComponents,this.length)||"");break;case "date":this.template=this._getFormat(this.formats.date,this.dateComponents,this.length);break;case "time":this.template=this._getFormat(this.formats.time[this.clock],this.timeComponents,this.length)}}else throw"No formats available for calendar "+this.calName+" in locale "+this.locale.toString();},_massageTemplate:function $ilib$DateFmt$$_massageTemplate$(){var $digits_i$$;
if(this.clock&&this.template){var $temp$$="";switch(this.clock){case "24":for($digits_i$$=0;$digits_i$$<this.template.length;$digits_i$$++)if(this.template.charAt($digits_i$$)=="'"){for($temp$$=$temp$$+this.template.charAt($digits_i$$++);$digits_i$$<this.template.length&&this.template.charAt($digits_i$$)!=="'";)$temp$$=$temp$$+this.template.charAt($digits_i$$++);$digits_i$$<this.template.length&&($temp$$=$temp$$+this.template.charAt($digits_i$$))}else $temp$$=this.template.charAt($digits_i$$)=="K"?
$temp$$+"k":this.template.charAt($digits_i$$)=="h"?$temp$$+"H":$temp$$+this.template.charAt($digits_i$$);this.template=$temp$$;break;case "12":for($digits_i$$=0;$digits_i$$<this.template.length;$digits_i$$++)if(this.template.charAt($digits_i$$)=="'"){for($temp$$=$temp$$+this.template.charAt($digits_i$$++);$digits_i$$<this.template.length&&this.template.charAt($digits_i$$)!=="'";)$temp$$=$temp$$+this.template.charAt($digits_i$$++);$digits_i$$<this.template.length&&($temp$$=$temp$$+this.template.charAt($digits_i$$))}else $temp$$=
this.template.charAt($digits_i$$)=="k"?$temp$$+"K":this.template.charAt($digits_i$$)=="H"?$temp$$+"h":$temp$$+this.template.charAt($digits_i$$);this.template=$temp$$}}this.templateArr=this._tokenize(this.template);if(typeof this.useNative==="boolean"){if(this.useNative)if($digits_i$$=this.locinfo.getNativeDigits())this.digits=$digits_i$$}else if(this.locinfo.getDigitsStyle()==="native")if($digits_i$$=this.locinfo.getNativeDigits()){this.useNative=true;this.digits=$digits_i$$}},_tokenize:function $ilib$DateFmt$$_tokenize$($template$$){var $i$$=
0,$start$$,$ch$$,$letter$$,$arr$$=[];if($template$$)for(;$i$$<$template$$.length;){$ch$$=$template$$.charAt($i$$);$start$$=$i$$;if($ch$$==="'"){for($i$$++;$i$$<$template$$.length&&$template$$.charAt($i$$)!=="'";)$i$$++;$i$$<$template$$.length&&$i$$++}else if($ch$$>="a"&&$ch$$<="z"||$ch$$>="A"&&$ch$$<="Z")for($letter$$=$template$$.charAt($i$$);$i$$<$template$$.length&&$ch$$===$letter$$;)$ch$$=$template$$.charAt(++$i$$);else for(;$i$$<$template$$.length&&$ch$$!=="'"&&($ch$$<"a"||$ch$$>"z")&&($ch$$<
"A"||$ch$$>"Z");)$ch$$=$template$$.charAt(++$i$$);$arr$$.push($template$$.substring($start$$,$i$$))}return $arr$$},_getFormat:function getFormat($obj$$,$components$$,$length$$){if(typeof $components$$!=="undefined"&&$obj$$&&$obj$$[$components$$])return this._getLengthFormat($obj$$[$components$$],$length$$)},_getLengthFormat:function getLengthFormat($obj$$,$length$$){if(typeof $obj$$==="string")return $obj$$;if($obj$$[$length$$])return $obj$$[$length$$]},getLocale:function $ilib$DateFmt$$getLocale$(){return this.locale},
getTemplate:function $ilib$DateFmt$$getTemplate$(){return this.template},getType:function $ilib$DateFmt$$getType$(){return this.type},getCalendar:function $ilib$DateFmt$$getCalendar$(){return this.cal.getType()},getLength:function $ilib$DateFmt$$getLength$(){return ilib.DateFmt.lenmap[this.length]||""},getDateComponents:function $ilib$DateFmt$$getDateComponents$(){return this.dateComponents||""},getTimeComponents:function $ilib$DateFmt$$getTimeComponents$(){return this.timeComponents||""},getTimeZone:function $ilib$DateFmt$$getTimeZone$(){if(!this.tz)this.tz=
new ilib.TimeZone({id:ilib.getTimeZone()});return this.tz},getClock:function $ilib$DateFmt$$getClock$(){return this.clock||this.locinfo.getClock()},getMeridiemsRange:function $ilib$DateFmt$$getMeridiemsRange$(){var $_getSysString_result$$;$_getSysString_result$$=function $$_getSysString_result$$$($key$$){return(this.sysres.getString(void 0,$key$$+"-"+this.calName)||this.sysres.getString(void 0,$key$$)).toString()};switch(this.meridiems){case "chinese":$_getSysString_result$$=[{name:$_getSysString_result$$.call(this,
"azh0"),start:"00:00",end:"05:59"},{name:$_getSysString_result$$.call(this,"azh1"),start:"06:00",end:"08:59"},{name:$_getSysString_result$$.call(this,"azh2"),start:"09:00",end:"11:59"},{name:$_getSysString_result$$.call(this,"azh3"),start:"12:00",end:"12:59"},{name:$_getSysString_result$$.call(this,"azh4"),start:"13:00",end:"17:59"},{name:$_getSysString_result$$.call(this,"azh5"),start:"18:00",end:"20:59"},{name:$_getSysString_result$$.call(this,"azh6"),start:"21:00",end:"23:59"}];break;case "ethiopic":$_getSysString_result$$=
[{name:$_getSysString_result$$.call(this,"a0-ethiopic"),start:"00:00",end:"05:59"},{name:$_getSysString_result$$.call(this,"a1-ethiopic"),start:"06:00",end:"06:00"},{name:$_getSysString_result$$.call(this,"a2-ethiopic"),start:"06:01",end:"11:59"},{name:$_getSysString_result$$.call(this,"a3-ethiopic"),start:"12:00",end:"17:59"},{name:$_getSysString_result$$.call(this,"a4-ethiopic"),start:"18:00",end:"23:59"}];break;default:$_getSysString_result$$=[{name:$_getSysString_result$$.call(this,"a0"),start:"00:00",
end:"11:59"},{name:$_getSysString_result$$.call(this,"a1"),start:"12:00",end:"23:59"}]}return $_getSysString_result$$},_getTemplate:function $ilib$DateFmt$$_getTemplate$($prefix$$,$calendar$$){return $calendar$$!=="gregorian"?$prefix$$+"-"+$calendar$$:$prefix$$},getMonthsOfYear:function $ilib$DateFmt$$getMonthsOfYear$($monthCount_options$$){var $length$$15_template$$=$monthCount_options$$&&$monthCount_options$$.length||this.getLength(),$length$$15_template$$=ilib.DateFmt.monthNameLenMap[$length$$15_template$$],
$months$$=[void 0],$date$$11_i$$;if($monthCount_options$$){$monthCount_options$$.date&&($date$$11_i$$=ilib.Date._dateToIlib($monthCount_options$$.date));$monthCount_options$$.year&&($date$$11_i$$=ilib.Date.newInstance({year:$monthCount_options$$.year,month:1,day:1,type:this.cal.getType()}))}$date$$11_i$$||($date$$11_i$$=this.cal.newDateInstance());$monthCount_options$$=this.cal.getNumMonths($date$$11_i$$.getYears());for($date$$11_i$$=1;$date$$11_i$$<=$monthCount_options$$;$date$$11_i$$++)$months$$[$date$$11_i$$]=
this.sysres.getString(this._getTemplate($length$$15_template$$+$date$$11_i$$,this.cal.getType())).toString();return $months$$},getDaysOfWeek:function $ilib$DateFmt$$getDaysOfWeek$($length$$16_options$$12_template$$){for(var $length$$16_options$$12_template$$=$length$$16_options$$12_template$$&&$length$$16_options$$12_template$$.length||this.getLength(),$length$$16_options$$12_template$$=ilib.DateFmt.weekDayLenMap[$length$$16_options$$12_template$$],$days$$=[],$i$$=0;$i$$<7;$i$$++)$days$$[$i$$]=this.sysres.getString(this._getTemplate($length$$16_options$$12_template$$+
$i$$,this.cal.getType())).toString();return $days$$},toString:function $ilib$DateFmt$$toString$(){return this.getTemplate()},_pad:function $ilib$DateFmt$$_pad$($str$$,$length$$){typeof $str$$!=="string"&&($str$$=""+$str$$);var $start$$=0;$str$$.charAt(0)==="-"&&$start$$++;return $str$$.length>=$length$$+$start$$?$str$$:$str$$.substring(0,$start$$)+ilib.DateFmt.zeros.substring(0,$length$$-$str$$.length+$start$$)+$str$$.substring($start$$)},_formatTemplate:function $ilib$DateFmt$$_formatTemplate$($date$$,
$templateArr$$){var $i$$,$key$$,$temp$$3_tz$$,$str$$="";for($i$$=0;$i$$<$templateArr$$.length;$i$$++)switch($templateArr$$[$i$$]){case "d":$str$$=$str$$+($date$$.day||1);break;case "dd":$str$$=$str$$+this._pad($date$$.day||"1",2);break;case "yy":$temp$$3_tz$$=""+($date$$.year||0)%100;$str$$=$str$$+this._pad($temp$$3_tz$$,2);break;case "yyyy":$str$$=$str$$+this._pad($date$$.year||"0",4);break;case "M":$str$$=$str$$+($date$$.month||1);break;case "MM":$str$$=$str$$+this._pad($date$$.month||"1",2);break;
case "h":$temp$$3_tz$$=($date$$.hour||0)%12;$temp$$3_tz$$==0&&($temp$$3_tz$$="12");$str$$=$str$$+$temp$$3_tz$$;break;case "hh":$temp$$3_tz$$=($date$$.hour||0)%12;$temp$$3_tz$$==0&&($temp$$3_tz$$="12");$str$$=$str$$+this._pad($temp$$3_tz$$,2);break;case "K":$temp$$3_tz$$=($date$$.hour||0)%12;$str$$=$str$$+$temp$$3_tz$$;break;case "KK":$temp$$3_tz$$=($date$$.hour||0)%12;$str$$=$str$$+this._pad($temp$$3_tz$$,2);break;case "H":$str$$=$str$$+($date$$.hour||"0");break;case "HH":$str$$=$str$$+this._pad($date$$.hour||
"0",2);break;case "k":$str$$=$str$$+($date$$.hour==0?"24":$date$$.hour);break;case "kk":$temp$$3_tz$$=$date$$.hour==0?"24":$date$$.hour;$str$$=$str$$+this._pad($temp$$3_tz$$,2);break;case "m":$str$$=$str$$+($date$$.minute||"0");break;case "mm":$str$$=$str$$+this._pad($date$$.minute||"0",2);break;case "s":$str$$=$str$$+($date$$.minute||"0");break;case "ss":$str$$=$str$$+this._pad($date$$.second||"0",2);break;case "S":$str$$=$str$$+($date$$.millisecond||"0");break;case "SSS":$str$$=$str$$+this._pad($date$$.millisecond||
"0",3);break;case "N":case "NN":case "MMM":case "MMMM":$key$$=$templateArr$$[$i$$]+($date$$.month||1);$str$$=$str$$+(this.sysres.getString(void 0,$key$$+"-"+this.calName)||this.sysres.getString(void 0,$key$$));break;case "E":case "EE":case "EEE":case "EEEE":$key$$=$templateArr$$[$i$$]+$date$$.getDayOfWeek();$str$$=$str$$+(this.sysres.getString(void 0,$key$$+"-"+this.calName)||this.sysres.getString(void 0,$key$$));break;case "a":switch(this.meridiems){case "chinese":$key$$=$date$$.hour<6?"azh0":$date$$.hour<
9?"azh1":$date$$.hour<12?"azh2":$date$$.hour<13?"azh3":$date$$.hour<18?"azh4":$date$$.hour<21?"azh5":"azh6";break;case "ethiopic":$date$$.hour<6?$key$$="a0-ethiopic":$date$$.hour===6&&$date$$.minute===0?$key$$="a1-ethiopic":$date$$.hour>=6&&$date$$.hour<12?$key$$="a2-ethiopic":$date$$.hour>=12&&$date$$.hour<18?$key$$="a3-ethiopic":$date$$.hour>=18&&($key$$="a4-ethiopic");break;default:$key$$=$date$$.hour<12?"a0":"a1"}$str$$=$str$$+(this.sysres.getString(void 0,$key$$+"-"+this.calName)||this.sysres.getString(void 0,
$key$$));break;case "w":$str$$=$str$$+$date$$.getWeekOfYear();break;case "ww":$str$$=$str$$+this._pad($date$$.getWeekOfYear(),2);break;case "D":$str$$=$str$$+$date$$.getDayOfYear();break;case "DD":$str$$=$str$$+this._pad($date$$.getDayOfYear(),2);break;case "DDD":$str$$=$str$$+this._pad($date$$.getDayOfYear(),3);break;case "W":$str$$=$str$$+$date$$.getWeekOfMonth(this.locale);break;case "G":$key$$="G"+$date$$.getEra();$str$$=$str$$+(this.sysres.getString(void 0,$key$$+"-"+this.calName)||this.sysres.getString(void 0,
$key$$));break;case "O":$temp$$3_tz$$=this.sysres.getString("1#1st|2#2nd|3#3rd|21#21st|22#22nd|23#23rd|31#31st|#{num}th","ordinalChoice");$str$$=$str$$+$temp$$3_tz$$.formatChoice($date$$.day,{num:$date$$.day});break;case "z":$temp$$3_tz$$=this.getTimeZone();$str$$=$str$$+$temp$$3_tz$$.getDisplayName($date$$,"standard");break;case "Z":$temp$$3_tz$$=this.getTimeZone();$str$$=$str$$+$temp$$3_tz$$.getDisplayName($date$$,"rfc822");break;default:$str$$=$str$$+$templateArr$$[$i$$].replace(/'/g,"")}this.digits&&
($str$$=ilib.mapString($str$$,this.digits));return $str$$},format:function $ilib$DateFmt$$format$($date$$){var $thisZoneName$$=this.tz&&this.tz.getId()||"local",$date$$=ilib.Date._dateToIlib($date$$,$thisZoneName$$);if(!$date$$.getCalendar||!($date$$ instanceof ilib.Date))throw"Wrong date type passed to ilib.DateFmt.format()";if(($date$$.timezone||"local")!==$thisZoneName$$||$date$$.getCalendar()!==this.calName)$date$$=ilib.Date.newInstance({type:this.calName,timezone:$thisZoneName$$,julianday:$date$$.getJulianDay()});
return this._formatTemplate($date$$,this.templateArr)},formatRelative:function $ilib$DateFmt$$formatRelative$($reference$$,$date$$){var $reference$$=ilib.Date._dateToIlib($reference$$),$date$$=ilib.Date._dateToIlib($date$$),$fmt$$,$dateRd_diff_time$$,$num$$;if(typeof $reference$$!=="object"||!$reference$$.getCalendar||$reference$$.getCalendar()!==this.calName||typeof $date$$!=="object"||!$date$$.getCalendar||$date$$.getCalendar()!==this.calName)throw"Wrong calendar type";$fmt$$=$reference$$.getRataDie();
$dateRd_diff_time$$=$date$$.getRataDie();if($dateRd_diff_time$$<$fmt$$){$dateRd_diff_time$$=$fmt$$-$dateRd_diff_time$$;$fmt$$=this.sysres.getString("{duration} ago")}else{$dateRd_diff_time$$=$dateRd_diff_time$$-$fmt$$;$fmt$$=this.sysres.getString("in {duration}")}if($dateRd_diff_time$$<6.94444E-4){$num$$=Math.round($dateRd_diff_time$$*86400);switch(this.length){case "s":$dateRd_diff_time$$=this.sysres.getString("#{num}s");break;case "m":$dateRd_diff_time$$=this.sysres.getString("1#1 se|#{num} sec");
break;case "l":$dateRd_diff_time$$=this.sysres.getString("1#1 sec|#{num} sec");break;default:case "f":$dateRd_diff_time$$=this.sysres.getString("1#1 second|#{num} seconds")}}else if($dateRd_diff_time$$<0.041666667){$num$$=Math.round($dateRd_diff_time$$*1440);switch(this.length){case "s":$dateRd_diff_time$$=this.sysres.getString("#{num}m","durationShortMinutes");break;case "m":$dateRd_diff_time$$=this.sysres.getString("1#1 mi|#{num} min");break;case "l":$dateRd_diff_time$$=this.sysres.getString("1#1 min|#{num} min");
break;default:case "f":$dateRd_diff_time$$=this.sysres.getString("1#1 minute|#{num} minutes")}}else if($dateRd_diff_time$$<1){$num$$=Math.round($dateRd_diff_time$$*24);switch(this.length){case "s":$dateRd_diff_time$$=this.sysres.getString("#{num}h");break;case "m":$dateRd_diff_time$$=this.sysres.getString("1#1 hr|#{num} hrs","durationMediumHours");break;case "l":$dateRd_diff_time$$=this.sysres.getString("1#1 hr|#{num} hrs");break;default:case "f":$dateRd_diff_time$$=this.sysres.getString("1#1 hour|#{num} hours")}}else if($dateRd_diff_time$$<
14){$num$$=Math.round($dateRd_diff_time$$);switch(this.length){case "s":$dateRd_diff_time$$=this.sysres.getString("#{num}d");break;case "m":$dateRd_diff_time$$=this.sysres.getString("1#1 dy|#{num} dys");break;case "l":$dateRd_diff_time$$=this.sysres.getString("1#1 day|#{num} days","durationLongDays");break;default:case "f":$dateRd_diff_time$$=this.sysres.getString("1#1 day|#{num} days")}}else if($dateRd_diff_time$$<84){$num$$=Math.round($dateRd_diff_time$$/7);switch(this.length){case "s":$dateRd_diff_time$$=
this.sysres.getString("#{num}w");break;case "m":$dateRd_diff_time$$=this.sysres.getString("1#1 wk|#{num} wks","durationMediumWeeks");break;case "l":$dateRd_diff_time$$=this.sysres.getString("1#1 wk|#{num} wks");break;default:case "f":$dateRd_diff_time$$=this.sysres.getString("1#1 week|#{num} weeks")}}else if($dateRd_diff_time$$<730){$num$$=Math.round($dateRd_diff_time$$/30.4);switch(this.length){case "s":$dateRd_diff_time$$=this.sysres.getString("#{num}m","durationShortMonths");break;case "m":$dateRd_diff_time$$=
this.sysres.getString("1#1 mo|#{num} mos");break;case "l":$dateRd_diff_time$$=this.sysres.getString("1#1 mon|#{num} mons");break;default:case "f":$dateRd_diff_time$$=this.sysres.getString("1#1 month|#{num} months")}}else{$num$$=Math.round($dateRd_diff_time$$/365);switch(this.length){case "s":$dateRd_diff_time$$=this.sysres.getString("#{num}y");break;case "m":$dateRd_diff_time$$=this.sysres.getString("1#1 yr|#{num} yrs","durationMediumYears");break;case "l":$dateRd_diff_time$$=this.sysres.getString("1#1 yr|#{num} yrs");
break;default:case "f":$dateRd_diff_time$$=this.sysres.getString("1#1 year|#{num} years")}}return $fmt$$.format({duration:$dateRd_diff_time$$.formatChoice($num$$,{num:$num$$})})}};
ilib.DateRngFmt=function $ilib$DateRngFmt$($options$$){var $sync$$=true,$loadParams$$=void 0;this.locale=new ilib.Locale;this.length="s";if($options$$){if($options$$.locale)this.locale=typeof $options$$.locale==="string"?new ilib.Locale($options$$.locale):$options$$.locale;if($options$$.calendar)this.calName=$options$$.calendar;if($options$$.length&&($options$$.length==="short"||$options$$.length==="medium"||$options$$.length==="long"||$options$$.length==="full"))this.length=$options$$.length.charAt(0);
typeof $options$$.sync!=="undefined"&&($sync$$=$options$$.sync==true);$loadParams$$=$options$$.loadParams}var $opts$$={};ilib.shallowCopy($options$$,$opts$$);$opts$$.sync=$sync$$;$opts$$.loadParams=$loadParams$$;$opts$$.onLoad=ilib.bind(this,function($fmt$$){if(this.dateFmt=$fmt$$){this.locinfo=this.dateFmt.locinfo;this.calName=this.calName||this.locinfo.getCalendar()||"gregorian";this.cal=ilib.Cal.newInstance({type:this.calName});if(!this.cal)this.cal=new ilib.Cal.Gregorian;this.timeTemplate=this.dateFmt._getFormat(this.dateFmt.formats.time[this.dateFmt.clock],
this.dateFmt.timeComponents,this.length)||"hh:mm";this.timeTemplateArr=this.dateFmt._tokenize(this.timeTemplate);if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad(this)}});new ilib.DateFmt($opts$$)};
ilib.DateRngFmt.prototype={getLocale:function $ilib$DateRngFmt$$getLocale$(){return this.locale},getCalendar:function $ilib$DateRngFmt$$getCalendar$(){return this.dateFmt.getCalendar()},getLength:function $ilib$DateRngFmt$$getLength$(){return ilib.DateFmt.lenmap[this.length]||""},getTimeZone:function $ilib$DateRngFmt$$getTimeZone$(){return this.dateFmt.getTimeZone()},getClock:function $ilib$DateRngFmt$$getClock$(){return this.dateFmt.getClock()},format:function $ilib$DateRngFmt$$format$($start$$,
$end$$){var $fmt$$3_startRd$$,$endRd$$;$fmt$$3_startRd$$="";var $monthTemplate$$,$dayTemplate$$;if(typeof $start$$!=="object"||!$start$$.getCalendar||$start$$.getCalendar()!==this.calName||typeof $end$$!=="object"||!$end$$.getCalendar||$end$$.getCalendar()!==this.calName)throw"Wrong calendar type";$fmt$$3_startRd$$=$start$$.getRataDie();$endRd$$=$end$$.getRataDie();$fmt$$3_startRd$$=$endRd$$-$fmt$$3_startRd$$<3?$start$$.year===$end$$.year?$start$$.month===$end$$.month?$start$$.day===$end$$.day?new ilib.String(this.dateFmt._getFormat(this.dateFmt.formats.range,
"c00",this.length)):new ilib.String(this.dateFmt._getFormat(this.dateFmt.formats.range,"c01",this.length)):new ilib.String(this.dateFmt._getFormat(this.dateFmt.formats.range,"c02",this.length)):new ilib.String(this.dateFmt._getFormat(this.dateFmt.formats.range,"c03",this.length)):$endRd$$-$fmt$$3_startRd$$<730?$start$$.year===$end$$.year?$start$$.month===$end$$.month?new ilib.String(this.dateFmt._getFormat(this.dateFmt.formats.range,"c10",this.length)):new ilib.String(this.dateFmt._getFormat(this.dateFmt.formats.range,
"c11",this.length)):new ilib.String(this.dateFmt._getFormat(this.dateFmt.formats.range,"c12",this.length)):$endRd$$-$fmt$$3_startRd$$<3650?new ilib.String(this.dateFmt._getFormat(this.dateFmt.formats.range,"c20",this.length)):new ilib.String(this.dateFmt._getFormat(this.dateFmt.formats.range,"c30",this.length));$endRd$$=this.dateFmt._tokenize(this.dateFmt._getFormat(this.dateFmt.formats.date,"y",this.length)||"yyyy");$monthTemplate$$=this.dateFmt._tokenize(this.dateFmt._getFormat(this.dateFmt.formats.date,
"m",this.length)||"MM");$dayTemplate$$=this.dateFmt._tokenize(this.dateFmt._getFormat(this.dateFmt.formats.date,"d",this.length)||"dd");return $fmt$$3_startRd$$.format({sy:this.dateFmt._formatTemplate($start$$,$endRd$$),sm:this.dateFmt._formatTemplate($start$$,$monthTemplate$$),sd:this.dateFmt._formatTemplate($start$$,$dayTemplate$$),st:this.dateFmt._formatTemplate($start$$,this.timeTemplateArr),ey:this.dateFmt._formatTemplate($end$$,$endRd$$),em:this.dateFmt._formatTemplate($end$$,$monthTemplate$$),
ed:this.dateFmt._formatTemplate($end$$,$dayTemplate$$),et:this.dateFmt._formatTemplate($end$$,this.timeTemplateArr)})}};ilib.Cal.Hebrew=function $ilib$Cal$Hebrew$(){this.type="hebrew"};
ilib.Cal.Hebrew.elapsedDays=function $ilib$Cal$Hebrew$elapsedDays$($days$$2_months$$1_year$$){var $days$$2_months$$1_year$$=Math.floor((235*$days$$2_months$$1_year$$-234)/19),$parts$$=204+793*ilib.mod($days$$2_months$$1_year$$,1080),$days$$2_months$$1_year$$=29*$days$$2_months$$1_year$$+Math.floor((11+12*$days$$2_months$$1_year$$+793*Math.floor($days$$2_months$$1_year$$/1080)+Math.floor($parts$$/1080))/24);return ilib.mod(3*($days$$2_months$$1_year$$+1),7)<3?$days$$2_months$$1_year$$+1:$days$$2_months$$1_year$$};
ilib.Cal.Hebrew.newYearsCorrection=function $ilib$Cal$Hebrew$newYearsCorrection$($year$$,$elapsed$$){var $lastYear$$=ilib.Cal.Hebrew.elapsedDays($year$$-1);return ilib.Cal.Hebrew.elapsedDays($year$$+1)-$elapsed$$==356?2:$elapsed$$-$lastYear$$==382?1:0};ilib.Cal.Hebrew.newYear=function $ilib$Cal$Hebrew$newYear$($year$$){var $elapsed$$=ilib.Cal.Hebrew.elapsedDays($year$$);return $elapsed$$+ilib.Cal.Hebrew.newYearsCorrection($year$$,$elapsed$$)};
ilib.Cal.Hebrew.daysInYear=function $ilib$Cal$Hebrew$daysInYear$($year$$){return ilib.Cal.Hebrew.newYear($year$$+1)-ilib.Cal.Hebrew.newYear($year$$)};ilib.Cal.Hebrew.longHeshvan=function $ilib$Cal$Hebrew$longHeshvan$($year$$){return ilib.mod(ilib.Cal.Hebrew.daysInYear($year$$),10)===5};ilib.Cal.Hebrew.longKislev=function $ilib$Cal$Hebrew$longKislev$($year$$){return ilib.mod(ilib.Cal.Hebrew.daysInYear($year$$),10)!==3};
ilib.Cal.Hebrew.prototype.lastDayOfMonth=function $ilib$Cal$Hebrew$$lastDayOfMonth$($month$$,$year$$){switch($month$$){case 2:case 4:case 6:case 10:return 29;case 13:return this.isLeapYear($year$$)?29:0;case 8:return ilib.Cal.Hebrew.longHeshvan($year$$)?30:29;case 9:return ilib.Cal.Hebrew.longKislev($year$$)?30:29;case 12:case 1:case 3:case 5:case 7:case 11:return 30;default:return 0}};
ilib.Cal.Hebrew.prototype.getNumMonths=function $ilib$Cal$Hebrew$$getNumMonths$($year$$){return this.isLeapYear($year$$)?13:12};ilib.Cal.Hebrew.prototype.getMonLength=function $ilib$Cal$Hebrew$$getMonLength$($month$$,$year$$){return $month$$<1||$month$$>13||$month$$==13&&!this.isLeapYear($year$$)?0:this.lastDayOfMonth($month$$,$year$$)};ilib.Cal.Hebrew.prototype.isLeapYear=function $ilib$Cal$Hebrew$$isLeapYear$($year$$){return ilib.mod(1+7*(typeof $year$$=="number"?$year$$:$year$$.year),19)<7};
ilib.Cal.Hebrew.prototype.getType=function $ilib$Cal$Hebrew$$getType$(){return this.type};ilib.Cal.Hebrew.prototype.newDateInstance=function $ilib$Cal$Hebrew$$newDateInstance$($options$$){return new ilib.Date.HebrewDate($options$$)};ilib.Cal._constructors.hebrew=ilib.Cal.Hebrew;ilib.Date.HebrewRataDie=function $ilib$Date$HebrewRataDie$($params$$){this.cal=$params$$&&$params$$.cal||new ilib.Cal.Hebrew;this.rd=void 0;ilib.Date.RataDie.call(this,$params$$)};ilib.Date.HebrewRataDie.prototype=new ilib.Date.RataDie;
ilib.Date.HebrewRataDie.prototype.parent=ilib.Date.RataDie;ilib.Date.HebrewRataDie.prototype.constructor=ilib.Date.HebrewRataDie;ilib.Date.HebrewRataDie.prototype.epoch=347997.25;
ilib.Date.HebrewRataDie.prototype._setDateComponents=function $ilib$Date$HebrewRataDie$$_setDateComponents$($date$$){var $days$$3_elapsed$$=ilib.Cal.Hebrew.elapsedDays($date$$.year),$days$$3_elapsed$$=$days$$3_elapsed$$+ilib.Cal.Hebrew.newYearsCorrection($date$$.year,$days$$3_elapsed$$)+$date$$.day-1,$minute$$4_parts$$=0,$minute$$4_parts$$=(this.cal.isLeapYear($date$$.year)?ilib.Date.HebrewDate.cumMonthLengthsLeap:ilib.Date.HebrewDate.cumMonthLengths)[$date$$.month-1];($date$$.month<7||$date$$.month>
8)&&ilib.Cal.Hebrew.longHeshvan($date$$.year)&&$minute$$4_parts$$++;($date$$.month<7||$date$$.month>9)&&ilib.Cal.Hebrew.longKislev($date$$.year)&&$minute$$4_parts$$++;var $days$$3_elapsed$$=$days$$3_elapsed$$+$minute$$4_parts$$,$second$$,$millisecond$$;if(typeof $date$$.parts!=="undefined"){$minute$$4_parts$$=parseInt($date$$.parts,10);$millisecond$$=parseInt($minute$$4_parts$$,10)*3.333333333333;$minute$$4_parts$$=Math.floor($millisecond$$/60);$millisecond$$=$millisecond$$-$minute$$4_parts$$*60;
$second$$=Math.floor($millisecond$$);$millisecond$$=$millisecond$$-$second$$}else{$minute$$4_parts$$=parseInt($date$$.minute,10)||0;$second$$=parseInt($date$$.second,10)||0;$millisecond$$=parseInt($date$$.millisecond,10)||0}this.rd=$days$$3_elapsed$$+($date$$.hour>=18?(($date$$.hour-18||0)*36E5+($minute$$4_parts$$||0)*6E4+($second$$||0)*1E3+($millisecond$$||0))/864E5:0.25+(($date$$.hour||0)*36E5+($minute$$4_parts$$||0)*6E4+($second$$||0)*1E3+($millisecond$$||0))/864E5)};
ilib.Date.HebrewRataDie.prototype._onOrBefore=function $ilib$Date$HebrewRataDie$$_onOrBefore$($rd$$,$dayOfWeek$$){return $rd$$-ilib.mod(Math.floor($rd$$)-$dayOfWeek$$+1,7)};
ilib.Date.HebrewDate=function $ilib$Date$HebrewDate$($params$$){this.cal=new ilib.Cal.Hebrew;if($params$$){if($params$$.timezone)this.timezone=$params$$.timezone;if($params$$.locale){this.locale=typeof $params$$.locale==="string"?new ilib.Locale($params$$.locale):$params$$.locale;if(!this.timezone)this.timezone=(new ilib.LocaleInfo(this.locale)).getTimeZone()}if($params$$.year||$params$$.month||$params$$.day||$params$$.hour||$params$$.minute||$params$$.second||$params$$.millisecond||$params$$.parts){this.year=
parseInt($params$$.year,10)||0;this.month=parseInt($params$$.month,10)||1;this.day=parseInt($params$$.day,10)||1;this.hour=parseInt($params$$.hour,10)||0;if(typeof $params$$.parts!=="undefined"){this.parts=parseInt($params$$.parts,10);var $seconds$$=parseInt($params$$.parts,10)*3.333333333333;this.minute=Math.floor($seconds$$/60);$seconds$$=$seconds$$-this.minute*60;this.second=Math.floor($seconds$$);this.millisecond=$seconds$$-this.second}else{this.minute=parseInt($params$$.minute,10)||0;this.second=
parseInt($params$$.second,10)||0;this.millisecond=parseInt($params$$.millisecond,10)||0}this.dayOfYear=parseInt($params$$.dayOfYear,10);if(typeof $params$$.dst==="boolean")this.dst=$params$$.dst;this.rd=this.newRd(this);if(!this.tz)this.tz=new ilib.TimeZone({id:this.timezone});this.offset=this.tz._getOffsetMillisWallTime(this)/864E5;if(this.offset!==0)this.rd=this.newRd({rd:this.rd.getRataDie()-this.offset})}}if(!this.rd){this.rd=this.newRd($params$$);this._calcDateComponents()}};
ilib.Date.HebrewDate.prototype=new ilib.Date({noinstance:!0});ilib.Date.HebrewDate.prototype.parent=ilib.Date;ilib.Date.HebrewDate.prototype.constructor=ilib.Date.HebrewDate;ilib.Date.HebrewDate.cumMonthLengths=[176,206,235,265,294,324,0,30,59,88,117,147];ilib.Date.HebrewDate.cumMonthLengthsReverse=[[0,7],[30,8],[59,9],[88,10],[117,11],[147,12],[176,1],[206,2],[235,3],[265,4],[294,5],[324,6],[354,7]];ilib.Date.HebrewDate.cumMonthLengthsLeap=[206,236,265,295,324,354,0,30,59,88,117,147,177];
ilib.Date.HebrewDate.cumMonthLengthsLeapReverse=[[0,7],[30,8],[59,9],[88,10],[117,11],[147,12],[177,13],[206,1],[236,2],[265,3],[295,4],[324,5],[354,6],[384,7]];ilib.Date.HebrewDate.GregorianDiff=1373060.25;ilib.Date.HebrewDate.prototype.newRd=function $ilib$Date$HebrewDate$$newRd$($params$$){return new ilib.Date.HebrewRataDie($params$$)};
ilib.Date.HebrewDate.prototype._calcYear=function $ilib$Date$HebrewDate$$_calcYear$($rd$$){var $year$$,$nextNewYear$$;$year$$=Math.floor($rd$$/365.246822206)+1;for($nextNewYear$$=ilib.Cal.Hebrew.newYear($year$$);$rd$$>=$nextNewYear$$;){$year$$++;$nextNewYear$$=ilib.Cal.Hebrew.newYear($year$$)}return $year$$-1};
ilib.Date.HebrewDate.prototype._calcDateComponents=function $ilib$Date$HebrewDate$$_calcDateComponents$(){var $rd$$,$i$$,$table$$,$target$$;$rd$$=this.rd.getRataDie();if(typeof this.offset==="undefined"){this.year=this._calcYear($rd$$);if(!this.tz)this.tz=new ilib.TimeZone({id:this.timezone});this.offset=this.tz.getOffsetMillis(this)/864E5}if(this.offset!==0){$rd$$=$rd$$+this.offset;this.year=this._calcYear($rd$$)}$rd$$=$rd$$-ilib.Cal.Hebrew.newYear(this.year);if($rd$$>=59){$rd$$>=88&&ilib.Cal.Hebrew.longKislev(this.year)&&
$rd$$--;ilib.Cal.Hebrew.longHeshvan(this.year)&&$rd$$--}$table$$=this.cal.isLeapYear(this.year)?ilib.Date.HebrewDate.cumMonthLengthsLeapReverse:ilib.Date.HebrewDate.cumMonthLengthsReverse;$i$$=0;for($target$$=Math.floor($rd$$);$i$$+1<$table$$.length&&$target$$>=$table$$[$i$$+1][0];)$i$$++;this.month=$table$$[$i$$][1];$rd$$=$rd$$-$table$$[$i$$][0];this.day=Math.floor($rd$$);$rd$$=$rd$$-this.day;this.day++;$rd$$=Math.round($rd$$*864E5);this.hour=Math.floor($rd$$/36E5);$rd$$=$rd$$-this.hour*36E5;this.hour=
this.hour>=6?this.hour-6:this.hour+18;this.minute=Math.floor($rd$$/6E4);$rd$$=$rd$$-this.minute*6E4;this.second=Math.floor($rd$$/1E3);$rd$$=$rd$$-this.second*1E3;this.millisecond=Math.floor($rd$$)};ilib.Date.HebrewDate.prototype.getDayOfWeek=function $ilib$Date$HebrewDate$$getDayOfWeek$(){var $rd$$=Math.floor(this.rd.getRataDie()+(this.offset||0));return ilib.mod($rd$$+1,7)};
ilib.Date.HebrewDate.prototype.getHalaqim=function $ilib$Date$HebrewDate$$getHalaqim$(){if(this.parts<0)this.parts=(this.minute*6E4+this.second*1E3+this.millisecond)*3.0E-4;return this.parts};ilib.Date.HebrewDate.prototype.firstSunday=function $ilib$Date$HebrewDate$$firstSunday$($year$$){return this.newRd({rd:this.newRd({year:$year$$,month:7,day:1,hour:18,minute:0,second:0,millisecond:0,cal:this.cal}).onOrAfter(4),cal:this.cal}).before(0)};
ilib.Date.HebrewDate.prototype.getDayOfYear=function $ilib$Date$HebrewDate$$getDayOfYear$(){var $days$$=(this.cal.isLeapYear(this.year)?ilib.Date.HebrewDate.cumMonthLengthsLeap:ilib.Date.HebrewDate.cumMonthLengths)[this.month-1];(this.month<7||this.month>8)&&ilib.Cal.Hebrew.longHeshvan(this.year)&&$days$$++;(this.month<7||this.month>9)&&ilib.Cal.Hebrew.longKislev(this.year)&&$days$$++;return $days$$+this.day};
ilib.Date.HebrewDate.prototype.getWeekOfMonth=function $ilib$Date$HebrewDate$$getWeekOfMonth$($first$$2_locale$$){var $li$$5_weekStart$$=new ilib.LocaleInfo($first$$2_locale$$),$first$$2_locale$$=this.newRd({year:this.year,month:this.month,day:1,hour:18,minute:0,second:0,millisecond:0}),$rd$$=this.rd.getRataDie(),$li$$5_weekStart$$=$first$$2_locale$$.onOrAfter($li$$5_weekStart$$.getFirstDayOfWeek());$li$$5_weekStart$$-$first$$2_locale$$.getRataDie()>3&&($li$$5_weekStart$$=$li$$5_weekStart$$-7);return $rd$$<
$li$$5_weekStart$$?0:Math.floor(($rd$$-$li$$5_weekStart$$)/7)+1};ilib.Date.HebrewDate.prototype.getEra=function $ilib$Date$HebrewDate$$getEra$(){return this.year<1?-1:1};ilib.Date.HebrewDate.prototype.getCalendar=function $ilib$Date$HebrewDate$$getCalendar$(){return"hebrew"};ilib.Date._constructors.hebrew=ilib.Date.HebrewDate;ilib.Cal.Islamic=function $ilib$Cal$Islamic$(){this.type="islamic"};ilib.Cal.Islamic.monthLengths=[30,29,30,29,30,29,30,29,30,29,30,29];
ilib.Cal.Islamic.prototype.getNumMonths=function $ilib$Cal$Islamic$$getNumMonths$(){return 12};ilib.Cal.Islamic.prototype.getMonLength=function $ilib$Cal$Islamic$$getMonLength$($month$$,$year$$){return $month$$!==12?ilib.Cal.Islamic.monthLengths[$month$$-1]:this.isLeapYear($year$$)?30:29};ilib.Cal.Islamic.prototype.isLeapYear=function $ilib$Cal$Islamic$$isLeapYear$($year$$){return ilib.mod(14+11*$year$$,30)<11};ilib.Cal.Islamic.prototype.getType=function $ilib$Cal$Islamic$$getType$(){return this.type};
ilib.Cal.Islamic.prototype.newDateInstance=function $ilib$Cal$Islamic$$newDateInstance$($options$$){return new ilib.Date.IslamicDate($options$$)};ilib.Cal._constructors.islamic=ilib.Cal.Islamic;
ilib.bsearch=function $ilib$bsearch$($target$$,$arr$$,$comparator_value$$){if(typeof $arr$$==="undefined"||!$arr$$||typeof $target$$==="undefined")return-1;for(var $high$$=$arr$$.length-1,$low$$=0,$mid$$=0,$cmp$$=$comparator_value$$||ilib.bsearch.numbers;$low$$<=$high$$;){$mid$$=Math.floor(($high$$+$low$$)/2);$comparator_value$$=$cmp$$($arr$$[$mid$$],$target$$);if($comparator_value$$>0)$high$$=$mid$$-1;else if($comparator_value$$<0)$low$$=$mid$$+1;else return $mid$$}return $low$$};
ilib.bsearch.numbers=function $ilib$bsearch$numbers$($element$$,$target$$){return $element$$-$target$$};
ilib.bisectionSearch=function $ilib$bisectionSearch$($target$$,$low$$,$high$$,$precision_value$$,$func$$){if(typeof $target$$!=="number"||typeof $low$$!=="number"||typeof $high$$!=="number"||typeof $func$$!=="function")return NaN;var $mid$$=0,$pre$$=$precision_value$$>0?$precision_value$$:1.0E-13;do{$mid$$=($high$$+$low$$)/2;$precision_value$$=$func$$($mid$$);$precision_value$$>$target$$?$high$$=$mid$$:$precision_value$$<$target$$&&($low$$=$mid$$)}while($high$$-$low$$>$pre$$);return $mid$$};
ilib.Date.IslamicRataDie=function $ilib$Date$IslamicRataDie$($params$$){this.cal=$params$$&&$params$$.cal||new ilib.Cal.Islamic;this.rd=void 0;ilib.Date.RataDie.call(this,$params$$)};ilib.Date.IslamicRataDie.prototype=new ilib.Date.RataDie;ilib.Date.IslamicRataDie.prototype.parent=ilib.Date.RataDie;ilib.Date.IslamicRataDie.prototype.constructor=ilib.Date.IslamicRataDie;ilib.Date.IslamicRataDie.prototype.epoch=1948439.5;
ilib.Date.IslamicRataDie.prototype._setDateComponents=function $ilib$Date$IslamicRataDie$$_setDateComponents$($date$$){this.rd=($date$$.year-1)*354+Math.ceil(29.5*($date$$.month-1))+$date$$.day+Math.floor((3+11*$date$$.year)/30)-1+($date$$.hour*36E5+$date$$.minute*6E4+$date$$.second*1E3+$date$$.millisecond)/864E5};
ilib.Date.IslamicDate=function $ilib$Date$IslamicDate$($params$$){this.cal=new ilib.Cal.Islamic;if($params$$){if($params$$.locale){this.locale=typeof $params$$.locale==="string"?new ilib.Locale($params$$.locale):$params$$.locale;this.timezone=(new ilib.LocaleInfo(this.locale)).getTimeZone()}if($params$$.timezone)this.timezone=$params$$.timezone;if($params$$.year||$params$$.month||$params$$.day||$params$$.hour||$params$$.minute||$params$$.second||$params$$.millisecond){this.year=parseInt($params$$.year,
10)||0;this.month=parseInt($params$$.month,10)||1;this.day=parseInt($params$$.day,10)||1;this.hour=parseInt($params$$.hour,10)||0;this.minute=parseInt($params$$.minute,10)||0;this.second=parseInt($params$$.second,10)||0;this.millisecond=parseInt($params$$.millisecond,10)||0;this.dayOfYear=parseInt($params$$.dayOfYear,10);if(typeof $params$$.dst==="boolean")this.dst=$params$$.dst;this.rd=this.newRd(this);if(!this.tz)this.tz=new ilib.TimeZone({id:this.timezone});this.offset=this.tz._getOffsetMillisWallTime(this)/
864E5;if(this.offset!==0)this.rd=this.newRd({rd:this.rd.getRataDie()-this.offset})}}if(!this.rd){this.rd=this.newRd($params$$);this._calcDateComponents()}};ilib.Date.IslamicDate.prototype=new ilib.Date({noinstance:!0});ilib.Date.IslamicDate.prototype.parent=ilib.Date;ilib.Date.IslamicDate.prototype.constructor=ilib.Date.IslamicDate;ilib.Date.IslamicDate.cumMonthLengths=[0,30,59,89,118,148,177,207,236,266,295,325,354];ilib.Date.IslamicDate.GregorianDiff=227015;
ilib.Date.IslamicDate.prototype.newRd=function $ilib$Date$IslamicDate$$newRd$($params$$){return new ilib.Date.IslamicRataDie($params$$)};ilib.Date.IslamicDate.prototype._calcYear=function $ilib$Date$IslamicDate$$_calcYear$($rd$$){return Math.floor((30*$rd$$+10646)/10631)};
ilib.Date.IslamicDate.prototype._calcDateComponents=function $ilib$Date$IslamicDate$$_calcDateComponents$(){var $rd$$11_remainder$$;$rd$$11_remainder$$=this.rd.getRataDie();this.year=this._calcYear($rd$$11_remainder$$);if(typeof this.offset==="undefined"){this.year=this._calcYear($rd$$11_remainder$$);if(!this.tz)this.tz=new ilib.TimeZone({id:this.timezone});this.offset=this.tz.getOffsetMillis(this)/864E5}if(this.offset!==0){$rd$$11_remainder$$=$rd$$11_remainder$$+this.offset;this.year=this._calcYear($rd$$11_remainder$$)}var $yearStart$$=
this.newRd({year:this.year,month:1,day:1,hour:0,minute:0,second:0,millisecond:0});this.dayOfYear=$rd$$11_remainder$$=$rd$$11_remainder$$-$yearStart$$.getRataDie()+1;this.month=ilib.bsearch($rd$$11_remainder$$,ilib.Date.IslamicDate.cumMonthLengths);$rd$$11_remainder$$=$rd$$11_remainder$$-ilib.Date.IslamicDate.cumMonthLengths[this.month-1];this.day=Math.floor($rd$$11_remainder$$);$rd$$11_remainder$$=$rd$$11_remainder$$-this.day;$rd$$11_remainder$$=Math.round($rd$$11_remainder$$*864E5);this.hour=Math.floor($rd$$11_remainder$$/
36E5);$rd$$11_remainder$$=$rd$$11_remainder$$-this.hour*36E5;this.minute=Math.floor($rd$$11_remainder$$/6E4);$rd$$11_remainder$$=$rd$$11_remainder$$-this.minute*6E4;this.second=Math.floor($rd$$11_remainder$$/1E3);this.millisecond=$rd$$11_remainder$$=$rd$$11_remainder$$-this.second*1E3};ilib.Date.IslamicDate.prototype.getDayOfWeek=function $ilib$Date$IslamicDate$$getDayOfWeek$(){var $rd$$=Math.floor(this.rd.getRataDie()+(this.offset||0));return ilib.mod($rd$$-2,7)};
ilib.Date.IslamicDate.prototype.getDayOfYear=function $ilib$Date$IslamicDate$$getDayOfYear$(){return ilib.Date.IslamicDate.cumMonthLengths[this.month-1]+this.day};ilib.Date.IslamicDate.prototype.getEra=function $ilib$Date$IslamicDate$$getEra$(){return this.year<1?-1:1};ilib.Date.IslamicDate.prototype.getCalendar=function $ilib$Date$IslamicDate$$getCalendar$(){return"islamic"};ilib.Date._constructors.islamic=ilib.Date.IslamicDate;ilib.Cal.Julian=function $ilib$Cal$Julian$(){this.type="julian"};
ilib.Cal.Julian.monthLengths=[31,28,31,30,31,30,31,31,30,31,30,31];ilib.Cal.Julian.prototype.getNumMonths=function $ilib$Cal$Julian$$getNumMonths$(){return 12};ilib.Cal.Julian.prototype.getMonLength=function $ilib$Cal$Julian$$getMonLength$($month$$,$year$$){return $month$$!==2||!this.isLeapYear($year$$)?ilib.Cal.Julian.monthLengths[$month$$-1]:29};
ilib.Cal.Julian.prototype.isLeapYear=function $ilib$Cal$Julian$$isLeapYear$($year$$){return ilib.mod(typeof $year$$==="number"?$year$$:$year$$.year,4)===($year$$>0?0:3)};ilib.Cal.Julian.prototype.getType=function $ilib$Cal$Julian$$getType$(){return this.type};ilib.Cal.Julian.prototype.newDateInstance=function $ilib$Cal$Julian$$newDateInstance$($options$$){return new ilib.Date.JulDate($options$$)};ilib.Cal._constructors.julian=ilib.Cal.Julian;
ilib.Date.JulianRataDie=function $ilib$Date$JulianRataDie$($params$$){this.cal=$params$$&&$params$$.cal||new ilib.Cal.Julian;this.rd=void 0;ilib.Date.RataDie.call(this,$params$$)};ilib.Date.JulianRataDie.prototype=new ilib.Date.RataDie;ilib.Date.JulianRataDie.prototype.parent=ilib.Date.RataDie;ilib.Date.JulianRataDie.prototype.constructor=ilib.Date.JulianRataDie;ilib.Date.JulianRataDie.prototype.epoch=1721422.5;
ilib.Date.JulianRataDie.prototype._setDateComponents=function $ilib$Date$JulianRataDie$$_setDateComponents$($date$$){var $year$$33_years$$=$date$$.year+($date$$.year<0?1:0),$year$$33_years$$=365*($year$$33_years$$-1)+Math.floor(($year$$33_years$$-1)/4),$dayInYear$$=($date$$.month>1?ilib.Date.JulDate.cumMonthLengths[$date$$.month-1]:0)+$date$$.day+(this.cal.isLeapYear($date$$.year)&&$date$$.month>2?1:0);this.rd=$year$$33_years$$+$dayInYear$$+($date$$.hour*36E5+$date$$.minute*6E4+$date$$.second*1E3+
$date$$.millisecond)/864E5};
ilib.Date.JulDate=function $ilib$Date$JulDate$($params$$){this.cal=new ilib.Cal.Julian;if($params$$){if($params$$.locale){this.locale=typeof $params$$.locale==="string"?new ilib.Locale($params$$.locale):$params$$.locale;this.timezone=(new ilib.LocaleInfo(this.locale)).getTimeZone()}if($params$$.timezone)this.timezone=$params$$.timezone;if($params$$.year||$params$$.month||$params$$.day||$params$$.hour||$params$$.minute||$params$$.second||$params$$.millisecond){this.year=parseInt($params$$.year,10)||
0;this.month=parseInt($params$$.month,10)||1;this.day=parseInt($params$$.day,10)||1;this.hour=parseInt($params$$.hour,10)||0;this.minute=parseInt($params$$.minute,10)||0;this.second=parseInt($params$$.second,10)||0;this.millisecond=parseInt($params$$.millisecond,10)||0;this.dayOfYear=parseInt($params$$.dayOfYear,10);if(typeof $params$$.dst==="boolean")this.dst=$params$$.dst;this.rd=this.newRd(this);if(!this.tz)this.tz=new ilib.TimeZone({id:this.timezone});this.offset=this.tz._getOffsetMillisWallTime(this)/
864E5;if(this.offset!==0)this.rd=this.newRd({rd:this.rd.getRataDie()-this.offset})}}if(!this.rd){this.rd=this.newRd($params$$);this._calcDateComponents()}};ilib.Date.JulDate.prototype=new ilib.Date({noinstance:!0});ilib.Date.JulDate.prototype.parent=ilib.Date;ilib.Date.JulDate.prototype.constructor=ilib.Date.JulDate;ilib.Date.JulDate.cumMonthLengths=[0,31,59,90,120,151,181,212,243,273,304,334,365];ilib.Date.JulDate.cumMonthLengthsLeap=[0,31,60,91,121,152,182,213,244,274,305,335,366];
ilib.Date.JulDate.prototype.newRd=function $ilib$Date$JulDate$$newRd$($params$$){return new ilib.Date.JulianRataDie($params$$)};ilib.Date.JulDate.prototype._calcYear=function $ilib$Date$JulDate$$_calcYear$($rd$$13_year$$){$rd$$13_year$$=Math.floor((4*(Math.floor($rd$$13_year$$)-1)+1464)/1461);return $rd$$13_year$$<=0?$rd$$13_year$$-1:$rd$$13_year$$};
ilib.Date.JulDate.prototype._calcDateComponents=function $ilib$Date$JulDate$$_calcDateComponents$(){var $rd$$14_remainder$$,$cumulative_jan1$$;$rd$$14_remainder$$=this.rd.getRataDie();this.year=this._calcYear($rd$$14_remainder$$);if(typeof this.offset==="undefined"){this.year=this._calcYear($rd$$14_remainder$$);if(!this.tz)this.tz=new ilib.TimeZone({id:this.timezone});this.offset=this.tz.getOffsetMillis(this)/864E5}if(this.offset!==0){$rd$$14_remainder$$=$rd$$14_remainder$$+this.offset;this.year=
this._calcYear($rd$$14_remainder$$)}$cumulative_jan1$$=this.newRd({year:this.year,month:1,day:1,hour:0,minute:0,second:0,millisecond:0});$rd$$14_remainder$$=$rd$$14_remainder$$+1-$cumulative_jan1$$.getRataDie();$cumulative_jan1$$=this.cal.isLeapYear(this.year)?ilib.Date.JulDate.cumMonthLengthsLeap:ilib.Date.JulDate.cumMonthLengths;this.month=ilib.bsearch(Math.floor($rd$$14_remainder$$),$cumulative_jan1$$);$rd$$14_remainder$$=$rd$$14_remainder$$-$cumulative_jan1$$[this.month-1];this.day=Math.floor($rd$$14_remainder$$);
$rd$$14_remainder$$=$rd$$14_remainder$$-this.day;$rd$$14_remainder$$=Math.round($rd$$14_remainder$$*864E5);this.hour=Math.floor($rd$$14_remainder$$/36E5);$rd$$14_remainder$$=$rd$$14_remainder$$-this.hour*36E5;this.minute=Math.floor($rd$$14_remainder$$/6E4);$rd$$14_remainder$$=$rd$$14_remainder$$-this.minute*6E4;this.second=Math.floor($rd$$14_remainder$$/1E3);this.millisecond=$rd$$14_remainder$$=$rd$$14_remainder$$-this.second*1E3};
ilib.Date.JulDate.prototype.getDayOfWeek=function $ilib$Date$JulDate$$getDayOfWeek$(){var $rd$$=Math.floor(this.rd.getRataDie()+(this.offset||0));return ilib.mod($rd$$-2,7)};ilib.Date.JulDate.prototype.getCalendar=function $ilib$Date$JulDate$$getCalendar$(){return"julian"};ilib.Date._constructors.julian=ilib.Date.JulDate;
ilib.Date.GregDate=function $ilib$Date$GregDate$($params$$){this.cal=new ilib.Cal.Gregorian;this.timezone="local";if($params$$){if(typeof $params$$.noinstance==="boolean"&&$params$$.noinstance)return;if($params$$.locale){this.locale=typeof $params$$.locale==="string"?new ilib.Locale($params$$.locale):$params$$.locale;this.timezone=(new ilib.LocaleInfo(this.locale)).getTimeZone()}if($params$$.timezone)this.timezone=$params$$.timezone.toString();if($params$$.year||$params$$.month||$params$$.day||$params$$.hour||
$params$$.minute||$params$$.second||$params$$.millisecond){this.year=parseInt($params$$.year,10)||0;this.month=parseInt($params$$.month,10)||1;this.day=parseInt($params$$.day,10)||1;this.hour=parseInt($params$$.hour,10)||0;this.minute=parseInt($params$$.minute,10)||0;this.second=parseInt($params$$.second,10)||0;this.millisecond=parseInt($params$$.millisecond,10)||0;if(typeof $params$$.dst==="boolean")this.dst=$params$$.dst;this.rd=this.newRd($params$$);this.offset=0;if(this.timezone==="local"&&typeof $params$$.dst===
"undefined")this.offset=-(new Date(this.year,this.month-1,this.day,this.hour,this.minute,this.second,this.millisecond)).getTimezoneOffset()/1440;else{if(!this.tz)this.tz=new ilib.TimeZone({id:this.timezone});this.offset=this.tz._getOffsetMillisWallTime(this)/864E5}if(this.offset!==0)this.rd=this.newRd({rd:this.rd.getRataDie()-this.offset})}}if(!this.rd){this.rd=this.newRd($params$$);this._calcDateComponents()}};ilib.Date.GregDate.prototype=new ilib.Date({noinstance:!0});
ilib.Date.GregDate.prototype.parent=ilib.Date;ilib.Date.GregDate.prototype.constructor=ilib.Date.GregDate;ilib.Date.GregDate.prototype.newRd=function $ilib$Date$GregDate$$newRd$($params$$){return new ilib.Date.GregRataDie($params$$)};
ilib.Date.GregDate._calcYear=function $ilib$Date$GregDate$_calcYear$($rd$$){var $days400_years4$$,$days100_days4_years1$$,$year$$;$year$$=Math.floor(($rd$$-1)/146097);$days400_years4$$=ilib.mod($rd$$-1,146097);$rd$$=Math.floor($days400_years4$$/36524);$days100_days4_years1$$=ilib.mod($days400_years4$$,36524);$days400_years4$$=Math.floor($days100_days4_years1$$/1461);$days100_days4_years1$$=ilib.mod($days100_days4_years1$$,1461);$days100_days4_years1$$=Math.floor($days100_days4_years1$$/365);$year$$=
400*$year$$+100*$rd$$+4*$days400_years4$$+$days100_days4_years1$$;$rd$$!==4&&$days100_days4_years1$$!==4&&$year$$++;return $year$$};ilib.Date.GregDate.prototype._calcYear=function $ilib$Date$GregDate$$_calcYear$($rd$$){return ilib.Date.GregDate._calcYear($rd$$)};
ilib.Date.GregDate.prototype._calcDateComponents=function $ilib$Date$GregDate$$_calcDateComponents$(){if(this.timezone==="local"&&this.rd.getRataDie()>=-99280837&&this.rd.getRataDie()<=100719163){var $d$$4_rd$$18_remainder$$=new Date(this.rd.getTimeExtended());this.year=$d$$4_rd$$18_remainder$$.getFullYear();this.month=$d$$4_rd$$18_remainder$$.getMonth()+1;this.day=$d$$4_rd$$18_remainder$$.getDate();this.hour=$d$$4_rd$$18_remainder$$.getHours();this.minute=$d$$4_rd$$18_remainder$$.getMinutes();this.second=
$d$$4_rd$$18_remainder$$.getSeconds();this.millisecond=$d$$4_rd$$18_remainder$$.getMilliseconds();this.offset=-$d$$4_rd$$18_remainder$$.getTimezoneOffset()/1440}else{if(typeof this.offset==="undefined"){this.year=this._calcYear(this.rd.getRataDie());if(!this.tz)this.tz=new ilib.TimeZone({id:this.timezone});this.offset=this.tz.getOffsetMillis(this)/864E5}$d$$4_rd$$18_remainder$$=this.rd.getRataDie();this.offset!==0&&($d$$4_rd$$18_remainder$$=$d$$4_rd$$18_remainder$$+this.offset);this.year=this._calcYear($d$$4_rd$$18_remainder$$);
var $cumulative$$=this.newRd({year:this.year,month:1,day:1,cal:this.cal}),$d$$4_rd$$18_remainder$$=$d$$4_rd$$18_remainder$$-$cumulative$$.getRataDie()+1,$cumulative$$=ilib.Cal.Gregorian.prototype.isLeapYear.call(this.cal,this.year)?ilib.Date.GregRataDie.cumMonthLengthsLeap:ilib.Date.GregRataDie.cumMonthLengths;this.month=ilib.bsearch(Math.floor($d$$4_rd$$18_remainder$$),$cumulative$$);$d$$4_rd$$18_remainder$$=$d$$4_rd$$18_remainder$$-$cumulative$$[this.month-1];this.day=Math.floor($d$$4_rd$$18_remainder$$);
$d$$4_rd$$18_remainder$$=$d$$4_rd$$18_remainder$$-this.day;$d$$4_rd$$18_remainder$$=Math.round($d$$4_rd$$18_remainder$$*864E5);this.hour=Math.floor($d$$4_rd$$18_remainder$$/36E5);$d$$4_rd$$18_remainder$$=$d$$4_rd$$18_remainder$$-this.hour*36E5;this.minute=Math.floor($d$$4_rd$$18_remainder$$/6E4);$d$$4_rd$$18_remainder$$=$d$$4_rd$$18_remainder$$-this.minute*6E4;this.second=Math.floor($d$$4_rd$$18_remainder$$/1E3);$d$$4_rd$$18_remainder$$=$d$$4_rd$$18_remainder$$-this.second*1E3;this.millisecond=Math.floor($d$$4_rd$$18_remainder$$)}};
ilib.Date.GregDate.prototype.getDayOfWeek=function $ilib$Date$GregDate$$getDayOfWeek$(){var $rd$$=Math.floor(this.rd.getRataDie()+(this.offset||0));return ilib.mod($rd$$,7)};ilib.Date.GregDate.prototype.getDayOfYear=function $ilib$Date$GregDate$$getDayOfYear$(){return(this.cal.isLeapYear(this.year)?ilib.Date.GregRataDie.cumMonthLengthsLeap:ilib.Date.GregRataDie.cumMonthLengths)[this.month-1]+this.day};
ilib.Date.GregDate.prototype.getEra=function $ilib$Date$GregDate$$getEra$(){return this.year<1?-1:1};ilib.Date.GregDate.prototype.getCalendar=function $ilib$Date$GregDate$$getCalendar$(){return"gregorian"};ilib.Date._constructors.gregorian=ilib.Date.GregDate;ilib.Cal.ThaiSolar=function $ilib$Cal$ThaiSolar$(){this.type="thaisolar"};ilib.Cal.ThaiSolar.prototype=new ilib.Cal.Gregorian;ilib.Cal.ThaiSolar.prototype.parent=ilib.Cal.Gregorian;ilib.Cal.ThaiSolar.prototype.constructor=ilib.Cal.ThaiSolar;
ilib.Cal.ThaiSolar.prototype.isLeapYear=function $ilib$Cal$ThaiSolar$$isLeapYear$($y$$38_year$$){var $y$$38_year$$=typeof $y$$38_year$$==="number"?$y$$38_year$$:$y$$38_year$$.getYears(),$y$$38_year$$=$y$$38_year$$-543,$centuries$$=ilib.mod($y$$38_year$$,400);return ilib.mod($y$$38_year$$,4)===0&&$centuries$$!==100&&$centuries$$!==200&&$centuries$$!==300};ilib.Cal.ThaiSolar.prototype.newDateInstance=function $ilib$Cal$ThaiSolar$$newDateInstance$($options$$){return new ilib.Date.ThaiSolarDate($options$$)};
ilib.Cal._constructors.thaisolar=ilib.Cal.ThaiSolar;ilib.Date.ThaiSolarDate=function $ilib$Date$ThaiSolarDate$($params$$){var $p$$=$params$$;if($params$$){$p$$={};ilib.shallowCopy($params$$,$p$$);if(typeof $p$$.year!=="undefined")$p$$.year=$p$$.year-543;if(typeof $p$$.rd!=="undefined")$p$$.rd=$p$$.rd-198327}this.offset=this.rd=void 0;ilib.Date.GregDate.call(this,$p$$);this.cal=new ilib.Cal.ThaiSolar;if($params$$&&typeof $params$$.year!=="undefined")this.year=parseInt($params$$.year,10)};
ilib.Date.ThaiSolarDate.prototype=new ilib.Date.GregDate({noinstance:!0});ilib.Date.ThaiSolarDate.prototype.parent=ilib.Date.GregDate.prototype;ilib.Date.ThaiSolarDate.prototype.constructor=ilib.Date.ThaiSolarDate;ilib.Date.ThaiSolarDate.epoch=1523097.5;ilib.Date.ThaiSolarDate.prototype._calcDateComponents=function $ilib$Date$ThaiSolarDate$$_calcDateComponents$(){this.parent._calcDateComponents.call(this);this.year=this.year+543};
ilib.Date.ThaiSolarDate.prototype.getRataDie=function $ilib$Date$ThaiSolarDate$$getRataDie$(){return this.rd.getRataDie()+198327};ilib.Date.ThaiSolarDate.prototype.before=function $ilib$Date$ThaiSolarDate$$before$($dow$$){return this.cal.newDateInstance({rd:this.rd.before($dow$$,this.offset)+198327,timezone:this.timezone})};ilib.Date.ThaiSolarDate.prototype.after=function $ilib$Date$ThaiSolarDate$$after$($dow$$){return this.cal.newDateInstance({rd:this.rd.after($dow$$,this.offset)+198327,timezone:this.timezone})};
ilib.Date.ThaiSolarDate.prototype.onOrBefore=function $ilib$Date$ThaiSolarDate$$onOrBefore$($dow$$){return this.cal.newDateInstance({rd:this.rd.onOrBefore($dow$$,this.offset)+198327,timezone:this.timezone})};ilib.Date.ThaiSolarDate.prototype.onOrAfter=function $ilib$Date$ThaiSolarDate$$onOrAfter$($dow$$){return this.cal.newDateInstance({rd:this.rd.onOrAfter($dow$$,this.offset)+198327,timezone:this.timezone})};ilib.Date.ThaiSolarDate.prototype.getCalendar=function $ilib$Date$ThaiSolarDate$$getCalendar$(){return"thaisolar"};
ilib.Date._constructors.thaisolar=ilib.Date.ThaiSolarDate;ilib.Cal.PersianAlgo=function $ilib$Cal$PersianAlgo$(){this.type="persian-algo"};ilib.Cal.PersianAlgo.monthLengths=[31,31,31,31,31,31,30,30,30,30,30,29];ilib.Cal.PersianAlgo.prototype.getNumMonths=function $ilib$Cal$PersianAlgo$$getNumMonths$(){return 12};
ilib.Cal.PersianAlgo.prototype.getMonLength=function $ilib$Cal$PersianAlgo$$getMonLength$($month$$,$year$$){return $month$$!==12||!this.isLeapYear($year$$)?ilib.Cal.PersianAlgo.monthLengths[$month$$-1]:30};ilib.Cal.PersianAlgo.prototype.equivalentCycleYear=function $ilib$Cal$PersianAlgo$$equivalentCycleYear$($year$$){return ilib.mod($year$$-($year$$>=0?474:473),2820)+474};
ilib.Cal.PersianAlgo.prototype.isLeapYear=function $ilib$Cal$PersianAlgo$$isLeapYear$($year$$){return ilib.mod((this.equivalentCycleYear($year$$)+38)*682,2816)<682};ilib.Cal.PersianAlgo.prototype.getType=function $ilib$Cal$PersianAlgo$$getType$(){return this.type};ilib.Cal.PersianAlgo.prototype.newDateInstance=function $ilib$Cal$PersianAlgo$$newDateInstance$($options$$){return new ilib.Date.PersAlgoDate($options$$)};ilib.Cal._constructors["persian-algo"]=ilib.Cal.PersianAlgo;
ilib.Date.PersAlgoRataDie=function $ilib$Date$PersAlgoRataDie$($params$$){this.cal=$params$$&&$params$$.cal||new ilib.Cal.PersianAlgo;this.rd=void 0;ilib.Date.RataDie.call(this,$params$$)};ilib.Date.PersAlgoRataDie.prototype=new ilib.Date.RataDie;ilib.Date.PersAlgoRataDie.prototype.parent=ilib.Date.RataDie;ilib.Date.PersAlgoRataDie.prototype.constructor=ilib.Date.PersAlgoRataDie;ilib.Date.PersAlgoRataDie.prototype.epoch=1948319.5;
ilib.Date.PersAlgoRataDie.prototype._setDateComponents=function $ilib$Date$PersAlgoRataDie$$_setDateComponents$($date$$){var $year$$=this.cal.equivalentCycleYear($date$$.year);this.rd=1029983*Math.floor(($date$$.year-($date$$.year>=0?474:473))/2820)+365*($year$$-1)+Math.floor((682*$year$$-110)/2816)+(($date$$.month>1?ilib.Date.PersAlgoDate.cumMonthLengths[$date$$.month-1]:0)+$date$$.day)+($date$$.hour*36E5+$date$$.minute*6E4+$date$$.second*1E3+$date$$.millisecond)/864E5};
ilib.Date.PersAlgoRataDie.prototype._onOrBefore=function $ilib$Date$PersAlgoRataDie$$_onOrBefore$($rd$$,$dayOfWeek$$){return $rd$$-ilib.mod(Math.floor($rd$$)-$dayOfWeek$$-3,7)};
ilib.Date.PersAlgoDate=function $ilib$Date$PersAlgoDate$($params$$){this.cal=new ilib.Cal.PersianAlgo;this.timezone="local";if($params$$){if($params$$.locale){this.locale=typeof $params$$.locale==="string"?new ilib.Locale($params$$.locale):$params$$.locale;this.timezone=(new ilib.LocaleInfo(this.locale)).getTimeZone()}if($params$$.timezone)this.timezone=$params$$.timezone;if($params$$.year||$params$$.month||$params$$.day||$params$$.hour||$params$$.minute||$params$$.second||$params$$.millisecond){this.year=
parseInt($params$$.year,10)||0;this.month=parseInt($params$$.month,10)||1;this.day=parseInt($params$$.day,10)||1;this.hour=parseInt($params$$.hour,10)||0;this.minute=parseInt($params$$.minute,10)||0;this.second=parseInt($params$$.second,10)||0;this.millisecond=parseInt($params$$.millisecond,10)||0;this.dayOfYear=parseInt($params$$.dayOfYear,10);if(typeof $params$$.dst==="boolean")this.dst=$params$$.dst;this.rd=this.newRd(this);if(!this.tz)this.tz=new ilib.TimeZone({id:this.timezone});this.offset=
this.tz._getOffsetMillisWallTime(this)/864E5;if(this.offset!==0)this.rd=this.newRd({rd:this.rd.getRataDie()-this.offset})}}if(!this.rd){this.rd=this.newRd($params$$);this._calcDateComponents()}};ilib.Date.PersAlgoDate.prototype=new ilib.Date({noinstance:!0});ilib.Date.PersAlgoDate.prototype.parent=ilib.Date;ilib.Date.PersAlgoDate.prototype.constructor=ilib.Date.PersAlgoDate;ilib.Date.PersAlgoDate.cumMonthLengths=[0,31,62,93,124,155,186,216,246,276,306,336,365];
ilib.Date.PersAlgoDate.prototype.newRd=function $ilib$Date$PersAlgoDate$$newRd$($params$$){return new ilib.Date.PersAlgoRataDie($params$$)};
ilib.Date.PersAlgoDate.prototype._calcYear=function $ilib$Date$PersAlgoDate$$_calcYear$($numberOfCycles_rd$$21_year$$){var $shiftedDayInCycle_shiftedRd$$=$numberOfCycles_rd$$21_year$$-173126,$numberOfCycles_rd$$21_year$$=Math.floor($shiftedDayInCycle_shiftedRd$$/1029983),$shiftedDayInCycle_shiftedRd$$=ilib.mod($shiftedDayInCycle_shiftedRd$$,1029983),$numberOfCycles_rd$$21_year$$=474+2820*$numberOfCycles_rd$$21_year$$+($shiftedDayInCycle_shiftedRd$$===1029982?2820:Math.floor((2816*$shiftedDayInCycle_shiftedRd$$+
1031337)/1028522));return $numberOfCycles_rd$$21_year$$>0?$numberOfCycles_rd$$21_year$$:$numberOfCycles_rd$$21_year$$-1};
ilib.Date.PersAlgoDate.prototype._calcDateComponents=function $ilib$Date$PersAlgoDate$$_calcDateComponents$(){var $rd$$22_remainder$$;$rd$$22_remainder$$=this.rd.getRataDie();this.year=this._calcYear($rd$$22_remainder$$);if(typeof this.offset==="undefined"){if(!this.tz)this.tz=new ilib.TimeZone({id:this.timezone});this.offset=this.tz.getOffsetMillis(this)/864E5}if(this.offset!==0){$rd$$22_remainder$$=$rd$$22_remainder$$+this.offset;this.year=this._calcYear($rd$$22_remainder$$)}var $yearStart$$=this.newRd({year:this.year,
month:1,day:1,hour:0,minute:0,second:0,millisecond:0});this.dayOfYear=$rd$$22_remainder$$=$rd$$22_remainder$$-$yearStart$$.getRataDie()+1;this.month=ilib.bsearch($rd$$22_remainder$$,ilib.Date.PersAlgoDate.cumMonthLengths);$rd$$22_remainder$$=$rd$$22_remainder$$-ilib.Date.PersAlgoDate.cumMonthLengths[this.month-1];this.day=Math.floor($rd$$22_remainder$$);$rd$$22_remainder$$=$rd$$22_remainder$$-this.day;$rd$$22_remainder$$=Math.round($rd$$22_remainder$$*864E5);this.hour=Math.floor($rd$$22_remainder$$/
36E5);$rd$$22_remainder$$=$rd$$22_remainder$$-this.hour*36E5;this.minute=Math.floor($rd$$22_remainder$$/6E4);$rd$$22_remainder$$=$rd$$22_remainder$$-this.minute*6E4;this.second=Math.floor($rd$$22_remainder$$/1E3);this.millisecond=$rd$$22_remainder$$=$rd$$22_remainder$$-this.second*1E3};ilib.Date.PersAlgoDate.prototype.getDayOfWeek=function $ilib$Date$PersAlgoDate$$getDayOfWeek$(){var $rd$$=Math.floor(this.getRataDie());return ilib.mod($rd$$-3,7)};
ilib.Date.PersAlgoDate.prototype.getDayOfYear=function $ilib$Date$PersAlgoDate$$getDayOfYear$(){return ilib.Date.PersAlgoDate.cumMonthLengths[this.month-1]+this.day};ilib.Date.PersAlgoDate.prototype.getEra=function $ilib$Date$PersAlgoDate$$getEra$(){return this.year<1?-1:1};ilib.Date.PersAlgoDate.prototype.getCalendar=function $ilib$Date$PersAlgoDate$$getCalendar$(){return"persian-algo"};ilib.Date._constructors["persian-algo"]=ilib.Date.PersAlgoDate;
ilib.data.astro={_EquinoxpTerms:[485,324.96,1934.136,203,337.23,32964.467,199,342.08,20.186,182,27.85,445267.112,156,73.14,45036.886,136,171.52,22518.443,77,222.54,65928.934,74,296.72,3034.906,70,243.58,9037.513,58,119.81,33718.147,52,297.17,150.678,50,21.02,2281.226,45,247.54,29929.562,44,325.15,31555.956,29,60.93,4443.417,18,155.12,67555.328,17,288.79,4562.452,16,198.04,62894.029,14,199.76,31436.921,12,95.39,14577.848,12,287.11,31931.756,12,320.81,34777.259,9,227.73,1222.114,8,15.45,16859.074],
_JDE0tab1000:[[1721139.29189,365242.1374,0.06134,0.00111,-7.1E-4],[1721233.25401,365241.72562,-0.05323,0.00907,2.5E-4],[1721325.70455,365242.49558,-0.11677,-0.00297,7.4E-4],[1721414.39987,365242.88257,-0.00769,-0.00933,-6.0E-5]],_JDE0tab2000:[[2451623.80984,365242.37404,0.05169,-0.00411,-5.7E-4],[2451716.56767,365241.62603,0.00325,0.00888,-3.0E-4],[2451810.21715,365242.01767,-0.11575,0.00337,7.8E-4],[2451900.05952,365242.74049,-0.06223,-0.00823,3.2E-4]],_deltaTtab:[124,119,115,110,106,102,98,95,91,
88,85,82,79,77,74,72,70,67,65,63,62,60,58,57,55,54,53,51,50,49,48,47,46,45,44,43,42,41,40,38,37,36,35,34,33,32,31,30,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,14,13,12,12,11,11,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,14,14,14,14,14,14,14,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,16,16,16,16,15,15,14,14,13.7,
13.4,13.1,12.9,12.7,12.6,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.4,12.3,12.2,12,11.7,11.4,11.1,10.6,10.2,9.6,9.1,8.6,8,7.5,7,6.6,6.3,6,5.8,5.7,5.6,5.6,5.6,5.7,5.8,5.9,6.1,6.2,6.3,6.5,6.6,6.8,6.9,7.1,7.2,7.3,7.4,7.5,7.6,7.7,7.7,7.8,7.8,7.88,7.82,7.54,6.97,6.4,6.02,5.41,4.1,2.92,1.82,1.61,0.1,-1.02,-1.28,-2.69,-3.24,-3.64,-4.54,-4.71,-5.11,-5.4,-5.42,-5.2,-5.46,-5.46,-5.79,-5.63,-5.64,-5.8,-5.66,-5.87,-6.01,-6.19,-6.64,-6.44,-6.47,-6.09,-5.76,-4.66,-3.74,-2.72,-1.54,-0.02,1.24,2.64,
3.86,5.37,6.14,7.75,9.13,10.46,11.53,13.36,14.65,16.01,17.2,18.24,19.06,20.25,20.95,21.16,22.25,22.41,23.03,23.49,23.62,23.86,24.49,24.34,24.08,24.02,24,23.87,23.95,23.86,23.93,23.73,23.92,23.96,24.02,24.33,24.83,25.3,25.7,26.24,26.77,27.28,27.78,28.25,28.71,29.15,29.57,29.97,30.36,30.72,31.07,31.35,31.68,32.18,32.68,33.15,33.59,34,34.47,35.03,35.73,36.54,37.43,38.29,39.2,40.18,41.17,42.23,43.37,44.49,45.48,46.46,47.52,48.53,49.59,50.54,51.38,52.17,52.96,53.79,54.34,54.87,55.32,55.82,56.3,56.86,57.57,
58.31,59.12,59.99,60.78,61.63,62.3,62.97,63.47,63.83,64.09,64.3,64.47,64.57,64.69,64.85,65.15,65.46,65.78,66.07,66.3246,66.603,66.9069,67.281,67.61],_oterms:[-4680.93,-1.55,1999.25,-51.38,-249.67,-39.05,7.12,27.87,5.79,2.45],_nutArgMult:[0,0,0,0,1,-2,0,0,2,2,0,0,0,2,2,0,0,0,0,2,0,1,0,0,0,0,0,1,0,0,-2,1,0,2,2,0,0,0,2,1,0,0,1,2,2,-2,-1,0,2,2,-2,0,1,0,0,-2,0,0,2,1,0,0,-1,2,2,2,0,0,0,0,0,0,1,0,1,2,0,-1,2,2,0,0,-1,0,1,0,0,1,2,1,-2,0,2,0,0,0,0,-2,2,1,2,0,0,2,2,0,0,2,2,2,0,0,2,0,0,-2,0,1,2,2,0,0,0,2,0,-2,
0,0,2,0,0,0,-1,2,1,0,2,0,0,0,2,0,-1,0,1,-2,2,0,2,2,0,1,0,0,1,-2,0,1,0,1,0,-1,0,0,1,0,0,2,-2,0,2,0,-1,2,1,2,0,1,2,2,0,1,0,2,2,-2,1,1,0,0,0,-1,0,2,2,2,0,0,2,1,2,0,1,0,0,-2,0,2,2,2,-2,0,1,2,1,2,0,-2,0,1,2,0,0,0,1,0,-1,1,0,0,-2,-1,0,2,1,-2,0,0,0,1,0,0,2,2,1,-2,0,2,0,1,-2,1,0,2,1,0,0,1,-2,0,-1,0,1,0,0,-2,1,0,0,0,1,0,0,0,0,0,0,1,2,0,-1,-1,1,0,0,0,1,1,0,0,0,-1,1,2,2,2,-1,-1,2,2,0,0,-2,2,2,0,0,3,2,2,2,-1,0,2,2],_nutArgCoeff:[-171996,-1742,92095,89,-13187,-16,5736,-31,-2274,-2,977,-5,2062,2,-895,5,1426,-34,
54,-1,712,1,-7,0,-517,12,224,-6,-386,-4,200,0,-301,0,129,-1,217,-5,-95,3,-158,0,0,0,129,1,-70,0,123,0,-53,0,63,0,0,0,63,1,-33,0,-59,0,26,0,-58,-1,32,0,-51,0,27,0,48,0,0,0,46,0,-24,0,-38,0,16,0,-31,0,13,0,29,0,0,0,29,0,-12,0,26,0,0,0,-22,0,0,0,21,0,-10,0,17,-1,0,0,16,0,-8,0,-16,1,7,0,-15,0,9,0,-13,0,7,0,-12,0,6,0,11,0,0,0,-10,0,5,0,-8,0,3,0,7,0,-3,0,-7,0,0,0,-7,0,3,0,-7,0,3,0,6,0,0,0,6,0,-3,0,6,0,-3,0,-6,0,3,0,-6,0,3,0,5,0,0,0,-5,0,3,0,-5,0,3,0,-5,0,3,0,4,0,0,0,4,0,0,0,4,0,0,0,-4,0,0,0,-4,0,0,0,-4,
0,0,0,3,0,0,0,-3,0,0,0,-3,0,0,0,-3,0,0,0,-3,0,0,0,-3,0,0,0,-3,0,0,0,-3,0,0,0],_nutCoeffA:[124.9,-1934.134,0.002063],_nutCoeffB:[201.11,72001.5377,5.7E-4],_coeff19th:[-2.0E-5,2.97E-4,0.025184,-0.181133,0.55304,-0.861938,0.677066,-0.212591],_coeff18th:[-9.0E-6,0.003844,0.083563,0.865736,4.867575,15.845535,31.332267,38.291999,28.316289,11.636204,2.043794],_solarLongCoeff:[403406,195207,119433,112392,3891,2819,1721,660,350,334,314,268,242,234,158,132,129,114,99,93,86,78,72,68,64,46,38,37,32,29,28,27,
27,25,24,21,21,20,18,17,14,13,13,13,12,10,10,10,10],_solarLongMultipliers:[0.9287892,35999.1376958,35999.4089666,35998.7287385,71998.20261,71998.4403,36000.35726,71997.4812,32964.4678,-19.441,445267.1117,45036.884,3.1008,22518.4434,-19.9739,65928.9345,9038.0293,3034.7684,33718.148,3034.448,-2280.773,29929.992,31556.493,149.588,9037.75,107997.405,-4444.176,151.771,67555.316,31556.08,-4561.54,107996.706,1221.655,62894.167,31437.369,14578.298,-31931.757,34777.243,1221.999,62894.511,-4442.039,107997.909,
119.066,16859.071,-4.578,26895.292,-39.127,12297.536,90073.778],_solarLongAddends:[270.54861,340.19128,63.91854,331.2622,317.843,86.631,240.052,310.26,247.23,260.87,297.82,343.14,166.79,81.53,3.5,132.75,182.95,162.03,29.8,266.4,249.2,157.6,257.8,185.1,69.9,8,197.1,250.4,65.3,162.7,341.5,291.6,98.5,146.7,110,5.2,342.6,230.9,256.1,45.3,242.9,115.2,151.8,285.3,53.3,126.6,205.7,85.9,146.1],_meanMoonCoeff:[218.3164591,481267.88134236,-0.0013268,1.855835023689734E-6,-1.533883486210388E-8],_elongationCoeff:[297.8502042,
445267.1115168,-0.00163,1.831944719236152E-6,-8.844469995135542E-9],_solarAnomalyCoeff:[357.5291092,35999.0502909,-1.536E-4,4.083299305839118E-8],_lunarAnomalyCoeff:[134.9634114,477198.8676313,0.008997,1.434740814071938E-5,-6.797172376291463E-8],_moonFromNodeCoeff:[93.2720993,483202.0175273,-0.0034029,-2.836074872376631E-7,1.158332464583985E-9],_eCoeff:[1,-0.002516,-7.4E-6],_lunarElongationLongCoeff:[0,2,2,0,0,0,2,2,2,2,0,1,0,2,0,0,4,0,4,2,2,1,1,2,2,4,2,0,2,2,1,2,0,0,2,2,2,4,0,3,2,4,0,2,2,2,4,0,4,
1,2,0,1,3,4,2,0,1,2,2],_solarAnomalyLongCoeff:[0,0,0,0,1,0,0,-1,0,-1,1,0,1,0,0,0,0,0,0,1,1,0,1,-1,0,0,0,1,0,-1,0,-2,1,2,-2,0,0,-1,0,0,1,-1,2,2,1,-1,0,0,-1,0,1,0,1,0,0,-1,2,1,0,0],_lunarAnomalyLongCoeff:[1,-1,0,2,0,0,-2,-1,1,0,-1,0,1,0,1,1,-1,3,-2,-1,0,-1,0,1,2,0,-3,-2,-1,-2,1,0,2,0,-1,1,0,-1,2,-1,1,-2,-1,-1,-2,0,1,4,0,-2,0,2,1,-2,-3,2,1,-1,3,-1],_moonFromNodeLongCoeff:[0,0,0,0,0,2,0,0,0,0,0,0,0,-2,2,-2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,-2,2,0,2,0,0,0,0,0,0,-2,0,0,0,0,-2,-2,0,0,0,0,0,0,0,-2],_sineCoeff:[6288774,
1274027,658314,213618,-185116,-114332,58793,57066,53322,45758,-40923,-34720,-30383,15327,-12528,10980,10675,10034,8548,-7888,-6766,-5163,4987,4036,3994,3861,3665,-2689,-2602,2390,-2348,2236,-2120,-2069,2048,-1773,-1595,1215,-1110,-892,-810,759,-713,-700,691,596,549,537,520,-487,-399,-381,351,-340,330,327,-323,299,294,0],_nmApproxCoeff:[730125.59765,36524.90882283305,1.337E-4,-1.5E-7,7.3E-10],_nmCapECoeff:[1,-0.002516,-7.4E-6],_nmSolarAnomalyCoeff:[2.5534,35998.960422026496,-2.18E-5,-1.1E-7],_nmLunarAnomalyCoeff:[201.5643,
477197.67640106793,0.0107438,1.239E-5,-5.8E-8],_nmMoonArgumentCoeff:[160.7108,483200.81131396897,-0.0016341,-2.27E-6,1.1E-8],_nmCapOmegaCoeff:[124.7746,-1934.1313612299998,0.0020691,2.15E-6],_nmEFactor:[0,1,0,0,1,1,2,0,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0],_nmSolarCoeff:[0,1,0,0,-1,1,2,0,0,1,0,1,1,-1,2,0,3,1,0,1,-1,-1,1,0],_nmLunarCoeff:[1,0,2,0,1,1,0,1,1,2,3,0,0,2,1,2,0,1,2,1,1,1,3,4],_nmMoonCoeff:[0,0,0,2,0,0,0,-2,2,0,0,2,-2,0,0,-2,0,-2,2,2,2,-2,0,0],_nmSineCoeff:[-0.4072,0.17241,0.01608,0.01039,0.00739,
-0.00514,0.00208,-0.00111,-5.7E-4,5.6E-4,-4.2E-4,4.2E-4,3.8E-4,-2.4E-4,-7.0E-5,4.0E-5,4.0E-5,3.0E-5,3.0E-5,-3.0E-5,3.0E-5,-2.0E-5,-2.0E-5,2.0E-5],_nmAddConst:[251.88,251.83,349.42,84.66,141.74,207.14,154.84,34.52,207.19,291.34,161.72,239.56,331.55],_nmAddCoeff:[0.016321,26.641886,36.412478,18.206239,53.303771,2.453732,7.30686,27.261239,0.121824,1.844379,24.198154,25.513099,3.592518],_nmAddFactor:[1.65E-4,1.64E-4,1.26E-4,1.1E-4,6.2E-5,6.0E-5,5.6E-5,4.7E-5,4.2E-5,4.0E-5,3.7E-5,3.5E-5,2.3E-5],_nmExtra:[299.77,
132.8475848,-0.009173]};ilib.Date.initAstro=function $ilib$Date$initAstro$($sync$$,$loadParams$$,$callback$$){ilib.data.astro?$callback$$&&typeof $callback$$==="function"&&$callback$$(ilib.data.astro):ilib.loadData({name:"astro.json",locale:"-",nonLocale:true,sync:$sync$$,loadParams:$loadParams$$,callback:ilib.bind(this,function($astroData$$){ilib.data.astro=$astroData$$;$callback$$&&typeof $callback$$==="function"&&$callback$$($astroData$$)})})};
ilib.Date._dtr=function $ilib$Date$_dtr$($d$$){return $d$$*Math.PI/180};ilib.Date._rtd=function $ilib$Date$_rtd$($r$$){return $r$$*180/Math.PI};ilib.Date._dcos=function $ilib$Date$_dcos$($d$$){return Math.cos(ilib.Date._dtr($d$$))};ilib.Date._dsin=function $ilib$Date$_dsin$($d$$){return Math.sin(ilib.Date._dtr($d$$))};ilib.Date._dtan=function $ilib$Date$_dtan$($d$$){return Math.tan(ilib.Date._dtr($d$$))};ilib.Date._fixangle=function $ilib$Date$_fixangle$($a$$){return $a$$-360*Math.floor($a$$/360)};
ilib.Date._fixangr=function $ilib$Date$_fixangr$($a$$){return $a$$-2*Math.PI*Math.floor($a$$/(2*Math.PI))};
ilib.Date._equinox=function $ilib$Date$_equinox$($year$$,$which$$){var $W_deltaL$$,$i$$,$j$$,$JDE0_JDE0tab$$,$S$$,$T_Y$$;if($year$$<1E3){$JDE0_JDE0tab$$=ilib.data.astro._JDE0tab1000;$T_Y$$=$year$$/1E3}else{$JDE0_JDE0tab$$=ilib.data.astro._JDE0tab2000;$T_Y$$=($year$$-2E3)/1E3}$JDE0_JDE0tab$$=$JDE0_JDE0tab$$[$which$$][0]+$JDE0_JDE0tab$$[$which$$][1]*$T_Y$$+$JDE0_JDE0tab$$[$which$$][2]*$T_Y$$*$T_Y$$+$JDE0_JDE0tab$$[$which$$][3]*$T_Y$$*$T_Y$$*$T_Y$$+$JDE0_JDE0tab$$[$which$$][4]*$T_Y$$*$T_Y$$*$T_Y$$*$T_Y$$;
$T_Y$$=($JDE0_JDE0tab$$-2451545)/36525;$W_deltaL$$=35999.373*$T_Y$$-2.47;$W_deltaL$$=1+0.0334*ilib.Date._dcos($W_deltaL$$)+7.0E-4*ilib.Date._dcos(2*$W_deltaL$$);for($i$$=$j$$=$S$$=0;$i$$<24;$i$$++){$S$$=$S$$+ilib.data.astro._EquinoxpTerms[$j$$]*ilib.Date._dcos(ilib.data.astro._EquinoxpTerms[$j$$+1]+ilib.data.astro._EquinoxpTerms[$j$$+2]*$T_Y$$);$j$$=$j$$+3}return $JDE0_JDE0tab$$+$S$$*1.0E-5/$W_deltaL$$};
ilib.Date._deltat=function $ilib$Date$_deltat$($year$$){var $dt_i$$23_t$$;if($year$$>=1620&&$year$$<=2014){$dt_i$$23_t$$=Math.floor($year$$-1620);$dt_i$$23_t$$=ilib.data.astro._deltaTtab[$dt_i$$23_t$$]+(ilib.data.astro._deltaTtab[$dt_i$$23_t$$+1]-ilib.data.astro._deltaTtab[$dt_i$$23_t$$])*($year$$-1620-$dt_i$$23_t$$)}else{$dt_i$$23_t$$=($year$$-2E3)/100;if($year$$<948)$dt_i$$23_t$$=2177+497*$dt_i$$23_t$$+44.1*$dt_i$$23_t$$*$dt_i$$23_t$$;else{$dt_i$$23_t$$=102+102*$dt_i$$23_t$$+25.3*$dt_i$$23_t$$*
$dt_i$$23_t$$;$year$$>2E3&&$year$$<2100&&($dt_i$$23_t$$=$dt_i$$23_t$$+0.37*($year$$-2100))}}return $dt_i$$23_t$$};ilib.Date._obliqeq=function $ilib$Date$_obliqeq$($eps_jd$$){var $u$$,$v$$,$i$$;$v$$=$u$$=($eps_jd$$-2451545)/3652500;$eps_jd$$=23+26/60+21.448/3600;if(Math.abs($u$$)<1)for($i$$=0;$i$$<10;$i$$++){$eps_jd$$=$eps_jd$$+ilib.data.astro._oterms[$i$$]/3600*$v$$;$v$$=$v$$*$u$$}return $eps_jd$$};
ilib.Date._sunpos=function $ilib$Date$_sunpos$($epsilon_jd$$){var $ret$$={},$T$$,$T2$$,$T3$$,$Omega$$;$T$$=($epsilon_jd$$-2451545)/36525;$T2$$=$T$$*$T$$;$T3$$=$T$$*$T2$$;$ret$$.meanLongitude=ilib.Date._fixangle(280.46646+36000.76983*$T$$+3.032E-4*$T2$$);$ret$$.meanAnomaly=ilib.Date._fixangle(357.52911+35999.05029*$T$$-1.537E-4*$T2$$-4.8E-7*$T3$$);$ret$$.eccentricity=0.016708634-4.2037E-5*$T$$-1.267E-7*$T2$$;$ret$$.equationOfCenter=(1.914602-0.004817*$T$$-1.4E-5*$T2$$)*ilib.Date._dsin($ret$$.meanAnomaly)+
(0.019993-1.01E-4*$T$$)*ilib.Date._dsin(2*$ret$$.meanAnomaly)+2.89E-4*ilib.Date._dsin(3*$ret$$.meanAnomaly);$ret$$.sunLongitude=$ret$$.meanLongitude+$ret$$.equationOfCenter;$Omega$$=125.04-1934.136*$T$$;$ret$$.apparentLong=$ret$$.sunLongitude+-0.00569+-0.00478*ilib.Date._dsin($Omega$$);$epsilon_jd$$=ilib.Date._obliqeq($epsilon_jd$$)+0.00256*ilib.Date._dcos($Omega$$);$ret$$.inclination=ilib.Date._fixangle(23.4392911-0.013004167*$T$$-1.6389E-7*$T2$$+5.036E-7*$T3$$);$ret$$.apparentRightAscension=ilib.Date._fixangle(ilib.Date._rtd(Math.atan2(ilib.Date._dcos($epsilon_jd$$)*
ilib.Date._dsin($ret$$.apparentLong),ilib.Date._dcos($ret$$.apparentLong))));return $ret$$};
ilib.Date._nutation=function $ilib$Date$_nutation$($jd$$){var $i$$,$j$$1_t$$;$j$$1_t$$=($jd$$-2451545)/36525;var $t3_to10$$,$jd$$=[],$dp$$=0,$de$$=0,$ang$$,$ret$$={};$t3_to10$$=$j$$1_t$$*($i$$=$j$$1_t$$*$j$$1_t$$);$jd$$[0]=ilib.Date._dtr(297.850363+445267.11148*$j$$1_t$$-0.0019142*$i$$+$t3_to10$$/189474);$jd$$[1]=ilib.Date._dtr(357.52772+35999.05034*$j$$1_t$$-1.603E-4*$i$$-$t3_to10$$/3E5);$jd$$[2]=ilib.Date._dtr(134.96298+477198.867398*$j$$1_t$$+0.0086972*$i$$+$t3_to10$$/56250);$jd$$[3]=ilib.Date._dtr(93.27191+
483202.017538*$j$$1_t$$-0.0036825*$i$$+$t3_to10$$/327270);$jd$$[4]=ilib.Date._dtr(125.04452-1934.136261*$j$$1_t$$+0.0020708*$i$$+$t3_to10$$/45E4);for($i$$=0;$i$$<5;$i$$++)$jd$$[$i$$]=ilib.Date._fixangr($jd$$[$i$$]);$t3_to10$$=$j$$1_t$$/10;for($i$$=0;$i$$<63;$i$$++){for($j$$1_t$$=$ang$$=0;$j$$1_t$$<5;$j$$1_t$$++)ilib.data.astro._nutArgMult[$i$$*5+$j$$1_t$$]!=0&&($ang$$=$ang$$+ilib.data.astro._nutArgMult[$i$$*5+$j$$1_t$$]*$jd$$[$j$$1_t$$]);$dp$$=$dp$$+(ilib.data.astro._nutArgCoeff[$i$$*4+0]+ilib.data.astro._nutArgCoeff[$i$$*
4+1]*$t3_to10$$)*Math.sin($ang$$);$de$$=$de$$+(ilib.data.astro._nutArgCoeff[$i$$*4+2]+ilib.data.astro._nutArgCoeff[$i$$*4+3]*$t3_to10$$)*Math.cos($ang$$)}$ret$$.deltaPsi=$dp$$/36E6;$ret$$.deltaEpsilon=$de$$/36E6;return $ret$$};
ilib.Date._equationOfTime=function $ilib$Date$_equationOfTime$($E_epsilon$$1_jd$$){var $alpha$$,$deltaPsi$$,$L0$$;$alpha$$=($E_epsilon$$1_jd$$-2451545)/365250;$L0$$=ilib.Date._fixangle(280.4664567+360007.6982779*$alpha$$+0.03032028*$alpha$$*$alpha$$+$alpha$$*$alpha$$*$alpha$$/49931+-($alpha$$*$alpha$$*$alpha$$*$alpha$$/15300)+-($alpha$$*$alpha$$*$alpha$$*$alpha$$*$alpha$$/2E6));$alpha$$=ilib.Date._sunpos($E_epsilon$$1_jd$$).apparentRightAscension;var $nut$$=ilib.Date._nutation($E_epsilon$$1_jd$$);
$deltaPsi$$=$nut$$.deltaPsi;$E_epsilon$$1_jd$$=ilib.Date._obliqeq($E_epsilon$$1_jd$$)+$nut$$.deltaEpsilon;$E_epsilon$$1_jd$$=$L0$$-0.0057183-$alpha$$+$deltaPsi$$*ilib.Date._dcos($E_epsilon$$1_jd$$);$E_epsilon$$1_jd$$>180&&($E_epsilon$$1_jd$$=$E_epsilon$$1_jd$$-360);return $E_epsilon$$1_jd$$*4/1440};
ilib.Date._poly=function $ilib$Date$_poly$($x$$,$coefficients$$){for(var $result$$=$coefficients$$[0],$xpow$$=$x$$,$i$$=1;$i$$<$coefficients$$.length;$i$$++){$result$$=$result$$+$coefficients$$[$i$$]*$xpow$$;$xpow$$=$xpow$$*$x$$}return $result$$};ilib.Date._universalFromLocal=function $ilib$Date$_universalFromLocal$($local$$,$zone$$){return $local$$-$zone$$/1440};ilib.Date._localFromUniversal=function $ilib$Date$_localFromUniversal$($local$$,$zone$$){return $local$$+$zone$$/1440};
ilib.Date._aberration=function $ilib$Date$_aberration$($c$$){return 9.74E-5*ilib.Date._dcos(177.63+35999.01847999999*$c$$)-0.005575};ilib.Date._nutation2=function $ilib$Date$_nutation2$($b$$1_c$$){var $a$$=ilib.Date._poly($b$$1_c$$,ilib.data.astro._nutCoeffA),$b$$1_c$$=ilib.Date._poly($b$$1_c$$,ilib.data.astro._nutCoeffB);return-0.004778*ilib.Date._dsin($a$$)-3.667E-4*ilib.Date._dsin($b$$1_c$$)};
ilib.Date._ephemerisCorrection=function $ilib$Date$_ephemerisCorrection$($jd$$7_x$$55_year$$){$jd$$7_x$$55_year$$=ilib.Date.GregDate._calcYear($jd$$7_x$$55_year$$-1721424.5);if(1988<=$jd$$7_x$$55_year$$&&$jd$$7_x$$55_year$$<=2019)return($jd$$7_x$$55_year$$-1933)/86400;if(1800<=$jd$$7_x$$55_year$$&&$jd$$7_x$$55_year$$<=1987){var $theta$$=((new ilib.Date.GregRataDie({year:$jd$$7_x$$55_year$$,month:7,day:1,hour:0,minute:0,second:0})).getRataDie()-693596)/36525;return ilib.Date._poly($theta$$,1900<=$jd$$7_x$$55_year$$?
ilib.data.astro._coeff19th:ilib.data.astro._coeff18th)}if(1620<=$jd$$7_x$$55_year$$&&$jd$$7_x$$55_year$$<=1799){$jd$$7_x$$55_year$$=$jd$$7_x$$55_year$$-1600;return(196.58333-4.0675*$jd$$7_x$$55_year$$+0.0219167*$jd$$7_x$$55_year$$*$jd$$7_x$$55_year$$)/86400}$jd$$7_x$$55_year$$=0.5+((new ilib.Date.GregRataDie({year:$jd$$7_x$$55_year$$,month:1,day:1,hour:0,minute:0,second:0})).getRataDie()-660724);return($jd$$7_x$$55_year$$*$jd$$7_x$$55_year$$/41048480-15)/86400};
ilib.Date._ephemerisFromUniversal=function $ilib$Date$_ephemerisFromUniversal$($jd$$){return $jd$$+ilib.Date._ephemerisCorrection($jd$$)};ilib.Date._universalFromEphemeris=function $ilib$Date$_universalFromEphemeris$($jd$$){return $jd$$-ilib.Date._ephemerisCorrection($jd$$)};ilib.Date._julianCenturies=function $ilib$Date$_julianCenturies$($jd$$){return(ilib.Date._ephemerisFromUniversal($jd$$)-2451545)/36525};
ilib.Date._solarLongitude=function $ilib$Date$_solarLongitude$($c$$4_jd$$){for(var $c$$4_jd$$=ilib.Date._julianCenturies($c$$4_jd$$),$longitude$$=0,$len$$=ilib.data.astro._solarLongCoeff.length,$i$$=0;$i$$<$len$$;$i$$++)$longitude$$=$longitude$$+ilib.data.astro._solarLongCoeff[$i$$]*ilib.Date._dsin(ilib.data.astro._solarLongAddends[$i$$]+ilib.data.astro._solarLongMultipliers[$i$$]*$c$$4_jd$$);$longitude$$=$longitude$$*5.729577951308232E-6+(282.7771834+36000.76953744*$c$$4_jd$$)+(ilib.Date._aberration($c$$4_jd$$)+
ilib.Date._nutation2($c$$4_jd$$));return ilib.Date._fixangle($longitude$$)};
ilib.Date._lunarLongitude=function $ilib$Date$_lunarLongitude$($c$$5_jd$$){for(var $c$$5_jd$$=ilib.Date._julianCenturies($c$$5_jd$$),$meanMoon$$=ilib.Date._fixangle(ilib.Date._poly($c$$5_jd$$,ilib.data.astro._meanMoonCoeff)),$elongation_longitude$$=ilib.Date._fixangle(ilib.Date._poly($c$$5_jd$$,ilib.data.astro._elongationCoeff)),$solarAnomaly_venus$$=ilib.Date._fixangle(ilib.Date._poly($c$$5_jd$$,ilib.data.astro._solarAnomalyCoeff)),$jupiter_lunarAnomaly$$=ilib.Date._fixangle(ilib.Date._poly($c$$5_jd$$,
ilib.data.astro._lunarAnomalyCoeff)),$flatEarth_moonNode$$=ilib.Date._fixangle(ilib.Date._poly($c$$5_jd$$,ilib.data.astro._moonFromNodeCoeff)),$e$$=ilib.Date._poly($c$$5_jd$$,ilib.data.astro._eCoeff),$sum$$=0,$i$$=0;$i$$<ilib.data.astro._lunarElongationLongCoeff.length;$i$$++)var $x$$=ilib.data.astro._solarAnomalyLongCoeff[$i$$],$sum$$=$sum$$+ilib.data.astro._sineCoeff[$i$$]*Math.pow($e$$,Math.abs($x$$))*ilib.Date._dsin(ilib.data.astro._lunarElongationLongCoeff[$i$$]*$elongation_longitude$$+$x$$*
$solarAnomaly_venus$$+ilib.data.astro._lunarAnomalyLongCoeff[$i$$]*$jupiter_lunarAnomaly$$+ilib.data.astro._moonFromNodeLongCoeff[$i$$]*$flatEarth_moonNode$$);$elongation_longitude$$=$sum$$/1E6;$solarAnomaly_venus$$=0.003958*ilib.Date._dsin(119.75+$c$$5_jd$$*131.849);$jupiter_lunarAnomaly$$=3.18E-4*ilib.Date._dsin(53.09+$c$$5_jd$$*479264.29);$flatEarth_moonNode$$=0.001962*ilib.Date._dsin($meanMoon$$-$flatEarth_moonNode$$);return ilib.Date._fixangle($meanMoon$$+$elongation_longitude$$+$solarAnomaly_venus$$+
$jupiter_lunarAnomaly$$+$flatEarth_moonNode$$+ilib.Date._nutation2($c$$5_jd$$))};
ilib.Date._newMoonTime=function $ilib$Date$_newMoonTime$($approx_n$$){for(var $extra_k$$=$approx_n$$-24724,$c$$=$extra_k$$/1236.85,$approx_n$$=ilib.Date._poly($c$$,ilib.data.astro._nmApproxCoeff),$additional_capE$$=ilib.Date._poly($c$$,ilib.data.astro._nmCapECoeff),$solarAnomaly$$=ilib.Date._poly($c$$,ilib.data.astro._nmSolarAnomalyCoeff),$lunarAnomaly$$=ilib.Date._poly($c$$,ilib.data.astro._nmLunarAnomalyCoeff),$moonArgument$$=ilib.Date._poly($c$$,ilib.data.astro._nmMoonArgumentCoeff),$capOmega_correction$$=
ilib.Date._poly($c$$,ilib.data.astro._nmCapOmegaCoeff),$capOmega_correction$$=-1.7E-4*ilib.Date._dsin($capOmega_correction$$),$i$$=0;$i$$<ilib.data.astro._nmSineCoeff.length;$i$$++)$capOmega_correction$$=$capOmega_correction$$+ilib.data.astro._nmSineCoeff[$i$$]*Math.pow($additional_capE$$,ilib.data.astro._nmEFactor[$i$$])*ilib.Date._dsin(ilib.data.astro._nmSolarCoeff[$i$$]*$solarAnomaly$$+ilib.data.astro._nmLunarCoeff[$i$$]*$lunarAnomaly$$+ilib.data.astro._nmMoonCoeff[$i$$]*$moonArgument$$);for($i$$=
$additional_capE$$=0;$i$$<ilib.data.astro._nmAddConst.length;$i$$++)$additional_capE$$=$additional_capE$$+ilib.data.astro._nmAddFactor[$i$$]*ilib.Date._dsin(ilib.data.astro._nmAddConst[$i$$]+ilib.data.astro._nmAddCoeff[$i$$]*$extra_k$$);$extra_k$$=3.25E-4*ilib.Date._dsin(ilib.Date._poly($c$$,ilib.data.astro._nmExtra));return ilib.Date._universalFromEphemeris($approx_n$$+$capOmega_correction$$+$extra_k$$+$additional_capE$$+ilib.Date.RataDie.gregorianEpoch)};
ilib.Date._lunarSolarAngle=function $ilib$Date$_lunarSolarAngle$($jd$$){var $lunar$$=ilib.Date._lunarLongitude($jd$$),$jd$$=ilib.Date._solarLongitude($jd$$);return ilib.Date._fixangle($lunar$$-$jd$$)};
ilib.Date._newMoonBefore=function $ilib$Date$_newMoonBefore$($jd$$){var $guess_phase$$=ilib.Date._lunarSolarAngle($jd$$),$guess_phase$$=Math.round(($jd$$-11.450086114414322-ilib.Date.RataDie.gregorianEpoch)/29.530588853-$guess_phase$$/360)-1,$current$$,$last$$;for($current$$=$last$$=ilib.Date._newMoonTime($guess_phase$$);$current$$<$jd$$;){$guess_phase$$++;$last$$=$current$$;$current$$=ilib.Date._newMoonTime($guess_phase$$)}return $last$$};
ilib.Date._newMoonAtOrAfter=function $ilib$Date$_newMoonAtOrAfter$($jd$$){for(var $guess$$1_phase$$=ilib.Date._lunarSolarAngle($jd$$),$guess$$1_phase$$=Math.round(($jd$$-11.450086114414322-ilib.Date.RataDie.gregorianEpoch)/29.530588853-$guess$$1_phase$$/360),$current$$;($current$$=ilib.Date._newMoonTime($guess$$1_phase$$))<$jd$$;)$guess$$1_phase$$++;return $current$$};
ilib.Date._nextSolarLongitude=function $ilib$Date$_nextSolarLongitude$($jd$$,$longitude$$){var $tau$$=$jd$$+365.242189/360*ilib.Date._fixangle($longitude$$-ilib.Date._solarLongitude($jd$$)),$start$$=Math.max($jd$$,$tau$$-5);return ilib.bisectionSearch(0,$start$$,$tau$$+5,1.0E-6,function($l$$){return 180-ilib.Date._fixangle(ilib.Date._solarLongitude($l$$)-$longitude$$)})};ilib.Date._floorToJD=function $ilib$Date$_floorToJD$($jd$$){return Math.floor($jd$$-0.5)+0.5};
ilib.Date._ceilToJD=function $ilib$Date$_ceilToJD$($jd$$){return Math.ceil($jd$$+0.5)-0.5};ilib.Date.PersAstroRataDie=function $ilib$Date$PersAstroRataDie$($params$$){this.rd=void 0;ilib.Date.initAstro($params$$&&typeof $params$$.sync==="boolean"?$params$$.sync:true,$params$$&&$params$$.loadParams,ilib.bind(this,function(){ilib.Date.RataDie.call(this,$params$$);$params$$&&typeof $params$$.callback==="function"&&$params$$.callback(this)}))};ilib.Date.PersAstroRataDie.prototype=new ilib.Date.RataDie;
ilib.Date.PersAstroRataDie.prototype.parent=ilib.Date.RataDie;ilib.Date.PersAstroRataDie.prototype.constructor=ilib.Date.PersAstroRataDie;ilib.Date.PersAstroRataDie.prototype.epoch=1948319.5;
ilib.Date.PersAstroRataDie.prototype._tehranEquinox=function $ilib$Date$PersAstroRataDie$$_tehranEquinox$($equJD_year$$){var $eot_equJED$$;$eot_equJED$$=ilib.Date._equinox($equJD_year$$,0);$equJD_year$$=$eot_equJED$$-ilib.Date._deltat($equJD_year$$)/86400;$eot_equJED$$=ilib.Date._equationOfTime($eot_equJED$$)*360;$eot_equJED$$=($eot_equJED$$-20*Math.floor($eot_equJED$$/20))/360;return $equJD_year$$+$eot_equJED$$+52.5/360};
ilib.Date.PersAstroRataDie.prototype._getYear=function $ilib$Date$PersAstroRataDie$$_getYear$($jd$$){var $guess$$=(new ilib.Date.GregDate({julianday:$jd$$})).getYears()-2,$nexteq$$,$ret$$={};for($ret$$.equinox=this._tehranEquinox($guess$$);$ret$$.equinox>$jd$$;){$guess$$--;$ret$$.equinox=this._tehranEquinox($guess$$)}for($nexteq$$=$ret$$.equinox-1;!(Math.floor($ret$$.equinox)+0.5<=$jd$$&&$jd$$<Math.floor($nexteq$$)+0.5);){$ret$$.equinox=$nexteq$$;$guess$$++;$nexteq$$=this._tehranEquinox($guess$$)}$ret$$.year=
Math.round(($ret$$.equinox-this.epoch-1)/365.24219878)+1;return $ret$$};
ilib.Date.PersAstroRataDie.prototype._setDateComponents=function $ilib$Date$PersAstroRataDie$$_setDateComponents$($date$$){var $adr_jd$$,$guess$$;$guess$$=this.epoch+1+365.24219878*($date$$.year-2);for($adr_jd$$={year:$date$$.year-1,equinox:0};$adr_jd$$.year<$date$$.year;){$adr_jd$$=this._getYear($guess$$);$guess$$=$adr_jd$$.equinox+367.24219878}$adr_jd$$=Math.floor($adr_jd$$.equinox)+($date$$.month<=7?($date$$.month-1)*31:($date$$.month-1)*30+6)+($date$$.day-1+0.5);$adr_jd$$=$adr_jd$$+($date$$.hour*
36E5+$date$$.minute*6E4+$date$$.second*1E3+$date$$.millisecond)/864E5;this.rd=$adr_jd$$-this.epoch};ilib.Date.PersAstroRataDie.prototype._onOrBefore=function $ilib$Date$PersAstroRataDie$$_onOrBefore$($rd$$,$dayOfWeek$$){return $rd$$-ilib.mod(Math.floor($rd$$)-$dayOfWeek$$-3,7)};ilib.Cal.Persian=function $ilib$Cal$Persian$(){this.type="persian"};ilib.Cal.Persian.monthLengths=[31,31,31,31,31,31,30,30,30,30,30,29];ilib.Cal.Persian.prototype.getNumMonths=function $ilib$Cal$Persian$$getNumMonths$(){return 12};
ilib.Cal.Persian.prototype.getMonLength=function $ilib$Cal$Persian$$getMonLength$($month$$,$year$$){return $month$$!==12||!this.isLeapYear($year$$)?ilib.Cal.Persian.monthLengths[$month$$-1]:30};
ilib.Cal.Persian.prototype.isLeapYear=function $ilib$Cal$Persian$$isLeapYear$($rdThisYear_year$$){var $rdNextYear$$=new ilib.Date.PersAstroRataDie({cal:this,year:$rdThisYear_year$$+1,month:1,day:1,hour:0,minute:0,second:0,millisecond:0}),$rdThisYear_year$$=new ilib.Date.PersAstroRataDie({cal:this,year:$rdThisYear_year$$,month:1,day:1,hour:0,minute:0,second:0,millisecond:0});return $rdNextYear$$.getRataDie()-$rdThisYear_year$$.getRataDie()>365};ilib.Cal.Persian.prototype.getType=function $ilib$Cal$Persian$$getType$(){return this.type};
ilib.Cal.Persian.prototype.newDateInstance=function $ilib$Cal$Persian$$newDateInstance$($options$$){return new ilib.Date.PersDate($options$$)};ilib.Cal._constructors.persian=ilib.Cal.Persian;
ilib.Date.PersDate=function $ilib$Date$PersDate$($params$$){this.cal=new ilib.Cal.Persian;this.timezone="local";if($params$$){if($params$$.locale){this.locale=typeof $params$$.locale==="string"?new ilib.Locale($params$$.locale):$params$$.locale;this.timezone=(new ilib.LocaleInfo(this.locale)).getTimeZone()}if($params$$.timezone)this.timezone=$params$$.timezone}ilib.Date.initAstro($params$$&&typeof $params$$.sync==="boolean"?$params$$.sync:true,$params$$&&$params$$.loadParams,ilib.bind(this,function(){if($params$$&&
($params$$.year||$params$$.month||$params$$.day||$params$$.hour||$params$$.minute||$params$$.second||$params$$.millisecond)){this.year=parseInt($params$$.year,10)||0;this.month=parseInt($params$$.month,10)||1;this.day=parseInt($params$$.day,10)||1;this.hour=parseInt($params$$.hour,10)||0;this.minute=parseInt($params$$.minute,10)||0;this.second=parseInt($params$$.second,10)||0;this.millisecond=parseInt($params$$.millisecond,10)||0;this.dayOfYear=parseInt($params$$.dayOfYear,10);if(typeof $params$$.dst===
"boolean")this.dst=$params$$.dst;this.rd=this.newRd(this);if(!this.tz)this.tz=new ilib.TimeZone({id:this.timezone});this.offset=this.tz._getOffsetMillisWallTime(this)/864E5;if(this.offset!==0)this.rd=this.newRd({rd:this.rd.getRataDie()-this.offset})}if(!this.rd){this.rd=this.newRd($params$$);this._calcDateComponents()}if($params$$&&typeof $params$$.onLoad==="function")$params$$.onLoad(this)}))};ilib.Date.PersDate.prototype=new ilib.Date({noinstance:!0});ilib.Date.PersDate.prototype.parent=ilib.Date;
ilib.Date.PersDate.prototype.constructor=ilib.Date.PersDate;ilib.Date.PersDate.cumMonthLengths=[0,31,62,93,124,155,186,216,246,276,306,336,366];ilib.Date.PersDate.prototype.newRd=function $ilib$Date$PersDate$$newRd$($params$$){return new ilib.Date.PersAstroRataDie($params$$)};ilib.Date.PersDate.prototype._calcYear=function $ilib$Date$PersDate$$_calcYear$($rd$$){return this.rd._getYear($rd$$+this.rd.epoch).year};
ilib.Date.PersDate.prototype._calcDateComponents=function $ilib$Date$PersDate$$_calcDateComponents$(){var $rd$$26_remainder$$;$rd$$26_remainder$$=this.rd.getRataDie();this.year=this._calcYear($rd$$26_remainder$$);if(typeof this.offset==="undefined"){if(!this.tz)this.tz=new ilib.TimeZone({id:this.timezone});this.offset=this.tz.getOffsetMillis(this)/864E5}if(this.offset!==0){$rd$$26_remainder$$=$rd$$26_remainder$$+this.offset;this.year=this._calcYear($rd$$26_remainder$$)}var $yearStart$$=this.newRd({year:this.year,
month:1,day:1,hour:0,minute:0,second:0,millisecond:0});this.dayOfYear=$rd$$26_remainder$$=$rd$$26_remainder$$-$yearStart$$.getRataDie()+1;this.month=ilib.bsearch(Math.floor($rd$$26_remainder$$),ilib.Date.PersDate.cumMonthLengths);$rd$$26_remainder$$=$rd$$26_remainder$$-ilib.Date.PersDate.cumMonthLengths[this.month-1];this.day=Math.floor($rd$$26_remainder$$);$rd$$26_remainder$$=$rd$$26_remainder$$-this.day;$rd$$26_remainder$$=Math.round($rd$$26_remainder$$*864E5);this.hour=Math.floor($rd$$26_remainder$$/
36E5);$rd$$26_remainder$$=$rd$$26_remainder$$-this.hour*36E5;this.minute=Math.floor($rd$$26_remainder$$/6E4);$rd$$26_remainder$$=$rd$$26_remainder$$-this.minute*6E4;this.second=Math.floor($rd$$26_remainder$$/1E3);this.millisecond=$rd$$26_remainder$$=$rd$$26_remainder$$-this.second*1E3};ilib.Date.PersDate.prototype.getDayOfWeek=function $ilib$Date$PersDate$$getDayOfWeek$(){var $rd$$=Math.floor(this.getRataDie());return ilib.mod($rd$$-3,7)};
ilib.Date.PersDate.prototype.getDayOfYear=function $ilib$Date$PersDate$$getDayOfYear$(){return ilib.Date.PersDate.cumMonthLengths[this.month-1]+this.day};ilib.Date.PersDate.prototype.getEra=function $ilib$Date$PersDate$$getEra$(){return this.year<1?-1:1};ilib.Date.PersDate.prototype.getCalendar=function $ilib$Date$PersDate$$getCalendar$(){return"persian"};ilib.Date._constructors.persian=ilib.Date.PersDate;
ilib.Cal.Han=function $ilib$Cal$Han$($params$$){this.type="han";ilib.Date.initAstro($params$$&&typeof $params$$.sync==="boolean"?$params$$.sync:true,$params$$&&$params$$.loadParams,ilib.bind(this,function(){$params$$&&typeof $params$$.callback==="function"&&$params$$.callback(this)}))};
ilib.Cal.Han._getElapsedYear=function $ilib$Cal$Han$_getElapsedYear$($year$$,$cycle$$){var $elapsedYear$$=$year$$||0;typeof $year$$!=="undefined"&&($year$$<61&&typeof $cycle$$!=="undefined")&&($elapsedYear$$=60*$cycle$$+$year$$);return $elapsedYear$$};
ilib.Cal.Han._hanNextSolarLongitude=function $ilib$Cal$Han$_hanNextSolarLongitude$($jd$$,$longitude$$){var $tz$$=ilib.Cal.Han._chineseTZ($jd$$),$sol_uni$$=ilib.Date._universalFromLocal($jd$$,$tz$$),$sol_uni$$=ilib.Date._nextSolarLongitude($sol_uni$$,$longitude$$);return ilib.Date._localFromUniversal($sol_uni$$,$tz$$)};
ilib.Cal.Han._majorSTOnOrAfter=function $ilib$Cal$Han$_majorSTOnOrAfter$($jd$$){var $next_tz$$4_uni$$=ilib.Cal.Han._chineseTZ($jd$$),$next_tz$$4_uni$$=ilib.Date._universalFromLocal($jd$$,$next_tz$$4_uni$$),$next_tz$$4_uni$$=ilib.Date._fixangle(30*Math.ceil(ilib.Date._solarLongitude($next_tz$$4_uni$$)/30));return ilib.Cal.Han._hanNextSolarLongitude($jd$$,$next_tz$$4_uni$$)};
ilib.Cal.Han._solsticeBefore=function $ilib$Cal$Han$_solsticeBefore$($year$$,$cycle$$){var $gregyear_rd$$=ilib.Cal.Han._getElapsedYear($year$$,$cycle$$)-2697,$gregyear_rd$$=new ilib.Date.GregRataDie({year:$gregyear_rd$$-1,month:12,day:15,hour:0,minute:0,second:0,millisecond:0});return ilib.Cal.Han._majorSTOnOrAfter($gregyear_rd$$.getRataDie()+ilib.Date.RataDie.gregorianEpoch)};
ilib.Cal.Han._chineseTZ=function $ilib$Cal$Han$_chineseTZ$($jd$$){return ilib.Date.GregDate._calcYear($jd$$-ilib.Date.RataDie.gregorianEpoch)<1929?465.6666666666667:480};
ilib.Cal.Han._newMoonOnOrAfter=function $ilib$Cal$Han$_newMoonOnOrAfter$($jd$$24_moon_uni$$){var $tz$$=ilib.Cal.Han._chineseTZ($jd$$24_moon_uni$$),$jd$$24_moon_uni$$=ilib.Date._universalFromLocal($jd$$24_moon_uni$$,$tz$$),$jd$$24_moon_uni$$=ilib.Date._newMoonAtOrAfter($jd$$24_moon_uni$$);return ilib.Date._floorToJD(ilib.Date._localFromUniversal($jd$$24_moon_uni$$,$tz$$))};
ilib.Cal.Han._newMoonBefore=function $ilib$Cal$Han$_newMoonBefore$($jd$$25_moon$$1_uni$$){var $tz$$=ilib.Cal.Han._chineseTZ($jd$$25_moon$$1_uni$$),$jd$$25_moon$$1_uni$$=ilib.Date._universalFromLocal($jd$$25_moon$$1_uni$$,$tz$$),$jd$$25_moon$$1_uni$$=ilib.Date._newMoonBefore($jd$$25_moon$$1_uni$$);return ilib.Date._floorToJD(ilib.Date._localFromUniversal($jd$$25_moon$$1_uni$$,$tz$$))};
ilib.Cal.Han._leapYearCalc=function $ilib$Cal$Han$_leapYearCalc$($year$$,$cycle$$){var $ret$$={elapsedYear:ilib.Cal.Han._getElapsedYear($year$$,$cycle$$)};$ret$$.solstice1=ilib.Cal.Han._solsticeBefore($ret$$.elapsedYear);$ret$$.solstice2=ilib.Cal.Han._solsticeBefore($ret$$.elapsedYear+1);$ret$$.m1=ilib.Cal.Han._newMoonOnOrAfter(ilib.Date._ceilToJD($ret$$.solstice1));$ret$$.m2=ilib.Cal.Han._newMoonBefore(ilib.Date._ceilToJD($ret$$.solstice2));return $ret$$};
ilib.Cal.Han._currentMajorST=function $ilib$Cal$Han$_currentMajorST$($jd$$26_s$$){$jd$$26_s$$=ilib.Date._solarLongitude(ilib.Date._universalFromLocal($jd$$26_s$$,ilib.Cal.Han._chineseTZ($jd$$26_s$$)));return ilib.amod(2+Math.floor($jd$$26_s$$/30),12)};ilib.Cal.Han._noMajorST=function $ilib$Cal$Han$_noMajorST$($jd$$){return ilib.Cal.Han._currentMajorST($jd$$)===ilib.Cal.Han._currentMajorST(ilib.Cal.Han._newMoonOnOrAfter($jd$$+1))};
ilib.Cal.Han.prototype.getNumMonths=function $ilib$Cal$Han$$getNumMonths$($year$$,$cycle$$){return this.isLeapYear($year$$,$cycle$$)?13:12};ilib.Cal.Han.prototype.getMonLength=function $ilib$Cal$Han$$getMonLength$($month$$,$year$$){var $calc_priorNewMoon$$=ilib.Cal.Han._leapYearCalc($year$$),$calc_priorNewMoon$$=ilib.Cal.Han._newMoonOnOrAfter($calc_priorNewMoon$$.m1+$month$$*29);return ilib.Cal.Han._newMoonOnOrAfter($calc_priorNewMoon$$+1)-$calc_priorNewMoon$$};
ilib.Cal.Han.prototype.equivalentCycleYear=function $ilib$Cal$Han$$equivalentCycleYear$($year$$){return ilib.mod($year$$-($year$$>=0?474:473),2820)+474};ilib.Cal.Han.prototype.isLeapYear=function $ilib$Cal$Han$$isLeapYear$($year$$,$cycle$$){var $calc$$=ilib.Cal.Han._leapYearCalc($year$$,$cycle$$);return Math.round(($calc$$.m2-$calc$$.m1)/29.530588853)===12};
ilib.Cal.Han.prototype.getLeapMonth=function $ilib$Cal$Han$$getLeapMonth$($year$$,$cycle$$){var $calc$$=ilib.Cal.Han._leapYearCalc($year$$,$cycle$$);if(Math.round(($calc$$.m2-$calc$$.m1)/29.530588853)!=12)return-1;for(var $month$$=0,$calc$$=ilib.Cal.Han._newMoonOnOrAfter($calc$$.m1+1);!ilib.Cal.Han._noMajorST($calc$$);){$month$$++;$calc$$=ilib.Cal.Han._newMoonOnOrAfter($calc$$+1)}return $month$$};
ilib.Cal.Han.prototype.newYears=function $ilib$Cal$Han$$newYears$($year$$,$cycle$$){var $calc$$=ilib.Cal.Han._leapYearCalc($year$$,$cycle$$),$m2$$=ilib.Cal.Han._newMoonOnOrAfter($calc$$.m1+1);return Math.round(($calc$$.m2-$calc$$.m1)/29.530588853)===12&&(ilib.Cal.Han._noMajorST($calc$$.m1)||ilib.Cal.Han._noMajorST($m2$$))?ilib.Cal.Han._newMoonOnOrAfter($m2$$+1):$m2$$};ilib.Cal.Han.prototype.getType=function $ilib$Cal$Han$$getType$(){return this.type};ilib.Cal.Han.prototype.newDateInstance=function $ilib$Cal$Han$$newDateInstance$($options$$){return new ilib.Date.HanDate($options$$)};
ilib.Cal._constructors.han=ilib.Cal.Han;
ilib.Date.HanRataDie=function $ilib$Date$HanRataDie$($params$$){this.rd=void 0;if($params$$&&$params$$.cal){this.cal=$params$$.cal;ilib.Date.RataDie.call(this,$params$$);$params$$&&typeof $params$$.callback==="function"&&$params$$.callback(this)}else new ilib.Cal.Han({sync:$params$$&&$params$$.sync,loadParams:$params$$&&$params$$.loadParams,callback:ilib.bind(this,function($c$$){this.cal=$c$$;ilib.Date.RataDie.call(this,$params$$);$params$$&&typeof $params$$.callback==="function"&&$params$$.callback(this)})})};
ilib.Date.HanRataDie.prototype=new ilib.Date.RataDie;ilib.Date.HanRataDie.prototype.parent=ilib.Date.RataDie;ilib.Date.HanRataDie.prototype.constructor=ilib.Date.HanRataDie;ilib.Date.HanRataDie.epoch=758325.5;
ilib.Date.HanRataDie.prototype._setDateComponents=function $ilib$Date$HanRataDie$$_setDateComponents$($date$$){var $calc$$4_priorNewMoon$$=ilib.Cal.Han._leapYearCalc($date$$.year,$date$$.cycle),$m2$$=ilib.Cal.Han._newMoonOnOrAfter($calc$$4_priorNewMoon$$.m1+1),$m2$$=(this.leapYear=Math.round(($calc$$4_priorNewMoon$$.m2-$calc$$4_priorNewMoon$$.m1)/29.530588853)===12)&&(ilib.Cal.Han._noMajorST($calc$$4_priorNewMoon$$.m1)||ilib.Cal.Han._noMajorST($m2$$))?ilib.Cal.Han._newMoonOnOrAfter($m2$$+1):$m2$$,
$calc$$4_priorNewMoon$$=ilib.Cal.Han._newMoonOnOrAfter($calc$$4_priorNewMoon$$.m1+$date$$.month*29);this.priorLeapMonth=ilib.Date.HanDate._priorLeapMonth($m2$$,ilib.Cal.Han._newMoonBefore($calc$$4_priorNewMoon$$));this.leapMonth=this.leapYear&&ilib.Cal.Han._noMajorST($calc$$4_priorNewMoon$$)&&!this.priorLeapMonth;this.rd=$calc$$4_priorNewMoon$$+$date$$.day-1+($date$$.hour*36E5+$date$$.minute*6E4+$date$$.second*1E3+$date$$.millisecond)/864E5-ilib.Date.RataDie.gregorianEpoch};
ilib.Date.HanRataDie.prototype._onOrBefore=function $ilib$Date$HanRataDie$$_onOrBefore$($rd$$,$dayOfWeek$$){return $rd$$-ilib.mod(Math.floor($rd$$)-$dayOfWeek$$,7)};
ilib.Date.HanDate=function $ilib$Date$HanDate$($params$$){this.timezone="local";if($params$$){if($params$$.locale){this.locale=typeof $params$$.locale==="string"?new ilib.Locale($params$$.locale):$params$$.locale;this.timezone=(new ilib.LocaleInfo(this.locale)).getTimeZone()}if($params$$.timezone)this.timezone=$params$$.timezone}new ilib.Cal.Han({sync:$params$$&&typeof $params$$==="boolean"?$params$$.sync:true,loadParams:$params$$&&$params$$.loadParams,callback:ilib.bind(this,function($cal$$1_year$$){this.cal=
$cal$$1_year$$;if($params$$&&($params$$.year||$params$$.month||$params$$.day||$params$$.hour||$params$$.minute||$params$$.second||$params$$.millisecond||$params$$.cycle||$params$$.cycleYear)){if(typeof $params$$.cycle!=="undefined"){this.cycle=parseInt($params$$.cycle,10)||0;$cal$$1_year$$=(typeof $params$$.year!=="undefined"?parseInt($params$$.year,10):parseInt($params$$.cycleYear,10))||0;this.year=ilib.Cal.Han._getElapsedYear($cal$$1_year$$,this.cycle)}else if(typeof $params$$.year!=="undefined"){this.year=
parseInt($params$$.year,10)||0;this.cycle=Math.floor((this.year-1)/60)}else this.year=this.cycle=0;this.month=parseInt($params$$.month,10)||1;this.day=parseInt($params$$.day,10)||1;this.hour=parseInt($params$$.hour,10)||0;this.minute=parseInt($params$$.minute,10)||0;this.second=parseInt($params$$.second,10)||0;this.millisecond=parseInt($params$$.millisecond,10)||0;this.cycleYear=ilib.amod(this.year,60);this.dayOfYear=parseInt($params$$.dayOfYear,10);if(typeof $params$$.dst==="boolean")this.dst=$params$$.dst;
this.newRd({cal:this.cal,cycle:this.cycle,year:this.year,month:this.month,day:this.day,hour:this.hour,minute:this.minute,second:this.second,millisecond:this.millisecond,sync:$params$$&&typeof $params$$.sync==="boolean"?$params$$.sync:true,loadParams:$params$$&&$params$$.loadParams,callback:ilib.bind(this,function($rd$$){if($rd$$){this.rd=$rd$$;if(!this.tz)this.tz=new ilib.TimeZone({id:this.timezone});this.offset=this.tz._getOffsetMillisWallTime(this)/864E5;if(this.offset!==0){this.rd=this.newRd({cal:this.cal,
rd:this.rd.getRataDie()-this.offset});this._calcLeap()}else{this.leapMonth=this.rd.leapMonth;this.priorLeapMonth=this.rd.priorLeapMonth;this.leapYear=this.rd.leapYear}}if(!this.rd){this.rd=this.newRd(ilib.merge($params$$||{},{cal:this.cal}));this._calcDateComponents()}if($params$$&&typeof $params$$.onLoad==="function")$params$$.onLoad(this)})})}else{if(!this.rd){this.rd=this.newRd(ilib.merge($params$$||{},{cal:this.cal}));this._calcDateComponents()}if($params$$&&typeof $params$$.onLoad==="function")$params$$.onLoad(this)}})})};
ilib.Date.HanDate.prototype=new ilib.Date({noinstance:!0});ilib.Date.HanDate.prototype.parent=ilib.Date;ilib.Date.HanDate.prototype.constructor=ilib.Date.HanDate;ilib.Date.HanDate.prototype.newRd=function $ilib$Date$HanDate$$newRd$($params$$){return new ilib.Date.HanRataDie($params$$)};ilib.Date.HanDate._priorLeapMonth=function $ilib$Date$HanDate$_priorLeapMonth$($jd1$$,$jd2$$){return $jd2$$>=$jd1$$&&(ilib.Date.HanDate._priorLeapMonth($jd1$$,ilib.Cal.Han._newMoonBefore($jd2$$))||ilib.Cal.Han._noMajorST($jd2$$))};
ilib.Date.HanDate.prototype._calcYear=function $ilib$Date$HanDate$$_calcYear$($rd$$){var $hanyear$$=(new ilib.Date.GregDate({rd:$rd$$,timezone:this.timezone})).year+2697,$newYears$$=this.cal.newYears($hanyear$$);return $hanyear$$-($rd$$+ilib.Date.RataDie.gregorianEpoch<$newYears$$?1:0)};
ilib.Date.HanDate.prototype._calcLeap=function $ilib$Date$HanDate$$_calcLeap$(){var $jd$$28_m$$=this.rd.getRataDie()+ilib.Date.RataDie.gregorianEpoch,$calc$$5_newYears$$=ilib.Cal.Han._leapYearCalc(this.year),$m2$$=ilib.Cal.Han._newMoonOnOrAfter($calc$$5_newYears$$.m1+1),$calc$$5_newYears$$=(this.leapYear=Math.round(($calc$$5_newYears$$.m2-$calc$$5_newYears$$.m1)/29.530588853)===12)&&(ilib.Cal.Han._noMajorST($calc$$5_newYears$$.m1)||ilib.Cal.Han._noMajorST($m2$$))?ilib.Cal.Han._newMoonOnOrAfter($m2$$+
1):$m2$$,$jd$$28_m$$=ilib.Cal.Han._newMoonBefore($jd$$28_m$$+1);this.priorLeapMonth=ilib.Date.HanDate._priorLeapMonth($calc$$5_newYears$$,ilib.Cal.Han._newMoonBefore($jd$$28_m$$));this.leapMonth=this.leapYear&&ilib.Cal.Han._noMajorST($jd$$28_m$$)&&!this.priorLeapMonth};
ilib.Date.HanDate.prototype._calcDateComponents=function $ilib$Date$HanDate$$_calcDateComponents$(){var $jd$$29_remainder$$;$jd$$29_remainder$$=this.rd.getRataDie()+ilib.Date.RataDie.gregorianEpoch;if(typeof this.offset==="undefined"){if(!this.tz)this.tz=new ilib.TimeZone({id:this.timezone});this.offset=this.tz.getOffsetMillis(this)/864E5}this.offset!==0&&($jd$$29_remainder$$=$jd$$29_remainder$$+this.offset);this.year=ilib.Date.GregDate._calcYear(this.rd.getRataDie())+2697;var $calc$$=ilib.Cal.Han._leapYearCalc(this.year),
$m2$$3_newYears$$=ilib.Cal.Han._newMoonOnOrAfter($calc$$.m1+1),$m2$$3_newYears$$=(this.leapYear=Math.round(($calc$$.m2-$calc$$.m1)/29.530588853)===12)&&(ilib.Cal.Han._noMajorST($calc$$.m1)||ilib.Cal.Han._noMajorST($m2$$3_newYears$$))?ilib.Cal.Han._newMoonOnOrAfter($m2$$3_newYears$$+1):$m2$$3_newYears$$;if($jd$$29_remainder$$<$m2$$3_newYears$$){this.year--;$calc$$=ilib.Cal.Han._leapYearCalc(this.year);$m2$$3_newYears$$=ilib.Cal.Han._newMoonOnOrAfter($calc$$.m1+1);$m2$$3_newYears$$=(this.leapYear=Math.round(($calc$$.m2-
$calc$$.m1)/29.530588853)===12)&&(ilib.Cal.Han._noMajorST($calc$$.m1)||ilib.Cal.Han._noMajorST($m2$$3_newYears$$))?ilib.Cal.Han._newMoonOnOrAfter($m2$$3_newYears$$+1):$m2$$3_newYears$$}var $m$$=ilib.Cal.Han._newMoonBefore($jd$$29_remainder$$+1);this.month=Math.round(($m$$-$calc$$.m1)/29.530588853);this.priorLeapMonth=ilib.Date.HanDate._priorLeapMonth($m2$$3_newYears$$,ilib.Cal.Han._newMoonBefore($m$$));this.leapMonth=this.leapYear&&ilib.Cal.Han._noMajorST($m$$)&&!this.priorLeapMonth;this.cycle=Math.floor((this.year-
1)/60);this.cycleYear=ilib.amod(this.year,60);this.day=ilib.Date._floorToJD($jd$$29_remainder$$)-$m$$+1;$jd$$29_remainder$$=$jd$$29_remainder$$-ilib.Date._floorToJD($jd$$29_remainder$$);$jd$$29_remainder$$=Math.round($jd$$29_remainder$$*864E5);this.hour=Math.floor($jd$$29_remainder$$/36E5);$jd$$29_remainder$$=$jd$$29_remainder$$-this.hour*36E5;this.minute=Math.floor($jd$$29_remainder$$/6E4);$jd$$29_remainder$$=$jd$$29_remainder$$-this.minute*6E4;this.second=Math.floor($jd$$29_remainder$$/1E3);this.millisecond=
$jd$$29_remainder$$=$jd$$29_remainder$$-this.second*1E3};ilib.Date.HanDate.prototype.getCycleYears=function $ilib$Date$HanDate$$getCycleYears$(){return this.cycleYear};ilib.Date.HanDate.prototype.getCycles=function $ilib$Date$HanDate$$getCycles$(){return this.cycle};ilib.Date.HanDate.prototype.isLeapYear=function $ilib$Date$HanDate$$isLeapYear$(){return this.leapYear};ilib.Date.HanDate.prototype.isLeapMonth=function $ilib$Date$HanDate$$isLeapMonth$(){return this.leapMonth};
ilib.Date.HanDate.prototype.getDayOfWeek=function $ilib$Date$HanDate$$getDayOfWeek$(){var $rd$$=Math.floor(this.rd.getRataDie()+(this.offset||0));return ilib.mod($rd$$,7)};ilib.Date.HanDate.prototype.getDayOfYear=function $ilib$Date$HanDate$$getDayOfYear$(){var $newYears$$=this.cal.newYears(this.year);return ilib.Cal.Han._newMoonOnOrAfter($newYears$$+(this.month-1)*29)-$newYears$$+this.day};ilib.Date.HanDate.prototype.getEra=function $ilib$Date$HanDate$$getEra$(){return this.year<1?-1:1};
ilib.Date.HanDate.prototype.getCalendar=function $ilib$Date$HanDate$$getCalendar$(){return"han"};ilib.Date._constructors.han=ilib.Date.HanDate;ilib.Cal.Ethiopic=function $ilib$Cal$Ethiopic$(){this.type="ethiopic"};ilib.Cal.Ethiopic.prototype.getNumMonths=function $ilib$Cal$Ethiopic$$getNumMonths$(){return 13};
ilib.Cal.Ethiopic.prototype.getMonLength=function $ilib$Cal$Ethiopic$$getMonLength$($month$$,$year$$){var $m$$=$month$$;switch(typeof $m$$){case "string":$m$$=parseInt($m$$,10);break;case "function":case "object":case "undefined":return 30}return $m$$<13?30:this.isLeapYear($year$$)?6:5};
ilib.Cal.Ethiopic.prototype.isLeapYear=function $ilib$Cal$Ethiopic$$isLeapYear$($y$$42_year$$){switch(typeof $y$$42_year$$){case "string":$y$$42_year$$=parseInt($y$$42_year$$,10);break;case "object":if(typeof $y$$42_year$$.year!=="number")return false;$y$$42_year$$=$y$$42_year$$.year;break;case "function":case "undefined":return false}return ilib.mod($y$$42_year$$,4)===3};ilib.Cal.Ethiopic.prototype.getType=function $ilib$Cal$Ethiopic$$getType$(){return this.type};
ilib.Cal.Ethiopic.prototype.newDateInstance=function $ilib$Cal$Ethiopic$$newDateInstance$($options$$){return new ilib.Date.EthiopicDate($options$$)};ilib.Cal._constructors.ethiopic=ilib.Cal.Ethiopic;ilib.Date.EthiopicRataDie=function $ilib$Date$EthiopicRataDie$($params$$){this.cal=$params$$&&$params$$.cal||new ilib.Cal.Ethiopic;this.rd=void 0;ilib.Date.RataDie.call(this,$params$$)};ilib.Date.EthiopicRataDie.prototype=new ilib.Date.RataDie;ilib.Date.EthiopicRataDie.prototype.parent=ilib.Date.RataDie;
ilib.Date.EthiopicRataDie.prototype.constructor=ilib.Date.EthiopicRataDie;ilib.Date.EthiopicRataDie.prototype.epoch=1724219.75;ilib.Date.EthiopicRataDie.prototype._setDateComponents=function $ilib$Date$EthiopicRataDie$$_setDateComponents$($date$$){var $year$$=$date$$.year;this.rd=365*($year$$-1)+Math.floor($year$$/4)+(($date$$.month-1)*30+$date$$.day)+($date$$.hour*36E5+$date$$.minute*6E4+$date$$.second*1E3+$date$$.millisecond)/864E5};
ilib.Date.EthiopicDate=function $ilib$Date$EthiopicDate$($params$$){this.cal=new ilib.Cal.Ethiopic;if($params$$){if(typeof $params$$.noinstance==="boolean"&&$params$$.noinstance)return;if($params$$.locale){this.locale=typeof $params$$.locale==="string"?new ilib.Locale($params$$.locale):$params$$.locale;this.timezone=(new ilib.LocaleInfo(this.locale)).getTimeZone()}if($params$$.timezone)this.timezone=$params$$.timezone;if($params$$.year||$params$$.month||$params$$.day||$params$$.hour||$params$$.minute||
$params$$.second||$params$$.millisecond){this.year=parseInt($params$$.year,10)||0;this.month=parseInt($params$$.month,10)||1;this.day=parseInt($params$$.day,10)||1;this.hour=parseInt($params$$.hour,10)||0;this.minute=parseInt($params$$.minute,10)||0;this.second=parseInt($params$$.second,10)||0;this.millisecond=parseInt($params$$.millisecond,10)||0;this.dayOfYear=parseInt($params$$.dayOfYear,10);if(typeof $params$$.dst==="boolean")this.dst=$params$$.dst;this.rd=this.newRd(this);if(!this.tz)this.tz=
new ilib.TimeZone({id:this.timezone});this.offset=this.tz._getOffsetMillisWallTime(this)/864E5;if(this.offset!==0)this.rd=this.newRd({rd:this.rd.getRataDie()-this.offset})}}if(!this.rd){this.rd=this.newRd($params$$);this._calcDateComponents()}};ilib.Date.EthiopicDate.prototype=new ilib.Date({noinstance:!0});ilib.Date.EthiopicDate.prototype.parent=ilib.Date;ilib.Date.EthiopicDate.prototype.constructor=ilib.Date.EthiopicDate;ilib.Date.EthiopicDate.prototype.newRd=function $ilib$Date$EthiopicDate$$newRd$($params$$){return new ilib.Date.EthiopicRataDie($params$$)};
ilib.Date.EthiopicDate.prototype._calcYear=function $ilib$Date$EthiopicDate$$_calcYear$($rd$$){return Math.floor((4*(Math.floor($rd$$)-1)+1463)/1461)};
ilib.Date.EthiopicDate.prototype._calcDateComponents=function $ilib$Date$EthiopicDate$$_calcDateComponents$(){var $rd$$34_remainder$$;$rd$$34_remainder$$=this.rd.getRataDie();this.year=this._calcYear($rd$$34_remainder$$);if(typeof this.offset==="undefined"){this.year=this._calcYear($rd$$34_remainder$$);if(!this.tz)this.tz=new ilib.TimeZone({id:this.timezone});this.offset=this.tz.getOffsetMillis(this)/864E5}if(this.offset!==0){$rd$$34_remainder$$=$rd$$34_remainder$$+this.offset;this.year=this._calcYear($rd$$34_remainder$$)}var $jan1$$=
this.newRd({year:this.year,month:1,day:1,hour:0,minute:0,second:0,millisecond:0});$rd$$34_remainder$$=$rd$$34_remainder$$+1-$jan1$$.getRataDie();this.month=Math.floor(($rd$$34_remainder$$-1)/30)+1;$rd$$34_remainder$$=$rd$$34_remainder$$-(this.month-1)*30;this.day=Math.floor($rd$$34_remainder$$);$rd$$34_remainder$$=$rd$$34_remainder$$-this.day;$rd$$34_remainder$$=Math.round($rd$$34_remainder$$*864E5);this.hour=Math.floor($rd$$34_remainder$$/36E5);$rd$$34_remainder$$=$rd$$34_remainder$$-this.hour*36E5;
this.minute=Math.floor($rd$$34_remainder$$/6E4);$rd$$34_remainder$$=$rd$$34_remainder$$-this.minute*6E4;this.second=Math.floor($rd$$34_remainder$$/1E3);this.millisecond=$rd$$34_remainder$$=$rd$$34_remainder$$-this.second*1E3};ilib.Date.EthiopicDate.prototype.getDayOfWeek=function $ilib$Date$EthiopicDate$$getDayOfWeek$(){var $rd$$=Math.floor(this.rd.getRataDie()+(this.offset||0));return ilib.mod($rd$$-4,7)};ilib.Date.EthiopicDate.prototype.getCalendar=function $ilib$Date$EthiopicDate$$getCalendar$(){return"ethiopic"};
ilib.Date._constructors.ethiopic=ilib.Date.EthiopicDate;ilib.Cal.Coptic=function $ilib$Cal$Coptic$(){this.type="coptic"};ilib.Cal.Coptic.prototype=new ilib.Cal.Ethiopic;ilib.Cal.Coptic.prototype.parent=ilib.Cal.Coptic.prototype;ilib.Cal.Coptic.prototype.constructor=ilib.Cal.Coptic;ilib.Cal.Coptic.prototype.newDateInstance=function $ilib$Cal$Coptic$$newDateInstance$($options$$){return new ilib.Date.CopticDate($options$$)};ilib.Cal._constructors.coptic=ilib.Cal.Coptic;
ilib.Date.CopticRataDie=function $ilib$Date$CopticRataDie$($params$$){this.cal=$params$$&&$params$$.cal||new ilib.Cal.Coptic;this.rd=void 0;this.epoch=1825028.5;var $tmp$$={};$params$$&&ilib.shallowCopy($params$$,$tmp$$);$tmp$$.cal=this.cal;ilib.Date.EthiopicRataDie.call(this,$tmp$$)};ilib.Date.CopticRataDie.prototype=new ilib.Date.EthiopicRataDie;ilib.Date.CopticRataDie.prototype.parent=ilib.Date.EthiopicRataDie;ilib.Date.CopticRataDie.prototype.constructor=ilib.Date.CopticRataDie;
ilib.Date.CopticDate=function $ilib$Date$CopticDate$($params$$){this.rd=void 0;ilib.Date.EthiopicDate.call(this,$params$$);this.cal=new ilib.Cal.Coptic};ilib.Date.CopticDate.prototype=new ilib.Date.EthiopicDate({noinstance:!0});ilib.Date.CopticDate.prototype.parent=ilib.Date.EthiopicDate.prototype;ilib.Date.CopticDate.prototype.constructor=ilib.Date.CopticDate;ilib.Date.CopticDate.prototype.newRd=function $ilib$Date$CopticDate$$newRd$($params$$){return new ilib.Date.CopticRataDie($params$$)};
ilib.Date.CopticDate.prototype.getDayOfWeek=function $ilib$Date$CopticDate$$getDayOfWeek$(){var $rd$$=Math.floor(this.rd.getRataDie()+(this.offset||0));return ilib.mod($rd$$-3,7)};ilib.Date.CopticDate.prototype.getCalendar=function $ilib$Date$CopticDate$$getCalendar$(){return"coptic"};ilib.Date._constructors.coptic=ilib.Date.CopticDate;
ilib.data.ctype={ideograph:[[4352,4607],[12353,12447],[12449,12543],[12549,12589],[12593,12686],[12704,12727],[12784,12799],[13312,19893],[19968,40907],[40960,42124],[43360,43388],[44032,55203],[55216,55291],[63744,64217],[65382,65437],[65440,65500]],ideoother:[[12294,12294],[12348,12348],[12352,12352],[12448,12448],[12544,12548],[12590,12591],[12592,12592],[12687,12687],[12800,13055],[13056,13183],[13184,13311],[40908,40959],[42125,42191],[43389,43391],[55292,55295],[64218,64255]],ascii:[[32,127]],
digit:[[48,57]],xdigit:[[48,57],[65,70],[97,102]],blank:[[9,9],[32,32]],space:[[9,13],[133],[8232,8233]],latin:[[0,591],[7680,7935],[11360,11391],[42784,43007]],ipa:[[592,687],[7424,7551],[7552,7615]],operators:[[8704,8959],[10752,11007]],greek:[[880,1023],[7936,8191]],cyrillic:[[1024,1327],[11744,11775],[42560,42655]],arabic:[[1536,1791],[1872,1919],[64336,65023],[65136,65279]],devanagari:[[2304,2431],[43232,43263]],myanmar:[[4096,4255],[43616,43647]],hangul:[[4352,4607],[12592,12687],[43360,43391],
[44032,55215],[55216,55295]],ethiopic:[[4608,5023],[11648,11743],[43776,43823]],canadian:[[5120,5759],[6320,6399]],combining:[[768,879],[7616,7679],[8400,8447]],arrows:[[8592,8703],[10224,10239],[10496,10623],[11008,11263]],cjk:[[12272,12287],[13312,19903],[19968,40959],[131072,173791],[173824,177983],[177984,178207]],cjkcompatibility:[[13056,13311],[63744,64255],[65072,65103],[194560,195103]],mathematical:[[10176,10223],[10624,10751],[119808,120831]],privateuse:[[57344,63743],[983040,1048575],[1048576,
1114111]],variations:[[65024,65039],[917760,917999]],bamum:[[42656,42751],[92160,92735]],georgian:[[4256,4351],[11520,11567]],punctuation:[[8192,8303],[11776,11903]],katakana:[[12448,12543],[12784,12799],[110592,110847]],bopomofo:[[12544,12591],[12704,12735]],enclosedalpha:[[9312,9471],[127232,127487]],cjkradicals:[[11904,12031],[12032,12255]],yi:[[40960,42127],[42128,42191]],linearb:[[65536,65663],[65664,65791]],enclosedcjk:[[12800,13055],[127488,127743]],spacing:[[688,767]],armenian:[[1328,1423]],
hebrew:[[1424,1535]],syriac:[[1792,1871]],thaana:[[1920,1983]],nko:[[1984,2047]],samaritan:[[2048,2111]],mandaic:[[2112,2143]],bengali:[[2432,2559]],gurmukhi:[[2560,2687]],gujarati:[[2688,2815]],oriya:[[2816,2943]],tamil:[[2944,3071]],telugu:[[3072,3199]],kannada:[[3200,3327]],malayalam:[[3328,3455]],sinhala:[[3456,3583]],thai:[[3584,3711]],lao:[[3712,3839]],tibetan:[[3840,4095]],cherokee:[[5024,5119]],ogham:[[5760,5791]],runic:[[5792,5887]],tagalog:[[5888,5919]],hanunoo:[[5920,5951]],buhid:[[5952,
5983]],tagbanwa:[[5984,6015]],khmer:[[6016,6143]],mongolian:[[6144,6319]],limbu:[[6400,6479]],taile:[[6480,6527]],newtailue:[[6528,6623]],khmersymbols:[[6624,6655]],buginese:[[6656,6687]],taitham:[[6688,6831]],balinese:[[6912,7039]],sundanese:[[7040,7103]],batak:[[7104,7167]],lepcha:[[7168,7247]],olchiki:[[7248,7295]],vedic:[[7376,7423]],supersub:[[8304,8351]],currency:[[8352,8399]],letterlike:[[8448,8527]],numbers:[[8528,8591]],misc:[[8960,9215]],controlpictures:[[9216,9279]],ocr:[[9280,9311]],box:[[9472,
9599]],block:[[9600,9631]],geometric:[[9632,9727]],miscsymbols:[[9728,9983],[127744,128511]],dingbats:[[9984,10175]],braille:[[10240,10495]],glagolitic:[[11264,11359]],coptic:[[11392,11519]],tifinagh:[[11568,11647]],cjkpunct:[[12288,12351]],hiragana:[[12352,12447]],kanbun:[[12688,12703]],yijing:[[19904,19967]],cjkstrokes:[[12736,12783]],lisu:[[42192,42239]],vai:[[42240,42559]],modifiertone:[[42752,42783]],sylotinagri:[[43008,43055]],indicnumber:[[43056,43071]],phagspa:[[43072,43135]],saurashtra:[[43136,
43231]],kayahli:[[43264,43311]],rejang:[[43312,43359]],javanese:[[43392,43487]],cham:[[43520,43615]],taiviet:[[43648,43743]],meeteimayek:[[43968,44031]],presentation:[[64256,64335]],vertical:[[65040,65055]],halfmarks:[[65056,65071]],small:[[65104,65135]],width:[[65280,65519]],specials:[[65520,65535]],aegean:[[65792,65855]],ancient:[[65936,65999]],phaistosdisc:[[66E3,66047]],lycian:[[66176,66207]],carian:[[66208,66271]],olditalic:[[66304,66351]],gothic:[[66352,66383]],ugaritic:[[66432,66463]],oldpersian:[[66464,
66527]],deseret:[[66560,66639]],shavian:[[66640,66687]],osmanya:[[66688,66735]],cypriot:[[67584,67647]],aramaic:[[67648,67679]],phoenician:[[67840,67871]],lydian:[[67872,67903]],kharoshthi:[[68096,68191]],oldsoutharabian:[[68192,68223]],avestan:[[68352,68415]],parthian:[[68416,68447]],pahlavi:[[68448,68479]],oldturkic:[[68608,68687]],ruminumerals:[[69216,69247]],brahmi:[[69632,69759]],kaithi:[[69760,69839]],cuneiform:[[73728,74751]],cuneiformnumbers:[[74752,74879]],hieroglyphs:[[77824,78895]],"byzantine musical":[[118784,
119039]],musicalsymbols:[[119040,119295]],taixuanjing:[[119552,119647]],rodnumerals:[[119648,119679]],mahjong:[[126976,127023]],domino:[[127024,127135]],playingcards:[[127136,127231]],emoticons:[[128512,128591]],mapsymbols:[[128640,128767]],alchemic:[[128768,128895]],tags:[[917504,917631]],greeknumbers:[[65856,65935]],greekmusic:[[119296,119375]]};
ilib.CType={_inRange:function $ilib$CType$_inRange$($num$$,$range$$,$compare_obj$$){if($num$$<0||!$range$$||!$compare_obj$$)return false;$range$$=$compare_obj$$[$range$$];if(!$range$$)return false;var $compare_obj$$=function $$compare_obj$$$($singlerange$$,$target$$){return $singlerange$$.length===1?$singlerange$$[0]-$target$$:$target$$<$singlerange$$[0]?$singlerange$$[0]-$target$$:$target$$>$singlerange$$[1]?$singlerange$$[1]-$target$$:0},$result$$=ilib.bsearch($num$$,$range$$,$compare_obj$$);return $result$$<
$range$$.length&&$compare_obj$$($range$$[$result$$],$num$$)===0},withinRange:function $ilib$CType$withinRange$($ch$$,$rangeName$$){if(!$rangeName$$)return false;var $num$$;switch(typeof $ch$$){case "number":$num$$=$ch$$;break;case "string":$num$$=ilib.String.toCodePoint($ch$$,0);break;case "undefined":return false;default:$num$$=$ch$$._toCodePoint(0)}return ilib.CType._inRange($num$$,$rangeName$$.toLowerCase(),ilib.data.ctype)},_init:function $ilib$CType$_init$($sync$$,$loadParams$$,$onLoad$$){ilib.CType._load("ctype",
$sync$$,$loadParams$$,$onLoad$$)},_load:function $ilib$CType$_load$($name$$,$sync$$,$loadParams$$,$onLoad$$){ilib.data[$name$$]?$onLoad$$&&typeof $onLoad$$==="function"&&$onLoad$$(ilib.data[$name$$]):ilib.loadData({name:$name$$?$name$$+".json":"ctype.json",locale:"-",nonlocale:true,sync:$sync$$,loadParams:$loadParams$$,callback:ilib.bind(this,function($ct$$){ilib.data[$name$$]=$ct$$;$onLoad$$&&typeof $onLoad$$==="function"&&$onLoad$$(ilib.data[$name$$])})})}};
ilib.CType.isDigit=function $ilib$CType$isDigit$($ch$$9_num$$){switch(typeof $ch$$9_num$$){case "number":break;case "string":$ch$$9_num$$=ilib.String.toCodePoint($ch$$9_num$$,0);break;case "undefined":return false;default:$ch$$9_num$$=$ch$$9_num$$._toCodePoint(0)}return ilib.CType._inRange($ch$$9_num$$,"digit",ilib.data.ctype)};ilib.CType.isDigit._init=function $ilib$CType$isDigit$_init$($sync$$,$loadParams$$,$onLoad$$){ilib.CType._init($sync$$,$loadParams$$,$onLoad$$)};
ilib.data.ctype_z={Zs:[[32],[160],[5760],[6158],[8192,8202],[8239],[8287],[12288]],Zl:[[8232]],Zp:[[8233]]};
ilib.CType.isSpace=function $ilib$CType$isSpace$($ch$$10_num$$){switch(typeof $ch$$10_num$$){case "number":break;case "string":$ch$$10_num$$=ilib.String.toCodePoint($ch$$10_num$$,0);break;case "undefined":return false;default:$ch$$10_num$$=$ch$$10_num$$._toCodePoint(0)}return ilib.CType._inRange($ch$$10_num$$,"space",ilib.data.ctype)||ilib.CType._inRange($ch$$10_num$$,"Zs",ilib.data.ctype_z)||ilib.CType._inRange($ch$$10_num$$,"Zl",ilib.data.ctype_z)||ilib.CType._inRange($ch$$10_num$$,"Zp",ilib.data.ctype_z)};
ilib.CType.isSpace._init=function $ilib$CType$isSpace$_init$($sync$$,$loadParams$$,$onLoad$$){ilib.CType._load("ctype_z",$sync$$,$loadParams$$,function(){ilib.CType._init($sync$$,$loadParams$$,$onLoad$$)})};
ilib.Number=function $ilib$Number$($str$$,$options$$){var $i$$,$stripped$$="",$sync$$=true,$loadParams$$;this.locale=new ilib.Locale;this.type="number";if($options$$){if($options$$.locale)this.locale=typeof $options$$.locale==="string"?new ilib.Locale($options$$.locale):$options$$.locale;if($options$$.type)switch($options$$.type){case "number":case "currency":case "percentage":this.type=$options$$.type}typeof $options$$.sync!=="undefined"&&($sync$$=$options$$.sync==true);$loadParams$$=$options$$.loadParams}ilib.CType.isDigit._init($sync$$,
$loadParams$$,ilib.bind(this,function(){ilib.CType.isSpace._init($sync$$,$loadParams$$,ilib.bind(this,function(){new ilib.LocaleInfo(this.locale,{sync:$sync$$,onLoad:ilib.bind(this,function($li$$){this.decimal=$li$$.getDecimalSeparator();switch(typeof $str$$){case "string":var $unary$$=true;this.str=$str$$||"0";for($i$$=$i$$=0;$i$$<this.str.length;$i$$++)if($unary$$&&this.str.charAt($i$$)==="-"){$unary$$=false;$stripped$$=$stripped$$+this.str.charAt($i$$)}else if(ilib.CType.isDigit(this.str.charAt($i$$))){$stripped$$=
$stripped$$+this.str.charAt($i$$);$unary$$=false}else if(this.str.charAt($i$$)===this.decimal){$stripped$$=$stripped$$+".";$unary$$=false}this.value=parseFloat($stripped$$);break;case "number":this.str=""+$str$$;this.value=$str$$;break;case "object":this.value=$str$$.valueOf();this.str=""+this.value;break;case "undefined":this.value=0;this.str="0"}switch(this.type){case "percentage":if(this.str.indexOf($li$$.getPercentageSymbol())!==-1)this.value=this.value/100;break;case "currency":$stripped$$="";
for($i$$=0;$i$$<this.str.length&&!ilib.CType.isDigit(this.str.charAt($i$$))&&!ilib.CType.isSpace(this.str.charAt($i$$));)$stripped$$=$stripped$$+this.str.charAt($i$$++);if($stripped$$.length===0){for(;$i$$<this.str.length&&ilib.CType.isDigit(this.str.charAt($i$$))||ilib.CType.isSpace(this.str.charAt($i$$))||this.str.charAt($i$$)==="."||this.str.charAt($i$$)===",";)$i$$++;for(;$i$$<this.str.length&&!ilib.CType.isDigit(this.str.charAt($i$$))&&!ilib.CType.isSpace(this.str.charAt($i$$));)$stripped$$=
$stripped$$+this.str.charAt($i$$++)}new ilib.Currency({locale:this.locale,sign:$stripped$$,sync:$sync$$,onLoad:ilib.bind(this,function($cur$$){this.currency=$cur$$;if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad(this)})});return}if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad(this)})})}))}))};
ilib.Number.prototype={getLocale:function $ilib$Number$$getLocale$(){return this.locale},toString:function $ilib$Number$$toString$(){return this.str},getCurrency:function $ilib$Number$$getCurrency$(){return this.currency},valueOf:function $ilib$Number$$valueOf$(){return this.value}};
ilib.data.currency={USD:{name:"US Dollar",decimals:2,sign:"$"},CHF:{name:"Swiss Franc",decimals:2,sign:"Fr"},RON:{name:"Leu",decimals:2,sign:"L"},RUB:{name:"Russian Ruble",decimals:2,sign:"\u0440\u0443\u0431."},SEK:{name:"Swedish Krona",decimals:2,sign:"kr"},GBP:{name:"Pound Sterling",decimals:2,sign:"\u00a3"},PKR:{name:"Pakistan Rupee",decimals:2,sign:"\u20a8"},KES:{name:"Kenyan Shilling",decimals:2,sign:"Sh"},AED:{name:"UAE Dirham",decimals:2,sign:"\u062f.\u0625"},KRW:{name:"Won",decimals:0,sign:"\u20a9"},
AFN:{name:"Afghani",decimals:2,sign:"\u060b"},ALL:{name:"Lek",decimals:2,sign:"L"},AMD:{name:"Armenian Dram",decimals:2,sign:"\u0564\u0580."},ANG:{name:"Netherlands Antillean Guilder",decimals:2,sign:"\u0192"},AOA:{name:"Kwanza",decimals:2,sign:"Kz"},ARS:{name:"Argentine Peso",decimals:2,sign:"$"},AUD:{name:"Australian Dollar",decimals:2,sign:"$"},AWG:{name:"Aruban Florin",decimals:2,sign:"\u0192"},AZN:{name:"Azerbaijanian Manat",decimals:2,sign:"AZN"},BAM:{name:"Convertible Mark",decimals:2,sign:"\u041a\u041c"},
BBD:{name:"Barbados Dollar",decimals:2,sign:"$"},BDT:{name:"Taka",decimals:2,sign:"\u09f3"},BGN:{name:"Bulgarian Lev",decimals:2,sign:"\u043b\u0432"},BHD:{name:"Bahraini Dinar",decimals:3,sign:".\u062f.\u0628"},BIF:{name:"Burundi Franc",decimals:0,sign:"Fr"},BMD:{name:"Bermudian Dollar",decimals:2,sign:"$"},BND:{name:"Brunei Dollar",decimals:2,sign:"$"},BOB:{name:"Boliviano",decimals:2,sign:"Bs."},BRL:{name:"Brazilian Real",decimals:2,sign:"R$"},BSD:{name:"Bahamian Dollar",decimals:2,sign:"$"},BTN:{name:"Ngultrum",
decimals:2,sign:"Nu."},BWP:{name:"Pula",decimals:2,sign:"P"},BYR:{name:"Belarussian Ruble",decimals:0,sign:"Br"},BZD:{name:"Belize Dollar",decimals:2,sign:"$"},CAD:{name:"Canadian Dollar",decimals:2,sign:"$"},CDF:{name:"Congolese Franc",decimals:2,sign:"Fr"},CLP:{name:"Chilean Peso",decimals:0,sign:"$"},CNY:{name:"Yuan Renminbi",decimals:2,sign:"\u5143"},COP:{name:"Colombian Peso",decimals:2,sign:"$"},CRC:{name:"Costa Rican Colon",decimals:2,sign:"\u20a1"},CUP:{name:"Cuban Peso",decimals:2,sign:"$"},
CVE:{name:"Cape Verde Escudo",decimals:2,sign:"$"},CZK:{name:"Czech Koruna",decimals:2,sign:"K\u010d"},DJF:{name:"Djibouti Franc",decimals:0,sign:"Fr"},DKK:{name:"Danish Krone",decimals:2,sign:"kr"},DOP:{name:"Dominican Peso",decimals:2,sign:"$"},DZD:{name:"Algerian Dinar",decimals:2,sign:"\u062f.\u062c"},EGP:{name:"Egyptian Pound",decimals:2,sign:"\u00a3"},ERN:{name:"Nakfa",decimals:2,sign:"Nfk"},ETB:{name:"Ethiopian Birr",decimals:2,sign:"Br"},EUR:{name:"Euro",decimals:2,sign:"\u20ac"},FJD:{name:"Fiji Dollar",
decimals:2,sign:"$"},FKP:{name:"Falkland Islands Pound",decimals:2,sign:"\u00a3"},GEL:{name:"Lari",decimals:2,sign:"\u10da"},GHS:{name:"Cedi",decimals:2,sign:"\u20b5"},GIP:{name:"Gibraltar Pound",decimals:2,sign:"\u00a3"},GMD:{name:"Dalasi",decimals:2,sign:"D"},GNF:{name:"Guinea Franc",decimals:0,sign:"Fr"},GTQ:{name:"Quetzal",decimals:2,sign:"Q"},GYD:{name:"Guyana Dollar",decimals:2,sign:"$"},HKD:{name:"Hong Kong Dollar",decimals:2,sign:"$"},HNL:{name:"Lempira",decimals:2,sign:"L"},HRK:{name:"Croatian Kuna",
decimals:2,sign:"kn"},HTG:{name:"Gourde",decimals:2,sign:"G"},HUF:{name:"Forint",decimals:2,sign:"Ft"},IDR:{name:"Rupiah",decimals:2,sign:"Rp"},ILS:{name:"New Israeli Sheqel",decimals:2,sign:"\u20aa"},INR:{name:"Indian Rupee",decimals:2,sign:"\u20b9"},IQD:{name:"Iraqi Dinar",decimals:3,sign:"\u0639.\u062f"},IRR:{name:"Iranian Rial",decimals:2,sign:"\ufdfc"},ISK:{name:"Iceland Krona",decimals:0,sign:"kr"},JMD:{name:"Jamaican Dollar",decimals:2,sign:"$"},JOD:{name:"Jordanian Dinar",decimals:3,sign:"\u062f.\u0627"},
JPY:{name:"Yen",decimals:0,sign:"\u00a5"},KGS:{name:"Som",decimals:2,sign:"\u043b\u0432"},KHR:{name:"Riel",decimals:2,sign:"\u17db"},KMF:{name:"Comoro Franc",decimals:0,sign:"Fr"},KPW:{name:"North Korean Won",decimals:2,sign:"\u20a9"},KWD:{name:"Kuwaiti Dinar",decimals:3,sign:"\u062f.\u0643"},KYD:{name:"Cayman Islands Dollar",decimals:2,sign:"$"},KZT:{name:"Tenge",decimals:2,sign:"\u20b8"},LAK:{name:"Kip",decimals:2,sign:"\u20ad"},LBP:{name:"Lebanese Pound",decimals:2,sign:"\u0644.\u0644"},LKR:{name:"Sri Lanka Rupee",
decimals:2,sign:"Rs"},LRD:{name:"Liberian Dollar",decimals:2,sign:"$"},LSL:{name:"Loti",decimals:2,sign:"L"},LTL:{name:"Lithuanian Litas",decimals:2,sign:"Lt"},LVL:{name:"Latvian Lats",decimals:2,sign:"Ls"},LYD:{name:"Libyan Dinar",decimals:3,sign:"\u0644.\u062f"},MAD:{name:"Moroccan Dirham",decimals:2,sign:"\u062f.\u0645."},MDL:{name:"Moldovan Leu",decimals:2,sign:"L"},MGA:{name:"Malagasy Ariary",decimals:2,sign:"Ar"},MKD:{name:"Denar",decimals:2,sign:"\u0434\u0435\u043d"},MMK:{name:"Kyat",decimals:2,
sign:"K"},MNT:{name:"Tugrik",decimals:2,sign:"\u20ae"},MOP:{name:"Pataca",decimals:2,sign:"P"},MRO:{name:"Ouguiya",decimals:2,sign:"UM"},MUR:{name:"Mauritius Rupee",decimals:2,sign:"\u20a8"},MVR:{name:"Rufiyaa",decimals:2,sign:".\u0783"},MWK:{name:"Kwacha",decimals:2,sign:"MK"},MXN:{name:"Mexican Peso",decimals:2,sign:"$"},MYR:{name:"Malaysian Ringgit",decimals:2,sign:"RM"},MZN:{name:"Metical",decimals:2,sign:"MT"},NAD:{name:"Namibia Dollar",decimals:2,sign:"$"},NGN:{name:"Naira",decimals:2,sign:"\u20a6"},
NIO:{name:"Cordoba Oro",decimals:2,sign:"C$"},NOK:{name:"Norwegian Krone",decimals:2,sign:"kr"},NPR:{name:"Nepalese Rupee",decimals:2,sign:"\u20a8"},NZD:{name:"New Zealand Dollar",decimals:2,sign:"$"},OMR:{name:"Rial Omani",decimals:3,sign:"\u0631.\u0639."},PAB:{name:"Balboa",decimals:2,sign:"B/."},PEN:{name:"Nuevo Sol",decimals:2,sign:"S/."},PGK:{name:"Kina",decimals:2,sign:"K"},PHP:{name:"Philippine Peso",decimals:2,sign:"\u20b1"},PLN:{name:"Zloty",decimals:2,sign:"z\u0142"},PYG:{name:"Guarani",
decimals:0,sign:"\u20b2"},QAR:{name:"Qatari Rial",decimals:2,sign:"\u0631.\u0642"},RSD:{name:"Serbian Dinar",decimals:2,sign:"\u0434\u0438\u043d."},RWF:{name:"Rwanda Franc",decimals:0,sign:"Fr"},SAR:{name:"Saudi Riyal",decimals:2,sign:"\u0631.\u0633"},SBD:{name:"Solomon Islands Dollar",decimals:2,sign:"$"},SCR:{name:"Seychelles Rupee",decimals:2,sign:"\u20a8"},SDG:{name:"Sudanese Pound",decimals:2,sign:"\u00a3"},SGD:{name:"Singapore Dollar",decimals:2,sign:"$"},SHP:{name:"Saint Helena Pound",decimals:2,
sign:"\u00a3"},SLL:{name:"Leone",decimals:2,sign:"Le"},SOS:{name:"Somali Shilling",decimals:2,sign:"Sh"},SRD:{name:"Surinam Dollar",decimals:2,sign:"$"},SSP:{name:"South Sudanese Pound",decimals:2,sign:""},STD:{name:"Dobra",decimals:2,sign:"Db"},SYP:{name:"Syrian Pound",decimals:2,sign:"\u00a3"},SZL:{name:"Lilangeni",decimals:2,sign:"L"},THB:{name:"Baht",decimals:2,sign:"\u0e3f"},TJS:{name:"Somoni",decimals:2,sign:"\u0405\u041c"},TMT:{name:"New Manat",decimals:2,sign:"m"},TND:{name:"Tunisian Dinar",
decimals:3,sign:"\u062f.\u062a"},TOP:{name:"Pa\u2019anga",decimals:2,sign:"T$"},TRY:{name:"Turkish Lira",decimals:2,sign:"TL"},TTD:{name:"Trinidad and Tobago Dollar",decimals:2,sign:"$"},TWD:{name:"New Taiwan Dollar",decimals:2,sign:"$"},TZS:{name:"Tanzanian Shilling",decimals:2,sign:"Sh"},UAH:{name:"Hryvnia",decimals:2,sign:"\u20b4"},UGX:{name:"Uganda Shilling",decimals:2,sign:"Sh"},UYU:{name:"Peso Uruguayo",decimals:2,sign:"$"},UZS:{name:"Uzbekistan Sum",decimals:2,sign:"\u043b\u0432"},VEF:{name:"Bolivar Fuerte",
decimals:2,sign:"Bs F"},VND:{name:"Dong",decimals:0,sign:"\u20ab"},VUV:{name:"Vatu",decimals:0,sign:"Vt"},WST:{name:"Tala",decimals:2,sign:"T"},XAF:{name:"CFA Franc BEAC",decimals:0,sign:"Fr"},XCD:{name:"East Caribbean Dollar",decimals:2,sign:"$"},XOF:{name:"CFA Franc BCEAO",decimals:0,sign:"Fr"},XPF:{name:"CFP Franc",decimals:0,sign:"Fr"},YER:{name:"Yemeni Rial",decimals:2,sign:"\ufdfc"},ZAR:{name:"Rand",decimals:2,sign:"R"},ZMK:{name:"Zambian Kwacha",decimals:2,sign:"ZK"},ZWL:{name:"Zimbabwe Dollar",
decimals:2,sign:"$"}};
ilib.Currency=function $ilib$Currency$($options$$){this.sync=true;if($options$$){if($options$$.code)this.code=$options$$.code;if($options$$.locale)this.locale=typeof $options$$.locale==="string"?new ilib.Locale($options$$.locale):$options$$.locale;if($options$$.sign)this.sign=$options$$.sign;if(typeof $options$$.sync!=="undefined")this.sync=$options$$.sync;if($options$$.loadParams)this.loadParams=$options$$.loadParams}this.locale=this.locale||new ilib.Locale;typeof ilib.data.currency==="undefined"?
ilib.loadData({name:"currency.json",object:ilib.Currency,locale:"-",sync:this.sync,loadParams:this.loadParams,callback:ilib.bind(this,function($currency$$){ilib.data.currency=$currency$$;this._loadLocinfo($options$$&&$options$$.onLoad)})}):this._loadLocinfo($options$$&&$options$$.onLoad)};
ilib.Currency.getAvailableCurrencies=function $ilib$Currency$getAvailableCurrencies$(){var $ret$$=[],$cur$$,$currencies$$=(new ilib.ResBundle({name:"currency"})).getResObj();for($cur$$ in $currencies$$)$cur$$&&$currencies$$[$cur$$]&&$ret$$.push($cur$$);return $ret$$};
ilib.Currency.prototype={_loadLocinfo:function $ilib$Currency$$_loadLocinfo$($onLoad$$){new ilib.LocaleInfo(this.locale,{onLoad:ilib.bind(this,function($li$$){var $currInfo$$;this.locinfo=$li$$;if(this.code){$currInfo$$=ilib.data.currency[this.code];if(!$currInfo$$)throw"currency "+this.code+" is unknown";}else if(this.sign){$currInfo$$=ilib.data.currency[this.sign];if(typeof $currInfo$$!=="undefined")this.code=this.sign;else{this.code=this.locinfo.getCurrency();$currInfo$$=ilib.data.currency[this.code];
if($currInfo$$.sign!==this.sign)for(var $cur$$ in ilib.data.currency)if($cur$$&&ilib.data.currency[$cur$$]){$currInfo$$=ilib.data.currency[$cur$$];if($currInfo$$.sign===this.sign){this.code=$cur$$;break}}}}if(!$currInfo$$||!this.code){this.code=this.locinfo.getCurrency();$currInfo$$=ilib.data.currency[this.code]}this.name=$currInfo$$.name;this.fractionDigits=$currInfo$$.decimals;this.sign=$currInfo$$.sign;typeof $onLoad$$==="function"&&$onLoad$$(this)})})},getCode:function $ilib$Currency$$getCode$(){return this.code},
getFractionDigits:function $ilib$Currency$$getFractionDigits$(){return this.fractionDigits},getSign:function $ilib$Currency$$getSign$(){return this.sign},getName:function $ilib$Currency$$getName$(){return this.name},getLocale:function $ilib$Currency$$getLocale$(){return this.locale}};
ilib.NumFmt=function $ilib$NumFmt$($options$$){var $sync$$=true;this.locale=new ilib.Locale;this.type="number";var $loadParams$$=void 0;if($options$$){if($options$$.locale)this.locale=typeof $options$$.locale==="string"?new ilib.Locale($options$$.locale):$options$$.locale;if($options$$.type&&($options$$.type==="number"||$options$$.type==="currency"||$options$$.type==="percentage"))this.type=$options$$.type;if($options$$.currency)this.currency=$options$$.currency;if(typeof $options$$.maxFractionDigits===
"number")this.maxFractionDigits=this._toPrimitive($options$$.maxFractionDigits);if(typeof $options$$.minFractionDigits==="number"){this.minFractionDigits=this._toPrimitive($options$$.minFractionDigits);if(this.minFractionDigits<0)this.minFractionDigits=0;if(this.minFractionDigits>20)this.minFractionDigits=20}if($options$$.style)this.style=$options$$.style;if(typeof $options$$.useNative==="boolean")this.useNative=$options$$.useNative;this.roundingMode=$options$$.roundingMode;typeof $options$$.sync!==
"undefined"&&($sync$$=$options$$.sync==true);$loadParams$$=$options$$.loadParams}this.localeInfo=void 0;new ilib.LocaleInfo(this.locale,{sync:$sync$$,loadParams:$loadParams$$,onLoad:ilib.bind(this,function($li$$){this.localeInfo=$li$$;if(this.type==="number")this.templateNegative=new ilib.String(this.localeInfo.getNegativeNumberFormat()||"-{n}");else{if(this.type==="currency"){var $templates$$;if(!this.currency||typeof this.currency!="string")throw"A currency property is required in the options to the number formatter constructor when the type property is set to currency.";
new ilib.Currency({locale:this.locale,code:this.currency,sync:$sync$$,loadParams:$loadParams$$,onLoad:ilib.bind(this,function($cur$$){this.currencyInfo=$cur$$;if(this.style!=="common"&&this.style!=="iso")this.style="common";if(typeof this.maxFractionDigits!=="number"&&typeof this.minFractionDigits!=="number")this.minFractionDigits=this.maxFractionDigits=this.currencyInfo.getFractionDigits();$templates$$=this.localeInfo.getCurrencyFormats();this.template=new ilib.String($templates$$[this.style]||$templates$$.common);
this.templateNegative=new ilib.String($templates$$[this.style+"Negative"]||$templates$$.commonNegative);this.sign=this.style==="iso"?this.currencyInfo.getCode():this.currencyInfo.getSign();if(!this.roundingMode)this.roundingMode=this.currencyInfo&&this.currencyInfo.roundingMode;this._init();if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad(this)})});return}if(this.type==="percentage"){this.template=new ilib.String(this.localeInfo.getPercentageFormat()||"{n}%");this.templateNegative=
new ilib.String(this.localeInfo.getNegativePercentageFormat()||this.localeInfo.getNegativeNumberFormat()+"%")}}this._init();if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad(this)})})};ilib.NumFmt.getAvailableLocales=function $ilib$NumFmt$getAvailableLocales$(){};ilib.NumFmt.zeros="0000000000000000000000000000000000000000000000000000000000000000000000";
ilib.NumFmt.prototype={getUseNative:function $ilib$NumFmt$$getUseNative$(){return typeof this.useNative==="boolean"?this.useNative:this.localeInfo.getDigitsStyle()==="native"},_init:function $ilib$NumFmt$$_init$(){if(this.maxFractionDigits<this.minFractionDigits)this.minFractionDigits=this.maxFractionDigits;if(!this.roundingMode)this.roundingMode=this.localeInfo.getRoundingMode();if(!this.roundingMode)this.roundingMode="halfdown";this.round=ilib._roundFnc[this.roundingMode];if(!this.round){this.roundingMode=
"halfdown";this.round=ilib._roundFnc[this.roundingMode]}if(this.style==="nogrouping")this.prigroupSize=this.secgroupSize=0;else{this.prigroupSize=this.localeInfo.getPrimaryGroupingDigits();this.secgroupSize=this.localeInfo.getSecondaryGroupingDigits();this.groupingSeparator=this.getUseNative()?this.localeInfo.getNativeGroupingSeparator():this.localeInfo.getGroupingSeparator()}this.decimalSeparator=this.getUseNative()?this.localeInfo.getNativeDecimalSeparator():this.localeInfo.getDecimalSeparator();
if(this.getUseNative()){var $nd$$=this.localeInfo.getNativeDigits()||this.localeInfo.getDigits();if($nd$$)this.digits=$nd$$.split("")}this.exponentSymbol=this.localeInfo.getExponential()||"e"},_pad:function $ilib$NumFmt$$_pad$($str$$,$length$$,$left$$){return $str$$.length>=$length$$?$str$$:$left$$?ilib.NumFmt.zeros.substring(0,$length$$-$str$$.length)+$str$$:$str$$+ilib.NumFmt.zeros.substring(0,$length$$-$str$$.length)},_toPrimitive:function $ilib$NumFmt$$_toPrimitive$($num$$){var $n$$=0;switch(typeof $num$$){case "number":$n$$=
$num$$;break;case "string":$n$$=parseFloat($num$$);break;case "object":$n$$=$num$$.valueOf()}return $n$$},_formatScientific:function $ilib$NumFmt$$_formatScientific$($exponent_num$$23_parts$$){var $formatted$$,$factor$$1_fraction$$,$exponent_num$$23_parts$$=(new Number($exponent_num$$23_parts$$)).toExponential().split("e");$formatted$$=$exponent_num$$23_parts$$[0];$exponent_num$$23_parts$$=$exponent_num$$23_parts$$[1];if(this.maxFractionDigits>0){$factor$$1_fraction$$=Math.pow(10,this.maxFractionDigits);
$formatted$$=this.round($formatted$$*$factor$$1_fraction$$)/$factor$$1_fraction$$}$factor$$1_fraction$$=(""+$formatted$$).split(".");$formatted$$=$factor$$1_fraction$$[0];$factor$$1_fraction$$=$factor$$1_fraction$$[1];typeof this.maxFractionDigits!=="undefined"&&($factor$$1_fraction$$=$factor$$1_fraction$$.substring(0,this.maxFractionDigits));typeof this.minFractionDigits!=="undefined"&&($factor$$1_fraction$$=this._pad($factor$$1_fraction$$||"",this.minFractionDigits,false));$factor$$1_fraction$$.length&&
($formatted$$=$formatted$$+(this.decimalSeparator+$factor$$1_fraction$$));return $formatted$$=$formatted$$+(this.exponentSymbol+$exponent_num$$23_parts$$)},_formatStandard:function $ilib$NumFmt$$_formatStandard$($integral$$1_num$$){var $i$$32_k$$;if(typeof this.maxFractionDigits!=="undefined"&&this.maxFractionDigits>-1)var $factor$$2_fraction$$2_parts$$=Math.pow(10,this.maxFractionDigits),$integral$$1_num$$=this.round($integral$$1_num$$*$factor$$2_fraction$$2_parts$$)/$factor$$2_fraction$$2_parts$$;
var $integral$$1_num$$=Math.abs($integral$$1_num$$),$factor$$2_fraction$$2_parts$$=(""+$integral$$1_num$$).split("."),$integral$$1_num$$=$factor$$2_fraction$$2_parts$$[0],$factor$$2_fraction$$2_parts$$=$factor$$2_fraction$$2_parts$$[1],$cycle$$,$formatted$$,$integral$$1_num$$=$integral$$1_num$$.toString();this.minFractionDigits>0&&($factor$$2_fraction$$2_parts$$=this._pad($factor$$2_fraction$$2_parts$$||"",this.minFractionDigits,false));if(this.secgroupSize>0){if($integral$$1_num$$.length>this.prigroupSize){$i$$32_k$$=
$integral$$1_num$$.length-this.prigroupSize;$integral$$1_num$$=$integral$$1_num$$.slice(0,$i$$32_k$$)+this.groupingSeparator+$integral$$1_num$$.slice($i$$32_k$$);$cycle$$=$integral$$1_num$$.substring(0,$integral$$1_num$$.indexOf(this.groupingSeparator));for($i$$32_k$$=$cycle$$.length;$i$$32_k$$>this.secgroupSize;){$i$$32_k$$=$cycle$$.length-this.secgroupSize;$integral$$1_num$$=$integral$$1_num$$.slice(0,$i$$32_k$$)+this.groupingSeparator+$integral$$1_num$$.slice($i$$32_k$$);$cycle$$=$integral$$1_num$$.substring(0,
$integral$$1_num$$.indexOf(this.groupingSeparator));$i$$32_k$$=$cycle$$.length}}$formatted$$=$integral$$1_num$$}else if(this.prigroupSize!==0){$cycle$$=ilib.mod($integral$$1_num$$.length-1,this.prigroupSize);$formatted$$="";for($i$$32_k$$=0;$i$$32_k$$<$integral$$1_num$$.length-1;$i$$32_k$$++){$formatted$$=$formatted$$+$integral$$1_num$$.charAt($i$$32_k$$);$cycle$$===0&&($formatted$$=$formatted$$+this.groupingSeparator);$cycle$$=ilib.mod($cycle$$-1,this.prigroupSize)}$formatted$$=$formatted$$+$integral$$1_num$$.charAt($integral$$1_num$$.length-
1)}else $formatted$$=$integral$$1_num$$;if($factor$$2_fraction$$2_parts$$&&(typeof this.maxFractionDigits==="undefined"||this.maxFractionDigits>0)){$formatted$$=$formatted$$+this.decimalSeparator;$formatted$$=$formatted$$+$factor$$2_fraction$$2_parts$$}this.digits&&($formatted$$=ilib.mapString($formatted$$,this.digits));return $formatted$$},format:function $ilib$NumFmt$$format$($num$$){var $formatted$$,$n$$;if(typeof $num$$==="undefined")return"";$n$$=this._toPrimitive($num$$);if(this.type==="number"){$formatted$$=
this.style==="scientific"?this._formatScientific($n$$):this._formatStandard($n$$);$num$$<0&&($formatted$$=this.templateNegative.format({n:$formatted$$}))}else{$formatted$$=this._formatStandard($n$$);$formatted$$=($n$$<0?this.templateNegative:this.template).format({n:$formatted$$,s:this.sign})}return $formatted$$},getType:function $ilib$NumFmt$$getType$(){return this.type},getLocale:function $ilib$NumFmt$$getLocale$(){return this.locale},isGroupingUsed:function $ilib$NumFmt$$isGroupingUsed$(){return this.groupingSeparator!==
"undefined"&&this.groupingSeparator.length>0},getMaxFractionDigits:function $ilib$NumFmt$$getMaxFractionDigits$(){return typeof this.maxFractionDigits!=="undefined"?this.maxFractionDigits:-1},getMinFractionDigits:function $ilib$NumFmt$$getMinFractionDigits$(){return typeof this.minFractionDigits!=="undefined"?this.minFractionDigits:-1},getCurrency:function $ilib$NumFmt$$getCurrency$(){return this.currencyInfo&&this.currencyInfo.getCode()},getRoundingMode:function $ilib$NumFmt$$getRoundingMode$(){return this.roundingMode},
getStyle:function $ilib$NumFmt$$getStyle$(){return this.style}};
ilib.DurFmt=function $ilib$DurFmt$($options$$){var $sync$$=true,$loadParams$$=void 0;this.locale=new ilib.Locale;this.length="short";this.style="text";if($options$$){if($options$$.locale)this.locale=typeof $options$$.locale==="string"?new ilib.Locale($options$$.locale):$options$$.locale;if($options$$.length&&($options$$.length==="short"||$options$$.length==="medium"||$options$$.length==="long"||$options$$.length==="full"))this.length=$options$$.length;if($options$$.style&&($options$$.style==="text"||
$options$$.style==="clock"))this.style=$options$$.style;typeof $options$$.sync!=="undefined"&&($sync$$=$options$$.sync==true);if(typeof $options$$.useNative==="boolean")this.useNative=$options$$.useNative;$loadParams$$=$options$$.loadParams}new ilib.ResBundle({locale:this.locale,name:"sysres",sync:$sync$$,loadParams:$loadParams$$,onLoad:ilib.bind(this,function($sysres$$){switch(this.length){case "short":this.components={year:$sysres$$.getString("#{num}y"),month:$sysres$$.getString("#{num}m","durationShortMonths"),
week:$sysres$$.getString("#{num}w"),day:$sysres$$.getString("#{num}d"),hour:$sysres$$.getString("#{num}h"),minute:$sysres$$.getString("#{num}m","durationShortMinutes"),second:$sysres$$.getString("#{num}s"),millisecond:$sysres$$.getString("#{num}m","durationShortMillis"),separator:$sysres$$.getString(" ","separatorShort"),finalSeparator:""};break;case "medium":this.components={year:$sysres$$.getString("1#1 yr|#{num} yrs","durationMediumYears"),month:$sysres$$.getString("1#1 mo|#{num} mos"),week:$sysres$$.getString("1#1 wk|#{num} wks",
"durationMediumWeeks"),day:$sysres$$.getString("1#1 dy|#{num} dys"),hour:$sysres$$.getString("1#1 hr|#{num} hrs","durationMediumHours"),minute:$sysres$$.getString("1#1 mi|#{num} min"),second:$sysres$$.getString("1#1 se|#{num} sec"),millisecond:$sysres$$.getString("#{num} ms"),separator:$sysres$$.getString(" ","separatorMedium"),finalSeparator:""};break;case "long":this.components={year:$sysres$$.getString("1#1 yr|#{num} yrs"),month:$sysres$$.getString("1#1 mon|#{num} mons"),week:$sysres$$.getString("1#1 wk|#{num} wks"),
day:$sysres$$.getString("1#1 day|#{num} days","durationLongDays"),hour:$sysres$$.getString("1#1 hr|#{num} hrs"),minute:$sysres$$.getString("1#1 min|#{num} min"),second:$sysres$$.getString("1#1 sec|#{num} sec"),millisecond:$sysres$$.getString("#{num} ms"),separator:$sysres$$.getString(", ","separatorLong"),finalSeparator:""};break;case "full":this.components={year:$sysres$$.getString("1#1 year|#{num} years"),month:$sysres$$.getString("1#1 month|#{num} months"),week:$sysres$$.getString("1#1 week|#{num} weeks"),
day:$sysres$$.getString("1#1 day|#{num} days"),hour:$sysres$$.getString("1#1 hour|#{num} hours"),minute:$sysres$$.getString("1#1 minute|#{num} minutes"),second:$sysres$$.getString("1#1 second|#{num} seconds"),millisecond:$sysres$$.getString("1#1 millisecond|#{num} milliseconds"),separator:$sysres$$.getString(", ","separatorFull"),finalSeparator:$sysres$$.getString(" and ","finalSeparatorFull")}}this.style==="clock"?new ilib.DateFmt({locale:this.locale,calendar:"gregorian",type:"time",time:"ms",sync:$sync$$,
loadParams:$loadParams$$,useNative:this.useNative,onLoad:ilib.bind(this,function($fmtMS$$){this.timeFmtMS=$fmtMS$$;new ilib.DateFmt({locale:this.locale,calendar:"gregorian",type:"time",time:"hm",sync:$sync$$,loadParams:$loadParams$$,useNative:this.useNative,onLoad:ilib.bind(this,function($fmtHM$$){this.timeFmtHM=$fmtHM$$;new ilib.DateFmt({locale:this.locale,calendar:"gregorian",type:"time",time:"hms",sync:$sync$$,loadParams:$loadParams$$,useNative:this.useNative,onLoad:ilib.bind(this,function($fmtHMS$$){this.timeFmtHMS=
$fmtHMS$$;this.timeFmtHM.template=this.timeFmtHM.template.replace(/hh?/,"H");this.timeFmtHM.templateArr=this.timeFmtHM._tokenize(this.timeFmtHM.template);this.timeFmtHMS.template=this.timeFmtHMS.template.replace(/hh?/,"H");this.timeFmtHMS.templateArr=this.timeFmtHMS._tokenize(this.timeFmtHMS.template);this._init(this.timeFmtHM.locinfo,$options$$&&$options$$.onLoad)})})})})})}):new ilib.LocaleInfo(this.locale,{sync:$sync$$,loadParams:$loadParams$$,onLoad:ilib.bind(this,function($li$$){this._init($li$$,
$options$$&&$options$$.onLoad)})})})})};ilib.DurFmt.complist={text:"year month week day hour minute second millisecond".split(" "),clock:["year","month","week","day"]};ilib.DurFmt.prototype._mapDigits=function $ilib$DurFmt$$_mapDigits$($str$$){return this.useNative&&this.digits?ilib.mapString($str$$.toString(),this.digits):$str$$};
ilib.DurFmt.prototype._init=function $ilib$DurFmt$$_init$($locinfo$$,$onLoad$$){var $digits$$;if(typeof this.useNative==="boolean"){if(this.useNative)if($digits$$=$locinfo$$.getNativeDigits())this.digits=$digits$$}else if($locinfo$$.getDigitsStyle()==="native")if($digits$$=$locinfo$$.getNativeDigits()){this.useNative=true;this.digits=$digits$$}typeof $onLoad$$==="function"&&$onLoad$$(this)};
ilib.DurFmt.prototype.format=function $ilib$DurFmt$$format$($components$$){var $fmt$$4_i$$,$list$$,$secondlast$$=true,$str$$="";$list$$=ilib.DurFmt.complist[this.style];for($fmt$$4_i$$=$list$$.length-1;$fmt$$4_i$$>=0;$fmt$$4_i$$--)if(typeof $components$$[$list$$[$fmt$$4_i$$]]!=="undefined"&&$components$$[$list$$[$fmt$$4_i$$]]!=0){if($str$$.length>0){$str$$=(this.length==="full"&&$secondlast$$?this.components.finalSeparator:this.components.separator)+$str$$;$secondlast$$=false}$str$$=this.components[$list$$[$fmt$$4_i$$]].formatChoice($components$$[$list$$[$fmt$$4_i$$]],
{num:this._mapDigits($components$$[$list$$[$fmt$$4_i$$]])})+$str$$}if(this.style==="clock"){$fmt$$4_i$$=typeof $components$$.hour!=="undefined"?typeof $components$$.second!=="undefined"?this.timeFmtHMS:this.timeFmtHM:this.timeFmtMS;$str$$.length>0&&($str$$=$str$$+this.components.separator);$str$$=$str$$+$fmt$$4_i$$._formatTemplate($components$$,$fmt$$4_i$$.templateArr)}return new ilib.String($str$$)};ilib.DurFmt.prototype.getLocale=function $ilib$DurFmt$$getLocale$(){return this.locale};
ilib.DurFmt.prototype.getLength=function $ilib$DurFmt$$getLength$(){return this.length};ilib.DurFmt.prototype.getStyle=function $ilib$DurFmt$$getStyle$(){return this.style};
ilib.data.ctype_l={Lu:[[65,90],[192,214],[216,222],[256],[258],[260],[262],[264],[266],[268],[270],[272],[274],[276],[278],[280],[282],[284],[286],[288],[290],[292],[294],[296],[298],[300],[302],[304],[306],[308],[310],[313],[315],[317],[319],[321],[323],[325],[327],[330],[332],[334],[336],[338],[340],[342],[344],[346],[348],[350],[352],[354],[356],[358],[360],[362],[364],[366],[368],[370],[372],[374],[376,377],[379],[381],[385,386],[388],[390,391],[393,395],[398,401],[403,404],[406,408],[412,413],
[415,416],[418],[420],[422,423],[425],[428],[430,431],[433,435],[437],[439,440],[444],[452],[455],[458],[461],[463],[465],[467],[469],[471],[473],[475],[478],[480],[482],[484],[486],[488],[490],[492],[494],[497],[500],[502,504],[506],[508],[510],[512],[514],[516],[518],[520],[522],[524],[526],[528],[530],[532],[534],[536],[538],[540],[542],[544],[546],[548],[550],[552],[554],[556],[558],[560],[562],[570,571],[573,574],[577],[579,582],[584],[586],[588],[590],[880],[882],[886],[902],[904,906],[908],
[910,911],[913,929],[931,939],[975],[978,980],[984],[986],[988],[990],[992],[994],[996],[998],[1E3],[1002],[1004],[1006],[1012],[1015],[1017,1018],[1021,1071],[1120],[1122],[1124],[1126],[1128],[1130],[1132],[1134],[1136],[1138],[1140],[1142],[1144],[1146],[1148],[1150],[1152],[1162],[1164],[1166],[1168],[1170],[1172],[1174],[1176],[1178],[1180],[1182],[1184],[1186],[1188],[1190],[1192],[1194],[1196],[1198],[1200],[1202],[1204],[1206],[1208],[1210],[1212],[1214],[1216,1217],[1219],[1221],[1223],[1225],
[1227],[1229],[1232],[1234],[1236],[1238],[1240],[1242],[1244],[1246],[1248],[1250],[1252],[1254],[1256],[1258],[1260],[1262],[1264],[1266],[1268],[1270],[1272],[1274],[1276],[1278],[1280],[1282],[1284],[1286],[1288],[1290],[1292],[1294],[1296],[1298],[1300],[1302],[1304],[1306],[1308],[1310],[1312],[1314],[1316],[1318],[1329,1366],[4256,4293],[4295],[4301],[7680],[7682],[7684],[7686],[7688],[7690],[7692],[7694],[7696],[7698],[7700],[7702],[7704],[7706],[7708],[7710],[7712],[7714],[7716],[7718],[7720],
[7722],[7724],[7726],[7728],[7730],[7732],[7734],[7736],[7738],[7740],[7742],[7744],[7746],[7748],[7750],[7752],[7754],[7756],[7758],[7760],[7762],[7764],[7766],[7768],[7770],[7772],[7774],[7776],[7778],[7780],[7782],[7784],[7786],[7788],[7790],[7792],[7794],[7796],[7798],[7800],[7802],[7804],[7806],[7808],[7810],[7812],[7814],[7816],[7818],[7820],[7822],[7824],[7826],[7828],[7838],[7840],[7842],[7844],[7846],[7848],[7850],[7852],[7854],[7856],[7858],[7860],[7862],[7864],[7866],[7868],[7870],[7872],
[7874],[7876],[7878],[7880],[7882],[7884],[7886],[7888],[7890],[7892],[7894],[7896],[7898],[7900],[7902],[7904],[7906],[7908],[7910],[7912],[7914],[7916],[7918],[7920],[7922],[7924],[7926],[7928],[7930],[7932],[7934],[7944,7951],[7960,7965],[7976,7983],[7992,7999],[8008,8013],[8025],[8027],[8029],[8031],[8040,8047],[8120,8123],[8136,8139],[8152,8155],[8168,8172],[8184,8187],[8450],[8455],[8459,8461],[8464,8466],[8469],[8473,8477],[8484],[8486],[8488],[8490,8493],[8496,8499],[8510,8511],[8517],[8579],
[11264,11310],[11360],[11362,11364],[11367],[11369],[11371],[11373,11376],[11378],[11381],[11390,11392],[11394],[11396],[11398],[11400],[11402],[11404],[11406],[11408],[11410],[11412],[11414],[11416],[11418],[11420],[11422],[11424],[11426],[11428],[11430],[11432],[11434],[11436],[11438],[11440],[11442],[11444],[11446],[11448],[11450],[11452],[11454],[11456],[11458],[11460],[11462],[11464],[11466],[11468],[11470],[11472],[11474],[11476],[11478],[11480],[11482],[11484],[11486],[11488],[11490],[11499],
[11501],[11506],[42560],[42562],[42564],[42566],[42568],[42570],[42572],[42574],[42576],[42578],[42580],[42582],[42584],[42586],[42588],[42590],[42592],[42594],[42596],[42598],[42600],[42602],[42604],[42624],[42626],[42628],[42630],[42632],[42634],[42636],[42638],[42640],[42642],[42644],[42646],[42786],[42788],[42790],[42792],[42794],[42796],[42798],[42802],[42804],[42806],[42808],[42810],[42812],[42814],[42816],[42818],[42820],[42822],[42824],[42826],[42828],[42830],[42832],[42834],[42836],[42838],
[42840],[42842],[42844],[42846],[42848],[42850],[42852],[42854],[42856],[42858],[42860],[42862],[42873],[42875],[42877,42878],[42880],[42882],[42884],[42886],[42891],[42893],[42896],[42898],[42912],[42914],[42916],[42918],[42920],[42922],[65313,65338],[66560,66599],[119808,119833],[119860,119885],[119912,119937],[119964],[119966,119967],[119970],[119973,119974],[119977,119980],[119982,119989],[120016,120041],[120068,120069],[120071,120074],[120077,120084],[120086,120092],[120120,120121],[120123,120126],
[120128,120132],[120134],[120138,120144],[120172,120197],[120224,120249],[120276,120301],[120328,120353],[120380,120405],[120432,120457],[120488,120512],[120546,120570],[120604,120628],[120662,120686],[120720,120744],[120778]],Ll:[[97,122],[181],[223,246],[248,255],[257],[259],[261],[263],[265],[267],[269],[271],[273],[275],[277],[279],[281],[283],[285],[287],[289],[291],[293],[295],[297],[299],[301],[303],[305],[307],[309],[311,312],[314],[316],[318],[320],[322],[324],[326],[328,329],[331],[333],
[335],[337],[339],[341],[343],[345],[347],[349],[351],[353],[355],[357],[359],[361],[363],[365],[367],[369],[371],[373],[375],[378],[380],[382,384],[387],[389],[392],[396,397],[402],[405],[409,411],[414],[417],[419],[421],[424],[426,427],[429],[432],[436],[438],[441,442],[445,447],[454],[457],[460],[462],[464],[466],[468],[470],[472],[474],[476,477],[479],[481],[483],[485],[487],[489],[491],[493],[495,496],[499],[501],[505],[507],[509],[511],[513],[515],[517],[519],[521],[523],[525],[527],[529],[531],
[533],[535],[537],[539],[541],[543],[545],[547],[549],[551],[553],[555],[557],[559],[561],[563,569],[572],[575,576],[578],[583],[585],[587],[589],[591,659],[661,687],[881],[883],[887],[891,893],[912],[940,974],[976,977],[981,983],[985],[987],[989],[991],[993],[995],[997],[999],[1001],[1003],[1005],[1007,1011],[1013],[1016],[1019,1020],[1072,1119],[1121],[1123],[1125],[1127],[1129],[1131],[1133],[1135],[1137],[1139],[1141],[1143],[1145],[1147],[1149],[1151],[1153],[1163],[1165],[1167],[1169],[1171],
[1173],[1175],[1177],[1179],[1181],[1183],[1185],[1187],[1189],[1191],[1193],[1195],[1197],[1199],[1201],[1203],[1205],[1207],[1209],[1211],[1213],[1215],[1218],[1220],[1222],[1224],[1226],[1228],[1230,1231],[1233],[1235],[1237],[1239],[1241],[1243],[1245],[1247],[1249],[1251],[1253],[1255],[1257],[1259],[1261],[1263],[1265],[1267],[1269],[1271],[1273],[1275],[1277],[1279],[1281],[1283],[1285],[1287],[1289],[1291],[1293],[1295],[1297],[1299],[1301],[1303],[1305],[1307],[1309],[1311],[1313],[1315],
[1317],[1319],[1377,1415],[7424,7467],[7531,7543],[7545,7578],[7681],[7683],[7685],[7687],[7689],[7691],[7693],[7695],[7697],[7699],[7701],[7703],[7705],[7707],[7709],[7711],[7713],[7715],[7717],[7719],[7721],[7723],[7725],[7727],[7729],[7731],[7733],[7735],[7737],[7739],[7741],[7743],[7745],[7747],[7749],[7751],[7753],[7755],[7757],[7759],[7761],[7763],[7765],[7767],[7769],[7771],[7773],[7775],[7777],[7779],[7781],[7783],[7785],[7787],[7789],[7791],[7793],[7795],[7797],[7799],[7801],[7803],[7805],
[7807],[7809],[7811],[7813],[7815],[7817],[7819],[7821],[7823],[7825],[7827],[7829,7837],[7839],[7841],[7843],[7845],[7847],[7849],[7851],[7853],[7855],[7857],[7859],[7861],[7863],[7865],[7867],[7869],[7871],[7873],[7875],[7877],[7879],[7881],[7883],[7885],[7887],[7889],[7891],[7893],[7895],[7897],[7899],[7901],[7903],[7905],[7907],[7909],[7911],[7913],[7915],[7917],[7919],[7921],[7923],[7925],[7927],[7929],[7931],[7933],[7935,7943],[7952,7957],[7968,7975],[7984,7991],[8E3,8005],[8016,8023],[8032,
8039],[8048,8061],[8064,8071],[8080,8087],[8096,8103],[8112,8116],[8118,8119],[8126],[8130,8132],[8134,8135],[8144,8147],[8150,8151],[8160,8167],[8178,8180],[8182,8183],[8458],[8462,8463],[8467],[8495],[8500],[8505],[8508,8509],[8518,8521],[8526],[8580],[11312,11358],[11361],[11365,11366],[11368],[11370],[11372],[11377],[11379,11380],[11382,11387],[11393],[11395],[11397],[11399],[11401],[11403],[11405],[11407],[11409],[11411],[11413],[11415],[11417],[11419],[11421],[11423],[11425],[11427],[11429],
[11431],[11433],[11435],[11437],[11439],[11441],[11443],[11445],[11447],[11449],[11451],[11453],[11455],[11457],[11459],[11461],[11463],[11465],[11467],[11469],[11471],[11473],[11475],[11477],[11479],[11481],[11483],[11485],[11487],[11489],[11491,11492],[11500],[11502],[11507],[11520,11557],[11559],[11565],[42561],[42563],[42565],[42567],[42569],[42571],[42573],[42575],[42577],[42579],[42581],[42583],[42585],[42587],[42589],[42591],[42593],[42595],[42597],[42599],[42601],[42603],[42605],[42625],[42627],
[42629],[42631],[42633],[42635],[42637],[42639],[42641],[42643],[42645],[42647],[42787],[42789],[42791],[42793],[42795],[42797],[42799,42801],[42803],[42805],[42807],[42809],[42811],[42813],[42815],[42817],[42819],[42821],[42823],[42825],[42827],[42829],[42831],[42833],[42835],[42837],[42839],[42841],[42843],[42845],[42847],[42849],[42851],[42853],[42855],[42857],[42859],[42861],[42863],[42865,42872],[42874],[42876],[42879],[42881],[42883],[42885],[42887],[42892],[42894],[42897],[42899],[42913],[42915],
[42917],[42919],[42921],[43002],[64256,64262],[64275,64279],[65345,65370],[66600,66639],[119834,119859],[119886,119892],[119894,119911],[119938,119963],[119990,119993],[119995],[119997,120003],[120005,120015],[120042,120067],[120094,120119],[120146,120171],[120198,120223],[120250,120275],[120302,120327],[120354,120379],[120406,120431],[120458,120485],[120514,120538],[120540,120545],[120572,120596],[120598,120603],[120630,120654],[120656,120661],[120688,120712],[120714,120719],[120746,120770],[120772,
120777],[120779]],Lt:[[453],[456],[459],[498],[8072,8079],[8088,8095],[8104,8111],[8124],[8140],[8188]],Lm:[[688,705],[710,721],[736,740],[748],[750],[884],[890],[1369],[1600],[1765,1766],[2036,2037],[2042],[2074],[2084],[2088],[2417],[3654],[3782],[4348],[6103],[6211],[6823],[7288,7293],[7468,7530],[7544],[7579,7615],[8305],[8319],[8336,8348],[11388,11389],[11631],[11823],[12293],[12337,12341],[12347],[12445,12446],[12540,12542],[40981],[42232,42237],[42508],[42623],[42775,42783],[42864],[42888],
[43E3,43001],[43471],[43632],[43741],[43763,43764],[65392],[65438,65439],[94099,94111]],Lo:[[170],[186],[443],[448,451],[660],[1488,1514],[1520,1522],[1568,1599],[1601,1610],[1646,1647],[1649,1747],[1749],[1774,1775],[1786,1788],[1791],[1808],[1810,1839],[1869,1957],[1969],[1994,2026],[2048,2069],[2112,2136],[2208],[2210,2220],[2308,2361],[2365],[2384],[2392,2401],[2418,2423],[2425,2431],[2437,2444],[2447,2448],[2451,2472],[2474,2480],[2482],[2486,2489],[2493],[2510],[2524,2525],[2527,2529],[2544,
2545],[2565,2570],[2575,2576],[2579,2600],[2602,2608],[2610,2611],[2613,2614],[2616,2617],[2649,2652],[2654],[2674,2676],[2693,2701],[2703,2705],[2707,2728],[2730,2736],[2738,2739],[2741,2745],[2749],[2768],[2784,2785],[2821,2828],[2831,2832],[2835,2856],[2858,2864],[2866,2867],[2869,2873],[2877],[2908,2909],[2911,2913],[2929],[2947],[2949,2954],[2958,2960],[2962,2965],[2969,2970],[2972],[2974,2975],[2979,2980],[2984,2986],[2990,3001],[3024],[3077,3084],[3086,3088],[3090,3112],[3114,3123],[3125,3129],
[3133],[3160,3161],[3168,3169],[3205,3212],[3214,3216],[3218,3240],[3242,3251],[3253,3257],[3261],[3294],[3296,3297],[3313,3314],[3333,3340],[3342,3344],[3346,3386],[3389],[3406],[3424,3425],[3450,3455],[3461,3478],[3482,3505],[3507,3515],[3517],[3520,3526],[3585,3632],[3634,3635],[3648,3653],[3713,3714],[3716],[3719,3720],[3722],[3725],[3732,3735],[3737,3743],[3745,3747],[3749],[3751],[3754,3755],[3757,3760],[3762,3763],[3773],[3776,3780],[3804,3807],[3840],[3904,3911],[3913,3948],[3976,3980],[4096,
4138],[4159],[4176,4181],[4186,4189],[4193],[4197,4198],[4206,4208],[4213,4225],[4238],[4304,4346],[4349,4680],[4682,4685],[4688,4694],[4696],[4698,4701],[4704,4744],[4746,4749],[4752,4784],[4786,4789],[4792,4798],[4800],[4802,4805],[4808,4822],[4824,4880],[4882,4885],[4888,4954],[4992,5007],[5024,5108],[5121,5740],[5743,5759],[5761,5786],[5792,5866],[5888,5900],[5902,5905],[5920,5937],[5952,5969],[5984,5996],[5998,6E3],[6016,6067],[6108],[6176,6210],[6212,6263],[6272,6312],[6314],[6320,6389],[6400,
6428],[6480,6509],[6512,6516],[6528,6571],[6593,6599],[6656,6678],[6688,6740],[6917,6963],[6981,6987],[7043,7072],[7086,7087],[7098,7141],[7168,7203],[7245,7247],[7258,7287],[7401,7404],[7406,7409],[7413,7414],[8501,8504],[11568,11623],[11648,11670],[11680,11686],[11688,11694],[11696,11702],[11704,11710],[11712,11718],[11720,11726],[11728,11734],[11736,11742],[12294],[12348],[12353,12438],[12447],[12449,12538],[12543],[12549,12589],[12593,12686],[12704,12730],[12784,12799],[13312,19893],[19968,40908],
[40960,40980],[40982,42124],[42192,42231],[42240,42507],[42512,42527],[42538,42539],[42606],[42656,42725],[43003,43009],[43011,43013],[43015,43018],[43020,43042],[43072,43123],[43138,43187],[43250,43255],[43259],[43274,43301],[43312,43334],[43360,43388],[43396,43442],[43520,43560],[43584,43586],[43588,43595],[43616,43631],[43633,43638],[43642],[43648,43695],[43697],[43701,43702],[43705,43709],[43712],[43714],[43739,43740],[43744,43754],[43762],[43777,43782],[43785,43790],[43793,43798],[43808,43814],
[43816,43822],[43968,44002],[44032,55203],[55216,55238],[55243,55291],[63744,64109],[64112,64217],[64285],[64287,64296],[64298,64310],[64312,64316],[64318],[64320,64321],[64323,64324],[64326,64433],[64467,64829],[64848,64911],[64914,64967],[65008,65019],[65136,65140],[65142,65276],[65382,65391],[65393,65437],[65440,65470],[65474,65479],[65482,65487],[65490,65495],[65498,65500],[65536,65547],[65549,65574],[65576,65594],[65596,65597],[65599,65613],[65616,65629],[65664,65786],[66176,66204],[66208,66256],
[66304,66334],[66352,66368],[66370,66377],[66432,66461],[66464,66499],[66504,66511],[66640,66717],[67584,67589],[67592],[67594,67637],[67639,67640],[67644],[67647,67669],[67840,67861],[67872,67897],[67968,68023],[68030,68031],[68096],[68112,68115],[68117,68119],[68121,68147],[68192,68220],[68352,68405],[68416,68437],[68448,68466],[68608,68680],[69635,69687],[69763,69807],[69840,69864],[69891,69926],[70019,70066],[70081,70084],[71296,71338],[73728,74606],[77824,78894],[92160,92728],[93952,94020],[94032],
[110592,110593],[126464,126467],[126469,126495],[126497,126498],[126500],[126503],[126505,126514],[126516,126519],[126521],[126523],[126530],[126535],[126537],[126539],[126541,126543],[126545,126546],[126548],[126551],[126553],[126555],[126557],[126559],[126561,126562],[126564],[126567,126570],[126572,126578],[126580,126583],[126585,126588],[126590],[126592,126601],[126603,126619],[126625,126627],[126629,126633],[126635,126651],[131072,173782],[173824,177972],[177984,178205],[194560,195101]]};
ilib.CType.isAlpha=function $ilib$CType$isAlpha$($ch$$11_num$$){switch(typeof $ch$$11_num$$){case "number":break;case "string":$ch$$11_num$$=ilib.String.toCodePoint($ch$$11_num$$,0);break;case "undefined":return false;default:$ch$$11_num$$=$ch$$11_num$$._toCodePoint(0)}return ilib.CType._inRange($ch$$11_num$$,"Lu",ilib.data.ctype_l)||ilib.CType._inRange($ch$$11_num$$,"Ll",ilib.data.ctype_l)||ilib.CType._inRange($ch$$11_num$$,"Lt",ilib.data.ctype_l)||ilib.CType._inRange($ch$$11_num$$,"Lm",ilib.data.ctype_l)||
ilib.CType._inRange($ch$$11_num$$,"Lo",ilib.data.ctype_l)};ilib.CType.isAlpha._init=function $ilib$CType$isAlpha$_init$($sync$$,$loadParams$$,$onLoad$$){ilib.CType._load("ctype_l",$sync$$,$loadParams$$,$onLoad$$)};
ilib.CType.isAlnum=function isAlnum($ch$$12_num$$){switch(typeof $ch$$12_num$$){case "number":break;case "string":$ch$$12_num$$=ilib.String.toCodePoint($ch$$12_num$$,0);break;case "undefined":return false;default:$ch$$12_num$$=$ch$$12_num$$._toCodePoint(0)}return ilib.CType.isAlpha($ch$$12_num$$)||ilib.CType.isDigit($ch$$12_num$$)};
ilib.CType.isAlnum._init=function $ilib$CType$isAlnum$_init$($sync$$,$loadParams$$,$onLoad$$){ilib.CType.isAlpha._init($sync$$,$loadParams$$,function(){ilib.CType.isDigit._init($sync$$,$loadParams$$,$onLoad$$)})};
ilib.CType.isAscii=function $ilib$CType$isAscii$($ch$$13_num$$){switch(typeof $ch$$13_num$$){case "number":break;case "string":$ch$$13_num$$=ilib.String.toCodePoint($ch$$13_num$$,0);break;case "undefined":return false;default:$ch$$13_num$$=$ch$$13_num$$._toCodePoint(0)}return ilib.CType._inRange($ch$$13_num$$,"ascii",ilib.data.ctype)};ilib.CType.isAscii._init=function $ilib$CType$isAscii$_init$($sync$$,$loadParams$$,$onLoad$$){ilib.CType._init($sync$$,$loadParams$$,$onLoad$$)};
ilib.CType.isBlank=function $ilib$CType$isBlank$($ch$$14_num$$){switch(typeof $ch$$14_num$$){case "number":break;case "string":$ch$$14_num$$=ilib.String.toCodePoint($ch$$14_num$$,0);break;case "undefined":return false;default:$ch$$14_num$$=$ch$$14_num$$._toCodePoint(0)}return ilib.CType._inRange($ch$$14_num$$,"blank",ilib.data.ctype)};ilib.CType.isBlank._init=function $ilib$CType$isBlank$_init$($sync$$,$loadParams$$,$onLoad$$){ilib.CType._init($sync$$,$loadParams$$,$onLoad$$)};
ilib.data.ctype_c={Cn:[[888,889],[895,899],[907],[909],[930],[1320,1328],[1367,1368],[1376],[1416],[1419,1422],[1424],[1480,1487],[1515,1519],[1525,1535],[1541],[1564,1565],[1806],[1867,1868],[1970,1983],[2043,2047],[2094,2095],[2111],[2140,2141],[2143,2207],[2209],[2221,2275],[2303],[2424],[2432],[2436],[2445,2446],[2449,2450],[2473],[2481],[2483,2485],[2490,2491],[2501,2502],[2505,2506],[2511,2518],[2520,2523],[2526],[2532,2533],[2556,2560],[2564],[2571,2574],[2577,2578],[2601],[2609],[2612],[2615],
[2618,2619],[2621],[2627,2630],[2633,2634],[2638,2640],[2642,2648],[2653],[2655,2661],[2678,2688],[2692],[2702],[2706],[2729],[2737],[2740],[2746,2747],[2758],[2762],[2766,2767],[2769,2783],[2788,2789],[2802,2816],[2820],[2829,2830],[2833,2834],[2857],[2865],[2868],[2874,2875],[2885,2886],[2889,2890],[2894,2901],[2904,2907],[2910],[2916,2917],[2936,2945],[2948],[2955,2957],[2961],[2966,2968],[2971],[2973],[2976,2978],[2981,2983],[2987,2989],[3002,3005],[3011,3013],[3017],[3022,3023],[3025,3030],[3032,
3045],[3067,3072],[3076],[3085],[3089],[3113],[3124],[3130,3132],[3141],[3145],[3150,3156],[3159],[3162,3167],[3172,3173],[3184,3191],[3200,3201],[3204],[3213],[3217],[3241],[3252],[3258,3259],[3269],[3273],[3278,3284],[3287,3293],[3295],[3300,3301],[3312],[3315,3329],[3332],[3341],[3345],[3387,3388],[3397],[3401],[3407,3414],[3416,3423],[3428,3429],[3446,3448],[3456,3457],[3460],[3479,3481],[3506],[3516],[3518,3519],[3527,3529],[3531,3534],[3541],[3543],[3552,3569],[3573,3584],[3643,3646],[3676,
3712],[3715],[3717,3718],[3721],[3723,3724],[3726,3731],[3736],[3744],[3748],[3750],[3752,3753],[3756],[3770],[3774,3775],[3781],[3783],[3790,3791],[3802,3803],[3808,3839],[3912],[3949,3952],[3992],[4029],[4045],[4059,4095],[4294],[4296,4300],[4302,4303],[4681],[4686,4687],[4695],[4697],[4702,4703],[4745],[4750,4751],[4785],[4790,4791],[4799],[4801],[4806,4807],[4823],[4881],[4886,4887],[4955,4956],[4989,4991],[5018,5023],[5109,5119],[5789,5791],[5873,5887],[5901],[5909,5919],[5943,5951],[5972,5983],
[5997],[6001],[6004,6015],[6110,6111],[6122,6127],[6138,6143],[6159],[6170,6175],[6264,6271],[6315,6319],[6390,6399],[6429,6431],[6444,6447],[6460,6463],[6465,6467],[6510,6511],[6517,6527],[6572,6575],[6602,6607],[6619,6621],[6684,6685],[6751],[6781,6782],[6794,6799],[6810,6815],[6830,6911],[6988,6991],[7037,7039],[7156,7163],[7224,7226],[7242,7244],[7296,7359],[7368,7375],[7415,7423],[7655,7675],[7958,7959],[7966,7967],[8006,8007],[8014,8015],[8024],[8026],[8028],[8030],[8062,8063],[8117],[8133],
[8148,8149],[8156],[8176,8177],[8181],[8191],[8293,8297],[8306,8307],[8335],[8349,8351],[8379,8399],[8433,8447],[8586,8591],[9204,9215],[9255,9279],[9291,9311],[9984],[11085,11087],[11098,11263],[11311],[11359],[11508,11512],[11558],[11560,11564],[11566,11567],[11624,11630],[11633,11646],[11671,11679],[11687],[11695],[11703],[11711],[11719],[11727],[11735],[11743],[11836,11903],[11930],[12020,12031],[12246,12271],[12284,12287],[12352],[12439,12440],[12544,12548],[12590,12592],[12687],[12731,12735],
[12772,12783],[12831],[13055],[19894,19903],[40909,40959],[42125,42127],[42183,42191],[42540,42559],[42648,42654],[42744,42751],[42895],[42900,42911],[42923,42999],[43052,43055],[43066,43071],[43128,43135],[43205,43213],[43226,43231],[43260,43263],[43348,43358],[43389,43391],[43470],[43482,43485],[43488,43519],[43575,43583],[43598,43599],[43610,43611],[43644,43647],[43715,43738],[43767,43776],[43783,43784],[43791,43792],[43799,43807],[43815],[43823,43967],[44014,44015],[44026,44031],[55204,55215],
[55239,55242],[55292,55295],[64110,64111],[64218,64255],[64263,64274],[64280,64284],[64311],[64317],[64319],[64322],[64325],[64450,64466],[64832,64847],[64912,64913],[64968,65007],[65022,65023],[65050,65055],[65063,65071],[65107],[65127],[65132,65135],[65141],[65277,65278],[65280],[65471,65473],[65480,65481],[65488,65489],[65496,65497],[65501,65503],[65511],[65519,65528],[65534,65535],[65548],[65575],[65595],[65598],[65614,65615],[65630,65663],[65787,65791],[65795,65798],[65844,65846],[65931,65935],
[65948,65999],[66046,66175],[66205,66207],[66257,66303],[66335],[66340,66351],[66379,66431],[66462],[66500,66503],[66518,66559],[66718,66719],[66730,67583],[67590,67591],[67593],[67638],[67641,67643],[67645,67646],[67670],[67680,67839],[67868,67870],[67898,67902],[67904,67967],[68024,68029],[68032,68095],[68100],[68103,68107],[68116],[68120],[68148,68151],[68155,68158],[68168,68175],[68185,68191],[68224,68351],[68406,68408],[68438,68439],[68467,68471],[68480,68607],[68681,69215],[69247,69631],[69710,
69713],[69744,69759],[69826,69839],[69865,69871],[69882,69887],[69941],[69956,70015],[70089,70095],[70106,71295],[71352,71359],[71370,73727],[74607,74751],[74851,74863],[74868,77823],[78895,92159],[92729,93951],[94021,94031],[94079,94094],[94112,110591],[110594,118783],[119030,119039],[119079,119080],[119262,119295],[119366,119551],[119639,119647],[119666,119807],[119893],[119965],[119968,119969],[119971,119972],[119975,119976],[119981],[119994],[119996],[120004],[120070],[120075,120076],[120085],
[120093],[120122],[120127],[120133],[120135,120137],[120145],[120486,120487],[120780,120781],[120832,126463],[126468],[126496],[126499],[126501,126502],[126504],[126515],[126520],[126522],[126524,126529],[126531,126534],[126536],[126538],[126540],[126544],[126547],[126549,126550],[126552],[126554],[126556],[126558],[126560],[126563],[126565,126566],[126571],[126579],[126584],[126589],[126591],[126602],[126620,126624],[126628],[126634],[126652,126703],[126706,126975],[127020,127023],[127124,127135],
[127151,127152],[127167,127168],[127184],[127200,127231],[127243,127247],[127279],[127340,127343],[127387,127461],[127491,127503],[127547,127551],[127561,127567],[127570,127743],[127777,127791],[127798],[127869,127871],[127892,127903],[127941],[127947,127967],[127985,127999],[128063],[128065],[128248],[128253,128255],[128318,128319],[128324,128335],[128360,128506],[128577,128580],[128592,128639],[128710,128767],[128884,131071],[173783,173823],[177973,177983],[178206,194559],[195102,917504],[917506,
917535],[917632,917759],[918E3,983039],[1048574,1048575],[1114110,1114111]],Cc:[[0,31],[127,159]],Cf:[[173],[1536,1540],[1757],[1807],[8203,8207],[8234,8238],[8288,8292],[8298,8303],[65279],[65529,65531],[69821],[119155,119162],[917505],[917536,917631]],Co:[[57344,63743],[983040,1048573],[1048576,1114109]],Cs:[[55296,57343]]};
ilib.CType.isCntrl=function $ilib$CType$isCntrl$($ch$$15_num$$){switch(typeof $ch$$15_num$$){case "number":break;case "string":$ch$$15_num$$=ilib.String.toCodePoint($ch$$15_num$$,0);break;case "undefined":return false;default:$ch$$15_num$$=$ch$$15_num$$._toCodePoint(0)}return ilib.CType._inRange($ch$$15_num$$,"Cc",ilib.data.ctype_c)};ilib.CType.isCntrl._init=function $ilib$CType$isCntrl$_init$($sync$$,$loadParams$$,$onLoad$$){ilib.CType._load("ctype_c",$sync$$,$loadParams$$,$onLoad$$)};
ilib.CType.isGraph=function $ilib$CType$isGraph$($ch$$){var $num$$;switch(typeof $ch$$){case "number":$num$$=$ch$$;break;case "string":$num$$=ilib.String.toCodePoint($ch$$,0);break;case "undefined":return false;default:$num$$=$ch$$._toCodePoint(0)}return typeof $ch$$!=="undefined"&&$ch$$.length>0&&!ilib.CType.isSpace($num$$)&&!ilib.CType.isCntrl($num$$)};
ilib.CType.isGraph._init=function $ilib$CType$isGraph$_init$($sync$$,$loadParams$$,$onLoad$$){ilib.CType.isSpace._init($sync$$,$loadParams$$,function(){ilib.CType.isCntrl._init($sync$$,$loadParams$$,$onLoad$$)})};
ilib.CType.isIdeo=function $ilib$CType$isIdeo$($ch$$17_num$$){switch(typeof $ch$$17_num$$){case "number":break;case "string":$ch$$17_num$$=ilib.String.toCodePoint($ch$$17_num$$,0);break;case "undefined":return false;default:$ch$$17_num$$=$ch$$17_num$$._toCodePoint(0)}return ilib.CType._inRange($ch$$17_num$$,"cjk",ilib.data.ctype)||ilib.CType._inRange($ch$$17_num$$,"cjkradicals",ilib.data.ctype)||ilib.CType._inRange($ch$$17_num$$,"enclosedcjk",ilib.data.ctype)||ilib.CType._inRange($ch$$17_num$$,"cjkpunct",
ilib.data.ctype)||ilib.CType._inRange($ch$$17_num$$,"cjkcompatibility",ilib.data.ctype)};ilib.CType.isIdeo._init=function $ilib$CType$isIdeo$_init$($sync$$,$loadParams$$,$onLoad$$){ilib.CType._init($sync$$,$loadParams$$,$onLoad$$)};
ilib.CType.isLower=function $ilib$CType$isLower$($ch$$18_num$$){switch(typeof $ch$$18_num$$){case "number":break;case "string":$ch$$18_num$$=ilib.String.toCodePoint($ch$$18_num$$,0);break;case "undefined":return false;default:$ch$$18_num$$=$ch$$18_num$$._toCodePoint(0)}return ilib.CType._inRange($ch$$18_num$$,"Ll",ilib.data.ctype_l)};ilib.CType.isLower._init=function $ilib$CType$isLower$_init$($sync$$,$loadParams$$,$onLoad$$){ilib.CType._load("ctype_l",$sync$$,$loadParams$$,$onLoad$$)};
ilib.CType.isPrint=function $ilib$CType$isPrint$($ch$$){return typeof $ch$$!=="undefined"&&$ch$$.length>0&&!ilib.CType.isCntrl($ch$$)};ilib.CType.isPrint._init=function $ilib$CType$isPrint$_init$($sync$$,$loadParams$$,$onLoad$$){ilib.CType.isCntrl._init($sync$$,$loadParams$$,$onLoad$$)};
ilib.data.ctype_p={Pd:[[45],[1418],[1470],[5120],[6150],[8208,8213],[11799],[11802],[11834,11835],[12316],[12336],[12448],[65073,65074],[65112],[65123],[65293]],Ps:[[40],[91],[123],[3898],[3900],[5787],[8218],[8222],[8261],[8317],[8333],[9001],[10088],[10090],[10092],[10094],[10096],[10098],[10100],[10181],[10214],[10216],[10218],[10220],[10222],[10627],[10629],[10631],[10633],[10635],[10637],[10639],[10641],[10643],[10645],[10647],[10712],[10714],[10748],[11810],[11812],[11814],[11816],[12296],[12298],
[12300],[12302],[12304],[12308],[12310],[12312],[12314],[12317],[64830],[65047],[65077],[65079],[65081],[65083],[65085],[65087],[65089],[65091],[65095],[65113],[65115],[65117],[65288],[65339],[65371],[65375],[65378]],Pe:[[41],[93],[125],[3899],[3901],[5788],[8262],[8318],[8334],[9002],[10089],[10091],[10093],[10095],[10097],[10099],[10101],[10182],[10215],[10217],[10219],[10221],[10223],[10628],[10630],[10632],[10634],[10636],[10638],[10640],[10642],[10644],[10646],[10648],[10713],[10715],[10749],
[11811],[11813],[11815],[11817],[12297],[12299],[12301],[12303],[12305],[12309],[12311],[12313],[12315],[12318,12319],[64831],[65048],[65078],[65080],[65082],[65084],[65086],[65088],[65090],[65092],[65096],[65114],[65116],[65118],[65289],[65341],[65373],[65376],[65379]],Pc:[[95],[8255,8256],[8276],[65075,65076],[65101,65103],[65343]],Po:[[33,35],[37,39],[42],[44],[46,47],[58,59],[63,64],[92],[161],[167],[182,183],[191],[894],[903],[1370,1375],[1417],[1472],[1475],[1478],[1523,1524],[1545,1546],[1548,
1549],[1563],[1566,1567],[1642,1645],[1748],[1792,1805],[2039,2041],[2096,2110],[2142],[2404,2405],[2416],[2800],[3572],[3663],[3674,3675],[3844,3858],[3860],[3973],[4048,4052],[4057,4058],[4170,4175],[4347],[4960,4968],[5741,5742],[5867,5869],[5941,5942],[6100,6102],[6104,6106],[6144,6149],[6151,6154],[6468,6469],[6686,6687],[6816,6822],[6824,6829],[7002,7008],[7164,7167],[7227,7231],[7294,7295],[7360,7367],[7379],[8214,8215],[8224,8231],[8240,8248],[8251,8254],[8257,8259],[8263,8273],[8275],[8277,
8286],[11513,11516],[11518,11519],[11632],[11776,11777],[11782,11784],[11787],[11790,11798],[11800,11801],[11803],[11806,11807],[11818,11822],[11824,11833],[12289,12291],[12349],[12539],[42238,42239],[42509,42511],[42611],[42622],[42738,42743],[43124,43127],[43214,43215],[43256,43258],[43310,43311],[43359],[43457,43469],[43486,43487],[43612,43615],[43742,43743],[43760,43761],[44011],[65040,65046],[65049],[65072],[65093,65094],[65097,65100],[65104,65106],[65108,65111],[65119,65121],[65128],[65130,
65131],[65281,65283],[65285,65287],[65290],[65292],[65294,65295],[65306,65307],[65311,65312],[65340],[65377],[65380,65381],[65792,65794],[66463],[66512],[67671],[67871],[67903],[68176,68184],[68223],[68409,68415],[69703,69709],[69819,69820],[69822,69825],[69952,69955],[70085,70088],[74864,74867]],Pi:[[171],[8216],[8219,8220],[8223],[8249],[11778],[11780],[11785],[11788],[11804],[11808]],Pf:[[187],[8217],[8221],[8250],[11779],[11781],[11786],[11789],[11805],[11809]]};
ilib.CType.isPunct=function $ilib$CType$isPunct$($ch$$20_num$$){switch(typeof $ch$$20_num$$){case "number":break;case "string":$ch$$20_num$$=ilib.String.toCodePoint($ch$$20_num$$,0);break;case "undefined":return false;default:$ch$$20_num$$=$ch$$20_num$$._toCodePoint(0)}return ilib.CType._inRange($ch$$20_num$$,"Pd",ilib.data.ctype_p)||ilib.CType._inRange($ch$$20_num$$,"Ps",ilib.data.ctype_p)||ilib.CType._inRange($ch$$20_num$$,"Pe",ilib.data.ctype_p)||ilib.CType._inRange($ch$$20_num$$,"Pc",ilib.data.ctype_p)||
ilib.CType._inRange($ch$$20_num$$,"Po",ilib.data.ctype_p)||ilib.CType._inRange($ch$$20_num$$,"Pi",ilib.data.ctype_p)||ilib.CType._inRange($ch$$20_num$$,"Pf",ilib.data.ctype_p)};ilib.CType.isPunct._init=function $ilib$CType$isPunct$_init$($sync$$,$loadParams$$,$onLoad$$){ilib.CType._load("ctype_p",$sync$$,$loadParams$$,$onLoad$$)};
ilib.CType.isUpper=function $ilib$CType$isUpper$($ch$$21_num$$){switch(typeof $ch$$21_num$$){case "number":break;case "string":$ch$$21_num$$=ilib.String.toCodePoint($ch$$21_num$$,0);break;case "undefined":return false;default:$ch$$21_num$$=$ch$$21_num$$._toCodePoint(0)}return ilib.CType._inRange($ch$$21_num$$,"Lu",ilib.data.ctype_l)};ilib.CType.isUpper._init=function $ilib$CType$isUpper$_init$($sync$$,$loadParams$$,$onLoad$$){ilib.CType._load("ctype_l",$sync$$,$loadParams$$,$onLoad$$)};
ilib.CType.isXdigit=function $ilib$CType$isXdigit$($ch$$22_num$$){switch(typeof $ch$$22_num$$){case "number":break;case "string":$ch$$22_num$$=ilib.String.toCodePoint($ch$$22_num$$,0);break;case "undefined":return false;default:$ch$$22_num$$=$ch$$22_num$$._toCodePoint(0)}return ilib.CType._inRange($ch$$22_num$$,"xdigit",ilib.data.ctype)};ilib.CType.isXdigit._init=function $ilib$CType$isXdigit$_init$($sync$$,$loadParams$$,$onLoad$$){ilib.CType._init($sync$$,$loadParams$$,$onLoad$$)};
ilib.data.scriptToRange={Zyyy:[[0,64],[91,96],[123,169],[171,185],[187,191],[215],[247],[697,735],[741,745],[748,767],[884],[894],[901],[903],[1417],[1548],[1563],[1567],[1600],[1632,1641],[1757],[2404,2405],[3647],[4053,4056],[4347],[5867,5869],[5941,5942],[6146,6147],[6149],[7379],[7393],[7401,7404],[7406,7411],[7413,7414],[8192,8203],[8206,8292],[8298,8304],[8308,8318],[8320,8334],[8352,8378],[8448,8485],[8487,8489],[8492,8497],[8499,8525],[8527,8543],[8585],[8592,9203],[9216,9254],[9280,9290],
[9312,9983],[9985,10239],[10496,11084],[11088,11097],[11776,11835],[12272,12283],[12288,12292],[12294],[12296,12320],[12336,12343],[12348,12351],[12443,12444],[12448],[12539,12540],[12688,12703],[12736,12771],[12832,12895],[12927,13007],[13144,13311],[19904,19967],[42752,42785],[42888,42890],[43056,43065],[64830,64831],[65021],[65040,65049],[65072,65106],[65108,65126],[65128,65131],[65279],[65281,65312],[65339,65344],[65371,65381],[65392],[65438,65439],[65504,65510],[65512,65518],[65529,65533],[65792,
65794],[65799,65843],[65847,65855],[65936,65947],[66E3,66044],[118784,119029],[119040,119078],[119081,119142],[119146,119162],[119171,119172],[119180,119209],[119214,119261],[119552,119638],[119648,119665],[119808,119892],[119894,119964],[119966,119967],[119970],[119973,119974],[119977,119980],[119982,119993],[119995],[119997,120003],[120005,120069],[120071,120074],[120077,120084],[120086,120092],[120094,120121],[120123,120126],[120128,120132],[120134],[120138,120144],[120146,120485],[120488,120779],
[120782,120831],[126976,127019],[127024,127123],[127136,127150],[127153,127166],[127169,127183],[127185,127199],[127232,127242],[127248,127278],[127280,127339],[127344,127386],[127462,127487],[127489,127490],[127504,127546],[127552,127560],[127568,127569],[127744,127776],[127792,127797],[127799,127868],[127872,127891],[127904,127940],[127942,127946],[127968,127984],[128E3,128062],[128064],[128066,128247],[128249,128252],[128256,128317],[128320,128323],[128336,128359],[128507,128576],[128581,128591],
[128640,128709],[128768,128883],[917505],[917536,917631]],Latn:[[65,90],[97,122],[170],[186],[192,214],[216,246],[248,696],[736,740],[7424,7461],[7468,7516],[7522,7525],[7531,7543],[7545,7614],[7680,7935],[8305],[8319],[8336,8348],[8490,8491],[8498],[8526],[8544,8584],[11360,11391],[42786,42887],[42891,42894],[42896,42899],[42912,42922],[43E3,43007],[64256,64262],[65313,65338],[65345,65370]],Grek:[[880,883],[885,887],[890,893],[900],[902],[904,906],[908],[910,929],[931,993],[1008,1023],[7462,7466],
[7517,7521],[7526,7530],[7615],[7936,7957],[7960,7965],[7968,8005],[8008,8013],[8016,8023],[8025],[8027],[8029],[8031,8061],[8064,8116],[8118,8132],[8134,8147],[8150,8155],[8157,8175],[8178,8180],[8182,8190],[8486],[65856,65930],[119296,119365]],Cyrl:[[1024,1156],[1159,1319],[7467],[7544],[11744,11775],[42560,42647],[42655]],Armn:[[1329,1366],[1369,1375],[1377,1415],[1418],[1423],[64275,64279]],Hebr:[[1425,1479],[1488,1514],[1520,1524],[64285,64310],[64312,64316],[64318],[64320,64321],[64323,64324],
[64326,64335]],Arab:[[1536,1540],[1542,1547],[1549,1562],[1566],[1568,1599],[1601,1610],[1622,1631],[1642,1647],[1649,1756],[1758,1791],[1872,1919],[2208],[2210,2220],[2276,2302],[64336,64449],[64467,64829],[64848,64911],[64914,64967],[65008,65020],[65136,65140],[65142,65276],[69216,69246],[126464,126467],[126469,126495],[126497,126498],[126500],[126503],[126505,126514],[126516,126519],[126521],[126523],[126530],[126535],[126537],[126539],[126541,126543],[126545,126546],[126548],[126551],[126553],
[126555],[126557],[126559],[126561,126562],[126564],[126567,126570],[126572,126578],[126580,126583],[126585,126588],[126590],[126592,126601],[126603,126619],[126625,126627],[126629,126633],[126635,126651],[126704,126705]],Syrc:[[1792,1805],[1807,1866],[1869,1871]],Thaa:[[1920,1969]],Deva:[[2304,2384],[2387,2403],[2406,2423],[2425,2431],[43232,43259]],Beng:[[2433,2435],[2437,2444],[2447,2448],[2451,2472],[2474,2480],[2482],[2486,2489],[2492,2500],[2503,2504],[2507,2510],[2519],[2524,2525],[2527,2531],
[2534,2555]],Guru:[[2561,2563],[2565,2570],[2575,2576],[2579,2600],[2602,2608],[2610,2611],[2613,2614],[2616,2617],[2620],[2622,2626],[2631,2632],[2635,2637],[2641],[2649,2652],[2654],[2662,2677]],Gujr:[[2689,2691],[2693,2701],[2703,2705],[2707,2728],[2730,2736],[2738,2739],[2741,2745],[2748,2757],[2759,2761],[2763,2765],[2768],[2784,2787],[2790,2801]],Orya:[[2817,2819],[2821,2828],[2831,2832],[2835,2856],[2858,2864],[2866,2867],[2869,2873],[2876,2884],[2887,2888],[2891,2893],[2902,2903],[2908,2909],
[2911,2915],[2918,2935]],Taml:[[2946,2947],[2949,2954],[2958,2960],[2962,2965],[2969,2970],[2972],[2974,2975],[2979,2980],[2984,2986],[2990,3001],[3006,3010],[3014,3016],[3018,3021],[3024],[3031],[3046,3066]],Telu:[[3073,3075],[3077,3084],[3086,3088],[3090,3112],[3114,3123],[3125,3129],[3133,3140],[3142,3144],[3146,3149],[3157,3158],[3160,3161],[3168,3171],[3174,3183],[3192,3199]],Knda:[[3202,3203],[3205,3212],[3214,3216],[3218,3240],[3242,3251],[3253,3257],[3260,3268],[3270,3272],[3274,3277],[3285,
3286],[3294],[3296,3299],[3302,3311],[3313,3314]],Mlym:[[3330,3331],[3333,3340],[3342,3344],[3346,3386],[3389,3396],[3398,3400],[3402,3406],[3415],[3424,3427],[3430,3445],[3449,3455]],Sinh:[[3458,3459],[3461,3478],[3482,3505],[3507,3515],[3517],[3520,3526],[3530],[3535,3540],[3542],[3544,3551],[3570,3572]],Thai:[[3585,3642],[3648,3675]],Laoo:[[3713,3714],[3716],[3719,3720],[3722],[3725],[3732,3735],[3737,3743],[3745,3747],[3749],[3751],[3754,3755],[3757,3769],[3771,3773],[3776,3780],[3782],[3784,
3789],[3792,3801],[3804,3807]],Tibt:[[3840,3911],[3913,3948],[3953,3991],[3993,4028],[4030,4044],[4046,4052],[4057,4058]],Mymr:[[4096,4255],[43616,43643]],Geok:[[4256,4293],[4295],[4301],[4304,4346],[4348,4351],[11520,11557],[11559],[11565]],Hang:[[4352,4607],[12334,12335],[12593,12686],[12800,12830],[12896,12926],[43360,43388],[44032,55203],[55216,55238],[55243,55291],[65440,65470],[65474,65479],[65482,65487],[65490,65495],[65498,65500]],Ethi:[[4608,4680],[4682,4685],[4688,4694],[4696],[4698,4701],
[4704,4744],[4746,4749],[4752,4784],[4786,4789],[4792,4798],[4800],[4802,4805],[4808,4822],[4824,4880],[4882,4885],[4888,4954],[4957,4988],[4992,5017],[11648,11670],[11680,11686],[11688,11694],[11696,11702],[11704,11710],[11712,11718],[11720,11726],[11728,11734],[11736,11742],[43777,43782],[43785,43790],[43793,43798],[43808,43814],[43816,43822]],Cher:[[5024,5108]],Cans:[[5120,5759],[6320,6389]],Ogam:[[5760,5788]],Runr:[[5792,5866],[5870,5872]],Khmr:[[6016,6109],[6112,6121],[6128,6137],[6624,6655]],
Mong:[[6144,6145],[6148],[6150,6158],[6160,6169],[6176,6263],[6272,6314]],Hira:[[12353,12438],[12445,12447],[110593],[127488]],Kana:[[12449,12538],[12541,12543],[12784,12799],[13008,13054],[13056,13143],[65382,65391],[65393,65437],[110592]],Bopo:[[746,747],[12549,12589],[12704,12730]],Hani:[[11904,11929],[11931,12019],[12032,12245],[12293],[12295],[12321,12329],[12344,12347],[13312,19893],[19968,40908],[63744,64109],[64112,64217],[131072,173782],[173824,177972],[177984,178205],[194560,195101]],Yiii:[[40960,
42124],[42128,42182]],Ital:[[66304,66334],[66336,66339]],Goth:[[66352,66378]],Dsrt:[[66560,66639]],Zinh:[[768,879],[1157,1158],[1611,1621],[1648],[2385,2386],[7376,7378],[7380,7392],[7394,7400],[7405],[7412],[7616,7654],[7676,7679],[8204,8205],[8400,8432],[12330,12333],[12441,12442],[65024,65039],[65056,65062],[66045],[119143,119145],[119163,119170],[119173,119179],[119210,119213],[917760,917999]],Tglg:[[5888,5900],[5902,5908]],Hano:[[5920,5940]],Buhd:[[5952,5971]],Tagb:[[5984,5996],[5998,6E3],[6002,
6003]],Limb:[[6400,6428],[6432,6443],[6448,6459],[6464],[6468,6479]],Tale:[[6480,6509],[6512,6516]],Linb:[[65536,65547],[65549,65574],[65576,65594],[65596,65597],[65599,65613],[65616,65629],[65664,65786]],Ugar:[[66432,66461],[66463]],Shaw:[[66640,66687]],Osma:[[66688,66717],[66720,66729]],Cprt:[[67584,67589],[67592],[67594,67637],[67639,67640],[67644],[67647]],Brai:[[10240,10495]],Bugi:[[6656,6683],[6686,6687]],Copt:[[994,1007],[11392,11507],[11513,11519]],Talu:[[6528,6571],[6576,6601],[6608,6618],
[6622,6623]],Glag:[[11264,11310],[11312,11358]],Tfng:[[11568,11623],[11631,11632],[11647]],Sylo:[[43008,43051]],Xpeo:[[66464,66499],[66504,66517]],Khar:[[68096,68099],[68101,68102],[68108,68115],[68117,68119],[68121,68147],[68152,68154],[68159,68167],[68176,68184]],Bali:[[6912,6987],[6992,7036]],Xsux:[[73728,74606],[74752,74850],[74864,74867]],Phnx:[[67840,67867],[67871]],Phag:[[43072,43127]],Nkoo:[[1984,2042]],Sund:[[7040,7103],[7360,7367]],Lepc:[[7168,7223],[7227,7241],[7245,7247]],Olck:[[7248,
7295]],Vaii:[[42240,42539]],Saur:[[43136,43204],[43214,43225]],Kali:[[43264,43311]],Rjng:[[43312,43347],[43359]],Lyci:[[66176,66204]],Cari:[[66208,66256]],Lydi:[[67872,67897],[67903]],Cham:[[43520,43574],[43584,43597],[43600,43609],[43612,43615]],Lana:[[6688,6750],[6752,6780],[6783,6793],[6800,6809],[6816,6829]],Tavt:[[43648,43714],[43739,43743]],Avst:[[68352,68405],[68409,68415]],Egyp:[[77824,78894]],Samr:[[2048,2093],[2096,2110]],Lisu:[[42192,42239]],Bamu:[[42656,42743],[92160,92728]],Java:[[43392,
43469],[43471,43481],[43486,43487]],Mtei:[[43744,43766],[43968,44013],[44016,44025]],Armi:[[67648,67669],[67671,67679]],Sarb:[[68192,68223]],Prti:[[68416,68437],[68440,68447]],Phli:[[68448,68466],[68472,68479]],Orkh:[[68608,68680]],Kthi:[[69760,69825]],Batk:[[7104,7155],[7164,7167]],Brah:[[69632,69709],[69714,69743]],Mand:[[2112,2139],[2142]],Cakm:[[69888,69940],[69942,69955]],Merc:[[68E3,68023],[68030,68031]],Mero:[[67968,67999]],Plrd:[[93952,94020],[94032,94078],[94095,94111]],Shrd:[[70016,70088],
[70096,70105]],Sora:[[69840,69864],[69872,69881]],Takr:[[71296,71351],[71360,71369]]};ilib.CType.isScript=function $ilib$CType$isScript$($ch$$,$script$$){var $num$$;switch(typeof $ch$$){case "number":$num$$=$ch$$;break;case "string":$num$$=ilib.String.toCodePoint($ch$$,0);break;case "undefined":return false;default:$num$$=$ch$$._toCodePoint(0)}return ilib.CType._inRange($num$$,$script$$,ilib.data.scriptToRange)};
ilib.CType.isScript._init=function $ilib$CType$isScript$_init$($sync$$,$loadParams$$,$onLoad$$){ilib.CType._load("scriptToRange",$sync$$,$loadParams$$,$onLoad$$)};
ilib.data.scripts={Afak:{nb:439,nm:"Afaka",lid:"Afaka"},Aghb:{nb:239,nm:"Caucasian Albanian",lid:"Caucasian_Albanian"},Arab:{nb:160,nm:"Arabic",lid:"Arabic",rtl:!0,ime:!1,casing:!1},Armi:{nb:124,nm:"Imperial Aramaic",lid:"Imperial_Aramaic",rtl:!0,ime:!1,casing:!1},Armn:{nb:230,nm:"Armenian",lid:"Armenian",rtl:!1,ime:!1,casing:!0},Avst:{nb:134,nm:"Avestan",lid:"Avestan",rtl:!0,ime:!1,casing:!1},Bali:{nb:360,nm:"Balinese",lid:"Balinese",rtl:!1,ime:!1,casing:!1},Bamu:{nb:435,nm:"Bamum",lid:"Bamum",rtl:!1,
ime:!0,casing:!1},Bass:{nb:259,nm:"Bassa Vah",lid:"Bassa_Vah"},Batk:{nb:365,nm:"Batak",lid:"Batak",rtl:!1,ime:!1,casing:!1},Beng:{nb:325,nm:"Bengali",lid:"Bengali",rtl:!1,ime:!1,casing:!1},Blis:{nb:550,nm:"Blissymbols",lid:"Blissymbols"},Bopo:{nb:285,nm:"Bopomofo",lid:"Bopomofo",rtl:!1,ime:!1,casing:!1},Brah:{nb:300,nm:"Brahmi",lid:"Brahmi",rtl:!1,ime:!1,casing:!1},Brai:{nb:570,nm:"Braille",lid:"Braille",rtl:!1,ime:!1,casing:!1},Bugi:{nb:367,nm:"Buginese",lid:"Buginese",rtl:!1,ime:!1,casing:!1},Buhd:{nb:372,
nm:"Buhid",lid:"Buhid",rtl:!1,ime:!1,casing:!1},Cakm:{nb:349,nm:"Chakma",lid:"Chakma",rtl:!1,ime:!1,casing:!1},Cans:{nb:440,nm:"Unified Canadian Aboriginal Syllabics",lid:"Canadian_Aboriginal",rtl:!1,ime:!0,casing:!1},Cari:{nb:201,nm:"Carian",lid:"Carian",rtl:!1,ime:!1,casing:!1},Cham:{nb:358,nm:"Cham",lid:"Cham",rtl:!1,ime:!1,casing:!1},Cher:{nb:445,nm:"Cherokee",lid:"Cherokee",rtl:!1,ime:!1,casing:!1},Cirt:{nb:291,nm:"Cirth",lid:"Cirth"},Copt:{nb:204,nm:"Coptic",lid:"Coptic",rtl:!1,ime:!1,casing:!0},
Cprt:{nb:403,nm:"Cypriot",lid:"Cypriot",rtl:!0,ime:!1,casing:!1},Cyrl:{nb:220,nm:"Cyrillic",lid:"Cyrillic",rtl:!1,ime:!1,casing:!0},Cyrs:{nb:221,nm:"Cyrillic (Old Church Slavonic variant)",lid:"Cyrillic_(Old_Church_Slavonic_variant)"},Deva:{nb:315,nm:"Devanagari (Nagari)",lid:"Devanagari",rtl:!1,ime:!1,casing:!1},Dsrt:{nb:250,nm:"Deseret (Mormon)",lid:"Deseret",rtl:!1,ime:!1,casing:!0},Dupl:{nb:755,nm:"Duployan shorthand, Duployan stenography",lid:"Duployan_shorthand,_Duployan_stenography"},Egyd:{nb:70,
nm:"Egyptian demotic",lid:"Egyptian_demotic"},Egyh:{nb:60,nm:"Egyptian hieratic",lid:"Egyptian_hieratic"},Egyp:{nb:50,nm:"Egyptian hieroglyphs",lid:"Egyptian_Hieroglyphs",rtl:!1,ime:!0,casing:!1},Elba:{nb:226,nm:"Elbasan",lid:"Elbasan"},Ethi:{nb:430,nm:"Ethiopic (Ge\u02bbez)",lid:"Ethiopic",rtl:!1,ime:!0,casing:!1},Geor:{nb:240,nm:"Georgian (Mkhedruli)",lid:"Georgian",rtl:!1,ime:!1,casing:!1},Geok:{nb:241,nm:"Khutsuri (Asomtavruli and Nuskhuri)",lid:"Georgian"},Glag:{nb:225,nm:"Glagolitic",lid:"Glagolitic",
rtl:!1,ime:!1,casing:!0},Goth:{nb:206,nm:"Gothic",lid:"Gothic",rtl:!1,ime:!1,casing:!1},Gran:{nb:343,nm:"Grantha",lid:"Grantha"},Grek:{nb:200,nm:"Greek",lid:"Greek",rtl:!1,ime:!1,casing:!0},Gujr:{nb:320,nm:"Gujarati",lid:"Gujarati",rtl:!1,ime:!1,casing:!1},Guru:{nb:310,nm:"Gurmukhi",lid:"Gurmukhi",rtl:!1,ime:!1,casing:!1},Hang:{nb:286,nm:"Hangul (Hang\u016dl, Hangeul)",lid:"Hangul",rtl:!1,ime:!0,casing:!1},Hani:{nb:500,nm:"Han (Hanzi, Kanji, Hanja)",lid:"Han",rtl:!1,ime:!0,casing:!1},Hano:{nb:371,
nm:"Hanunoo (Hanun\u00f3o)",lid:"Hanunoo",rtl:!1,ime:!1,casing:!1},Hans:{nb:501,nm:"Han (Simplified variant)",lid:"Han_(Simplified_variant)",rtl:!1,ime:!0,casing:!1},Hant:{nb:502,nm:"Han (Traditional variant)",lid:"Han_(Traditional_variant)",rtl:!1,ime:!0,casing:!1},Hebr:{nb:125,nm:"Hebrew",lid:"Hebrew",rtl:!0,ime:!1,casing:!1},Hira:{nb:410,nm:"Hiragana",lid:"Hiragana",rtl:!1,ime:!1,casing:!1},Hluw:{nb:80,nm:"Anatolian Hieroglyphs (Luwian Hieroglyphs, Hittite Hieroglyphs)",lid:"Anatolian_Hieroglyphs_(Luwian_Hieroglyphs,_Hittite_Hieroglyphs)"},
Hmng:{nb:450,nm:"Pahawh Hmong",lid:"Pahawh_Hmong"},Hrkt:{nb:412,nm:"Japanese syllabaries (alias for Hiragana + Katakana)",lid:"Katakana_Or_Hiragana"},Hung:{nb:176,nm:"Old Hungarian (Hungarian Runic)",lid:"Old_Hungarian_(Hungarian_Runic)"},Inds:{nb:610,nm:"Indus (Harappan)",lid:"Indus_(Harappan)"},Ital:{nb:210,nm:"Old Italic (Etruscan, Oscan, etc.)",lid:"Old_Italic",rtl:!1,ime:!1,casing:!1},Java:{nb:361,nm:"Javanese",lid:"Javanese",rtl:!1,ime:!1,casing:!1},Jpan:{nb:413,nm:"Japanese (alias for Han + Hiragana + Katakana)",
lid:"Japanese_(alias_for_Han_+_Hiragana_+_Katakana)",rtl:!1,ime:!1,casing:!1},Jurc:{nb:510,nm:"Jurchen",lid:"Jurchen"},Kali:{nb:357,nm:"Kayah Li",lid:"Kayah_Li",rtl:!1,ime:!1,casing:!1},Kana:{nb:411,nm:"Katakana",lid:"Katakana",rtl:!1,ime:!1,casing:!1},Khar:{nb:305,nm:"Kharoshthi",lid:"Kharoshthi",rtl:!0,ime:!1,casing:!1},Khmr:{nb:355,nm:"Khmer",lid:"Khmer",rtl:!1,ime:!1,casing:!1},Khoj:{nb:322,nm:"Khojki",lid:"Khojki"},Knda:{nb:345,nm:"Kannada",lid:"Kannada",rtl:!1,ime:!1,casing:!1},Kore:{nb:287,
nm:"Korean (alias for Hangul + Han)",lid:"Korean_(alias_for_Hangul_+_Han)",rtl:!1,ime:!0,casing:!1},Kpel:{nb:436,nm:"Kpelle",lid:"Kpelle"},Kthi:{nb:317,nm:"Kaithi",lid:"Kaithi",rtl:!1,ime:!1,casing:!1},Lana:{nb:351,nm:"Tai Tham (Lanna)",lid:"Tai_Tham",rtl:!1,ime:!1,casing:!1},Laoo:{nb:356,nm:"Lao",lid:"Lao",rtl:!1,ime:!1,casing:!1},Latf:{nb:217,nm:"Latin (Fraktur variant)",lid:"Latin_(Fraktur_variant)"},Latg:{nb:216,nm:"Latin (Gaelic variant)",lid:"Latin_(Gaelic_variant)"},Latn:{nb:215,nm:"Latin",
lid:"Latin",rtl:!1,ime:!1,casing:!0},Lepc:{nb:335,nm:"Lepcha (R\u00f3ng)",lid:"Lepcha",rtl:!1,ime:!1,casing:!1},Limb:{nb:336,nm:"Limbu",lid:"Limbu",rtl:!1,ime:!1,casing:!1},Lina:{nb:400,nm:"Linear A",lid:"Linear_A"},Linb:{nb:401,nm:"Linear B",lid:"Linear_B",rtl:!1,ime:!0,casing:!1},Lisu:{nb:399,nm:"Lisu (Fraser)",lid:"Lisu",rtl:!1,ime:!0,casing:!1},Loma:{nb:437,nm:"Loma",lid:"Loma"},Lyci:{nb:202,nm:"Lycian",lid:"Lycian",rtl:!1,ime:!1,casing:!1},Lydi:{nb:116,nm:"Lydian",lid:"Lydian",rtl:!0,ime:!1,
casing:!1},Mahj:{nb:314,nm:"Mahajani",lid:"Mahajani"},Mand:{nb:140,nm:"Mandaic, Mandaean",lid:"Mandaic",rtl:!0,ime:!1,casing:!1},Mani:{nb:139,nm:"Manichaean",lid:"Manichaean"},Maya:{nb:90,nm:"Mayan hieroglyphs",lid:"Mayan_hieroglyphs"},Mend:{nb:438,nm:"Mende",lid:"Mende"},Merc:{nb:101,nm:"Meroitic Cursive",lid:"Meroitic_Cursive",rtl:!0,ime:!1,casing:!1},Mero:{nb:100,nm:"Meroitic Hieroglyphs",lid:"Meroitic_Hieroglyphs",rtl:!0,ime:!1,casing:!1},Mlym:{nb:347,nm:"Malayalam",lid:"Malayalam",rtl:!1,ime:!1,
casing:!1},Moon:{nb:218,nm:"Moon (Moon code, Moon script, Moon type)",lid:"Moon_(Moon_code,_Moon_script,_Moon_type)"},Mong:{nb:145,nm:"Mongolian",lid:"Mongolian",rtl:!1,ime:!1,casing:!1},Mroo:{nb:199,nm:"Mro, Mru",lid:"Mro,_Mru"},Mtei:{nb:337,nm:"Meitei Mayek (Meithei, Meetei)",lid:"Meetei_Mayek",rtl:!1,ime:!1,casing:!1},Mymr:{nb:350,nm:"Myanmar (Burmese)",lid:"Myanmar",rtl:!1,ime:!1,casing:!1},Narb:{nb:106,nm:"Old North Arabian (Ancient North Arabian)",lid:"Old_North_Arabian_(Ancient_North_Arabian)"},
Nbat:{nb:159,nm:"Nabataean",lid:"Nabataean"},Nkgb:{nb:420,nm:"Nakhi Geba ('Na-'Khi \u00b2Gg\u014f-\u00b9baw, Naxi Geba)",lid:"Nakhi_Geba_('Na-'Khi_\u00b2Gg\u014f-\u00b9baw,_Naxi_Geba)"},Nkoo:{nb:165,nm:"N\u2019Ko",lid:"Nko",rtl:!0,ime:!1,casing:!1},Nshu:{nb:499,nm:"N\u00fcshu",lid:"N\u00fcshu"},Ogam:{nb:212,nm:"Ogham",lid:"Ogham",rtl:!1,ime:!1,casing:!1},Olck:{nb:261,nm:"Ol Chiki (Ol Cemet\u2019, Ol, Santali)",lid:"Ol_Chiki",rtl:!1,ime:!1,casing:!1},Orkh:{nb:175,nm:"Old Turkic, Orkhon Runic",lid:"Old_Turkic",
rtl:!0,ime:!1,casing:!1},Orya:{nb:327,nm:"Oriya",lid:"Oriya",rtl:!1,ime:!1,casing:!1},Osma:{nb:260,nm:"Osmanya",lid:"Osmanya",rtl:!1,ime:!1,casing:!1},Palm:{nb:126,nm:"Palmyrene",lid:"Palmyrene"},Perm:{nb:227,nm:"Old Permic",lid:"Old_Permic"},Phag:{nb:331,nm:"Phags-pa",lid:"Phags_Pa",rtl:!1,ime:!1,casing:!1},Phli:{nb:131,nm:"Inscriptional Pahlavi",lid:"Inscriptional_Pahlavi",rtl:!0,ime:!1,casing:!1},Phlp:{nb:132,nm:"Psalter Pahlavi",lid:"Psalter_Pahlavi"},Phlv:{nb:133,nm:"Book Pahlavi",lid:"Book_Pahlavi"},
Phnx:{nb:115,nm:"Phoenician",lid:"Phoenician",rtl:!0,ime:!1,casing:!1},Plrd:{nb:282,nm:"Miao (Pollard)",lid:"Miao",rtl:!1,ime:!1,casing:!1},Prti:{nb:130,nm:"Inscriptional Parthian",lid:"Inscriptional_Parthian",rtl:!0,ime:!1,casing:!1},Qaaa:{nb:900,nm:"Reserved for private use (start)",lid:"Reserved_for_private_use_(start)"},Qabx:{nb:949,nm:"Reserved for private use (end)",lid:"Reserved_for_private_use_(end)"},Rjng:{nb:363,nm:"Rejang (Redjang, Kaganga)",lid:"Rejang",rtl:!1,ime:!1,casing:!1},Roro:{nb:620,
nm:"Rongorongo",lid:"Rongorongo"},Runr:{nb:211,nm:"Runic",lid:"Runic",rtl:!1,ime:!1,casing:!1},Samr:{nb:123,nm:"Samaritan",lid:"Samaritan",rtl:!0,ime:!1,casing:!1},Sara:{nb:292,nm:"Sarati",lid:"Sarati"},Sarb:{nb:105,nm:"Old South Arabian",lid:"Old_South_Arabian",rtl:!0,ime:!1,casing:!1},Saur:{nb:344,nm:"Saurashtra",lid:"Saurashtra",rtl:!1,ime:!1,casing:!1},Sgnw:{nb:95,nm:"SignWriting",lid:"SignWriting"},Shaw:{nb:281,nm:"Shavian (Shaw)",lid:"Shavian",rtl:!1,ime:!1,casing:!1},Shrd:{nb:319,nm:"Sharada, \u015a\u0101rad\u0101",
lid:"Sharada",rtl:!1,ime:!1,casing:!1},Sind:{nb:318,nm:"Khudawadi, Sindhi",lid:"Khudawadi,_Sindhi"},Sinh:{nb:348,nm:"Sinhala",lid:"Sinhala",rtl:!1,ime:!1,casing:!1},Sora:{nb:398,nm:"Sora Sompeng",lid:"Sora_Sompeng",rtl:!1,ime:!1,casing:!1},Sund:{nb:362,nm:"Sundanese",lid:"Sundanese",rtl:!1,ime:!1,casing:!1},Sylo:{nb:316,nm:"Syloti Nagri",lid:"Syloti_Nagri",rtl:!1,ime:!1,casing:!1},Syrc:{nb:135,nm:"Syriac",lid:"Syriac",rtl:!0,ime:!1,casing:!1},Syre:{nb:138,nm:"Syriac (Estrangelo variant)",lid:"Syriac_(Estrangelo_variant)"},
Syrj:{nb:137,nm:"Syriac (Western variant)",lid:"Syriac_(Western_variant)"},Syrn:{nb:136,nm:"Syriac (Eastern variant)",lid:"Syriac_(Eastern_variant)"},Tagb:{nb:373,nm:"Tagbanwa",lid:"Tagbanwa",rtl:!1,ime:!1,casing:!1},Takr:{nb:321,nm:"Takri, \u1e6c\u0101kr\u012b, \u1e6c\u0101\u1e45kr\u012b",lid:"Takri",rtl:!1,ime:!1,casing:!1},Tale:{nb:353,nm:"Tai Le",lid:"Tai_Le",rtl:!1,ime:!1,casing:!1},Talu:{nb:354,nm:"New Tai Lue",lid:"New_Tai_Lue",rtl:!1,ime:!1,casing:!1},Taml:{nb:346,nm:"Tamil",lid:"Tamil",rtl:!1,
ime:!1,casing:!1},Tang:{nb:520,nm:"Tangut",lid:"Tangut"},Tavt:{nb:359,nm:"Tai Viet",lid:"Tai_Viet",rtl:!1,ime:!1,casing:!1},Telu:{nb:340,nm:"Telugu",lid:"Telugu",rtl:!1,ime:!1,casing:!1},Teng:{nb:290,nm:"Tengwar",lid:"Tengwar"},Tfng:{nb:120,nm:"Tifinagh (Berber)",lid:"Tifinagh",rtl:!1,ime:!1,casing:!1},Tglg:{nb:370,nm:"Tagalog (Baybayin, Alibata)",lid:"Tagalog",rtl:!1,ime:!1,casing:!1},Thaa:{nb:170,nm:"Thaana",lid:"Thaana",rtl:!0,ime:!1,casing:!1},Thai:{nb:352,nm:"Thai",lid:"Thai",rtl:!1,ime:!1,casing:!1},
Tibt:{nb:330,nm:"Tibetan",lid:"Tibetan",rtl:!1,ime:!1,casing:!1},Tirh:{nb:326,nm:"Tirhuta",lid:"Tirhuta"},Ugar:{nb:40,nm:"Ugaritic",lid:"Ugaritic",rtl:!1,ime:!1,casing:!1},Vaii:{nb:470,nm:"Vai",lid:"Vai",rtl:!1,ime:!0,casing:!1},Visp:{nb:280,nm:"Visible Speech",lid:"Visible_Speech"},Wara:{nb:262,nm:"Warang Citi (Varang Kshiti)",lid:"Warang_Citi_(Varang_Kshiti)"},Wole:{nb:480,nm:"Woleai",lid:"Woleai"},Xpeo:{nb:30,nm:"Old Persian",lid:"Old_Persian",rtl:!1,ime:!1,casing:!1},Xsux:{nb:20,nm:"Cuneiform, Sumero-Akkadian",
lid:"Cuneiform",rtl:!1,ime:!0,casing:!1},Yiii:{nb:460,nm:"Yi",lid:"Yi",rtl:!1,ime:!0,casing:!1},Zinh:{nb:994,nm:"Code for inherited script",lid:"Inherited",rtl:!1,ime:!1,casing:!1},Zmth:{nb:995,nm:"Mathematical notation",lid:"Mathematical_notation"},Zsym:{nb:996,nm:"Symbols",lid:"Symbols"},Zxxx:{nb:997,nm:"Code for unwritten documents",lid:"Code_for_unwritten_documents"},Zyyy:{nb:998,nm:"Code for undetermined script",lid:"Common",rtl:!1,ime:!1,casing:!1},Zzzz:{nb:999,nm:"Code for uncoded script",
lid:"Unknown",rtl:!1,ime:!1,casing:!1}};
ilib.ScriptInfo=function $ilib$ScriptInfo$($script$$,$options$$){var $sync$$=true,$loadParams$$=void 0;this.script=$script$$;if($options$$){typeof $options$$.sync!=="undefined"&&($sync$$=$options$$.sync==true);if(typeof $options$$.loadParams!=="undefined")$loadParams$$=$options$$.loadParams}if(!ilib.ScriptInfo.cache)ilib.ScriptInfo.cache={};ilib.data.scripts?this.info=ilib.data.scripts[$script$$]:ilib.loadData({object:ilib.ScriptInfo,locale:"-",name:"scripts.json",sync:$sync$$,loadParams:$loadParams$$,
callback:ilib.bind(this,function($info$$){if(!$info$$){var $info$$={Latn:{nb:215,nm:"Latin",lid:"Latin",rtl:false,ime:false,casing:true}},$spec$$=this.locale.getSpec().replace(/-/g,"_");ilib.ScriptInfo.cache[$spec$$]=$info$$}ilib.data.scripts=$info$$;this.info=$script$$&&ilib.data.scripts[$script$$];if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad(this)})})};
ilib.ScriptInfo.getAllScripts=function $ilib$ScriptInfo$getAllScripts$(){var $ret$$=[],$script$$=void 0,$scripts$$=ilib.data.scripts;for($script$$ in $scripts$$)$script$$&&$scripts$$[$script$$]&&$ret$$.push($script$$);return $ret$$};
ilib.ScriptInfo.prototype={getCode:function $ilib$ScriptInfo$$getCode$(){return this.info&&this.script},getCodeNumber:function $ilib$ScriptInfo$$getCodeNumber$(){return this.info&&this.info.nb||0},getName:function $ilib$ScriptInfo$$getName$(){return this.info&&this.info.nm},getLongCode:function $ilib$ScriptInfo$$getLongCode$(){return this.info&&this.info.lid},getScriptDirection:function $ilib$ScriptInfo$$getScriptDirection$(){return this.info&&typeof this.info.rtl!=="undefined"&&this.info.rtl?"rtl":
"ltr"},getNeedsIME:function $ilib$ScriptInfo$$getNeedsIME$(){return this.info&&this.info.ime?true:false},getCasing:function $ilib$ScriptInfo$$getCasing$(){return this.info&&this.info.casing?true:false}};
ilib.data.name={components:{"short":{g:1,f:1},medium:{g:1,m:1,f:1},"long":{p:1,g:1,m:1,f:1},full:{p:1,g:1,m:1,f:1,s:1}},format:"{prefix} {givenName} {middleName} {familyName}{suffix}",sortByHeadWord:!1,nameStyle:"western",conjunctions:{and1:"and",and2:"and",or1:"or",or2:"or"},auxillaries:{mac:1,mc:1,von:1,"von der":1,"von den":1,vom:1,zu:1,zum:1,zur:1,"von und zu":1,van:1,"van der":1,"van de":1,"van den":1,de:1,den:1,vande:1,vander:1,di:1,da:1,della:1,dalla:1,la:1,lo:1,li:1,del:1,des:1,le:1,les:1,
du:1,"de la":1,"de los":1,"de las":1,"do":1,abu:1,ibn:1,bar:1,ter:1,ben:1,bin:1},prefixes:"doctor dr mr mrs ms mister madame madamoiselle miss herr hr frau fr fraulein frl monsieur mssr mdm mlle se\u00f1or se\u00f1ora se\u00f1orita sr sra srta meneer mevrouw".split(" "),suffixes:", junior jr senior sr i iii iii iv v vi vii viii ix x 2nd 3rd 4th 5th 6th 7th 8th 9th 10th esq phd md ddm dds".split(" ")};
ilib.data.name_en={prefixes:"rep;representative;senator;congressman;congresswoman;president;vice president;vice-president;mp;member of parliament;chief;justice;chief justice;judge;minister;prime minister;governor general;lieutenant governor;speaker of the house of commons;speaker of the house;speaker of the senate;supreme court justice;secretary of state;mayor;justice of the peace;emporer;chairman;chairwoman;alderman;general secretary;ambassador;minister;cardinal;bishop;archbishop;rabbi;grand rabbi;mulah;mullah;canon;cantor;pastor;ps;monsignor;mgsr;pope;chef;master;coach;professor;prof;nobel laureate;king;queen;prince;princess;crown prince;crown princess;marquess;marchioness;earl;countess;count;archduke;duke;duchess;baron;baroness;viscount;private;private first class;corporal;sargeant;staff sargeant;sargeant first class;master sargeant;first sargeant;sargeant major;command sargeant major;sargeant major of the army;pv1;pv2;pfc;spc;cpl;sgt;ssg;sfc;msg;1sg;sgm;csm;sma;warrant officer;chief warrant officer;second lieutenant;first lieutenant;captain;major;lieutenant colonel;colonel;brigadier general;major general;lieutenant general;general;2lt;1lt;cpt;maj;ltc;col;bg;mg;ltg;gen;general of the army;fleet admiral;admiral;vice admiral;rear admiral;commander;lieutenant commander;lieutenant;lieutenant (junior grade);ensign;fadm;adm;vadm;radm;rdml;capt;cdr;lcdr;lt;ltjg;ens;petty officer;petty officer first class;petty officer second class;petty officer third class;petty officer 1st class;petty officer 2nd class;petty officer 3rd class;po;po1;po2;po3;chief petty officer;senior chief petty officer;master chief petty officer;cpo;scpo;mcpo;command master chief petty officer;fleet master chief petty officer;force master chief petty officer;cmdcm;fltcm;forcm;master chief petty officer of the navy;mcpon;sergeant major of the marine corps;master gunnery sergeant;gunnery sergeant;lance corporal;sgtmaj;mgysgt;1stsgt;msgt;gysgt;ssgt;sgt;cpl;lcpl;pfc;pvt;airman basic;airman;airman first class;senior airman;technical sergeant;master sergeant;senior master sergeant;chief master sergeant;command chief master sergeant;chief master sergeant of the air force;ab;amn;a1c;sra;tsgt;msgt;smsgt;cmsgt;ccm;cmsaf;field marshal;brigadier;officer cadet;fm;lt gen;maj gen;brig;col;lt col;maj;capt;lt;2lt;ocdt;admiral of the fleet;marshal;marshal of the air force;air marshal;commodore;air commodore;group captain;lieutenant colonel;lt colonel;wing commander;lt commander;commandant;squadron leader;flight lieutenant;sub-lieutenant;flying officer;ensign;second lieutenant;2nd lieutenant;pilot officer;midshipman;warrant officer;leading seaman;seaman;aircraftman;midshipwoman;leading seawoman;seawoman;aircraftwoman;vice-admiral;vadm;lieutenant-general;lgen;rear-admiral;radm;major-general;mgen;brigadier-general;bgen;lieutenant-colonel;lcol;naval cadet;ncdt;able seaman;ab;ordinary seaman;os;pte;master bombardier;trooper;bombardier;sapper;signalman;craftsman;guardsman;rifleman;fusilier;chief of police;police commissioner;superintendent;sheriff;deputy chief of police;deputy commissioner;deputy superintendent;undersheriff;deputy sheriff;inspector;deputy inspector;detective;investigator;officer;deputy sheriff;constable;police constable;chief superintendent;assistant chief constable;deputy chief constable;chief constable;assistant commissioner;deputy commissioner;detective constable;staff inspector;staff superintendent;station duty officer;auxiliary sergeant;senior constable;cadet;probationary constable;recruit;sir;lady;lord;dame;his royal highness;hrh;his honour;his honor;maestro;his lordship;his majesty;his worship;the right worshipful;the worshipful;the honourable;the right honourable;the honorable;the right honorable;the hon;the most noble;the most honourable;the most honorable;the most hon;the rt hon;the right honourable and learned;the right honourable and gallant;the much honoured;the right honorable and learned;the right honorable and gallant;the much honored;the much hon;her royal highness;her honour;her honor;her majesty;her worship;his excellency;her excellency;his serene highness;her serene highness;his most reverend excellency;her most reverend excellency;his holiness;hh;his all holiness;hah;his beatitude;his eminence;he;his beatitude and eminence;father;mother;brother;br;sister;reverend;rev;the most reverend;the most rev;his grace;the right reverend;the rt rev;the most reverend and right honourable;the most reverend and right honorable;the most rev and rt hon;the right reverend and right honourable monsignor;the right reverend and right honorable monsignor;the rt rev and rt hon mgr;the right reverend and right honourable;the right reverend and right honorable;the very reverend;the very rev;the reverend monsignor;the rev msgr;the venerable;venerable;ven;his imperial majesty;his imperial and royal majesty;his apostolic majesty;his catholic majesty;his most faithful majesty;his imperial highness;his imperial and royal highness;his royal highness;his grand ducal highness;his highness;his ducal serene highness;his serene highness;his illustrious highness;his highborn;his grace;his high well-born;his excellency;his high excellency;her imperial majesty;her imperial and royal majesty;her apostolic majesty;her catholic majesty;her most faithful majesty;her imperial highness;her imperial and royal highness;her royal highness;her grand ducal highness;her highness;her ducal serene highness;her serene highness;her illustrious highness;her highborn;her grace;her high well-born;her excellency;her high excellency;him;hi&rm;ham;hcm;hfm;hih;hi&rh;hrh;hgdh;hh;hdsh;hsh;hillh;he;the;and;or;aunt;uncle;grandma;grandpa;granma;grampa;cousin".split(";"),suffixes:"junior jr senior sr i iii iii iv v vi vii viii ix x 2nd 3rd 4th 5th 6th 7th 8th 9th 10th esquire esq jd phd md ddm dds dmv bvsc ah bsc ba ret retired".split(" ")};
ilib.data.name_de={sortByHeadWord:!0,conjunctions:{and1:"und",and2:"und",or1:"oder",or2:"oder"},auxillaries:{von:1,van:1,"von der":1,"von den":1,vom:1,auf:1,"auf dem":1,"auf der":1,aus:1,"aus den":1,"aus dem":1,"aus der":1,"in":1,im:1,"in den":1,"in dem":1,"in der":1,zu:1,"zu den":1,zum:1,zur:1,"von und zu":1,"vor dem":1},prefixes:"doktor;dr;med;dent;habil;rer nat;hc;jur;vet;ing;dipl-ing;pr\u00e4sident;pr\u00e4sidentin;professor;professorin;prof;privatdozent;privatdozentin;direktor;direktorin;chefarzt;oberarzt;chef\u00e4rztin;ober\u00e4rztin;mutter;vater;schwester;bruder;patin;pate;tante;onkel;gro\u00dfmutter;gro\u00dfvater;oma;opa;bundespr\u00e4sident;bundeskanzler;minister;senator;staatssekret\u00e4r;abgeordneter;b\u00fcrgermeister;landrat;stadtrat;staatsanwalt;vorsitzender;rechtsanwalt;anwalt;verteidiger;bundespr\u00e4sidentin;bundeskanzlerin;ministerin;senatorin;staatssekret\u00e4rin;abgeordnete;b\u00fcrgermeisterin;landr\u00e4tin;stadtr\u00e4tin;staatsanw\u00e4ltin;vorsitzende;rechtsanw\u00e4ltin;anw\u00e4ltin;verteidigerin;unteroffizier;leutnant;feldwebel;f\u00e4hnrich;oberleutnant;hauptmann;major;gefreiter;kapit\u00e4n;admiral;maat;bootsmann;oberst;general;exzellenz;botschafter;botschafterin;konsul;konsulin;gesandter;gesandte;f\u00fcrst;f\u00fcrstin;herzog;herzogin;graf;gr\u00e4fin;baron;baronin;freiherr;freifrau;hofr\u00e4tin;hofrat;hr;regierungsr\u00e4tin;regierungsrat;rgr;amtsr\u00e4tin;amtsrat;ar;kanzleir\u00e4tin;kanzleirat;kzlr;kommerzialr\u00e4tin;kommerzialrat;kommr;\u00f6konomier\u00e4tin;\u00f6konomierat;\u00f6kr;medizinalr\u00e4tin;medizinalrat;medr;obermedizinalr\u00e4tin;obermedizinalrat;omedr;veterin\u00e4rr\u00e4tin;veterin\u00e4rrat;vetr;technische r\u00e4tin;technischer rat;tr;schulr\u00e4tin;schulrat;sr;oberschulr\u00e4tin;oberschulrat;osr;studienr\u00e4tin;studienrat;str;oberstudienr\u00e4tin;oberstudienrat;ostr;universit\u00e4tsprofessorin;universit\u00e4tsprofessor;univprof;kammers\u00e4ngerin;kammers\u00e4nger;ks\u00e4ng;kammerschauspielerin;kammerschauspieler;kschausp;pfarrer;pfr;pfarrerin;dekan;dekanin;kreisdekan;kreisdekanin;bischof;bisch\u00f6fin;regionalbischof;regionalbisch\u00f6fin;ddr;agr;biol hum;diac;disc pol;e h;h c mult;habil;iur;iur;iur et rer pol;math;med;med dent;med dent et scient med;med univ;med univ et scient med;med vet;mult;mus;nat med;nat techn;oec;oec publ;oec troph;paed;pharm;phil;rer agr;rer biol hum;rer biol vet;rer cam;rer cult;rer cur;rer forest;rer hort;rer med;rer merc;rer mont;rer nat;rer oec;rer physiol;rer pol;rer publ;rer sec;rer silv;rer soc;rer soc oec;rer tech;sc agr;sc hum;sc inf;sc inf biomed;sc inf med;sc math;sc mus;sc nat;sc oec;sc pol;sc rel;sc soc;sc techn;scient med;techn;theol;troph;dr-ing;hochw\u00fcrdigste;hochw\u00fcrdigster;hochw\u00fcrden;ehrw\u00fcrden;montsignore;hoheit;k\u00f6nigliche;ihre;seine;hochwohlgeborene;hochwohlgeborener;heiliger;der;die;das;dem;den;und;oder".split(";"),
suffixes:"junior;jr;senior;sr;i;iii;iii;iv;v;vi;vii;viii;ix;x;ir;im ruhestand;ba;ma;phd".split(";")};
ilib.data.name_fr={prefixes:"baron;baronne;bey;calife;cheikh;cheykha;comte;comtesse;cousin;cousine;docteur;dom;dr;duc;duchesse;\u00e9mir;\u00e9mira;fr\u00e8re;grand-m\u00e8re;grand-oncle;grand-p\u00e8re;grand-tante;hadjib;lady;lord;madame la pr\u00e9sidente;malik;mamy;marquis;marquise;marraine;m\u00e8re;monsieur le pr\u00e9sident;neveu;ni\u00e8ce;nizam;oncle;padishah;papy;parrain;p\u00e8re;pervane;petite-ni\u00e8ce;petit-neveu;pr;pr\u00e9sident;pr\u00e9sidente;professeur;professeure;r\u00e2ja;rani;r\u00e9v\u00e9rend p\u00e8re;r\u00e9v\u00e9rend;r\u00e9v\u00e9rende;r\u00e9v\u00e9rende m\u00e8re;sa;sai;sar;sas;se;shah;sir;sm;sm;smi;s\u0153ur;sultan;sultane;tante;veuve;vicomte;vicomtesse;vizir;et;m;ma\u00eetres;ma\u00eetre;majest\u00e9;mes;mesdames;mesdemoiselles;messieurs;mgr;mlles;mm;mme;mmes;monseigneur;ou;son;sa;saintet\u00e9;altesse;royale;s\u00e9r\u00e9nissime;\u00e9minence;excellence".split(";"),auxillaries:"la le les des du de".split(" "),
suffixes:"docteur en philosophie;docteur en m\u00e9decine;docteur en linguistique;docteur en physique;docteur en chimie;docteur en math\u00e9matiques;docteur en droit;docteur en chirurgie dentaire;docteur en pharmacie;docteur en m\u00e9decine v\u00e9t\u00e9rinaire;dep;dem;del;dec;ded;decd;demv".split(";")};
ilib.data.name_es={conjunctions:{and1:"y",and2:"e",or1:"o",or2:"u"},prefixes:"presidente;vicepresidente;profesor;prof;licenciado;licenc;ingeniero;ing;arquitecto;arq;cardenal;monse\u00f1or;madre;padre;hermana;hermano;madrina;padrino;mam\u00e1;pap\u00e1;t\u00eda;t\u00edo;abuela;abuelo;abuelita;abuelito;primo;prima;nono;nona;capit\u00e1n;general;coronel;mayor;almirante;general;comandante;teniente;teniente coronel;teniente general;detective;ministro;alcalde;alcaldesa;embajador;embajadora;don;do\u00f1a;el se\u00f1or;la se\u00f1ora;la se\u00f1orita;el sr;la sra;la srta;reverendo;reverenda;su excelencia;su santidad;el presidente;su excelencia;excelent\u00edsimo se\u00f1or;excelent\u00edsima se\u00f1ora;se\u00f1or ministro;se\u00f1ora ministra;se\u00f1or alcalde;se\u00f1ora alcaldesa;su eminencia;honorable se\u00f1or;honorable se\u00f1ora;la;el;los;las;y;e;o;u".split(";"),suffixes:"sr senior jr junior hijo padre ii iii iv v vi vii viii ix x".split(" ")};
ilib.data.name_id={format:"{prefix} {givenName} {middleName} {suffix}",sortByHeadWord:!1,conjunctions:{and1:"dan",and2:"dan",or1:"atau",or2:"atau"},prefixes:"bapak;ibu;presiden;wakil presiden;perdana menteri;walikota;gubernur;ketua;ketua;melayani;pendeta Yahudi;mu;pendeta;koki;melatih;profesor;raja;ratu;pangeran;puteri;umum;laksamana;komisaris;pengawas;kepala polisi daerah;inspektur;detektif;petugas;tuan;wanita;raja;nyonya;ayah;ibu;saudara;saudara;pendeta;bibi;paman;nenek;nenek;kakek;kakek;granma;sepupu".split(";"),
suffixes:["muda","lebih tua","mundur"]};
ilib.data.name_it={conjunctions:{and1:"e",and2:"ed",or1:"o",or2:"o"},auxillaries:{di:1,de:1,da:1,della:1,dalla:1,la:1,lo:1,li:1,del:1,degli:1,dei:1,lu:1,dal:1},prefixes:"ingegnere ing geometra avvocato notaio dottore dott ragioniere architetto dottoressa maestro prof professor professore professoressa fra frate fratello suor suora sorella don padre monsignore cavaliere commendatore onorevole colonnello generale tenente maresciallo madre zio zia nonna nonno signor signore sig signora sigra signorina signa sgna".split(" "),suffixes:[]};
ilib.data.name_ja={format:"{prefix}{familyName}{middleName}{givenName}{suffix}",nameStyle:"asian",conjunctions:{and1:"\u4e0e",and2:"\u4e0e",or1:"\u305d\u308c\u3068\u3082",or2:"\u305d\u308c\u3068\u3082"},prefixes:"\u304a\u7236\u3055\u3093 \u304a\u6bcd\u3055\u3093 \u304a\u5144\u3055\u3093 \u304a\u59c9\u3055\u3093 \u304a\u7956\u7236\u3055\u3093 \u304a\u7956\u6bcd\u3055\u3093 \u304a\u5b50\u3055\u3093 \u3054\u4e3b\u4eba".split(" "),suffixes:"\u3055\u3093 \u7dcf\u88c1 \u526f\u5927\u7d71\u9818 \u7dcf\u7406 \u5e02\u9577 \u77e5\u4e8b \u4e3b\u5e2d \u4e3b\u5e2d \u30e9\u30d3 \u7267\u5e2b \u30b7\u30a7\u30d5 \u6307\u5c0e\u8005 \u6559\u6388 \u738b \u5973\u738b \u7687\u592a\u5b50 \u30d7\u30ea\u30f3\u30bb\u30b9 \u63d0\u7763 \u7ba1\u7406\u8005 \u4fdd\u5b89\u5b98 \u76e3\u5bdf \u5f79\u54e1 \u537f \u5973\u6027 \u9818\u4e3b \u30c7\u30a4\u30e0 \u7236\u89aa \u6bcd\u89aa \u5f1f \u30b7\u30b9\u30bf\u30fc \u7267\u5e2b \u53d4\u6bcd \u53d4\u7236 \u304a\u3070\u3042\u3061\u3083\u3093 \u304a\u3070\u3042\u3055\u3093 \u304a\u3058\u3044\u3061\u3083\u3093 \u304a\u3058\u3044\u3055\u3093 \u3044\u3068\u3053 \u5e74\u4e0b \u4e0a\u7d1a \u3044\u3061 \u306b \u3055\u3093 \u3088\u3093 \u3054 \u308d\u304f \u306a\u306a \u306f\u3061 \u304d\u3085\u3046 \u3058\u3085\u3046 \u4f1a\u9577 \u526f\u4f1a\u9577 \u793e\u9577 \u526f\u793e\u9577 \u5c02\u52d9 \u5e38\u52d9 \u90e8\u9577 \u6b21\u9577 \u8ab2\u9577 \u4ee3\u7406 \u793e\u54e1".split(" "),
honorifics:"\u69d8 \u6c0f \u6559\u6388 \u7dcf\u88c1 \u4f1a\u9577 \u526f\u4f1a\u9577 \u793e\u9577 \u526f\u793e\u9577 \u5c02\u52d9 \u5e38\u52d9 \u90e8\u9577 \u6b21\u9577 \u8ab2\u9577 \u4ee3\u7406 \u793e\u54e1".split(" "),knownFamilyNames:{"\u4f50\u85e4":"Sat\u014d","\u9234\u6728":"Suzuki","\u9ad8\u6a4b":"Takahashi","\u7530\u4e2d":"Tanaka","\u6e21\u8fba":"Watanabe","\u4f0a\u85e4":"It\u014d","\u4e2d\u6751":"Nakamura","\u5c0f\u6797":"Kobayashi","\u5c71\u672c":"Yamamoto","\u52a0\u85e4":"Kat\u014d","\u5409\u7530":"Yoshida",
"\u5c71\u7530":"Yamada","\u4f50\u3005\u6728":"Sasaki","\u5c71\u53e3":"Yamaguchi","\u677e\u672c":"Matsumoto","\u4e95\u4e0a":"Inoue","\u6728\u6751":"Kimura","\u6e05\u6c34":"Shimizu","\u6797":"Hayashi","\u6589\u85e4":"Sait\u014d","\u658e\u85e4":"Sait\u014d","\u5c71\u5d0e":"Yamazaki Yamasaki","\u4e2d\u5cf6":"Nakajima Nakashima","\u68ee":"Mori","\u963f\u90e8":"Abe","\u6c60\u7530":"Ikeda","\u6a4b\u672c":"Hashimoto","\u77f3\u5ddd":"Ishikawa","\u5c71\u4e0b":"Yamashita","\u5c0f\u5ddd":"Ogawa","\u77f3\u4e95":"Ishii",
"\u9577\u8c37\u5ddd":"Hasegawa","\u5f8c\u85e4":"Got\u014d","\u5ca1\u7530":"Okada","\u8fd1\u85e4":"Kond\u014d","\u524d\u7530":"Maeda","\u85e4\u7530":"Fujita","\u9060\u85e4":"End\u014d","\u9752\u6728":"Aoki","\u5742\u672c":"Sakamoto","\u6751\u4e0a":"Murakami","\u592a\u7530":"\u014cta","\u91d1\u5b50":"Kaneko","\u85e4\u4e95":"Fujii","\u798f\u7530":"Fukuda","\u897f\u6751":"Nishimura","\u4e09\u6d66":"Miura","\u7af9\u5185":"Takeuchi","\u4e2d\u5ddd":"Nakagawa","\u5ca1\u672c":"Okamoto","\u677e\u7530":"Matsuda",
"\u539f\u7530":"Harada","\u4e2d\u91ce":"Nakano","\u5c0f\u91ce":"Ono","\u7530\u6751":"Tamura","\u85e4\u539f":"Fujiwara Fujihara","\u4e2d\u5c71":"Nakayama","\u77f3\u7530":"Ishida","\u5c0f\u5cf6":"Kojima","\u548c\u7530":"Wada","\u68ee\u7530":"Morita","\u5185\u7530":"Uchida","\u67f4\u7530":"Shibata","\u9152\u4e95":"Sakai","\u539f":"Hara","\u9ad8\u6728":"Takagi Takaki","\u6a2a\u5c71":"Yokoyama","\u5b89\u85e4":"And\u014d","\u5bae\u5d0e":"Miyazaki Miyasaki","\u4e0a\u7530":"Ueda Ueta","\u5cf6\u7530":"Shimada",
"\u5de5\u85e4":"Kud\u014d","\u5927\u91ce":"\u014cno","\u5bae\u672c":"Miyamoto","\u6749\u5c71":"Sugiyama","\u4eca\u4e95":"Imai","\u4e38\u5c71":"Maruyama","\u5897\u7530":"Masuda","\u9ad8\u7530":"Takada Takata","\u6751\u7530":"Murata","\u5e73\u91ce":"Hirano","\u5927\u585a":"\u014ctsuka","\u83c5\u539f":"Sugawara Sugahara","\u6b66\u7530":"Takeda Taketa","\u65b0\u4e95":"Arai","\u5c0f\u5c71":"Koyama Oyama","\u91ce\u53e3":"Noguchi","\u685c\u4e95":"Sakurai","\u5343\u8449":"Chiba","\u5ca9\u5d0e":"Iwasaki",
"\u4f50\u91ce":"Sano","\u8c37\u53e3":"Taniguchi","\u4e0a\u91ce":"Ueno","\u677e\u4e95":"Matsui","\u6cb3\u91ce":"K\u014dno Kawano","\u5e02\u5ddd":"Ichikawa","\u6e21\u90e8":"Watanabe Watabe","\u91ce\u6751":"Nomura","\u83ca\u5730":"Kikuchi","\u6728\u4e0b":"Kinoshita"}};
ilib.data.name_ko={useSpaces:!1,format:"{prefix}{familyName}{middleName}{givenName}{suffix}",nameStyle:"asian",sortByHeadWord:!1,noCompoundFamilyNames:!0,conjunctions:{and1:"\uadf8\ub9ac\uace0",and2:"\uadf8\ub9ac\uace0",or1:"\ub610\ub294",or2:"\ub610\ub294"},prefixes:["\ubbf8\uc2a4\ud130"],honorifics:["\uc528","\uad70","\uc591","\ub2d8"],suffixes:"\uc528;\uad70;\uc591;\ub2d8;\uc8fc\ub2c8\uc5b4;\uc5f0\uad6c\uc6d0;\uc8fc\uc784;\ub300\ub9ac;\uacfc\uc7a5;\ucc28\uc7a5;\uacc4\uc7a5;\ubd80\uc7a5;\uc0c1\ubb34;\uc218\uc11d;\ucc45\uc784;\uc120\uc784;\ubc15\uc0ac;\uc120\ubc30;\ud6c4\ubc30;\uadc0\ud558;\uac01\ud558;\uc804\ud558;\ud3d0\ud558;\ub098\uc73c\ub9ac;\uc120\uc0dd\ub2d8;\ubd80\uc778;\ub300\ud1b5\ub839;\ubd80\uc0ac\uc7a5;\ucd1d\ub9ac;\uc2dc\uc7a5;\uc9c0\uc0ac;\ud68c\uc7a5;\ub300\ud45c;\uc7a5\uad00;\ubaa9\uc0ac\ub2d8;\uc694\ub9ac\uc0ac;\ucf54\uce58;\uad50\uc218;\uc5ec\uc655;\uc655\uc790;\uacf5\uc8fc;\uc81c\ub3c5;\uac10\ub3c5\uad00;\uad50\uc721\uac10;\ubcf4\uc548\uad00;\uad00\ub9ac\uc790;\ud615\uc0ac;\uc7a5\uad50;\uc120\uc0dd\ub2d8;\ub808\uc774\ub514;\uc544\ubc84\uc9c0;\uc5b4\uba38\ub2c8;\ub3d9\uc0dd;\uc5ec\ub3d9\uc0dd;\ubaa9\uc0ac;\uc774\ubaa8;\uc0bc\ucd0c;\ud560\uba38\ub2c8;\ud560\uba38\ub2c8 ;\ud560\uc544\ubc84\uc9c0;\ud560\uc544\ubc84\uc9c0;\uc0ac\ucd0c".split(";"),
knownFamilyNames:{"\uc999":"Ch\u016dp","\uc99d":"Ch\u016dng","\ub9dd\uc808":"Mangj\u014fl","\uc18c\ubd09":"Sobong","\ub204":"Nu","\ub8e8":"Ru","\uad50":"Kyo","\uad70":"Kun","\uc800":"Ch\u014f","\uac15\uc804":"Kangj\u014fn","\uc0bc":"Sam","\uc5b4\uae08":"\u014eg\u016dm","\uc7a5\uace1":"Changgok","\ub2f4":"Tam","\ubb18":"Myo","\uc900":"Chun","\ub09c":"Nan","\ub780":"Ran","\uc2ed":"Sip","\uac1c":"Kae","\ube44":"Pi","\ub1cc":"Noe","\ub8b0":"Roe","\ud559":"Hak","\ud6c4":"Hu","\ub3c8":"Ton","\uc560":"Ae",
"\uc5fd":"Y\u014fp","\ud3ec":"P'o","\uace1":"Kok","\ud0c4":"T'an","\ud658":"Hwan","\uc6b4":"Un","\ub9cc":"Man","\uc790":"Cha","\ubb35":"Muk","\uc57c":"Ya","\uc694":"Yo","\ubbf8":"Mi","\uc218":"Su","\ub3d9\ubc29":"Tubongbanua","\ub9e4":"Mae","\uadfc":"K\u016dn","\uad89":"Kw\u014fk","\ud544":"P'il","\uc601":"Y\u014fng","\ud310":"P'an","\ud574":"Hae","\ub0ad":"Nang","\ub791":"Rang","\ucd08":"Ch'o","\ub0b4":"Nae","\uc12d":"S\u014fp","\ud765":"H\u016dng","\uc810":"Ch\u014fm","\uad81":"Kung","\ud48d":"P'ung",
"\ub300":"Tae","\ud3c9":"P'y\u014fng","\uc544":"A","\ube59":"Ping","\ub3c5\uace0":"Tokko","\ud654":"Hwa","\uc885":"Chong","\uc639":"Ong","\ub2f9":"Tang","\ucc3d":"Ch'ang","\uc21c":"Sun","\ub2e8":"Tan","\uacac":"Ky\u014fn","\uc11c\ubb38":"S\u014fmun","\uc0c1":"Sang","\uac04":"Kan","\ud33d":"P'aeng","\uc88c":"Chwa","\uac08":"Kal","\uc2b9":"S\u016dng","\ubc94":"P\u014fm","\uc120\uc6b0":"S\u014fnu","\uc2dc":"Si","\uc0ac\uacf5":"Sagong","\uc81c\uac08":"Chegal","\uc628":"On","\ube48":"Pin","\ub3d9":"Tong",
"\uc74c":"\u016cm","\ub450":"Tu","\uac10":"Kam","\ud638":"Ho","\uacc4":"Kye","\ud53c":"P'i","\ud615":"Hy\u014fng","\ud0dc":"T'ae","\ubaa9":"Mok","\ubcf5":"Pok","\uac00":"Ka","\ud669\ubcf4":"Hwangbo","\ubd80":"Pu","\uc0ac":"Sa","\ubd09":"Pong","\uc608":"Ye","\uc6a9":"Yong","\ub8e1":"Ryong","\ud3b8":"P'y\u014fn","\uc740":"\u016cn","\uacbd":"Ky\u014fng","\uc5b4":"\u014e","\ub0a8\uad81":"Namgung","\uad6d":"Kuk","\ud0c1":"T'ak","\ubaa8":"Mo","\ub9f9":"Maeng","\uc778":"In","\uc721":"Yuk","\ub959":"Ryuk",
"\uc625":"Ok","\uc655":"Wang","\uae08":"K\u016dm","\ubc18":"Pan","\uae30":"Ki","\uba85":"My\u014fng","\ud45c":"P'yo","\uc81c":"Che","\uc704":"Wi","\uae38":"Kil","\uc5f0":"Y\u014fn","\ub828":"Ry\u014fn","\ub9c8":"Ma","\uc120":"S\u014fn","\uc124":"S\u014fl","\uc18c":"So","\uc11d":"S\u014fk","\ub3c4":"To","\ucd94":"Ch'u","\uc5fc":"Y\u014fm","\ub834":"Ry\u014fm","\uc5ec":"Y\u014f","\ub824":"Ry\u014f","\ud568":"Ham","\ud604":"Hy\u014fn","\uacf5":"Kong","\uc784":"Im","\ucc9c":"Ch'\u014fn","\ucc44":"Ch'ae",
"\ubc29":"Pang","\uc6d0":"W\u014fn","\ubcc0":"Py\u014fn","\uc5c4":"\u014em","\uc9c0":"Chi","\ubbfc":"Min","\uc9c4":"Chin","\ub098":"Na","\ub77c":"Ra","\uc6b0":"U","\ucc28":"Ch'a","\uc131":"S\u014fng","\uacfd":"Kwak","\uad6c":"Ku","\ud558":"Ha","\uc8fc":"Chu","\uc2ec":"Sim","\ub0a8":"Nam","\ub178":"No","\ub85c":"Ro","\ud5c8":"H\u014f","\ubc31":"Paek","\ubc30":"Pae","\uc190":"Son","\ubb38":"Mun","\uace0":"Ko","\uc720":"Yu","\ub958":"Ryu","\uc591":"Yang","\ub7c9":"Ryang","\ud64d":"Hong","\ub9bc":"Rim",
"\uc548":"An","\uc1a1":"Song","\ud669":"Hwang","\uad8c":"Kw\u014fn","\uc804":"Ch\u014fn","\uc11c":"S\u014f","\uc624":"O","\ud55c":"Han","\uc2e0":"Sin","\uc7a5":"Chang","\uc724":"Yun","\uac15":"Kang","\uc870":"Cho","\ucd5c":"Ch'oe","\uc815":"Ch\u014fng","\ubc15":"Pak","\uc774":"Yi","\ub9ac":"Ri","\uae40":"Kim"}};
ilib.data.name_pt={format:"{prefix} {givenName} {middleName} {familyName} {suffix}",conjunctions:{and1:"e",and2:"e",or1:"ou",or2:"ou"},prefixes:"Senhor;Senhora;presidente;vice-presidente;primeiro ministro;prefeito;governador;presidente;presidenta;ministro;rabino;treinador;rei;rainha;pr\u00edncipe;princesa;geral;almirante;comiss\u00e1rio;superintendente;xerife;inspetor;detetive;oficial;senhor;senhora;senhor;dama;pai;m\u00e3e;irm\u00e3o;irm\u00e3;reverendo;tia;tio;av\u00f3;av\u00f3;av\u00f4;av\u00f4;Vov\u00f4;primo;e;ou".split(";"),suffixes:["aposentados"]};
ilib.data.name_ru={format:"{prefix} {givenName} {middleName} {familyName}{suffix}",sortByHeadWord:!1,conjunctions:{and1:"\u0438",and2:"\u0438",or1:"\u0438\u043b\u0438",or2:"\u0438\u043b\u0438"},prefixes:"\u0433-\u043d;\u0433-\u0436\u0430;\u0433\u043e\u0441\u043f\u043e\u0434\u0438\u043d;\u043f\u0440\u043e\u043c\u0430\u0445\u0438;\u0434\u043e\u043a\u0442\u043e\u0440;\u0434\u043e\u043a;\u043f\u0440\u0435\u0437\u0438\u0434\u0435\u043d\u0442;b\u0438\u0446\u0435-\u043f\u0440\u0435\u0437\u0438\u0434\u0435\u043d\u0442;\u043f\u0440\u0435\u043c\u044c\u0435\u0440-\u043c\u0438\u043d\u0438\u0441\u0442\u0440;\u043c\u044d\u0440;\u0433\u0443\u0431\u0435\u0440\u043d\u0430\u0442\u043e\u0440;\u043f\u0440\u0435\u0434\u0441\u0435\u0434\u0430\u0442\u0435\u043b\u044c;\u043f\u0440\u0435\u0434\u0441\u0435\u0434\u0430\u0442\u0435\u043b\u044c\u043d\u0438\u0446\u0430;\u043c\u0438\u043d\u0438\u0441\u0442\u0440;\u0440\u0430\u0432\u0432\u0438\u043d;\u043c\u0443\u043b\u0430\u0445;\u043f\u0430\u0441\u0442\u043e\u0440;\u0448\u0435\u0444-\u043f\u043e\u0432\u0430\u0440;\u0442\u0440\u0435\u043d\u0435\u0440;\u043f\u0440\u043e\u0444\u0435\u0441\u0441\u043e\u0440;\u043a\u043e\u0440\u043e\u043b\u044c;\u043a\u043e\u0440\u043e\u043b\u0435\u0432\u0430;\u043f\u0440\u0438\u043d\u0446;\u043f\u0440\u0438\u043d\u0446\u0435\u0441\u0441\u0430;\u043e\u0431\u0449\u0438\u0439;\u0430\u0434\u043c\u0438\u0440\u0430\u043b;\u043a\u043e\u043c\u0438\u0441\u0441\u0430\u0440;\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a;\u0448\u0435\u0440\u0438\u0444;\u0438\u043d\u0441\u043f\u0435\u043a\u0442\u043e\u0440;\u0434\u0435\u0442\u0435\u043a\u0442\u0438\u0432;\u043e\u0444\u0438\u0446\u0435\u0440;\u0441\u044d\u0440;\u043b\u0435\u0434\u0438;\u0433\u043e\u0441\u043f\u043e\u0434\u0438\u043d;\u0434\u0430\u043c\u0430;\u043e\u0442\u0435\u0446;\u043c\u0430\u0442\u044c;\u0431\u0440\u0430\u0442;\u0441\u0435\u0441\u0442\u0440\u0430;\u043f\u0440\u0435\u043f\u043e\u0434\u043e\u0431\u043d\u044b\u0439;\u0442\u0435\u0442\u044f;\u0434\u044f\u0434\u044f;\u0431\u0430\u0431\u0443\u0448\u043a\u0430;\u0431\u0430\u0431\u0443\u0448\u043a\u0430;\u0434\u0435\u0434\u0443\u0448\u043a\u0430;\u0434\u0435\u0434;\u0413\u0440\u0430\u043d\u043c\u0430;\u0434\u0435\u0434\u0443\u0448\u043a\u0430;\u0434\u0432\u043e\u044e\u0440\u043e\u0434\u043d\u044b\u0439 \u0431\u0440\u0430\u0442".split(";"),
suffixes:["\u043c\u043b\u0430\u0434\u0448\u0438\u0439","\u0441\u0442\u0430\u0440\u0448\u0438\u0439","\u041c\u044d\u0440\u0438\u043b\u0435\u043d\u0434","\u043e\u0442\u0441\u0442\u0430\u0432\u043a\u0443"],patronymicName:"\u043e\u0432\u0438\u0447 \u043e\u0432\u043d\u0430 \u043b\u0435\u0432\u0438\u0447 \u043b\u0435\u0432\u043d\u0430 \u0435\u0432\u0438\u0447 \u0435\u0432\u043d\u0430 \u0438\u0447 \u0438\u043d\u0438\u0447\u043d\u0430 \u0432\u0438\u0447 \u0412\u041d\u0410".split(" "),familyName:"\u0430\u0431\u0430\u043a\u0443\u043c\u043e \u0430\u0431\u0430\u043b\u044b\u0448\u0435 \u0430\u0431\u0430\u0440\u043d\u0438\u043a\u043e \u0430\u0431\u0434\u0443\u043b\u043e \u0430\u0431\u0440\u0430\u043c\u043e \u0430\u0431\u0440\u0430\u043c\u043e\u0432\u0438\u0447 \u0430\u0432\u0430\u043d\u0434\u0435\u0435 \u0430\u0432\u0434\u0435\u0435 \u0430\u0432\u0434\u043e\u043d\u0438 \u0430\u0432\u0435\u0440\u0438 \u0430\u0432\u0435\u0440\u044c\u044f\u043d\u043e \u0430\u0432\u0438\u043b\u043e \u0430\u0432\u0442\u0443\u0445\u043e \u0430\u0433\u0430\u043f\u043e \u0430\u0433\u0430\u0444\u043e\u043d\u043e \u0430\u0433\u0435\u0439\u043a\u0438 \u0430\u0433\u043b\u0438\u0443\u043b\u043b\u0438 \u0430\u0434\u0430\u043a\u0441\u0438 \u0430\u0436\u0438\u043a\u0435\u043b\u044f\u043c\u043e \u0430\u0436\u0438\u0449\u0435\u043d\u043a\u043e \u0430\u0437\u0430\u0440\u043e \u0430\u043a\u0441\u0430\u043a\u043e \u0430\u043a\u0438\u043d\u0444\u0435\u0435 \u0430\u043a\u0441\u0451\u043d\u043e \u0430\u043a\u0441\u0435\u043d\u0447\u0443\u043a \u0430\u043a\u0443\u043b\u043e \u0430\u043b\u0435\u0435 \u0430\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e \u0430\u043b\u0435\u043a\u0441\u0435\u0435 \u0430\u043b\u0435\u043d\u0438 \u0430\u043b\u0451\u0445\u0438 \u0430\u043b\u0438\u0435 \u0430\u043b\u0438\u0441\u0442\u0440\u0430\u0442\u043e \u0430\u043b\u043b\u0438\u043b\u0443\u0435 \u0430\u043b\u043e\u0433\u0440\u0438 \u0430\u043c\u0430\u043b\u0438\u0435 \u0430\u043c\u0435\u043b\u0438 \u0430\u043c\u0438\u043d\u0435 \u0430\u043d\u0430\u043d\u044c\u0435 \u0430\u043d\u0430\u0441\u0435\u043d\u043a\u043e \u0430\u043d\u0434\u0440\u0435\u0435 \u0430\u043d\u0434\u0440\u0435\u044e\u0448\u043a\u0438 \u0430\u043d\u0434\u0440\u043e\u043d\u0438\u043a\u043e \u0430\u043d\u0434\u0440\u043e\u043f\u043e \u0430\u043d\u0434\u0440\u044e\u0445\u0438 \u0430\u043d\u0438\u043a\u0430\u043d\u043e \u0430\u043d\u0438\u043a\u0438 \u0430\u043d\u0438\u0441\u0438\u043c\u043e \u0430\u043d\u0438\u0448\u0438 \u0430\u043d\u043a\u0443\u0434\u0438\u043d\u043e \u0430\u043d\u043d\u0438\u043a\u043e \u0430\u043d\u043e\u0441\u043e \u0430\u043d\u043e\u0445\u0438 \u0430\u043d\u043e\u0448\u043a\u0438 \u0430\u043d\u0440\u0435\u043f \u0430\u043d\u0442\u0438\u043f\u0438 \u0430\u043d\u0442\u0438\u043f\u043e \u0430\u043d\u0442\u043e\u043d\u043e \u0430\u043d\u0442\u043e\u043d\u043e\u0432\u0438\u0447 \u0430\u043f\u0430\u043b\u043a\u043e \u0430\u043f\u0442\u0435\u043a\u0430\u0440\u044c \u0430\u0440\u0434\u0430\u043d\u043a\u0438 \u0430\u0440\u0435\u0444\u044c\u0435 \u0430\u0440\u0437\u0430\u043c\u0430\u0441\u0446\u0435 \u0430\u0440\u0438\u0441\u0442\u0430\u0440\u0445\u043e \u0430\u0440\u0438\u0441\u0442\u043e \u0430\u0440\u0441\u0435\u043d\u044c\u0435 \u0430\u0440\u0442\u0430\u043c\u043e\u043d\u043e \u0430\u0440\u0442\u0435\u043c\u044c\u0435 \u0430\u0440\u0442\u0451\u043c\u043e \u0430\u0440\u0448\u0430\u0432\u0438 \u0430\u0441\u043b\u0430\u043d\u043e \u0430\u0441\u043b\u0430\u0445\u0430\u043d\u043e \u0430\u0441\u0441\u043e\u043d\u043e \u0430\u0441\u043f\u0438\u0434\u043e \u0430\u0441\u0442\u0430\u043d\u043a\u043e \u0430\u0441\u0442\u0430\u0444\u044c\u0435 \u0430\u0441\u0442\u0430\u0445\u043e \u0430\u0444\u0430\u043d\u0430\u0441\u044c\u0435 \u0430\u0444\u043e\u043d\u0438 \u0430\u0445\u0440\u0435\u043c\u0435\u043d\u043a\u043e \u0430\u044e\u0448\u0438\u0435 \u0431\u0430\u0431\u0430\u043d\u0438 \u0431\u0430\u0431\u0430\u0442\u044c\u0435 \u0431\u0430\u0431\u0438\u043a\u043e \u0431\u0430\u0431\u0438\u0447\u0435 \u0431\u0430\u0431\u043a\u0438 \u0431\u0430\u0431\u0443\u0440\u0438 \u0431\u0430\u0431\u044b\u043a\u0438 \u0431\u0430\u0433\u0440\u043e \u0431\u0430\u0440\u0438\u043d\u043e \u0431\u0430\u0436\u0430\u043d\u043e \u0431\u0430\u0436\u0435\u043d\u043e \u0431\u0430\u0437\u0430\u043d\u043e \u0431\u0430\u0437\u0430\u0440\u043e \u0431\u0430\u0437\u0438 \u0431\u0430\u043a\u0440\u044b\u043b\u043e \u0431\u0430\u043b\u0430\u0431\u0430\u043d\u043e \u0431\u0430\u043b\u0430\u043a\u0438 \u0431\u0430\u043b\u0430\u043a\u0438\u0440\u0435 \u0431\u0430\u043b\u0430\u043d\u0434\u0438 \u0431\u0430\u043b\u0430\u0445\u043d\u043e \u0431\u0430\u043b\u0430\u0448\u043e \u0431\u0430\u043b\u0442\u0430\u0431\u0435 \u0431\u0430\u043b\u044c\u0441\u0443\u043d\u043e \u0431\u0430\u043d\u0438 \u0431\u0430\u0440\u0430\u043d\u043e \u0431\u0430\u0440\u0430\u043d\u043e\u0432\u0441\u043a\u0438 \u0431\u0430\u0440\u0431\u043e\u043b\u0438 \u0431\u0430\u0440\u0435\u043d\u0446\u0435 \u0431\u0430\u0440\u0438\u043d\u043e \u0431\u0430\u0440\u043a\u043e \u0431\u0430\u0440\u043d\u0434\u044b\u043a \u0431\u0430\u0440\u0441\u0443\u043a\u043e \u0431\u0430\u0440\u044b\u0448\u0435 \u0431\u0430\u0440\u044b\u0448\u043d\u0438\u043a\u043e \u0431\u0430\u0442\u0438\u0449\u0435 \u0431\u0430\u0442\u0440\u0443\u0442\u0434\u0438\u043d\u043e \u0431\u0435\u0431\u043d\u0435 \u0431\u0435\u0431\u0447\u0443\u043a \u0431\u0435\u0437\u0431\u043e\u0440\u043e\u0434\u043e \u0431\u0435\u0437\u0440\u043e\u0434\u043d\u044b \u0431\u0435\u0437\u0440\u0443\u043a\u043e \u0431\u0435\u0437\u0443\u043a\u043b\u0430\u0434\u043d\u0438\u043a\u043e \u0431\u0435\u043b\u0435\u0432\u0438\u0447 \u0431\u0435\u043b\u0438\u0431\u0435\u0440\u0434\u0438\u0435 \u0431\u0435\u043b\u0438\u043a\u043e \u0431\u0435\u043b\u0438\u043d\u0441\u043a\u0438 \u0431\u0435\u043b\u0438\u0442\u0440\u043e \u0431\u0435\u043b\u043e \u0431\u0435\u043b\u043e\u0440\u0443\u0441\u043e \u0431\u0435\u043b\u043e\u0433\u043b\u0430\u0437\u043e \u0431\u0435\u043b\u043e\u043c\u0435\u0441\u0442\u0438 \u0431\u0435\u043b\u043e\u043c\u0435\u0441\u0442\u043d\u043e \u0431\u0435\u043b\u043e\u043c\u0435\u0441\u0442\u043e \u0431\u0435\u043b\u043e\u043c\u0435\u0441\u0442\u043d\u044b \u0431\u0435\u043b\u043e\u043c\u0435\u0441\u0442\u043d\u044b\u0445 \u0431\u0435\u043b\u043e\u0447\u043a\u0438 \u0431\u0435\u043b\u043e\u0443\u0441\u043e \u0431\u0435\u043b\u044f\u043a\u043e \u0431\u0435\u043d\u0434\u043b\u0438 \u0431\u0435\u043d\u0435\u0434\u0438\u043a\u0442\u043e \u0431\u0435\u0440\u0435\u0436\u043d\u043e \u0431\u0435\u0440\u0435\u0437\u0438 \u0431\u0435\u0440\u0438\u044f \u0431\u0435\u0440\u0448\u043e \u0431\u0435\u0441\u043a\u0440\u0451\u0441\u0442\u043d\u043e \u0431\u0435\u0441\u043f\u0430\u043b\u043e \u0431\u0435\u0441\u0441\u043e\u043d\u043e \u0431\u0435\u0441\u0444\u0430\u043c\u0438\u043b\u044c\u043d\u044b \u0431\u0435\u0445\u0442\u0435\u0440\u0435 \u0431\u0438\u0440\u044e\u043a\u043e \u0431\u043b\u0430\u0436\u0435\u043d\u043e \u0431\u043b\u0430\u043d\u0442\u0435\u0440 \u0431\u043b\u0430\u0442\u043e \u0431\u043b\u0438\u043d\u043e \u0431\u043b\u043e\u043a \u0431\u043b\u043e\u043a\u043e \u0431\u043b\u043e\u0445\u0438 \u0431\u043b\u044e\u043c \u0431\u043e\u0431\u043a\u043e \u0431\u043e\u0431\u0440 \u0431\u043e\u0431\u0440\u0438\u043a \u0431\u043e\u0431\u0440\u043e \u0431\u043e\u0432\u0430\u0440\u0438 \u0431\u043e\u0433\u0430\u0442\u044b\u0440\u0451 \u0431\u043e\u0433\u0430\u0447\u0451 \u0431\u043e\u0433\u0434\u0430\u043d\u043e \u0431\u043e\u0433\u043e\u043b\u0435\u043f\u043e \u0431\u043e\u0433\u043e\u043b\u044e\u0431\u043e \u0431\u043e\u0433\u043e\u043c\u0430\u0437\u043e \u0431\u043e\u0433\u043e\u043c\u043e\u043b\u043e \u0431\u043e\u0433\u0440\u043e \u0431\u043e\u0433\u0443 \u0431\u043e\u0434\u0440\u043e \u0431\u043e\u0439\u0434\u0430\u043b\u043e \u0431\u043e\u0439\u043a\u043e \u0431\u043e\u0439\u0446\u043e \u0431\u043e\u043a \u0431\u043e\u043a\u0430\u0440\u0451 \u0431\u043e\u043b\u0434\u0430\u0435 \u0431\u043e\u043b\u0434\u044b\u0440\u0435 \u0431\u043e\u043b\u043e\u0442\u043d\u0438\u043a\u043e \u0431\u043e\u043b\u0442\u043e\u043d\u043e\u0433\u043e \u0431\u043e\u043b\u044c\u0448\u0430\u043a\u043e \u0431\u043e\u043b\u044c\u0448\u043e \u0431\u043e\u043d\u0434\u0430\u0440\u0435 \u0431\u043e\u043d\u0434\u0430\u0440\u0447\u0443\u043a \u0431\u043e\u0440\u0435\u0435 \u0431\u043e\u0440\u0437\u0438\u043b\u043e \u0431\u043e\u0440\u0438\u0441\u044e\u043a \u0431\u043e\u0440\u043e\u0434\u0438 \u0431\u043e\u0440\u0442\u043d\u0438\u043a \u0431\u043e\u0440\u0446\u043e \u0431\u043e\u0447\u0430\u0440\u043e \u0431\u043e\u044f\u0440\u043e \u0431\u0440\u0430\u0433\u0438 \u0431\u0440\u0430\u043d\u0442\u043e \u0431\u0440\u0435\u0436\u043d\u0435 \u0431\u0440\u0443\u0441\u0438\u043b\u043e \u0431\u0443\u0433\u0430\u0435 \u0431\u0443\u0433\u0430\u0439\u0447\u0443\u043a \u0431\u0443\u0433\u0430\u043a\u043e \u0431\u0443\u0437\u0438\u043d\u0441\u043a\u0438 \u0431\u0443\u0434\u0430\u0435 \u0431\u0443\u0434\u0430\u043d\u043e \u0431\u0443\u0434\u043d\u0438\u043a\u043e \u0431\u0443\u0434\u044b\u043b\u0438 \u0431\u0443\u043a\u0430\u0432\u0438\u0446\u043a\u0438 \u0431\u0443\u043a\u0438 \u0431\u0443\u043a\u0438\u0440\u044c \u0431\u0443\u043a\u043b\u0438 \u0431\u0443\u043a\u043e \u0431\u0443\u043b\u0433\u0430\u043a\u043e \u0431\u0443\u043b\u044b\u0433\u0438 \u0431\u0443\u043d\u0438 \u0431\u0443\u0440\u0434\u0443\u043a\u043e\u0432\u0441\u043a\u0438 \u0431\u0443\u0440\u043a\u043e \u0431\u0443\u0440\u043c\u0430\u043a\u0438 \u0431\u0443\u0440\u043e \u0431\u0443\u0440\u0446\u043e \u0431\u0443\u0440\u044b \u0431\u0443\u0440\u044f\u043a\u043e \u0431\u0443\u0442\u0443\u0440\u043e\u0432\u0438\u0447 \u0431\u0443\u0442\u0443\u0441\u043e \u0431\u0443\u0442\u044b\u043b\u0438 \u0431\u0443\u0445\u0430\u043b\u043e \u0431\u044b\u043a\u043e \u0431\u044b\u043b\u0438\u043d\u043a\u0438 \u0431\u044b\u0447\u043a\u043e \u0432\u0430\u0432\u0438\u043b\u043e \u0432\u0430\u0433\u0438 \u0432\u0430\u0437\u043e \u0432\u0430\u043b\u0435\u0432\u0430\u0447 \u0432\u0430\u043d\u0437\u0438 \u0432\u0430\u0440\u0435\u043d\u043d\u0438\u043a\u043e \u0432\u0430\u0440\u0443\u0448\u043a\u0438 \u0432\u0430\u0441\u0438\u043b\u044c\u0435 \u0432\u0430\u0441\u0438\u043b\u044c\u0435\u0432\u044b\u0445 \u0432\u0430\u0441\u0438 \u0432\u0430\u0441\u043d\u0435 \u0432\u0430\u0441\u043d\u0435\u0446\u043e \u0432\u0430\u0445\u0440\u043e \u0432\u0430\u0445\u0440\u0443\u0448\u0435 \u0432\u0435\u043d\u0435\u0434\u0438\u043a\u0442\u043e \u0432\u0435\u0434\u0435\u043d\u0435\u0435 \u0432\u0435\u0434\u0435\u043d\u0438 \u0432\u0435\u0434\u0435\u0440\u043d\u0438\u043a\u043e \u0432\u0435\u0440\u0433\u0443\u043d\u043e \u0432\u0435\u0440\u0435\u0449\u0430\u0433\u0438 \u0432\u0435\u0440\u0448\u0438\u043d\u0438 \u0432\u0435\u0441\u0435\u043b\u043e \u0432\u0435\u0441\u0435\u043b\u043e\u0432\u0441\u043a\u0438 \u0432\u0435\u0442\u043e\u0447\u043a\u0438 \u0432\u0435\u0442\u0440\u043e \u0432\u0438\u043a\u0430\u0448\u0435 \u0432\u0438\u043d\u043e\u0433\u0440\u0430\u0434\u043e \u0432\u0438\u043d\u043e\u043a\u0443\u0440\u043e \u0432\u0438\u0442\u0430\u0435 \u0432\u0438\u0442\u0432\u0438\u043d\u0438 \u0432\u0438\u0446\u0438 \u0432\u0438\u0445\u0440\u043e \u0432\u043e\u0434\u043e\u0432\u0430\u0442\u043e \u043e\u0434\u043e\u0432\u043e\u0441 \u0432\u043e\u0434\u043e\u043b\u0435\u0435 \u0432\u043e\u0434\u044f\u043d\u043e \u0432\u043e\u043b\u0438\u043a\u043e \u0432\u043e\u043b\u043a\u043e \u0432\u043e\u043b\u043e\u0434\u0438 \u0432\u043e\u043b\u043e\u0448\u0438 \u0432\u043e\u043b\u044c\u0432\u0430\u043a\u043e \u0432\u043e\u0440\u043e\u0431\u044c\u0451 \u0432\u043e\u0440\u043e\u043d\u0438 \u0432\u043e\u0440\u043e\u043d\u043e \u0432\u043e\u0440\u043e\u043d\u043a\u043e \u0432\u043e\u0440\u043e\u043d\u0446\u043e \u0432\u043e\u0441\u043a\u043e\u0431\u043e\u0439\u043d\u0438\u043a\u043e \u0432\u043e\u0442\u044f\u043a\u043e \u0432\u044b\u0440\u044b\u043f\u0430\u0435 \u0432\u044c\u044f\u043b\u0438\u0446\u044b \u0433\u0430\u043b\u0435\u0440\u0435\u043a\u0438 \u0433\u0430\u0432\u0440\u0438\u043a\u043e \u0433\u0430\u0432\u0440\u0438\u043b\u043e \u0433\u0430\u0432\u0440\u0438\u043b\u0435\u043d\u043a\u043e \u0433\u0430\u0433\u0430\u0440\u0438 \u0433\u0430\u0433\u043e\u043b\u0438 \u0433\u0430\u043b\u0434\u0438 \u0433\u0430\u043b\u0438\u0430\u0441\u043a\u0430\u0440\u043e \u0433\u0430\u043b\u043a\u0438 \u0433\u0430\u043b\u044b\u0433\u0438 \u0433\u0430\u0440\u0430\u043d\u0438 \u0433\u0430\u0440\u0438 \u0433\u0430\u0440\u0438\u0444\u0443\u043b\u043b\u0438 \u0433\u0430\u0447\u0435 \u0433\u0435\u043d\u043a\u0438 \u0433\u0435\u0440\u0430\u0441\u0438\u043c\u043e \u0433\u0438\u0431\u0430\u0437\u043e \u0433\u0438\u043b\u0451 \u0433\u043b\u0430\u0433\u043e\u043b\u0435 \u0433\u043b\u0430\u0437\u043a\u043e \u0433\u043b\u0435\u0431\u043e \u0433\u043b\u0438\u043d\u0438 \u0433\u043b\u043e\u0431\u0430 \u0433\u043b\u0443\u0445\u043e \u0433\u043e\u043b\u043e \u0433\u043e\u043b\u043e\u0432\u0430\u0445\u0430 \u0433\u043e\u043b\u043e\u0432\u0430\u043d\u043e \u0433\u043e\u043b\u043e\u0432\u0438 \u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0433\u043e\u043b\u043e\u0434\u044f\u0435 \u0433\u043e\u043b\u0443\u0431\u0435 \u0433\u043e\u043b\u0443\u0431\u043a\u0438 \u0433\u043e\u043b\u0443\u0431\u043e \u0433\u043e\u043b\u0443\u0431\u0446\u043e \u0433\u043e\u043b\u0443\u043c\u0431\u043e\u0432\u0441\u043a\u0438 \u0433\u043e\u043d\u0447\u0430\u0440\u043e \u0433\u043e\u0440\u0430\u044f \u0433\u043e\u0440\u0431\u0430\u0447\u0451 \u0433\u043e\u0440\u0431\u0443\u043d\u043a\u043e \u0433\u043e\u0440\u0431\u0443\u043d\u043e \u0433\u043e\u0440\u0435 \u0433\u043e\u0440\u0435\u043b\u043e \u0433\u043e\u0440\u0435\u043c\u044b\u043a\u0438 \u0433\u043e\u0440\u043e\u0445\u0438 \u0433\u043e\u0440\u043e\u0445\u043e \u0433\u043e\u0440\u043d\u043e\u0441\u0442\u0430\u0435 \u0433\u043e\u0440\u0448\u043a\u043e \u0433\u043e\u0440\u044e\u043d\u043e \u0433\u0440\u0430\u0447\u0451 \u0433\u0440\u0430\u0444\u043e \u0433\u0440\u0435\u0431\u0435\u043d\u0449\u0438\u043a\u043e \u0433\u0440\u0435\u043a\u043e \u0433\u0440\u0435\u0448\u043d\u0435 \u0433\u0440\u0438\u0431\u0430\u043d\u043e \u0433\u0440\u0438\u0431\u043a\u043e \u0433\u0440\u0438\u0431\u043e \u0433\u0440\u0438\u0431\u043e\u0435\u0434\u043e \u0433\u0440\u0438\u0433\u043e\u0440\u044c\u0435 \u0433\u0440\u0438\u043d\u0438 \u0433\u0440\u0438\u0448\u0438 \u0433\u0440\u043e\u043c\u043e \u0433\u0440\u0443\u0437\u0434\u0435 \u0433\u0440\u0443\u0437\u0438\u043d\u0441\u043a\u0438 \u0433\u0440\u0443\u0448\u0430\u043d\u0438 \u0433\u0440\u044f\u0437\u043d\u043e \u0433\u0443\u0431\u0430\u043d\u043e \u0433\u0443\u043b\u0438 \u0433\u0443\u043d\u0438 \u0433\u0443\u0440\u043a\u043e\u0432\u0441\u043a\u0438 \u0433\u0443\u0440\u044c\u0435 \u0433\u0443\u0440\u044c\u044f\u043d\u043e \u0433\u0443\u0441\u0430\u0440\u043e \u0433\u0443\u0441\u0435 \u0433\u0443\u0441\u0438 \u0433\u0443\u0441\u043b\u044f\u043a\u043e \u0433\u0443\u0441\u044c\u043a\u043e \u0433\u0443\u0449\u0438 \u0434\u0430\u043d\u044c\u0448\u043e \u0434\u0430\u0446\u0438\u0448\u0438 \u0434\u043e\u0440\u043e\u0444\u0435\u0435 \u0434\u0430\u0432\u044b\u0434\u043a\u0438 \u0434\u0430\u0432\u044b\u0434\u043e \u0434\u0430\u043d\u0438\u043b\u044c\u0446\u0438 \u0434\u0432\u043e\u0439\u043d\u0435 \u0434\u0432\u043e\u0440\u043d\u0438\u043a\u043e \u0434\u0435\u0434\u043e \u0434\u0435\u043c\u0435\u043d\u043e\u043a \u0434\u0435\u043c\u0435\u043d\u0442\u044c\u0435 \u0434\u0435\u043c\u0438\u0434\u043e \u0434\u0435\u043d\u0438\u043a\u0438 \u0434\u0435\u043d\u0438\u0441\u043e \u0434\u0451\u0433\u0442\u0438 \u0434\u0435\u0433\u0442\u044f\u0440\u0435 \u0434\u0435\u0436\u043d\u0451 \u0434\u0435\u043b\u043e \u0434\u0435\u043c\u0435\u043d\u0442\u044c\u0435 \u0434\u0451\u043c\u0438 \u0434\u0435\u0440\u0436\u0430\u0432\u0438 \u0434\u0435\u0440\u043d\u043e \u0434\u0435\u0441\u044f\u0442\u043a\u043e \u0434\u043c\u0438\u0442\u0440\u0438\u0435 \u0434\u043e\u0431\u0440\u043e\u043b\u044e\u0431\u043e \u0434\u043e\u0431\u0440\u043e\u043d\u0440\u0430\u0432\u043e \u0434\u043e\u0431\u0440\u044b\u043d\u0438 \u0434\u043e\u043b\u0433\u043e\u0440\u0443\u043a\u043e \u0434\u043e\u043b\u0436\u0438\u043a\u043e \u0434\u043e\u043c\u0430\u0448\u0435 \u0434\u043e\u043c\u043d\u0438 \u0434\u043e\u0440\u043e\u0445\u0438 \u0434\u043e\u0440\u043e\u0445\u043e \u0434\u043e\u0441\u0442\u043e\u0432\u0430\u043b\u043e \u0434\u0440\u0430\u0433\u043e\u043c\u0438\u0440\u043e \u0434\u0440\u0430\u0433\u0443\u043d\u043e \u0434\u0440\u0435\u0441\u0432\u044f\u043d\u0438 \u0434\u0440\u0451\u043c\u043e \u0434\u0440\u0443\u0433\u0430\u043d\u0438 \u0434\u0440\u0443\u0433\u043e \u0434\u0440\u044f\u0433\u0438 \u0434\u0443\u0431\u0438\u043d\u0438 \u0434\u0443\u0431\u0438\u043d\u043a\u0438 \u0434\u0443\u0431\u043e \u0434\u0443\u0431\u043e\u043b\u0430\u0437\u043e \u0434\u0443\u0431\u0440\u043e\u0432\u0441\u043a\u0438 \u0434\u0443\u0434\u0438 \u0434\u0443\u0434\u043a\u043e \u0434\u0443\u0434\u043d\u0438\u043a \u0434\u0443\u043b\u044c\u0446\u0435 \u0434\u0443\u043c\u0430\u043d\u043e\u0432\u0441\u043a\u0438 \u0434\u0443\u043d\u0430\u0435\u0432\u0441\u043a\u0438 \u0434\u0443\u0440\u0430\u043d\u0438\u0447\u0435 \u0434\u0443\u0440\u043e \u0434\u0443\u0440\u0447\u0435\u043d\u043a\u043e \u0434\u044b\u0440\u0431\u043e \u0434\u044b\u0445\u043e\u0432\u0438\u0447\u043d\u044b \u0434\u044e\u0436\u0435\u043d\u043a\u043e \u0434\u044f\u0442\u043b\u043e \u0435\u0432\u0434\u043e\u043a\u0438\u043c\u043e \u0435\u0432\u0441\u0435\u0435 \u0435\u0432\u0441\u0442\u0438\u0433\u043d\u0435\u0435 \u0435\u0432\u0442\u0443\u0448\u0435\u043d\u043a\u043e \u0435\u0433\u043e\u0440\u043e \u0435\u0434\u0435\u043c\u0441\u043a\u0438 \u0435\u0436\u043e \u0435\u043b\u0430\u0433\u0438 \u0435\u043b\u0435\u0448\u0435 \u0435\u043b\u0438\u0437\u0430\u0440\u043e \u0435\u043b\u0438\u0441\u0435\u0435 \u0435\u043b\u044c\u0446\u0438 \u0435\u043b\u044c\u0446\u043e \u0435\u043b\u044c\u0447\u0443\u043a\u043e \u0435\u043c\u0435\u043b\u0438 \u0435\u043c\u0435\u043b\u044c\u044f\u043d\u043e \u0435\u043d\u0438 \u0435\u043d\u043e\u0442\u0438 \u0435\u043d\u043e\u0442\u043e \u0435\u0440\u0451\u043c\u0438 \u0435\u0440\u0437\u043e \u0435\u0440\u043a\u0443\u043b\u0430\u0435 \u0435\u0440\u043c\u0430\u043a\u043e \u0435\u0440\u043c\u0438\u043b\u043e \u0435\u0440\u043c\u043e\u043b\u0430\u0435 \u0435\u0440\u043c\u043e\u043b \u0435\u0440\u043c\u0443\u0448\u0438 \u0435\u0440\u043e\u043c\u0435\u0435 \u0435\u0440\u043e\u0444\u0435\u0435 \u0435\u0440\u043e\u0445\u0438 \u0435\u0440\u0445\u043e \u0435\u0440\u0448\u043e \u0435\u0441\u0430\u0443\u043b\u043e \u0435\u0441\u0438\u043a\u043e \u0435\u0441\u0438\u043f\u043e \u0435\u0444\u0438\u043c\u043e \u0435\u0444\u0440\u0435\u043c\u043e \u0435\u0448\u0435\u0432\u0441\u043a\u0438 \u0451\u0436\u0438\u043a\u043e \u0451\u0436\u0438 \u0451\u0436\u043e \u0451\u043b\u043a\u0438 \u0451\u043b\u043a\u043e \u0436\u0430\u0431\u0438 \u0436\u0430\u0440\u043a\u043e \u0436\u0430\u0440\u044b\u0445\u0438 \u0436\u0432\u0438\u043a\u043e \u0436\u0434\u0430\u043d\u043e \u0436\u0435\u0433\u043b\u043e \u0436\u0435\u043b\u0435\u0437\u043a\u0438 \u0436\u0435\u043b\u0435\u0437\u043d\u043e \u0436\u0435\u0440\u0434\u0435 \u0436\u0435\u0440\u043d\u0430\u043a\u043e \u0436\u0435\u0441\u0442\u0430\u043a\u043e\u0432\u0430 \u0436\u0436\u0451\u043d\u043e \u0436\u0438\u0432\u0435\u043d\u043a\u043e \u0436\u0438\u0433\u043b\u043e \u0436\u0438\u0433\u0443\u043d\u043e \u0436\u0438\u0434\u043a\u043e \u0436\u0438\u043a\u0438 \u0436\u0438\u043b\u0438 \u0436\u0438\u043b\u043e \u0436\u0438\u0440\u0435\u043d\u043a\u043e \u0436\u0438\u0440\u043e \u0436\u043e\u043b\u0434\u0438 \u0436\u0443\u043a\u043e \u0436\u0443\u0442\u043e \u0436\u0443\u0440\u0430\u0432\u043b\u0451 \u0436\u0443\u0440\u043e \u0437\u0430\u0431\u043e\u043b\u043e\u0442\u043d\u044b \u0437\u0430\u0432\u0440\u0430\u0433\u0438 \u0437\u0430\u0432\u0440\u0430\u0436\u0438 \u0437\u0430\u0432\u0440\u0430\u0436\u043d\u043e \u0437\u0430\u0432\u0440\u0430\u0436\u043d\u044b \u0437\u0430\u0432\u0440\u0430\u0437\u0438 \u0437\u0430\u0432\u044c\u044f\u043b\u043e \u0437\u0430\u0434\u043e\u0440\u043d\u043e \u0437\u0430\u0434\u043e\u0440\u043e\u0436\u043d\u044b \u0437\u0430\u0439\u0446\u0435 \u0437\u0430\u043a\u0440\u0435\u0432\u0441\u043a\u0438 \u0437\u0430\u043a\u0440\u044f\u0442\u0438 \u0437\u0430\u043f\u043e\u0440\u043e\u0436\u0435\u0446 \u0437\u0430\u0441\u043b\u0430\u0432\u0441\u043a\u0438 \u0437\u0430\u0445\u0430\u0440\u043e \u0437\u0430\u0445\u0430\u0440\u044c\u0438 \u0437\u0430\u0445\u0430\u0440\u0447\u0435\u043d\u043a\u043e \u0437\u0430\u0440\u0443\u0431\u0438 \u0437\u0432\u044f\u0433\u0438 \u0437\u0435\u0444\u0438\u0440\u043e \u0437\u0451\u043c\u0438 \u0437\u0438\u043c\u0438 \u0437\u043b\u043e\u0431\u0438 \u0437\u043e\u043b\u0438 \u0437\u043e\u043b\u043e\u0442\u043e \u0437\u043e\u043d\u043e \u0437\u043e\u0440\u0438 \u0437\u043e\u0442\u043e \u0437\u0443\u0431\u0430\u0440\u0435 \u0437\u0443\u0431\u043a\u043e \u0437\u0443\u0431\u043e \u0437\u0443\u0435 \u0437\u0443\u0439\u043a\u043e \u0437\u0438\u043c\u043d\u044f\u043a\u043e \u0437\u0438\u043d\u0447\u0435\u043d\u043a\u043e \u0437\u044b\u043a\u0438 \u0437\u044b\u043a\u043e \u0437\u044b\u0440\u044f\u043d\u043e \u0437\u044e\u0433\u0430\u043d\u043e \u0437\u0432\u0435\u0440\u0435 \u0438\u0431\u0440\u0430\u0433\u0438\u043c\u043e \u0438\u0432\u0430\u0437\u043e \u0438\u0432\u0430\u043a\u0438 \u0438\u0432\u0430\u043d\u043a\u043e \u0438\u0432\u0430\u043d\u043e \u0438\u0432\u0430\u0448\u0438 \u0438\u0432\u0430\u0448\u043e \u0438\u0432\u043a\u0438 \u0438\u0432\u0447\u0435\u043d\u043a\u043e \u0438\u0432\u043e\u043b\u0433\u0438 \u0438\u0433\u043d\u0430\u0442\u043a\u043e\u0432\u0438\u0447 \u0438\u0433\u043d\u0430\u0442\u044c\u0435 \u0438\u0433\u043e\u0448\u0438 \u0438\u0433\u0443\u043c\u043d\u043e \u0438\u0436\u0443\u0442\u0438 \u0438\u0437\u043c\u0430\u0439\u043b\u043e \u0438\u0437\u044e\u043c\u043e \u0438\u043a\u0430\u043d\u043e \u0438\u043a\u0430\u0448\u0435 \u0438\u043b\u044c\u0438 \u0438\u043b\u044c\u043a\u0443 \u0438\u043b\u044c\u044e\u0448\u0438 \u0438\u043b\u044c\u044f\u0441\u043e \u0438\u043b\u044e\u0445\u0438 \u0438\u043b\u044e\u0448\u0438 \u0438\u043b\u044e\u0448\u043a\u0438 \u0438\u043d\u043e\u0437\u0435\u043c\u0446\u0435 \u0438\u043d\u044c\u0448\u043e \u0438\u043f\u0430\u0442\u044c\u0435 \u0438\u0441\u0430\u0435 \u0438\u0441\u043c\u0430\u0439\u043b\u043e \u0438\u0441\u0442\u043e\u043c\u0438 \u0438\u0448\u0443\u0442\u0438 \u043a\u0430\u0431\u0438\u043d\u043e \u043a\u0430\u0431\u043b\u0443\u043a\u043e \u043a\u0430\u0432\u0435\u0440\u0438 \u043a\u0430\u0434\u043d\u0438\u043a\u043e \u043a\u0430\u0434\u0446\u044b \u043a\u0430\u0434\u0443\u0440\u0438 \u043a\u0430\u0437\u0430\u043a\u043e \u043a\u0430\u0437\u0430\u043d\u0446\u0435 \u043a\u0430\u0437\u0430\u043d\u044c\u043a\u043e \u043a\u0430\u0437\u0430\u0440\u0435\u0437\u043e \u043a\u0430\u043b\u0430\u0433\u0438 \u043a\u0430\u043b\u0430\u0448\u043d\u0438\u043a \u043a\u0430\u043b\u0433\u0430\u043d\u043e \u043a\u0430\u043b\u0438\u043d\u0438 \u043a\u0430\u043b\u0443\u0433\u0438 \u043a\u0430\u043b\u044f\u0433\u0438 \u043a\u0430\u043c\u0435\u043d\u0441\u043a\u0438\u0445 \u043a\u0430\u043c\u043a\u0438 \u043a\u0430\u043d\u0430\u0434\u0438 \u043a\u0430\u043d\u0430\u0434\u043e \u043a\u0430\u043d\u0430\u0434\u0446\u0435 \u043a\u0430\u043d\u0430\u043b\u0438 \u043a\u0430\u043d\u0434\u0438\u043d\u0441\u043a\u0438 \u043a\u0430\u043f\u0438\u0446\u0430 \u043a\u0430\u043f\u0440\u0430\u043b\u043e \u043a\u0430\u043f\u0440\u0438\u044f\u043d\u043e \u043a\u0430\u043f\u0443\u0441\u0442\u0438 \u043a\u0430\u043f\u0443\u0441\u0442\u043e \u043a\u0430\u043f\u044b\u043b\u044e\u0448\u043d\u044b \u043a\u0430\u0440\u0430\u0432\u0430\u0435 \u043a\u0430\u0440\u0430\u043d\u0434\u0430\u0448\u043e \u043a\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u043e \u043a\u0430\u0440\u0430\u0443\u043b\u0438 \u043a\u0430\u0440\u0430\u0443\u043b\u043e \u043a\u0430\u0440\u0431\u0430\u0438\u043d\u043e \u043a\u0430\u0440\u0433\u0438 \u043a\u0430\u0440\u0435 \u043a\u0430\u0440\u0435\u0442\u043d\u0438\u043a\u043e \u043a\u0430\u0440\u0436\u043e \u043a\u0430\u0440\u0438\u0435 \u043a\u0430\u0440\u043d\u0430\u0443\u0445\u043e \u043a\u0430\u0440\u0442\u0430\u0448\u0451 \u043a\u0430\u0440\u0442\u0430\u0448\u043e \u043a\u0430\u0440\u0447\u0430\u0433\u0438 \u043a\u0430\u0440\u044f\u0432\u0438 \u043a\u0430\u0441\u0430\u0442\u044b \u043a\u0430\u0448\u0438\u0440\u0441\u043a\u0438 \u043a\u0430\u0441\u044c\u044f\u043d\u0435\u043d\u043a\u043e \u043a\u0430\u0441\u044c\u044f\u043d\u043e \u043a\u0430\u0442\u0430\u0435 \u043a\u0430\u0442\u0435\u0440\u0438\u043d\u043e\u0447\u043a\u0438 \u043a\u0430\u0442\u0438 \u043a\u0430\u0447\u0443\u0441\u043e \u043a\u0430\u0448\u0430\u0440\u0438 \u043a\u0430\u0448\u0438\u0440\u0438 \u043a\u0430\u0448\u043a\u0430\u043d\u043e \u043a\u0430\u0448\u043d\u0438\u043a\u043e \u043a\u0430\u0448\u0443\u0431\u0430 \u043a\u0435\u0434\u0440\u043e \u043a\u0438\u043b\u0435\u0441\u0441\u043e \u043a\u0438\u043f\u0440\u0438\u044f\u043d\u043e \u043a\u0438\u0440\u0434\u0430\u043d\u044c \u043a\u0438\u0440\u0435\u0435 \u043a\u0438\u0440\u0438\u0433\u0438 \u043a\u0438\u0440\u0438\u043b\u0438\u0448\u0435 \u043a\u0438\u0440\u0438\u043b\u043b\u043e \u043a\u0438\u0440\u0438\u043b\u043b\u043e\u0432\u0441\u043a\u0438 \u043a\u0438\u0440\u0438\u043b\u043e \u043a\u0438\u0440\u0441\u0430\u043d\u043e \u043a\u0438\u0440\u044c\u044f\u043d\u043e \u043a\u0438\u0441\u043b\u0443\u0445\u0438 \u043a\u043b\u0435\u043f\u0430 \u043a\u043b\u0435\u043f\u0430\u0445\u043e \u043a\u043b\u0435\u043f\u0438 \u043a\u043b\u0438\u043c\u043e \u043a\u043b\u0438\u043c\u0443\u0448\u0438 \u043a\u043b\u0438\u043c\u0446\u043e \u043a\u043b\u043e\u043a\u043e \u043a\u043d\u044f\u0437\u0435 \u043a\u043e\u0432\u0430\u043b\u0435\u0432\u0441\u043a\u0438 \u043a\u043e\u0432\u0430\u043b\u0435\u043d\u043a\u043e \u043a\u043e\u0432\u0430\u043b\u0451 \u043a\u043e\u0432\u0440\u043e \u043a\u043e\u0432\u0448\u0435\u0432\u043d\u0438\u043a\u043e \u043a\u043e\u0432\u0448\u0443\u0442\u0438 \u043a\u043e\u0436\u0443\u0440\u043e \u043a\u043e\u0436\u0443\u0445\u043e \u043a\u043e\u0437\u0430\u043a\u043e \u043a\u043e\u0437\u0430\u0440\u044c \u043a\u043e\u0437\u043b\u043e \u043a\u043e\u0437\u043b\u043e\u0432\u0441\u043a\u0438 \u043a\u043e\u0437\u044b\u0440\u0435 \u043a\u043e\u0439\u0447\u0435 \u043a\u043e\u043b\u0435\u0441\u043d\u0438\u043a\u043e \u043a\u043e\u043b\u0435\u0441\u043e \u043a\u043e\u043b\u043b\u0435\u0440\u043e \u043a\u043e\u043b\u043e\u0431\u043a\u043e \u043a\u043e\u043b\u043e\u043c\u043d\u0438\u043a\u043e \u043a\u043e\u043b\u043e\u043d\u0442\u0430\u0435 \u043a\u043e\u043b\u043e\u0441\u043e \u043a\u043e\u043b\u044c\u0446\u043e \u043a\u043e\u043b\u0443\u043f\u0430\u0435 \u043a\u043e\u043c\u0430\u0440\u043e \u043a\u043e\u043c\u0437\u0438 \u043a\u043e\u043c\u0438\u0441\u0441\u0430\u0440\u043e \u043a\u043e\u043c\u043e\u043b\u043e \u043a\u043e\u043d\u0434\u0440\u0430\u0442\u044c\u0435 \u043a\u043e\u043d\u0434\u0443\u0440\u043e \u043a\u043e\u043d\u0434\u044e\u0440\u0438 \u043a\u043e\u043d\u0435 \u043a\u043e\u043d\u043d\u0438\u043a\u043e \u043a\u043e\u043d\u043e\u0432\u0430\u043b\u043e \u043a\u043e\u043d\u044c\u044f\u043a\u043e \u043a\u043e\u043d\u044f\u0448\u0435 \u043a\u043e\u043f\u0435\u0439\u043a\u0438 \u043a\u043e\u043f\u0441\u043e \u043a\u043e\u043f\u0446\u0435 \u043a\u043e\u0440\u0430\u0431\u043b\u0451 \u043a\u043e\u0440\u0430\u0431\u043b\u0438 \u043a\u043e\u0440\u0435\u043d\u0435 \u043a\u043e\u0440\u0435\u043d\u0451 \u043a\u043e\u0440\u0436\u0430\u043a\u043e \u043a\u043e\u0440\u0436\u0435 \u043a\u043e\u0440\u043d\u0435 \u043a\u043e\u0440\u043d\u0435\u0435 \u043a\u043e\u0440\u043d\u0438\u043b\u043e \u043a\u043e\u0440\u043e\u0432\u0438 \u043a\u043e\u0440\u043e\u043b\u0451 \u043a\u043e\u0440\u043e\u0442\u0430\u0435 \u043a\u043e\u0440\u043e\u0442\u043a\u0438 \u043a\u043e\u0440\u043e\u0442\u043a\u043e \u043a\u043e\u0440\u0442\u043d\u0435 \u043a\u043e\u0440\u0447\u0430\u0433\u0438 \u043a\u043e\u0440\u044f\u0432\u0438 \u043a\u043e\u0440\u044f\u0432\u043e \u043a\u043e\u0441\u0430\u0440\u0451 \u043a\u043e\u0441\u043a\u043e \u043a\u043e\u0441\u043c\u0430 \u043a\u043e\u0441\u043e\u043c\u043e \u043a\u043e\u0441\u043e\u0440\u0443\u043a\u043e \u043a\u043e\u0441\u0442\u0438 \u043a\u043e\u0441\u0442\u043e\u043c\u0430\u0440\u043e \u043a\u043e\u0441\u044f\u043a \u043a\u043e\u0442\u043e \u043a\u043e\u0447\u0435\u043d\u043a\u043e \u043a\u043e\u0447\u0435\u0440\u0451\u0436\u043a\u0438 \u043a\u043e\u0448\u0435\u043b\u0435 \u043a\u043e\u0448\u0435\u0447\u043a\u0438 \u043a\u043e\u0448\u043a\u0438 \u043a\u043e\u0448\u043a\u043e \u043a\u0440\u0430\u0432\u0447\u0443\u043a \u043a\u0440\u0430\u0435 \u043a\u0440\u0430\u0435\u0432\u0441\u043a\u0438 \u043a\u0440\u0430\u0441\u043d\u043e \u043a\u0440\u0430\u0441\u043d\u043e\u043f\u0435\u0440\u043e \u043a\u0440\u0430\u0441\u043e\u0442\u043a\u0438 \u043a\u0440\u0438\u0432\u043a\u043e \u043a\u0440\u0438\u0432\u043e \u043a\u0440\u0438\u0432\u043e\u0443\u0445\u043e \u043e\u043a\u0440\u044e\u0447\u043a\u043e \u043a\u0440\u043e\u043f\u0430\u043d\u0438 \u043a\u0440\u0443\u0433\u043b\u0438\u043a\u043e \u043a\u0440\u0443\u0433\u043b\u043e \u043a\u0440\u0443\u043f\u0438 \u043a\u0440\u0443\u043f\u043d\u043e \u043a\u0440\u0443\u0442\u0438\u043a\u043e \u043a\u0440\u0443\u0442\u0438 \u043a\u0440\u0443\u0442\u043e \u043a\u0440\u0443\u0442\u043e \u043a\u0440\u0443\u0447\u0438\u043d\u043a\u0438 \u043a\u0440\u044b\u043b\u043e \u043a\u0440\u044b\u043c\u043e \u043a\u0440\u044b\u0441\u043e \u043a\u0440\u044e\u043a\u043e \u043a\u0443\u0431\u043b\u0430\u043d\u043e \u043a\u0443\u0431\u044b\u0448\u043a\u0438 \u043a\u0443\u0432\u0430\u0435 \u043a\u0443\u0434\u0430\u0448\u043e \u043a\u0443\u0434\u0440\u0438 \u043a\u0443\u0434\u0440\u044f\u0432\u0446\u0435 \u043a\u0443\u0434\u0440\u044f\u0448\u043e \u043a\u0443\u0437\u043d\u0435\u0446\u043e \u043a\u0443\u0437\u0443\u0431\u043e \u043a\u0443\u0437\u044c\u043a\u0438 \u043a\u0443\u0437\u044c\u043c\u0438 \u043a\u0443\u0437\u044c\u043c\u0438\u0447 \u043a\u0443\u0438\u043c\u043e \u043a\u0443\u043a\u043b\u0430\u0447\u0451 \u043a\u0443\u043a\u043b\u0435 \u043a\u0443\u043a\u043b\u0438 \u043a\u0443\u043a\u043b\u043e \u043a\u0443\u043b\u0430\u0433\u0438 \u043a\u0443\u043b\u0430\u043a\u043e \u043a\u0443\u043b\u0438\u0431\u0438 \u043a\u0443\u043b\u0438\u043a \u043a\u0443\u043b\u0438\u043a\u043e \u043a\u0443\u043f\u0446\u043e \u043a\u0443\u0440\u0430\u043a\u0438 \u043a\u0443\u0440\u0431\u0430\u0442\u043e \u043a\u0443\u0440\u0433\u0430\u043d\u043e \u043a\u0443\u0440\u0434\u0438 \u043a\u0443\u0440\u0435\u043f\u0438 \u043a\u0443\u0440\u0438\u0446\u044b \u043a\u0443\u0440\u043e\u0447\u043a\u0438 \u043a\u0443\u0440\u043f\u0430\u0442\u043e \u043a\u0443\u0440\u0441\u0430\u043b\u0438 \u043a\u0443\u0440\u0442\u0430\u0448\u043a\u0438 \u043a\u0443\u0440\u0447\u0438 \u043a\u0443\u0441\u0442\u043e \u043a\u0443\u0442\u0435\u043f\u043e \u043a\u0443\u0442\u0438\u043a\u043e \u043a\u0443\u0442\u0443\u0437\u043e \u043a\u0443\u0442\u044f\u043a\u043e \u043b\u0430\u0432\u0440\u0435\u043d\u0442\u044c\u0435 \u043b\u0430\u0432\u0440\u043e \u043b\u0430\u0433\u043e\u0448\u0438 \u043b\u0430\u0433\u0440\u0430\u043d\u0441\u043a\u0438 \u043b\u0430\u0433\u0443\u0442\u043e \u043b\u0430\u0437\u0430\u0440\u0435 \u043b\u0430\u043d\u0446\u043e \u043b\u0430\u043f\u0430\u0435 \u043b\u0430\u043f\u0438\u0434\u0443\u0441 \u043b\u0430\u043f\u0438 \u043b\u0430\u043f\u043e\u0442\u043d\u0438\u043a\u043e \u043b\u0430\u043f\u0442\u0435 \u043b\u0430\u043f\u0443\u043d\u043e \u043b\u0430\u043f\u0443\u0445\u043e \u043b\u0430\u0440\u0438 \u043b\u0430\u0440\u0438\u043e\u043d\u043e \u043b\u0430\u0441\u043a\u0443\u0442\u0438 \u043b\u0430\u0447\u0438\u043d\u043e \u043b\u0430\u0447\u043a\u043e \u043b\u0435\u0431\u0435\u0434\u0435 \u043b\u0435\u0431\u0435\u0434\u0438\u043d\u0441\u043a\u0438 \u043b\u0435\u0431\u0435\u0434\u0438\u043d\u0446\u0435 \u043b\u0435\u0432\u0438 \u043b\u0435\u0432\u043a\u0438 \u043b\u0435\u0433\u043a\u043e\u0434\u0438\u043c\u043e \u043b\u0435\u0434\u043e\u0432\u0441\u043a\u043e \u043b\u0435\u043b\u0443\u0445 \u043b\u0435\u043b\u044c \u043b\u0435\u043e\u043d\u0438\u0434\u043e \u043b\u0435\u043e\u043d\u043e \u043b\u0435\u043f\u0451\u0445\u0438 \u043b\u0435\u0440\u043c\u043e\u043d\u0442\u043e \u043b\u0435\u0441\u043a\u043e \u043b\u0435\u0441\u043d\u0438\u0447\u0438 \u043b\u0435\u0442\u043e \u043b\u0435\u0448\u0435 \u043b\u0435\u0449\u0451 \u043b\u0451\u0432\u043a\u0438 \u043b\u0438\u0434\u0438 \u043b\u0438\u043b\u043e \u043b\u0438\u043c\u043e\u043d\u043e \u043b\u0438\u043f\u0438 \u043b\u0438\u043f\u043e \u043b\u0438\u0441\u0438\u0446\u044b \u043b\u0438\u0441\u043e \u043b\u0438\u0441\u0442\u0440\u0430\u0442\u043e \u043b\u0438\u0441\u0442\u0443\u043d\u043e \u043b\u0438\u0445\u0430\u0447\u0451 \u043b\u043e\u0431\u0430 \u043b\u043e\u0431\u0430\u043d\u043e \u043b\u043e\u0431\u0430\u0447\u0451 \u043b\u043e\u0431\u043e \u043b\u043e\u0432\u0437\u0430\u043d\u0441\u043a\u0438 \u043b\u043e\u0433\u0438\u043d\u043e \u043b\u043e\u0433\u0438\u043d\u043e\u0432\u0441\u043a\u0438 \u043b\u043e\u043a\u0442\u0435 \u043b\u043e\u043a\u0442\u0438\u043e\u043d\u043e \u043b\u043e\u043c\u043e\u0432\u0446\u0435 \u043b\u043e\u043c\u043e\u043d\u043e\u0441\u043e \u043b\u043e\u043c\u0442\u0435 \u043b\u043e\u043f\u0430\u0442\u0438 \u043b\u043e\u0441\u0435 \u043b\u043e\u0441\u0435\u0432\u0441\u043a\u0438 \u043b\u043e\u0441\u043a\u0443\u0442\u043d\u0438\u043a\u043e \u043b\u043e\u0441\u043a\u0443\u0442\u043e \u043b\u043e\u0449\u0438\u043b\u043e \u043b\u0443\u0431\u0430\u0448\u0435 \u043b\u0443\u0436\u043a\u043e \u043b\u0443\u043a\u0430\u0448\u0435\u043d\u043a\u043e \u043b\u0443\u043a\u0438 \u043b\u0443\u043a\u043e \u043b\u0443\u043a\u044c\u044f\u043d\u0435\u043d\u043a\u043e \u043b\u0443\u043a\u044c\u044f\u043d\u043e \u043b\u0443\u0441\u043a\u0438 \u043b\u044b\u0437\u043b\u043e \u043b\u044b\u0442\u043a\u0438 \u043b\u044c\u0432\u043e \u043b\u044e\u0431\u0438\u043c\u043e \u043b\u044e\u0431\u0438\u043c\u0446\u0435 \u043b\u044e\u0431\u043e \u043b\u044e\u0442\u0435\u043d\u043a\u043e \u043b\u044e\u0442\u043e \u043b\u044f\u0433\u0443\u0448\u043a\u0438 \u043b\u044f\u0433\u0443\u0448\u043e \u043b\u044f\u0434\u043e \u043b\u044f\u043b\u044e\u0448\u043a\u0438 \u043b\u044f\u043c\u0438 \u043b\u044f\u043f\u0438 \u043b\u044f\u043f\u0443\u043d\u043e \u043b\u044f\u0441\u0438 \u043c\u0430\u0434\u0443\u043b\u0438 \u043c\u0430\u0433\u0435\u0440 \u043c\u0430\u0433\u043e\u043c\u0435\u0434\u043e \u043c\u0430\u0436\u0443\u043b\u0438 \u043c\u0430\u0439\u0441\u0430\u043a \u043c\u0430\u043a\u0430\u0440\u043e \u043c\u0430\u043a\u043b\u0430\u043a\u043e \u043c\u0430\u043a\u0441\u0438\u043c\u043e \u043c\u0430\u043a\u0441\u0438\u043c\u0443\u0448\u043a\u0438 \u043c\u0430\u043a\u0441\u0443\u0434\u043e \u043c\u0430\u043b\u0430\u0445\u043e \u043c\u0430\u043b\u0438\u043a\u043e \u043c\u0430\u043b\u0438\u043d\u0438 \u043c\u0430\u043b\u0438\u043d\u043e \u043c\u0430\u043b\u044b\u0448\u0435 \u043c\u0430\u043b\u044b\u0445\u0438 \u043c\u0430\u043b\u044c\u0447\u0438\u043a\u043e \u043c\u0430\u043b\u044e\u0433\u0438 \u043c\u0430\u043c\u0438 \u043c\u0430\u043c\u043e\u043d\u043e \u043c\u0430\u043c\u044b\u043a\u0438 \u043c\u0430\u043d\u0438 \u043c\u0430\u043d\u0442\u043e\u0440\u043e \u043c\u0430\u043d\u044f\u043a\u0438 \u043c\u0430\u0440\u0438 \u043c\u0430\u0440\u0438\u043d\u0438 \u043c\u0430\u0440\u0438\u043d\u043a\u0438 \u043c\u0430\u0440\u0438\u043d\u043e \u043c\u0430\u0440\u043a\u0438 \u043c\u0430\u0440\u043a\u043e \u043c\u0430\u0440\u0442\u044e\u0448\u0435 \u043c\u0430\u0440\u044c\u0438 \u043c\u0430\u0441\u043b\u0430\u043a \u043c\u0430\u0441\u043b\u043e \u043c\u0430\u0441\u043c\u0435\u0445 \u043c\u0430\u0441\u043c\u0435\u0445\u043e \u043c\u0430\u0442\u0432\u0435\u0435 \u043c\u0430\u0445\u043c\u0443\u0434\u043e \u043c\u0430\u0448\u0430\u0440\u0438 \u043c\u0430\u0448\u0438\u0440 \u043c\u0435\u0434\u0432\u0435\u0434\u0435 \u043c\u0435\u0434\u0432\u0435\u0434\u043a\u043e \u043c\u0435\u0434\u043d\u0438\u043a\u043e \u043c\u0435\u043b\u0435\u0434\u0438 \u043c\u0435\u043b\u0435\u0445\u043e \u043c\u0435\u043b\u0438\u043a\u043e \u043c\u0435\u043b\u044c\u043d\u0438\u043a\u043e \u043c\u0435\u043d\u0448\u0438\u043a\u043e \u043c\u0435\u043d\u0449\u0438\u043a\u043e \u043c\u0435\u0440\u043a\u0443\u043b\u043e \u043c\u0435\u0440\u043a\u0443\u0448\u0435 \u043c\u0435\u0441\u044f\u0446 \u043c\u0435\u0445\u0430\u043d\u0442\u044c\u0435 \u043c\u0435\u0449\u0435\u0440\u044f\u043a\u043e \u043c\u0438\u0433\u0443\u043d\u043e \u043c\u0438\u0445\u0430\u0439\u043b\u043e\u0432\u043d\u0430 \u043c\u0438\u0437\u0435\u043d\u043e \u043c\u0438\u043b\u0435\u0445\u0438 \u043c\u0438\u043b\u043e\u0440\u0430\u0434\u043e \u043c\u0438\u043b\u044e\u043a\u043e \u043c\u0438\u043b\u044e\u0442\u0438 \u043c\u0438\u043d\u0430\u0435 \u043c\u0438\u043d\u0435\u0435 \u043c\u0438\u043d\u0438 \u043c\u0438\u043d\u043a\u0438 \u043c\u0438\u043d\u043a\u043e\u0432\u0441\u043a\u0438 \u043c\u0438\u0440\u043d\u043e \u043c\u0438\u0440\u043e \u043c\u0438\u0440\u043e\u043d\u043e \u043c\u0438\u0440\u043e\u0445\u0438 \u043c\u0438\u0441\u0430\u043b\u043e \u043c\u0438\u0448\u0438 \u043c\u0438\u0442\u0438 \u043c\u0438\u0442\u044c\u043a\u0438\u043d/\u043c\u0438\u0442\u043a\u0438 \u043c\u0438\u0442\u0440\u043e\u0444\u0430\u043d\u043e \u043c\u0438\u0445\u0430\u0439\u043b\u043e \u043c\u0438\u0445\u0430\u043b\u0435 \u043c\u0438\u0445\u0430\u043b\u0438\u0446\u0438 \u043c\u0438\u0445\u0430\u043b\u0438\u0446\u044b \u043c\u0438\u0445\u0435\u0435 \u043c\u0438\u0448\u043d\u0435 \u043c\u0438\u0448\u0443\u0442\u0438 \u043c\u043e\u0436\u0430\u0435 \u043c\u043e\u0438\u0441\u0435\u0435 \u043c\u043e\u043b\u0447\u0430\u043d\u043e \u043c\u043e\u0440\u0434\u0432\u0438\u043d\u043e \u043c\u043e\u0440\u0435\u043d\u043e \u043c\u043e\u0440\u043e\u0437\u043e \u043c\u043e\u0440\u043e\u0448\u043a\u0438 \u043c\u043e\u0440\u044f\u043a\u043e \u043c\u043e\u0441\u0430\u043b\u0435 \u043c\u043e\u0441\u0438 \u043c\u043e\u0441\u043a\u0430\u043b\u0435 \u043c\u043e\u0441\u043a\u0432\u0438 \u043c\u043e\u0441\u044f\u043a\u043e \u043c\u043e\u0445\u043e \u043c\u0443\u0440\u0430\u0432\u044c\u0451 \u043c\u0443\u0440\u0430\u0442\u043e \u043c\u0443\u0440\u043e\u0433\u043e \u043c\u0443\u0445\u0430\u043d\u043e \u043c\u0443\u0445\u0438 \u043c\u0443\u0445\u043e \u043c\u0443\u0445\u043e\u043c\u043e\u0440\u043e \u043c\u0443\u0445\u043e\u0440\u0442\u043e \u043c\u044b\u0448\u0435\u043b\u043e \u043c\u044b\u0448\u043a\u0438 \u043c\u044f\u0433\u043a\u043e \u043c\u044f\u0441\u043d\u0438\u043a\u043e \u043c\u044f\u0442\u043b\u0435 \u043c\u044f\u0443\u043a\u0438 \u043d\u0430\u0431\u0430\u0442\u043e \u043d\u0430\u0437\u0430\u0440\u043e \u043d\u0430\u0440\u0434\u0438 \u043d\u0430\u0441\u043e\u043d\u043e \u043d\u0430\u0443\u043c\u0435\u043d\u043a\u043e \u043d\u0430\u0443\u043c\u043e \u043d\u0435\u0442\u0440\u0435\u0431\u043e \u043d\u0435\u0432\u0437\u043e\u0440\u043e \u043d\u0435\u0434\u0435\u043b\u044f\u0435 \u043d\u0435\u0436\u0434\u0430\u043d\u043e \u043d\u0435\u043a\u0440\u0435\u0441\u0442\u044c\u044f\u043d\u043e \u043d\u0435\u043c\u0446\u0435 \u043d\u0435\u043c\u0446\u043e \u043d\u0435\u043d\u0430\u0448\u0435 \u043d\u0435\u043f\u0435\u0438 \u043d\u0435\u0441\u0442\u0435\u0440\u043e \u043d\u0435\u0447\u0430\u0435 \u043d\u0438\u0437\u0430\u043c\u0443\u0442\u0434\u0438\u043d\u043e \u043d\u0438\u043a\u0438\u0442\u0438 \u043d\u0438\u043a\u0438\u0444\u043e\u0440\u043e \u043d\u0438\u043a\u0438\u0448\u0438 \u043d\u0438\u043a\u043e\u043b\u0430\u0435 \u043d\u0438\u043a\u043e\u043d\u043e \u043d\u0438\u043a\u0443\u043b\u0438 \u043d\u0435\u043a\u0440\u0430\u0441\u043e \u043d\u043e\u0432\u0438\u043a\u043e \u043d\u043e\u0432\u0438\u0447\u043a\u043e \u043d\u043e\u0432\u043e\u043a\u0448\u043e\u043d\u043e \u043d\u043e\u0432\u043e\u0441\u0435\u043b\u044c\u0446\u0435 \u043d\u043e\u0437\u0434\u0440\u0451 \u043d\u043e\u0437\u0434\u0440\u0438 \u043d\u043e\u0440\u0438 \u043d\u043e\u0441\u0430\u0447\u0451 \u043d\u043e\u0441\u043a\u043e \u043d\u043e\u0441\u043e \u043d\u0443\u0440\u0438\u0435 \u043e\u0431\u043e\u043b\u0435\u043d\u0441\u043a\u0438 \u043e\u0431\u043d\u0438\u0437\u043e \u043e\u0431\u043e\u0440\u0438 \u043e\u0431\u0440\u0430\u0437\u0446\u043e \u043e\u0431\u0443\u0445\u043e \u043e\u0432\u0435\u0447\u043a\u0438 \u043e\u0433\u043e\u0440\u043e\u0434\u043d\u0438\u043a\u043e \u043e\u0433\u0443\u0440\u0446\u043e \u043e\u0437\u0435\u0440\u043e \u043e\u043b\u0435\u043d\u0435 \u043e\u043b\u044c\u0445\u043e\u0432\u0441\u043a\u0438 \u043e\u043c\u0435\u043b\u044c\u043d\u0438\u0446\u043a\u0438 \u043e\u043d\u0435\u0433\u0438 \u043e\u043d\u0438\u043f\u0447\u0435\u043d\u043a\u043e \u043e\u043f\u043e\u043a\u0438 \u043e\u043f\u0440\u0438\u043d\u0447\u0443\u043a \u043e\u0440\u043b\u043e \u043e\u0441\u0431\u043e\u0440 \u043e\u0441\u0435\u043d\u043d\u044b\u0445 \u043e\u0441\u0438 \u043e\u0441\u0438\u043d\u043e \u043e\u0441\u0438\u043d\u0446\u0435 \u043e\u0441\u043c\u0438\u043d\u0438 \u043e\u0441\u043e\u043a\u0438 \u043e\u0441\u043e\u043b\u043e\u0434\u043a\u0438 \u043e\u0441\u0442\u0430\u043b\u044c\u0446\u0435 \u043e\u0441\u0442\u0430\u043f\u044e\u043a \u043e\u0441\u0442\u0440\u043e\u0432\u0435\u0440\u0445\u043e \u043e\u0441\u0442\u0440\u043e\u0432\u0441\u043a\u0438 \u043e\u0448\u0443\u0440\u043a\u043e \u043e\u0432\u0435\u0447\u043a\u0438 \u043f\u0430\u0432\u043b\u0435\u043d\u043a\u043e \u043f\u0430\u0432\u043b\u043e \u043f\u0430\u043b\u044e\u043b\u0438 \u043f\u0430\u043d\u0430\u0440\u0438 \u043f\u0430\u043d\u0438 \u043f\u0430\u043d\u043a\u0438 \u043f\u0430\u043d\u043a\u043e \u043f\u0430\u043d\u043a\u0440\u0430\u0442\u043e \u043f\u0430\u043d\u0444\u0438\u043b\u043e \u043f\u0430\u043d\u044c\u043a\u0438 \u043f\u0430\u043f\u0430\u043d\u043e \u043f\u0430\u0440\u0430\u043c\u043e\u043d\u043e \u043f\u0430\u0440\u0448\u0438\u043a\u043e \u043f\u0430\u0440\u0448\u0438 \u043f\u0430\u0441\u0442\u0435\u0440\u043d\u0430\u043a \u043f\u0430\u0441\u0442\u0443\u0445 \u043f\u0430\u0441\u0445\u0438 \u043f\u0430\u0442\u0440\u0443\u0448\u0435 \u043f\u0430\u0443\u043b\u043a\u0438 \u043f\u0430\u0445\u043e\u043c\u043e \u043f\u0430\u0448\u0438 \u043f\u0430\u0448\u043a\u043e \u043f\u0435\u0432\u0446\u043e \u043f\u0435\u0432\u0447\u0438\u0445 \u043f\u0435\u043b\u0435\u0432\u0438 \u043f\u0435\u043b\u0451\u0432\u0438 \u043f\u0435\u043d\u043a\u0438 \u043f\u0435\u0440\u0432\u0430\u043a \u043f\u0435\u0440\u0435\u0432\u0430\u043b\u043e \u043f\u0435\u0440\u0435\u0432\u0435\u0440\u0437\u0435 \u043f\u0435\u0440\u0435\u0432\u0451\u0440\u0442\u043e \u043f\u0435\u0440\u0435\u0441\u0442\u043e\u0440\u043e\u043d\u0438 \u043f\u0435\u0440\u0435\u0436\u043e\u0433\u0438 \u043f\u0435\u0440\u0435\u0445\u0432\u0430\u0442\u043a\u0438 \u043f\u0435\u0440\u043c\u0438\u043d\u043e \u043f\u0435\u0440\u043c\u044f\u043a\u043e \u043f\u0435\u0440\u043e \u043f\u0435\u0440\u0444\u0438\u043b\u044c\u0435 \u043f\u0435\u0441\u0442\u043e \u043f\u0435\u0442\u0440\u043e \u043f\u0435\u0442\u0440\u0443\u0445\u0438 \u043f\u0435\u0442\u0443\u0445\u043e \u043f\u0435\u0447\u0435\u043d\u0438\u043a\u043e \u043f\u0435\u0447\u043a\u0438 \u043f\u0438\u0432\u043e\u0432\u0430\u0440\u043e \u043f\u0438\u043c\u0435\u043d\u043e \u043f\u0438\u0440\u043e\u0433\u043e \u043f\u0438\u0440\u043e\u0436\u043a\u043e \u043f\u0438\u0442\u043e\u0441\u0438 \u043f\u0438\u0447\u0443\u0433\u0438 \u043f\u0438\u0447\u0443\u0448\u043a\u0438 \u043f\u0438\u0449\u0430\u043b\u044c\u043d\u0438\u043a\u043e \u043f\u043b\u0430\u043a\u0441\u0438 \u043f\u043b\u0430\u0442\u043e\u043d\u043e \u043f\u043b\u0435\u043c\u044f\u043d\u043d\u0438\u043a\u043e \u043f\u043e\u0433\u043e\u0434\u0438 \u043f\u043e\u0433\u043e\u0434\u043e \u043f\u043e\u0433\u0440\u0435\u0431\u043d\u043e \u043f\u043e\u0434\u0430 \u043f\u043e\u0434\u0448\u0438\u0432\u0430\u043b\u043e \u043f\u043e\u0436\u0430\u0440\u0441\u043a\u0438 \u043f\u043e\u0437\u0434\u043d\u044f\u043a\u043e \u043f\u043e\u043a\u0440\u043e\u0432\u0441\u043a\u0438 \u043f\u043e\u043b\u0430\u0447\u0435\u0430 \u043f\u043e\u043b\u0438\u0432\u0430\u043d\u043e \u043f\u043e\u043b\u0438\u0447\u0435 \u043f\u043e\u043b\u0438\u0449\u0443\u043a \u043f\u043e\u043b\u043e\u0432\u0446\u0435 \u043f\u043e\u043b\u043e\u0442\u0435\u043d\u0446\u0435 \u043f\u043e\u043b\u0442\u0430\u043d\u043e \u043f\u043e\u043b\u0442\u043e\u0440\u0430\u043a \u043f\u043e\u043b\u0443\u043d\u0438 \u043f\u043e\u043b\u0443\u0448\u0438 \u043f\u043e\u043b\u044f\u043a\u043e \u043f\u043e\u043c\u0435\u043b\u043e \u043f\u043e\u043c\u0435\u043b\u044c\u043d\u0438\u043a\u043e \u043f\u043e\u043d\u0434\u044f\u043a\u043e \u043f\u043e\u043d\u0438\u043a\u0430\u0440\u043e \u043f\u043e\u043d\u043e\u043c\u0430\u0440\u0451 \u043f\u043e\u043d\u0447\u0438\u043a\u043e \u043f\u043e\u043f\u043e \u043f\u043e\u043f\u044b\u0440\u0438 \u043f\u043e\u0440\u0442\u043d\u043e \u043f\u043e\u0441\u043e\u0445\u043e \u043f\u043e\u0441\u0442 \u043f\u043e\u0442\u0430\u043f\u043e \u043f\u043e\u0442\u0451\u043c\u043a\u0438 \u043f\u043e\u0442\u0440\u0435\u043f\u0430\u043b\u043e \u043f\u0440\u0430\u0437\u0434\u043d\u0438\u043a\u043e \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0441\u043a\u0438 \u043f\u0440\u0438\u0431\u044b\u043b\u043e \u043f\u0440\u0438\u0432\u0430\u043b\u043e \u043f\u0440\u0438\u043c\u0430\u043a\u043e \u043f\u0440\u0438\u0445\u043e\u0434\u044c\u043a\u043e \u043f\u0440\u043e\u043d\u0438 \u043f\u0440\u043e\u043d\u0438\u0447\u0435 \u043f\u0440\u043e\u0441\u043a\u0443\u0440\u043a\u0438 \u043f\u0440\u043e\u0442\u0430\u0441\u043e \u043f\u0440\u043e\u0445\u043e\u0440\u043e \u043f\u0443\u0434\u043e\u0301\u0432\u043a\u0438 \u043f\u0443\u0433\u0430\u0447\u0451 \u043f\u0443\u0433\u0438 \u043f\u0443\u0434\u0438 \u043f\u0443\u043b\u044c\u0434\u043e \u043f\u0443\u0437\u0430\u043a\u043e \u043f\u0443\u0437\u0430\u043d\u043e \u043f\u0443\u0442\u0438\u043b\u0438 \u043f\u0443\u0442\u0438\u043b\u043e \u043f\u0443\u0442\u0438 \u043f\u0443\u0442\u0438\u043d\u043e \u043f\u0443\u0442\u044f\u0442\u0438 \u043f\u0443\u0448\u043a\u0430\u0440\u0451 \u043f\u0443\u0448\u043a\u0438 \u043f\u0443\u0448\u043d\u043e \u043f\u0448\u0435\u043d\u0438\u0447\u043d\u0438\u043a\u043e \u043f\u044b\u0436\u0430\u043b\u043e \u043f\u044b\u0440\u044c\u0435 \u043f\u044c\u044f\u043d\u044b\u0445 \u043f\u044f\u0442\u043e\u0441\u0438 \u0440\u0430\u0431\u0438\u043d\u043e\u0432\u0438\u0447 \u0440\u0430\u0431\u0440\u0435\u043d\u043e\u0432\u0438\u0447 \u0440\u0430\u0437\u0438 \u0440\u0430\u0437\u0443\u0432\u0430\u0435 \u0440\u0430\u0439\u0442 \u0440\u0430\u043c\u0430\u0437\u0430\u043d\u043e \u0440\u0430\u0441\u043a\u0430\u043b\u043e \u0440\u0430\u0441\u043f\u043e\u043f\u043e \u0440\u0430\u0441\u043f\u0443\u0442\u0438 \u0440\u0430\u0441\u0441\u043a\u0430\u0437\u043e \u0440\u0430\u0441\u0442\u043e\u0440\u0433\u0443\u0435 \u0440\u0430\u0444\u0438\u043a\u043e \u0440\u0435\u0432\u044f\u0433\u0438 \u0440\u0435\u0432\u044f\u043a\u0438 \u0440\u0435\u043c\u0438\u0437\u043e \u0440\u0435\u043f\u0438 \u0440\u0435\u0442\u044e\u043d\u0441\u043a\u0438\u0445 \u0440\u0435\u0448\u0435\u0442\u0438\u043b\u043e \u0440\u0435\u0448\u0435\u0442\u043d\u0438\u043a\u043e \u0440\u0435\u0437\u0430\u043d\u0441\u043e \u0440\u0435\u0437\u043d\u0438\u043a\u043e \u0440\u0436\u0435\u0432\u0441\u043a\u0438 \u0440\u043e\u0433\u0430\u0447\u0451 \u0440\u043e\u0433\u043e \u0440\u043e\u0433\u043e\u0437\u0438 \u0440\u043e\u0434\u0437\u044f\u043d\u043a\u043e \u0440\u043e\u0434\u0438 \u0440\u043e\u0434\u0447\u0435\u043d\u043a\u043e \u0440\u043e\u0436\u043a\u043e \u0440\u043e\u0437\u0430\u043d\u043e \u0440\u043e\u043a\u043e\u0441\u0441\u043e\u0432\u0441\u043a\u0438 \u0440\u043e\u0437\u043e\u0432\u0441\u043a\u0438 \u0440\u043e\u043c\u0430\u043d\u043e \u0440\u043e\u0441\u0442\u043e \u0440\u043e\u0441\u0442\u043e\u0432\u0446\u0435 \u0440\u0443\u0431\u0430\u0448\u043a\u0438 \u0440\u0443\u0433\u043e \u0440\u0443\u0434\u0430\u0432\u0438 \u0440\u0443\u0434\u0438 \u0440\u0443\u0434\u043e \u0440\u0443\u0434\u043d\u0438\u043a\u043e \u0440\u0443\u043c\u044f\u043d\u0446\u0435 \u0440\u0443\u043d\u043e \u0440\u0443\u0441\u0430\u043a\u043e \u0440\u0443\u0441\u0430\u043d\u043e \u0440\u0443\u0441\u043a\u0438\u0445 \u0440\u0443\u0441\u043d\u0430\u043a \u0440\u0443\u0441\u0441\u043a\u0438\u0445 \u0440\u0443\u0447\u043a\u0438 \u0440\u043e\u0449\u0438 \u0440\u044b\u0431\u0430\u043a\u043e \u0440\u044b\u0431\u0430\u043b\u043a\u0438 \u0440\u044b\u043d\u0434\u0438 \u0440\u044b\u0436\u0430\u043d\u043e \u0440\u044b\u0436\u043a\u043e \u0440\u044b\u0436\u0438\u043a\u043e \u0440\u044b\u0436\u043e \u0440\u044b\u043a\u043e \u0440\u044b\u0442\u0438 \u0440\u044b\u0447\u0435\u043d\u043a\u043e \u0440\u044e\u0440\u0438\u043a\u043e \u0440\u044f\u0431\u043a\u0438 \u0440\u044f\u0431\u043a\u043e \u0440\u044f\u0431\u043e \u0440\u044f\u0431\u0446\u0435 \u0440\u044f\u0445\u0438 \u0441\u0430\u0431\u0430\u043d\u0446\u0435 \u0441\u0430\u0431\u0438\u0442\u043e \u0441\u0430\u0432\u0430\u0441\u0438 \u0441\u0430\u0432\u0432\u0430\u0442\u0438\u043c\u043e \u0441\u0430\u0432\u0432\u0438 \u0441\u0430\u0432\u0438\u043d\u043a\u043e \u0441\u0430\u0432\u0435\u043d\u043a\u043e \u0441\u0430\u0432\u0440\u0430\u0441\u043e \u0441\u0430\u0433\u0430\u0434\u0435\u0435 \u0441\u0430\u0434\u043e\u0432\u0441\u043a\u0438 \u0441\u0430\u0434\u044b\u043a\u043e \u0441\u0430\u0437\u043e\u043d\u043e \u0441\u0430\u0438\u0442\u043e \u0441\u0430 \u0441\u0430\u0439\u0442\u0430\u0445\u043c\u0435\u0442\u043e \u0441\u0430\u043b\u0430\u0433\u0438 \u0441\u0430\u043b\u043a\u043e \u0441\u0430\u043b\u0442\u0430\u043d\u043e \u0441\u0430\u043b\u044c\u043a\u043e \u0441\u0430\u043b\u044c\u043d\u0438\u043a\u043e \u0441\u0430\u043c\u0430\u0440\u0438 \u0441\u0430\u043c\u043e\u0439\u043b\u043e \u0441\u0430\u043c\u043e\u0445\u0438 \u0441\u0430\u043c\u0441\u043e\u043d\u043e \u0441\u0430\u043d\u043d\u0438\u043a\u043e \u0441\u0430\u043f\u0430\u043b\u0451 \u0441\u0430\u043f\u043e\u0433\u043e \u0441\u0430\u043f\u043e\u0436\u043d\u0438\u043a\u043e \u0441\u0430\u043f\u0440\u044b\u043a\u0438 \u0441\u0430\u0440\u043d\u044b\u0447\u0435 \u0441\u0430\u0444\u0438\u044e\u043b\u0438 \u0441\u0430\u0444\u0440\u043e\u043d\u043e \u0441\u0430\u0445\u0430\u0440\u043e \u0441\u0430\u044f \u0441\u0430\u044f\u043d\u043a\u0438 \u0441\u0430\u044f\u043d\u043a\u043e \u0441\u0430\u044f\u043d\u043e \u0441\u0430\u044f\u043d\u043e\u0432\u0438\u0447 \u0441\u0430\u044f\u043d\u0441\u043a\u0438 \u0441\u0432\u0430\u043b\u043e \u0441\u0435\u0432\u0435\u0440\u0438\u043d\u043e \u0441\u0435\u0432\u0435\u0440\u043e \u0441\u0435\u0432\u043e\u0441\u0442\u044c\u044f\u043d\u043e \u0441\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a\u043e \u0441\u0435\u0434\u043e \u0441\u0435\u043b\u0435\u0437\u043d\u0451 \u0441\u0435\u043b\u0438\u0432\u0430\u043d\u043e \u0441\u0435\u043b\u0438\u0434\u043e \u0441\u0435\u043c\u0435\u0440\u0438\u043a\u043e \u0441\u0435\u043c\u0451\u043d\u043e \u0441\u0435\u043c\u0438\u0447\u0430\u0435\u0432\u0441\u043a\u0438 \u0441\u0435\u043c\u044f\u043d\u0438 \u0441\u0435\u043d\u043e\u0442\u0440\u0443\u0441\u043e \u0441\u0435\u043d\u044c\u043a\u0438 \u0441\u0435\u0440\u0433\u0435\u0435 \u0441\u0435\u0440\u0435\u0431\u0440\u043e \u0441\u0435\u0440\u0435\u0431\u0440\u044f\u043a\u043e \u0441\u0435\u0440\u0451\u0433\u0438 \u0441\u0435\u0440\u043e \u0441\u0435\u0440\u043f\u0438\u043e\u043d\u043e \u0441\u0435\u0447\u0435\u043d\u043e \u0441\u0451\u043c\u0438 \u0441\u0438\u0432\u0430\u043a\u043e \u0441\u0438\u0433\u0430\u0435 \u0441\u0438\u0433\u0430\u0447\u0451 \u0441\u0438\u0433\u0430\u043b\u043e \u0441\u0438\u0434\u043e\u0440\u043e \u0441\u0438\u0437\u043e \u0441\u0438\u0437\u044b \u0441\u0438\u043b\u0430\u0435 \u0441\u0438\u043b\u0438\u0432\u0430\u043d\u043e \u0441\u0438\u043b\u0438 \u0441\u0438\u043b\u044c\u0432\u0435\u0441\u0442\u0440\u043e \u0441\u0438\u043c\u0430\u043a\u0438 \u0441\u0438\u043c\u043e\u043d\u043e \u0441\u0438\u0442\u043d\u0438\u043a\u043e \u0441\u0438\u044f\u043a\u0430\u0435 \u0441\u0438\u044f\u043b\u043e \u0441\u0438\u044f \u0441\u0438\u044f\u043d\u0433\u0443\u043b\u043e \u0441\u0438\u044f\u043d\u0438 \u0441\u0438\u044f\u043d\u0438\u0446\u0430 \u0441\u0438\u044f\u043d\u043a\u0438 \u0441\u0438\u044f\u043d\u043a\u043e \u0441\u0438\u044f\u043d\u043a\u043e \u0441\u0438\u044f\u043d\u043a\u043e\u0432\u0441\u043a\u0438 \u0441\u0438\u044f\u043d\u043e \u0441\u0438\u044f\u043d\u043e\u0432\u0438\u0447 \u0441\u0438\u044f\u043d\u043e\u0441\u043e \u0441\u0438\u044f\u043d\u0441\u043a\u0438 \u0441\u0438\u044f\u043d\u0441\u043a\u0438\u0445 \u0441\u0438\u044f\u043d\u0446\u0435 \u0441\u0438\u044f\u043d\u0447\u0443\u043a \u0441\u0438\u044f\u0441\u0438\u043d\u043e \u0441\u043a\u0432\u043e\u0440\u0446\u043e \u0441\u043a\u0440\u044f\u0431\u0438 \u0441\u043a\u043e\u0440\u043e\u0431\u043e\u0433\u0430\u0442\u043e \u0441\u043a\u043e\u0440\u043e\u0445\u043e\u0434\u043e \u0441\u043a\u0443\u0440\u0430\u0442\u043e \u0441\u043b\u0430\u0432\u0441\u043a\u0438 \u0441\u043b\u0435\u043f\u044b\u043d\u0438 \u0441\u043b\u043e\u0431\u043e\u0436\u0430\u043d\u0438 \u0441\u043b\u0443\u0447\u0435\u0432\u0441\u043a\u0438 \u0441\u043c\u0430\u0433\u0438 \u0441\u043c\u0438\u0440\u043d\u0438\u0442\u0441\u043a\u0438 \u0441\u043c\u0438\u0440\u043d\u043e \u0441\u043c\u0435\u0442\u0430\u043d\u0438 \u0441\u043c\u0435\u0445\u043e \u0441\u043c\u0435\u0448\u043d\u043e \u0441\u043c\u043e\u043b\u0438 \u0441\u043c\u043e\u043b\u044f\u043d\u0438\u043d\u043e \u0441\u043c\u043e\u0442\u0440\u043e \u0441\u043d\u0430\u0442\u043a\u0438 \u0441\u043d\u0435\u0433\u0438\u0440\u0451 \u0441\u043d\u0435\u0442\u043a\u043e \u0441\u043e\u0431\u0430\u043a\u043e \u0441\u043e\u0431\u0430\u0447\u043a\u0438 \u0441\u043e\u0431\u043e\u043b\u0435 \u0441\u043e\u0431\u043e\u043b\u0435\u0432\u0441\u043a\u0438 \u0441\u043e\u0431\u0447\u0430\u043a \u0441\u043e\u043a\u043e\u043b\u043e \u0441\u043e\u043b\u0434\u0430\u0442\u043e \u0441\u043e\u043b\u043e\u0432\u044c\u0451 \u0441\u043e\u043b\u043e\u0434\u043d\u0438\u043a\u043e \u0441\u043e\u043b\u043e\u0434\u0441\u043a\u0438\u0445 \u0441\u043e\u043b\u043e\u043c\u0430\u0445\u0438 \u0441\u043e\u043b\u043e\u043c\u0438 \u0441\u043e\u043b\u043e\u043c\u043e\u043d\u043e \u0441\u043e\u043c\u043e \u0441\u043e\u043d\u0438 \u0441\u043e\u043f\u043e \u0441\u043e\u0440\u043e\u043a\u0438 \u0441\u043e\u0447\u0438\u043d\u0441\u043a\u0438 \u0441\u043f\u0430\u043d\u043e \u0441\u043f\u0440\u0430\u0432\u0446\u0435 \u0441\u0442\u0430\u043b\u0438 \u0441\u0442\u0430\u0440\u0438\u043a\u043e \u0441\u0442\u0430\u0440\u0446\u0435 \u0441\u0442\u0430\u0440\u043e\u0432\u0435\u0440\u043e \u0441\u0442\u0430\u0440\u043e\u0432\u043e\u043b\u043a\u043e \u0441\u0442\u0430\u0440\u043e\u0434\u0443\u0431\u043e \u0441\u0442\u0430\u0440\u043e\u0434\u0443\u0431\u0446\u0435 \u0441\u0442\u0430\u0442\u043d\u0438\u043a \u0441\u0442\u0435\u0431\u043b\u0435 \u0441\u0442\u0435\u0433\u043d\u043e \u0441\u0442\u0435\u043f\u0430\u043d\u043e \u0441\u0442\u0435\u043f\u0430\u043d\u043a\u043e \u0441\u0442\u0435\u043f\u0430\u0448\u0438 \u0441\u0442\u0435\u043f\u043d\u043e \u0441\u0442\u0435\u0436\u0435\u043d\u0441\u043a\u0438 \u0441\u0442\u0440\u0435\u043a\u0430\u043b\u043e \u0441\u0442\u0440\u0435\u043b\u043a\u043e \u0441\u0442\u0440\u0435\u043b\u044c\u043d\u0438\u043a\u043e \u0441\u0442\u0440\u0435\u043b\u044c\u0446\u043e \u0441\u0442\u0440\u043e\u0433\u0430\u043d\u043e \u0441\u0443\u0431\u0431\u043e\u0442\u0438 \u0441\u0443\u0431\u043e\u0442\u0438 \u0441\u0443\u0432\u043e\u0440\u0438 \u0441\u0443\u0432\u043e\u0440\u043a\u0438 \u0441\u0443\u0432\u043e\u0440\u043e \u0441\u0443\u0434\u043b\u0435\u043d\u043a\u043e \u0441\u0443\u043d\u0433\u0430\u0442\u0443\u043b\u0438 \u0441\u0443\u043a\u0430\u0447\u0451 \u0441\u0443\u043a\u0438 \u0441\u0443\u043b\u0442\u0430\u043d\u043e \u0441\u0443\u043f\u0440\u0443\u043d\u043e \u0441\u0443\u0440\u0438\u043a\u043e \u0441\u0443\u0440\u043a\u043e \u0441\u0443\u0440\u043d\u0438 \u0441\u0443\u0441\u043e\u0435 \u0441\u0443\u0441\u043b\u044f\u043a\u043e \u0441\u0443\u0441\u043d\u0438 \u0441\u0443\u0442\u0443\u043b\u0438 \u0441\u0443\u0445\u0430\u043d\u043e \u0441\u0443\u0445\u0430\u0440\u043d\u0438\u043a\u043e \u0441\u0443\u0445\u0438\u0445 \u0441\u0443\u0445\u043e\u0440\u0443\u043a\u043e \u0441\u0443\u0447\u043a\u043e \u0441\u0447\u0430\u0441\u0442\u043b\u0438\u0432\u0446\u0435 \u0441\u044b\u0441\u043e\u0435 \u0441\u044b\u0442\u043d\u0438\u043a\u043e \u0441\u044b\u0447\u0451 \u0441\u044b\u0447\u043a\u0438 \u0441\u044c\u044f\u043d\u043e \u0441\u044e\u043a\u043e\u0441\u0435 \u0442\u0430\u0431\u0430\u043a\u043e \u0442\u0430\u0431\u0435\u0440\u043d\u0430\u043a\u0443\u043b\u043e \u0442\u0430\u043b\u0430\u043d\u043e \u0442\u0430\u043b\u0430\u043b\u0438\u0445\u0438 \u0442\u0430\u043c\u0430\u0440\u043a\u0438 \u0442\u0430\u043c\u0430\u0445\u0438 \u0442\u0430\u043d\u043a\u043e \u0442\u0430\u0440\u0430\u0441\u043e \u0442\u0430\u0440\u043d\u043e\u0432\u0435\u0446\u043a\u0438 \u0442\u0430\u0442\u0430\u0440\u0438\u043d\u043e \u0442\u0430\u0442\u0430\u0440\u0438\u043d\u0446\u0435 \u0442\u0430\u0442\u0430\u0440\u043e \u0442\u0430\u0442\u0430\u0443\u0440\u043e \u0442\u0430\u0442\u0442\u0430\u0440 \u0442\u0430\u0443\u0448\u0435 \u0442\u0432\u0430\u0440\u0434\u043e\u0432\u0441\u043a\u0438 \u0442\u0435\u043b\u0438\u0446\u044b \u0442\u0451\u043c\u043a\u0438 \u0442\u0435\u043f\u043b\u043e \u0442\u0435\u0440\u0435\u0431\u043e \u0442\u0435\u0440\u0435\u0445\u043e \u0442\u0435\u0440\u0435\u0449\u0435\u043d\u043a\u043e \u0442\u0435\u0440\u0451\u0448\u0438 \u0442\u0435\u0442\u0435\u0440\u0435 \u0442\u0438\u043c\u043e\u0444\u0435\u0435 \u0442\u0438\u043c\u043e\u0448\u043a\u0438 \u0442\u0438\u043f\u0430\u043b\u043e \u0442\u0438\u0442\u043e \u0442\u0438\u0445\u0432\u0438\u043d\u0441\u043a\u0438 \u0442\u0438\u0445\u043e\u043c\u0438\u0440\u043e \u0442\u0438\u0445\u043e\u043d\u0435\u043d\u043a\u043e \u0442\u0438\u0445\u043e\u043d\u043e \u0442\u0438\u0445\u043e\u0445\u043e\u0434 \u0442\u043a\u0430\u0447\u0451 \u0442\u043a\u0430\u0447\u0435\u043d\u043a\u043e \u0442\u043e\u043a\u0430\u0440\u0435 \u0442\u043e\u043a\u043c\u0430\u043a\u043e \u0442\u043e\u043b\u0431\u0430\u043d\u043e \u0442\u043e\u043b\u043a\u0430\u0447\u0451 \u0442\u043e\u043b\u043c\u0430\u0447\u0451 \u0442\u043e\u043b\u043e\u043a\u043e\u043d\u0441\u043a\u0438 \u0442\u043e\u043b\u0441\u0442\u043e\u0431\u0440\u043e \u0442\u043e\u043b\u0441\u0442\u043e\u043a\u043e\u0436\u0435 \u0442\u043e\u043b\u0441\u0442\u043e \u0442\u043e\u043f\u043e\u0440\u043e \u0442\u043e\u043f\u043e\u0440\u043a\u043e \u0442\u043e\u0440\u043e\u043f\u043e \u0442\u043e\u0440\u0447\u0438\u043d\u043e\u0432\u0438\u0447 \u0442\u0440\u0430\u0432\u043a\u0438 \u0442\u0440\u0430\u0432\u043d\u0438\u043a\u043e \u0442\u0440\u0430\u043a\u0442\u0438\u0440\u043d\u0438\u043a\u043e \u0442\u0440\u0430\u043f\u0435\u0437\u043d\u0438\u043a\u043e \u0442\u0440\u0435\u0434\u0438\u0430\u043a\u043e\u0432\u0441\u043a\u0438 \u0442\u0440\u0435\u0442\u044c\u044f\u043a\u043e \u0442\u0440\u0438\u0444\u043e\u043d\u043e \u0442\u0440\u043e\u0444\u0438\u043c\u043e \u0442\u0440\u0443\u0441\u043e \u0442\u0440\u0443\u0442\u043d\u0435 \u0442\u0440\u0443\u0444\u0430\u043d\u043e \u0442\u0440\u0443\u0445\u0438 \u0442\u0440\u044b\u043d\u0434\u0438 \u0442\u0443\u043f\u0438\u0446\u044b \u0442\u0443\u043f\u043e\u043b\u0435 \u0442\u0443\u0440\u0431\u0438 \u0442\u0443\u0440\u0433\u0435\u043d\u0435 \u0442\u0443\u043c\u0430\u0441\u043e \u0442\u0443\u0440\u043e \u0442\u0443\u0440\u0444\u0430\u043d\u043e \u0442\u044b\u0447\u043a\u0438 \u0442\u044e\u0448\u043d\u044f\u043a\u043e \u0442\u044f\u043d\u043d\u0438\u043a\u043e \u0443\u0430\u0448\u0438\u043d\u0433\u0442\u043e \u0443\u0431\u044b\u0448 \u0443\u0431\u0435\u0439\u0441\u043e\u0431\u0430\u043a\u0438 \u0443\u0432\u0430\u0440\u043e \u0443\u0433\u043b\u043e \u0443\u0433\u043b\u0438\u0446\u043a\u0438 \u0443\u0433\u043b\u0438\u0447\u0438\u043d\u0438 \u0443\u0433\u043e\u043b\u0435 \u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u043e \u0443\u0434\u043e\u043c \u0443\u0438\u0446\u043a\u0438 \u0443\u043b\u0430\u043d\u043e \u0443\u043b\u0430\u0434\u0438\u043c\u043e \u0443\u043b\u0438\u0446\u043a\u0438 \u0443\u043b\u044c\u044f\u043d\u0438 \u0443\u043b\u044c\u044f\u043d\u043e \u0443\u043b\u044c\u044f\u0448\u0438 \u0443\u043c\u0430\u043c\u0435\u0442\u0435 \u0443\u043c\u0430\u043d\u043e \u0443\u043c\u0441\u043a\u0438 \u0443\u043d\u0433\u0435\u0440 \u0443\u043d\u043a\u043e\u0432\u0441\u043a\u0438 \u0443\u043d\u0442\u0438\u043b\u043e \u0443\u0440\u0430\u043a\u043e \u0443\u0440\u0430\u043b\u0435\u0446 \u0443\u0440\u0431\u0430\u043d\u043e\u0432\u0441\u043a\u0438 \u0443\u0440\u0443\u0441\u043e \u0443\u0441\u0430\u0442\u043e \u0443\u0441\u0430\u0447\u0451 \u0443\u0441\u0435\u043d\u043a\u043e \u0443\u0441\u0438\u043b\u043e \u0443\u0441\u043e \u0443\u0441\u043e\u0435 \u0443\u0441\u043f\u0435\u043d\u0441\u043a\u0438 \u0443\u0441\u0442\u0438\u043c\u043e\u0432\u0438\u0447 \u0443\u0441\u0442\u0438\u043d\u043e \u0443\u0441\u0442\u044e\u0436\u0430\u043d\u0438 \u0443\u0442\u0442\u0435\u0440\u043a\u043b\u043e \u0443\u0442\u0451\u0441\u043e \u0443\u0442\u044e\u0436\u0438 \u0443\u0445\u043e \u0443\u0445\u0442\u043e\u043c\u0441\u043a\u0438 \u0443\u0448\u0430\u043a\u043e \u0444\u0430\u043c\u043c\u0443\u0441 \u0444\u0430\u043c\u0443\u0441\u043e \u0444\u0430\u043d\u0438 \u0444\u0435\u0434\u0438 \u0444\u0435\u0434\u043e\u0441\u043e \u0444\u0435\u0434\u043e\u0442\u043e \u0444\u0435\u0434\u043e\u0441\u0435\u0435 \u0444\u0435\u0434\u0447\u0435\u043d\u043a\u043e \u0444\u0435\u0445\u043b\u0430\u0447\u0435 \u0444\u0451\u0434\u043e\u0440\u043e \u0444\u0451\u0445\u043b\u0430\u0447\u0435 \u0444\u0435\u0434\u0443\u043b\u043e \u0444\u0435\u043d\u0435\u043d\u043a\u043e \u0444\u0435\u0442\u0438\u0441\u043e \u0444\u0438\u043b\u0430\u0442\u043e \u0444\u0438\u043b\u0435\u043d\u043a\u043e \u0444\u0438\u043b\u0438\u043c\u043e\u043d\u043e \u0444\u0438\u043b\u0438\u043f\u043e \u0444\u0438\u043b\u0438\u043f\u043f\u043e \u0444\u0438\u043b\u044c\u0447\u0435\u043d\u043a\u043e \u0444\u043b\u0451\u0440\u043e \u0444\u043e\u043a\u0438 \u0444\u043e\u043c\u0435\u043d\u043a\u043e \u0444\u043e\u043c\u0438 \u0444\u043e\u043c\u0438\u0447\u0451 \u0444\u043e\u043d\u0432\u0438\u0437\u0438 \u0444\u043e\u0440\u043e\u043f\u043e\u043d\u043e \u0444\u0438\u0440\u0441\u043e \u0444\u0440\u0430\u043d\u043a\u043e \u0444\u0440\u043e\u043b\u043e \u0444\u0440\u0430\u043d\u0446\u0435 \u0444\u0443\u043a\u0438 \u0444\u0443\u0440\u043c\u0430\u043d\u043e \u0445\u0430\u0431\u0430\u043b\u043e \u0445\u0430\u0431\u0430\u0440\u043e \u0445\u0430\u0431\u0435\u043d\u0441\u043a\u0438 \u0445\u0430\u043b\u0438\u043f\u043e \u0445\u0430\u043b\u0441\u043a\u0438 \u0445\u0430\u043b\u0442\u0443\u0440\u0438 \u0445\u0430\u043c\u0438\u0434\u0443\u043b\u043b\u0438 \u0445\u0430\u043d\u0438\u043b\u043e \u0445\u0430\u043d\u0438\u043f\u043e \u0445\u0430\u043d\u0446\u0435 \u0445\u0430\u0440\u0437\u0438 \u0445\u0430\u0440\u0438\u0442\u043e\u043d\u043e \u0445\u0430\u0440\u043b\u0430\u043c\u043e \u0445\u0430\u0440\u043c\u0430\u0446 \u0445\u0430\u0441\u043b\u0438\u043a \u0445\u0432\u043e\u0441\u0442\u043e\u0432\u0441\u043a\u0438 \u0445\u0438\u0433\u0438\u0440 \u0445\u043b\u0435\u0431\u043d\u0438\u043a\u043e \u0445\u043b\u0435\u0431\u043e \u0445\u043b\u043e\u043f\u043e\u043d\u0438 \u0445\u043c\u0435\u043b\u044c\u043d\u043e \u0445\u043e\u0445\u043b\u0430\u0447\u0435 \u0445\u043e\u0434\u044f\u0435 \u0445\u043e\u043b\u043e\u0434 \u0445\u043e\u043b\u043e\u0434\u043e \u0445\u043e\u043c\u043a\u043e\u043b\u043e \u0445\u043e\u0440\u044c\u043a\u043e \u0445\u0440\u0430\u043c\u043e \u0445\u0440\u0435\u0431\u0442\u043e \u0445\u0440\u043e\u043c\u043e \u0445\u0440\u0443\u0449\u0451 \u0445\u0443\u0434\u043e\u0432\u0435\u043a\u043e \u0445\u0443\u0434\u044f\u043a\u043e \u0445\u0443\u0440\u0442\u0438 \u0446\u0430\u043f\u043b\u0438 \u0446\u0430\u0440\u0451 \u0446\u0430\u0440\u0435\u0433\u043e\u0440\u043e\u0434\u0446\u0435 \u0446\u0430\u0440\u0438\u0446\u044b \u0446\u0430\u0440\u0441\u043a\u043e \u0446\u0432\u0435\u0442\u043a\u043e \u0446\u0432\u0435\u0442\u043d\u043e \u0446\u0432\u0435\u0442\u0430\u0435 \u0446\u0432\u0438\u043b\u0435\u043d\u0435 \u0446\u0435\u0434\u043b\u0438\u0446 \u0446\u0435\u0439\u0434\u043b\u0435\u0440\u0438 \u0446\u0435\u0439\u0434\u043b\u0438\u0446 \u0446\u0435\u043b\u0438\u043a\u043e\u0432\u0441\u043a\u0438 \u0446\u0435\u043b\u044c\u043d\u0435\u0440 \u0446\u0435\u0440\u0435\u0442\u0435\u043b\u0438 \u0446\u0435\u0445\u0430\u043d\u043e\u0432\u0435\u0446\u043a\u0438 \u0446\u0438\u0433\u043b\u0435\u0440 \u0446\u0438\u043c\u043c\u0435\u0440\u043c\u0430 \u0446\u0438\u043e\u043b\u043a\u043e\u0432\u0441\u043a\u0438 \u0446\u0438\u0440\u044e\u043b\u044c\u043d\u0438\u043a\u043e \u0446\u0438\u0442\u043d\u0438\u043a\u043e \u0446\u0438\u0446\u0438\u0430\u043d\u043e \u0446\u0443\u043a\u0430\u043d\u043e \u0446\u0443\u043b\u0443\u043a\u0438\u0434\u0437\u0435 \u0446\u044b\u0433\u0430\u043d\u043e \u0446\u044b\u0437\u044b\u0440\u0435 \u0446\u044b\u0440\u043a\u0443\u043d\u043e \u0446\u044b\u0440\u0438\u043d\u0441\u043a\u0438 \u0447\u0430\u0430\u0434\u0430\u0435 \u0447\u0430\u0434\u043e \u0447\u0430\u0440\u043a\u043e \u0447\u0430\u0437\u043e \u0447\u0430\u0439\u043a\u0430 \u0447\u0430\u0439\u043a\u043e\u0432\u0441\u043a\u0438 \u0447\u0430\u043b\u044b \u0447\u0430\u043f\u0430\u0435 \u0447\u0435\u0431\u043e\u0442\u0430\u0440\u0451 \u0447\u0435\u0431\u044b\u043a\u0438 \u0447\u0435\u0436\u0435\u043a\u043e \u0447\u0435\u043a\u0443\u0434\u0430\u0435 \u0447\u0435\u043a\u043c\u0430\u0440\u0451 \u0447\u0435\u043b\u043e\u043c\u0435\u0435 \u0447\u0435\u043b\u043e\u043c\u0435 \u0447\u0435\u043b\u043e\u043c\u0446\u0435 \u0447\u0435\u043b\u043f\u0430\u043d\u043e \u0447\u0435\u043c\u0435\u0440\u0438\u0441 \u0447\u0435\u043d\u0434\u0435 \u0447\u0435\u043f\u0443\u0440\u0438 \u0447\u0435\u0440\u0435\u043d\u0447\u0438\u043a\u043e \u0447\u0435\u0440\u0435\u043f\u0430\u043d\u043e \u0447\u0435\u0440\u043a\u0430\u0441\u043e \u0447\u0435\u0440\u043a\u0430\u0448\u0438 \u0447\u0435\u0440\u043d\u0430\u043a\u043e \u0447\u0435\u0440\u043d\u0435\u0446\u043a\u0438 \u0447\u0435\u0440\u043d\u0438\u043a\u043e \u0447\u0435\u0440\u043d\u043e\u0431\u0440\u043e\u0432\u0438 \u0447\u0435\u0440\u043d\u043e \u0447\u0435\u0440\u043d\u043e\u043c\u044b\u0440\u0434\u0438 \u0447\u0435\u0440\u043d\u044b\u0445 \u0447\u0435\u0440\u043d\u044b\u0448\u0451 \u0447\u0435\u0440\u043d\u044f\u0432\u0441\u043a\u0438 \u0447\u0435\u0441\u043d\u043e\u043a\u043e \u0447\u0435\u0445\u043e \u0447\u0438\u0433\u0440\u0430\u043a\u043e \u0447\u0438\u0436\u0438\u043a\u043e \u0447\u0438\u043b\u0430\u0435 \u0447\u0438\u0440\u043a\u0430\u0448 \u0447\u0438\u0441\u0442\u044f\u043a\u043e \u0447\u0438\u0447\u0438\u043a\u043e \u0447\u0438\u0447\u043a\u0430\u043d\u043e \u0447\u043a\u0430\u043b\u043e \u0447\u043c\u044b\u0445\u043e \u0447\u0443\u0431\u0430\u0440\u043e \u0447\u0443\u0433\u0443\u043d\u043e \u0447\u0443\u0434\u043e \u0447\u0443\u0436\u0438\u043d\u043e \u0447\u0443\u043a\u0447\u043e \u0447\u0443\u043a\u0440\u0435\u0435 \u0447\u0443\u043c\u0430\u043a\u043e \u0447\u0443\u043f\u0430\u043b\u043e \u0447\u0443\u043f\u0430\u0445\u0438 \u0447\u0443\u043f\u043e \u0447\u0443\u043f\u0440\u0430\u043a\u043e \u0447\u0443\u043f\u0440\u0438 \u0447\u0443\u043f\u0440\u043e \u0447\u0443\u0440\u043a\u0438 \u0447\u0443\u0447\u0430\u043d\u043e \u0447\u0443\u0447\u0443\u043c\u0430\u0448\u0435 \u0448\u0430\u0431\u0430\u043b\u0438 \u0448\u0430\u0431\u0443\u043d\u0438 \u0448\u0430\u0433\u0438\u0434\u0437\u044f\u043d\u043e \u0448\u0430\u043a\u043c\u0430\u043a\u043e \u0448\u0430\u043b\u043e\u043c\u0435\u043d\u0446\u0435 \u0448\u0430\u043b\u044f\u043f\u0438 \u0448\u0430\u043f\u043e\u0432\u0430\u043b\u043e \u0448\u0430\u043f\u043e\u0448\u043d\u0438\u043a\u043e \u0448\u0430\u043f\u0438\u0440\u043e \u0448\u0430\u0440\u0430\u043f\u043e \u0448\u0430\u0440\u043e \u0448\u0430\u0440\u043e\u043d\u043e \u0448\u0430\u0440\u0448\u0438 \u0448\u0430\u0441\u0442\u0438 \u0448\u0430\u0442\u0430\u043b\u043e \u0448\u0430\u0448\u043b\u043e \u0448\u0432\u0435\u0434\u043e \u0448\u0432\u0435\u0440\u043d\u0438\u043a \u0448\u0435\u0432\u0435\u043b\u0451\u043a \u0448\u0435\u043b\u0430\u0433\u0438 \u0448\u0435\u043b\u0435\u043f\u043e \u0448\u0435\u043b\u043e\u043c\u043e \u0448\u0435\u043b\u044f\u043f\u0438 \u0448\u0435\u043f\u043a\u0438 \u0448\u0435\u043f\u043e\u0432\u0430\u043b\u043e \u0448\u0435\u0440\u0435\u043c\u0435\u0442\u044c\u0435 \u0448\u0435\u0440\u043a\u043e \u0448\u0435\u0440\u0441\u0442\u043e \u0448\u0438\u0431\u0430\u043b\u043e \u0448\u0438\u0433\u0430\u0435 \u0448\u0438\u0433\u0438 \u0448\u0438\u043a\u0430\u043b\u043e \u0448\u0438\u043d\u0441\u043a\u0438 \u0448\u0438\u0440\u0438\u043d\u043e \u0448\u0438\u0440\u043c\u0430\u043d\u043e \u0448\u0438\u0440\u043e\u043a\u043e \u0448\u0438\u0445\u043e \u0448\u0438\u0445\u0440\u0430\u043d\u043e \u0448\u0438\u0448\u043a\u0430\u043d\u043e \u0448\u0438\u0448\u043a\u0438 \u0448\u0438\u0448\u043a\u043e \u0448\u0438\u0448\u043b\u043e \u0448\u0438\u0448\u043e \u0448\u043a\u0443\u0440\u0430\u0442\u043e \u0448\u043a\u0443\u0442 \u0448\u043b\u044b\u043a\u043e \u0448\u043c\u0430\u0433\u0438 \u0448\u043c\u0430\u043a\u043e \u0448\u043c\u0435\u043b\u0435 \u0448\u043f\u0430\u043a \u0448\u043f\u0438\u043a\u0430\u043b\u043e \u0448\u0443\u0431\u0438 \u0448\u0443\u0431\u043a\u0438 \u0448\u0443\u0432\u0430\u043b\u043e \u0448\u0443\u0439\u0441\u043a\u0438 \u0448\u0443\u043a\u0448\u0438 \u0448\u0443\u043b\u0451 \u0448\u0443\u043b\u0438\u0447\u0435\u043d\u043a\u043e \u0448\u0443\u043b\u044c\u0433\u0430 \u0448\u0443\u043b\u044c\u0433\u0438 \u0448\u0443\u043b\u044c\u0434\u0435\u0448\u043e \u0448\u0443\u043b\u044c\u0446 \u0448\u0443\u0440\u0443\u043f\u0438 \u0448\u0443\u0440\u0443\u043f\u043e \u0448\u0443\u0440\u0448\u0430 \u0448\u0443\u0440\u0448\u0430\u043b\u0438 \u0448\u0443\u0440\u044b\u0433\u0438 \u0448\u0443\u0441\u0442\u0435\u043b\u0451 \u0448\u0443\u0448\u0430\u043b\u0435 \u0449\u0430\u0432\u0435\u043b\u044c\u0441\u043a\u0438 \u0449\u0430\u0432\u043b\u0435 \u0449\u0435\u0433\u0435\u043b\u044c\u0441\u043a\u0438 \u0449\u0435\u0433\u043b\u043e \u0449\u0435\u0433\u043e\u043b\u0435 \u0449\u0435\u0433\u043e\u043b\u0438\u0445\u0438 \u0449\u0435\u0433\u043e\u043b\u044f\u0435 \u0449\u0435\u0434\u0440\u0438 \u0449\u0435\u0434\u0440\u043e \u0449\u0435\u043a\u043e\u0447\u0438\u0445\u0438 \u0449\u0435\u043f\u043a\u0438 \u0449\u0435\u0440\u0431\u0430\u043a\u043e \u0449\u0435\u0440\u0431\u0430\u0442\u044b\u0445 \u0449\u0435\u0440\u0431\u0438\u043d\u0430 \u0449\u0435\u0442\u0438\u043d\u0438 \u0449\u0435\u0442\u043a\u0438 \u0449\u0438\u0442\u0442 \u0449\u0443\u043a\u0438 \u0449\u0443\u0440\u043e \u044d\u0439\u0431\u043e\u0436\u0435\u043d\u043a\u043e \u044d\u043a\u0435\u043b\u044c \u044d\u043b\u0435\u0444\u0442\u0435\u0440\u043e \u044d\u043b\u044c\u043a\u0438 \u044d\u043b\u044c\u043c\u043f\u0442 \u044d\u043c\u0430\u043d\u0443\u0438\u043b\u044c \u044d\u043c\u0438 \u044d\u043c\u0441\u043a\u0438 \u044d\u043c\u0441\u043a\u0438\u0445 \u044d\u043d\u0433\u0430\u043b\u044b\u0447\u0435 \u044d\u043d\u0433\u0435\u043b\u044c\u0433\u0430\u0440\u0434\u0442 \u044d\u043d\u0433\u043e\u0432\u0430\u0442\u043e \u044d\u043d\u0442\u0438 \u044d\u043d\u0442\u0441\u043a\u0438 \u044d\u043f\u0438\u043d\u0433\u0435\u0440 \u044d\u0440\u0434\u0435\u043b\u0438 \u044d\u0440\u0438\u0441\u0442\u043e \u044d\u0440\u043d\u0435\u0442 \u044d\u0441\u0446\u0435 \u044d\u0441\u043c\u043e\u043d\u0434 \u044d\u0441\u0441\u0435 \u044d\u0442\u0443\u0448 \u044d\u0448\u043c\u0430 \u044e\u0431\u043a\u0438 \u044e\u0432\u0435\u043b\u0435 \u044e\u0433\u0430\u043d\u0446\u0435 \u044e\u0433\u043e \u044e\u0434\u0430\u0447\u0451 \u044e\u0434\u0430\u0448\u043a\u0438 \u044e\u0434\u0438 \u044e\u0434\u0438\u0446\u043a\u0438 \u044e\u043c\u0430\u0442\u043e \u044e\u043c\u0430\u0448\u0435 \u044e\u043d\u0433\u0435 \u044e\u043d\u0435\u0432\u0438\u0447 \u044e\u043d\u043a\u0438 \u044e\u0440\u0430\u043a\u0438 \u044e\u0440\u0430\u0441\u043e \u044e\u0440\u0435\u043d\u0435 \u044e\u0440\u043a\u043e \u044e\u0440\u043b\u043e \u044e\u0440\u043d\u0430\u0435 \u044e\u0440\u044c\u0435 \u044e\u0441\u0443\u043f\u043e \u044e\u0442\u0438\u043b\u043e \u044e\u0444\u0435\u0440\u0435 \u044e\u0445\u0430\u043d\u0446\u0435 \u044e\u0445\u0442\u0440\u0438\u0446 \u044e\u0448\u0430\u043a\u043e \u044e\u0448\u043a\u043e \u044f\u0431\u043b\u043e\u043a\u043e \u044f\u0431\u043b\u043e\u043d\u0435 \u044f\u0431\u043b\u043e\u043d\u0441\u043a\u0438 \u044f\u0433\u043e\u0432\u043a\u0438 \u044f\u0437\u043e \u044f\u0439\u0446\u0435 \u044f\u043a\u0438\u043c\u0435\u043d\u043a\u043e \u044f\u043a\u0438\u043c\u043e \u044f\u043a\u043e\u0432\u043b\u0435 \u044f\u043a\u0443\u0431\u043e \u044f\u043a\u0443\u0431\u043e\u0432\u0438\u0447 \u044f\u043a\u0443\u043d\u0438 \u044f\u043a\u0443\u0448\u0435 \u044f\u043a\u0443\u0448\u0438 \u044f\u043c\u0441\u043a\u0438\u0445 \u044f\u043d\u0430\u0435 \u044f\u043d\u043a\u043e \u044f\u043d\u043a\u043e\u0432\u0441\u043a\u0438 \u044f\u043d\u0443\u043a\u043e\u0432\u0438\u0447 \u044f\u0440\u043c\u043e\u043b\u044c\u043d\u0438\u043a \u044f\u0440\u043e\u043c\u0435\u0435 \u044f\u0440\u043e\u0441\u043b\u0430\u0432\u0441\u043a\u0438 \u044f\u0440\u043e\u0441\u043b\u0430\u0432\u0446\u0435 \u044f\u0440\u0446\u0435 \u044f\u0440\u0446\u0438 \u044f\u0441\u0435\u043d\u0435 \u044f\u0441\u043d\u0435\u0435 \u044f\u0448\u0438 \u044f\u0448\u043a\u0438".split(" ")};
ilib.data.name_tr={format:"{prefix} {givenName} {middleName} {familyName} {suffix}",sortByHeadWord:!1,nameStyle:"western",conjunctions:{and1:"ve",and2:"ve",or1:"veya",or2:"veya"},prefixes:"bay;bayan;ba\u015fkan;ba\u015fkan Yard\u0131mc\u0131s\u0131;ba\u015fbakan;belediye ba\u015fkan\u0131;vali;ba\u015fkan;kad\u0131n ba\u015fkan;bakan;haham;papaz;\u015fef;ko\u00e7;profes\u00f6r;kral;krali\u00e7e;prens;prenses;genel;amiral;komiser;ba\u015fkomiser;\u015ferif;m\u00fcfetti\u015f;dedektif;subay;bay\u0131m;bayan;kad\u0131n;baba;anne;karde\u015f;muhterem;teyze;amca;b\u00fcy\u00fckanne;dede;nine;kuzen;ve;veya".split(";"),
suffixes:["gen\u00e7","k\u0131demli","doktoral\u0131","\u00e7\u00fcr\u00fcmek","emekli"]};
ilib.data.name_vi={format:"{prefix} {givenName} {middleName} {familyName} {suffix}",sortbyHeadWord:!1,nameStyle:"western",conjunctions:{and1:"v\u00e0",and2:"v\u00e0",or1:"ho\u0103\u0323c",or2:"ho\u0103\u0323c"},prefixes:"\u00f4ng;b\u00e0;b\u00e0;ch\u1ee7 t\u1ecbch;ph\u00f3 ch\u1ee7 t\u1ecbch;th\u1ee7 t\u01b0\u1edbng;thi\u0323 tr\u01b0\u01a1\u0309ng;Th\u1ed1ng \u0111\u1ed1c;ch\u1ee7 t\u1ecbch;chu\u0309 ti\u0323ch \u0111a\u0340n ba\u0340;b\u1ed9 tr\u01b0\u01a1\u0309ng;pha\u0341p s\u01b0;mulah;M\u1ee5c s\u01b0;\u0111\u1ea7u b\u1ebfp;HLV;gi\u00e1o s\u01b0;prof;vua;n\u1eef ho\u00e0ng;vua;c\u00f4ng ch\u00faa;chung;thuy\u00ea\u0340n tr\u01b0\u01a1\u0309ng;u\u0309y vi\u00ean;gi\u00e1m \u0111\u1ed1c;c\u1ea3nh s\u00e1t tr\u01b0\u1edfng;vi\u00ean thanh tra;th\u00e1m t\u1eed;vi\u00ean;th\u01b0a \u00f4ng;ph\u1ee5 n\u1eef;ch\u00faa;phu nh\u00e2n;cha;me\u0323;em trai;ch\u1ecb;t\u00f4n tro\u0323ng;c\u00f4;ch\u00fa;b\u00e0;b\u00e0;\u00f4ng n\u1ed9i;\u00f4ng n\u1ed9i;anh em h\u1ecd".split(";"),suffixes:["em",
"cao c\u1ea5p","Ti\u1ebfn S\u1ef9","ngh\u1ec9 h\u01b0u"]};
ilib.data.name_zxx={prefixes:"rep;representative;senator;congressman;congresswoman;president;vice president;vice-president;mp;member of parliament;chief;justice;chief justice;judge;minister;prime minister;governor general;lieutenant governor;speaker of the house of commons;speaker of the house;speaker of the senate;supreme court justice;secretary of state;mayor;justice of the peace;emporer;chairman;chairwoman;alderman;general secretary;ambassador;minister;cardinal;bishop;archbishop;rabbi;grand rabbi;mulah;mullah;canon;cantor;pastor;ps;monsignor;mgsr;pope;chef;master;coach;professor;prof;nobel laureate;king;queen;prince;princess;crown prince;crown princess;marquess;marchioness;earl;countess;count;archduke;duke;duchess;baron;baroness;viscount;private;private first class;corporal;sargeant;staff sargeant;sargeant first class;master sargeant;first sargeant;sargeant major;command sargeant major;sargeant major of the army;pv1;pv2;pfc;spc;cpl;sgt;ssg;sfc;msg;1sg;sgm;csm;sma;warrant officer;chief warrant officer;second lieutenant;first lieutenant;captain;major;lieutenant colonel;colonel;brigadier general;major general;lieutenant general;general;2lt;1lt;cpt;maj;ltc;col;bg;mg;ltg;gen;general of the army;fleet admiral;admiral;vice admiral;rear admiral;commander;lieutenant commander;lieutenant;lieutenant (junior grade);ensign;fadm;adm;vadm;radm;rdml;capt;cdr;lcdr;lt;ltjg;ens;petty officer;petty officer first class;petty officer second class;petty officer third class;petty officer 1st class;petty officer 2nd class;petty officer 3rd class;po;po1;po2;po3;chief petty officer;senior chief petty officer;master chief petty officer;cpo;scpo;mcpo;command master chief petty officer;fleet master chief petty officer;force master chief petty officer;cmdcm;fltcm;forcm;master chief petty officer of the navy;mcpon;sergeant major of the marine corps;master gunnery sergeant;gunnery sergeant;lance corporal;sgtmaj;mgysgt;1stsgt;msgt;gysgt;ssgt;sgt;cpl;lcpl;pfc;pvt;airman basic;airman;airman first class;senior airman;technical sergeant;master sergeant;senior master sergeant;chief master sergeant;command chief master sergeant;chief master sergeant of the air force;ab;amn;a1c;sra;tsgt;msgt;smsgt;cmsgt;ccm;cmsaf;field marshal;brigadier;officer cadet;fm;lt gen;maj gen;brig;col;lt col;maj;capt;lt;2lt;ocdt;admiral of the fleet;marshal;marshal of the air force;air marshal;commodore;air commodore;group captain;lieutenant colonel;lt colonel;wing commander;lt commander;commandant;squadron leader;flight lieutenant;sub-lieutenant;flying officer;ensign;second lieutenant;2nd lieutenant;pilot officer;midshipman;warrant officer;leading seaman;seaman;aircraftman;midshipwoman;leading seawoman;seawoman;aircraftwoman;vice-admiral;vadm;lieutenant-general;lgen;rear-admiral;radm;major-general;mgen;brigadier-general;bgen;lieutenant-colonel;lcol;naval cadet;ncdt;able seaman;ab;ordinary seaman;os;pte;master bombardier;trooper;bombardier;sapper;signalman;craftsman;guardsman;rifleman;fusilier;chief of police;police commissioner;superintendent;sheriff;deputy chief of police;deputy commissioner;deputy superintendent;undersheriff;deputy sheriff;inspector;deputy inspector;detective;investigator;officer;deputy sheriff;constable;police constable;chief superintendent;assistant chief constable;deputy chief constable;chief constable;assistant commissioner;deputy commissioner;detective constable;staff inspector;staff superintendent;station duty officer;auxiliary sergeant;senior constable;cadet;probationary constable;recruit;sir;lady;lord;dame;his royal highness;hrh;his honour;his honor;maestro;his lordship;his majesty;his worship;the right worshipful;the worshipful;the honourable;the right honourable;the honorable;the right honorable;the hon;the most noble;the most honourable;the most honorable;the most hon;the rt hon;the right honourable and learned;the right honourable and gallant;the much honoured;the right honorable and learned;the right honorable and gallant;the much honored;the much hon;her royal highness;her honour;her honor;her majesty;her worship;his excellency;her excellency;his serene highness;her serene highness;his most reverend excellency;her most reverend excellency;his holiness;hh;his all holiness;hah;his beatitude;his eminence;he;his beatitude and eminence;father;mother;brother;br;sister;reverend;rev;the most reverend;the most rev;his grace;the right reverend;the rt rev;the most reverend and right honourable;the most reverend and right honorable;the most rev and rt hon;the right reverend and right honourable monsignor;the right reverend and right honorable monsignor;the rt rev and rt hon mgr;the right reverend and right honourable;the right reverend and right honorable;the very reverend;the very rev;the reverend monsignor;the rev msgr;the venerable;venerable;ven;his imperial majesty;his imperial and royal majesty;his apostolic majesty;his catholic majesty;his most faithful majesty;his imperial highness;his imperial and royal highness;his royal highness;his grand ducal highness;his highness;his ducal serene highness;his serene highness;his illustrious highness;his highborn;his grace;his high well-born;his excellency;his high excellency;her imperial majesty;her imperial and royal majesty;her apostolic majesty;her catholic majesty;her most faithful majesty;her imperial highness;her imperial and royal highness;her royal highness;her grand ducal highness;her highness;her ducal serene highness;her serene highness;her illustrious highness;her highborn;her grace;her high well-born;her excellency;her high excellency;him;hi&rm;ham;hcm;hfm;hih;hi&rh;hrh;hgdh;hh;hdsh;hsh;hillh;he;the;and;or;aunt;uncle;grandma;grandpa;granma;grampa;cousin".split(";"),suffixes:"junior jr senior sr i iii iii iv v vi vii viii ix x 2nd 3rd 4th 5th 6th 7th 8th 9th 10th esquire esq jd phd md ddm dds dmv bvsc ah bsc ba ret retired".split(" ")};
ilib.data.name_zh={format:"{prefix}{familyName}{middleName}{givenName}{suffix}",nameStyle:"asian",conjunctions:{and1:"\u4e0e",and2:"\u4e0e",or1:"\u6216",or2:"\u6216"},prefixes:"\u9996\u5e2d\u6267\u884c\u5b98 \u9996\u5e2d\u57f7\u884c\u5b98 \u9996\u5e2d\u8d22\u52a1\u5b98 \u9996\u5e2d\u8ca1\u52d9\u5b98 \u9996\u5e2d\u6280\u672f\u5b98 \u9996\u5e2d\u6280\u8853\u5b98 \u9996\u5e2d\u8fd0\u8425\u5b98 \u9996\u5e2d\u71df\u904b\u5b98 \u5916\u7525\u5973 \u5802\u54e5 \u5802\u5f1f \u5802\u59d0 \u5802\u59b9 \u8868\u54e5 \u8868\u5f1f \u8868\u59d0 \u8868\u59b9 \u5168\u5bb6 \u4e00\u5bb6 \u59e5\u7237 \u59e5\u723a \u5916\u5a46 \u53d4\u7236 \u5a76\u5a76 \u8205\u5abd \u5b38\u5b38 \u8205\u8205 \u8205\u5988 \u59e8\u4e08 \u59e8\u7236 \u59d1\u5988 \u59d1\u5abd \u59d1\u7236 \u59d1\u4e08 \u513f\u5b50 \u5152\u5b50 \u5973\u513f \u5973\u5152 \u5b59\u5b50 \u5b6b\u5b50 \u5b59\u5973 \u5b6b\u5973 \u59b9\u5a7f \u5ac2\u5ac2 \u5f1f\u5ab3 \u4f84\u5b50 \u4f84\u5973 \u5916\u7525 \u8001 \u5c0f \u548c \u4e0e \u8207 \u53ca".split(" "),
suffixes:"\u9996\u5e2d\u6267\u884c\u5b98 \u9996\u5e2d\u8d22\u52a1\u5b98 \u9996\u5e2d\u6280\u672f\u5b98 \u9996\u5e2d\u8fd0\u8425\u5b98 \u9996\u5e2d\u57f7\u884c\u5b98 \u9996\u5e2d\u8ca1\u52d9\u5b98 \u9996\u5e2d\u6280\u8853\u5b98 \u9996\u5e2d\u71df\u904b\u5b98 \u603b\u5de5\u7a0b\u5e08 \u7e3d\u5de5\u7a0b\u5e2b \u9ad8\u7d1a\u7763\u5bdf \u683c\u62c9\u739b\u62a5 \u683c\u62c9\u746a\u5831 \u5de5\u7a0b\u5e08 \u603b\u7ecf\u7406 \u5916\u7525\u5973 \u5de5\u7a0b\u5e2b \u7e3d\u7d93\u7406 \u53f8\u4ee4\u5458 \u7e3d\u7763\u5bdf \u7e3d\u8b66\u53f8 \u8cb4\u5a66\u4eba \u8d35\u5987\u4eba \u59e5\u7237 \u59e5\u723a \u59e8\u7236 \u59d1\u7236 \u5b59\u5b50 \u5b6b\u5b50 \u5b59\u5973 \u5b6b\u5973 \u5916\u5a46 \u53d4\u7236 \u5a76\u5a76 \u8205\u5abd \u5b38\u5b38 \u8205\u8205 \u8205\u5988 \u59e8\u4e08 \u59d1\u5988 \u59d1\u5abd \u59d1\u4e08 \u513f\u5b50 \u5152\u5b50 \u5973\u513f \u5973\u5152 \u59b9\u5a7f \u5ac2\u5ac2 \u5f1f\u5ab3 \u4f84\u5b50 \u4f84\u5973 \u5916\u7525 \u8001\u5e08 \u8001\u5e2b \u6821\u957f \u6821\u9577 \u535a\u58eb \u6559\u6388 \u5f8b\u5e08 \u5f8b\u5e2b \u6cd5\u5b98 \u533b\u751f \u62a4\u58eb \u4f1a\u8ba1 \u7ecf\u7406 \u8001\u677f \u8001\u603b \u90e8\u957f \u53f8\u957f \u5c40\u957f \u5904\u957f \u5385\u957f \u79d1\u957f \u8bfe\u957f \u7ec4\u957f \u91ab\u751f \u8b77\u58eb \u6703\u8a08 \u7d93\u7406 \u8001\u95c6 \u8001\u7e3d \u90e8\u9577 \u53f8\u9577 \u5c40\u9577 \u8655\u9577 \u7d44\u9577 \u52a9\u7406 \u603b\u88c1 \u73ed\u957f \u6392\u957f \u8425\u957f \u65c5\u957f \u56e2\u957f \u5e08\u957f \u519b\u957f \u653f\u59d4 \u4e0a\u5c09 \u4e2d\u5c09 \u5927\u5c09 \u5927\u6821 \u4e2d\u6821 \u4e0a\u6821 \u4e0a\u5c06 \u4e2d\u5c06 \u5c11\u5c06 \u5143\u5e05 \u7e3d\u88c1 \u4e3b\u5e2d \u73ed\u9577 \u8b66\u54e1 \u8b66\u9577 \u7763\u5bdf \u8b66\u53f8 \u5148\u751f \u592a\u592a \u592b\u5987 \u592b\u5a66 \u592b\u4eba \u5973\u58eb \u5c0f\u59d0 \u54e5\u54e5 \u5f1f\u5f1f \u59d0\u59d0 \u59b9\u59b9 \u7237\u7237 \u723a\u723a \u5976\u5976 \u53d4\u53d4 \u963f\u59e8 \u4f2f\u7236 \u4f2f\u6bcd \u5802\u54e5 \u5802\u5f1f \u5802\u59d0 \u5802\u59b9 \u8868\u54e5 \u8868\u5f1f \u8868\u59d0 \u8868\u59b9 \u8001\u5e2b \u5abd\u5abd \u4e0a\u5e1d \u5988\u5988 \u7238\u7238 \u5152\u5b50 \u5973\u5152 \u7956\u7236 \u7956\u6bcd \u5916\u516c \u5b38\u5b38 \u8205\u5abd \u59d1\u5abd \u59ea\u5b50 \u59ea\u5973 \u8868\u53d4 \u8868\u5b38 \u5979 \u5de5 \u603b \u7e3d \u7406".split(" "),
knownFamilyNames:{"\u611b":"\u00c0i","\u827e":"\u00c0i","\u5b89":"\u0100n","\u6556":"\u00c1o","\u767d":"B\u00e1i1","\u767e":"B\u01cei2","\u767e\u91cc":"B\u01ceil\u01d0","\u73ed":"B\u0101n","\u5305":"B\u0101o1","\u4fdd":"B\u01ceo2","\u9c8d":"B\u00e0o3","\u9b91":"B\u00e0o4","\u66b4":"B\u00e0o5","\u5df4":"B\u0101","\u8d1d":"B\u00e8i1","\u8c9d":"B\u00e8i2","\u8cc1":"B\u0113n","\u6bd5":"B\u00ec1","\u7562":"B\u00ec2","\u8fb9":"Bi\u0101n1","\u908a":"Bi\u0101n2","\u535e":"Bi\u00e0n3","\u5225":"Bi\u00e9",
"\u90b4":"B\u01d0ng","\u4f2f":"B\u00f31","\u8584":"B\u00f32","\u67cf":"B\u00f23","\u535c":"B\u016d1","\u6b65":"B\u00f92","\u8521":"C\u00e0i","\u84bc":"C\u0101ng","\u66f9":"C\u00e1o","\u66fe":"C\u00e9ng","\u5c91":"C\u00e9n","\u67f4":"Ch\u00e1i","\u5355":"Ch\u00e1n1","\u55ae":"Ch\u00e1n2","\u5e38":"Ch\u00e1ng1","\u660c":"Ch\u0101ng2","\u7545":"Ch\u00e0ng3","\u957f\u5b59":"Ch\u00e1ngs\u016bn1","\u9577\u5b6b":"Ch\u00e1ngs\u016bn2","\u55ae\u4e8e":"Ch\u00e1ny\u00fa","\u6641":"Ch\u00e1o1","\u5de2":"Ch\u00e1o2",
"\u67e5":"Ch\u00e1","\u8f66":"Ch\u01131","\u8eca":"Ch\u01132","\u6c88":"Ch\u00e9n1","\u9648":"Ch\u00e9n2","\u9673":"Ch\u00e9n3","\u6210":"Ch\u00e9ng1","\u7a0b":"Ch\u00e9ng2","\u76db":"Ch\u00e9ng3","\u6c60":"Ch\u00ed1","\u8fdf":"Ch\u00ed2","\u90d7":"Ch\u012b3","\u5145":"Ch\u014dng","\u4ec7":"Ch\u00f3u","\u891a":"Ch\u01d41","\u695a":"Ch\u01d42","\u5132":"Ch\u01d43","\u6df3\u4e8e":"Ch\u00fany\u00fa","\u891a\u5e08":"Ch\u01d4sh\u012b","\u4e1b":"C\u00f3ng1","\u5f9e":"C\u014dng2","\u5d14":"Cu\u012b","\u6234":"D\u00e0i",
"\u515a":"D\u01ceng1","\u9ee8":"D\u01ceng2","\u6fb9\u53f0":"D\u00e0nt\u00e1i1","\u6fb9\u81fa":"D\u00e0nt\u00e1i2","\u77f3":"D\u00e0n","\u8fbe\u595a":"D\u00e1x\u012b","\u7b2a":"D\u00e1","\u9093":"D\u00e8ng1","\u9127":"D\u00e8ng2","\u72c4":"D\u00ed1","\u7fdf":"D\u00ed2","\u5201":"Di\u0101o","\u4e01":"D\u012bng","\u7b2c\u4e94":"D\u00ecw\u01d4","\u90b8":"D\u01d0","\u6771":"D\u014dng1","\u8463":"D\u01d2ng2","\u4e1c\u65b9":"D\u014dngf\u0101ng1","\u6771\u65b9":"D\u014dngf\u0101ng2","\u4e1c\u5bab":"D\u014dngg\u014dng",
"\u4e1c\u90ed":"D\u014dnggu\u014d1","\u6771\u90ed":"D\u014dnggu\u014d2","\u4e1c\u91cc":"D\u014dngl\u01d0","\u6771\u9580":"D\u014dngm\u00e9n","\u7aa6":"D\u00f2u1","\u7ac7":"D\u00f2u2","\u90fd":"D\u014du","\u7763":"D\u016b1","\u5835":"D\u01d42","\u675c":"D\u00f93","\u6bb5\u5e72":"Du\u00e0ng\u0101n","\u7aef\u6728":"Du\u0101nm\u00f9","\u6bb5":"Du\u00e0n","\u72ec\u5b64":"D\u00fag\u016b","\u4f74":"\u00c8r","\u9102":"\u00c8","\u6a0a":"F\u00e1n1","\u8303":"F\u00e0n2","\u65b9":"F\u0101ng1","\u623f":"F\u00e1ng2",
"\u6cd5":"F\u01ce","\u8d39":"F\u00e8i1","\u8cbb":"F\u00e8i2","\u5c01":"F\u0113ng1","\u8c50":"F\u0113ng2","\u9146":"F\u0113ng3","\u51af":"F\u00e9ng4","\u99ae":"F\u00e9ng5","\u51e4":"F\u00e8ng6","\u9cf3":"F\u00e8ng7","\u4f0f":"F\u00fa1","\u6276":"F\u00fa2","\u7b26":"F\u00fa3","\u798f":"F\u00fa4","\u4ed8":"F\u00f95","\u5bcc":"F\u00f96","\u5085":"F\u00f97","\u76d6":"G\u00e0i1","\u84cb":"G\u00e0i2","\u5e72":"G\u0101n1","\u7518":"G\u0101n2","\u9ad8":"G\u0101o1","\u90dc":"G\u00e0o2","\u6208":"G\u01131",
"\u845b":"G\u00e92","\u803f":"G\u011bng","\u516c":"G\u014dng1","\u5f13":"G\u014dng2","\u5bab":"G\u014dng3","\u5bae":"G\u014dng4","\u9f9a":"G\u014dng5","\u9f94":"G\u014dng6","\u5de9":"G\u01d2ng7","\u978f":"G\u01d2ng8","\u516c\u4f2f":"G\u014dngb\u00f3","\u516c\u4e58":"G\u014dngch\u00e9ng","\u516c\u6237":"G\u014dngh\u00f9","\u516c\u575a":"G\u014dngji\u0101n","\u516c\u826f":"G\u014dngli\u00e1ng","\u516c\u95e8":"G\u014dngm\u00e9n","\u516c\u4e0a":"G\u014dngsh\u00e0ng","\u516c\u5c71":"G\u014dngsh\u0101n",
"\u516c\u5b59":"G\u014dngs\u016bn1","\u516c\u5b6b":"G\u014dngs\u016bn2","\u516c\u897f":"G\u014dngx\u012b1","\u516c\u7699":"G\u014dngx\u012b2","\u516c\u7f8a":"G\u014dngy\u00e1ng","\u516c\u51b6":"G\u014dngy\u011b","\u516c\u4eea":"G\u014dngy\u00ed","\u516c\u7389":"G\u014dngy\u00f9","\u516c\u4ef2":"G\u014dngzh\u00f2ng","\u516c\u7956":"G\u014dngz\u01d4","\u8ca2":"G\u00f2ng","\u52fe":"G\u014du1","\u7df1":"G\u014du2","\u82df":"G\u01d2u3","\u53e4":"G\u01d41","\u8c37":"G\u01d42","\u8d3e":"G\u01d43","\u6ed1":"G\u01d44",
"\u8cc8":"G\u01d45","\u987e":"G\u00f96","\u9867":"G\u00f97","\u5173":"Gu\u0101n1","\u5b98":"Gu\u0101n2","\u95dc":"Gu\u0101n3","\u5ee3":"Gu\u01ceng","\u8d2f\u4e18":"Gu\u00e0nqi\u016b","\u7ba1":"Gu\u01cen","\u6b78":"Gu\u012b1","\u6842":"Gu\u00ec2","\u8c37\u6881":"G\u01d4li\u00e1ng1","\u7a40\u7cb1":"G\u01d4li\u00e1ng2","\u90ed":"Gu\u014d1","\u570b":"Gu\u00f32","\u8f9c":"G\u016b","\u6d77":"H\u01cei","\u97e9":"H\u00e1n1","\u97d3":"H\u00e1n2","\u676d":"H\u00e1ng","\u90dd":"H\u01ceo","\u54c8":"H\u0101",
"\u4f55":"H\u00e91","\u548c":"H\u00e92","\u8d3a":"H\u00e83","\u8cc0":"H\u00e84","\u8d6b\u8fde":"H\u00e8li\u00e1n1","\u8d6b\u9023":"H\u00e8li\u00e1n2","\u8861":"H\u00e9ng","\u5f18":"H\u00f3ng1","\u7d05":"H\u00f3ng2","\u6d2a":"H\u00f3ng3","\u4faf":"H\u00f3u1","\u540e":"H\u00f2u2","\u5f8c":"H\u00f2u3","\u80e1":"H\u00fa1","\u6248":"H\u00f92","\u534e":"Hu\u00e11","\u83ef":"Hu\u00e12","\u61f7":"Hu\u00e1i","\u6853":"Hu\u00e1n1","\u5ba6":"Hu\u00e0n2","\u7687\u752b":"Hu\u00e1ngf\u01d4","\u9ec4":"Hu\u00e1ng",
"\u82b1":"Hu\u0101","\u60e0":"Hu\u00ec","\u970d":"Hu\u00f2","\u547c\u5ef6":"H\u016by\u00e1n","\u59ec":"J\u012b01","\u5d47":"J\u012b02","\u5409":"J\u00ed03","\u6c72":"J\u00ed04","\u7c4d":"J\u00ed05","\u8ba1":"J\u00ec06","\u7eaa":"J\u00ec07","\u7d00":"J\u00ec08","\u8a08":"J\u00ec09","\u5b63":"J\u00ec10","\u858a":"J\u00ec11","\u66a8":"J\u00ec12","\u5180":"J\u00ec13","\u5bb6":"Ji\u01011","\u90df":"Ji\u00e12","\u5939\u8c37":"Ji\u0101g\u01d41","\u593e\u8c37":"Ji\u0101g\u01d42","\u7b80":"Ji\u01cen1","\u7c21":"Ji\u01cen2",
"\u6c5f":"Ji\u0101ng1","\u59dc":"Ji\u0101ng2","\u848b":"Ji\u01ceng3","\u8523":"Ji\u01ceng4","\u7126":"Ji\u0101o","\u63ed":"Ji\u01131","\u89e3":"Ji\u011b2","\u5373\u58a8":"J\u00edm\u00f2","\u664b":"J\u00ecn1","\u6649":"J\u00ecn2","\u9773":"J\u00ecn3","\u834a":"J\u012bng1","\u8346":"J\u012bng2","\u7d93":"J\u012bng3","\u4e95":"J\u01d0ng4","\u666f":"J\u01d0ng5","\u91d1":"J\u012bn","\u97a0":"J\u016b1","\u77bf":"J\u00f92","\u5c45":"J\u016b","\u5eb7":"K\u0101ng1","\u4ea2":"K\u00e0ng2","\u95de":"K\u00e0n",
"\u67ef":"K\u0113","\u7a7a":"K\u014dng1","\u5b54":"K\u01d2ng2","\u5bc7":"K\u00f2u","\u84af":"Ku\u01cei","\u5321":"Ku\u0101ng1","\u6cc1":"Ku\u00e0ng2","\u5914":"Ku\u00ed","\u84dd":"La1","\u85cd":"La2","\u6765":"L\u00e1i1","\u8d56":"L\u00e0i2","\u8cf4":"L\u00e0i3","\u90ce":"L\u00e1ng","\u5170":"L\u00e1n","\u52de":"L\u00e1o","\u4e50":"L\u00e81","\u6a02":"L\u00e82","\u96f7":"L\u00e9i","\u51b7":"L\u011bng","\u4e50\u6b63":"L\u00e8zh\u0113ng1","\u6a02\u6b63":"L\u00e8zh\u0113ng2","\u9ece":"L\u00ed1","\u674e":"L\u01d02",
"\u5229":"L\u00ec3","\u6817":"L\u00ec4","\u53b2":"L\u00ec5","\u9148":"L\u00ec6","\u8fde":"Li\u00e1n1","\u9023":"Li\u00e1n2","\u5ec9":"Li\u00e1n3","\u6881\u4e18":"Li\u00e1ngqi\u016b","\u6881":"Li\u00e1ng","\u7ec3":"Li\u00e0n","\u5ed6":"Li\u00e0o","\u6797":"L\u00edn1","\u85fa":"L\u00ecn2","\u4ee4\u72d0":"L\u00ecngh\u00fa","\u51cc":"L\u00edng","\u5218":"Li\u00fa1","\u5289":"Li\u00fa2","\u67f3":"Li\u01d43","\u9646":"Li\u00f94","\u9678":"Li\u00f95","\u9f99":"L\u00f3ng1","\u9f8d":"L\u00f3ng2","\u9686":"L\u014dng3",
"\u5a04":"L\u00f3u1","\u5a41":"L\u00f3u2","\u5362":"L\u00fa01","\u82a6":"L\u00fa02","\u76e7":"L\u00fa03","\u9c81":"L\u01d404","\u9b6f":"L\u01d405","\u797f":"l\u00f906","\u902f":"L\u00f907","\u8def":"L\u00f908","\u5415":"L\u01da09","\u5442":"L\u01da10","\u683e":"Lu\u00e1n1","\u6b12":"Lu\u00e1n2","\u7f57":"Lu\u014d1","\u9a86":"Lu\u00f21","\u7f85":"Lu\u00f32","\u99f1":"Lu\u00f22","\u95fe\u4e18":"L\u01d8qi\u016b1","\u95ad\u4e18":"L\u01d8qi\u016b2","\u9ebb":"M\u00e11","\u9a6c":"M\u01ce2","\u99ac":"M\u01ce3",
"\u9ea6":"M\u00e0i","\u6eff":"M\u01cen","\u6bdb":"M\u00e1o1","\u8305":"M\u00e1o2","\u6885":"M\u00e9i","\u8499":"M\u0113ng1","\u5b5f":"M\u00e8ng2","\u7cdc":"M\u00ed1","\u7c73":"M\u01d02","\u5b93":"M\u00ec3","\u82d7":"Mi\u00e1o1","\u7f2a":"Mi\u00e0o2","\u7e46":"Mi\u00e0o3","\u4e5c":"Mi\u0113","\u95f5":"M\u01d0n1","\u9594":"M\u01d0n2","\u660e":"M\u00edng","\u83ab":"M\u00f21","\u58a8":"M\u00f22","\u725f":"M\u00f3u","\u6728":"M\u00f91","\u7267":"M\u00f92","\u6155":"M\u00f93","\u7a46":"M\u00f94","\u6155\u5bb9":"M\u00f9r\u00f3ng",
"\u5357\u5bab":"N\u00e1ng\u014dng1","\u5357\u5bae":"N\u00e1ng\u014dng2","\u5357\u95e8":"N\u00e1nm\u00e9n1","\u5357\u9580":"N\u00e1nm\u00e9n2","\u5357\u8363":"N\u00e1nr\u00f3ng","\u94d9":"N\u00e1o","\u90a3":"N\u01ce","\u80fd":"N\u00e9ng","\u5e74":"Ni\u00e1n","\u8042":"Ni\u00e81","\u8076":"Ni\u00e82","\u5b81":"N\u00edng1","\u5be7":"N\u00edng2","\u725b":"Ni\u00fa1","\u9215":"Ni\u01d42","\u502a":"N\u00ed","\u8fb2":"N\u00f3ng","\u6b27":"\u014cu1","\u6b50":"\u014cu2","\u6b27\u9633":"\u014cuy\u00e1ng1",
"\u6b50\u967d":"\u014cuy\u00e1ng2","\u5e9e":"P\u00e1ng1","\u9004":"P\u00e1ng2","\u9f90":"P\u00e1ng3","\u6f58":"P\u0101n","\u88f4":"P\u00e9i","\u5f6d":"P\u00e9ng1","\u84ec":"P\u00e9ng2","\u5e73":"P\u00edng","\u76ae":"P\u00ed","\u6fee":"P\u00fa1","\u84b2":"P\u00fa2","\u6d66":"P\u01d43","\u6fee\u9633":"P\u00fay\u00e1ng1","\u6fee\u967d":"P\u00fay\u00e1ng2","\u7941":"Q\u00ed1","\u9f50":"Q\u00ed2","\u9f4a":"Q\u00ed3","\u94b1":"Qi\u00e1n1","\u9322":"Qi\u00e1n2","\u5f3a":"Qi\u00e1ng1","\u5f37":"Qi\u00e1ng2",
"\u4e54":"Qi\u00e1o1","\u55ac":"Qi\u00e1o2","\u8b59":"Qi\u00e1o3","\u6f06\u96d5":"Q\u012bdi\u0101o","\u4e93\u5b98":"Q\u00edgu\u0101n","\u6b3d":"Q\u012bn1","\u79e6":"Q\u00edn2","\u7434":"Q\u00edn3","\u4e18":"Qi\u016b1","\u90b1":"Qi\u016b2","\u79cb":"Qi\u016b3","\u88d8":"Qi\u00fa4","\u621a":"Q\u012b","\u66f2":"Q\u016b1","\u5c48":"Q\u016b2","\u74a9":"Q\u00fa3","\u9eb4":"Q\u00fa4","\u5168":"Qu\u00e1n1","\u6b0a":"Qu\u00e1n2","\u95d5":"Qu\u0113","\u58e4\u9a77":"R\u01cengs\u00ec1","\u58e4\u99df":"R\u01cengs\u00ec2",
"\u5189":"R\u01cen","\u9952":"R\u00e1o","\u4efb":"R\u00e8n","\u620e":"R\u00f3ng1","\u5bb9":"R\u00f3ng2","\u69ae":"R\u00f3ng3","\u878d":"R\u00f3ng4","\u8339":"R\u00fa1","\u6c5d":"R\u01d42","\u962e":"Ru\u01cen","\u82ae":"Ru\u00ec","\u6851":"S\u0101ng","\u5546":"Sh\u0101ng1","\u8cde":"Sh\u01ceng2","\u5c1a":"Sh\u00e0ng3","\u4e0a\u5b98":"Sh\u00e0nggu\u0101n","\u5c71":"Sh\u0101n","\u97f6":"Sh\u00e1o1","\u90b5":"Sh\u00e0o2","\u6c99":"Sh\u0101","\u4f58":"Sh\u00e91","\u5399":"Sh\u00e82","\u7533":"Sh\u0113n1",
"\u8398":"Sh\u0113n2","\u614e":"Sh\u00e8n3","\u7533\u5c60":"Sh\u0113nt\u00fa","\u5e2b":"Sh\u012b1","\u65bd":"Sh\u012b2","\u65f6":"Sh\u00ed3","\u6642":"Sh\u00ed4","\u53f2":"Sh\u01d05","\u58fd":"Sh\u00f2u","\u6bb3":"Sh\u016b1","\u8212":"Sh\u016b2","\u675f":"Sh\u00f93","\u5e25":"Shu\u00e0i","\u96d9":"Shu\u0101ng","\u6c34":"Shu\u01d0","\u53f8\u7a7a":"S\u012bk\u014dng","\u53f8\u5bc7":"S\u012bk\u00f2u","\u53f8\u9a6c":"S\u012bm\u01ce1","\u53f8\u99ac":"S\u012bm\u01ce2","\u53f8\u5f92":"S\u012bt\u00fa","\u53f8":"S\u012b",
"\u677e":"S\u014dng1","\u5b8b":"S\u00f2ng2","\u82cf":"S\u016b1","\u8607":"S\u016b2","\u968b":"Su\u00ed","\u5b59":"S\u016bn1","\u5b6b":"S\u016bn2","\u7d22":"Su\u01d2","\u5bbf":"S\u00f9","\u62d3\u62d4":"T\u00e0b\u00e11","\u62d3\u8dcb":"T\u00e0b\u00e12","\u53f0":"T\u00e1i1","\u90b0":"T\u00e1i2","\u592a\u53f2":"T\u00e0ish\u01d02","\u592a\u53d4":"T\u00e0ish\u016b1","\u8c08":"T\u00e1n1","\u8983":"T\u00e1n2","\u8ac7":"T\u00e1n3","\u8c2d":"T\u00e1n4","\u8b5a":"T\u00e1n5","\u6c64":"T\u0101ng1","\u6e6f":"T\u0101ng2",
"\u5510":"T\u00e1ng3","\u9676":"T\u00e1o","\u817e":"T\u00e9ng1","\u6ed5":"T\u00e9ng2","\u7530":"Ti\u00e1n","\u901a":"T\u014dng1","\u4f5f":"T\u00f3ng2","\u7ae5":"T\u00f3ng3","\u9204":"T\u01d2u","\u6d82":"T\u00fa1","\u5c60":"T\u00fa2","\u4e07":"W\u00e0n1","\u842c":"W\u00e0n2","\u6c6a":"W\u0101ng1","\u738b":"W\u00e1ng2","\u4e07\u4fdf":"W\u00e0ns\u00ec","\u5371":"W\u0113i1","\u97e6":"W\u00e9i2","\u97cb":"W\u00e9i3","\u9697":"W\u011bi4","\u536b":"W\u00e8i5","\u4f4d":"W\u00e8i6","\u885b":"W\u00e8i7","\u851a":"W\u00e8i8",
"\u9b4f":"W\u00e8i9","\u5c09\u8fdf":"W\u00e8ich\u00ed1","\u5c09\u9072":"W\u00e8ich\u00ed2","\u5fae\u751f":"W\u0113ish\u0113ng","\u6eab":"W\u0113n1","\u6e29":"W\u0113n2","\u6587":"W\u00e9n3","\u805e":"W\u00e9n4","\u7fc1":"W\u0113ng","\u95fb\u4eba":"W\u00e9nr\u00e9n1","\u805e\u4eba":"W\u00e9nr\u00e9n2","\u6c83":"W\u00f2","\u5deb":"W\u016b1","\u70cf":"W\u016b2","\u90ac":"W\u016b3","\u9114":"W\u016b4","\u6bcb":"W\u00fa5","\u5434":"W\u00fa6","\u5433":"W\u00fa7","\u4f0d":"W\u01d48","\u6b66":"W\u01d49",
"\u5deb\u9a6c":"W\u016bm\u01ce1","\u5deb\u99ac":"W\u016bm\u01ce2","\u4e60":"X\u00ed1","\u595a":"X\u012b1","\u5e2d":"X\u00ed2","\u90e4":"X\u00ec2","\u7fd2":"X\u00ed3","\u88ad":"X\u00ed4","\u590f\u4faf":"Xi\u00e0h\u00f3u","\u51bc":"Xi\u01cen1","\u54b8":"Xi\u00e1n2","\u76f8":"Xi\u0101ng1","\u5411":"Xi\u00e0ng2","\u9879":"Xi\u00e0ng3","\u9805":"Xi\u00e0ng4","\u9c9c\u4e8e":"Xi\u0101ny\u00fa1","\u9bae\u4e8e":"Xi\u0101ny\u00fa2","\u8427":"Xi\u0101o1","\u856d":"Xi\u0101o2","\u8427\u8096":"Xi\u0101oxi\u00e0o",
"\u590f":"Xi\u00e0","\u8c22":"Xi\u00e81","\u8b1d":"Xi\u00e82","\u897f\u95e8":"X\u012bm\u00e9n1","\u897f\u9580":"X\u012bm\u00e9n2","\u5211":"X\u00edng1","\u90a2":"X\u00edng2","\u59d3":"X\u00ecng3","\u5e78":"X\u00ecng4","\u8f9b":"X\u012bn","\u718a":"Xi\u00f3ng","\u80e5":"X\u016b1","\u9808":"X\u016b2","\u8bb8":"X\u01d43","\u8a31":"X\u01d44","\u8f69\u8f95":"Xu\u0101nyu\u00e1n1","\u8ed2\u8f45":"Xu\u0101nyu\u00e1n2","\u5ba3":"Xu\u0101n","\u859b":"Xu\u0113","\u8340":"X\u00fan","\u5f90":"X\u00fa","\u6bb7":"Y\u0101n01",
"\u71d5":"Y\u0101n02","\u9122":"Y\u0101n03","\u8a00":"Y\u00e1n04","\u4e25":"Y\u00e1n05","\u9586":"Y\u00e1n06","\u960e":"Y\u00e1n07","\u95bb":"Y\u00e1n08","\u989c":"Y\u00e1n09","\u984f":"Y\u00e1n10","\u56b4":"Y\u00e1n11","\u664f":"Y\u00e0n12","\u7f8a":"Y\u00e1ng1","\u9633":"Y\u00e1ng2","\u626c":"Y\u00e1ng3","\u6768":"Y\u00e1ng4","\u967d":"Y\u00e1ng5","\u694a":"Y\u00e1ng6","\u4ef0":"Y\u01ceng7","\u990a":"Y\u01ceng8","\u7f8a\u820c":"Y\u00e1ngsh\u00e9","\u59da":"Y\u00e1o","\u53f6":"Y\u00e81","\u8449":"Y\u00e82",
"\u8863":"Y\u012b1","\u4f0a":"Y\u012b2","\u6613":"Y\u00ec3","\u7fbf":"Y\u00ec4","\u76ca":"Y\u00ec5","\u9670":"Y\u012bn1","\u94f6":"Y\u00edn2","\u5c39":"Y\u01d0n3","\u5370":"Y\u00ecn4","\u5e94":"Y\u012bng1","\u61c9":"Y\u012bng2","\u96cd":"Y\u014dng","\u5c24":"Y\u00f3u1","\u6e38":"Y\u00f3u2","\u6709":"Y\u01d2u3","\u4e8e":"Y\u00fa01","\u4f59":"Y\u00fa02","\u4fde":"Y\u00fa03","\u9b5a":"Y\u00fa04","\u865e":"Y\u00fa05","\u5b87":"Y\u01d406","\u79b9":"Y\u01d407","\u5ebe":"Y\u01d408","\u90c1":"Y\u00f909",
"\u55bb":"Y\u00f910","\u9b31":"Y\u00f911","\u5143":"Yu\u00e1n1","\u539f":"Yu\u00e1n2","\u8881":"Yu\u00e1n3","\u82d1":"Yu\u00e0n4","\u5cb3":"Yu\u00e81","\u8d8a":"Yu\u00e82","\u4e91":"Y\u00fan1","\u96f2":"Y\u00fan2","\u5b87\u6587":"Y\u01d4w\u00e9n","\u65bc":"Y\u016b","\u5bb0\u7236":"Z\u01ceif\u00f9","\u5bb0":"Z\u01cei","\u81e7":"Z\u0101ng","\u661d":"Z\u0103n","\u6e5b":"Zh\u00e0n1","\u8a79":"Zh\u0101n2","\u5f20":"Zh\u0101ng1","\u5f35":"Zh\u0101ng2","\u7ae0":"Zh\u0101ng3","\u4ec9":"Zh\u01ceng4","\u8d75":"Zh\u00e0o1",
"\u8d99":"Zh\u00e0o2","\u90d1":"Zh\u00e8ng1","\u912d":"Zh\u00e8ng2","\u7504":"Zh\u0113n","\u652f":"Zh\u012b1","\u690d":"Zh\u00ed2","\u949f":"Zh\u014dng1","\u7d42":"Zh\u014dng2","\u937e":"Zh\u014dng3","\u4ef2":"Zh\u00f2ng4","\u4ef2\u957f":"Zh\u00f2ngch\u00e1ng","\u949f\u79bb":"Zh\u014dngl\u00ed1","\u9418\u96e2":"Zh\u014dngl\u00ed2","\u4ef2\u5b59":"Zh\u00f2ngs\u016bn1","\u4ef2\u5b6b":"Zh\u00f2ngs\u016bn2","\u5468":"Zh\u014du","\u6731":"Zh\u016b1","\u7afa":"Zh\u00fa1","\u795d":"Zh\u00f92","\u8af8":"Zh\u016b2",
"\u5e84":"Zhu\u0101ng1","\u838a":"Zhu\u0101ng2","\u989b\u5b59":"Zhu\u0101ns\u016bn1","\u9853\u5b6b":"Zhu\u0101ns\u016bn2","\u8bf8\u845b":"Zh\u016bg\u00e91","\u8af8\u845b":"Zh\u016bg\u00e92","\u5353":"Zhu\u00f3","\u5b50\u8f66":"Z\u01d0ch\u01131","\u5b50\u8eca":"Z\u01d0ch\u01132","\u5b50\u6851":"Z\u01d0s\u0101ng","\u5b50\u4e66":"Z\u01d0sh\u016b","\u8a3e":"Z\u012b","\u5b97\u653f":"Z\u014dngzh\u00e8ng","\u5b97":"Z\u014dng","\u90b9":"Z\u014du1","\u9112":"Z\u014du2","\u5de6":"Zu\u01d23","\u5de6\u4e18":"Zu\u01d2qi\u016b",
"\u7956":"Z\u01d4"}};
ilib.Name=function $ilib$Name$($name$$,$options$$){var $sync$$=true;if($name$$&&$name$$.length!==0){this.loadParams={};if($options$$){if($options$$.locale)this.locale=typeof $options$$.locale==="string"?new ilib.Locale($options$$.locale):$options$$.locale;if($options$$.style&&($options$$.style==="asian"||$options$$.style==="western"))this.style=$options$$.style;if($options$$.order&&($options$$.order==="gmf"||$options$$.order==="fmg"||$options$$.order==="fgm"))this.order=$options$$.order;typeof $options$$.sync!==
"undefined"&&($sync$$=$options$$.sync==true);if(typeof $options$$.loadParams!=="undefined")this.loadParams=$options$$.loadParams}if(!ilib.Name.cache)ilib.Name.cache={};this.locale=this.locale||new ilib.Locale;ilib.CType.isAlpha._init($sync$$,this.loadParams,ilib.bind(this,function(){ilib.CType.isIdeo._init($sync$$,this.loadParams,ilib.bind(this,function(){ilib.CType.isPunct._init($sync$$,this.loadParams,ilib.bind(this,function(){ilib.CType.isSpace._init($sync$$,this.loadParams,ilib.bind(this,function(){ilib.loadData({object:ilib.Name,
locale:this.locale,name:"name.json",sync:$sync$$,loadParams:this.loadParams,callback:ilib.bind(this,function($info$$){if(!$info$$){var $info$$=ilib.Name.defaultInfo,$spec$$=this.locale.getSpec().replace(/-/g,"_");ilib.Name.cache[$spec$$]=$info$$}if(typeof $name$$==="object"){this.prefix=$name$$.prefix;this.givenName=$name$$.givenName;this.middleName=$name$$.middleName;this.familyName=$name$$.familyName;this.suffix=$name$$.suffix;this.locale=$name$$.locale;this.style=$name$$.style;this.order=$name$$.order;
this.useSpaces=$name$$.useSpaces;this.isAsianName=$name$$.isAsianName}else{this.info=$info$$;this._init($name$$);if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad(this)}})})}))}))}))}))}};
ilib.Name.defaultInfo=ilib.data.name||{components:{"short":{g:1,f:1},medium:{g:1,m:1,f:1},"long":{p:1,g:1,m:1,f:1},full:{p:1,g:1,m:1,f:1,s:1}},format:"{prefix} {givenName} {middleName} {familyName}{suffix}",sortByHeadWord:!1,nameStyle:"western",conjunctions:{and1:"and",and2:"and",or1:"or",or2:"or"},auxillaries:{von:1,"von der":1,"von den":1,van:1,"van der":1,"van de":1,"van den":1,de:1,di:1,de:1,la:1,lo:1,des:1,le:1,les:1,du:1,"de la":1,del:1,"de los":1,"de las":1},prefixes:"doctor dr mr mrs ms mister madame madamoiselle miss monsieur se\u00f1or se\u00f1ora se\u00f1orita".split(" "),
suffixes:", junior jr senior sr i ii iii esq phd md".split(" "),patronymicName:[],familyNames:[]};ilib.Name._isAsianChar=function $ilib$Name$_isAsianChar$($c$$){return ilib.CType.isIdeo($c$$)||ilib.CType.withinRange($c$$,"hangul")||ilib.CType.withinRange($c$$,"hiragana")||ilib.CType.withinRange($c$$,"katakana")};
ilib.Name._isAsianName=function $ilib$Name$_isAsianName$($name$$,$language$$){var $asian$$=0,$latin$$=0,$i$$;if($name$$&&$name$$.length>0){for($i$$=0;$i$$<$name$$.length;$i$$++){var $c$$=$name$$.charAt($i$$);if(ilib.Name._isAsianChar($c$$)){if($language$$=="ko"||$language$$=="ja"||$language$$=="zh")return true;$asian$$++}else if(ilib.CType.isAlpha($c$$)){if(!$language$$=="ko"||!$language$$=="ja"||!$language$$=="zh")return false;$latin$$++}}return $latin$$<$asian$$}return false};
ilib.Name._isEuroName=function $ilib$Name$_isEuroName$($name$$,$language$$){for(var $c$$,$it$$=(new ilib.String($name$$)).charIterator();$it$$.hasNext();){$c$$=$it$$.next();if(!ilib.Name._isAsianChar($c$$)&&!ilib.CType.isPunct($c$$)&&!ilib.CType.isSpace($c$$))return true;if(ilib.Name._isAsianChar($c$$)&&($language$$=="ko"||$language$$=="ja"||$language$$=="zh"))break}return false};
ilib.Name.prototype={_init:function $ilib$Name$$_init$($name$$60_parts$$){var $prefix$$,$prefixLower_suffixLower$$,$i$$,$hpSuffix$$,$currentLanguage$$=this.locale.getLanguage();if($name$$60_parts$$){$i$$=$name$$60_parts$$.search(/\s*[,\/\(\[\{<]/);if($i$$!==-1){$hpSuffix$$=$name$$60_parts$$.substring($i$$);$hpSuffix$$=$hpSuffix$$.replace(/\s+/g," ");$prefix$$=$hpSuffix$$.split(" ");this._findLastConjunction($prefix$$)>-1?$hpSuffix$$=void 0:$name$$60_parts$$=$name$$60_parts$$.substring(0,$i$$)}if(this.isAsianName=
ilib.Name._isAsianName($name$$60_parts$$,$currentLanguage$$)){this.useSpaces==false&&($name$$60_parts$$=$name$$60_parts$$.replace(/\s+/g,""));$name$$60_parts$$=$name$$60_parts$$.trim().split("")}else{$name$$60_parts$$=$name$$60_parts$$.replace(/, /g," , ");$name$$60_parts$$=$name$$60_parts$$.replace(/\s+/g," ");$name$$60_parts$$=$name$$60_parts$$.trim().split(" ")}if($name$$60_parts$$.length>1)for($i$$=$name$$60_parts$$.length;$i$$>0;$i$$--){$prefix$$=$name$$60_parts$$.slice(0,$i$$);$prefix$$=$prefix$$.join(this.isAsianName?
"":" ");$prefixLower_suffixLower$$=$prefix$$.toLowerCase();$prefixLower_suffixLower$$=$prefixLower_suffixLower$$.replace(/[,\.]/g,"");if(this.info.prefixes&&(this.info.prefixes.indexOf($prefixLower_suffixLower$$)>-1||this._isConjunction($prefixLower_suffixLower$$))){if(this.prefix){if(!this.isAsianName)this.prefix=this.prefix+" ";this.prefix=this.prefix+$prefix$$}else this.prefix=$prefix$$;$name$$60_parts$$=$name$$60_parts$$.slice($i$$);$i$$=$name$$60_parts$$.length}}if($name$$60_parts$$.length>1)for($i$$=
$name$$60_parts$$.length;$i$$>0;$i$$--){$prefix$$=$name$$60_parts$$.slice(-$i$$);$prefix$$=$prefix$$.join(this.isAsianName?"":" ");$prefixLower_suffixLower$$=$prefix$$.toLowerCase();$prefixLower_suffixLower$$=$prefixLower_suffixLower$$.replace(/[\.]/g,"");if(this.info.suffixes&&this.info.suffixes.indexOf($prefixLower_suffixLower$$)>-1){if(this.suffix){if(!this.isAsianName&&!ilib.CType.isPunct(this.suffix.charAt(0)))this.suffix=" "+this.suffix;this.suffix=$prefix$$+this.suffix}else this.suffix=$prefix$$;
$name$$60_parts$$=$name$$60_parts$$.slice(0,$name$$60_parts$$.length-$i$$);$i$$=$name$$60_parts$$.length}}if($hpSuffix$$)this.suffix=this.suffix&&this.suffix+$hpSuffix$$||$hpSuffix$$;$name$$60_parts$$.length>1&&!this.isAsianName&&($name$$60_parts$$=this._joinAuxillaries($name$$60_parts$$,this.isAsianName));this.isAsianName?this._parseAsianName($name$$60_parts$$,$currentLanguage$$):this._parseWesternName($name$$60_parts$$);this._joinNameArrays()}},_findPrefix:function $ilib$Name$$_findPrefix$($parts$$,
$names$$,$isAsian$$,$noCompoundPrefix$$){var $i$$,$prefix$$,$prefixLower$$,$prefixArray$$,$aux$$=[];if($parts$$.length>0&&$names$$)for($i$$=$parts$$.length;$i$$>0;$i$$--){$prefixArray$$=$parts$$.slice(0,$i$$);$prefix$$=$prefixArray$$.join($isAsian$$?"":" ");$prefixLower$$=$prefix$$.toLowerCase();$prefixLower$$=$prefixLower$$.replace(/[,\.]/g,"");if($prefixLower$$ in $names$$){$aux$$=$aux$$.concat($isAsian$$?$prefix$$:$prefixArray$$);if($noCompoundPrefix$$)break;$parts$$=$parts$$.slice($i$$);$i$$=
$parts$$.length+1}}return $aux$$},_findSuffix:function $ilib$Name$$_findSuffix$($parts$$,$names$$,$isAsian$$){var $i$$,$j$$,$seq$$="";for($i$$=0;$i$$<$names$$.length;$i$$++)if($parts$$.length>=$names$$[$i$$].length){for($j$$=0;$j$$<$names$$[$i$$].length&&$parts$$[$parts$$.length-$j$$]===$names$$[$i$$][$names$$[$i$$].length-$j$$];)$j$$++;if($j$$>=$names$$[$i$$].length){$seq$$=$parts$$.slice($parts$$.length-$j$$).join($isAsian$$?"":" ")+($isAsian$$?"":" ")+$seq$$;$parts$$=$parts$$.slice(0,$parts$$.length-
$j$$);$i$$=-1}}this.suffix=$seq$$;return $parts$$},_isConjunction:function _isConjunction($word$$){return this.info.conjunctions.and1===$word$$||this.info.conjunctions.and2===$word$$||this.info.conjunctions.or1===$word$$||this.info.conjunctions.or2===$word$$||"&"===$word$$||"+"===$word$$},_findLastConjunction:function _findLastConjunction($parts$$){var $conjunctionIndex$$=-1,$index$$,$part$$;for($index$$=0;$index$$<$parts$$.length;$index$$++){$part$$=$parts$$[$index$$];if(typeof $part$$==="string"){$part$$=
$part$$.toLowerCase();if("and"===$part$$||"or"===$part$$||"&"===$part$$||"+"===$part$$)$conjunctionIndex$$=$index$$;this._isConjunction($part$$)&&($conjunctionIndex$$=$index$$)}}return $conjunctionIndex$$},_extractPrefixes:function $ilib$Name$$_extractPrefixes$($parts$$,$isAsian$$){var $i$$=this._findPrefix($parts$$,this.info.prefixes,$isAsian$$);if($i$$>0){this.prefix=$parts$$.slice(0,$i$$).join($isAsian$$?"":" ");return $parts$$.slice($i$$)}return $parts$$},_extractSuffixes:function $ilib$Name$$_extractSuffixes$($parts$$,
$isAsian$$){var $i$$=this._findSuffix($parts$$,this.info.suffixes,$isAsian$$);if($i$$>0){this.suffix=$parts$$.slice($i$$).join($isAsian$$?"":" ");return $parts$$.slice(0,$i$$)}return $parts$$},_joinAuxillaries:function $ilib$Name$$_joinAuxillaries$($parts$$){var $start$$,$i$$,$prefixArray$$,$prefix$$6_prefixLower$$;if(this.info.auxillaries&&($parts$$.length>2||this.prefix))for($start$$=0;$start$$<$parts$$.length-1;$start$$++)for($i$$=$parts$$.length;$i$$>$start$$;$i$$--){$prefixArray$$=$parts$$.slice($start$$,
$i$$);$prefix$$6_prefixLower$$=$prefixArray$$.join(" ");$prefix$$6_prefixLower$$=$prefix$$6_prefixLower$$.toLowerCase();$prefix$$6_prefixLower$$=$prefix$$6_prefixLower$$.replace(/[,\.]/g,"");if($prefix$$6_prefixLower$$ in this.info.auxillaries){$parts$$.splice($start$$,$i$$+1-$start$$,$prefixArray$$.concat($parts$$[$i$$]));$i$$=$start$$}}return $parts$$},_joinArrayOrString:function _joinArrayOrString($part$$){var $i$$;if(typeof $part$$==="object"){for($i$$=0;$i$$<$part$$.length;$i$$++)$part$$[$i$$]=
this._joinArrayOrString($part$$[$i$$]);var $ret$$="";$part$$.forEach(function($segment$$){$ret$$.length>0&&!ilib.CType.isPunct($segment$$.charAt(0))&&($ret$$=$ret$$+" ");$ret$$=$ret$$+$segment$$});return $ret$$}return $part$$},_joinNameArrays:function _joinNameArrays(){for(var $prop$$ in this)this[$prop$$]!==void 0&&(typeof this[$prop$$]==="object"&&this[$prop$$]instanceof Array)&&(this[$prop$$]=this._joinArrayOrString(this[$prop$$]))},_parseAsianName:function $ilib$Name$$_parseAsianName$($parts$$,
$language$$){var $familyNameArray$$=this._findPrefix($parts$$,this.info.knownFamilyNames,true,this.info.noCompoundFamilyNames),$tempFullName$$=$parts$$.join("");if($familyNameArray$$&&$familyNameArray$$.length>0){this.familyName=$familyNameArray$$.join("");this.givenName=$parts$$.slice(this.familyName.length).join("");$language$$==="ko"&&($tempFullName$$.search(/\s*[/\s]/)>-1&&!this.suffix)&&this._parseKoreanName($tempFullName$$)}else this.locale.getLanguage()==="ja"?this._parseJapaneseName($parts$$):
this.suffix||this.prefix?this.familyName=$parts$$.join(""):this.givenName=$parts$$.join("")},_parseKoreanName:function $ilib$Name$$_parseKoreanName$($name$$){var $spaceSplit$$=$name$$.split(" "),$spceCount$$=$spaceSplit$$.length,$fistSpaceIndex$$=$name$$.indexOf(" "),$lastSpaceIndex$$=$name$$.lastIndexOf(" ");if($spceCount$$===2){this.familyName=$spaceSplit$$[0];this.givenName=$name$$.slice($fistSpaceIndex$$,$name$$.length)}else{this.familyName=$spaceSplit$$[0];this.middleName=$name$$.slice($fistSpaceIndex$$,
$lastSpaceIndex$$);this.givenName=$name$$.slice($lastSpaceIndex$$,$name$$.length)}},_parseJapaneseName:function $ilib$Name$$_parseJapaneseName$($parts$$){if(this.suffix&&this.suffix.length>1&&this.info.honorifics.indexOf(this.suffix)>-1){if($parts$$.length===1){ilib.CType.withinRange($parts$$[0],"cjk")?this.familyName=$parts$$[0]:this.givenName=$parts$$[0];return}if($parts$$.length===2){this.familyName=$parts$$.slice(0,$parts$$.length).join("");return}}if($parts$$.length>1)for(var $fn$$="",$i$$=0;$i$$<
$parts$$.length;$i$$++)if(ilib.CType.withinRange($parts$$[$i$$],"cjk"))$fn$$=$fn$$+$parts$$[$i$$];else{if($fn$$.length>1&&ilib.CType.withinRange($parts$$[$i$$],"hiragana")){this.familyName=$fn$$;this.givenName=$parts$$.slice($i$$,$parts$$.length).join("");return}break}if($parts$$.length===1)this.familyName=$parts$$[0];else if($parts$$.length===2){this.familyName=$parts$$[0];this.givenName=$parts$$[1]}else if($parts$$.length===3){this.familyName=$parts$$[0];this.givenName=$parts$$.slice(1,$parts$$.length).join("")}else if($parts$$.length>
3){this.familyName=$parts$$.slice(0,2).join("");this.givenName=$parts$$.slice(2,$parts$$.length).join("")}},_parseSpanishName:function $ilib$Name$$_parseSpanishName$($parts$$){var $conjunctionIndex$$;if($parts$$.length===1)this.prefix||typeof $parts$$[0]==="object"?this.familyName=$parts$$[0]:this.givenName=$parts$$[0];else if($parts$$.length===2){this.givenName=$parts$$[0];this.familyName=$parts$$[1]}else if($parts$$.length===3){$conjunctionIndex$$=this._findLastConjunction($parts$$);if($conjunctionIndex$$===
1)this.givenName=$parts$$;else{this.givenName=$parts$$[0];this.familyName=$parts$$.slice(1)}}else if($parts$$.length>3){$conjunctionIndex$$=this._findLastConjunction($parts$$);if($conjunctionIndex$$>0){this.givenName=$parts$$.splice(0,$conjunctionIndex$$+2);if($parts$$.length>1){this.familyName=$parts$$.splice($parts$$.length-2,2);if($parts$$.length>0)this.middleName=$parts$$}else if($parts$$.length===1)this.familyName=$parts$$[0]}else{this.givenName=$parts$$.splice(0,1);this.familyName=$parts$$.splice($parts$$.length-
2,2);this.middleName=$parts$$}}},_parseIndonesianName:function $ilib$Name$$_parseIndonesianName$($parts$$){var $conjunctionIndex$$;if($parts$$.length===1)this.givenName=$parts$$[0];else if($parts$$.length>=2){$conjunctionIndex$$=this._findLastConjunction($parts$$);if($conjunctionIndex$$>0){this.givenName=$parts$$.splice(0,$conjunctionIndex$$+2);if($parts$$.length>1)this.middleName=$parts$$}else{this.givenName=$parts$$.splice(0,1);this.middleName=$parts$$}}},_parseGenericWesternName:function $ilib$Name$$_parseGenericWesternName$($parts$$){var $conjunctionIndex$$;
if($parts$$.length===1)this.prefix||typeof $parts$$[0]==="object"?this.familyName=$parts$$[0]:this.givenName=$parts$$[0];else if($parts$$.length===2)if(this.info.order=="fgm"){this.givenName=$parts$$[1];this.familyName=$parts$$[0]}else{if(this.info.order=="gmf"||typeof this.info.order=="undefined"){this.givenName=$parts$$[0];this.familyName=$parts$$[1]}}else if($parts$$.length>=3){$conjunctionIndex$$=this._findLastConjunction($parts$$);if($conjunctionIndex$$>0){this.givenName=$parts$$.slice(0,$conjunctionIndex$$+
2);if($conjunctionIndex$$+1<$parts$$.length-1){this.familyName=$parts$$.splice($parts$$.length-1,1);if($conjunctionIndex$$+2<$parts$$.length-1)this.middleName=$parts$$.slice($conjunctionIndex$$+2,$parts$$.length-$conjunctionIndex$$-3)}else if(this.order=="fgm"){this.familyName=$parts$$.slice(0,$conjunctionIndex$$+2);if($conjunctionIndex$$+1<$parts$$.length-1){this.middleName=$parts$$.splice($parts$$.length-1,1);if($conjunctionIndex$$+2<$parts$$.length-1)this.givenName=$parts$$.slice($conjunctionIndex$$+
2,$parts$$.length-$conjunctionIndex$$-3)}}}else{this.givenName=$parts$$[0];this.middleName=$parts$$.slice(1,$parts$$.length-1);this.familyName=$parts$$[$parts$$.length-1]}}},_findPatronymicName:function $ilib$Name$$_findPatronymicName$($parts$$){var $index$$,$part$$;for($index$$=0;$index$$<$parts$$.length;$index$$++){$part$$=$parts$$[$index$$];if(typeof $part$$==="string"){$part$$=$part$$.toLowerCase();for(var $subLength$$=this.info.patronymicName.length;$subLength$$--;)if($part$$.indexOf(this.info.patronymicName[$subLength$$])!==
-1)return $index$$}}return-1},_isPatronymicName:function $ilib$Name$$_isPatronymicName$($pName_part$$){if(typeof $pName_part$$==="string")for(var $pName_part$$=$pName_part$$.toLowerCase(),$subLength$$=this.info.patronymicName.length;$subLength$$--;)if($pName_part$$.indexOf(this.info.patronymicName[$subLength$$])!==-1)return true;return false},_findFamilyName:function $ilib$Name$$_findFamilyName$($parts$$){var $index$$,$part$$;for($index$$=0;$index$$<$parts$$.length;$index$$++){$part$$=$parts$$[$index$$];
if(typeof $part$$==="string"){$part$$=$part$$.toLowerCase();var $length$$=$part$$.length-1;if(this.info.familyName.indexOf($part$$)!==-1)return $index$$;if($part$$[$length$$]==="\u0432"||$part$$[$length$$]==="\u043d"||$part$$[$length$$]==="\u0439"){$part$$=$part$$.slice(0,-1);if(this.info.familyName.indexOf($part$$)!==-1)return $index$$}else if($part$$[$length$$-1]==="\u0432"&&$part$$[$length$$]==="\u0430"||$part$$[$length$$-1]==="\u043d"&&$part$$[$length$$]==="\u0430"||$part$$[$length$$-1]==="\u0430"&&
$part$$[$length$$]==="\u044f"){$part$$=$part$$.slice(0,-2);if(this.info.familyName.indexOf($part$$)!==-1)return $index$$}}}return-1},_parseRussianName:function $ilib$Name$$_parseRussianName$($parts$$){var $conjunctionIndex$$;$conjunctionIndex$$=-1;if($parts$$.length===1)this.prefix||typeof $parts$$[0]==="object"?this.familyName=$parts$$[0]:this.givenName=$parts$$[0];else if($parts$$.length===2)if(this.info.order==="fgm"){this.givenName=$parts$$[1];this.familyName=$parts$$[0]}else if(this.info.order===
"gmf"){this.givenName=$parts$$[0];this.familyName=$parts$$[1]}else{if(typeof this.info.order==="undefined")if(this._isPatronymicName($parts$$[1])===true){this.middleName=$parts$$[1];this.givenName=$parts$$[0]}else if(($conjunctionIndex$$=this._findFamilyName($parts$$))!==-1)if($conjunctionIndex$$===1){this.givenName=$parts$$[0];this.familyName=$parts$$[1]}else{this.familyName=$parts$$[0];this.givenName=$parts$$[1]}else{this.givenName=$parts$$[0];this.familyName=$parts$$[1]}}else if($parts$$.length>=
3){$conjunctionIndex$$=this._findLastConjunction($parts$$);var $patronymicNameIndex$$=this._findPatronymicName($parts$$);if($conjunctionIndex$$>0){this.givenName=$parts$$.slice(0,$conjunctionIndex$$+2);if($conjunctionIndex$$+1<$parts$$.length-1){this.familyName=$parts$$.splice($parts$$.length-1,1);if($conjunctionIndex$$+2<$parts$$.length-1)this.middleName=$parts$$.slice($conjunctionIndex$$+2,$parts$$.length-$conjunctionIndex$$-3)}else if(this.order=="fgm"){this.familyName=$parts$$.slice(0,$conjunctionIndex$$+
2);if($conjunctionIndex$$+1<$parts$$.length-1){this.middleName=$parts$$.splice($parts$$.length-1,1);if($conjunctionIndex$$+2<$parts$$.length-1)this.givenName=$parts$$.slice($conjunctionIndex$$+2,$parts$$.length-$conjunctionIndex$$-3)}}}else if($patronymicNameIndex$$!==-1){this.middleName=$parts$$[$patronymicNameIndex$$];if($patronymicNameIndex$$===$parts$$.length-1){this.familyName=$parts$$[0];this.givenName=$parts$$.slice(1,$patronymicNameIndex$$)}else{this.givenName=$parts$$.slice(0,$patronymicNameIndex$$);
this.familyName=$parts$$[$parts$$.length-1]}}else{this.givenName=$parts$$[0];this.middleName=$parts$$.slice(1,$parts$$.length-1);this.familyName=$parts$$[$parts$$.length-1]}}},_parseWesternName:function $ilib$Name$$_parseWesternName$($parts$$){this.locale.getLanguage()==="es"||this.locale.getLanguage()==="pt"?this._parseSpanishName($parts$$):this.locale.getLanguage()==="ru"?this._parseRussianName($parts$$):this.locale.getLanguage()==="id"?this._parseIndonesianName($parts$$):this._parseGenericWesternName($parts$$)},
getSortFamilyName:function $ilib$Name$$getSortFamilyName$(){var $auxString_name$$,$auxillaries_i$$,$familyNameArray$$1_parts$$;if(this.familyName){if(this.info)if(this.info.sortByHeadWord){if(typeof this.familyName==="string"){$auxString_name$$=this.familyName.replace(/\s+/g," ");$familyNameArray$$1_parts$$=$auxString_name$$.trim().split(" ")}else $familyNameArray$$1_parts$$=this.familyName;if(($auxillaries_i$$=this._findPrefix($familyNameArray$$1_parts$$,this.info.auxillaries,false))&&$auxillaries_i$$.length>
0)if(typeof this.familyName==="string"){$auxString_name$$=$auxillaries_i$$.join(" ");$auxString_name$$=this.familyName.substring($auxString_name$$.length+1)+", "+$auxString_name$$}else $auxString_name$$=$familyNameArray$$1_parts$$.slice($auxillaries_i$$.length).join(" ")+", "+$familyNameArray$$1_parts$$.slice(0,$auxillaries_i$$.length).join(" ")}else if(this.info.knownFamilyNames&&this.familyName){$familyNameArray$$1_parts$$=this.familyName.split("");$familyNameArray$$1_parts$$=this._findPrefix($familyNameArray$$1_parts$$,
this.info.knownFamilyNames,true,this.info.noCompoundFamilyNames);$auxString_name$$="";for($auxillaries_i$$=0;$auxillaries_i$$<$familyNameArray$$1_parts$$.length;$auxillaries_i$$++)$auxString_name$$=$auxString_name$$+(this.info.knownFamilyNames[$familyNameArray$$1_parts$$[$auxillaries_i$$]]||"")}return $auxString_name$$||this.familyName}},getHeadFamilyName:function $ilib$Name$$getHeadFamilyName$(){},clone:function $ilib$Name$$clone$(){return new ilib.Name(this)}};
ilib.NameFmt=function $ilib$NameFmt$($options$$){var $sync$$=true;this.style="short";this.loadParams={};if($options$$){if($options$$.locale)this.locale=typeof $options$$.locale==="string"?new ilib.Locale($options$$.locale):$options$$.locale;if($options$$.style)this.style=$options$$.style;if($options$$.components)this.components=$options$$.components;typeof $options$$.sync!=="undefined"&&($sync$$=$options$$.sync==true);if(typeof $options$$.loadParams!=="undefined")this.loadParams=$options$$.loadParams}this.defaultEuroTemplate=
new ilib.String("{prefix} {givenName} {middleName} {familyName}{suffix}");this.defaultAsianTemplate=new ilib.String("{prefix}{familyName}{givenName}{middleName}{suffix}");this.useFirstFamilyName=false;switch(this.style){default:case "s":case "short":this.style="short";break;case "m":case "medium":this.style="medium";break;case "l":case "long":this.style="long";break;case "f":case "full":this.style="full"}if(!ilib.Name.cache)ilib.Name.cache={};this.locale=this.locale||new ilib.Locale;ilib.CType.isPunct._init($sync$$,
this.loadParams,ilib.bind(this,function(){ilib.loadData({object:ilib.Name,locale:this.locale,name:"name.json",sync:$sync$$,loadParams:this.loadParams,callback:ilib.bind(this,function($info$$){if(!$info$$){var $info$$=ilib.Name.defaultInfo,$spec$$=this.locale.getSpec().replace(/-/g,"_");ilib.Name.cache[$spec$$]=$info$$}this.info=$info$$;this._init();if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad(this)})})}))};
ilib.NameFmt.prototype={_init:function $ilib$NameFmt$$_init$(){if(this.components){var $valids$$={p:1,g:1,m:1,f:1,s:1},$arr$$=this.components.split("");this.comps={};for(var $i$$=0;$i$$<$arr$$.length;$i$$++)$valids$$[$arr$$[$i$$].toLowerCase()]&&(this.comps[$arr$$[$i$$].toLowerCase()]=true)}else this.comps=this.info.components[this.style];this.template=new ilib.String(this.info.format);if(this.locale.language==="es"&&this.style!=="long"&&this.style!=="full")this.useFirstFamilyName=true;this.isAsianLocale=
this.info.nameStyle==="asian"},_adjoinAuxillaries:function $ilib$NameFmt$$_adjoinAuxillaries$($parts$$,$namePrefix$$){var $start$$,$i$$,$prefixArray$$,$prefix$$7_prefixLower$$;if(this.info.auxillaries&&($parts$$.length>2||$namePrefix$$))for($start$$=0;$start$$<$parts$$.length-1;$start$$++)for($i$$=$parts$$.length;$i$$>$start$$;$i$$--){$prefixArray$$=$parts$$.slice($start$$,$i$$);$prefix$$7_prefixLower$$=$prefixArray$$.join(" ");$prefix$$7_prefixLower$$=$prefix$$7_prefixLower$$.toLowerCase();$prefix$$7_prefixLower$$=
$prefix$$7_prefixLower$$.replace(/[,\.]/g,"");if($prefix$$7_prefixLower$$ in this.info.auxillaries){$parts$$.splice($start$$,$i$$+1-$start$$,$prefixArray$$.concat($parts$$[$i$$]));$i$$=$start$$}}return $parts$$},getLocale:function $ilib$NameFmt$$getLocale$(){return this.locale},getStyle:function $ilib$NameFmt$$getStyle$(){return this.style},getComponents:function $ilib$NameFmt$$getComponents$(){return this.components},format:function $ilib$NameFmt$$format$($name$$63_temp$$){var $modified$$,$isAsianName$$,
$currentLanguage$$=this.locale.getLanguage();if($name$$63_temp$$&&typeof $name$$63_temp$$==="object"){if(typeof $name$$63_temp$$.isAsianName==="boolean"&&!$name$$63_temp$$.isAsianName||ilib.Name._isEuroName([$name$$63_temp$$.givenName,$name$$63_temp$$.middleName,$name$$63_temp$$.familyName].join(""),$currentLanguage$$)){$isAsianName$$=false;$modified$$=$name$$63_temp$$.clone();if($modified$$.suffix&&ilib.CType.isPunct($modified$$.suffix.charAt(0))===false)$modified$$.suffix=" "+$modified$$.suffix;
if(this.useFirstFamilyName&&$name$$63_temp$$.familyName){$currentLanguage$$=$modified$$.familyName.trim().split(" ");$currentLanguage$$.length>1&&($currentLanguage$$=this._adjoinAuxillaries($currentLanguage$$,$name$$63_temp$$.prefix));$modified$$.familyName=$currentLanguage$$[0]}$modified$$._joinNameArrays()}else{$isAsianName$$=true;$modified$$=$name$$63_temp$$;if($modified$$.suffix&&$currentLanguage$$==="ko"&&this.info.honorifics.indexOf($name$$63_temp$$.suffix)==-1)$modified$$.suffix=" "+$modified$$.suffix}$name$$63_temp$$=
!this.template||$isAsianName$$!==this.isAsianLocale?$isAsianName$$?this.defaultAsianTemplate:this.defaultEuroTemplate:this.template;return $name$$63_temp$$.format({prefix:this.comps.p&&$modified$$.prefix||"",givenName:this.comps.g&&$modified$$.givenName||"",middleName:this.comps.m&&$modified$$.middleName||"",familyName:this.comps.f&&$modified$$.familyName||"",suffix:this.comps.s&&$modified$$.suffix||""}).replace(/\s+/g," ").trim()}}};ilib.data.address={};
ilib.data.address_AU={formats:{"default":"{streetAddress}\n{locality} {region} {postalCode}\n{country}",nocountry:"{streetAddress}\n{locality} {region} {postalCode}"},startAt:"end",fields:[{name:"postalCode",line:"startAtLast",pattern:"[0-9]{4}"},{name:"region",line:"last",pattern:"new south wales;nsw;queensland;qld;western australia;west australia;wa;southern australia;south australia;sa;tasmania;tas;victoria;vic;australian capital territory;capital territory;act;northern territory;nt;jervis bay territory;jervis bay;jbt;ashmore and cartier islands;ashmore & cartier islands;cartier island;ashmore island;australian antarctic territory;christmas island;cx;cocos and keeling islands;cocos & keeling islands;cocos (keeling) islands;cocos islands;keeling islands;cc;coral sea islands;willis island;heard island and mcdonald islands;heard island & mcdonald islands;heard island;mcdonald islands;hm;norfolk island;nf".split(";")},
{name:"locality",line:"last",pattern:"[A-z\\.\\-']+(\\s+[A-z\\.\\-']+)?$",matchGroup:0}]};
ilib.data.address_CA={formats:{"default":"{streetAddress}\n{locality}, {region} {postalCode}\n{country}",nocountry:"{streetAddress}\n{locality}, {region} {postalCode}"},startAt:"end",fields:[{name:"postalCode",line:"startAtLast",pattern:"[A-Za-z][0-9][A-Za-z]\\s+[0-9][A-Za-z][0-9]"},{name:"region",line:"last",pattern:"new foundland;terre-neuve-et-labrador;terre neuve et labrador;nfld;nl;nova scotia;nouvelle-\u00e9cosse;nouvelle \u00e9cosse;nouvelle-ecosse;nouvelle ecosse;ns;new brunswick;nouveau-brunswick;nb;prince edward island;\u00eele-du-prince-\u00e9douard;\u00eele du prince \u00e9douard;ile-du-prince-edouard;ile du prince edouard;pei;pe;qu\u00e9bec;quebec;qu\u00e9;que;qc;ontario;ont;on;manitoba;man;mb;saskatchewan;sask;sk;alberta;alb;ab;british columbia;colombie-britannique;colombie britannique;bc;nunavut;nun;nu;north west territories;northwest territories;territoires du nord-ouest;territoires du nordouest;nwt;nt;yukon territory;territoire-yukon;territoire yukon;yukon;yuk;yt".split(";")},{name:"locality",
line:"last",pattern:"[\\w\u00c0\u00c1\u00c2\u00c4\u00c7\u00c8\u00c9\u00ca\u00cb\u00cc\u00cd\u00ce\u00cf\u00d2\u00d3\u00d4\u00d9\u00da\u00db\u00e0\u00e1\u00e2\u00e7\u00e8\u00e9\u00ea\u00eb\u00ec\u00ed\u00ee\u00ef\u00f2\u00f3\u00f4\u00f9\u00fa\u00fb\\.\\-']+$",matchGroup:0}]};
ilib.data.address_GB={formats:{"default":"{streetAddress}\n{locality}\n{postalCode}\n{country}",nocountry:"{streetAddress}\n{locality}\n{postalCode}"},startAt:"end",fields:[{name:"postalCode",line:"startAtLast",pattern:"([A-Za-z]{1,2}[0-9]{1,2}[ABCDEFGHJKMNPRSTUVWXYabcdefghjkmnprstuvwxy]?\\s+[0-9][A-Za-z]{2}|GIR 0AA|SAN TA1)",matchGroup:0},{name:"locality",line:"last",pattern:"[A-z\\.\\-']+$"}]};
ilib.data.address_IN={formats:{"default":"{streetAddress}\n{locality}\n{region}\n{postalCode}\n{country}",nocountry:"{streetAddress}\n{locality}\n{region}\n{postalCode}"},startAt:"end",fields:[{name:"postalCode",line:"last",pattern:"([0-9\u0966\u0967\u0968\u0969\u096a\u096b\u096c\u096d\u096e\u096f\u0ae6\u0ae7\u0ae8\u0ae9\u0aea\u0aeb\u0aec\u0aed\u0aee\u0aef\u0ce6\u0ce7\u0ce8\u0ce9\u0cea\u0ceb\u0cec\u0ced\u0cee\u0cef\u0d66\u0d67\u0d68\u0d69\u0d6a\u0d6b\u0d6c\u0d6d\u0d6e\u0d6f \u0a66\u0a67\u0a68\u0a69\u0a6a\u0a6b\u0a6c\u0a6d\u0a6e\u0a6f  \u0be7\u0be8\u0be9\u0bea\u0beb\u0bec\u0bed\u0bee\u0bef\u0bf0\u0bf1\u0bf2\u0bf3\u0bf4\u0bf5\u0bf6\u0bf7\u0bf8\u0bf9\u0bfa \u09e6\u09e7\u09e8\u09e9\u09ea\u09eb\u09ec\u09ed\u09ee\u09ef\u09f2\u09f3\u09f4\u09f5\u09f6\u09f7\u09f8\u0660\u200e\u0661\u200e\u0662\u200e\u0663\u200e\u0664\u200e\u0665\u200e\u0666\u200e\u0667\u200e\u0668\u200e\u0669\u200e\u0c66\u0c67\u0c68\u0c69\u0c6a\u0c6b\u0c6c\u0c6d\u0c6e\u0c6f ]{6})$"},
{name:"region",line:"last",pattern:"Andaman and Nicobar;Andhra Pradesh;Arunachal Pradesh;Assam;Bihar;Chandigarh;Chhattisgarh;Dadra and Nagar Haveli;Daman and Diu;New Delhi;Goa;Gujarat;Haryana;Himachal Pradesh;Jammu and Kashmir;Jharkhand;Karnataka;Kerala;Lakshadweep;Madhya Pradesh;Maharashtra;Manipur;Meghalaya;Mizoram;Nagaland;Odisha;Puducherry;Punjab;Rajasthan;Sikkim;Tamil Nadu;Tripura;Uttar Pradesh;Uttarakhand;West Bengal;\u0905\u0902\u0921\u092e\u093e\u0928 \u0914\u0930 \u0928\u093f\u0915\u094b\u092c\u093e\u0930;\u0906\u0902\u0927\u094d\u0930 \u092a\u094d\u0930\u0926\u0947\u0936;\u0905\u0930\u0941\u0923\u093e\u091a\u0932 \u092a\u094d\u0930\u0926\u0947\u0936;\u0905\u0938\u092e;\u092c\u093f\u0939\u093e\u0930;\u091a\u0902\u0921\u0940\u0917\u0922\u093c;\u091b\u0924\u094d\u0924\u0940\u0938\u0917\u0922\u093c;\u0926\u093e\u0926\u0930\u093e \u0914\u0930 \u0928\u0917\u0930 \u200b\u200b\u0939\u0935\u0947\u0932\u0940;\u0926\u092e\u0928 \u0914\u0930 \u0926\u0940\u0935;\u0928\u0908 \u0926\u093f\u0932\u094d\u0932\u0940;\u0917\u094b\u0935\u093e;\u0917\u0941\u091c\u0930\u093e\u0924;\u0939\u0930\u093f\u092f\u093e\u0923\u093e;\u0939\u093f\u092e\u093e\u091a\u0932 \u092a\u094d\u0930\u0926\u0947\u0936;\u091c\u092e\u094d\u092e\u0942 \u0914\u0930 \u0915\u0936\u094d\u092e\u0940\u0930;\u091d\u093e\u0930\u0916\u0902\u0921;\u0915\u0930\u094d\u0928\u093e\u091f\u0915;\u0915\u0947\u0930\u0932;\u0932\u0915\u094d\u0937\u0926\u094d\u0935\u0940\u092a;\u092e\u0927\u094d\u092f \u092a\u094d\u0930\u0926\u0947\u0936;\u092e\u0939\u093e\u0930\u093e\u0937\u094d\u091f\u094d\u0930;\u092e\u0923\u093f\u092a\u0941\u0930;\u092e\u0947\u0918\u093e\u0932\u092f;\u092e\u093f\u091c\u094b\u0930\u092e;\u0928\u093e\u0917\u093e\u0932\u0948\u0902\u0921;\u0913\u0921\u093f\u0936\u093e;\u092a\u0941\u0921\u0941\u091a\u0947\u0930\u0940;\u092a\u0902\u091c\u093e\u092c;\u0930\u093e\u091c\u0938\u094d\u0925\u093e\u0928;\u0938\u093f\u0915\u094d\u0915\u093f\u092e;\u0924\u092e\u093f\u0932\u0928\u093e\u0921\u0941;\u0924\u094d\u0930\u093f\u092a\u0941\u0930\u093e;\u0909\u0924\u094d\u0924\u0930 \u092a\u094d\u0930\u0926\u0947\u0936;\u0909\u0924\u094d\u0924\u0930\u093e\u0916\u0902\u0921;\u092a\u0936\u094d\u091a\u093f\u092e \u092c\u0902\u0917\u093e\u0932;\u0c06\u0c02\u0c27\u0c4d\u0c30\u0c2a\u0c4d\u0c30\u0c26\u0c47\u0c36\u0c4d;\u0c05\u0c30\u0c41\u0c23\u0c3e\u0c1a\u0c32\u0c4d \u0c2a\u0c4d\u0c30\u0c26\u0c47\u0c36\u0c4d;\u0c05\u0c38\u0c4d\u0c38\u0c3e\u0c02;\u0c2c\u0c40\u0c39\u0c3e\u0c30\u0c4d;\u0c1b\u0c24\u0c4d\u0c24\u0c40\u0c38\u0c4d\u0c17\u0c22\u0c4d;\u0c17\u0c4b\u0c35\u0c3e;\u0c17\u0c41\u0c1c\u0c30\u0c3e\u0c24\u0c4d;\u0c39\u0c30\u0c4d\u0c2f\u0c3e\u0c28\u0c3e;\u0c39\u0c3f\u0c2e\u0c3e\u0c1a\u0c32\u0c4d \u0c2a\u0c4d\u0c30\u0c26\u0c47\u0c36\u0c4d;\u0c1c\u0c2e\u0c4d\u0c2e\u0c42 \u0c2e\u0c30\u0c3f\u0c2f\u0c41 \u0c15\u0c3e\u0c36\u0c4d\u0c2e\u0c40\u0c30\u0c4d;\u0c1c\u0c3e\u0c30\u0c4d\u0c16\u0c02\u0c21\u0c4d;\u0c15\u0c30\u0c4d\u0c23\u0c3e\u0c1f\u0c15;\u0c15\u0c47\u0c30\u0c33;\u0c2e\u0c27\u0c4d\u0c2f \u0c2a\u0c4d\u0c30\u0c26\u0c47\u0c36\u0c4d;\u0c2e\u0c39\u0c3e\u0c30\u0c3e\u0c37\u0c4d\u0c1f\u0c4d\u0c30;\u0c2e\u0c23\u0c3f\u0c2a\u0c42\u0c30\u0c4d;\u0c2e\u0c47\u0c18\u0c3e\u0c32\u0c2f;\u0c2e\u0c3f\u0c1c\u0c4b\u0c30\u0c02;\u0c28\u0c3e\u0c17\u0c3e\u0c32\u0c3e\u0c02\u0c21\u0c4d;\u0c12\u0c30\u0c3f\u0c37\u0c3e;\u0c2a\u0c02\u0c1c\u0c3e\u0c2c\u0c4d;\u0c30\u0c3e\u0c1c\u0c38\u0c4d\u0c25\u0c3e\u0c28\u0c4d;\u0c38\u0c3f\u0c15\u0c4d\u0c15\u0c3f\u0c02;\u0c24\u0c2e\u0c3f\u0c33\u0c28\u0c3e\u0c21\u0c41;\u0c24\u0c4d\u0c30\u0c3f\u0c2a\u0c41\u0c30;\u0c09\u0c24\u0c4d\u0c24\u0c30 \u0c2a\u0c4d\u0c30\u0c26\u0c47\u0c36\u0c4d;\u0c09\u0c24\u0c4d\u0c24\u0c30\u0c3e\u0c16\u0c02\u0c21\u0c4d;\u0c35\u0c46\u0c38\u0c4d\u0c1f\u0c4d \u0c2c\u0c46\u0c02\u0c17\u0c3e\u0c32\u0c4d;\u0985\u09a8\u09cd\u09a7\u09cd\u09b0 \u09aa\u09cd\u09b0\u09a6\u09c7\u09b6;\u0985\u09b0\u09c1\u09a3\u09be\u099a\u09b2 \u09aa\u09cd\u09b0\u09a6\u09c7\u09b6;\u0985\u09b8\u09ae;\u09ac\u09bf\u09b9\u09be\u09b0;\u099b\u09a4\u09cd\u09a4\u09bf\u09b8\u0997\u09a1\u09bc;\u0997\u09cb\u09af\u09bc\u09be;\u0997\u09c1\u099c\u09b0\u09be\u09a4;\u09b9\u09b0\u09bf\u09af\u09bc\u09be\u09a8\u09be;\u09b9\u09bf\u09ae\u09be\u099a\u09b2 \u09aa\u09cd\u09b0\u09a6\u09c7\u09b6;\u099c\u09ae\u09cd\u09ae\u09c1 \u0993 \u0995\u09be\u09b6\u09cd\u09ae\u09c0\u09b0;\u099d\u09be\u09a1\u09bc\u0996\u09a8\u09cd\u09a1;\u0995\u09b0\u09cd\u09a8\u09be\u099f\u0995;\u0995\u09c7\u09b0\u09b2;\u09ae\u09a7\u09cd\u09af \u09aa\u09cd\u09b0\u09a6\u09c7\u09b6;\u09ae\u09b9\u09be\u09b0\u09be\u09b7\u09cd\u099f\u09cd\u09b0;\u09ae\u09a3\u09bf\u09aa\u09c1\u09b0;\u09ae\u09c7\u0998\u09be\u09b2\u09af\u09bc;\u09ae\u09bf\u099c\u09cb\u09b0\u09be\u09ae;\u09a8\u09be\u0997\u09be\u09b2\u09cd\u09af\u09be\u09a8\u09cd\u09a1;\u0985\u09a1\u09bf\u09b6\u09be;\u09aa\u09be\u099e\u09cd\u099c\u09be\u09ac;\u09b0\u09be\u099c\u09b8\u09cd\u09a5\u09be\u09a8;\u09b8\u09bf\u0995\u09bf\u09ae;\u09a4\u09be\u09ae\u09bf\u09b2\u09a8\u09be\u09a1\u09c1;\u09a4\u09cd\u09b0\u09bf\u09aa\u09c1\u09b0\u09be;\u0989\u09a4\u09cd\u09a4\u09b0\u09aa\u09cd\u09b0\u09a6\u09c7\u09b6;\u0989\u09a4\u09cd\u09a4\u09b0\u09be\u0996\u09a8\u09cd\u09a1\u09c7;\u09aa\u09b6\u09cd\u099a\u09bf\u09ae \u09ac\u0999\u09cd\u0997;\u0a86\u0a82\u0aa7\u0acd\u0ab0 \u0aaa\u0acd\u0ab0\u0aa6\u0ac7\u0ab6;\u0a85\u0ab0\u0ac1\u0aa3\u0abe\u0a9a\u0ab2 \u0aaa\u0acd\u0ab0\u0aa6\u0ac7\u0ab6;\u0a86\u0ab8\u0abe\u0aae;\u0aac\u0abf\u0ab9\u0abe\u0ab0;\u0a9b\u0aa4\u0acd\u0aa4\u0ac0\u0ab8\u0a97\u0aa2;\u0a97\u0acb\u0ab5\u0abe;\u0a97\u0ac1\u0a9c\u0ab0\u0abe\u0aa4;\u0ab9\u0ab0\u0abf\u0aaf\u0abe\u0aa3\u0abe;\u0ab9\u0abf\u0aae\u0abe\u0a9a\u0ab2 \u0aaa\u0acd\u0ab0\u0aa6\u0ac7\u0ab6;\u0a9c\u0aae\u0acd\u0aae\u0ac1 \u0a85\u0aa8\u0ac7 \u0a95\u0abe\u0ab6\u0acd\u0aae\u0ac0\u0ab0;\u0a9d\u0abe\u0ab0\u0a96\u0a82\u0aa1;\u0a95\u0ab0\u0acd\u0aa3\u0abe\u0a9f\u0a95;\u0a95\u0ac7\u0ab0\u0ab2;\u0aae\u0aa7\u0acd\u0aaf \u0aaa\u0acd\u0ab0\u0aa6\u0ac7\u0ab6;\u0aae\u0ab9\u0abe\u0ab0\u0abe\u0ab7\u0acd\u0a9f\u0acd\u0ab0;\u0aae\u0aa3\u0abf\u0aaa\u0ac1\u0ab0;\u0aae\u0ac7\u0a98\u0abe\u0ab2\u0aaf;\u0aae\u0abf\u0a9d\u0acb\u0ab0\u0aae;\u0aa8\u0abe\u0a97\u0abe\u0ab2\u0ac7\u0aa8\u0acd\u0aa1;Odisha;\u0aaa\u0a82\u0a9c\u0abe\u0aac;\u0ab0\u0abe\u0a9c\u0ab8\u0acd\u0aa5\u0abe\u0aa8;\u0ab8\u0abf\u0a95\u0acd\u0a95\u0abf\u0aae;\u0aa4\u0aae\u0abf\u0ab3\u0aa8\u0abe\u0aa1\u0ac1;\u0aa4\u0acd\u0ab0\u0abf\u0aaa\u0ac1\u0ab0\u0abe;\u0a89\u0aa4\u0acd\u0aa4\u0ab0 \u0aaa\u0acd\u0ab0\u0aa6\u0ac7\u0ab6;\u0a89\u0aa4\u0acd\u0aa4\u0ab0\u0abe\u0a96\u0a82\u0aa1;\u0aaa\u0ab6\u0acd\u0a9a\u0abf\u0aae \u0aac\u0a82\u0a97\u0abe\u0ab3;\u0c86\u0c82\u0ca7\u0ccd\u0cb0 \u0caa\u0ccd\u0cb0\u0ca6\u0cc6\u0cd5\u0cb6;\u0c85\u0cb0\u0cc1\u0ca3\u0cbe\u0c9a\u0cb2 \u0caa\u0ccd\u0cb0\u0ca6\u0cc6\u0cd5\u0cb6;\u0c85\u0cb8\u0ccd\u0cb8\u0cbe\u0c82;\u0cac\u0cbf\u0cb9\u0cbe\u0cb0;\u0c9b\u0ca4\u0ccd\u0ca4\u0cbf\u0cd5\u0cb8\u0ccd \u0c98\u0ca1\u0ccd;\u0c97\u0cc6\u0cc2\u0cd5\u0cb5\u0cbe;\u0c97\u0cc1\u0c9c\u0cb0\u0cbe\u0ca4\u0ccd;\u0cb9\u0cb0\u0cbf\u0caf\u0cbe\u0ca3;\u0cb9\u0cbf\u0cae\u0cbe\u0c9a\u0cb2 \u0caa\u0ccd\u0cb0\u0ca6\u0cc6\u0cd5\u0cb6;\u0c9c\u0cae\u0ccd\u0cae\u0cc1 \u0cae\u0ca4\u0ccd\u0ca4\u0cc1 \u0c95\u0cbe\u0cb6\u0ccd\u0cae\u0cbf\u0cd5\u0cb0;\u0c9c\u0cbe\u0cb0\u0ccd\u0c96\u0c82\u0ca1\u0ccd;\u0c95\u0cb0\u0ccd\u0ca8\u0cbe\u0c9f\u0c95;\u0c95\u0cc6\u0cd5\u0cb0\u0cb3;\u0cae\u0ca7\u0ccd\u0caf \u0caa\u0ccd\u0cb0\u0ca6\u0cc6\u0cd5\u0cb6;\u0cae\u0cb9\u0cbe\u0cb0\u0cbe\u0cb7\u0ccd\u0c9f\u0ccd\u0cb0;\u0cae\u0ca3\u0cbf\u0caa\u0cc1\u0cb0;\u0cae\u0cc6\u0cd5\u0c98\u0cbe\u0cb2\u0caf;\u0cae\u0cbf\u0c9c\u0cc6\u0cc2\u0cd5\u0cb0\u0cbe\u0cae\u0ccd;\u0ca8\u0cbe\u0c97\u0cbe\u0cb2\u0ccd\u0caf\u0cbe\u0c82\u0ca1\u0ccd;\u0c93\u0cb0\u0cbf\u0cb8\u0ccd\u0cb8\u0cbe;\u0caa\u0c82\u0c9c\u0cbe\u0cac\u0ccd;\u0cb0\u0cbe\u0c9c\u0cb8\u0ccd\u0ca5\u0cbe\u0ca8;\u0cb8\u0cbf\u0c95\u0ccd\u0c95\u0cbf\u0c82;\u0ca4\u0cae\u0cbf\u0cb3\u0cc1\u0ca8\u0cbe\u0ca1\u0cc1;\u0ca4\u0ccd\u0cb0\u0cbf\u0caa\u0cc1\u0cb0;\u0c89\u0ca4\u0ccd\u0ca4\u0cb0 \u0caa\u0ccd\u0cb0\u0ca6\u0cc6\u0cd5\u0cb6;\u0c89\u0ca4\u0ccd\u0ca4\u0cb0\u0cbe\u0c96\u0c82\u0ca1\u0ccd;\u0caa\u0cb6\u0ccd\u0c9a\u0cbf\u0cae \u0cac\u0c82\u0c97\u0cbe\u0cb3;\u0d06\u0d28\u0d4d\u0d27\u0d4d\u0d30\u0d2a\u0d4d\u0d30\u0d26\u0d47\u0d36\u0d4d;\u0d05\u0d30\u0d41\u0d23\u0d3e\u0d1a\u0d32\u0d4d\u200d\u0d2a\u0d4d\u0d30\u0d26\u0d47\u0d36\u0d4d;\u0d06\u0d38\u0d4d\u0d38\u0d3e\u0d02;\u0d2c\u0d40\u0d39\u0d3e\u0d30\u0d4d\u200d;\u0d1a\u0d24\u0d4d\u0d24\u0d40\u0d38\u0d4d\u0d17\u0d21\u0d4d;\u0d17\u0d4b\u0d35;\u0d17\u0d41\u0d1c\u0d31\u0d3e\u0d24\u0d4d\u0d24\u0d4d;\u0d39\u0d30\u0d3f\u0d2f\u0d3e\u0d28;\u0d39\u0d3f\u0d2e\u0d3e\u0d1a\u0d32\u0d4d\u200d\u0d2a\u0d4d\u0d30\u0d26\u0d47\u0d36\u0d4d;\u0d1c\u0d2e\u0d4d\u0d2e\u0d41\u0d15\u0d3e\u0d36\u0d4d\u0d2e\u0d40\u0d30\u0d4d\u200d;\u0d1d\u0d3e\u0d30\u0d4d\u200d\u0d16\u0d23\u0d4d\u0d21\u0d4d;\u0d15\u0d30\u0d4d\u200d\u0d23\u0d3e\u0d1f\u0d15;\u0d15\u0d47\u0d30\u0d33;\u0d2e\u0d26\u0d4d\u0d27\u0d4d\u0d2f\u0d2a\u0d4d\u0d30\u0d26\u0d47\u0d36\u0d4d;\u0d2e\u0d39\u0d3e\u0d30\u0d3e\u0d37\u0d4d\u0d1f\u0d4d\u0d30;\u0d2e\u0d23\u0d3f\u0d2a\u0d4d\u0d2a\u0d42\u0d30\u0d4d\u200d;\u0d2e\u0d47\u0d18\u0d3e\u0d32\u0d2f;\u0d2e\u0d3f\u0d38\u0d4b\u0d31\u0d3e\u0d02;\u0d28\u0d3e\u0d17\u0d3e\u0d32\u0d3e\u0d28\u0d4d\u200d\u0d21\u0d4d;\u0d12\u0d21\u0d40\u0d37;\u0d2a\u0d1e\u0d4d\u0d1a\u0d3e\u0d2c\u0d4d;\u0d30\u0d3e\u0d1c\u0d38\u0d4d\u0d25\u0d3e\u0d28\u0d4d\u200d;\u0d38\u0d3f\u0d15\u0d4d\u0d15\u0d3f\u0d02;\u0d24\u0d2e\u0d3f\u0d34\u0d4d\u0d28\u0d3e\u0d1f\u0d4d;\u0d24\u0d4d\u0d30\u0d3f\u0d2a\u0d41\u0d30;\u0d09\u0d24\u0d4d\u0d24\u0d30\u0d4d\u200d \u0d2a\u0d4d\u0d30\u0d26\u0d47\u0d36\u0d4d;\u0d09\u0d24\u0d4d\u0d24\u0d30\u0d18\u0d23\u0d4d\u0d1f\u0d4d;\u0d35\u0d46\u0d38\u0d4d\u0d31\u0d4d\u0d31\u0d4d \u0d2c\u0d02\u0d17\u0d3e\u0d33\u0d4d\u200d;\u0906\u0902\u0927\u094d\u0930 \u092a\u094d\u0930\u0926\u0947\u0936;\u0905\u0930\u0941\u0923\u093e\u091a\u0932 \u092a\u094d\u0930\u0926\u0947\u0936;\u0906\u0938\u093e\u092e;\u092c\u093f\u0939\u093e\u0930;\u091b\u0924\u094d\u0924\u0940\u0938\u0917\u0922;\u0917\u094b\u0935\u093e;\u0917\u0941\u091c\u0930\u093e\u0924;\u0939\u0930\u093f\u092f\u093e\u0923\u093e;\u0939\u093f\u092e\u093e\u091a\u0932 \u092a\u094d\u0930\u0926\u0947\u0936;\u091c\u092e\u094d\u092e\u0942 \u0906\u0923\u093f \u0915\u093e\u0936\u094d\u092e\u0940\u0930;\u091d\u093e\u0930\u0916\u0902\u0921;\u0915\u0930\u094d\u0928\u093e\u091f\u0915;\u0915\u0947\u0930\u0933;\u092e\u0927\u094d\u092f \u092a\u094d\u0930\u0926\u0947\u0936;\u092e\u0939\u093e\u0930\u093e\u0937\u094d\u091f\u094d\u0930;\u092e\u0923\u093f\u092a\u0942\u0930;\u092e\u0947\u0918\u093e\u0932\u092f;\u092e\u093f\u091d\u094b\u0930\u092e;\u0928\u093e\u0917\u093e\u0932\u0901\u0921;\u0913\u0930\u093f\u0938\u093e;\u092a\u0902\u091c\u093e\u092c;\u0930\u093e\u091c\u0938\u094d\u0925\u093e\u0928;\u0938\u093f\u0915\u094d\u0915\u093f\u092e;\u0924\u093e\u092e\u093f\u0933\u0928\u093e\u0921\u0942;\u0924\u094d\u0930\u093f\u092a\u0941\u0930\u093e;\u0909\u0924\u094d\u0924\u0930 \u092a\u094d\u0930\u0926\u0947\u0936;\u0909\u0924\u094d\u0924\u0930\u093e\u0916\u0902\u0921;\u092a\u0936\u094d\u091a\u093f\u092e \u092c\u0902\u0917\u093e\u0932;\u0b86\u0ba8\u0bcd\u0ba4\u0bbf\u0bb0 \u0baa\u0bbf\u0bb0\u0ba4\u0bc7\u0b9a\u0bae\u0bcd;\u0b85\u0bb0\u0bc1\u0ba3\u0bbe\u0b9a\u0bcd\u0b9a\u0bb2 \u0baa\u0bbf\u0bb0\u0ba4\u0bc7\u0b9a\u0bae\u0bcd;\u0b85\u0b9a\u0bbe\u0bae\u0bcd;\u0baa\u0bc0\u0b95\u0bbe\u0bb0\u0bcd;\u0b9a\u0b9f\u0bcd\u0b9f\u0bc0\u0bb8\u0bcd\u0b95\u0bb0\u0bcd;\u0b95\u0bc7\u0bbe\u0bb5\u0bbe;\u0b95\u0bc1\u0b9c\u0bb0\u0bbe\u0ba4\u0bcd;\u0bb9\u0bb0\u0bbf\u0baf\u0bbe\u0ba9\u0bbe;\u0bb9\u0bbf\u0bae\u0bbe\u0b9a\u0bcd\u0b9a\u0bb2 \u0baa\u0bbf\u0bb0\u0ba4\u0bc7\u0b9a\u0bae\u0bcd;\u0b9c\u0bae\u0bcd\u0bae\u0bc1 \u0bae\u0bb1\u0bcd\u0bb1\u0bc1\u0bae\u0bcd \u0b95\u0bbe\u0bb7\u0bcd\u0bae\u0bc0\u0bb0\u0bcd;\u0b9c\u0bbe\u0bb0\u0bcd\u0b95\u0bcd\u0b95\u0ba3\u0bcd\u0b9f\u0bcd;\u0b95\u0bb0\u0bcd\u0ba8\u0bbe\u0b9f\u0b95\u0bbe;\u0b95\u0bc7\u0bb0\u0bb3\u0bbe;\u0bae\u0ba4\u0bcd\u0ba4\u0bbf\u0baf \u0baa\u0bbf\u0bb0\u0ba4\u0bc7\u0b9a\u0bae\u0bcd;\u0bae\u0b95\u0bbe\u0bb0\u0bbe\u0bb7\u0bcd\u0b9f\u0bbf\u0bb0\u0bbe;\u0bae\u0ba3\u0bbf\u0baa\u0bcd\u0baa\u0bc2\u0bb0\u0bcd;\u0bae\u0bc7\u0b95\u0bbe\u0bb2\u0baf\u0bbe;\u0bae\u0bbf\u0b9a\u0bc7\u0bbe\u0bb0\u0bae\u0bcd;\u0ba8\u0bbe\u0b95\u0bbe\u0bb2\u0bbe\u0ba8\u0bcd\u0ba4\u0bc1;\u0baa\u0b9e\u0bcd\u0b9a\u0bbe\u0baa\u0bcd;\u0bb0\u0bbe\u0b9c\u0bb8\u0bcd\u0ba4\u0bbe\u0ba9\u0bcd;\u0b9a\u0bbf\u0b95\u0bcd\u0b95\u0bbf\u0bae\u0bcd;\u0ba4\u0bae\u0bbf\u0bb4\u0bcd\u0ba8\u0bbe\u0b9f\u0bc1;\u0ba4\u0bbf\u0bb0\u0bbf\u0baa\u0bc1\u0bb0\u0bbe;\u0b89\u0ba4\u0bcd\u0ba4\u0bb0 \u0baa\u0bbf\u0bb0\u0ba4\u0bc7\u0b9a\u0bae\u0bcd;\u0b89\u0ba4\u0bcd\u0ba4\u0bb0\u0b95\u0ba3\u0bcd\u0b9f\u0bcd;\u0bae\u0bc7\u0bb1\u0bcd\u0b95\u0bc1 \u0bb5\u0b99\u0bcd\u0b95\u0bbe\u0bb3\u0bae\u0bcd;\u0622\u0646\u062f\u06be\u0631\u0627 \u067e\u0631\u062f\u06cc\u0634;\u0627\u0631\u0648\u0646\u0627\u0686\u0644 \u067e\u0631\u062f\u06cc\u0634;\u0622\u0633\u0627\u0645;\u0628\u06c1\u0627\u0631;\u0686\u06be\u062a\u06cc\u0633 \u06af\u0691\u06be;\u06af\u0648\u0627;\u06af\u062c\u0631\u0627\u062a;\u06c1\u0631\u06cc\u0627\u0646\u06c1;\u06c1\u0645\u0627\u0686\u0644 \u067e\u0631\u062f\u06cc\u0634;\u062c\u0645\u0648\u06ba \u0648 \u06a9\u0634\u0645\u06cc\u0631;\u062c\u06be\u0627\u0631\u06a9\u06be\u0646\u0688;\u06a9\u0631\u0646\u0627\u0679\u06a9;\u06a9\u06cc\u0631\u0644;\u0645\u062f\u06be\u06cc\u06c1 \u067e\u0631\u062f\u06cc\u0634;\u0645\u06c1\u0627\u0631\u0627\u0634\u0679\u0631;\u0645\u0646\u06cc \u067e\u0648\u0631;\u0645\u06cc\u06af\u06be\u0627\u0644\u06cc\u06c1;\u0645\u06cc\u0632\u0648\u0631\u0645;\u0646\u0627\u06af\u0627\u0644\u06cc\u0646\u0688;\u0627\u0691\u06cc\u0633\u06c1;\u067e\u0646\u062c\u0627\u0628;\u0631\u0627\u062c\u0633\u062a\u06be\u0627\u0646;\u0633\u06a9\u06a9\u0645;\u062a\u0627\u0645\u0644 \u0646\u0627\u0688\u0648;\u062a\u0631\u06cc\u067e\u0648\u0631\u06c1;\u0627\u062a\u0631 \u067e\u0631\u062f\u06cc\u0634;\u0627\u062a\u0631\u0627\u06a9\u06be\u0646\u0688;\u0645\u063a\u0631\u0628\u06cc \u0628\u0646\u06af\u0627\u0644".split(";")},
{name:"locality",line:"startAtLast",pattern:"([A-z\u0915\u0916\u0917\u0918\u0919\u091a\u091b\u091c\u091d\u091e\u0923\u0922\u0921\u0920\u091f\u0924\u0924\u094d\u0924\u093e\u0925\u0926\u0927\u0928\u092e\u092d\u092c\u092b\u092a\u0958\u0959\u095a\u095b\u095c\u095d\u095e\u092f\u0930\u0932\u0933\u0935\u0939\u0936\u0937\u0938\u0905\u0906\u0907\u0908\u0909\u090a\u090b\u0960\u090c\u0961\u090f\u0910\u0913\u0914\u0950\u093d\u0965\u0964\u0911\u090e\u0912\u090d\u093e\u093f\u0940\u0941\u0942\u0943\u0944\u0962\u0963\u0947\u0948\u094b\u094c\u0953\u0954\u0901\u0902\u0903\u093c\u0945\u0949\u0946\u094a\u0c85\u0c86\u0c87\u0c88\u0c89\u0c8a\u0c8b\u0c8e\u0c8f\u0c90\u0c92\u0c93\u0c94\u0ce0\u0c95\u0c96\u0c97\u0c98\u0c99\u0c9a\u0c9b\u0c9c\u0c9d\u0c9e\u0c9f\u0ca0\u0ca1\u0ca2\u0ca3\u0ca4\u0ca5\u0ca6\u0ca7\u0ca8\u0caa\u0cab\u0cac\u0cad\u0cae\u0caf\u0cb0\u0cb1\u0cb2\u0cb3\u0cb5\u0cb6\u0cb7\u0cb8\u0cb9\u0cde\u0c95\u0c82\u0c95\u0c83\u0c95\u0cbe\u0c95\u0cbf\u0c95\u0cc0\u0c95\u0cc1\u0c95\u0cc2\u0c95\u0cc3\u0c95\u0cc4\u0c95\u0cc6\u0c95\u0cc7\u0c95\u0cc8\u0c95\u0cca\u0c95\u0ccb\u0c95\u0ccc\u0c95\u0ccd\u0c95\u0cd5\u0c95\u0cd6\u0ce6\u0ce7\u0ce8\u0ce9\u0cea\u0ceb\u0cec\u0ced\u0cee\u0cef\u0c05\u0c06\u0c07\u0c08\u0c09\u0c0a\u0c0b\u0c0c\u0c0e\u0c0f\u0c10\u0c12\u0c13\u0c14\u0c60\u0c61\u0c15\u0c16\u0c17\u0c18\u0c19\u0c1a\u0c1b\u0c1c\u0c1d\u0c1e\u0c1f\u0c20\u0c21\u0c22\u0c23\u0c24\u0c25\u0c26\u0c27\u0c28\u0c2a\u0c2b\u0c2c\u0c2d\u0c2e\u0c2f\u0c30\u0c31\u0c32\u0c33\u0c35\u0c36\u0c37\u0c38\u0c39\u0c15\u0c01\u0c15\u0c02\u0c15\u0c03\u0c15\u0c3e\u0c15\u0c3f\u0c15\u0c40\u0c15\u0c41\u0c15\u0c42\u0c15\u0c43\u0c15\u0c44\u0c15\u0c46\u0c15\u0c47\u0c15\u0c48\u0c15\u0c4a\u0c15\u0c4b\u0c15\u0c4c\u0c15\u0c4d\u0c15\u0c55\u0c15\u0c56\u0c66\u0c67\u0c68\u0c69\u0c6a\u0c6b\u0c6c\u0c6d\u0c6e\u0c6f\u0b85\u0b86\u0b87\u0b88\u0b89\u0b8a\u0b8e\u0b8f\u0b90\u0b92\u0b93\u0b94\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8\u0ba9\u0baa\u0bae\u0baf\u0bb0\u0bb1\u0bb2\u0bb3\u0bb4\u0bb5\u0bb8\u0bb9\u0b95\u0b82\u0b95\u0b83\u0b95\u0bbe\u0b95\u0bbf\u0b95\u0bc0\u0b95\u0bc1\u0b95\u0bc2\u0b95\u0bc6\u0b95\u0bc7\u0b95\u0bc8\u0b95\u0bca\u0b95\u0bcb\u0b95\u0bcc\u0b95\u0bcd\u0b95\u0bd7\u0be7\u0be8\u0be9\u0bea\u0beb\u0bec\u0bed\u0bee\u0bef\u0bf0\u0bf1\u0bf2\u0bf3\u0bf4\u0bf5\u0bf6\u0bf7\u0bf8\u0bf9\u0bfa\u0d05\u0d06\u0d07\u0d08\u0d09\u0d0a\u0d0b\u0d0c\u0d0e\u0d0f\u0d10\u0d12\u0d13\u0d14\u0d60\u0d61\u0d15\u0d16\u0d17\u0d18\u0d19\u0d1a\u0d1b\u0d1c\u0d1d\u0d1e\u0d1f\u0d20\u0d21\u0d22\u0d23\u0d24\u0d25\u0d26\u0d27\u0d28\u0d2a\u0d2b\u0d2c\u0d2d\u0d2e\u0d2f\u0d30\u0d31\u0d32\u0d33\u0d34\u0d35\u0d36\u0d37\u0d38\u0d39\u0d15\u0d02\u0d15\u0d03\u0d15\u0d3e\u0d15\u0d3f\u0d15\u0d40\u0d15\u0d41\u0d15\u0d42\u0d15\u0d43\u0d15\u0d46\u0d15\u0d47\u0d15\u0d48\u0d15\u0d4a\u0d15\u0d4b\u0d15\u0d4c\u0d15\u0d4d\u0d15\u0d57\u0d66\u0d67\u0d68\u0d69\u0d6a\u0d6b\u0d6c\u0d6d\u0d6e\u0d6f\u0985\u0986\u0987\u0988\u0989\u098a\u098b\u09e0\u098c\u09e1\u098f\u0990\u0993\u0994\u0995\u0996\u0997\u0998\u0999\u099a\u099b\u099c\u099d\u099e\u099f\u09a0\u09a1\u09a2\u09a3\u09a4\u09a5\u09a6\u09a7\u09a8\u09aa\u09ab\u09ac\u09ad\u09ae\u09af\u09b0\u09b2\u09b6\u09b7\u09b8\u09b9\u09dc\u09dd\u09df\u09f0\u09f1\u0995\u0981\u0995\u0982\u0995\u0983\u0995\u09bc\u0995\u09be\u0995\u09bf\u0995\u09c0\u0995\u09c1\u0995\u09c2\u0995\u09c3\u0995\u09c4\u0995\u09c7\u0995\u09c8\u0995\u09cb\u0995\u09cc\u0995\u09cd\u0995\u09d7\u09e6\u09e7\u09e8\u09e9\u09ea\u09eb\u09ec\u09ed\u09ee\u09ef\u09f2\u09f3\u09f4\u09f5\u09f6\u09f7\u09f8\u09f9\u09fa\u0a85\u0a86\u0a87\u0a88\u0a89\u0a8a\u0a8b\u0ae0\u0a8d\u0a8f\u0a90\u0a91\u0a93\u0a94\u0a95\u0a96\u0a97\u0a98\u0a99\u0a9a\u0a9b\u0a9c\u0a9d\u0a9e\u0a9f\u0aa0\u0aa1\u0aa2\u0aa3\u0aa4\u0aa5\u0aa6\u0aa7\u0aa8\u0aaa\u0aab\u0aac\u0aad\u0aae\u0aaf\u0ab0\u0ab2\u0ab3\u0ab5\u0ab6\u0ab7\u0ab8\u0ab9\u0a95\u0a81\u0a95\u0a82\u0a95\u0a83\u0a95\u0abc\u0a95\u0abd\u0a95\u0abe\u0a95\u0abf\u0a95\u0ac0\u0a95\u0ac1\u0a95\u0ac2\u0a95\u0ac3\u0a95\u0ac4\u0a95\u0ac5\u0a95\u0ac7\u0a95\u0ac8\u0a95\u0ac9\u0a95\u0acb\u0a95\u0acc\u0a95\u0acd\u0ad0\u0af1\u0ae6\u0ae7\u0ae8\u0ae9\u0aea\u0aeb\u0aec\u0aed\u0aee\u0aef\u0a05\u0a06\u0a07\u0a08\u0a09\u0a0a\u0a0f\u0a10\u0a13\u0a14\u0a15\u0a16\u0a17\u0a18\u0a19\u0a1a\u0a1b\u0a1c\u0a1d\u0a1e\u0a1f\u0a20\u0a21\u0a22\u0a23\u0a24\u0a25\u0a26\u0a27\u0a28\u0a2a\u0a2b\u0a2c\u0a2d\u0a2e\u0a2f\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59\u0a5a\u0a5b\u0a5c\u0a5e\u0a72\u0a73\u0a15\u0a02\u0a15\u0a3c\u0a15\u0a3e\u0a15\u0a3f\u0a15\u0a40\u0a15\u0a41\u0a15\u0a42\u0a15\u0a47\u0a15\u0a48\u0a15\u0a4b\u0a15\u0a4c\u0a15\u0a4d\u0a15\u0a70\u0a15\u0a71\u0a74\u262c\u0a66\u0a67\u0a68\u0a69\u0a6a\u0a6b\u0a6c\u0a6d\u0a6e\u0a6f\u06d2\u0627\u06cc\u0633\u0633\u06cc\u0622\u0626\u06cc\u0622\u0626\u06cc\u06a9\u0631\u06cc\u06a9\u0679\u0631\u0633\u06cc\u0679\u06d4\u0627\u06cc\u06a9\u0645\u0639\u06cc\u0627\u0631\u06cc\u06f7\u0628\u0679\u06a9\u0648\u0688\u062c\u0648\u062b\u0646\u0627\u0626\u06cc\u0645\u0642\u062f\u0627\u0631\u06cc\u06ba\u0627\u0633\u062a\u0639\u0645\u0627\u0644\u06a9\u0631\u062a\u06d2\u06c1\u0648\u0626\u06d2\u0622\u0633\u06a9\u06cc\u06a9\u06cc\u0646\u0645\u0627\u0626\u0646\u062f\u06af\u06cc\u06a9\u0631\u062a\u0627\u06c1\u06d2\u06d4\u06a9\u0648\u0688\u06a9\u06cc\u0648\u06cc\u0644\u06cc\u0648]+)$"}]};
ilib.data.address_NG={formats:{"default":"{streetAddress}\n{locality} {postalCode}\n{region}\n{country}",nocountry:"{streetAddress}\n{locality} {postalCode}\n{region}"},startAt:"end",fields:[{name:"region",line:"last",pattern:"Abia;Adamawa;Akwa;Anambra;Bauchi;Bayelsa;Benue;Borno;Cross River;Delta;Ebonyi;Edo;Ekiti;Enugu;Federal Capital Territory;Gombe;Imo;Jigawa;Kaduna;Kano;Katsina;Kebbi;Kogi;Kwara;Lagos;Nassarawa;Niger;Ogun;Ondo;Osun;Oyo;Plateau;Rivers;Sokoto;Taraba;Yobe;Zamfara".split(";")},{name:"postalCode",
line:"last",pattern:"([0-9]{6})$"},{name:"locality",line:"last",pattern:"([A-z\\.\\-']+)$"}]};
ilib.data.address_PH={formats:{"default":"{streetAddress}\n{postalCode} {locality} {region}\n{country}",nocountry:"{streetAddress}\n{postalCode} {locality} {region}"},startAt:"end",fields:[{name:"region",line:"last",pattern:"Abra;Agusan del Norte;Agusan del Sur;Aklan;Albay;Antique;Apayao;Aurora;Basilan;Bataan;Batanes;Batangas;Benguet;Biliran;Bohol;Bukidnon;Bulacan;Cagayan;Camarines Norte;Camarines Sur;Camiguin;Capiz;Catanduanes;Cavite;Cebu;Compostela Valley;Cotabato;Davao del Norte;Davao del Sur;Davao Oriental;Dinagat Islands;Eastern Samar;Guimaras;Ifugao;Ilocos Norte;Ilocos Sur;Iloilo;Isabela;Kalinga;La Union;Laguna;Lanao del Norte[20];Lanao del Sur;Leyte;Maguindanao[23];Marinduque;Masbate;Misamis Occidental;Misamis Oriental;Mountain Province;Negros Occidental;Negros Oriental;Northern Samar;Nueva Ecija;Nueva Vizcaya;Occidental Mindoro;Oriental Mindoro;Palawan;Pampanga;Pangasinan;Quezon;Quirino;Rizal;Romblon;Samar;Sarangani;Siquijor;Sorsogon;South Cotabato;Southern Leyte;Sultan Kudarat;Sulu;Surigao del Norte;Surigao del Sur;Tarlac;Tawi-Tawi;Zambales;Zamboanga del Norte;Zamboanga del Sur;Zamboanga Sibugay;Metro Manila".split(";")},{name:"locality",
line:"last",pattern:"(([A-z\u00c0\u00c1\u00c8\u00c9\u00cc\u00cd\u00d1\u00d2\u00d3\u00d9\u00da\u00dc\u00e0\u00e1\u00e8\u00e9\u00ec\u00ed\u00f1\u00f2\u00f3\u00f9\u00fa\u00fc\\-]+)? ?[A-z\u00c0\u00c1\u00c8\u00c9\u00cc\u00cd\u00d1\u00d2\u00d3\u00d9\u00da\u00dc\u00e0\u00e1\u00e8\u00e9\u00ec\u00ed\u00f1\u00f2\u00f3\u00f9\u00fa\u00fc\\-]+)$",matchGroup:1},{name:"postalCode",line:"last",pattern:"([0-9]{4})$"}]};
ilib.data.address_PK={formats:{"default":"{streetAddress}\n{locality} {postalCode} \n{country}",nocountry:"{streetAddress}\n{locality} {postalCode}"},startAt:"end",fields:[{name:"postalCode",line:"startAtLast",pattern:"[0-9]{5}"},{name:"locality",line:"last",pattern:"[A-z\\.\\-\\s' ']+"}]};
ilib.data.address_US={formats:{"default":"{streetAddress}\n{locality} {region} {postalCode}\n{country}",nocountry:"{streetAddress}\n{locality} {region} {postalCode}"},startAt:"end",fields:[{name:"postalCode",line:"startAtLast",pattern:"[0-9]{5}(-[0-9]{4})?",matchGroup:0},{name:"region",line:"last",pattern:"alabama;ala.;ala;al;alaska;alas.;alas;ak;american samoa;am. samoa;am samoa;as;arizona;ariz.;ariz;az;arkansas;ark.;ark;ar;california;cal.;cal;ca;colorado;col.;col;co;connecticut;conn.;conn;ct;delaware;del.;del;de;district of columbia;district columbia;d of columbia;dc;federated states of micronesia;fsm;micronesia;fm;florida;flor.;flor;flo.;flo;fl;georgia;ga;guam;gu;hawaii;hawai'i;haw.;haw;hi;idaho;id;illinois;ill.;ill;il;indiana;ind.;ind;in;iowa;ia;kansas;kan.;kan;ks;kentucky;kent.;ken.;ken;ky;louisiana;lou.;lou;la;maine;me;marshall islands;mar. islands;marshalls;mh;maryland;mar.;mar;md;massachusetts;mass.;mass;mas.;mas;ma;michigan;mich.;mich;mi;minnesota;minn.;minn;mn;mississippi;miss.;miss;mis.;mis;ms;missouri;mo;montana;mont.;mont;mon.;mon;mt;nebraska;neb.;neb;ne;nevada;nev.;nev;nv;new hampshire;nh;new jersey;nj;new mexico;nm;new york;ny;north carolina;n. carolina;n carolina;nc;north dakota;n. dakota;n dakota;nd;northern mariana islands;n. mariana islands;n mariana islands;marianas;nmi;mp;ohio;oh;oklahoma;okla.;okla;okl.;ok;oregon;ore.;or;palau;pw;pennsylvania;penn.;penn;pen.;pen;pa;puerto rico;pr;rhode island;ri;south carolina;s. carolina;s carolina;sc;south dakota;s. dakota;s dakota;sd;tennessee;tenn.;tenn;ten.;ten;tn;texas;tex.;tex;tx;utah;ut;vermont;ver.;ver;vt;us virgin islands;virgin islands;virgins;vi;virginia;virg.;virg;vir.;va;washington;wash;wa;west virginia;w. virginia;w virginia;w. virg.;w virg;wv;wisconsin;wisc.;wisc;wis.;wis;wi;wyoming;wyom.;wyom;wy;armed forces africa;af africa;ae;armed forces americas;af americas;aa;armed forces canada;af canada;ae;armed forces europe;af europe;ae;armed forces middle east;af middle east;ae;armed forces pacific;af pacific;ap".split(";")},
{name:"locality",line:"last",pattern:"([A-z\u00c0\u00c1\u00c8\u00c9\u00cc\u00cd\u00d1\u00d2\u00d3\u00d9\u00da\u00dc\u00e0\u00e1\u00e8\u00e9\u00ec\u00ed\u00f1\u00f2\u00f3\u00f9\u00fa\u00fc\\.\\-\\']+\\s*){1,2}$",matchGroup:0}]};
ilib.data.address_ZA={formats:{"default":"{streetAddress}\n{locality} {postalCode}\n{country}",nocountry:"{streetAddress}\n{locality} {postalCode}"},startAt:"end",fields:[{name:"postalCode",line:"last",pattern:"[0-9]{4}",matchGroup:0},{name:"locality",line:"last",pattern:"[A-za-z]+$",matchGroup:0}]};
ilib.data.address_DE={formats:{"default":"{streetAddress}\n{postalCode} {locality}\n{country}",nocountry:"{streetAddress}\n{postalCode} {locality}"},startAt:"end",fields:[{name:"locality",pattern:"([0-9]{5}\\s+)?([A-z\u00df\u00e4\u00f6\u00fc\u00c4\u00d6\u00dc\\.\\-'\\/ ]+)$",line:"startAtLast",matchGroup:2},{name:"postalCode",line:"startAtLast",pattern:"[0-9]{5}"}]};
ilib.data.address_FR={formats:{"default":"{streetAddress}\n{postalCode} {locality}\n{country}",nocountry:"{streetAddress}\n{postalCode} {locality}"},startAt:"end",fields:[{name:"locality",line:"last",pattern:"([A-z\u00c0\u00c1\u00c2\u00c4\u00c7\u00c8\u00c9\u00ca\u00cb\u00cc\u00cd\u00ce\u00cf\u00d2\u00d3\u00d4\u00d9\u00da\u00db\u00e0\u00e1\u00e2\u00e7\u00e8\u00e9\u00ea\u00eb\u00ec\u00ed\u00ee\u00ef\u00f2\u00f3\u00f4\u00f9\u00fa\u00fb\\.\\-' ]+)([Cc][Ee][Dd][Ee][Xx]\\s+[0-9]+)?$",matchGroup:1},{name:"postalCode",
line:"startAtLast",pattern:"([0-9]{5}(\\s+[Cc][Ee][Dd][Ee][Xx]\\s+[0-9]+)?)",matchGroup:0}]};
ilib.data.address_AR={formats:{"default":"{streetAddress}\n{postalCode} {locality}\n{country}",nocountry:"{streetAddress}\n{postalCode} {locality}"},startAt:"end",fields:[{name:"locality",line:"startAtLast",pattern:"(([A-z\u00c1\u00c9\u00cd\u00d3\u00da\u00e1\u00e9\u00ed\u00f3\u00fa\\.\\-']+\\s+)?[A-z\u00c1\u00c9\u00cd\u00d3\u00da\u00e1\u00e9\u00ed\u00f3\u00fa\\.\\-']+)$",matchGroup:1},{name:"postalCode",line:"last",pattern:"[A-Z][0-9]{4}[A-Z]{3}"}]};
ilib.data.address_ES={formats:{"default":"{streetAddress}\n{postalCode} - {locality} {region}\n{country}",nocountry:"{streetAddress}\n{postalCode} - {locality} {region}"},startAt:"end",fields:[{name:"region",line:"last",pattern:"andalusia;andaluc\u00eda;andalucia;aragon;arag\u00f3n;asturias principality of asturias;principado de asturias;princip\u00e1u d'asturies;principau d'asturies;asturias;asturies;balearic islands;islas baleares;baleares;illes balears;basque country;euskadi;pa\u00eds vasco;pais vasco;comunidad aut\u00f3noma vasca;comunidad autonoma vasca;euskal autonomi erkidegoa;canary islands;islas canarias;canarias;cantabria;castile-la mancha;castilla-la mancha;castilla la mancha;la mancha;castile and le\u00f3n;castile and leon;castilla y le\u00f3n;castilla y leon;catalonia;catalu\u00f1a;catalunya;extremadura;galicia;galiza;la rioja;rioja;community of madrid ;comunidad madrid;madrid;region of murcia;regi\u00f3n de murcia;region de murcia;murcia;foral community of navarre;comunidad foral de navarra;nafarroako foru komunitatea;navarre;navarra;nafarroako;valencian community;comunidad valenciana;comunitat valenciana;la coru\u00f1a;la coruna;a coru\u00f1a;a coruna;\u00e1lava;alava;araba;albacete;alicante;alacant;almer\u00eda;almeria;asturias;avila;badajoz;barcelona;biscay;bizkaia;vizcaya;burgos;c\u00e1ceres;caceres;c\u00e1diz;cadiz;cantabria;castell\u00f3n;castellon;castell\u00f3;castello;ciudad real;c\u00f3rdoba;cordoba;cuenca;gipuzkoa;guip\u00fazcoa;guipuzcoa;girona;gerona;granada;guadalajara;huelva;huesca;ja\u00e9n;jaen;las palmas;le\u00f3n;leon;lleida;l\u00e9rida;lerida;lugo;m\u00e1laga;malaga;murcia;navarre;nafarroa;navarra;ourense;orense;palencia;pontevedra;salamanca;santa cruz;sta. cruz;sta cruz;segovia;seville;sevilla;soria;tarragona;teruel;toledo;val\u00e8ncia;valencia;valladolid;zamora;zaragoza".split(";")},
{name:"locality",line:"last",pattern:"([0-9]{5}\\s*-?\\s+)?([A-z\u00c0\u00c1\u00c8\u00c9\u00cc\u00cd\u00d1\u00d2\u00d3\u00d9\u00da\u00dc\u00e0\u00e1\u00e8\u00e9\u00ec\u00ed\u00f1\u00f2\u00f3\u00f9\u00fa\u00fc][A-z\u00c0\u00c1\u00c8\u00c9\u00cc\u00cd\u00d1\u00d2\u00d3\u00d9\u00da\u00dc\u00e0\u00e1\u00e8\u00e9\u00ec\u00ed\u00f1\u00f2\u00f3\u00f9\u00fa\u00fc\\.\\-' ]*)$",matchGroup:2},{name:"postalCode",line:"startAtLast",pattern:"[0-9]{5}\\s*-?"}]};
ilib.data.address_MX={formats:{"default":"{streetAddress}\n{postalCode} {locality}, {region}\n{country}",nocountry:"{streetAddress}\n{postalCode} {locality}, {region}"},startAt:"end",fields:[{name:"region",line:"startAtLast",pattern:"aguascalientes;ags;morelos;mor;baja california;b. c.;b.c.;bc;nayarit;nay;baja california sur;b. c. s.;b.c.s.;bcs;nuevo le\u00f3n;nuevo leon;n. l.;n.l.;nl;campeche;cam;oaxaca;oax;coahuila;coah;puebla;pue;colima;col;quer\u00e9taro;queretaro;qro;chiapas;chis;quintana roo;q. roo;q roo;chihuahua;chih;san luis potos\u00ed;san luis potosi;s. l. p.;s.l.p.;slp;distrito federal;d. f.;d.f.;df;sinaloa;sin;durango;dgo;sonora;son;guanajuato;gto;tabasco;tab;guerrero;gro;tamaulipas;tamps;hidalgo;hgo;tlaxcala;tlax;jalisco;jal;veracruz;ver;mexico;mex;yucat\u00e1n;yucatan;yuc;michoac\u00e1n;michoacan;mich;zacatecas;zac".split(";")},
{name:"locality",line:"last",pattern:"(([Cc]\\.?[Pp]\\.?\\s+)?[0-9]{5}\\s+)?([A-z\u00c0\u00c1\u00c2\u00c4\u00c7\u00c8\u00c9\u00ca\u00cb\u00cc\u00cd\u00ce\u00cf\u00d2\u00d3\u00d4\u00d9\u00da\u00db\u00e0\u00e1\u00e2\u00e7\u00e8\u00e9\u00ea\u00eb\u00ec\u00ed\u00ee\u00ef\u00f2\u00f3\u00f4\u00f9\u00fa\u00fb\\.\\-' ]+)$",matchGroup:3},{name:"postalCode",line:"startAtLast",pattern:"(([Cc]\\.?[Pp]\\.?\\s+)?[0-9]{5})",matchGroup:0}]};
ilib.data.address_ID={formats:{"default":"{streetAddress}\n{locality} {postalCode}\n{region}\n{country}",nocountry:"{streetAddress}\n{locality} {postalCode}\n{region}"},startAt:"end",fields:[{name:"postalCode",line:"startAtLast",pattern:"[0-9]{5}"},{name:"region",line:"last",pattern:"Jakarta;North Sulawesi;Riau;Yogyakarta;East Kalimantan;Riau Islands;Central Kalimantan;North Sumatra;West Sumatra;Bangka Belitung;Bengkulu;South Sumatra;Jambi;Central Java;West Java;Bali;Nanggroe Aceh Darussalam;East Java;Maluku;Lampung;South Sulawesi;Central Sulawesi;Banten;Gorontalo;South East Sulawesi;South Kalimantan;West Sulawesi;North Maluku;West Kalimantan;West Papua;East Nusa Tenggara;West Nusa Tenggara;Papua".split(";")},
{name:"locality",line:"last",pattern:"(([A-Za-z]+)? [A-Za-z]+)$",matchGroup:1}]};
ilib.data.address_IT={formats:{"default":"{streetAddress}\n{postalCode} {locality} {region}\n{country}",nocountry:"{streetAddress}\n{postalCode} {locality} {region}"},startAt:"end",fields:[{name:"region",line:"startAtLast",pattern:"rm (rm) scv (scv) vt (vt) ri (ri) fr (fr) lt (lt) tr (tr) pg (pg) ss (ss) ot (ot) nu (nu) og (og) ca (ca) or (or) ci (ci) md (md) vs (vs) to (to) ao (ao) cn (cn) vc (vc) bi (bi) at (at) al (al) ge (ge) sv (sv) im (im) sp (sp) mi (mi) va (va) co (co) so (so) lc (lc) bg (bg) bs (bs) cr (cr) lo (lo) pv (pv) no (no) vb (vb) pc (pc) ve (ve) tv (tv) bl (bl) ud (ud) pn (pn) ts (ts) go (go) pd (pd) vi (vi) vr (vr) tn (tn) bz (bz) bo (bo) mo (mo) re (re) pr (pr) fe (fe) ro (ro) mn (mn) fc (fc) rn (rn) rsm (rsm) ra (ra) fi (fi) pt (pt) ar (ar) si (si) ms (ms) lu (lu) pi (pi) li (li) gr (gr) po (po) an (an) pu (pu) mc (mc) ap (ap) te (te) pe (pe) ch (ch) aq (aq) ba (ba) fg (fg) br (br) le (le) ta (ta) mt (mt) na (na) ce (ce) bn (bn) av (av) sa (sa) pz (pz) cb (cb) is (is) cs (cs) cz (cz) kr (kr) rc (rc) vv (vv) pa (pa) tp (tp) ag (ag) cl (cl) en (en) ct (ct) sr (sr) rg (rg) me (me)".split(" ")},{name:"locality",
line:"last",pattern:"((I-|IT-)?[0-9]{5}\\s+)?([A-z\u00c0\u00c1\u00c8\u00c9\u00cc\u00cd\u00d2\u00d3\u00d9\u00da\u00e0\u00e1\u00e8\u00e9\u00ec\u00ed\u00f2\u00f3\u00f9\u00fa\\.\\-' ]+)$",matchGroup:3},{name:"postalCode",line:"startAtLast",pattern:"(I-|IT-)?([0-9]{5})",matchGroup:0}]};
ilib.data.address_JP={multiformat:!0,formats:{"default":{latin:"{streetAddress}\n{locality}, {region} {postalCode}\n{country}",asian:"{country}{postalCode}\n{region}{locality}{streetAddress}"},asian:{asian:"{postalCode}\n{region}{locality}{streetAddress}",latin:"{streetAddress}\n{locality} {region} {postalCode}"}},startAt:{latin:"end",asian:"beginning"},fields:{latin:[{name:"postalCode",line:"startAtLast",pattern:"[0-9]{3}-[0-9]{4}$"},{name:"region",line:"last",pattern:"Hokkaido Aomori Iwate Miyagi Akita Yamagata Fukushima Ibaraki Tochigi Gunma Saitama Chiba T\u014dky\u014d Tokyo Kanagawa Niigata Toyama Ishikawa Fukui Yamanashi Nagano Gifu Shizuoka Aichi Toyama Ishikawa Fukui Yamanashi Nagano Gifu Shizuoka Mie Shiga Ky\u014dto \u014csaka Hy\u014dgo Nara Wakayama Tottori Shimane Okayama Hiroshima Yamaguchi Fukuoka Saga Nagasaki Kumamoto \u014cita Miyazaki Kagoshima Okinawa".split(" ")},
{name:"locality",line:"last",pattern:"[A-z\u00c0\u00c1\u00c8\u00c9\u00cc\u00cd\u00d2\u00d3\u00d9\u00da\u00e0\u00e1\u00e8\u00e9\u00ec\u00ed\u00f2\u00f3\u00f9\u00fa\u0100\u0101\u0102\u0103\u01cd\u01ce\u0112\u0113\u0114\u0115\u011a\u011b\u012a\u012b\u012c\u012d\u01cf\u01d0\u014c\u014d\u014e\u014f\u01d1\u01d2\u016a\u016b\u016c\u016d\u01d3\u01d4\\-']+$"}],asian:[{name:"postalCode",line:"startAtLast",pattern:"[\u3012]?[0-9]{3}-[0-9]{4}\\b"},{name:"region",line:"startAtFirst",pattern:"\\S*(\u770c|\u9053|\u5e9c|\u90fd)+",
matchGroup:0},{name:"locality",line:"startAtFirst",pattern:"\\S*(\u5e02|\u533a)+",matchGroup:0}]}};
ilib.data.address_KR={multiformat:!0,joinString:{latin:", ",asian:" "},formats:{"default":{latin:"{streetAddress}\n{locality} {region} {postalCode}\n{country}",asian:"{country}\n{postalCode} {region} {locality} {streetAddress}"},nocountry:{asian:"{postalCode} {region} {locality} {streetAddress}",latin:"{streetAddress}\n{locality} {region} {postalCode}"}},startAt:{latin:"end",asian:"beginning"},fields:{latin:[{name:"region",line:"last",pattern:"north chungcheong-do;n. chungcheong-do;n chungcheong-do;south chungcheong-do;s. chungcheong-do;s chungcheong-do;gangwon-do;gyeonggi-do;north gyeongsang-do;n. gyeongsang-do;n gyeongsang-do;south gyeongsang-do;s. gyeongsang-do;s gyeongsang-do;jeju-do;north jeolla-do;n. jeolla-do;n jeolla-do;south jeolla-do;s. jeolla-do;s jeolla-do;north chungcheong do;n. chungcheong do;n chungcheong do;south chungcheong do;s. chungcheong do;s chungcheong do;gangwon do;gyeonggi do;north gyeongsang do;n. gyeongsang do;n gyeongsang do;south gyeongsang do;s. gyeongsang do;s gyeongsang do;jeju do;north jeolla do;n. jeolla do;n jeolla do;south jeolla do;s. jeolla do;s jeolla do;north chungcheong;n. chungcheong;n chungcheong;south chungcheong;s. chungcheong;s chungcheong;gangwon;gyeonggi;north gyeongsang;n. gyeongsang;n gyeongsang;south gyeongsang;s. gyeongsang;s gyeongsang;jeju;north jeolla;n. jeolla;n jeolla;south jeolla;s. jeolla;s jeolla".split(";")},
{name:"postalCode",line:"startAtLast",pattern:"\\(?[0-9]{3}-[0-9]{3}\\)?$"},{name:"locality",line:"last",pattern:"([0-9]{3}-[0-9]{3})?\\s*([A-z\u00c0\u00c1\u00c8\u00c9\u00cc\u00cd\u00d2\u00d3\u00d9\u00da\u00e0\u00e1\u00e8\u00e9\u00ec\u00ed\u00f2\u00f3\u00f9\u00fa\u0100\u0101\u0102\u0103\u01cd\u01ce\u0112\u0113\u0114\u0115\u011a\u011b\u012a\u012b\u012c\u012d\u01cf\u01d0\u014c\u014d\u014e\u014f\u01d1\u01d2\u016a\u016b\u016c\u016d\u01d3\u01d4\\-']+)$",matchGroup:2}],asian:[{name:"postalCode",line:"startAtFirst",
pattern:"\\(?[0-9]{3}-[0-9]{3}\\)?"},{name:"region",line:"first",pattern:"[\\u1100-\\u11FF\\uAC00-\\uD7AF\\.\\-']+\ub3c4"},{name:"locality",line:"startAtFirst",pattern:"[\\u1100-\\u11FF\\uAC00-\\uD7AF\\.\\-']+"}]}};
ilib.data.address_BR={formats:{"default":"{streetAddress}\n{locality}-{region}\n{country}\n{postalCode}",nocountry:"{streetAddress}\n{locality}-{region}\n{postalCode}"},startAt:"end",fields:[{name:"postalCode",line:"startAtLast",pattern:"[0-9]{5}-[0-9]{3}"},{name:"country",line:"startAtLast",pattern:["Brazil","Brasil"]},{name:"region",line:"last",pattern:"Acre;AC;Alagoas;AL;Amap\u00e1;AP;Amazonas;AM;Bahia;BA;Cear\u00e1;CE;Goi\u00e1s;GO;Esp\u00edrito Santo;ES;Maranh\u00e3o;MA;Mato Grosso;MT;Mato Grosso do Sul;MS;Minas Gerais;MG;Par\u00e1;PA;Para\u00edba;PB;Paran\u00e1;PR;Pernambuco;PE;Piau\u00ed;PI;Rio de Janeiro;RJ;Rio Grande do Norte;RN;Rio Grande do Sul;RS;Rond\u00f4nia;RO;Rond\u00f4nia;RO;Roraima;RR;S\u00e3o Paulo;SP;Santa Catarina;SC;Sergipe;SE;Tocantins;TO".split(";")},
{name:"locality",line:"last",pattern:"(([A-za-z\u00c3\u00c9Z\u00c1\u00c7\u00caJX\u00cd\u00d3K\u00daWY\u00d5\u00c0\u00c2\u00d4\u00e3\u00e9z\u00e1\u00e7\u00eajx\u00ed\u00f3k\u00fawy\u00f5\u00e0\u00e2\u00f4.']+)? ?[A-za-z\u00c3\u00c9Z\u00c1\u00c7\u00caJX\u00cd\u00d3K\u00daWY\u00d5\u00c0\u00c2\u00d4\u00e3\u00e9z\u00e1\u00e7\u00eajx\u00ed\u00f3k\u00fawy\u00f5\u00e0\u00e2\u00f4.']+( -)?)$",matchGroup:1}]};
ilib.data.address_RU={formats:{"default":"{streetAddress}\n{locality}\n{region}\n{country}\n{postalCode}",nocountry:"{streetAddress}\n{locality}\n{region}\n{postalCode}"},startAt:"end",fields:[{name:"postalCode",line:"last",pattern:"([0-9]{6})$"},{name:"country",line:"last",pattern:["\u0420\u043e\u0441\u0441\u0438\u044f","\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0430\u044f \u0424\u0435\u0434\u0435\u0440\u0430\u0446\u0438\u044f"]},{name:"region",line:"last",pattern:"\u041c\u043e\u0441\u043a\u0432\u0430;\u0422\u044e\u043c\u0435\u043d\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u0425\u0430\u043d\u0442\u044b-\u041c\u0430\u043d\u0441\u0438\u0439\u0441\u043a\u0438\u0439 \u0430\u0432\u0442\u043e\u043d\u043e\u043c\u043d\u044b\u0439 \u043e\u043a\u0440\u0443\u0433;\u041c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433;\u0421\u0432\u0435\u0440\u0434\u043b\u043e\u0432\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u0422\u0430\u0442\u0430\u0440\u0441\u0442\u0430\u043d;\u041a\u0440\u0430\u0441\u043d\u043e\u0434\u0430\u0440\u0441\u043a\u0438\u0439 \u043a\u0440\u0430\u0439;\u0411\u0430\u0448\u043a\u043e\u0440\u0442\u043e\u0441\u0442\u0430\u043d;\u041a\u0440\u0430\u0441\u043d\u043e\u044f\u0440\u0441\u043a\u0438\u0439 \u043a\u0440\u0430\u0439;\u042f\u043c\u0430\u043b\u043e-\u041d\u0435\u043d\u0435\u0446\u043a\u0438\u0439 \u0430\u0432\u0442\u043e\u043d\u043e\u043c\u043d\u044b\u0439 \u043e\u043a\u0440\u0443\u0433;\u0421\u0430\u043c\u0430\u0440\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u0427\u0435\u043b\u044f\u0431\u0438\u043d\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u041f\u0435\u0440\u043c\u0441\u043a\u0438\u0439 \u043a\u0440\u0430\u0439;\u041d\u0438\u0436\u0435\u0433\u043e\u0440\u043e\u0434\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u0420\u043e\u0441\u0442\u043e\u0432\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u041a\u0435\u043c\u0435\u0440\u043e\u0432\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u041d\u043e\u0432\u043e\u0441\u0438\u0431\u0438\u0440\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u0418\u0440\u043a\u0443\u0442\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u0412\u043e\u043b\u0433\u043e\u0433\u0440\u0430\u0434\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u041e\u0440\u0435\u043d\u0431\u0443\u0440\u0433\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u041b\u0435\u043d\u0438\u043d\u0433\u0440\u0430\u0434\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u041e\u043c\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u0421\u0430\u0445\u0430\u043b\u0438\u043d\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u0421\u0430\u0440\u0430\u0442\u043e\u0432\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u041f\u0440\u0438\u043c\u043e\u0440\u0441\u043a\u0438\u0439 \u043a\u0440\u0430\u0439;\u0411\u0435\u043b\u0433\u043e\u0440\u043e\u0434\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u042f\u043a\u0443\u0442\u0438\u044f;\u0412\u043e\u043b\u043e\u0433\u043e\u0434\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u0410\u0440\u0445\u0430\u043d\u0433\u0435\u043b\u044c\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u0420\u0435\u0441\u043f\u0443\u0431\u043b\u0438\u043a\u0430 \u041a\u043e\u043c\u0438;\u0425\u0430\u0431\u0430\u0440\u043e\u0432\u0441\u043a\u0438\u0439 \u043a\u0440\u0430\u0439;\u0410\u043b\u0442\u0430\u0439\u0441\u043a\u0438\u0439 \u043a\u0440\u0430\u0439;\u0411\u0435\u043b\u0433\u043e\u0440\u043e\u0434\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u0412\u043e\u0440\u043e\u043d\u0435\u0436\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u0422\u043e\u043c\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u0421\u0442\u0430\u0432\u0440\u043e\u043f\u043e\u043b\u044c\u0441\u043a\u0438\u0439 \u043a\u0440\u0430\u0439;\u041b\u0438\u043f\u0435\u0446\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u0422\u0443\u043b\u044c\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u041c\u0443\u0440\u043c\u0430\u043d\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u0423\u0434\u043c\u0443\u0440\u0442\u0438\u044f;\u0414\u0430\u0433\u0435\u0441\u0442\u0430\u043d;\u0422\u0432\u0435\u0440\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u0423\u043b\u044c\u044f\u043d\u043e\u0432\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u041a\u0430\u043b\u0438\u043d\u0438\u043d\u0433\u0440\u0430\u0434\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u041a\u0443\u0440\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u0427\u0443\u0432\u0430\u0448\u0438\u044f;\u041a\u0430\u043b\u0443\u0436\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u0423\u043b\u044c\u044f\u043d\u043e\u0432\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u041a\u0438\u0440\u043e\u0432\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u0420\u044f\u0437\u0430\u043d\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u0410\u0441\u0442\u0440\u0430\u0445\u0430\u043d\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u041f\u0435\u043d\u0437\u0435\u043d\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u0417\u0430\u0431\u0430\u0439\u043a\u0430\u043b\u044c\u0441\u043a\u0438\u0439 \u043a\u0440\u0430\u0439;\u0410\u043c\u0443\u0440\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u0411\u0440\u044f\u043d\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u0411\u0443\u0440\u044f\u0442\u0438\u044f;\u0422\u0430\u043c\u0431\u043e\u0432\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u0421\u043c\u043e\u043b\u0435\u043d\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u041a\u0430\u0440\u0435\u043b\u0438\u044f;\u041d\u043e\u0432\u0433\u043e\u0440\u043e\u0434\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u041a\u0443\u0440\u0433\u0430\u043d\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u041e\u0440\u043b\u043e\u0432\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u041c\u043e\u0440\u0434\u043e\u0432\u0438\u044f;\u041d\u0435\u043d\u0435\u0446\u043a\u0438\u0439 \u0430\u0432\u0442\u043e\u043d\u043e\u043c\u043d\u044b\u0439 \u043e\u043a\u0440\u0443\u0433;\u0418\u0432\u0430\u043d\u043e\u0432\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u041a\u043e\u0441\u0442\u0440\u043e\u043c\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u041a\u0430\u043c\u0447\u0430\u0442\u0441\u043a\u0438\u0439 \u043a\u0440\u0430\u0439;\u0425\u0430\u043a\u0430\u0441\u0438\u044f;\u041f\u0441\u043a\u043e\u0432\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u041c\u0430\u0440\u0438\u0439 \u042d\u043b;\u0427\u0435\u0447\u043d\u044f;\u041a\u0430\u0431\u0430\u0440\u0434\u0438\u043d\u043e-\u0411\u0430\u043b\u043a\u0430\u0440\u0438\u044f;\u0421\u0435\u0432\u0435\u0440\u043d\u0430\u044f \u041e\u0441\u0435\u0442\u0438\u044f;\u041c\u0430\u0433\u0430\u0434\u0430\u043d\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u0410\u0434\u044b\u0433\u0435\u044f;\u041a\u0430\u0440\u0430\u0447\u0430\u0435\u0432\u043e-\u0427\u0435\u0440\u043a\u0435\u0441\u0438\u044f;\u0427\u0443\u043a\u043e\u0442\u0441\u043a\u0438\u0439 \u0430\u0432\u0442\u043e\u043d\u043e\u043c\u043d\u044b\u0439 \u043e\u043a\u0440\u0443\u0433;\u0415\u0432\u0440\u0435\u0439\u0441\u043a\u0430\u044f \u0430\u0432\u0442\u043e\u043d\u043e\u043c\u043d\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c;\u0422\u044b\u0432\u0430;\u041a\u0430\u043b\u043c\u044b\u043a\u0438\u044f;\u0418\u043d\u0433\u0443\u0448\u0435\u0442\u0438\u044f;\u0420\u0435\u0441\u043f\u0443\u0431\u043b\u0438\u043a\u0430 \u0410\u043b\u0442\u0430\u0439".split(";")},
{name:"locality",line:"startAtLast",pattern:"([A-z\u0410\u0430\u0411\u0431\u0412\u0432\u0413\u0433\u0414\u0434\u0415\u0435\u0401\u0451\u0416\u0436\u0417\u0437\u0418\u0438\u0419\u0439\u041a\u043a\u041b\u043b\u041c\u043c\u041d\u043d\u041e\u043e\u041f\u043f\u0420\u0440\u0421\u0441\u0422\u0442\u0423\u0443\u0424\u0444\u0425\u0445\u0426\u0446\u0427\u0447\u0428\u0448\u0429\u0449\u042a\u044a\u042b\u044b\u042c\u044c\u042d\u044d\u042e\u044e\u042f\u044f]+( [A-z\u0410\u0430\u0411\u0431\u0412\u0432\u0413\u0433\u0414\u0434\u0415\u0435\u0401\u0451\u0416\u0436\u0417\u0437\u0418\u0438\u0419\u0439\u041a\u043a\u041b\u043b\u041c\u043c\u041d\u043d\u041e\u043e\u041f\u043f\u0420\u0440\u0421\u0441\u0422\u0442\u0423\u0443\u0424\u0444\u0425\u0445\u0426\u0446\u0427\u0447\u0428\u0448\u0429\u0449\u042a\u044a\u042b\u044b\u042c\u044c\u042d\u044d\u042e\u044e\u042f\u044f\\-]+)?)$"}]};
ilib.data.address_TR={formats:{"default":"{streetAddress}\n{locality} {region} {postalCode}\n{country}",nocountry:"{streetAddress}\n{locality} {region} {postalCode}"},startAt:"end",fields:[{name:"postalCode",line:"startAtLast",pattern:"([0-9]{5})$",matchGroup:0},{name:"region",line:"last",pattern:"Adana Adiyaman Afyonkarahisar Agri Aksaray Amasya Ankara Antalya Ardahan Artvin Aydin Balikesir Bartin Batman Bayburt Bilecik Bing\u00f6l Bitlis Bolu Burdur Bursa \u00c7anakkale \u00c7ankiri \u00c7orum Denizli Diyarbakir D\u00fczce Edirne Elazig Erzincan Erzurum Eskisehir Gaziantep Giresun G\u00fcm\u00fcshane Hakkari Hatay Igdir Isparta Istanbul Izmir Kahramanmaras Karab\u00fck Karaman Kars Kastamonu Kayseri Kilis Kirikkale Kirklareli Kirsehir Kocaeli Konya K\u00fctahya Malatya Manisa Mardin Mersin Mugla Mus Nevsehir Nigde Ordu Osmaniye Rize Sakarya Samsun Sanliurfa Siirt Sinop Sirnak Sivas Tekirdag Tokat Trabzon Tunceli Usak Van Yalova Yozgat Zonguldak".split(" ")},
{name:"locality",line:"last",pattern:"(([ABC\u00c7DEFG\u011eHI\u0130JKLMNO\u00d6PRS\u015eTU\u00dcVYZabc\u00e7defg\u011fh\u0131ijklmno\u00f6prs\u015ftu\u00fcvyz-]+)?[ABC\u00c7DEFG\u011eHI\u0130JKLMNO\u00d6PRS\u015eTU\u00dcVYZabc\u00e7defg\u011fh\u0131ijklmno\u00f6prs\u015ftu\u00fcvyz-]+)$",matchGroup:0}]};
ilib.data.address_VN={formats:{"default":"{streetAddress}, {locality}, {region}, {postalCode}\n{country}",nocountry:"{streetAddress}, {locality}, {region}, {postalCode}"},startAt:"end",fields:[{name:"postalCode",line:"last",pattern:"([0-9]{6})$"},{name:"region",line:"last",pattern:"An Giang;B\u1eafc Giang;B\u1eafc K\u1ea1n;B\u1ea1c Li\u00eau;B\u1eafc Ninh;B\u00e0 R\u1ecba\u2013V\u0169ng T\u00e0u;B\u1ebfn Tre;B\u00ecnh \u0110\u1ecbnh;B\u00ecnh D\u01b0\u01a1ng;B\u00ecnh Ph\u01b0\u1edbc;B\u00ecnh Thu\u1eadn;C\u00e0 Mau;C\u1ea7n Th\u01a1 ;Cao B\u1eb1ng;Da Nang ;\u0110\u1eafk L\u1eafk;\u0110\u1eafk N\u00f4ng;\u0110i\u1ec7n Bi\u00ean;\u0110\u1ed3ng Nai;\u0110\u1ed3ng Th\u00e1p;Gia Lai;H\u00e0 Giang;H\u00e0 Nam;H\u00e0 T\u0129nh;H\u1ea3i D\u01b0\u01a1ng;Hai Phong;Hanoi;H\u1eadu Giang;H\u00f2a B\u00ecnh;Ho Chi Minh City;H\u01b0ng Y\u00ean;Kh\u00e1nh H\u00f2a;Ki\u00ean Giang;Kon Tum;Lai Ch\u00e2u;L\u00e2m \u0110\u1ed3ng;L\u1ea1ng S\u01a1n;L\u00e0o Cai;Long An;Nam \u0110\u1ecbnh;Ngh\u1ec7 An;Ninh B\u00ecnh;Ninh Thu\u1eadn;Ph\u00fa Th\u1ecd;Ph\u00fa Y\u00ean;Qu\u1ea3ng B\u00ecnh;Qu\u1ea3ng Nam;Qu\u1ea3ng Ng\u00e3i;Qu\u1ea3ng Ninh;Qu\u1ea3ng Tr\u1ecb;S\u00f3c Tr\u0103ng;S\u01a1n La;T\u00e2y Ninh;Th\u00e1i B\u00ecnh;Th\u00e1i Nguy\u00ean;Thanh H\u00f3a;Th\u1eeba Thi\u00ean\u2013Hu\u1ebf;Ti\u1ec1n Giang;Tr\u00e0 Vinh;Tuy\u00ean Quang;V\u0129nh Long;V\u0129nh Ph\u00fac;Y\u00ean B\u00e1i".split(";")},
{name:"locality",line:"last",pattern:"(([0-9Aa\u0102\u0103\u1ead\u00c2\u00e2BbCcDd\u0110\u0111Ee\u00ca\u00eaGgHhIiKkLlMmNnOo\u00d4\u00f4\u01a0\u01a1PpQqRrSsTtUu\u01af\u01b0VvXxYy\\.\\-']+)? ? ([0-9Aa\u0102\u0103\u00c2\u00e2BbCcDd\u0110\u0111Ee\u00ca\u00eaGgHhIiKkLlMmNnOo\u00d4\u00f4\u01a0\u01a1PpQqRrSsTtUu\u01af\u01b0VvXxYy\\.\\-']+)? ?[0-9Aa\u0102\u0103\u00c2\u00e2BbCcDd\u0110\u0111Ee\u00ca\u00eaGgHhIiKkLlMmNnOo\u00d4\u00f4\u01a0\u01a1PpQqRrSsTtUu\u01af\u01b0VvXxYy\\.\\-']+)$"}]};
ilib.data.address_XX={formats:{"default":"{streetAddress}\n{locality} {region} {postalCode}\n{country}",nocountry:"{streetAddress}\n{locality} {region} {postalCode}"},startAt:"end",fields:[{name:"postalCode",line:"startAtLast",pattern:"[0-9]+$"},{name:"locality",line:"last",pattern:"[\\w\u00c0\u00c1\u00c2\u00c4\u00c7\u00c8\u00c9\u00ca\u00cb\u00cc\u00cd\u00ce\u00cf\u00d2\u00d3\u00d4\u00d9\u00da\u00db\u00e0\u00e1\u00e2\u00e7\u00e8\u00e9\u00ea\u00eb\u00ec\u00ed\u00ee\u00ef\u00f2\u00f3\u00f4\u00f9\u00fa\u00fb\\.\\-']+$"}]};
ilib.data.address_CN={multiformat:!0,formats:{"default":{latin:"{streetAddress}\n{locality}, {region} {postalCode}\n{country}",asian:"{country}{postalCode}\n{region}{locality}{streetAddress}"},asian:{asian:"{postalCode}\n{region}{locality}{streetAddress}",latin:"{streetAddress}\n{locality} {region} {postalCode}"}},startAt:{latin:"end",asian:"beginning"},fields:{latin:[{name:"postalCode",line:"startAtLast",pattern:"[0-9]{6}$"},{name:"region",line:"last",pattern:"heilongjiang;h\u0113il\u00f3ngji\u0101ng;heilungkiang;jilin;j\u00edl\u00edn;kirin;liaoning;li\u00e1on\u00edng;fengtien;qinghai;q\u012bngh\u01cei;tsinghai;gansu;g\u0101ns\u00f9;kansu;shaanxi;sh\u01cenx\u012b;shensi;shanxi;sh\u0101nx\u012b;shansi;hebei;h\u00e9b\u011bi;hopeh;sichuan;s\u00ecchu\u0101n;szechuan;hubei;h\u00fab\u011bi;hupeh;hena;h\u00e9n\u00e1n;honan;shandong;sh\u0101nd\u014dng;shantung;anhui;\u0100nhu\u012b;anhwei;jiangsu;ji\u0101ngs\u016b;kiangsu;yunnan;y\u00fann\u00e1n;yunnan;guizhou;g\u00f9izh\u014du;kweichow;hunan;h\u00fan\u00e1n;hunan;jiangxi;ji\u0101ngx\u012b;kiangsi;zhejiang;zh\u00e8ji\u0101ng;chekiang;hainan;h\u01cein\u00e1n;hainan;guangdong;gu\u01cengd\u014dng;kwangtung;fujian;f\u00faji\u00e0n;fukien;taiwan;t\u00e1iw\u0101n;taiwan;x\u012bnji\u0101ng w\u00e9iw\u00fa'\u011br z\u00eczh\u00ecq\u016b;xinjiang weiwuer zizhiqu;x\u012bnji\u0101ng w\u00e9iw\u00fa'\u011br;xinjiang weiwuer;n\u00e8im\u011bngg\u01d4 z\u00eczh\u00ecq\u016b;neimenggu zizhiqu;n\u00e8im\u011bngg\u01d4;neimenggu;x\u012bz\u00e0ng z\u00eczh\u00ecq\u016b;xizang zizhiqu;x\u012bz\u00e0ng;xizang;n\u00edngxi\u00e0 hu\u00edz\u00fa z\u00eczh\u00ecq\u016b;ningxia huizu zizhiqu;n\u00edngxi\u00e0 hu\u00edz\u00fa;ningxia hui;gu\u01cengx\u012b zhu\u00e0ngz\u00fa z\u00eczh\u00ecq\u016b;guangxi zhuang zizhiqu;gu\u01cengx\u012b zhu\u00e0ngz\u00fa;guangxi zhuang;hong kong;xi\u0101ngg\u01ceng;xianggang;hongkong;macau;\u00e0om\u00e9n;aomen".split(";")},
{name:"locality",line:"last",pattern:"[A-z\u00c0\u00c1\u00c8\u00c9\u00cc\u00cd\u00d2\u00d3\u00d9\u00da\u00e0\u00e1\u00e8\u00e9\u00ec\u00ed\u00f2\u00f3\u00f9\u00fa\u0100\u0101\u0102\u0103\u01cd\u01ce\u0112\u0113\u0114\u0115\u011a\u011b\u012a\u012b\u012c\u012d\u01cf\u01d0\u014c\u014d\u014e\u014f\u01d1\u01d2\u016a\u016b\u016c\u016d\u01d3\u01d4\\-']+$"}],asian:[{name:"postalCode",line:"startAtLast",pattern:"[0-9]{6}$"},{name:"region",line:"startAtFirst",pattern:"\u5317\u4eac\u5e02 \u5317\u4eac \u5929\u6d25\u5e02 \u5929\u6d25 \u6cb3\u5317\u7701 \u6cb3\u5317 \u5c71\u897f\u7701 \u5c71\u897f \u5167\u8499\u53e4\u81ea\u6cbb\u533a \u5167\u8499\u53e4\u81ea\u6cbb \u8fbd\u5b81\u7701 \u8fbd\u5b81 \u5409\u6797\u7701 \u5409\u6797 \u9ed1\u9f99\u6c5f\u7701 \u9ed1\u9f99\u6c5f \u4e0a\u6d77\u5e02 \u4e0a\u6d77 \u6c5f\u82cf\u7701 \u6c5f\u82cf \u6d59\u6c5f\u7701 \u6d59\u6c5f \u5b89\u5fbd\u7701 \u5b89\u5fbd \u798f\u5efa\u7701 \u798f\u5efa \u6c5f\u897f\u7701 \u6c5f\u897f \u5c71\u4e1c\u7701 \u5c71\u4e1c \u6cb3\u5357\u7701 \u6cb3\u5357 \u6e56\u5317\u7701 \u6e56\u5317 \u6e56\u5357\u7701 \u6e56\u5357 \u5e7f\u4e1c\u7701 \u5e7f\u4e1c \u5e7f\u897f\u58ee\u65cf\u81ea\u6cbb\u533a \u5e7f\u897f\u58ee\u65cf\u81ea\u6cbb \u6d77\u5357\u7701 \u6d77\u5357 \u91cd\u5e86\u5e02 \u91cd\u5e86 \u56db\u5ddd\u7701 \u56db\u5ddd \u8d35\u5dde\u7701 \u8d35\u5dde \u4e91\u5357\u7701 \u4e91\u5357 \u897f\u85cf\u81ea\u6cbb\u533a \u897f\u85cf\u81ea\u6cbb \u9655\u897f\u7701 \u9655\u897f \u7518\u8083\u7701 \u7518\u8083 \u9752\u6d77\u7701 \u9752\u6d77 \u5b81\u590f\u56de\u65cf\u81ea\u6cbb\u533a \u5b81\u590f\u56de\u65cf\u81ea\u6cbb \u65b0\u7586\u7ef4\u543e\u5c14\u81ea\u6cbb\u533a \u65b0\u7586\u7ef4\u543e\u5c14\u81ea\u6cbb \u9999\u6e2f\u7279\u522b\u884c\u653f\u533a \u9999\u6e2f\u7279\u522b\u884c\u653f \u6fb3\u95e8\u7279\u522b\u884c\u653f\u533a \u6fb3\u95e8\u7279\u522b\u884c\u653f \u53f0\u6e7e\u7701 \u53f0\u6e7e".split(" "),
matchGroup:0},{name:"locality",line:"startAtFirst",pattern:"\\S*(((\u5e02|\u533a)+)|\u5317\u4eac|\u91cd\u5e86|\u4e0a\u6d77|\u5929\u6d25|\u9999\u6e2f\u7279\u522b\u884c\u653f|\u6fb3\u95e8\u7279\u522b\u884c\u653f|\u5b89\u5e86|\u868c\u57e0|\u4eb3\u5dde|\u5de2\u6e56|\u6c60\u5dde|\u6ec1\u5dde|\u961c\u9633|\u5408\u80a5|\u6dee\u5317|\u6dee\u5357|\u9ec4\u5c71|\u754c\u9996|\u516d\u5b89|\u9a6c\u978d\u5c71|\u660e\u5149|\u5b81\u56fd|\u5bbf\u5dde|\u5929\u957f|\u6850\u57ce|\u94dc\u9675|\u829c\u6e56|\u5ba3\u57ce|\u957f\u4e50|\u798f\u5b89|\u798f\u9f0e|\u798f\u6e05|\u798f\u5dde|\u5efa\u74ef|\u664b\u6c5f|\u9f99\u6d77|\u9f99\u5ca9|\u5357\u5b89|\u5357\u5e73|\u5b81\u5fb7|\u8386\u7530|\u6cc9\u5dde|\u4e09\u660e|\u90b5\u6b66|\u77f3\u72ee|\u6b66\u5937\u5c71|\u53a6\u95e8|\u6c38\u5b89|\u6f33\u5dde|\u6f33\u5e73|\u767d\u94f6|\u5b9a\u897f|\u6566\u714c|\u5408\u4f5c|\u5609\u5cea\u5173|\u91d1\u660c|\u9152\u6cc9|\u5170\u5dde|\u4e34\u590f|\u9647\u5357|\u5e73\u51c9|\u5e86\u9633|\u5929\u6c34|\u6b66\u5a01|\u7389\u95e8|\u5f20\u6396|\u6f6e\u5dde|\u4e1c\u839e|\u6069\u5e73|\u4f5b\u5c71|\u9ad8\u8981|\u9ad8\u5dde|\u5e7f\u5dde|\u9e64\u5c71|\u6cb3\u6e90|\u5316\u5dde|\u60e0\u5dde|\u6c5f\u95e8|\u63ed\u9633|\u5f00\u5e73|\u4e50\u660c|\u96f7\u5dde|\u5ec9\u6c5f|\u8fde\u5dde|\u9646\u4e30|\u7f57\u5b9a|\u8302\u540d|\u6885\u5dde|\u5357\u96c4|\u666e\u5b81|\u6e05\u8fdc|\u6c55\u5934|\u6c55\u5c3e|\u97f6\u5173|\u6df1\u5733|\u56db\u4f1a|\u53f0\u5c71|\u5434\u5ddd|\u5174\u5b81|\u4fe1\u5b9c|\u9633\u6625|\u9633\u6c5f|\u82f1\u5fb7|\u4e91\u6d6e|\u6e5b\u6c5f|\u8087\u5e86|\u4e2d\u5c71|\u73e0\u6d77|\u767e\u8272|\u5317\u6d77|\u5317\u6d41|\u5c91\u6eaa|\u5d07\u5de6|\u4e1c\u5174|\u9632\u57ce\u6e2f|\u8d35\u6e2f|\u6842\u6797|\u6842\u5e73|\u6cb3\u6c60|\u5408\u5c71|\u8d3a\u5dde|\u6765\u5bbe|\u67f3\u5dde|\u5357\u5b81|\u51ed\u7965|\u94a6\u5dde|\u68a7\u5dde|\u7389\u6797|\u5b9c\u5dde|\u5b89\u987a|\u6bd5\u8282|\u8d64\u6c34|\u90fd\u5300|\u798f\u6cc9|\u8d35\u9633|\u51ef\u91cc|\u516d\u76d8\u6c34|\u6e05\u9547|\u4ec1\u6000|\u94dc\u4ec1|\u5174\u4e49|\u9075\u4e49|\u510b\u5dde|\u4e1c\u65b9|\u6d77\u53e3|\u743c\u6d77|\u4e09\u6c99|\u4e09\u4e9a|\u4e07\u5b81|\u6587\u660c|\u4e94\u6307\u5c71|\u5b89\u56fd|\u4fdd\u5b9a|\u9738\u5dde|\u6cca\u5934|\u6ca7\u5dde|\u627f\u5fb7|\u5b9a\u5dde|\u9ad8\u7891\u5e97|\u85c1\u57ce|\u90af\u90f8|\u8861\u6c34|\u6cb3\u95f4|\u9ec4\u9a85|\u664b\u5dde|\u5180\u5dde|\u5eca\u574a|\u9e7f\u6cc9|\u5357\u5bab|\u8fc1\u5b89|\u79e6\u7687\u5c9b|\u4efb\u4e18|\u6c99\u6cb3|\u4e09\u6cb3|\u6df1\u5dde|\u77f3\u5bb6\u5e84|\u5510\u5c71|\u8f9b\u96c6|\u6b66\u5b89|\u90a2\u53f0|\u65b0\u4e50|\u5f20\u5bb6\u53e3|\u6dbf\u5dde|\u9075\u5316|\u5b89\u8fbe|\u5317\u5b89|\u5927\u5e86|\u5bcc\u9526|\u6d77\u6797|\u6d77\u4f26|\u54c8\u5c14\u6ee8|\u9e64\u5c97|\u9ed1\u6cb3|\u864e\u6797|\u4f73\u6728\u65af|\u9e21\u897f|\u5bc6\u5c71|\u7261\u4e39\u6c5f|\u7a46\u68f1|\u8bb7\u6cb3|\u5b81\u5b89|\u9f50\u9f50\u54c8\u5c14|\u4e03\u53f0\u6cb3|\u5c1a\u5fd7|\u53cc\u9e2d\u5c71|\u7ee5\u82ac\u6cb3|\u7ee5\u5316|\u94c1\u529b|\u540c\u6c5f|\u4e94\u5e38|\u4e94\u5927\u8fde\u6c60|\u4f0a\u6625|\u8087\u4e1c|\u5b89\u9633|\u957f\u845b|\u767b\u5c01|\u9093\u5dde|\u5de9\u4e49|\u9e64\u58c1|\u8f89\u53bf|\u7126\u4f5c|\u6d4e\u6e90|\u5f00\u5c01|\u7075\u5b9d|\u6797\u5dde|\u6f2f\u6cb3|\u6d1b\u9633|\u5b5f\u5dde|\u5357\u9633|\u5e73\u9876\u5c71|\u6fee\u9633|\u6c81\u9633|\u6c5d\u5dde|\u4e09\u95e8\u5ce1|\u5546\u4e18|\u536b\u8f89|\u821e\u94a2|\u9879\u57ce|\u8365\u9633|\u65b0\u5bc6|\u65b0\u4e61|\u4fe1\u9633|\u65b0\u90d1|\u8bb8\u660c|\u5043\u5e08|\u4e49\u9a6c|\u6c38\u57ce|\u79b9\u5dde|\u90d1\u5dde|\u5468\u53e3|\u9a7b\u9a6c\u5e97|\u5b89\u9646|\u8d64\u58c1|\u5f53\u9633|\u4e39\u6c5f\u53e3|\u5927\u51b6|\u6069\u65bd|\u9102\u5dde|\u5e7f\u6c34|\u6c49\u5ddd|\u6d2a\u6e56|\u9ec4\u5188|\u9ec4\u77f3|\u8346\u95e8|\u8346\u5dde|\u8001\u6cb3\u53e3|\u5229\u5ddd|\u9ebb\u57ce|\u6f5c\u6c5f|\u795e\u519c\u67b6\u6797|\u77f3\u9996|\u5341\u5830|\u968f\u5dde|\u677e\u6ecb|\u5929\u95e8|\u6b66\u6c49|\u6b66\u7a74|\u8944\u9633|\u54b8\u5b81|\u4ed9\u6843|\u5b5d\u611f|\u5b9c\u660c|\u5b9c\u57ce|\u5b9c\u90fd|\u5e94\u57ce|\u67a3\u9633|\u679d\u6c5f|\u949f\u7965|\u5e38\u5fb7|\u5e38\u5b81|\u957f\u6c99|\u90f4\u5dde|\u8861\u9633|\u6d2a\u6c5f|\u6000\u5316|\u6d25\u5e02|\u5409\u9996|\u8012\u9633|\u51b7\u6c34\u6c5f|\u6d9f\u6e90|\u91b4\u9675|\u4e34\u6e58|\u6d4f\u9633|\u5a04\u5e95|\u6c68\u7f57|\u97f6\u5c71|\u90b5\u9633|\u6b66\u5188|\u6e58\u6f6d|\u6e58\u4e61|\u76ca\u9633|\u6c38\u5dde|\u6c85\u6c5f|\u5cb3\u9633|\u5f20\u5bb6\u754c|\u682a\u6d32|\u8d44\u5174|\u963f\u5c14\u5c71|\u5305\u5934|\u5df4\u5f66\u6dd6\u5c14|\u8d64\u5cf0|\u4e8c\u8fde\u6d69\u7279|\u4e30\u9547|\u989d\u5c14\u53e4\u7eb3|\u6839\u6cb3|\u547c\u548c\u6d69\u7279|\u970d\u6797\u90ed\u52d2|\u547c\u4f26\u8d1d\u5c14|\u6ee1\u6d32\u91cc|\u9102\u5c14\u591a\u65af|\u901a\u8fbd|\u4e4c\u5170\u6d69\u7279|\u4e4c\u5170\u5bdf\u5e03|\u4e4c\u6d77|\u9521\u6797\u6d69\u7279|\u7259\u514b\u77f3|\u624e\u5170\u5c6f|\u5e38\u719f|\u5e38\u5dde|\u5927\u4e30|\u4e39\u9633|\u4e1c\u53f0|\u9ad8\u90ae|\u6d77\u95e8|\u6dee\u5b89|\u6c5f\u9634|\u9756\u6c5f|\u91d1\u575b|\u53e5\u5bb9|\u6ea7\u9633|\u8fde\u4e91\u6e2f|\u6606\u5c71|\u5357\u4eac|\u5357\u901a|\u90b3\u5dde|\u542f\u4e1c|\u5982\u768b|\u5bbf\u8fc1|\u82cf\u5dde|\u592a\u4ed3|\u6cf0\u5dde|\u6cf0\u5174|\u65e0\u9521|\u65b0\u6c82|\u5174\u5316|\u5f90\u5dde|\u76d0\u57ce|\u626c\u4e2d|\u626c\u5dde|\u5b9c\u5174|\u4eea\u5f81|\u5f20\u5bb6\u6e2f|\u9547\u6c5f|\u5fb7\u5174|\u4e30\u57ce|\u629a\u5dde|\u8d63\u5dde|\u9ad8\u5b89|\u8d35\u6eaa|\u5409\u5b89|\u666f\u5fb7\u9547|\u4e95\u5188\u5c71|\u4e5d\u6c5f|\u4e50\u5e73|\u5357\u660c|\u840d\u4e61|\u745e\u660c|\u745e\u91d1|\u4e0a\u9976|\u65b0\u4f59|\u9e70\u6f6d|\u5b9c\u6625|\u6a1f\u6811|\u767d\u57ce|\u767d\u5c71|\u957f\u6625|\u5927\u5b89|\u5fb7\u60e0|\u6566\u5316|\u6276\u4f59|\u516c\u4e3b\u5cad|\u548c\u9f99|\u6866\u7538|\u73f2\u6625|\u96c6\u5b89|\u86df\u6cb3|\u5409\u6797|\u8fbd\u6e90|\u4e34\u6c5f|\u9f99\u4e95|\u6885\u6cb3\u53e3|\u78d0\u77f3|\u53cc\u8fbd|\u8212\u5170|\u56db\u5e73|\u677e\u539f|\u6d2e\u5357|\u901a\u5316|\u56fe\u4eec|\u5ef6\u5409|\u6986\u6811|\u978d\u5c71|\u672c\u6eaa|\u5317\u7968|\u5317\u9547|\u671d\u9633|\u5927\u8fde|\u4e39\u4e1c|\u5927\u77f3\u6865|\u706f\u5854|\u8c03\u5175\u5c71|\u4e1c\u6e2f|\u51e4\u57ce|\u629a\u987a|\u961c\u65b0|\u76d6\u5dde|\u6d77\u57ce|\u846b\u82a6\u5c9b|\u9526\u5dde|\u5f00\u539f|\u8fbd\u9633|\u51cc\u6d77|\u51cc\u6e90|\u76d8\u9526|\u666e\u5170\u5e97|\u6c88\u9633|\u94c1\u5cad|\u74e6\u623f\u5e97|\u5174\u57ce|\u65b0\u6c11|\u8425\u53e3|\u5e84\u6cb3|\u56fa\u539f|\u7075\u6b66|\u9752\u94dc\u5ce1|\u77f3\u5634\u5c71|\u5434\u5fe0|\u94f6\u5ddd|\u4e2d\u536b|\u5fb7\u4ee4\u54c8|\u683c\u5c14\u6728|\u6d77\u4e1c|\u897f\u5b81|\u7389\u6811|\u5b89\u5eb7|\u5b9d\u9e21|\u97e9\u57ce|\u6c49\u4e2d|\u534e\u9634|\u5546\u6d1b|\u94dc\u5ddd|\u897f\u5b89|\u54b8\u9633|\u5174\u5e73|\u6e2d\u5357|\u5ef6\u5b89|\u6986\u6797|\u5b89\u4e18|\u6ee8\u5dde|\u660c\u9091|\u5fb7\u5dde|\u4e1c\u8425|\u80a5\u57ce|\u9ad8\u5bc6|\u6d77\u9633|\u83cf\u6cfd|\u80f6\u5dde|\u6d4e\u5357|\u6d4e\u5b81|\u5373\u58a8|\u83b1\u829c|\u83b1\u897f|\u83b1\u9633|\u83b1\u5dde|\u4e50\u9675|\u804a\u57ce|\u4e34\u6e05|\u4e34\u6c82|\u9f99\u53e3|\u84ec\u83b1|\u5e73\u5ea6|\u9752\u5c9b|\u9752\u5dde|\u6816\u971e|\u66f2\u961c|\u8363\u6210|\u65e5\u7167|\u4e73\u5c71|\u5bff\u5149|\u6cf0\u5b89|\u6ed5\u5dde|\u6f4d\u574a|\u5a01\u6d77|\u65b0\u6cf0|\u70df\u53f0|\u79b9\u57ce|\u67a3\u5e84|\u62db\u8fdc|\u8bf8\u57ce|\u90b9\u57ce|\u7ae0\u4e18|\u6dc4\u535a|\u957f\u6cbb|\u5927\u540c|\u6c7e\u9633|\u9ad8\u5e73|\u53e4\u4ea4|\u6cb3\u6d25|\u4faf\u9a6c|\u970d\u5dde|\u4ecb\u4f11|\u664b\u57ce|\u664b\u4e2d|\u4e34\u6c7e|\u6f5e\u57ce|\u5415\u6881|\u6714\u5dde|\u592a\u539f|\u5b5d\u4e49|\u5ffb\u5dde|\u9633\u6cc9|\u6c38\u6d4e|\u8fd0\u57ce|\u539f\u5e73|\u5df4\u4e2d|\u6210\u90fd|\u5d07\u5dde|\u8fbe\u5dde|\u5fb7\u9633|\u90fd\u6c5f\u5830|\u5ce8\u7709\u5c71|\u5e7f\u5b89|\u5e7f\u6c49|\u5e7f\u5143|\u534e\u84e5|\u6c5f\u6cb9|\u7b80\u9633|\u9606\u4e2d|\u4e50\u5c71|\u6cf8\u5dde|\u7ef5\u7af9|\u7709\u5c71|\u7ef5\u9633|\u5185\u6c5f|\u5357\u5145|\u6500\u679d\u82b1|\u5f6d\u5dde|\u909b\u5d03|\u4ec0\u90a1|\u9042\u5b81|\u4e07\u6e90|\u897f\u660c|\u96c5\u5b89|\u5b9c\u5bbe|\u81ea\u8d21|\u8d44\u9633|\u62c9\u8428|\u65e5\u5580\u5219|\u660c\u90fd|\u963f\u514b\u82cf|\u963f\u62c9\u5c71\u53e3|\u963f\u52d2\u6cf0|\u963f\u62c9\u5c14|\u963f\u56fe\u4ec0|\u5317\u5c6f|\u535a\u4e50|\u660c\u5409|\u961c\u5eb7|\u4f0a\u5b81|\u548c\u7530|\u514b\u62c9\u739b\u4f9d|\u5580\u4ec0|\u970d\u5c14\u679c\u65af|\u5e93\u5c14\u52d2|\u54c8\u5bc6|\u594e\u5c6f|\u77f3\u6cb3\u5b50|\u53cc\u6cb3|\u56fe\u6728\u8212\u514b|\u5854\u57ce|\u94c1\u95e8\u5173|\u5410\u9c81\u756a|\u4e4c\u9c81\u6728\u9f50|\u4e94\u5bb6\u6e20|\u4e4c\u82cf|\u5b89\u5b81|\u4fdd\u5c71|\u695a\u96c4|\u5927\u7406|\u4e2a\u65e7|\u666f\u6d2a|\u5f00\u8fdc|\u6606\u660e|\u4e34\u6ca7|\u4e3d\u6c5f|\u8292|\u8499\u81ea|\u5f25\u52d2|\u666e\u6d31|\u66f2\u9756|\u745e\u4e3d|\u5ba3\u5a01|\u7389\u6eaa|\u662d\u901a|\u6148\u6eaa|\u4e1c\u9633|\u5949\u5316|\u5bcc\u9633|\u6d77\u5b81|\u676d\u5dde|\u6e56\u5dde|\u5efa\u5fb7|\u6c5f\u5c71|\u5609\u5174|\u91d1\u534e|\u5170\u6eaa|\u9f99\u6cc9|\u4e34\u5b89|\u4e34\u6d77|\u4e3d\u6c34|\u5b81\u6ce2|\u5e73\u6e56|\u8862\u5dde|\u745e\u5b89|\u7ecd\u5174|\u5d4a\u5dde|\u53f0\u5dde|\u6850\u4e61|\u6e29\u5cad|\u6e29\u5dde|\u4e50\u6e05|\u6c38\u5eb7|\u4e49\u4e4c|\u4f59\u59da|\u821f\u5c71|\u8bf8\u66a8)",
matchGroup:0}]}};
ilib.data.address_HK={multiformat:!0,formats:{"default":{asian:"{country}{locality}{streetAddress}",latin:"{streetAddress}\n{locality}\n{country}"},nocountry:{asian:"{locality}{streetAddress}{postalCode}",latin:"{streetAddress}\n{locality}"}},startAt:{latin:"end",asian:"beginning"},fields:{latin:[{name:"locality",line:"last",pattern:"victoria city;victoria harbour;victoria;kowloon;ji\u01d4l\u00f3ng;jiulong;causeway bay;tsuen wan;qu\u00e1nw\u0101n q\u016b;quanwan qu;sha tin;ma on shan;tuen mun;t\u00fanm\u00e9n x\u012bn sh\u00eczh\u00e8n;tunmen xin shizhen;t\u00fanm\u00e9n;tunmen;tai po;tai gu;d\u00e0p\u01d4 x\u012bn sh\u00eczh\u00e8n;dapu xin shizhen;d\u00e0p\u01d4;dapu;yuen long;yu\u00e1nl\u01ceng;yuanlang;fanling-sheung shui;sh\u00e0ngshu\u01d0 x\u012bn sh\u00eczh\u00e8n;shangshui xin shizhen;sh\u00e0ngshu\u01d0;shangshui;tseung kwan o;jiangjun'ao xin shizhen;jiangjun'ao;tin shui wai;north lantau;tung chung;tai ho;aberdeen;cheung chau;discovery bay;jardine's lookout;kennedy town;kwun tong;gu\u0101nt\u00e1ng;guantang;lei yue mun;ma wan;mui wo;m\u00e9iw\u014d;meiwo;silvermine bay;peng chau;sai kung;x\u012bg\u00f2ng sh\u00ec;xigong shi;x\u012bg\u00f2ng;xigong;sha tau kok;shek o;sok kwu wan;stanley;tai o;yuen long town;yu\u00e1nl\u01ceng sh\u00eczh\u014dngx\u012bn;yuanlang shizhongxin;yu\u00e1nl\u01ceng;yuanlang;yung shue wan;banyan bay;hong kong;xi\u0101ngg\u01ceng;xianggang;quarry bay".split(";")}],asian:[{name:"locality",
line:"startAtFirst",pattern:"(^\\S{1,5}[\u5e02\u93ae\u9109\u57ce]|hong kong|xi\u0101ngg\u01ceng|xianggang)"}]}};
ilib.data.address_TW={multiformat:!0,formats:{"default":{asian:"{country}\n{region}{locality}{streetAddress}{postalCode}",latin:"{streetAddress}\n{locality}, {region}, {postalCode}\n{country}"},nocountry:{asian:"{region}{locality}{streetAddress}{postalCode}",latin:"{streetAddress}\n{locality}, {region}, {postalCode}"}},startAt:{latin:"end",asian:"beginning"},fields:{latin:[{name:"postalCode",line:"startAtLast",pattern:"(^[0-9]{3,5}|\\s+[0-9]{3,5})"},{name:"region",line:"last",pattern:"Taiwan Province;T\u00e1iw\u0101n Sh\u011bng;Taiwan Sheng;Taiwan;T\u00e1iw\u0101n;Fujian Province;F\u00faji\u00e0n Sh\u011bng;Fujian Sheng;Fujian;F\u00faji\u00e0n".split(";")},
{name:"locality",line:"last",pattern:"([Nn][Ee][Ww]\\s+)?[A-z\u00c0\u00c1\u00c8\u00c9\u00cc\u00cd\u00d2\u00d3\u00d9\u00da\u00e0\u00e1\u00e8\u00e9\u00ec\u00ed\u00f2\u00f3\u00f9\u00fa\u0100\u0101\u0102\u0103\u01cd\u01ce\u0112\u0113\u0114\u0115\u011a\u011b\u012a\u012b\u012c\u012d\u01cf\u01d0\u014c\u014d\u014e\u014f\u01d1\u01d2\u016a\u016b\u016c\u016d\u01d3\u01d4\\-']+(\\s+[Cc][Ii][Tt][Yy])?$",matchGroup:0}],asian:[{name:"postalCode",line:"startAtLast",pattern:"\\s*[0-9]{3,5}\\s*"},{name:"region",line:"startAtFirst",
pattern:"^\\S{2}\u7701(\\w{2}\u7e23)?"},{name:"locality",line:"startAtFirst",pattern:"^\\S{1,5}[\u5e02\u93ae\u9109]"}]}};
ilib.data.address_SG={multiformat:!0,formats:{"default":{latin:"{streetAddress}\n{locality} {postalCode}\n{country}",asian:"{country}{postalCode}{locality}{streetAddress}"},nocountry:{asian:"{postalCode}{locality}{streetAddress}",latin:"{streetAddress}\n{locality} {postalCode}"}},startAt:{latin:"end",asian:"beginning"},fields:{latin:[{name:"postalCode",line:"startAtLast",pattern:"[0-9]{6}"},{name:"locality",line:"last",pattern:"[Ss][Ii][Nn][Gg][Aa][Pp][Oo][Rr][Ee]$"}],asian:[{name:"postalCode",line:"startAtLast",
pattern:"^[0-9]{6}"},{name:"locality",line:"startAtFirst",pattern:"^\u65b0\u52a0\u5761",matchGroup:0}]}};
ilib.data.countries={afghanistan:"AF","aland islands":"AX","\u00e5land islands":"AX",albania:"AL",algeria:"DZ","american samoa":"AS",andorra:"AD",angola:"AO",anguilla:"AI","antigua and barbuda":"AG","antigua & barbuda":"AG",antigua:"AG",barbuda:"AG",argentina:"AR",armenia:"AM",aruba:"AW",australia:"AU",austria:"AT",azerbaijan:"AZ",bahamas:"BS","the bahamas":"BS",bahrain:"BH",bangladesh:"BD",barbados:"BB",belarus:"BY",belgium:"BE",belize:"BZ",benin:"BJ",bermuda:"BM",bhutan:"BT","bolivia, plurinational state of":"BO",
"plurinational state of bolivia":"BO",bolivia:"BO","bosnia and herzegovina":"BA","bosnia & herzegovina":"BA",bosnia:"BA",herzegovina:"BA",botswana:"BW","bouvet island":"BV",brazil:"BR","british indian ocean territory":"IO","brunei darussalam":"BN",brunei:"BN",bulgaria:"BG","burkina faso":"BF",burundi:"BI",cambodia:"KH",cameroon:"CM",canada:"CA","cape verde":"CV","cape verde islands":"CV","cayman islands":"KY",caymans:"KY","central african republic":"CF","c.a.r.":"CF",car:"CF",chad:"TD",chile:"CL",
"people's republic of china":"CN","republic of china":"TW","p. r. of china":"CN","p. r. china":"CN","p.r. of china":"CN","pr china":"CN","R.O.C.":"TW",ROC:"TW",prc:"CN",china:"CN","christmas island":"CX","cocos (keeling) islands":"CC","cocos islands":"CC","cocos and keeling islands":"CC","cocos & keeling islands":"CC",colombia:"CO",comoros:"KM",congo:"CD","congo, the democratic republic of the":"CD","congo, democratic republic of the":"CD","the democratic republic of the congo":"CD","democratic republic of the congo":"CD",
drc:"CD","cook islands":"CK","costa rica":"CR","cote d'ivoire":"CI","c\u00f4te d'ivoire":"CI","ivory coast":"CI",croatia:"HR",cuba:"CU",cyprus:"CY","the czech republic":"CZ","czech republic":"CZ",denmark:"DK",djibouti:"DJ",dominica:"DM","dominican republic":"DO","d.r.":"DO",dr:"DO",ecuador:"EC",egypt:"EG","el salvador":"SV","equatorial guinea":"GQ",eritrea:"ER",estonia:"EE",ethiopia:"ET","falkland islands":"FK",falklands:"FK",malvinas:"FK","faroe islands":"FO",faroes:"FO",fiji:"FJ",finland:"FI",france:"FR",
"french guiana":"GF","french polynesia":"PF",polynesia:"PF","french southern territories":"TF",gabon:"GA","gabonese republic":"GA",gambia:"GM","republic of the gambia":"GM",georgia:"GE",germany:"DE",ghana:"GH",gibraltar:"GI",greece:"GR",greenland:"GL",grenada:"GD",guadeloupe:"GP",guam:"GU",guatemala:"GT",guernsey:"GG",guinea:"GN","guinea-bissau":"GW","republic of guinea-bissau":"GW",guyana:"GY","cooperative republic of guyana":"GY",haiti:"HT","heard island and mcdonald islands":"HM","heard island & mcdonald islands":"HM",
"heard and mcdonald islands":"HM","heard island":"HM","mcdonald islands":"HM","holy see":"VA","vatican city state":"VA","vatican city":"VA",vatican:"VA",honduras:"HN","hong kong":"HK",hungary:"HU",iceland:"IS",india:"IN",indonesia:"ID","iran, islamic republic of":"IR","islamic republic of iran":"IR",iran:"IR",iraq:"IQ","republic of ireland":"IE",ireland:"IE","\u00e9ire":"IE","isle of man":"IM",israel:"IL",italy:"IT",jamaica:"JM",japan:"JP",jersey:"JE",jordan:"JO",kazakhstan:"KZ",kenya:"KE","republic of kenya":"KE",
kiribati:"KI","korea, democratic people's republic of":"KP","democratic people's republic of korea":"KP",dprk:"KP","north korea":"KP","korea, republic of":"KR","republic of korea":"KR","south korea":"KR",korea:"KR",kuwait:"KW",kyrgyzstan:"KG","lao people's democratic republic":"LA",laos:"LA",latvia:"LV",lebanon:"LB",lesotho:"LS",liberia:"LR","libyan arab jamahiriya":"LY",libya:"LY",liechtenstein:"LI",lithuania:"LT",luxembourg:"LU",macao:"MO","macedonia, the former yugoslav republic of":"MK","macedonia, former yugoslav republic of":"MK",
"the former yugoslav republic of macedonia":"MK","former yugoslav republic of macedonia":"MK","f.y.r.o.m.":"MK",fyrom:"MK",macedonia:"MK",madagascar:"MG",malawi:"MW",malaysia:"MY",maldives:"MV",mali:"ML","republic of mali":"ML",malta:"MT","marshall islands":"MH",marshalls:"MH",martinique:"MQ",mauritania:"MR",mauritius:"MU",mayotte:"YT",mexico:"MX","micronesia, federated states of":"FM","federated states of micronesia":"FM",micronesia:"FM","moldova, republic of":"MD","republic of moldova":"MD",moldova:"MD",
monaco:"MC",mongolia:"MN",montenegro:"ME",montserrat:"MS",morocco:"MA",mozambique:"MZ",myanmar:"MM",namibia:"NA",nauru:"NR",nepal:"NP",holland:"NL","netherlands antilles":"AN","the netherlands":"NL",netherlands:"NL","new caledonia":"NC","new zealand":"NZ",nicaragua:"NI",niger:"NE",nigeria:"NG","norfolk island":"NF","northern mariana islands":"MP",marianas:"MP",norway:"NO",oman:"OM",pakistan:"PK",palau:"PW","palestinian territory, occupied":"PS","occupied palestinian territory":"PS","palestinian territory":"PS",
"palestinian authority":"PS",palestine:"PS",panama:"PA","papua new guinea":"PG",png:"PG",paraguay:"PY",peru:"PE","the philippines":"PH",philippines:"PH",pitcairn:"PN",poland:"PL",portugal:"PT","puerto rico":"PR",qatar:"QA",reunion:"RE","r\u00e9union":"RE",romania:"RO","russian federation":"RU",russia:"RU",rwanda:"RW","saint barth\u00e9lemy":"BL","saint barthelemy":"BL","saint barts":"BL","st. barth\u00e9lemy":"BL","st. barthelemy":"BL","st. barts":"BL","st barth\u00e9lemy":"BL","st barthelemy":"BL",
"st barts":"BL","saint helena, ascension and tristan da cunha":"SH","saint helena, ascension & tristan da cunha":"SH","saint helena":"SH","st. helena, ascension and tristan da cunha":"SH","st. helena, ascension & tristan da cunha":"SH","st. helena":"SH","st helena, ascension and tristan da cunha":"SH","st helena, ascension & tristan da cunha":"SH","st helena":"SH",ascension:"SH","tristan da cunha":"SH","saint kitts and nevis":"KN","saint kitts & nevis":"KN","saint kitts":"KN","st. kitts and nevis":"KN",
"st. kitts & nevis":"KN","st. kitts":"KN","st kitts and nevis":"KN","st kitts & nevis":"KN","st kitts":"KN",nevis:"KN","saint lucia":"LC","st. lucia":"LC","st lucia":"LC","saint martin":"MF","st. martin":"MF","st martin":"MF","saint pierre and miquelon":"PM","saint pierre & miquelon":"PM","saint pierre":"PM","st. pierre and miquelon":"PM","st. pierre & miquelon":"PM","st. pierre":"PM","st pierre and miquelon":"PM","st pierre & miquelon":"PM","st pierre":"PM",miquelon:"PM","saint vincent and the grenadines":"VC",
"saint vincent & the grenadines":"VC","saint vincent":"VC","st. vincent and the grenadines":"VC","st. vincent & the grenadines":"VC","st. vincent":"VC","st vincent and the grenadines":"VC","st vincent & the grenadines":"VC","st vincent":"VC","the grenadines":"VC",grenadines:"VC",samoa:"WS","san marino":"SM","sao tome and principe":"ST","sao tome & principe":"ST","sao tome":"ST",principe:"ST","saudi arabia":"SA",arabia:"SA",senegal:"SN","s\u00e9n\u00e9gal":"SN",serbia:"RS",seychelles:"SC","sierra leone":"SL",
"the republic of singapore":"SG","republic of singapore":"SG",singapore:"SG",slovakia:"SK",slovenia:"SI","solomon islands":"SB",solomons:"SB",somalia:"SO","south africa":"ZA","south georgia and the south sandwich islands":"GS","south georgia & the south sandwich islands":"GS","south georgia":"GS","the south sandwich islands":"GS","south sandwich islands":"GS",spain:"ES","sri lanka":"LK","the sudan":"SD",sudan:"SD",suriname:"SR","svalbard and jan mayen":"SJ","svalbard & jan mayen":"SJ",svalbard:"SJ",
"jan mayen":"SJ",swaziland:"SZ",sweden:"SE",switzerland:"CH","syrian arab republic":"SY",syria:"SY",taiwan:"TW",tajikistan:"TJ","tanzania, united republic of":"TZ","united republic of tanzania":"TZ",tanzania:"TZ",thailand:"TH","timor-leste":"TL","east timor":"TL",togo:"TG",tokelau:"TK",tonga:"TO","trinidad and tobago":"TT","trinidad & tobago":"TT",trinidad:"TT",tobago:"TT",tunisia:"TN",turkey:"TR",turkmenistan:"TM","turks and caicos islands":"TC","turks & caicos islands":"TC","turks islands":"TC",
"turk islands":"TC","caicos islands":"TC","caico islands":"TC",tuvalu:"TV",uganda:"UG",ukraine:"UA","united arab emirates":"AE","u.a.e.":"AE",uae:"AE",dubai:"AE","united kingdom":"GB","u.k.":"GB",uk:"GB","great britain":"GB","g.b.":"GB",gb:"GB",england:"GB",scotland:"GB",wales:"GB","united states":"US","united states of america":"US","u.s.a.":"US",usa:"US","united states minor outlying islands":"UM",uruguay:"UY",uzbekistan:"UZ",vanuatu:"VU","venezuela, bolivarian republic of":"VE","bolivarian republic of venezuela":"VE",
venezuela:"VE","viet nam":"VN",vietnam:"VN","british virgin islands":"VG","virgin islands, british":"VG",bvis:"VG","b.v.i.":"VG",bvi:"VG","virgin islands, us":"VI","the us virgin islands":"VI","us virgin islands":"VI","virgin islands":"VI",usvi:"VI","wallis and futuna":"WF","wallis & futuna":"WF",wallis:"WF",futuna:"WF","western sahara":"EH",yemen:"YE",zambia:"ZM",zimbabwe:"ZW"};
ilib.data.nativecountries={"\u0627\u0641\u063a\u0627\u0646\u0633\u062a\u0627\u0646":"AF","\u00e5lands\u00f8erne":"AX","shqip\u00ebri":"AL","alg\u00e9rie":"DZ","\u0627\u0644\u062c\u0632\u0627\u0626\u0631":"DZ","principat d'andorra":"AD","rep\u00fablica de angola":"AO","repubilika ya ngola":"AO","\u0540\u0561\u0575\u0561\u057d\u057f\u0561\u0576":"AM","\u00f6sterreich":"AT","az\u0259rbaycan":"AZ","\u0627\u0644\u0628\u062d\u0631\u064a\u0646":"BH","\u09ac\u09be\u0982\u09b2\u09be\u09a6\u09c7\u09b6":"BD",
"\u0997\u09a3\u09aa\u09cd\u09b0\u099c\u09be\u09a4\u09a8\u09cd\u09a4\u09cd\u09b0\u09c0 \u09ac\u09be\u0982\u09b2\u09be\u09a6\u09c7\u09b6":"BD","g\u00f4noprojatontri bangladesh":"BD","\u0431\u0435\u043b\u0430\u0440\u0443\u0441\u044c":"BY","belgi\u00eb":"BE","la belgique":"BE",belgique:"BE","r\u00e9publique du b\u00e9nin":"BJ","b\u00e9nin":"BJ","\u0f60\u0f56\u0fb2\u0f74\u0f42\u0f0b\u0f61\u0f74\u0f63\u0f0b":"BT","bulivya mamallaqta":"BO","estado plurinacional de bolivia":"BO","wuliwya suyu":"BO","bosna i hercegovina":"BA",
"\u0431\u043e\u0441\u043d\u0430 \u0438 \u0445\u0435\u0440\u0446\u0435\u0433\u043e\u0432\u0438\u043d\u0430":"BA","lefatshe la botswana":"BW","bouvet\u00f8ya":"BV",brasil:"BR","negara brunei darussalam":"BN","\u0431\u044a\u043b\u0433\u0430\u0440\u0438\u044f":"BG","republika y'u burundi":"BI","r\u00e9publique du burundi":"BI","\u1796\u17d2\u179a\u17c7\u179a\u17b6\u1787\u17b6\u178e\u17b6\u1785\u1780\u17d2\u179a\u1780\u1798\u17d2\u1796\u17bb\u1787\u17b6":"KH","pre\u0103h r\u00e9ach\u00e9anach\u00e2k k\u00e2mp\u016dch\u00e9a":"KH",
"k\u00e2mp\u016dch\u00e9a":"KH",cameroun:"CM","cabo verde":"CV","islas de cabo verde":"CV","r\u00e9publique centrafricaine":"CF","k\u00f6d\u00f6r\u00f6s\u00ease t\u00ee b\u00eaafr\u00eeka":"CF","r\u00e9publique du tchad":"TD",tchad:"TD","\u062c\u0645\u0647\u0648\u0631\u064a\u0629 \u062a\u0634\u0627\u062f":"TD","\u01e7umh\u016briyyat t\u0161\u0101d":"TD","t\u0161\u0101d":"TD","\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u4e2d\u56fd":"CN","\u5171\u548c\u570b\u7684\u4e2d\u570b":"TW","\u53f0\u7063\u7684":"TW",
"\u4e2d\u56fd":"CN","union des comores":"KM","udzima wa komori":"KM","\u65e5\u672c":"JP","\u0627\u0644\u0627\u062a\u062d\u0627\u062f \u0627\u0644\u0642\u0645\u0631\u064a":"KM","al-itti\u1e25\u0101d al-qumur\u012b/qamar\u012b":"KM","r\u00e9publique du congo":"CG","repubilika ya kongo":"CG","republiki ya kong\u00f3":"CG",kongo:"CG","kong\u00f3":"CG","r\u00e9publique d\u00e9mocratique du congo":"CD","k\u016bki '\u0101irani":"CK","cote-d'ivoire":"CI","c\u00f4te-d'ivoire":"CI",hrvatska:"HR","\u03ba\u03c5\u03c0\u03c1\u03b9\u03b1\u03ba\u03ae \u03b4\u03b7\u03bc\u03bf\u03ba\u03c1\u03b1\u03c4\u03af\u03b1":"CY",
"kypriak\u00ed dimokrat\u00eda":"CY","k\u0131br\u0131s cumhuriyeti":"CY","\u010desk\u00e1 republika":"CZ",danmark:"DK","\u062c\u0645\u0647\u0648\u0631\u064a\u0629 \u062c\u064a\u0628\u0648\u062a\u064a":"DJ","jumh\u016briyyat j\u012bb\u016bt\u012b":"DJ","r\u00e9publique de djibouti":"DJ","jamhuuriyadda jabuuti":"DJ","gabuutih ummuuno":"DJ","j\u012bb\u016bt\u012b":"DJ",djibouti:"DJ",jabuuti:"DJ",gabuutih:"DJ","Commonwealth de la Dominique":"DM",Dominique:"DM","rep\u00fablica dominicana":"DO","\u0645\u0635\u0631":"EG",
"rep\u00fablica de guinea ecuatorial":"GQ","r\u00e9publique de guin\u00e9e \u00e9quatoriale":"GQ","guinea ecuatorial":"GQ","guin\u00e9e \u00e9quatoriale":"GQ","\u1203\u1308\u1228 \u12a4\u122d\u1275\u122b":"ER","hagere ertra":"ER","\u062f\u0648\u0644\u0629 \u0625\u0631\u062a\u0631\u064a\u0627":"ER","dawlat iritr\u012bya":"ER",eesti:"EE","\u12e8\u12a2\u1275\u12ee\u1335\u12eb \u134c\u12f4\u122b\u120b\u12ca \u12f2\u121e\u12ad\u122b\u1232\u12eb\u12ca \u122a\u1350\u1265\u120a\u12ad":"ET","ye-\u012bty\u014d\u1e57\u1e57y\u0101 f\u0113d\u0113ral\u0101w\u012b d\u012bm\u014dkr\u0101s\u012by\u0101w\u012b r\u012bpebl\u012bk":"ET",
"\u12e8\u12a2\u1275\u12ee\u1335\u12eb":"ET","ye-\u012bty\u014d\u1e57\u1e57y\u0101":"ET",malvinas:"FK","f\u00e6r\u00f8erne":"FO","matanitu ko viti":"FJ","fij\u012b ripablik":"FJ","\u092b\u093c\u093f\u091c\u0940 \u0917\u0923\u0930\u093e\u091c\u094d\u092f":"FJ",suomi:"FI","guyane fran\u00e7aise":"GF","polyn\u00e9sie fran\u00e7aise":"PF","terres australes fran\u00e7aises":"TF","r\u00e9publique gabonaise":"GA","\u10e1\u10d0\u10e5\u10d0\u10e0\u10d7\u10d5\u10d4\u10da\u10dd\u10e1":"GE",deutschland:"DE","\u03b5\u03bb\u03bb\u03ac\u03b4\u03b1":"GR",
"gr\u00f8nland":"GL","r\u00e9publique de guin\u00e9e":"GN","rep\u00fablica da guin\u00e9-bissau":"GW","ha\u00efti":"HT",ayiti:"HT","santa sede":"VA","citt\u00e0 del vaticano":"VA",vaticano:"VA","\u9999\u6e2f\u7684":"HK","magyarorsz\u00e1g":"HU","\u00edsland":"IS","\u092d\u093e\u0930\u0924":"IN","\u062c\u0645\u0647\u0648\u0631\u06cc \u0627\u0633\u0644\u0627\u0645\u06cc \u0627\u06cc\u0631\u0627\u0646":"IR","\u0627\u06cc\u0631\u0627\u0646":"IR","\u0627\u0644\u0639\u0631\u0627\u0642":"IQ","\u00e9ire":"IE",
"\u05d9\u05e9\u05e8\u05d0\u05dc":"IL",italia:"IT","\u0627\u0644\u0623\u0631\u062f\u0646":"JO","\u041a\u0430\u0437\u0430\u0445\u0441\u0442\u0430\u043d":"KZ","jamhuri ya kenya":"KE","ribaberiki kiribati":"KI","\uc870\uc120 \ubbfc\uc8fc\uc8fc\uc758 \uc778\ubbfc \uacf5\ud654\uad6d":"KP","\ubd81\ud55c":"KP","\ub300\ud55c\ubbfc\uad6d":"KR","\ud55c\uad6d":"KR","\u0627\u0644\u0643\u0648\u064a\u062a":"KW","\u043a\u044b\u0440\u0433\u044b\u0437 \u0440\u0435\u0441\u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0441\u044b":"KG",
"k\u0131rg\u0131z respublikas\u0131":"KG","\u043a\u044b\u0440\u0433\u044b\u0437\u0441\u043a\u0430\u044f \u0440\u0435\u0441\u043f\u0443\u0431\u043b\u0438\u043a\u0430":"KG","kyrgyzskaya respublika":"KG","\u0eaa\u0eb2\u0e97\u0eb2\u0ea5\u0eb0\u0e99\u0eb0\u0ea5\u0eb1\u0e94 \u0e9b\u0eb0\u0e8a\u0eb2\u0e97\u0eb4\u0e9b\u0eb0\u0ec4\u0e95 \u0e9b\u0eb0\u0e8a\u0eb2\u0e8a\u0ebb\u0e99\u0ea5\u0eb2\u0ea7":"LA","sathalanalat paxathipatai paxaxon lao":"LA",latvija:"LV","\u0644\u0628\u0646\u0627\u0646":"LB","muso oa lesotho":"LS",
"\u0644\u064a\u0628\u064a\u0627":"LY",lietuva:"LT",luxemburg:"LU",macau:"MO","\u6fb3\u95e8":"MO","\u6fb3\u9580":"MO","\u043f\u043e\u0440\u0430\u043d\u0435\u0448\u043d\u0430 \u0458\u0443\u0433\u043e\u0441\u043b\u043e\u0432\u0435\u043d\u0441\u043a\u0430 \u0440\u0435\u043f\u0443\u0431\u043b\u0438\u043a\u0430 \u043c\u0430\u043a\u0435\u0434\u043e\u043d\u0438\u0458\u0430":"MK","\u043c\u0430\u043a\u0435\u0434\u043e\u043d\u0438\u0458\u0430":"MK","repoblikan'i madagasikara":"MG","r\u00e9publique de madagascar":"MG",
"chalo cha malawi":"MW","dziko la mala\u0175i":"MW","mala\u0175i":"MW","\u078b\u07a8\u0788\u07ac\u0780\u07a8\u0783\u07a7\u0787\u07b0\u0796\u07ad\u078e\u07ac \u0796\u07aa\u0789\u07b0\u0780\u07ab\u0783\u07a8\u0787\u07b0\u0794\u07a7":"MV","dhivehi raa'jeyge jumhooriyya":"MV","r\u00e9publique du mali":"ML","mali ka fasojamana":"ML","\u0627\u0644\u062c\u0645\u0647\u0648\u0631\u064a\u0629 \u0627\u0644\u0625\u0633\u0644\u0627\u0645\u064a\u0629 \u0627\u0644\u0645\u0648\u0631\u064a\u062a\u0627\u0646\u064a\u0629":"MR",
"al-\u01e7umh\u016briyyah al-\u02beisl\u0101miyyah al-m\u016br\u012bt\u0101niyyah":"MR","r\u00e9publique islamique de mauritanie":"MR","republik bu lislaamu bu g\u00e0nnaar":"MR","republik moris":"MU","r\u00e9publique de maurice":"MU","m\u00e9xico":"MX","republica moldova":"MD","mong\u03b3ol ulus":"MN","\u043c\u043e\u043d\u0433\u043e\u043b \u0443\u043b\u0441":"MN","mongol uls":"MN","crna gora":"ME","\u0446\u0440\u043d\u0430 \u0433\u043e\u0440\u0430":"ME","\u0645\u063a\u0631\u0628\u064a":"MA","rep\u00fablica de mo\u00e7ambique":"MZ",
"mo\u00e7ambique":"MZ","pyidaunzu thanm\u0103da my\u0103ma nainngandaw":"MM",burma:"MM","republiek van namibi\u00eb":"NA","republik namibia":"NA","namibi\u00eb":"NA","ripublik naoero":"NR","\u0938\u0919\u094d\u0918\u0940\u092f \u0932\u094b\u0915\u0924\u093e\u0928\u094d\u0924\u094d\u0930\u093f\u0915 \u0917\u0923\u0924\u0928\u094d\u0924\u094d\u0930 \u0928\u0947\u092a\u093e\u0932":"NP","sanghiya lokt\u0101ntrik ganatantra nep\u0101l":"NP","nep\u0101l":"NP",nederland:"NL","nouvelle-cal\u00e9donie":"NC",
"la cal\u00e9donie":"NC","cal\u00e9donie":"NC",aotearoa:"NZ","jamhuriyar nijar":"NE",nijar:"NE","jamhuriyar tarayyar najeriya":"NG","nj\u00edk\u1ecdt\u00e1 \u1ecdch\u00edch\u00eciw\u00fa n\u00e0\u1ecbj\u00edr\u00ed\u00e0":"NG","\u00e0pap\u1ecd\u0300 ol\u00f3m\u00ecnira il\u1eb9\u0300 n\u00e0\u00ecj\u00edr\u00ed\u00e0":"NG","n\u00e0\u1ecbj\u00edr\u00ed\u00e0":"NG","n\u00e0\u00ecj\u00edr\u00ed\u00e0":"NG",norge:"NO","\u0633\u0644\u0637\u0646\u0629 \u0639\u0645\u0627\u0646":"OM","\u067e\u0627\u06a9\u0633\u062a\u0627\u0646":"PK",
"beluu \u0119r a belau":"PW",belau:"PW","panam\u00e1":"PA","independen stet bilong papua niugini":"PG","papua niugini":"PG","per\u00fa":"PE","las filipinas":"PH",filipinas:"PH",polska:"PL","\u0642\u0637\u0631":"QA","rom\u00e2nia":"RO","\u0440\u0443\u0441\u0441\u043a\u0438\u0439 \u0424\u0435\u0434\u0435\u0440\u0430\u0446\u0438\u0438":"RU","\u0440\u043e\u0441\u0441\u0438\u044f":"RU","repubulika y'u rwanda":"RW","r\u00e9publique du rwanda":"RW","saint-barth\u00e9lemy":"BL","saint barth":"BL","saint-martin":"MF",
"sint maarten":"MF","saint-pierre-et-miquelon":"PM","malo sa'oloto tuto'atasi o samoa":"WS","san marino":"SM","sao tome and principe":"ST","sao tome & principe":"ST","sao tome":"ST",principe:"ST","\u0627\u0644\u0633\u0639\u0648\u062f\u064a\u0629 \u062c\u0632\u064a\u0631\u0647 \u0627\u0644\u0639\u0631\u0628":"SA",arabia:"SA",senegal:"SN","s\u00e9n\u00e9gal":"SN",serbia:"RS",seychelles:"SC","sierra leone":"SL","\u65b0\u52a0\u5761\u5171\u548c\u56fd":"SG","\u65b0\u52a0\u5761\u7684":"SG",slovensko:"SK",
slovenija:"SI","solomon islands":"SB",solomons:"SB",somalia:"SO","suid-afrika":"ZA","espa\u00f1a":"ES","sri lanka":"LK","the sudan":"SD",sudan:"SD",suriname:"SR","svalbard and jan mayen":"SJ","svalbard & jan mayen":"SJ",svalbard:"SJ","jan mayen":"SJ",swaziland:"SZ",sverige:"SE","die schweiz":"CH",schweiz:"CH","la suisse":"CH",suisse:"CH",svizzera:"CH","\u0633\u0648\u0631\u064a\u0627":"SY","taiwan, province of china":"TW",taiwan:"TW",tajikistan:"TJ","tanzania, united republic of":"TZ","united republic of tanzania":"TZ",
tanzania:"TZ","\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e44\u0e17\u0e22":"TH","timor-leste":"TL","east timor":"TL",togo:"TG",tokelau:"TK",tonga:"TO","trinidad and tobago":"TT","trinidad & tobago":"TT",trinidad:"TT",tobago:"TT","\u062a\u0648\u0646\u0633":"TN","t\u00fcrkiye":"TR",turkmenistan:"TM",tuvalu:"TV",uganda:"UG","\u0443\u043a\u0440\u0430\u0457\u043d\u0430":"UA","\u0627\u0644\u0627\u0645\u0627\u0631\u0627\u062a \u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0627\u0644\u0645\u062a\u062d\u062f\u0629":"AE",
"\u062f\u0628\u064a":"AE",albain:"GB",cymru:"GB",uruguay:"UY",uzbekistan:"UZ",vanuatu:"VU","vi\u1ec7t nam":"VN","western sahara":"EH","\u064a\u0645\u0646\u064a":"YE",zambia:"ZM",zimbabwe:"ZW"};
ilib.data.ctrynames_en={generated:!1,"Antigua & Barbuda":"AG",Arabia:"SA","Bosnia & Herzegovina":"BA",BVI:"VG","Cape Verde Islands":"CV","Cocos & Keeling Islands":"CC","Cocos (Keeling) Islands":"CC","Congo, Democratic Republic of the":"CD","Democratic Republic of the Congo":"CD",DPRK:"KP",Dubai:"AE","East Timor":"TL",England:"GB",Falklands:"FK","Heard Island & McDonald Islands":"HM","Occupied Palestinian Territory":"PS","P. R. China":"CN","P. R. of China":"CN","P.R. of China":"CN","Palestinian Territory":"PS",
"People's Republic of China":"CN",Polynesia:"061","PR china":"CN",PRC:"CN","Republic of China":"TW","Republic of Ireland":"IE","Republic of Singapore":"SG","Saint Barts":"BL","Saint Helena, Ascension & Tristan da Cunha":"SH","Saint Kitts & Nevis":"KN","Saint Pierre & Miquelon":"PM","Saint Vincent & the Grenadines":"VC","Sao Tome & Principe":"ST",Scotland:"GB",Solomons:"SB","South Georgia & the South Sandwich Islands":"GS","St Barthelemy":"BL","St Barth\u00e9lemy":"BL","St Barts":"BL","St Helena":"SH",
"St Helena, Ascension & Tristan da Cunha":"SH","St Helena, Ascension and Tristan da Cunha":"SH","St Kitts":"KN","St Kitts & Nevis":"KN","St Kitts and Nevis":"KN","St Lucia":"LC","St Martin":"MF","St Pierre":"PM","St Pierre & Miquelon":"PM","St Pierre and Miquelon":"PM","St Vincent":"VC","St Vincent & the Grenadines":"VC","St Vincent and the Grenadines":"VC","St. Barts":"BL","St. Helena, Ascension & Tristan da Cunha":"SH","St. Kitts & Nevis":"KN","St. Pierre & Miquelon":"PM","St. Vincent & the Grenadines":"VC",
"Svalbard & Jan Mayen":"SJ","S\u00e9n\u00e9gal":"SN","The Bahamas":"BS","The Czech Republic":"CZ","The Grenadines":"VC","The Netherlands":"NL","The Philippines":"PH","The Republic of Singapore":"SG","The South Sandwich Islands":"GS","The Sudan":"SD","The US Virgin Islands":"VI","Trinidad & Tobago":"TT","Turks & Caicos Islands":"TC","Vatican City":"VA","Vatican City State":"VA","Virgin Islands":"VI",Wales:"GB","Wallis & Futuna":"WF","\u00c9ire":"IE","Ascension Island":"AC",Andorra:"AD","United Arab Emirates":"AE",
Afghanistan:"AF","Antigua and Barbuda":"AG",Anguilla:"AI",Albania:"AL",Armenia:"AM","Netherlands Antilles":"AN",Angola:"AO",Antarctica:"AQ",Argentina:"AR","American Samoa":"AS",Austria:"AT",Australia:"AU",Aruba:"AW","\u00c5land Islands":"AX",Azerbaijan:"AZ","Bosnia and Herzegovina":"BA",Barbados:"BB",Bangladesh:"BD",Belgium:"BE","Burkina Faso":"BF",Bulgaria:"BG",Bahrain:"BH",Burundi:"BI",Benin:"BJ","Saint Barth\u00e9lemy":"BL",Bermuda:"BM",Brunei:"BN",Bolivia:"BO","Caribbean Netherlands":"BQ",Brazil:"BR",
Bahamas:"BS",Bhutan:"BT","Bouvet Island":"BV",Botswana:"BW",Belarus:"BY",Belize:"BZ",Canada:"CA","Cocos [Keeling] Islands":"CC","Congo - Kinshasa":"CD","Central African Republic":"CF","Congo - Brazzaville":"CG",Switzerland:"CH","C\u00f4te d\u2019Ivoire":"CI","Cook Islands":"CK",Chile:"CL",Cameroon:"CM",China:"CN",Colombia:"CO","Clipperton Island":"CP","Costa Rica":"CR",Cuba:"CU","Cape Verde":"CV","Cura\u00e7ao":"CW","Christmas Island":"CX",Cyprus:"CY","Czech Republic":"CZ",Germany:"DE","Diego Garcia":"DG",
Djibouti:"DJ",Denmark:"DK",Dominica:"DM","Dominican Republic":"DO",Algeria:"DZ","Ceuta and Melilla":"EA",Ecuador:"EC",Estonia:"EE",Egypt:"EG","Western Sahara":"EH",Eritrea:"ER",Spain:"ES",Ethiopia:"ET","European Union":"EU",Finland:"FI",Fiji:"FJ","Falkland Islands":"FK",Micronesia:"FM","Faroe Islands":"FO",France:"FR",Gabon:"GA","United Kingdom":"GB",Grenada:"GD",Georgia:"GE","French Guiana":"GF",Guernsey:"GG",Ghana:"GH",Gibraltar:"GI",Greenland:"GL",Gambia:"GM",Guinea:"GN",Guadeloupe:"GP","Equatorial Guinea":"GQ",
Greece:"GR","South Georgia and the South Sandwich Islands":"GS",Guatemala:"GT",Guam:"GU","Guinea-Bissau":"GW",Guyana:"GY","Hong Kong SAR China":"HK","Heard Island and McDonald Islands":"HM",Honduras:"HN",Croatia:"HR",Haiti:"HT",Hungary:"HU","Canary Islands":"IC",Indonesia:"ID",Ireland:"IE",Israel:"IL","Isle of Man":"IM",India:"IN","British Indian Ocean Territory":"IO",Iraq:"IQ",Iran:"IR",Iceland:"IS",Italy:"IT",Jersey:"JE",Jamaica:"JM",Jordan:"JO",Japan:"JP",Kenya:"KE",Kyrgyzstan:"KG",Cambodia:"KH",
Kiribati:"KI",Comoros:"KM","Saint Kitts and Nevis":"KN","North Korea":"KP","South Korea":"KR",Kuwait:"KW","Cayman Islands":"KY",Kazakhstan:"KZ",Laos:"LA",Lebanon:"LB","Saint Lucia":"LC",Liechtenstein:"LI","Sri Lanka":"LK",Liberia:"LR",Lesotho:"LS",Lithuania:"LT",Luxembourg:"LU",Latvia:"LV",Libya:"LY",Morocco:"MA",Monaco:"MC",Moldova:"MD",Montenegro:"ME","Saint Martin":"MF",Madagascar:"MG","Marshall Islands":"MH",Macedonia:"MK",Mali:"ML","Myanmar [Burma]":"MM",Mongolia:"MN","Macau SAR China":"MO",
"Northern Mariana Islands":"MP",Martinique:"MQ",Mauritania:"MR",Montserrat:"MS",Malta:"MT",Mauritius:"MU",Maldives:"MV",Malawi:"MW",Mexico:"MX",Malaysia:"MY",Mozambique:"MZ",Namibia:"NA","New Caledonia":"NC",Niger:"NE","Norfolk Island":"NF",Nigeria:"NG",Nicaragua:"NI",Netherlands:"NL",Norway:"NO",Nepal:"NP",Nauru:"NR",Niue:"NU","New Zealand":"NZ",Oman:"OM",Panama:"PA",Peru:"PE","French Polynesia":"PF","Papua New Guinea":"PG",Philippines:"PH",Pakistan:"PK",Poland:"PL","Saint Pierre and Miquelon":"PM",
"Pitcairn Islands":"PN","Puerto Rico":"PR","Palestinian Territories":"PS",Portugal:"PT",Palau:"PW",Paraguay:"PY",Qatar:"QA","Outlying Oceania":"QO","R\u00e9union":"RE",Romania:"RO",Serbia:"RS",Russia:"RU",Rwanda:"RW","Saudi Arabia":"SA","Solomon Islands":"SB",Seychelles:"SC",Sudan:"SD",Sweden:"SE",Singapore:"SG","Saint Helena":"SH",Slovenia:"SI","Svalbard and Jan Mayen":"SJ",Slovakia:"SK","Sierra Leone":"SL","San Marino":"SM",Senegal:"SN",Somalia:"SO",Suriname:"SR","South Sudan":"SS","S\u00e3o Tom\u00e9 and Pr\u00edncipe":"ST",
"El Salvador":"SV","Sint Maarten":"SX",Syria:"SY",Swaziland:"SZ","Tristan da Cunha":"TA","Turks and Caicos Islands":"TC",Chad:"TD","French Southern Territories":"TF",Togo:"TG",Thailand:"TH",Tajikistan:"TJ",Tokelau:"TK","Timor-Leste":"TL",Turkmenistan:"TM",Tunisia:"TN",Tonga:"TO",Turkey:"TR","Trinidad and Tobago":"TT",Tuvalu:"TV",Taiwan:"TW",Tanzania:"TZ",Ukraine:"UA",Uganda:"UG","U.S. Minor Outlying Islands":"UM","United States":"US",Uruguay:"UY",Uzbekistan:"UZ","Saint Vincent and the Grenadines":"VC",
Venezuela:"VE","British Virgin Islands":"VG","U.S. Virgin Islands":"VI",Vietnam:"VN",Vanuatu:"VU","Wallis and Futuna":"WF",Samoa:"WS",Yemen:"YE",Mayotte:"YT","South Africa":"ZA",Zambia:"ZM",Zimbabwe:"ZW","Unknown Region":"ZZ",Asia:"142","Central Asia":"143","Western Asia":"145",Europe:"150","Eastern Europe":"151","Northern Europe":"154","Western Europe":"155","Latin America":"419",World:"001",Africa:"002","North America":"003","South America":"005",Oceania:"009","Western Africa":"011","Central America":"013",
"Eastern Africa":"014","Northern Africa":"015","Middle Africa":"017","Southern Africa":"018",Americas:"019","Northern America":"021",Caribbean:"029","Eastern Asia":"030","Southern Asia":"034","South-Eastern Asia":"035","Southern Europe":"039",Australasia:"053",Melanesia:"054","Micronesian Region":"057","U.S. Outlying Islands":"UM"};
ilib.data.ctrynames_de={generated:!1,albanien:"AL",algerien:"DZ","amerikanisch-samoa":"AS","antigua und barbuda":"AG",argentinien:"AR",armenien:"AM",ascension:"SH",australien:"AU","\u00f6sterreich":"AT",aserbaidschan:"AZ","britische jungferninseln":"VG",bangladesch:"BD",belgien:"BE",bolivien:"BO","bosnien und herzegowina":"BA",botsuana:"BW",brasilien:"BR","britisches territorium im indischen ozean":"IO",bulgarien:"BG",kambodscha:"KH",kamerun:"CM","kap verde":"CV",kaimaninseln:"KY","zentralafrikanische republik":"CF",
tschad:"TD",kolumbien:"CO",komoren:"KM",cookinseln:"CK",kroatien:"HR",kuba:"CU",zypern:"CY","tschechische republik":"CZ","c\u00f4te d\u2019ivoire":"CI","dominikanische republik":"DO","kongo, demokratische volksrepublik":"CD","kongo, demokratische republik":"CD","d\u00e4nemark":"DK",dschibuti:"DJ",osttimor:"TL","\u00e4gypten":"EG","\u00e4quatorialguinea":"GQ",estland:"EE","\u00e4thiopien":"ET","mazedonien, ehemalige jugoslawische republik":"MK",falklandinseln:"FK","f\u00e4r\u00f6er":"FO",mikronesien:"FM",
fidschi:"FJ",finnland:"FI",frankreich:"FR","franz\u00f6sisch-guayana":"GF","franz\u00f6sisch-polynesien":"PF",gabun:"GA",deutschland:"DE",griechenland:"GR","gr\u00f6nland":"GL",hongkong:"HK",ungarn:"HU",island:"IS",indien:"IN",indonesien:"ID",irak:"IQ",irland:"IE",italien:"IT",jamaika:"JM",jordanien:"JO",kenia:"KE",kirgisistan:"KG",lettland:"LV",libanon:"LB",libyen:"LY",litauen:"LT",luxemburg:"LU",madagaskar:"MG",malediven:"MV",marianen:"MP",marshallinseln:"MH",martinique:"MQ",mauretanien:"MR",mexiko:"MX",
moldau:"MD",mongolei:"MN",marokko:"MA",mosambik:"MZ",niederlande:"NL","niederl\u00e4ndische antillen":"AN",neukaledonien:"NC",neuseeland:"NZ",norfolkinseln:"NF",nordkorea:"KP","n\u00f6rdliche marianen":"MP",norwegen:"NO","pal\u00e4stinensische autonomiebeh\u00f6rde":"PS","papua-neuguinea":"PG","china, volksrepublik":"CN",philippinen:"PH",polen:"PL",katar:"QA","china, republik":"TW","irland, republik":"IE","rum\u00e4nien":"RO",russland:"RU",ruanda:"RW","st. helena":"SH","st. kitts und nevis":"KN",
"st. lucia":"LC","saint-pierre und miquelon":"PM","saint-vincent":"VC","st. vincent und die grenadinen":"VC","saudi-arabien":"SA",serbien:"RS",seychellen:"SC",singapur:"SG",slowakei:"SK",slowenien:"SI",salomoninseln:"SB","s\u00fcdafrika":"ZA","s\u00fcdkorea":"KR",spanien:"ES",surinam:"SR",swasiland:"SZ",schweden:"SE",schweiz:"CH",syrien:"SY","s\u00e3o tom\u00e9 und pr\u00edncipe":"ST",tadschikistan:"TJ",tansania:"TZ",bahamas:"BS",gambia:"GM","turks- und caicosinseln":"TC","amerikanische jungferninseln":"VI",
"trinidad und tobago":"TT",tunesien:"TN","t\u00fcrkei":"TR",vae:"AE","vereinigte arabische emirate":"AE","gro\u00dfbritannien":"GB",usbekistan:"UZ",vatikanstadt:"VA","wallis und futuna":"WF",jemen:"YE",sambia:"ZM",simbabwe:"ZW",afghanistan:"AF","\u00e5landinseln":"AX",andorra:"AD",angola:"AO",anguilla:"AI",antigua:"AG",arabien:"SA",aruba:"AW",bahrain:"BH",barbados:"BB",barbuda:"AG",belarus:"BY",belize:"BZ",benin:"BJ",bermuda:"BM",bhutan:"BT","bolivarische republik venezuela":"VE","bolivien, plurinationaler staat":"BO",
bosnien:"BA",bouvetinsel:"BV","britische territorien im indischen ozean":"IO",brunei:"BN","brunei darussalam":"BN","burkina faso":"BF",burundi:"BI",caicosinseln:"TC",kanada:"CA",chile:"CL",china:"CN",weihnachtsinsel:"CX","kokosinseln (keelinginseln)":"CC","kokos- und keelinginseln":"CC",kokosinseln:"CC",kongo:"CD","costa rica":"CR","demokratische republik kongo":"CD","demokratische volksrepublik korea":"KP",dominica:"DM",kdvr:"KP",dubai:"AE",ecuador:"EC","el salvador":"SV",england:"GB",eritrea:"ER",
"ehemalige jugoslawische republik mazedonien":"MK","f\u00f6derierte staaten von mikronesien":"FM","franz\u00f6sische s\u00fcd- und antarktisgebiete":"TF",futuna:"WF",georgien:"GE",ghana:"GH",gibraltar:"GI",grenada:"GD",grenadinen:"VC",guadeloupe:"GP",guam:"GU",guatemala:"GT",guernsey:"GG",guinea:"GN","guinea-bissau":"GW",guyana:"GY",haiti:"HT","heard und mcdonaldinseln":"HM",heardinsel:"HM",herzegowina:"BA",holland:"NL","heiliger stuhl":"VA",honduras:"HN",iran:"IR","iran, islamische republik":"IR",
"islamische republik iran":"IR","isle of man":"IM",israel:"IL","elfenbeink\u00fcste":"CI","jan mayen":"SJ",japan:"JP",jersey:"JE",kasachstan:"KZ",kiribati:"KI",korea:"KR","korea, demokatrische volksrepublik":"KP","korea, republik":"KR",kuwait:"KW","laos, demokratische volksrepublik":"LA",laos:"LA",lesotho:"LS",liberia:"LR","libysch-arabische volks-dschamahirija":"LY",liechtenstein:"LI",macau:"MO",mazedonien:"MK",malawi:"MW",malaysia:"MY",mali:"ML",malta:"MT",malwinen:"FK",mauritius:"MU",mayotte:"YT",
mcdonaldinseln:"HM","mikronesien, f\u00f6derierte staaten von":"FM",miquelon:"PM","moldau, republik":"MD",monaco:"MC",montenegro:"ME",montserrat:"MS",myanmar:"MM",namibia:"NA",nauru:"NR",nepal:"NP",nevis:"KN",nicaragua:"NI",niger:"NE",nigeria:"NG","pal\u00e4stinensische gebiete":"PS",oman:"OM","china, vr":"CN",pakistan:"PK",palau:"PW","pal\u00e4stina":"PS",panama:"PA",paraguay:"PY",peru:"PE",pitcairn:"PN","plurinationaler staat bolivien":"BO",polynesien:"PF",portugal:"PT",vrc:"CN","pr\u00edncipe":"ST",
"puerto rico":"PR","republik korea":"KR","republik moldau":"MD","singapur, republik":"SG","r\u00e9union":"RE","russische f\u00f6deration":"RU","st. barth\u00e9lemy":"BL","st. barts":"BL","st. helena, ascension und tristan da cunha":"SH","st. kitts":"KN","st. martin":"MF","st. pierre":"PM","st. pierre und miquelon":"PM","st. vincent":"VC",samoa:"WS","san marino":"SM","s\u00e3o tom\u00e9":"ST",schottland:"GB",senegal:"SN","sierra leone":"SL",salomonen:"SB",somalia:"SO","s\u00fcdgeorgien":"GS","s\u00fcdgeorgien und die s\u00fcdlichen sandwichinseln":"GS",
"s\u00fcdliche sandwichinseln":"GS","sri lanka":"LK","st. bartholom\u00e4us":"BL",sudan:"SD",svalbard:"SJ","svalbard und jan mayen":"SJ","arabische republik syrien":"SY",taiwan:"TW","tansania, vereinigte republik":"TZ",thailand:"TH","timor-leste":"TL",tobago:"TT",togo:"TG",tokelau:"TK",tonga:"TO",trinidad:"TT","tristan da cunha":"SH",turkmenistan:"TM",turksinseln:"TC",tuvalu:"TV","v.a.e.":"AE",vk:"GB",usa:"US",uganda:"UG",ukraine:"UA","vereinigtes k\u00f6nigreich":"GB","vereinigte republik tansania":"TZ",
"vereinigte staaten":"US","vereinigte staaten von amerika":"US",uruguay:"UY",vanuatu:"VU",vatikan:"VA",venezuela:"VE","venezuela, bolivarische republik":"VE",vietnam:"VN",jungferninseln:"VI","jungferninseln, britische":"VG","jungferninseln, amerikanische":"VI",wales:"GB",wallis:"WF",westsahara:"EH","\u00e9ire":"IE",Ascension:"AC",Andorra:"AD","Vereinigte Arabische Emirate":"AE",Afghanistan:"AF","Antigua und Barbuda":"AG",Anguilla:"AI",Albanien:"AL",Armenien:"AM","Niederl\u00e4ndische Antillen":"AN",
Angola:"AO",Antarktis:"AQ",Argentinien:"AR","Amerikanisch-Samoa":"AS","\u00d6sterreich":"AT",Australien:"AU",Aruba:"AW",Alandinseln:"AX",Aserbaidschan:"AZ","Bosnien und Herzegowina":"BA",Barbados:"BB",Bangladesch:"BD",Belgien:"BE","Burkina Faso":"BF",Bulgarien:"BG",Bahrain:"BH",Burundi:"BI",Benin:"BJ","St. Barth\u00e9lemy":"BL",Bermuda:"BM","Brunei Darussalam":"BN",Bolivien:"BO","Karibische Niederlande":"BQ",Brasilien:"BR",Bahamas:"BS",Bhutan:"BT",Bouvetinsel:"BV",Botsuana:"BW",Belarus:"BY",Belize:"BZ",
Kanada:"CA",Kokosinseln:"CC","Kongo-Kinshasa":"CD","Zentralafrikanische Republik":"CF","Kongo-Brazzaville":"CG",Schweiz:"CH","C\u00f4te d\u2019Ivoire":"CI",Cookinseln:"CK",Chile:"CL",Kamerun:"CM",China:"CN",Kolumbien:"CO","Clipperton-Insel":"CP","Costa Rica":"CR",Kuba:"CU","Kap Verde":"CV","Cura\u00e7ao":"CW",Weihnachtsinsel:"CX",Zypern:"CY","Tschechische Republik":"CZ",Deutschland:"DE","Diego Garcia":"DG",Dschibuti:"DJ","D\u00e4nemark":"DK",Dominica:"DM","Dominikanische Republik":"DO",Algerien:"DZ",
"Ceuta und Melilla":"EA",Ecuador:"EC",Estland:"EE","\u00c4gypten":"EG",Westsahara:"EH",Eritrea:"ER",Spanien:"ES","\u00c4thiopien":"ET","Europ\u00e4ische Union":"EU",Finnland:"FI",Fidschi:"FJ",Falklandinseln:"FK",Mikronesien:"FM","F\u00e4r\u00f6er":"FO",Frankreich:"FR",Gabun:"GA","Vereinigtes K\u00f6nigreich":"GB",Grenada:"GD",Georgien:"GE","Franz\u00f6sisch-Guayana":"GF",Guernsey:"GG",Ghana:"GH",Gibraltar:"GI","Gr\u00f6nland":"GL",Gambia:"GM",Guinea:"GN",Guadeloupe:"GP","\u00c4quatorialguinea":"GQ",
Griechenland:"GR","S\u00fcdgeorgien und die S\u00fcdlichen Sandwichinseln":"GS",Guatemala:"GT",Guam:"GU","Guinea-Bissau":"GW",Guyana:"GY","Sonderverwaltungszone Hongkong":"HK","Heard- und McDonald-Inseln":"HM",Honduras:"HN",Kroatien:"HR",Haiti:"HT",Ungarn:"HU","Kanarische Inseln":"IC",Indonesien:"ID",Irland:"IE",Israel:"IL","Isle of Man":"IM",Indien:"IN","Britisches Territorium im Indischen Ozean":"IO",Irak:"IQ",Iran:"IR",Island:"IS",Italien:"IT",Jersey:"JE",Jamaika:"JM",Jordanien:"JO",Japan:"JP",
Kenia:"KE",Kirgisistan:"KG",Kambodscha:"KH",Kiribati:"KI",Komoren:"KM","St. Kitts und Nevis":"KN","Demokratische Volksrepublik Korea":"KP","Republik Korea":"KR",Kuwait:"KW",Kaimaninseln:"KY",Kasachstan:"KZ",Laos:"LA",Libanon:"LB","St. Lucia":"LC",Liechtenstein:"LI","Sri Lanka":"LK",Liberia:"LR",Lesotho:"LS",Litauen:"LT",Luxemburg:"LU",Lettland:"LV",Libyen:"LY",Marokko:"MA",Monaco:"MC","Republik Moldau":"MD",Montenegro:"ME","St. Martin":"MF",Madagaskar:"MG",Marshallinseln:"MH",Mazedonien:"MK",Mali:"ML",
Myanmar:"MM",Mongolei:"MN","Sonderverwaltungszone Macao":"MO","N\u00f6rdliche Marianen":"MP",Martinique:"MQ",Mauretanien:"MR",Montserrat:"MS",Malta:"MT",Mauritius:"MU",Malediven:"MV",Malawi:"MW",Mexiko:"MX",Malaysia:"MY",Mosambik:"MZ",Namibia:"NA",Neukaledonien:"NC",Niger:"NE",Norfolkinsel:"NF",Nigeria:"NG",Nicaragua:"NI",Niederlande:"NL",Norwegen:"NO",Nepal:"NP",Nauru:"NR",Niue:"NU",Neuseeland:"NZ",Oman:"OM",Panama:"PA",Peru:"PE","Franz\u00f6sisch-Polynesien":"PF","Papua-Neuguinea":"PG",Philippinen:"PH",
Pakistan:"PK",Polen:"PL","St. Pierre und Miquelon":"PM",Pitcairninseln:"PN","Puerto Rico":"PR","Pal\u00e4stinensische Autonomiegebiete":"PS",Portugal:"PT",Palau:"PW",Paraguay:"PY",Katar:"QA","\u00c4u\u00dferes Ozeanien":"QO","R\u00e9union":"RE","Rum\u00e4nien":"RO",Serbien:"RS","Russische F\u00f6deration":"RU",Ruanda:"RW","Saudi-Arabien":"SA",Salomonen:"SB",Seychellen:"SC",Sudan:"SD",Schweden:"SE",Singapur:"SG","St. Helena":"SH",Slowenien:"SI","Svalbard und Jan Mayen":"SJ",Slowakei:"SK","Sierra Leone":"SL",
"San Marino":"SM",Senegal:"SN",Somalia:"SO",Suriname:"SR","S\u00fcdsudan":"SS","S\u00e3o Tom\u00e9 und Pr\u00edncipe":"ST","El Salvador":"SV","Sint Maarten":"SX",Syrien:"SY",Swasiland:"SZ","Tristan da Cunha":"TA","Turks- und Caicosinseln":"TC",Tschad:"TD","Franz\u00f6sische S\u00fcd- und Antarktisgebiete":"TF",Togo:"TG",Thailand:"TH",Tadschikistan:"TJ",Tokelau:"TK",Osttimor:"TL",Turkmenistan:"TM",Tunesien:"TN",Tonga:"TO","T\u00fcrkei":"TR","Trinidad und Tobago":"TT",Tuvalu:"TV",Taiwan:"TW",Tansania:"TZ",
Ukraine:"UA",Uganda:"UG","Amerikanisch-Ozeanien":"UM","Vereinigte Staaten":"US",Uruguay:"UY",Usbekistan:"UZ",Vatikanstadt:"VA","St. Vincent und die Grenadinen":"VC",Venezuela:"VE","Britische Jungferninseln":"VG","Amerikanische Jungferninseln":"VI",Vietnam:"VN",Vanuatu:"VU","Wallis und Futuna":"WF",Samoa:"WS",Jemen:"YE",Mayotte:"YT","S\u00fcdafrika":"ZA",Sambia:"ZM",Simbabwe:"ZW","Unbekannte Region":"ZZ",Asien:"142",Zentralasien:"143",Westasien:"145",Europa:"150",Osteuropa:"151",Nordeuropa:"154",Westeuropa:"155",
Lateinamerika:"419",Welt:"001",Afrika:"002",Nordamerika:"003","S\u00fcdamerika":"005",Ozeanien:"009",Westafrika:"011",Mittelamerika:"013",Ostafrika:"014",Nordafrika:"015",Zentralafrika:"017","S\u00fcdliches Afrika":"018",Amerika:"019","N\u00f6rdliches Amerika":"021",Karibik:"029",Ostasien:"030","S\u00fcdasien":"034","S\u00fcdostasien":"035","S\u00fcdeuropa":"039","Australien und Neuseeland":"053",Melanesien:"054","Mikronesisches Inselgebiet":"057",Polynesien:"061"};
ilib.data.ctrynames_fr={generated:!1,albanie:"AL","alg\u00e9rie":"DZ","samoa am\u00e9ricaines":"AS",andorre:"AD","antigua-et-barbuda":"AG",argentine:"AR","arm\u00e9nie":"AM",australie:"AU",autriche:"AT","azerba\u00efdjan":"AZ",ivb:"VG","bahre\u00efn":"BH",barbade:"BB","bi\u00e9lorussie":"BY",belgique:"BE","b\u00e9nin":"BJ",bermudes:"BM",bhoutan:"BT",bolivie:"BO","bosnie-herz\u00e9govine":"BA","br\u00e9sil":"BR","territoire de l\u2019oc\u00e9an indien britannique":"IO",bulgarie:"BG",cambodge:"KH",
cameroun:"CM","cap-vert":"CV","ca\u00efmans":"KY","r\u00e9publique d\u2019afrique centrale":"CF",tchad:"TD",chili:"CL",chine:"CN",colombie:"CO",comores:"KM","\u00eeles cook":"CK",croatie:"HR",chypre:"CY","r\u00e9publique tch\u00e8que":"CZ","c\u00f4te d\u2019ivoire":"CI","r.d.":"DO",rdc:"CD","r\u00e9publique d\u00e9mocratique du congo":"CD",danemark:"DK",dominique:"DM","r\u00e9publique dominicaine":"DO","timor oriental":"TL","\u00e9quateur":"EC","\u00e9gypte":"EG","guin\u00e9e \u00e9quatoriale":"GQ",
"\u00e9rythr\u00e9e":"ER",estonie:"EE","\u00e9thiopie":"ET",arym:"MK","\u00eeles falkland":"FK",falkland:"FK","\u00eeles f\u00e9ro\u00e9":"FO","\u00e9tats f\u00e9d\u00e9r\u00e9s de micron\u00e9sie":"FM",fidji:"FJ",finlande:"FI","ex-r\u00e9publique yougoslave de mac\u00e9doine":"MK","guyane fran\u00e7aise":"GF","polyn\u00e9sie fran\u00e7aise":"PF",gambie:"GM","g\u00e9orgie":"GE",allemagne:"DE",grenade:"GD","gr\u00e8ce":"GR",groenland:"GL",guadeloupe:"GP","guin\u00e9e":"GN","guin\u00e9e-bissau":"GW",
guyane:"GY","ha\u00efti":"HT",hongrie:"HU",islande:"IS",inde:"IN","indon\u00e9sie":"ID",irak:"IQ",irlande:"IE","isra\u00ebl":"IL",italie:"IT","jama\u00efque":"JM",japon:"JP",jordanie:"JO","kowe\u00eft":"KW",kirghizistan:"KG",lettonie:"LV",liban:"LB",libye:"LY",lituanie:"LT",macao:"MO",malaisie:"MY",malte:"MT",marianne:"MP","\u00eeles marshall":"MH",mauritanie:"MR",maurice:"MU",mexique:"MX","micron\u00e9sie":"FM",moldavie:"MD",mongolie:"MN","mont\u00e9n\u00e9gro":"ME",maroc:"MA",namibie:"NA","n\u00e9pal":"NP",
"pays-bas":"NL","antilles n\u00e9erlandaises":"AN","nouvelle-cal\u00e9donie":"NC","nouvelle-z\u00e9lande":"NZ","\u00eele norfolk":"NF","cor\u00e9e du nord":"KP","\u00eeles marianne du nord":"MP","norv\u00e8ge":"NO",palaos:"PW","autorit\u00e9 palestinienne":"PS","panam\u00e1":"PA","papouasie-nouvelle-guin\u00e9e":"PG","r\u00e9publique populaire de chine":"CN","p\u00e9rou":"PE",pologne:"PL","porto rico":"PR","r\u00e9publique de chine":"TW","r\u00e9publique d\u2019irlande":"IE",roumanie:"RO",russie:"RU",
"sainte-h\u00e9l\u00e8ne":"SH","saint-kitts-et-nevis":"KN","sainte-lucie":"LC","saint-vincent":"VC","saint-vincent et les grenadines":"VC","saint-marin":"SM","arabie saoudite":"SA","s\u00e9n\u00e9gal":"SN",serbie:"RS",singapour:"SG","saint-martin":"MF",slovaquie:"SK","slov\u00e9nie":"SI","\u00eeles solomon":"SB",somalie:"SO","afrique du sud":"ZA","cor\u00e9e du sud":"KR",espagne:"ES","ste-lucie":"LC","saint-pierre-et-miquelon":"PM",soudan:"SD","su\u00e8de":"SE",suisse:"CH",syrie:"SY","sao tom\u00e9-et-principe":"ST",
"ta\u00efwan":"TW",tadjikistan:"TJ",tanzanie:"TZ","tha\u00eflande":"TH","les bahamas":"BS","\u00eeles vierges britanniques":"VG","\u00eeles turks et caicos":"TC","\u00eeles vierges am\u00e9ricaines":"VI","trinit\u00e9-et-tobago":"TT",tunisie:"TN",turquie:"TR","turkm\u00e9nistan":"TM","\u00e9au":"AE",ouganda:"UG","\u00e9mirats arabes unis":"AE","royaume-uni":"GB","ouzb\u00e9kistan":"UZ",vatican:"VA","wallis-et-futuna":"WF","y\u00e9men":"YE",zambie:"ZM",afghanistan:"AF","\u00eeles aland":"AX",angola:"AO",
anguilla:"AI",antigua:"AG",arabie:"SA",aruba:"AW",ascension:"SH","i.v.b.":"VG",bahamas:"BS",bangladesh:"BD",barbuda:"AG","b\u00e9larus":"BY",belize:"BZ",bermude:"BM","r\u00e9publique bolivarienne du venezuela":"VE","bolivie, \u00e9tat plurinational de":"BO",bosnie:"BA",botswana:"BW","\u00eele bouvet":"BV","territoire britannique de l\u2019oc\u00e9an indien":"IO","brun\u00e9i":"BN","brun\u00e9i darussalam":"BN","burkina faso":"BF",burundi:"BI","r.c.a.":"CF","\u00eeles caicos":"TC",canada:"CA","\u00eeles du cap-vert":"CV",
rca:"CF","\u00eeles ca\u00efmans":"KY","r\u00e9publique centrafricaine":"CF","\u00eele christmas":"CX","\u00eeles cocos et keeling":"CC","\u00eeles cocos (keeling)":"CC","\u00eeles cocos":"CC",congo:"CD","congo, r\u00e9publique d\u00e9mocratique du":"CD","congo, r\u00e9publique d\u00e9mocratique":"CD","costa rica":"CR",cuba:"CU","r\u00e9publique populaire d\u00e9mocratique de cor\u00e9e":"KP",fjibouti:"DJ",rpdc:"KP",rd:"DO","duba\u00ef":"AE","el salvador":"SV",angleterre:"GB","a.r.y.m.":"MK",malouines:"FK",
"f\u00e9ro\u00e9":"FO",france:"FR","territoires fran\u00e7ais de l\u2019antarctique":"TF",futuna:"WF",gabon:"GA",ghana:"GH",gibraltar:"GI","grande-bretagne":"GB",grenadines:"VC",guam:"GU",guatemala:"GT",guernesey:"GG","\u00eeles heard et mcdonald":"HM","\u00eele heard":"HM","\u00eele heard et \u00eeles mcdonald":"HM","herz\u00e9govine":"BA",hollande:"NL","saint-si\u00e8ge":"VA",honduras:"HN","hong kong":"HK",iran:"IR","iran, r\u00e9publique islamique":"IR",iraq:"IQ","r\u00e9publique islamique d\u2019iran":"IR",
"\u00eele de man":"IM","jan mayen":"SJ",jersey:"JE",kazakhstan:"KZ",kenya:"KE",kiribati:"KI","cor\u00e9e":"KR","cor\u00e9e, r\u00e9publique populaire d\u00e9mocratique de":"KP","cor\u00e9e, r\u00e9publique de":"KR","r\u00e9publique d\u00e9mocratique populaire lao":"LA",laos:"LA",lesotho:"LS","lib\u00e9ria":"LR","jamahiriya arabe libyenne populaire et socialiste":"LY",liechtenstein:"LI",lithuanie:"LT",luxembourg:"LU","mac\u00e9doine":"MK","mac\u00e9doine, ex-r\u00e9publique yougoslave de":"MK","mac\u00e9doine, l\u2019ex-r\u00e9publique yougoslave de":"MK",
madagascar:"MG",malawi:"MW",maldives:"MV",mali:"ML",mariannes:"MP",marshalls:"MH",martinique:"MQ",mayotte:"YT","\u00eeles mcdonald":"HM","micron\u00e9sie, \u00e9tats f\u00e9d\u00e9r\u00e9s de":"FM",miquelon:"PM","moldavie, r\u00e9publique de":"MD",monaco:"MC",montserrat:"MS",mozambique:"MZ",myanmar:"MM",nauru:"NR",nevis:"KN",nicaragua:"NI",niger:"NE","nig\u00e9ria":"NG","\u00eeles mariannes du nord":"MP","territoires palestiniens occup\u00e9s":"PS",oman:"OM","r. p. chine":"CN","r. p. de chine":"CN",
"r.p. de chine":"CN",pakistan:"PK",palau:"PW",palestine:"PS","territoires palestiniens":"PS","territoires palestiniens, occup\u00e9s":"PS",panama:"PA",paraguay:"PY",philippines:"PH",pitcairn:"PN","\u00e9tat plurinational de bolivie":"BO","polyn\u00e9sie":"PF",portugal:"PT","rp chine":"CN",rpc:"CN",principe:"ST",qatar:"QA","r\u00e9publique de cor\u00e9e":"KR","r\u00e9publique de moldavie":"MD","r\u00e9publique de singapour":"SG","r\u00e9union":"RE","f\u00e9d\u00e9ration russe":"RU",rwanda:"RW","saint barth\u00e9lemy":"BL",
"saint-barth\u00e9lemy":"BL","sainte-h\u00e9l\u00e8ne, ascension et tristan da cunha":"SH","saint-kitts":"KN","saint-pierre":"PM",samoa:"WS","sao tom\u00e9":"ST","\u00e9cosse":"GB",seychelles:"SC","sierra leone":"SL",slovakie:"SK","\u00eeles salomon":"SB",salomon:"SB","g\u00e9orgie du sud":"GS","g\u00e9orgie du sud et \u00eeles sandwich du sud":"GS","\u00eeles sandwich du sud":"GS","sri lanka":"LK","st. barth\u00e9lemy":"BL","st barth":"BL","ste h\u00e9l\u00e8ne":"SH","ste h\u00e9l\u00e8ne, ascension et tristan da cunha":"SH",
"st-kitts":"KN","st-kitts-et-nevis":"KN","ste lucie":"LC","st-vincent":"VC","st barth\u00e9lemy":"BL","st. barth":"BL","st martin":"MF",suriname:"SR",svalbard:"SJ","svalbard et jan mayen":"SJ",swaziland:"SZ","r\u00e9publique arabe syrienne":"SY",taiwan:"TW","tanzanie, r\u00e9publique unie":"TZ","l\u2019ex-r\u00e9publique yougoslave de mac\u00e9doine":"MK","les grenadines":"VC","les pays-bas":"NL","les philippines":"PH","la r\u00e9publique de singapour":"SG","le soudan":"SD",tobago:"TT",togo:"TG",
tokelau:"TK",tonga:"TO","trinit\u00e9":"TT","tristan da cunha":"SH","\u00eeles turks":"TC",tuvalu:"TV","e.a.u.":"AE","r.u.":"GB","\u00e9.-u.":"US",eau:"AE",ru:"GB",ukraine:"UA","r\u00e9publique unie de tanzanie":"TZ","\u00e9tats-unis":"US","\u00eeles mineures \u00e9loign\u00e9es des \u00e9tats-unis":"UM","\u00e9tats-unis d\u2019am\u00e9rique":"US",uruguay:"UY","\u00e9-u":"US",iveu:"VI",vanuatu:"VU","cit\u00e9 du vatican":"VA","\u00e9tat de la cit\u00e9 du vatican":"VA",venezuela:"VE","venezuela, r\u00e9publique bolivarienne du":"VE",
"vi\u00eat nam":"VN",vietnam:"VN","\u00eeles vierges":"VI","\u00eeles vierges, britanniques":"VG","\u00eeles vierges, \u00e9-u":"VI","pays de galles":"GB",wallis:"WF","sahara occidental":"EH",zimbabwe:"ZW","\u00eeles \u00e5land":"AX","\u00cele de l\u2019Ascension":"AC",Andorre:"AD","\u00c9mirats arabes unis":"AE",Afghanistan:"AF","Antigua-et-Barbuda":"AG",Anguilla:"AI",Albanie:"AL","Arm\u00e9nie":"AM","Antilles n\u00e9erlandaises":"AN",Angola:"AO",Antarctique:"AQ",Argentine:"AR","Samoa am\u00e9ricaines":"AS",
Autriche:"AT",Australie:"AU",Aruba:"AW","\u00celes \u00c5land":"AX","Azerba\u00efdjan":"AZ","Bosnie-Herz\u00e9govine":"BA",Barbade:"BB",Bangladesh:"BD",Belgique:"BE","Burkina Faso":"BF",Bulgarie:"BG","Bahre\u00efn":"BH",Burundi:"BI","B\u00e9nin":"BJ","Saint-Barth\u00e9l\u00e9my":"BL",Bermudes:"BM","Brun\u00e9i Darussalam":"BN",Bolivie:"BO","Pays-Bas carib\u00e9ens":"BQ","Br\u00e9sil":"BR",Bahamas:"BS",Bhoutan:"BT","\u00cele Bouvet":"BV",Botswana:"BW","B\u00e9larus":"BY",Belize:"BZ",Canada:"CA","\u00celes Cocos [Keeling]":"CC",
"R\u00e9publique d\u00e9mocratique du Congo":"CD","R\u00e9publique centrafricaine":"CF","Congo-Brazzaville":"CG",Suisse:"CH","C\u00f4te d\u2019Ivoire":"CI","\u00celes Cook":"CK",Chili:"CL",Cameroun:"CM",Chine:"CN",Colombie:"CO","\u00cele Clipperton":"CP","Costa Rica":"CR",Cuba:"CU","Cap-Vert":"CV","Cura\u00e7ao":"CW","\u00cele Christmas":"CX",Chypre:"CY","R\u00e9publique tch\u00e8que":"CZ",Allemagne:"DE","Diego Garcia":"DG",Djibouti:"DJ",Danemark:"DK",Dominique:"DM","R\u00e9publique dominicaine":"DO",
"Alg\u00e9rie":"DZ","Ceuta et Melilla":"EA","\u00c9quateur":"EC",Estonie:"EE","\u00c9gypte":"EG","Sahara occidental":"EH","\u00c9rythr\u00e9e":"ER",Espagne:"ES","\u00c9thiopie":"ET","Union europ\u00e9enne":"EU",Finlande:"FI",Fidji:"FJ","\u00celes Malouines":"FK","\u00c9tats f\u00e9d\u00e9r\u00e9s de Micron\u00e9sie":"FM","\u00celes F\u00e9ro\u00e9":"FO",France:"FR",Gabon:"GA","Royaume-Uni":"GB",Grenade:"GD","G\u00e9orgie":"GE","Guyane fran\u00e7aise":"GF",Guernesey:"GG",Ghana:"GH",Gibraltar:"GI",
Groenland:"GL",Gambie:"GM","Guin\u00e9e":"GN",Guadeloupe:"GP","Guin\u00e9e \u00e9quatoriale":"GQ","Gr\u00e8ce":"GR","G\u00e9orgie du Sud et les \u00celes Sandwich du Sud":"GS",Guatemala:"GT",Guam:"GU","Guin\u00e9e-Bissau":"GW",Guyana:"GY","R.A.S. chinoise de Hong Kong":"HK","\u00celes Heard et MacDonald":"HM",Honduras:"HN",Croatie:"HR","Ha\u00efti":"HT",Hongrie:"HU","\u00celes Canaries":"IC","Indon\u00e9sie":"ID",Irlande:"IE","Isra\u00ebl":"IL","\u00cele de Man":"IM",Inde:"IN","Territoire britannique de l'oc\u00e9an Indien":"IO",
Irak:"IQ",Iran:"IR",Islande:"IS",Italie:"IT",Jersey:"JE","Jama\u00efque":"JM",Jordanie:"JO",Japon:"JP",Kenya:"KE",Kirghizistan:"KG",Cambodge:"KH",Kiribati:"KI",Comores:"KM","Saint-Kitts-et-Nevis":"KN","Cor\u00e9e du Nord":"KP","Cor\u00e9e du Sud":"KR","Kowe\u00eft":"KW","\u00celes Ca\u00efmans":"KY",Kazakhstan:"KZ",Laos:"LA",Liban:"LB","Sainte-Lucie":"LC",Liechtenstein:"LI","Sri Lanka":"LK","Lib\u00e9ria":"LR",Lesotho:"LS",Lituanie:"LT",Luxembourg:"LU",Lettonie:"LV",Libye:"LY",Maroc:"MA",Monaco:"MC",
Moldavie:"MD","Mont\u00e9n\u00e9gro":"ME","Saint-Martin [partie fran\u00e7aise]":"MF",Madagascar:"MG","\u00celes Marshall":"MH","Mac\u00e9doine":"MK",Mali:"ML",Myanmar:"MM",Mongolie:"MN","R.A.S. chinoise de Macao":"MO","\u00celes Mariannes du Nord":"MP",Martinique:"MQ",Mauritanie:"MR",Montserrat:"MS",Malte:"MT",Maurice:"MU",Maldives:"MV",Malawi:"MW",Mexique:"MX",Malaisie:"MY",Mozambique:"MZ",Namibie:"NA","Nouvelle-Cal\u00e9donie":"NC",Niger:"NE","\u00cele Norfolk":"NF","Nig\u00e9ria":"NG",Nicaragua:"NI",
"Pays-Bas":"NL","Norv\u00e8ge":"NO","N\u00e9pal":"NP",Nauru:"NR",Niue:"NU","Nouvelle-Z\u00e9lande":"NZ",Oman:"OM",Panama:"PA","P\u00e9rou":"PE","Polyn\u00e9sie fran\u00e7aise":"PF","Papouasie-Nouvelle-Guin\u00e9e":"PG",Philippines:"PH",Pakistan:"PK",Pologne:"PL","Saint-Pierre-et-Miquelon":"PM",Pitcairn:"PN","Porto Rico":"PR","Territoire palestinien":"PS",Portugal:"PT",Palaos:"PW",Paraguay:"PY",Qatar:"QA","r\u00e9gions \u00e9loign\u00e9es de l\u2019Oc\u00e9anie":"QO","R\u00e9union":"RE",Roumanie:"RO",
Serbie:"RS",Russie:"RU",Rwanda:"RW","Arabie saoudite":"SA","\u00celes Salomon":"SB",Seychelles:"SC",Soudan:"SD","Su\u00e8de":"SE",Singapour:"SG","Sainte-H\u00e9l\u00e8ne":"SH","Slov\u00e9nie":"SI","Svalbard et \u00cele Jan Mayen":"SJ",Slovaquie:"SK","Sierra Leone":"SL","Saint-Marin":"SM","S\u00e9n\u00e9gal":"SN",Somalie:"SO",Suriname:"SR","Soudan du Sud":"SS","Sao Tom\u00e9-et-Pr\u00edncipe":"ST","El Salvador":"SV","Saint-Martin [partie n\u00e9erlandaise]":"SX",Syrie:"SY",Swaziland:"SZ","Tristan da Cunha":"TA",
"\u00celes Turks et Ca\u00efques":"TC",Tchad:"TD","Terres australes fran\u00e7aises":"TF",Togo:"TG","Tha\u00eflande":"TH",Tadjikistan:"TJ",Tokelau:"TK","Timor oriental":"TL","Turkm\u00e9nistan":"TM",Tunisie:"TN",Tonga:"TO",Turquie:"TR","Trinit\u00e9-et-Tobago":"TT",Tuvalu:"TV","Ta\u00efwan":"TW",Tanzanie:"TZ",Ukraine:"UA",Ouganda:"UG","\u00celes \u00e9loign\u00e9es des \u00c9tats-Unis":"UM","\u00c9tats-Unis":"US",Uruguay:"UY","Ouzb\u00e9kistan":"UZ","\u00c9tat de la Cit\u00e9 du Vatican":"VA","Saint-Vincent-et-les Grenadines":"VC",
Venezuela:"VE","\u00celes Vierges britanniques":"VG","\u00celes Vierges des \u00c9tats-Unis":"VI","Vi\u00eat Nam":"VN",Vanuatu:"VU","Wallis-et-Futuna":"WF",Samoa:"WS","Y\u00e9men":"YE",Mayotte:"YT","Afrique du Sud":"ZA",Zambie:"ZM",Zimbabwe:"ZW","r\u00e9gion ind\u00e9termin\u00e9e":"ZZ",Asie:"142","Asie centrale":"143","Asie occidentale":"145",Europe:"150","Europe orientale":"151","Europe septentrionale":"154","Europe occidentale":"155","Am\u00e9rique latine":"419",Monde:"001",Afrique:"002","Am\u00e9rique du Nord":"003",
"Am\u00e9rique du Sud":"005","Oc\u00e9anie":"009","Afrique occidentale":"011","Am\u00e9rique centrale":"013","Afrique orientale":"014","Afrique septentrionale":"015","Afrique centrale":"017","Afrique australe":"018","Am\u00e9riques":"019","Am\u00e9rique septentrionale":"021","Cara\u00efbes":"029","Asie orientale":"030","Asie du Sud":"034","Asie du Sud-Est":"035","Europe m\u00e9ridionale":"039","Australie et Nouvelle-Z\u00e9lande":"053","M\u00e9lan\u00e9sie":"054","r\u00e9gion micron\u00e9sienne":"057",
"Polyn\u00e9sie":"061"};ilib.data.ctrynames_fr_CA={generated:!1,"\u00cele de l'Ascension":"AC","G\u00e9orgie du Sud et les \u00eeles Sandwich du Sud":"GS","Sao Tom\u00e9-et-Principe":"ST"};
ilib.data.ctrynames_es={generated:!1,"afganist\u00e1n":"AF",argelia:"DZ","samoa americana":"AS",anguila:"AI","antigua y barbuda":"AG","ascensi\u00f3n":"SH","azerbaiy\u00e1n":"AZ","islas v\u00edrgenes brit\u00e1nicas":"VG",bahrein:"BH",bielorrusia:"BY","b\u00e9lgica":"BE",belice:"BZ","ben\u00edn":"BJ",bermudas:"BM","but\u00e1n":"BT","bosnia y herzegovina":"BA",botsuana:"BW",brasil:"BR","territorio brit\u00e1nico del oc\u00e9ano \u00edndico":"IO",camboya:"KH","camer\u00fan":"CM","cabo verde":"CV","caim\u00e1n":"KY",
"rep\u00fablica centroafricana":"CF",comoras:"KM","islas cook":"CK",croacia:"HR",chipre:"CY","rep\u00fablica checa":"CZ","costa de marfil":"CI","rep\u00fablica dominicana":"DO",rdc:"CD","rep\u00fablica democr\u00e1tica del congo":"CD",dinamarca:"DK",yibuti:"DJ","timor oriental":"TL",egipto:"EG","guinea ecuatorial":"GQ","etiop\u00eda":"ET","antigua rep\u00fablica yugoslava de macedonia":"MK","islas malvinas":"FK",malvinas:"FK","islas feroe":"FO","estados federados de micronesia":"FM",fiyi:"FJ",finlandia:"FI",
francia:"FR","guayana francesa":"GF","polinesia francesa":"PF","gab\u00f3n":"GA",alemania:"DE",grecia:"GR",groenlandia:"GL",grenada:"GD",guadalupe:"GP","hait\u00ed":"HT","hungr\u00eda":"HU",islandia:"IS","ir\u00e1n":"IR",irak:"IQ",irlanda:"IE",italia:"IT","jap\u00f3n":"JP",jordania:"JO",kenia:"KE","kirguist\u00e1n":"KG",letonia:"LV","l\u00edbano":"LB",libia:"LY",lituania:"LT",luxemburgo:"LU",malasia:"MY",maldivas:"MV","mal\u00ed":"ML","islas marshall":"MH",martinica:"MQ",mauricio:"MU","m\u00e9xico":"MX",
moldavia:"MD","m\u00f3naco":"MC",marruecos:"MA","pa\u00edses bajos":"NL","antillas holandesas":"AN","nueva caledonia":"NC","nueva zelanda":"NZ","n\u00edger":"NE","isla norfolk":"NF","corea del norte":"KP","islas marianas del norte":"MP",noruega:"NO","om\u00e1n":"OM","pakist\u00e1n":"PK",palaos:"PW","autoridad palestina":"PS","panam\u00e1":"PA","papua nueva guinea":"PG","rep\u00fablica popular china":"CN","per\u00fa":"PE",filipinas:"PH",polonia:"PL","rep\u00fablica de china":"TW","rep\u00fablica de irlanda":"IE",
rumania:"RO",rusia:"RU",ruanda:"RW","reuni\u00f3n":"RE","santa helena":"SH","san crist\u00f3bal y nieves":"KN","santa luc\u00eda":"LC","san pedro y miquel\u00f3n":"PM","saint-vincent":"VC","san vicente y las granadinas":"VC","arabia saudita":"SA","sierra leona":"SL",singapur:"SG",eslovaquia:"SK",eslovenia:"SI","islas salom\u00f3n":"SB","sud\u00e1frica":"ZA","corea del sur":"KR","espa\u00f1a":"ES","santa lucia":"LC","sud\u00e1n":"SD",surinam:"SR",swazilandia:"SZ",suecia:"SE",suiza:"CH",siria:"SY",
"santo tom\u00e9 y pr\u00edncipe":"ST","taiw\u00e1n":"TW","tayikist\u00e1n":"TJ",tailandia:"TH","las bahamas":"BS",gambia:"GM","trinidad y tobago":"TT","t\u00fanez":"TN","turqu\u00eda":"TR","turkmenist\u00e1n":"TM",eau:"AE",ucrania:"UA","emiratos \u00e1rabes unidos":"AE","reino unido":"GB","uzbekist\u00e1n":"UZ","ciudad del vaticano":"VA","wallis y futuna":"WF","islas de \u00e5land":"AX",albania:"AL",andorra:"AD",angola:"AO",antigua:"AG",arabia:"SA",argentina:"AR",armenia:"AM",aruba:"AW",australia:"AU",
austria:"AT",ivb:"VG",bahamas:"BS",bangladesh:"BD",barbados:"BB",barbuda:"AG","rep\u00fablica bolivariana de venezuela":"VE",bolivia:"BO","bolivia, estado plurinacional de":"BO",bosnia:"BA","isla bouvet":"BV",brunei:"BN","brunei darussalam":"BN",bulgaria:"BG","burkina faso":"BF",burundi:"BI",rca:"CF","islas caicos":"TC","canad\u00e1":"CA","islas caim\u00e1n":"KY",chad:"TD",chile:"CL",china:"CN","isla christmas":"CX","islas cocos y keeling":"CC","islas cocos":"CC",colombia:"CO",congo:"CD","congo, rep\u00fablica democr\u00e1tica del":"CD",
"costa rica":"CR",cuba:"CU","rep\u00fablica popular democr\u00e1tica de corea":"KP",dominica:"DM",dprk:"KP",rd:"DO",dubai:"AE",ecuador:"EC","el salvador":"SV",inglaterra:"GB",eritrea:"ER",estonia:"EE",feroe:"FO","tierras australes de francia":"TF",futuna:"WF",georgia:"GE",ghana:"GH",gibraltar:"GI","gran breta\u00f1a":"GB",granadinas:"VC",guam:"GU",guatemala:"GT",guernsey:"GG",guinea:"GN","guinea-bissau":"GW",guyana:"GY","islas heard y mcdonald":"HM","isla heard":"HM",herzegovina:"BA",holanda:"NL",
"santa sede":"VA",honduras:"HN","hong kong":"HK",india:"IN",indonesia:"ID","ir\u00e1n, rep\u00fablica isl\u00e1mica de":"IR","rep\u00fablica isl\u00e1mica de ir\u00e1n":"IR","isla de man":"IM",israel:"IL",jamaica:"JM","jan mayen":"SJ",jersey:"JE","kazajist\u00e1n":"KZ",kiribati:"KI",corea:"KR","corea, rep\u00fablica popular democr\u00e1tica de":"KP","corea, rep\u00fablica de":"KR",kuwait:"KW","rep\u00fablica democr\u00e1tica popular lao":"LA",laos:"LA",lesoto:"LS",liberia:"LR","jamahiriya \u00e1rabe libia":"LY",
liechtenstein:"LI",macao:"MO",macedonia:"MK","macedonia, antigua rep\u00fablica yugoslava de":"MK","macedonia, la antigua rep\u00fablica yugoslava de":"MK",madagascar:"MG",malaui:"MW",mali:"ML",malta:"MT",marianas:"MP",marshalls:"MH",mauritania:"MR",mayotte:"YT","islas mcdonald":"HM",micronesia:"FM","micronesia, estados federados de":"FM","miquel\u00f3n":"PM",moldovia:"MD","moldovia, rep\u00fablica de":"MD",mongolia:"MN",montenegro:"ME",montserrat:"MS",mozambique:"MZ",myanmar:"MM",namibia:"NA",nauru:"NR",
nepal:"NP",nieves:"KN",nicaragua:"NI",nigeria:"NG","territorios ocupados palestinos":"PS","r. p. china":"CN",palestine:"PS","territorios palestinos":"PS",paraguay:"PY",pitcairn:"PN","estado plurinacional de bolivia":"BO",png:"PG",polinesia:"PF",portugal:"PT","rp china":"CN","r.p.c.":"CN","pr\u00edncipe":"ST","puerto rico":"PR",qatar:"QA","rep\u00fablica de corea":"KR","rep\u00fablica de moldovia":"MD","rep\u00fablica de singapur":"SG","federaci\u00f3n rusa":"RU","saint barth\u00e9lemy":"BL","san bartolom\u00e9":"BL",
"santa helena, ascensi\u00f3n y trist\u00e1n de acu\u00f1a":"SH","san cristobal":"KN","san mart\u00edn":"MF","san pedro":"PM","san vicente":"VC",samoa:"WS","san marino":"SM","santo tom\u00e9":"ST",escocia:"GB",senegal:"SN",serbia:"RS",seychelles:"SC",somalia:"SO","georgias del sur":"GS","islas georgias del sur y sandwich del sur":"GS","islas sandwich del sur":"GS","sri lanka":"LK","st barth\u00e9lemy":"BL","st. barth\u00e9lemy":"BL","s bartolom\u00e9":"BL","sta. elena":"SH","sta elena, ascensi\u00f3n y trist\u00e1n de acu\u00f1a":"SH",
"s. crist\u00f3bal":"KN","s crist\u00f3bal y nieves":"KN","sta luc\u00eda":"LC","s. mart\u00edn":"MF","s. vicente":"VC","s vicente y las granadinas":"VC","s. bartolom\u00e9":"BL",svalbard:"SJ","svalbard y jan mayen":"SJ","rep\u00fablica \u00e1rabe siria":"SY",tanzania:"TZ","tanzania, rep\u00fablica unida de":"TZ","la rep\u00fablica democr\u00e1tica del congo":"CD","la antigua rep\u00fablica yugoslava de macedonia":"MK","las granadinas":"VC","islas s\u00e1ndwich del sur":"GS","islas v\u00edrgenes de ee.uu.":"VI",
"timor-leste":"TL",tobago:"TT",togo:"TG",tokelau:"TK",tonga:"TO",trinidad:"TT","trist\u00e1n de acu\u00f1a":"SH","islas turcas y caicos":"TC","islas turcas":"TC",tuvalu:"TV","r.u.":"GB","ee.uu.":"US",uganda:"UG",ru:"GB","rep\u00fablica unida de tanzania":"TZ","estados unidos":"US","islas ultramarinas de estados unidos":"UM","estados unidos de am\u00e9rica":"US",uruguay:"UY",usvi:"VI",vanuatu:"VU",vaticano:"VA",venezuela:"VE","venezuela, rep\u00fablica bolivariana de":"VE",vietnam:"VN","islas v\u00edrgenes":"VI",
"islas v\u00edrgenes, ee.uu.":"VI",gales:"GB",wallis:"WF","sahara occidental":"EH",yemen:"YE",zambia:"ZM",zimbabue:"ZW","\u00e9ire":"IE","Isla de la Ascensi\u00f3n":"AC",Andorra:"AD","Emiratos \u00c1rabes Unidos":"AE","Afganist\u00e1n":"AF","Antigua y Barbuda":"AG",Anguila:"AI",Albania:"AL",Armenia:"AM","Antillas Neerlandesas":"AN",Angola:"AO","Ant\u00e1rtida":"AQ",Argentina:"AR","Samoa Americana":"AS",Austria:"AT",Australia:"AU",Aruba:"AW","Islas \u00c5land":"AX","Azerbaiy\u00e1n":"AZ","Bosnia-Herzegovina":"BA",
Barbados:"BB",Bangladesh:"BD","B\u00e9lgica":"BE","Burkina Faso":"BF",Bulgaria:"BG","Bahr\u00e9in":"BH",Burundi:"BI","Ben\u00edn":"BJ","San Bartolom\u00e9":"BL",Bermudas:"BM","Brun\u00e9i":"BN",Bolivia:"BO","Caribe neerland\u00e9s":"BQ",Brasil:"BR",Bahamas:"BS","But\u00e1n":"BT","Isla Bouvet":"BV",Botsuana:"BW",Bielorrusia:"BY",Belice:"BZ","Canad\u00e1":"CA","Islas Cocos":"CC","Rep\u00fablica Democr\u00e1tica del Congo":"CD","Rep\u00fablica Centroafricana":"CF","Congo - Brazzaville":"CG",Suiza:"CH",
"Costa de Marfil":"CI","Islas Cook":"CK",Chile:"CL","Camer\u00fan":"CM",China:"CN",Colombia:"CO","Isla Clipperton":"CP","Costa Rica":"CR",Cuba:"CU","Cabo Verde":"CV",Curazao:"CW","Isla Christmas":"CX",Chipre:"CY","Rep\u00fablica Checa":"CZ",Alemania:"DE","Diego Garc\u00eda":"DG",Yibuti:"DJ",Dinamarca:"DK",Dominica:"DM","Rep\u00fablica Dominicana":"DO",Argelia:"DZ","Ceuta y Melilla":"EA",Ecuador:"EC",Estonia:"EE",Egipto:"EG","S\u00e1hara Occidental":"EH",Eritrea:"ER","Espa\u00f1a":"ES","Etiop\u00eda":"ET",
"Uni\u00f3n Europea":"EU",Finlandia:"FI",Fiyi:"FJ","Islas Malvinas":"FK",Micronesia:"FM","Islas Feroe":"FO",Francia:"FR","Gab\u00f3n":"GA","Reino Unido":"GB",Grenada:"GD",Georgia:"GE","Guayana Francesa":"GF",Guernsey:"GG",Ghana:"GH",Gibraltar:"GI",Groenlandia:"GL",Gambia:"GM",Guinea:"GN",Guadalupe:"GP","Guinea Ecuatorial":"GQ",Grecia:"GR","Islas Georgia del Sur y Sandwich del Sur":"GS",Guatemala:"GT",Guam:"GU","Guinea-Bissau":"GW",Guyana:"GY","Regi\u00f3n Administrativa Especial de Hong Kong de la Rep\u00fablica Popular China":"HK",
"Islas Heard y McDonald":"HM",Honduras:"HN",Croacia:"HR","Hait\u00ed":"HT","Hungr\u00eda":"HU","Islas Canarias":"IC",Indonesia:"ID",Irlanda:"IE",Israel:"IL","Isla de Man":"IM",India:"IN","Territorio Brit\u00e1nico del Oc\u00e9ano \u00cdndico":"IO",Iraq:"IQ","Ir\u00e1n":"IR",Islandia:"IS",Italia:"IT",Jersey:"JE",Jamaica:"JM",Jordania:"JO","Jap\u00f3n":"JP",Kenia:"KE","Kirguist\u00e1n":"KG",Camboya:"KH",Kiribati:"KI",Comoras:"KM","San Crist\u00f3bal y Nieves":"KN","Corea del Norte":"KP","Corea del Sur":"KR",
Kuwait:"KW","Islas Caim\u00e1n":"KY","Kazajist\u00e1n":"KZ",Laos:"LA","L\u00edbano":"LB","Santa Luc\u00eda":"LC",Liechtenstein:"LI","Sri Lanka":"LK",Liberia:"LR",Lesoto:"LS",Lituania:"LT",Luxemburgo:"LU",Letonia:"LV",Libia:"LY",Marruecos:"MA","M\u00f3naco":"MC",Moldavia:"MD",Montenegro:"ME","San Mart\u00edn":"MF",Madagascar:"MG","Islas Marshall":"MH",Macedonia:"MK",Mali:"ML","Myanmar [Birmania]":"MM",Mongolia:"MN","Regi\u00f3n Administrativa Especial de Macao de la Rep\u00fablica Popular China":"MO",
"Islas Marianas del Norte":"MP",Martinica:"MQ",Mauritania:"MR",Montserrat:"MS",Malta:"MT",Mauricio:"MU",Maldivas:"MV",Malaui:"MW","M\u00e9xico":"MX",Malasia:"MY",Mozambique:"MZ",Namibia:"NA","Nueva Caledonia":"NC","N\u00edger":"NE","Isla Norfolk":"NF",Nigeria:"NG",Nicaragua:"NI","Pa\u00edses Bajos":"NL",Noruega:"NO",Nepal:"NP",Nauru:"NR","Isla Niue":"NU","Nueva Zelanda":"NZ","Om\u00e1n":"OM","Panam\u00e1":"PA","Per\u00fa":"PE","Polinesia Francesa":"PF","Pap\u00faa Nueva Guinea":"PG",Filipinas:"PH",
"Pakist\u00e1n":"PK",Polonia:"PL","San Pedro y Miquel\u00f3n":"PM","Islas Pitcairn":"PN","Puerto Rico":"PR","Territorios Palestinos":"PS",Portugal:"PT",Palau:"PW",Paraguay:"PY",Qatar:"QA","Territorios alejados de Ocean\u00eda":"QO","Reuni\u00f3n":"RE","Ruman\u00eda":"RO",Serbia:"RS",Rusia:"RU",Ruanda:"RW","Arabia Saud\u00ed":"SA","Islas Salom\u00f3n":"SB",Seychelles:"SC","Sud\u00e1n":"SD",Suecia:"SE",Singapur:"SG","Santa Elena":"SH",Eslovenia:"SI","Svalbard y Jan Mayen":"SJ",Eslovaquia:"SK","Sierra Leona":"SL",
"San Marino":"SM",Senegal:"SN",Somalia:"SO",Surinam:"SR","Sud\u00e1n del Sur":"SS","Santo Tom\u00e9 y Pr\u00edncipe":"ST","El Salvador":"SV","Sint Maarten":"SX",Siria:"SY",Suazilandia:"SZ","Trist\u00e1n da Cunha":"TA","Islas Turcas y Caicos":"TC",Chad:"TD","Territorios Australes Franceses":"TF",Togo:"TG",Tailandia:"TH","Tayikist\u00e1n":"TJ",Tokelau:"TK","Timor Oriental":"TL","Turkmenist\u00e1n":"TM","T\u00fanez":"TN",Tonga:"TO","Turqu\u00eda":"TR","Trinidad y Tobago":"TT",Tuvalu:"TV","Taiw\u00e1n":"TW",
Tanzania:"TZ",Ucrania:"UA",Uganda:"UG","Islas menores alejadas de los Estados Unidos":"UM","Estados Unidos":"US",Uruguay:"UY","Uzbekist\u00e1n":"UZ","Ciudad del Vaticano":"VA","San Vicente y las Granadinas":"VC",Venezuela:"VE","Islas V\u00edrgenes Brit\u00e1nicas":"VG","Islas V\u00edrgenes de los Estados Unidos":"VI",Vietnam:"VN",Vanuatu:"VU","Wallis y Futuna":"WF",Samoa:"WS",Yemen:"YE",Mayotte:"YT","Sud\u00e1frica":"ZA",Zambia:"ZM",Zimbabue:"ZW","Regi\u00f3n desconocida":"ZZ",Asia:"142","Asia central":"143",
"Asia occidental":"145",Europa:"150","Europa oriental":"151","Europa septentrional":"154","Europa occidental":"155","Latinoam\u00e9rica":"419",Mundo:"001","\u00c1frica":"002","Am\u00e9rica del Norte":"003","Suram\u00e9rica":"005","Ocean\u00eda":"009","\u00c1frica occidental":"011","Centroam\u00e9rica":"013","\u00c1frica oriental":"014","\u00c1frica septentrional":"015","\u00c1frica central":"017","\u00c1frica meridional":"018","Am\u00e9ricas":"019","Norteam\u00e9rica":"021",Caribe:"029","Asia oriental":"030",
"Asia meridional":"034","Sudeste asi\u00e1tico":"035","Europa meridional":"039",Australasia:"053",Melanesia:"054","Micronesia [057]":"057",Polinesia:"061"};ilib.data.ctrynames_es_ES={generated:!1,"costa de marfil":"CI"};
ilib.data.ctrynames_id={Asia:"142","Asia Tengah":"143","Asia Barat":"145",Eropa:"150","Eropa Timur":"151","Eropa Utara":"154","Eropa Barat":"155","Amerika Latin":"419",Dunia:"001",Afrika:"002","Amerika Utara":"003","Amerika Selatan":"005",Oseania:"009","Afrika Barat":"011","Amerika Tengah":"013","Afrika Timur":"014","Afrika Utara":"015","Afrika Tengah":"017","Afrika Bagian Selatan":"018",Amerika:"019","Amerika Bagian Utara":"021","Kepulauan Karibia":"029","Asia Timur":"030","Asia Selatan":"034","Asia Tenggara":"035",
"Eropa Selatan":"039",Australasia:"053",Melanesia:"054","Wilayah Mikronesia":"057",Polinesia:"061","Pulau Ascension":"AC",Andora:"AD","Uni Emirat Arab":"AE",Afganistan:"AF","Antigua dan Barbuda":"AG",Anguilla:"AI",Albania:"AL",Armenia:"AM","Antilla Belanda":"AN",Angola:"AO",Antarktika:"AQ",Argentina:"AR","Samoa Amerika":"AS",Austria:"AT",Australia:"AU",Aruba:"AW","Kepulauan Aland":"AX",Azerbaijan:"AZ","Bosnia dan Herzegovina":"BA",Barbados:"BB",Bangladesh:"BD",Belgia:"BE","Burkina Faso":"BF",Bulgaria:"BG",
Bahrain:"BH",Burundi:"BI",Benin:"BJ","Saint Barthelemy":"BL",Bermuda:"BM",Brunei:"BN",Bolivia:"BO","Karibia Belanda":"BQ",Brasil:"BR",Bahama:"BS",Bhutan:"BT","Pulau Bouvet":"BV",Botswana:"BW",Belarus:"BY",Belize:"BZ",Kanada:"CA","Kepulauan Cocos":"CC","Kongo - Kinshasa":"CD","Republik Afrika Tengah":"CF","Kongo - Brazzaville":"CG",Swiss:"CH","Cote d'Ivoire":"CI","Kepulauan Cook":"CK",Cile:"CL",Kamerun:"CM",China:"CN",Kolombia:"CO","Pulau Clipperton":"CP","Kosta Rika":"CR",Kuba:"CU","Tanjung Verde":"CV",
"Cura\u00e7ao":"CW","Pulau Christmas":"CX",Siprus:"CY","Republik Cheska":"CZ",Jerman:"DE","Diego Garcia":"DG",Jibuti:"DJ",Denmark:"DK",Dominika:"DM","Republik Dominika":"DO",Aljazair:"DZ","Ceuta dan Melilla":"EA",Ekuador:"EC",Estonia:"EE",Mesir:"EG","Sahara Barat":"EH",Eritrea:"ER",Spanyol:"ES",Etiopia:"ET","Uni Eropa":"EU",Finlandia:"FI",Fiji:"FJ","Kepulauan Malvinas":"FK",Mikronesia:"FM","Kepulauan Faroe":"FO",Prancis:"FR",Gabon:"GA",Inggris:"GB",Grenada:"GD",Georgia:"GE","Guyana Prancis":"GF",
Guernsey:"GG",Ghana:"GH",Gibraltar:"GI",Grinlandia:"GL",Gambia:"GM",Guinea:"GN",Guadeloupe:"GP","Guinea Ekuatorial":"GQ",Yunani:"GR","Kepulauan South Sandwich dan South Georgia":"GS",Guatemala:"GT",Guam:"GU","Guinea-Bissau":"GW",Guyana:"GY","Hong Kong SAR China":"HK","Pulau Heard dan Kepulauan McDonald":"HM",Honduras:"HN",Kroasia:"HR",Haiti:"HT",Hungaria:"HU","Kepulauan Canary":"IC",Indonesia:"ID",Irlandia:"IE",Israel:"IL","Isle of Man":"IM",India:"IN","Wilayah Inggris di Samudra Hindia":"IO",Irak:"IQ",
Iran:"IR",Islandia:"IS",Italia:"IT",Jersey:"JE",Jamaika:"JM",Yordania:"JO",Jepang:"JP",Kenya:"KE",Kirgistan:"KG",Kamboja:"KH",Kiribati:"KI",Komoro:"KM","Saint Kitts dan Nevis":"KN","Korea Utara":"KP","Korea Selatan":"KR",Kuwait:"KW","Kepulauan Kayman":"KY",Kazakstan:"KZ",Laos:"LA",Lebanon:"LB","Saint Lucia":"LC",Liechtenstein:"LI","Sri Lanka":"LK",Liberia:"LR",Lesotho:"LS",Lituania:"LT",Luksemburg:"LU",Latvia:"LV",Libia:"LY",Maroko:"MA",Monako:"MC",Moldova:"MD",Montenegro:"ME","Saint Martin":"MF",
Madagaskar:"MG","Kepulauan Marshall":"MH",Makedonia:"MK",Mali:"ML",Myanmar:"MM",Mongolia:"MN","Makau SAR China":"MO","Kepulauan Mariana Utara":"MP",Martinik:"MQ",Mauritania:"MR",Montserrat:"MS",Malta:"MT",Mauritius:"MU",Maladewa:"MV",Malawi:"MW",Meksiko:"MX",Malaysia:"MY",Mozambik:"MZ",Namibia:"NA","Kaledonia Baru":"NC",Niger:"NE","Kepulauan Norfolk":"NF",Nigeria:"NG",Nikaragua:"NI",Belanda:"NL",Norwegia:"NO",Nepal:"NP",Nauru:"NR",Niue:"NU","Selandia Baru":"NZ",Oman:"OM",Panama:"PA",Peru:"PE","Polinesia Prancis":"PF",
"Papua Nugini":"PG",Filipina:"PH",Pakistan:"PK",Polandia:"PL","Saint Pierre dan Miquelon":"PM","Kepulauan Pitcairn":"PN","Puerto Riko":"PR","Otoritas Palestina":"PS",Portugal:"PT",Palau:"PW",Paraguay:"PY",Qatar:"QA","Oseania Luar":"QO","R\u00e9union":"RE",Rumania:"RO",Serbia:"RS",Rusia:"RU",Rwanda:"RW","Arab Saudi":"SA","Kepulauan Solomon":"SB",Seychelles:"SC",Sudan:"SD",Swedia:"SE",Singapura:"SG","Saint Helena":"SH",Slovenia:"SI","Kepulauan Svalbard dan Jan Mayen":"SJ",Slovakia:"SK","Sierra Leone":"SL",
"San Marino":"SM",Senegal:"SN",Somalia:"SO",Suriname:"SR","Sudan Selatan":"SS","Sao Tome dan Principe":"ST","El Salvador":"SV","Sint Maarten":"SX",Suriah:"SY",Swaziland:"SZ","Tristan da Cunha":"TA","Kepulauan Turks dan Caicos":"TC",Cad:"TD","Teritori Kutub Selatan Prancis":"TF",Togo:"TG",Thailand:"TH",Tajikistan:"TJ",Tokelau:"TK","Timor Leste":"TL",Turkimenistan:"TM",Tunisia:"TN",Tonga:"TO",Turki:"TR","Trinidad dan Tobago":"TT",Tuvalu:"TV",Taiwan:"TW",Tanzania:"TZ",Ukraina:"UA",Uganda:"UG","Kepulauan Terluar A.S.":"UM",
"Amerika Serikat":"US",Uruguay:"UY",Uzbekistan:"UZ",Vatikan:"VA","Saint Vincent dan Grenadines":"VC",Venezuela:"VE","Kepulauan Virgin Inggris":"VG","Kepulauan Virgin A.S.":"VI",Vietnam:"VN",Vanuatu:"VU","Kepulauan Wallis dan Futuna":"WF",Samoa:"WS",Yaman:"YE",Mayotte:"YT","Afrika Selatan":"ZA",Zambia:"ZM",Zimbabwe:"ZW","Wilayah Tidak Dikenal":"ZZ"};
ilib.data.ctrynames_it={generated:!1,"samoa americane":"AS","antigua e barbuda":"AG",ascensione:"SH",azerbaigian:"AZ","isole vergini britanniche":"VG",bielorussia:"BY",belgio:"BE","bosnia erzegovina":"BA",brasile:"BR","territori britannici dell\u2019oceano indiano":"IO",cambogia:"KH",camerun:"CM","capo verde":"CV",cayman:"KY","repubblica centrafricana":"CF",ciad:"TD",cile:"CL",cina:"CN","isole cook":"CK",croazia:"HR",cipro:"CY","repubblica ceca":"CZ","costa d\u2019avorio":"CI","rep. dominicana":"DO",
"repubblica democratica del congo":"CD",danimarca:"DK",gibuti:"DJ","repubblica dominicana":"DO","timor est":"TL",egitto:"EG","guinea equatoriale":"GQ",etiopia:"ET",macedonia:"MK","isole falkland":"FK",falkland:"FK","isole f\u00e6r \u00f8er":"FO","stati federati di micronesia":"FM",finlandia:"FI","repubblica ex jugoslava di macedonia":"MK",francia:"FR","guiana francese":"GF","polinesia francese":"PF",germania:"DE",gibilterra:"GI",grecia:"GR",groenlandia:"GL",guadalupa:"GP",ungheria:"HU",islanda:"IS",
irlanda:"IE",israele:"IL",italia:"IT",giamaica:"JM",giappone:"JP",giordania:"JO",kenia:"KE",kirghizistan:"KG",lettonia:"LV",libano:"LB",libia:"LY",liechtenstein:"LI",lituania:"LT",lussemburgo:"LU",macao:"MO",malesia:"MY",maldive:"MV",marianne:"MP","isole marshall":"MH",martinica:"MQ",messico:"MX",moldavia:"MD","principato di monaco":"MC",marocco:"MA",mozambico:"MZ","paesi bassi":"NL","antille olandesi":"AN","nuova caledonia":"NC","nuova zelanda":"NZ","isola norfolk":"NF","corea del nord":"KP","isole marianne settentrionali":"MP",
norvegia:"NO","autorit\u00e0 palestinese":"PS","papua nuova guinea":"PG","repubblica popolare cinese":"CN","per\u00f9":"PE",filippine:"PH",polonia:"PL",portogallo:"PT","porto rico":"PR","repubblica di cona":"TW",ruanda:"RW","sant\u2019elena":"SH","saint kitts e nevis":"KN","santa lucia":"LC","saint pierre e miquelon":"PM","saint-vincent":"VC","saint vincent e le grenadines":"VC","arabia saudita":"SA",slovacchia:"SK","isole salomone":"SB",sudafrica:"ZA","corea del sud":"KR",spagna:"ES","st. pierre e miquelon":"PM",
svezia:"SE",svizzera:"CH",siria:"SY","sao tome e principe":"ST",tagikistan:"TJ",tailandia:"TH","le bahamas":"BS","isole cayman":"KY",gambia:"GM","isole turks e caicos":"TC","trinidad e tobago":"TT",turchia:"TR","isole vergini statunitensi":"VI",eau:"AE",ucraina:"UA","emirati arabi uniti":"AE","regno unito":"GB","citt\u00e0 del vaticano":"VA","wallis e futuna":"WF",afghanistan:"AF","isole \u00e5land":"AX",albania:"AL",algeria:"DZ",andorra:"AD",angola:"AO",anguilla:"AI",antigua:"AG",arabia:"SA",argentina:"AR",
armenia:"AM",aruba:"AW",australia:"AU",austria:"AT",bahamas:"BS",bahrain:"BH",bangladesh:"BD",barbados:"BB",barbuda:"AG",belize:"BZ",benin:"BJ",bermuda:"BM",bhutan:"BT","repubblica bolivariana del venezuela":"VE",bolivia:"BO","bolivia, stato plurinazionale della":"BO",bosnia:"BA",botswana:"BW","isola bouvet":"BV","territorio britannico dell'oceano indiano":"IO",brunei:"BN","brunei darussalam":"BN",bulgaria:"BG","burkina faso":"BF",burundi:"BI","isole caicos":"TC",canada:"CA","isole di capo verde":"CV",
"isola christmas":"CX","isole cocos e keeling":"CC","isole cocos":"CC",colombia:"CO",comoros:"KM",congo:"CD","congo, repubblica democratica del":"CD","costa rica":"CR",cuba:"CU","repubblica democratica popolare di corea":"KP",dominica:"DM",dubai:"AE",ecuador:"EC","el salvador":"SV",inghilterra:"GB",eritrea:"ER",estonia:"EE","isole falklands":"FK",falklands:"FK","isole faeroer":"FO",faeroer:"FO",fiji:"FJ","guyana francese":"GF","territori francesi meridionali":"TF",futuna:"WF",gabon:"GA",georgia:"GE",
ghana:"GH","gran bretagna":"GB",grenada:"GD",grenadine:"VC",guam:"GU",guatemala:"GT",guernsey:"GG",guinea:"GN","guinea-bissau":"GW",guyana:"GY",haiti:"HT","isole heard e mcdonald":"HM","isola heard":"HM","isola heard ed isole mcdonald":"HM",erzegovina:"BA",olanda:"NL","santa sede":"VA",honduras:"HN","hong kong":"HK",india:"IN",indonesia:"ID",iran:"IR","repubblica islamica dell'iran":"IR",iraq:"IQ","isola di man":"IM","costa d'avorio":"CI","jan mayen":"SJ",jersey:"JE",kazakistan:"KZ",kiribati:"KI",
corea:"KR","corea, repubblica democratica popolare di":"KP","corea, repubblica di":"KR",kuwait:"KW","repubblica popolare democratica del laos":"LA",laos:"LA",lesotho:"LS",liberia:"LR","jamahiriya araba di libia":"LY","macedonia, repubblica ex jugoslava di":"MK",madagascar:"MG",malawi:"MW",mali:"ML",malta:"MT",malvine:"FK",marshall:"MH",mauritania:"MR",mauritius:"MU",mayotte:"YT","isole mcdonald":"HM",micronesia:"FM","micronesia, stati federati della":"FM",miquelon:"PM","moldavia, repubblica di":"MD",
monaco:"MC",mongolia:"MN",montenegro:"ME",myanmar:"MM",namibia:"NA",nauru:"NR",nepal:"NP",nevis:"KN",nicaragua:"NI",niger:"NE",nigeria:"NG","territori occupati palestinesi":"PS",oman:"OM","r. p. cinese":"CN",pakistan:"PK",palau:"PW",palestina:"PS","territori palestinesi":"PS",panama:"PA",paraguay:"PY",pitcairn:"PN","stato plurinazionale della bolivia":"BO",polinesia:"PF",principe:"ST",qatar:"QA","repubblica di cina":"TW","repubblica della corea":"KR","repubblica della moldavia":"MD","repubblica di singapore ":"SG",
riunione:"RE",romania:"RO",russia:"RU","federazione russa":"RU","saint-barth\u00e9lemy":"BL","san barth":"BL","sant'elena":"SH","sant'elena, ascensione e tristan da cunha":"SH","saint kitts":"KN","saint-pierre":"PM","saint-pierre e miquelon":"PM","saint vincent":"VC",samoa:"WS","san marino":"SM","sao tome":"ST",scozia:"GB",senegal:"SN",serbia:"RS",seychelles:"SC","sierra leone":"SL",singapore:"SG",slovenia:"SI",salomone:"SB",somalia:"SO","georgia del sud":"GS","georgia del sud e isole sandwich meridionali":"GS",
"isole sandwich meridionali":"GS","sri lanka":"LK","st. lucia":"LC","st. martin":"MF","saint pierre":"PM","st. vincent":"VC",sudan:"SD",suriname:"SR",svalbard:"SJ","svalbard e jan mayen":"SJ",swaziland:"SZ","repubblica araba di siria":"SY",taiwan:"TW",tanzania:"TZ","tanzania, repubblica unita di":"TZ","le grenadines":"VC","repubblica di singapore":"SG",tobago:"TT",togo:"TG",tokelau:"TK",tonga:"TO",trinidad:"TT","tristan da cunha":"SH",tunisia:"TN",turkmenistan:"TM","isole turks":"TC",tuvalu:"TV",
usa:"US",uganda:"UG","repubblica unita di tanzania":"TZ","stati uniti":"US","isole minori esterne degli stati uniti":"UM","stati uniti d\u2019america":"US",uruguay:"UY",uzbekistan:"UZ",vanuatu:"VU",vaticano:"VA",venezuela:"VE","venezuela, repubblica bolivariana del":"VE",vietnam:"VN","isole vergini":"VI",galles:"GB",wallis:"WF","sahara occidentale":"EH",yemen:"YE",zambia:"ZM",zimbabwe:"ZW",eire:"IE","Isola di Ascensione":"AC",Andorra:"AD","Emirati Arabi Uniti":"AE",Afghanistan:"AF","Antigua e Barbuda":"AG",
Anguilla:"AI",Albania:"AL",Armenia:"AM","Antille Olandesi":"AN",Angola:"AO",Antartide:"AQ",Argentina:"AR","Samoa Americane":"AS",Austria:"AT",Australia:"AU",Aruba:"AW","Isole Aland":"AX",Azerbaigian:"AZ","Bosnia Erzegovina":"BA",Barbados:"BB",Bangladesh:"BD",Belgio:"BE","Burkina Faso":"BF",Bulgaria:"BG",Bahrein:"BH",Burundi:"BI",Benin:"BJ","San Bartolomeo":"BL",Bermuda:"BM",Brunei:"BN",Bolivia:"BO","Caraibi Olandesi":"BQ",Brasile:"BR",Bahamas:"BS",Bhutan:"BT","Isola Bouvet":"BV",Botswana:"BW",Bielorussia:"BY",
Belize:"BZ",Canada:"CA","Isole Cocos":"CC","Congo - Kinshasa":"CD","Repubblica Centrafricana":"CF",Congo:"CG",Svizzera:"CH","Costa d\u2019Avorio":"CI","Isole Cook":"CK",Cile:"CL",Camerun:"CM",Cina:"CN",Colombia:"CO","Isola di Clipperton":"CP","Costa Rica":"CR",Cuba:"CU","Capo Verde":"CV","Cura\u00e7ao":"CW","Isola di Christmas":"CX",Cipro:"CY","Repubblica Ceca":"CZ",Germania:"DE","Diego Garcia":"DG",Gibuti:"DJ",Danimarca:"DK",Dominica:"DM","Repubblica Dominicana":"DO",Algeria:"DZ","Ceuta e Melilla":"EA",
Ecuador:"EC",Estonia:"EE",Egitto:"EG","Sahara Occidentale":"EH",Eritrea:"ER",Spagna:"ES",Etiopia:"ET","Unione Europea":"EU",Finlandia:"FI",Figi:"FJ","Isole Falkland":"FK",Micronesia:"FM","Isole Faroe":"FO",Francia:"FR",Gabon:"GA","Regno Unito":"GB",Grenada:"GD",Georgia:"GE","Guiana Francese":"GF",Guernsey:"GG",Ghana:"GH",Gibilterra:"GI",Groenlandia:"GL",Gambia:"GM",Guinea:"GN",Guadalupa:"GP","Guinea Equatoriale":"GQ",Grecia:"GR","Georgia del Sud e Isole Sandwich del Sud":"GS",Guatemala:"GT",Guam:"GU",
"Guinea-Bissau":"GW",Guyana:"GY","RAS di Hong Kong":"HK","Isole Heard ed Isole McDonald":"HM",Honduras:"HN",Croazia:"HR",Haiti:"HT",Ungheria:"HU","Isole Canarie":"IC",Indonesia:"ID",Irlanda:"IE",Israele:"IL","Isola di Man":"IM",India:"IN","Territorio Britannico dell\u2019Oceano Indiano":"IO",Iraq:"IQ",Iran:"IR",Islanda:"IS",Italia:"IT",Jersey:"JE",Giamaica:"JM",Giordania:"JO",Giappone:"JP",Kenya:"KE",Kirghizistan:"KG",Cambogia:"KH",Kiribati:"KI",Comore:"KM","Saint Kitts e Nevis":"KN","Corea del Nord":"KP",
"Corea del Sud":"KR",Kuwait:"KW","Isole Cayman":"KY",Kazakistan:"KZ",Laos:"LA",Libano:"LB","Saint Lucia":"LC",Liechtenstein:"LI","Sri Lanka":"LK",Liberia:"LR",Lesotho:"LS",Lituania:"LT",Lussemburgo:"LU",Lettonia:"LV",Libia:"LY",Marocco:"MA",Monaco:"MC",Moldavia:"MD",Montenegro:"ME","Saint Martin":"MF",Madagascar:"MG","Isole Marshall":"MH","Repubblica di Macedonia":"MK",Mali:"ML",Myanmar:"MM",Mongolia:"MN","RAS di Macao":"MO","Isole Marianne Settentrionali":"MP",Martinica:"MQ",Mauritania:"MR",Montserrat:"MS",
Malta:"MT",Mauritius:"MU",Maldive:"MV",Malawi:"MW",Messico:"MX",Malesia:"MY",Mozambico:"MZ",Namibia:"NA","Nuova Caledonia":"NC",Niger:"NE","Isola Norfolk":"NF",Nigeria:"NG",Nicaragua:"NI","Paesi Bassi":"NL",Norvegia:"NO",Nepal:"NP",Nauru:"NR",Niue:"NU","Nuova Zelanda":"NZ",Oman:"OM",Panama:"PA","Per\u00f9":"PE","Polinesia Francese":"PF","Papua Nuova Guinea":"PG",Filippine:"PH",Pakistan:"PK",Polonia:"PL","Saint Pierre e Miquelon":"PM",Pitcairn:"PN",Portorico:"PR","Territori palestinesi":"PS",Portogallo:"PT",
Palau:"PW",Paraguay:"PY",Qatar:"QA","Oceania lontana":"QO","R\u00e9union":"RE",Romania:"RO",Serbia:"RS","Federazione Russa":"RU",Ruanda:"RW","Arabia Saudita":"SA","Isole Solomon":"SB",Seychelles:"SC",Sudan:"SD",Svezia:"SE",Singapore:"SG","Sant\u2019Elena":"SH",Slovenia:"SI","Svalbard e Jan Mayen":"SJ",Slovacchia:"SK","Sierra Leone":"SL","San Marino":"SM",Senegal:"SN",Somalia:"SO",Suriname:"SR","Sudan del Sud":"SS","Sao Tom\u00e9 e Pr\u00edncipe":"ST","El Salvador":"SV","Sint Maarten":"SX",Siria:"SY",
Swaziland:"SZ","Tristan da Cunha":"TA","Isole Turks e Caicos":"TC",Ciad:"TD","Territori australi francesi":"TF",Togo:"TG",Tailandia:"TH",Tagikistan:"TJ",Tokelau:"TK","Timor Est":"TL",Turkmenistan:"TM",Tunisia:"TN",Tonga:"TO",Turchia:"TR","Trinidad e Tobago":"TT",Tuvalu:"TV",Taiwan:"TW",Tanzania:"TZ",Ucraina:"UA",Uganda:"UG","Isole periferiche agli USA":"UM","Stati Uniti":"US",Uruguay:"UY",Uzbekistan:"UZ","Citt\u00e0 del Vaticano":"VA","Saint Vincent e Grenadines":"VC",Venezuela:"VE","Isole Vergini Britanniche":"VG",
"Isole Vergini Americane":"VI",Vietnam:"VN",Vanuatu:"VU","Wallis e Futuna":"WF",Samoa:"WS",Yemen:"YE",Mayotte:"YT",Sudafrica:"ZA",Zambia:"ZM",Zimbabwe:"ZW","Regione non valida o sconosciuta":"ZZ",Asia:"142","Asia centrale":"143","Asia occidentale":"145",Europa:"150","Europa orientale":"151","Europa del Nord":"154","Europa occidentale":"155","America Latina":"419",Mondo:"001",Africa:"002","Nord America":"003","America del Sud":"005",Oceania:"009","Africa occidentale":"011","America centrale":"013",
"Africa orientale":"014","Africa del Nord":"015","Africa centrale":"017","Africa del Sud":"018",Americhe:"019","America del Nord":"021",Caraibi:"029","Asia orientale":"030","Asia del Sud":"034","Asia sudorientale":"035","Europa del Sud":"039",Australasia:"053",Melanesia:"054","Regione Micronesiana":"057",Polinesia:"061"};
ilib.data.ctrynames_ja={"\u30a2\u30b8\u30a2":"142","\u4e2d\u592e\u30a2\u30b8\u30a2":"143","\u897f\u30a2\u30b8\u30a2":"145","\u30e8\u30fc\u30ed\u30c3\u30d1":"150","\u6771\u30e8\u30fc\u30ed\u30c3\u30d1":"151","\u5317\u30e8\u30fc\u30ed\u30c3\u30d1":"154","\u897f\u30e8\u30fc\u30ed\u30c3\u30d1":"155","\u30e9\u30c6\u30f3\u30a2\u30e1\u30ea\u30ab":"419","\u4e16\u754c":"001","\u30a2\u30d5\u30ea\u30ab":"002","\u5317\u30a2\u30e1\u30ea\u30ab\u5927\u9678":"003","\u5357\u30a2\u30e1\u30ea\u30ab":"005","\u30aa\u30bb\u30a2\u30cb\u30a2":"009",
"\u897f\u30a2\u30d5\u30ea\u30ab":"011","\u4e2d\u592e\u30a2\u30e1\u30ea\u30ab":"013","\u6771\u30a2\u30d5\u30ea\u30ab":"014","\u5317\u30a2\u30d5\u30ea\u30ab":"015","\u4e2d\u90e8\u30a2\u30d5\u30ea\u30ab":"017","\u5357\u90e8\u30a2\u30d5\u30ea\u30ab":"018","\u30a2\u30e1\u30ea\u30ab\u5927\u9678":"019","\u5317\u30a2\u30e1\u30ea\u30ab":"021","\u30ab\u30ea\u30d6":"029","\u6771\u30a2\u30b8\u30a2":"030","\u5357\u30a2\u30b8\u30a2":"034","\u6771\u5357\u30a2\u30b8\u30a2":"035","\u5357\u30e8\u30fc\u30ed\u30c3\u30d1":"039",
"\u30aa\u30fc\u30b9\u30c8\u30e9\u30e9\u30b7\u30a2":"053","\u30e1\u30e9\u30cd\u30b7\u30a2":"054","\u30df\u30af\u30ed\u30cd\u30b7\u30a2":"057","\u30dd\u30ea\u30cd\u30b7\u30a2":"061","\u30a2\u30bb\u30f3\u30b7\u30e7\u30f3\u5cf6":"AC","\u30a2\u30f3\u30c9\u30e9":"AD","\u30a2\u30e9\u30d6\u9996\u9577\u56fd\u9023\u90a6":"AE","\u30a2\u30d5\u30ac\u30cb\u30b9\u30bf\u30f3":"AF","\u30a2\u30f3\u30c6\u30a3\u30b0\u30a2\u30fb\u30d0\u30fc\u30d6\u30fc\u30c0":"AG","\u30a2\u30f3\u30ae\u30e9":"AI","\u30a2\u30eb\u30d0\u30cb\u30a2":"AL",
"\u30a2\u30eb\u30e1\u30cb\u30a2":"AM","\u30aa\u30e9\u30f3\u30c0\u9818\u30a2\u30f3\u30c6\u30a3\u30eb":"AN","\u30a2\u30f3\u30b4\u30e9":"AO","\u5357\u6975":"AQ","\u30a2\u30eb\u30bc\u30f3\u30c1\u30f3":"AR","\u7c73\u9818\u30b5\u30e2\u30a2":"AS","\u30aa\u30fc\u30b9\u30c8\u30ea\u30a2":"AT","\u30aa\u30fc\u30b9\u30c8\u30e9\u30ea\u30a2":"AU","\u30a2\u30eb\u30d0":"AW","\u30aa\u30fc\u30e9\u30f3\u30c9\u8af8\u5cf6":"AX","\u30a2\u30bc\u30eb\u30d0\u30a4\u30b8\u30e3\u30f3":"AZ","\u30dc\u30b9\u30cb\u30a2\u30fb\u30d8\u30eb\u30c4\u30a7\u30b4\u30d3\u30ca":"BA",
"\u30d0\u30eb\u30d0\u30c9\u30b9":"BB","\u30d0\u30f3\u30b0\u30e9\u30c7\u30b7\u30e5":"BD","\u30d9\u30eb\u30ae\u30fc":"BE","\u30d6\u30eb\u30ad\u30ca\u30d5\u30a1\u30bd":"BF","\u30d6\u30eb\u30ac\u30ea\u30a2":"BG","\u30d0\u30fc\u30ec\u30fc\u30f3":"BH","\u30d6\u30eb\u30f3\u30b8":"BI","\u30d9\u30ca\u30f3":"BJ","\u30b5\u30f3\u30fb\u30d0\u30eb\u30c6\u30eb\u30df\u30fc\u5cf6":"BL","\u30d0\u30df\u30e5\u30fc\u30c0":"BM","\u30d6\u30eb\u30cd\u30a4":"BN","\u30dc\u30ea\u30d3\u30a2":"BO","\u30aa\u30e9\u30f3\u30c0\u9818\u30ab\u30ea\u30d6":"BQ",
"\u30d6\u30e9\u30b8\u30eb":"BR","\u30d0\u30cf\u30de":"BS","\u30d6\u30fc\u30bf\u30f3":"BT","\u30d6\u30fc\u30d9\u5cf6":"BV","\u30dc\u30c4\u30ef\u30ca":"BW","\u30d9\u30e9\u30eb\u30fc\u30b7":"BY","\u30d9\u30ea\u30fc\u30ba":"BZ","\u30ab\u30ca\u30c0":"CA","\u30b3\u30b3\u30b9[\u30ad\u30fc\u30ea\u30f3\u30b0]\u8af8\u5cf6":"CC","\u30b3\u30f3\u30b4\u6c11\u4e3b\u5171\u548c\u56fd[\u30ad\u30f3\u30b7\u30e3\u30b5]":"CD","\u4e2d\u592e\u30a2\u30d5\u30ea\u30ab\u5171\u548c\u56fd":"CF","\u30b3\u30f3\u30b4\u5171\u548c\u56fd[\u30d6\u30e9\u30b6\u30d3\u30eb]":"CG",
"\u30b9\u30a4\u30b9":"CH","\u30b3\u30fc\u30c8\u30b8\u30dc\u30ef\u30fc\u30eb":"CI","\u30af\u30c3\u30af\u8af8\u5cf6":"CK","\u30c1\u30ea":"CL","\u30ab\u30e1\u30eb\u30fc\u30f3":"CM","\u4e2d\u56fd":"CN","\u30b3\u30ed\u30f3\u30d3\u30a2":"CO","\u30af\u30ea\u30c3\u30d1\u30fc\u30c8\u30f3\u5cf6":"CP","\u30b3\u30b9\u30bf\u30ea\u30ab":"CR","\u30ad\u30e5\u30fc\u30d0":"CU","\u30ab\u30fc\u30dc\u30d9\u30eb\u30c7":"CV","\u30ad\u30e5\u30e9\u30bd\u30fc":"CW","\u30af\u30ea\u30b9\u30de\u30b9\u5cf6":"CX","\u30ad\u30d7\u30ed\u30b9":"CY",
"\u30c1\u30a7\u30b3\u5171\u548c\u56fd":"CZ","\u30c9\u30a4\u30c4":"DE","\u30c7\u30a3\u30a8\u30b4\u30ac\u30eb\u30b7\u30a2\u5cf6":"DG","\u30b8\u30d6\u30c1":"DJ","\u30c7\u30f3\u30de\u30fc\u30af":"DK","\u30c9\u30df\u30cb\u30ab\u56fd":"DM","\u30c9\u30df\u30cb\u30ab\u5171\u548c\u56fd":"DO","\u30a2\u30eb\u30b8\u30a7\u30ea\u30a2":"DZ","\u30bb\u30a6\u30bf\u30fb\u30e1\u30ea\u30ea\u30e3":"EA","\u30a8\u30af\u30a2\u30c9\u30eb":"EC","\u30a8\u30b9\u30c8\u30cb\u30a2":"EE","\u30a8\u30b8\u30d7\u30c8":"EG","\u897f\u30b5\u30cf\u30e9":"EH",
"\u30a8\u30ea\u30c8\u30ea\u30a2":"ER","\u30b9\u30da\u30a4\u30f3":"ES","\u30a8\u30c1\u30aa\u30d4\u30a2":"ET","\u6b27\u5dde\u9023\u5408":"EU","\u30d5\u30a3\u30f3\u30e9\u30f3\u30c9":"FI","\u30d5\u30a3\u30b8\u30fc":"FJ","\u30d5\u30a9\u30fc\u30af\u30e9\u30f3\u30c9\u8af8\u5cf6":"FK","\u30df\u30af\u30ed\u30cd\u30b7\u30a2\u9023\u90a6":"FM","\u30d5\u30a7\u30ed\u30fc\u8af8\u5cf6":"FO","\u30d5\u30e9\u30f3\u30b9":"FR","\u30ac\u30dc\u30f3":"GA","\u30a4\u30ae\u30ea\u30b9":"GB","\u30b0\u30ec\u30ca\u30c0":"GD","\u30b0\u30eb\u30b8\u30a2":"GE",
"\u4ecf\u9818\u30ae\u30a2\u30ca":"GF","\u30ac\u30fc\u30f3\u30b8\u30fc":"GG","\u30ac\u30fc\u30ca":"GH","\u30b8\u30d6\u30e9\u30eb\u30bf\u30eb":"GI","\u30b0\u30ea\u30fc\u30f3\u30e9\u30f3\u30c9":"GL","\u30ac\u30f3\u30d3\u30a2":"GM","\u30ae\u30cb\u30a2":"GN","\u30b0\u30a2\u30c9\u30eb\u30fc\u30d7":"GP","\u8d64\u9053\u30ae\u30cb\u30a2":"GQ","\u30ae\u30ea\u30b7\u30e3":"GR","\u5357\u30b8\u30e7\u30fc\u30b8\u30a2\u5cf6\u30fb\u5357\u30b5\u30f3\u30c9\u30a4\u30c3\u30c1\u8af8\u5cf6":"GS","\u30b0\u30a2\u30c6\u30de\u30e9":"GT",
"\u30b0\u30a2\u30e0":"GU","\u30ae\u30cb\u30a2\u30d3\u30b5\u30a6":"GW","\u30ac\u30a4\u30a2\u30ca":"GY","\u4e2d\u83ef\u4eba\u6c11\u5171\u548c\u56fd\u9999\u6e2f\u7279\u5225\u884c\u653f\u533a":"HK","\u30cf\u30fc\u30c9\u5cf6\u30fb\u30de\u30af\u30c9\u30ca\u30eb\u30c9\u8af8\u5cf6":"HM","\u30db\u30f3\u30b8\u30e5\u30e9\u30b9":"HN","\u30af\u30ed\u30a2\u30c1\u30a2":"HR","\u30cf\u30a4\u30c1":"HT","\u30cf\u30f3\u30ac\u30ea\u30fc":"HU","\u30ab\u30ca\u30ea\u30a2\u8af8\u5cf6":"IC","\u30a4\u30f3\u30c9\u30cd\u30b7\u30a2":"ID",
"\u30a2\u30a4\u30eb\u30e9\u30f3\u30c9":"IE","\u30a4\u30b9\u30e9\u30a8\u30eb":"IL","\u30de\u30f3\u5cf6":"IM","\u30a4\u30f3\u30c9":"IN","\u82f1\u9818\u30a4\u30f3\u30c9\u6d0b\u5730\u57df":"IO","\u30a4\u30e9\u30af":"IQ","\u30a4\u30e9\u30f3":"IR","\u30a2\u30a4\u30b9\u30e9\u30f3\u30c9":"IS","\u30a4\u30bf\u30ea\u30a2":"IT","\u30b8\u30e3\u30fc\u30b8\u30fc":"JE","\u30b8\u30e3\u30de\u30a4\u30ab":"JM","\u30e8\u30eb\u30c0\u30f3":"JO","\u65e5\u672c":"JP","\u30b1\u30cb\u30a2":"KE","\u30ad\u30eb\u30ae\u30b9":"KG",
"\u30ab\u30f3\u30dc\u30b8\u30a2":"KH","\u30ad\u30ea\u30d0\u30b9":"KI","\u30b3\u30e2\u30ed":"KM","\u30bb\u30f3\u30c8\u30af\u30ea\u30b9\u30c8\u30d5\u30a1\u30fc\u30fb\u30cd\u30a4\u30d3\u30b9":"KN","\u671d\u9bae\u6c11\u4e3b\u4e3b\u7fa9\u4eba\u6c11\u5171\u548c\u56fd":"KP","\u5927\u97d3\u6c11\u56fd":"KR","\u30af\u30a6\u30a7\u30fc\u30c8":"KW","\u30b1\u30a4\u30de\u30f3\u8af8\u5cf6":"KY","\u30ab\u30b6\u30d5\u30b9\u30bf\u30f3":"KZ","\u30e9\u30aa\u30b9":"LA","\u30ec\u30d0\u30ce\u30f3":"LB","\u30bb\u30f3\u30c8\u30eb\u30b7\u30a2":"LC",
"\u30ea\u30d2\u30c6\u30f3\u30b7\u30e5\u30bf\u30a4\u30f3":"LI","\u30b9\u30ea\u30e9\u30f3\u30ab":"LK","\u30ea\u30d9\u30ea\u30a2":"LR","\u30ec\u30bd\u30c8":"LS","\u30ea\u30c8\u30a2\u30cb\u30a2":"LT","\u30eb\u30af\u30bb\u30f3\u30d6\u30eb\u30b0":"LU","\u30e9\u30c8\u30d3\u30a2":"LV","\u30ea\u30d3\u30a2":"LY","\u30e2\u30ed\u30c3\u30b3":"MA","\u30e2\u30ca\u30b3":"MC","\u30e2\u30eb\u30c9\u30d0":"MD","\u30e2\u30f3\u30c6\u30cd\u30b0\u30ed":"ME","\u30b5\u30f3\u30fb\u30de\u30eb\u30bf\u30f3":"MF","\u30de\u30c0\u30ac\u30b9\u30ab\u30eb":"MG",
"\u30de\u30fc\u30b7\u30e3\u30eb\u8af8\u5cf6":"MH","\u30de\u30b1\u30c9\u30cb\u30a2":"MK","\u30de\u30ea":"ML","\u30df\u30e3\u30f3\u30de\u30fc":"MM","\u30e2\u30f3\u30b4\u30eb":"MN","\u4e2d\u83ef\u4eba\u6c11\u5171\u548c\u56fd\u30de\u30ab\u30aa\u7279\u5225\u884c\u653f\u533a":"MO","\u5317\u30de\u30ea\u30a2\u30ca\u8af8\u5cf6":"MP","\u30de\u30eb\u30c6\u30a3\u30cb\u30fc\u30af":"MQ","\u30e2\u30fc\u30ea\u30bf\u30cb\u30a2":"MR","\u30e2\u30f3\u30c8\u30bb\u30e9\u30c8":"MS","\u30de\u30eb\u30bf":"MT","\u30e2\u30fc\u30ea\u30b7\u30e3\u30b9":"MU",
"\u30e2\u30eb\u30b8\u30d6":"MV","\u30de\u30e9\u30a6\u30a4":"MW","\u30e1\u30ad\u30b7\u30b3":"MX","\u30de\u30ec\u30fc\u30b7\u30a2":"MY","\u30e2\u30b6\u30f3\u30d3\u30fc\u30af":"MZ","\u30ca\u30df\u30d3\u30a2":"NA","\u30cb\u30e5\u30fc\u30ab\u30ec\u30c9\u30cb\u30a2":"NC","\u30cb\u30b8\u30a7\u30fc\u30eb":"NE","\u30ce\u30fc\u30d5\u30a9\u30fc\u30af\u5cf6":"NF","\u30ca\u30a4\u30b8\u30a7\u30ea\u30a2":"NG","\u30cb\u30ab\u30e9\u30b0\u30a2":"NI","\u30aa\u30e9\u30f3\u30c0":"NL","\u30ce\u30eb\u30a6\u30a7\u30fc":"NO",
"\u30cd\u30d1\u30fc\u30eb":"NP","\u30ca\u30a6\u30eb":"NR","\u30cb\u30a6\u30a8\u5cf6":"NU","\u30cb\u30e5\u30fc\u30b8\u30fc\u30e9\u30f3\u30c9":"NZ","\u30aa\u30de\u30fc\u30f3":"OM","\u30d1\u30ca\u30de":"PA","\u30da\u30eb\u30fc":"PE","\u4ecf\u9818\u30dd\u30ea\u30cd\u30b7\u30a2":"PF","\u30d1\u30d7\u30a2\u30cb\u30e5\u30fc\u30ae\u30cb\u30a2":"PG","\u30d5\u30a3\u30ea\u30d4\u30f3":"PH","\u30d1\u30ad\u30b9\u30bf\u30f3":"PK","\u30dd\u30fc\u30e9\u30f3\u30c9":"PL","\u30b5\u30f3\u30d4\u30a8\u30fc\u30eb\u5cf6\u30fb\u30df\u30af\u30ed\u30f3\u5cf6":"PM",
"\u30d4\u30c8\u30b1\u30a2\u30f3\u8af8\u5cf6":"PN","\u30d7\u30a8\u30eb\u30c8\u30ea\u30b3":"PR","\u30d1\u30ec\u30b9\u30c1\u30ca":"PS","\u30dd\u30eb\u30c8\u30ac\u30eb":"PT","\u30d1\u30e9\u30aa":"PW","\u30d1\u30e9\u30b0\u30a2\u30a4":"PY","\u30ab\u30bf\u30fc\u30eb":"QA","\u30aa\u30bb\u30a2\u30cb\u30a2\u5468\u8fba\u5730\u57df":"QO","\u30ec\u30e6\u30cb\u30aa\u30f3\u5cf6":"RE","\u30eb\u30fc\u30de\u30cb\u30a2":"RO","\u30bb\u30eb\u30d3\u30a2":"RS","\u30ed\u30b7\u30a2":"RU","\u30eb\u30ef\u30f3\u30c0":"RW","\u30b5\u30a6\u30b8\u30a2\u30e9\u30d3\u30a2":"SA",
"\u30bd\u30ed\u30e2\u30f3\u8af8\u5cf6":"SB","\u30bb\u30fc\u30b7\u30a7\u30eb":"SC","\u30b9\u30fc\u30c0\u30f3":"SD","\u30b9\u30a6\u30a7\u30fc\u30c7\u30f3":"SE","\u30b7\u30f3\u30ac\u30dd\u30fc\u30eb":"SG","\u30bb\u30f3\u30c8\u30d8\u30ec\u30ca":"SH","\u30b9\u30ed\u30d9\u30cb\u30a2":"SI","\u30b9\u30d0\u30fc\u30eb\u30d0\u30eb\u8af8\u5cf6\u30fb\u30e4\u30f3\u30de\u30a4\u30a8\u30f3\u5cf6":"SJ","\u30b9\u30ed\u30d0\u30ad\u30a2":"SK","\u30b7\u30a8\u30e9\u30ec\u30aa\u30cd":"SL","\u30b5\u30f3\u30de\u30ea\u30ce":"SM",
"\u30bb\u30cd\u30ac\u30eb":"SN","\u30bd\u30de\u30ea\u30a2":"SO","\u30b9\u30ea\u30ca\u30e0":"SR","\u5357\u30b9\u30fc\u30c0\u30f3":"SS","\u30b5\u30f3\u30c8\u30e1\u30fb\u30d7\u30ea\u30f3\u30b7\u30da":"ST","\u30a8\u30eb\u30b5\u30eb\u30d0\u30c9\u30eb":"SV","\u30b7\u30f3\u30c8\u30fb\u30de\u30fc\u30eb\u30c6\u30f3":"SX","\u30b7\u30ea\u30a2":"SY","\u30b9\u30ef\u30b8\u30e9\u30f3\u30c9":"SZ","\u30c8\u30ea\u30b9\u30bf\u30f3\u30fb\u30c0\u30fb\u30af\u30fc\u30cb\u30e3":"TA","\u30bf\u30fc\u30af\u30b9\u30fb\u30ab\u30a4\u30b3\u30b9\u8af8\u5cf6":"TC",
"\u30c1\u30e3\u30c9":"TD","\u4ecf\u9818\u6975\u5357\u8af8\u5cf6":"TF","\u30c8\u30fc\u30b4":"TG","\u30bf\u30a4":"TH","\u30bf\u30b8\u30ad\u30b9\u30bf\u30f3":"TJ","\u30c8\u30b1\u30e9\u30a6":"TK","\u6771\u30c6\u30a3\u30e2\u30fc\u30eb":"TL","\u30c8\u30eb\u30af\u30e1\u30cb\u30b9\u30bf\u30f3":"TM","\u30c1\u30e5\u30cb\u30b8\u30a2":"TN","\u30c8\u30f3\u30ac":"TO","\u30c8\u30eb\u30b3":"TR","\u30c8\u30ea\u30cb\u30c0\u30fc\u30c9\u30fb\u30c8\u30d0\u30b4":"TT","\u30c4\u30d0\u30eb":"TV","\u53f0\u6e7e":"TW","\u30bf\u30f3\u30b6\u30cb\u30a2":"TZ",
"\u30a6\u30af\u30e9\u30a4\u30ca":"UA","\u30a6\u30ac\u30f3\u30c0":"UG","\u7c73\u9818\u592a\u5e73\u6d0b\u8af8\u5cf6":"UM","\u30a2\u30e1\u30ea\u30ab":"US","\u30a6\u30eb\u30b0\u30a2\u30a4":"UY","\u30a6\u30ba\u30d9\u30ad\u30b9\u30bf\u30f3":"UZ","\u30d0\u30c1\u30ab\u30f3\u5e02\u56fd":"VA","\u30bb\u30f3\u30c8\u30d3\u30f3\u30bb\u30f3\u30c8\u30fb\u30b0\u30ec\u30ca\u30c7\u30a3\u30fc\u30f3\u8af8\u5cf6":"VC","\u30d9\u30cd\u30ba\u30a8\u30e9":"VE","\u82f1\u9818\u30f4\u30a1\u30fc\u30b8\u30f3\u8af8\u5cf6":"VG","\u7c73\u9818\u30f4\u30a1\u30fc\u30b8\u30f3\u8af8\u5cf6":"VI",
"\u30d9\u30c8\u30ca\u30e0":"VN","\u30d0\u30cc\u30a2\u30c4":"VU","\u30a6\u30a9\u30ea\u30b9\u30fb\u30d5\u30c4\u30ca":"WF","\u30b5\u30e2\u30a2":"WS","\u30a4\u30a8\u30e1\u30f3":"YE","\u30de\u30e8\u30c3\u30c8\u5cf6":"YT","\u5357\u30a2\u30d5\u30ea\u30ab":"ZA","\u30b6\u30f3\u30d3\u30a2":"ZM","\u30b8\u30f3\u30d0\u30d6\u30a8":"ZW","\u4e0d\u660e\u306a\u5730\u57df":"ZZ"};
ilib.data.ctrynames_ko={"\uc544\uc2dc\uc544":"142","\uc911\uc559 \uc544\uc2dc\uc544":"143","\uc11c\uc544\uc2dc\uc544":"145","\uc720\ub7fd":"150","\ub3d9\uc720\ub7fd":"151","\ubd81\uc720\ub7fd":"154","\uc11c\uc720\ub7fd":"155","\ub77c\ud2f4 \uc544\uba54\ub9ac\uce74":"419","\uc138\uacc4":"001","\uc544\ud504\ub9ac\uce74":"002","\ubd81\uc544\uba54\ub9ac\uce74":"003","\ub0a8\uc544\uba54\ub9ac\uce74[\ub0a8\ubbf8]":"005","\uc624\uc138\uc544\ub2c8\uc544":"009","\uc11c\uc544\ud504\ub9ac\uce74":"011","\uc911\uc559 \uc544\uba54\ub9ac\uce74":"013",
"\ub3d9\ubd80 \uc544\ud504\ub9ac\uce74":"014","\ubd81\ubd80 \uc544\ud504\ub9ac\uce74":"015","\uc911\ubd80 \uc544\ud504\ub9ac\uce74":"017","\ub0a8\ubd80 \uc544\ud504\ub9ac\uce74":"018","\uc544\uba54\ub9ac\uce74 \ub300\ub959":"019","\ubd81\ubd80 \uc544\uba54\ub9ac\uce74":"021","\uce74\ub9ac\ube0c \ud574 \uc81c\ub3c4":"029","\ub3d9\uc544\uc2dc\uc544":"030","\ub0a8\uc544\uc2dc\uc544":"034","\ub3d9\ub0a8 \uc544\uc2dc\uc544":"035","\ub0a8\uc720\ub7fd":"039","\uc624\uc2a4\ud2b8\ub784\ub77c\uc2dc\uc544":"053",
"\uba5c\ub77c\ub124\uc2dc\uc544":"054","\ubbf8\ud06c\ub85c\ub124\uc2dc\uc544 \uc9c0\uc5ed":"057","\ud3f4\ub9ac\ub124\uc2dc\uc544":"061","\uc5b4\uc13c\uc158 \uc12c":"AC","\uc548\ub3c4\ub77c":"AD","\uc544\ub78d\uc5d0\ubbf8\ub9ac\ud2b8 \uc5f0\ud569":"AE","\uc544\ud504\uac00\ub2c8\uc2a4\ud0c4":"AF","\uc564\ud2f0\uac00 \ubc14\ubd80\ub2e4":"AG","\uc548\uae38\ub77c":"AI","\uc54c\ubc14\ub2c8\uc544":"AL","\uc544\ub974\uba54\ub2c8\uc544":"AM","\ub124\ub35c\ub780\ub4dc\ub839 \uc548\ud2f8\ub808\uc2a4":"AN","\uc559\uace8\ub77c":"AO",
"\ub0a8\uadf9 \ub300\ub959":"AQ","\uc544\ub974\ud5e8\ud2f0\ub098":"AR","\uc544\uba54\ub9ac\uce78 \uc0ac\ubaa8\uc544":"AS","\uc624\uc2a4\ud2b8\ub9ac\uc544":"AT","\uc624\uc2a4\ud2b8\ub808\uc77c\ub9ac\uc544":"AU","\uc544\ub8e8\ubc14":"AW","\uc62c\ub780\ub4dc \uc81c\ub3c4":"AX","\uc544\uc81c\ub974\ubc14\uc774\uc794":"AZ","\ubcf4\uc2a4\ub2c8\uc544 \ud5e4\ub974\uccb4\uace0\ube44\ub098":"BA","\ubc14\ubca0\uc774\ub3c4\uc2a4":"BB","\ubc29\uae00\ub77c\ub370\uc2dc":"BD","\ubca8\uae30\uc5d0":"BE","\ubd80\ub974\ud0a4\ub098\ud30c\uc18c":"BF",
"\ubd88\uac00\ub9ac\uc544":"BG","\ubc14\ub808\uc778":"BH","\ubd80\ub8ec\ub514":"BI","\ubca0\ub0c9":"BJ","\uc0dd \ubc14\ub974\ud154\ub974\ubbf8":"BL","\ubc84\ubba4\ub2e4":"BM","\ube0c\ub8e8\ub098\uc774":"BN","\ubcfc\ub9ac\ube44\uc544":"BO","\ub124\ub35c\ub780\ub4dc\ub839 \uce74\ub9ac\ube0c":"BQ","\ube0c\ub77c\uc9c8":"BR","\ubc14\ud558\ub9c8":"BS","\ubd80\ud0c4":"BT","\ubd80\ubca0":"BV","\ubcf4\uce20\uc640\ub098":"BW","\ubca8\ub77c\ub8e8\uc2a4":"BY","\ubca8\ub9ac\uc988":"BZ","\uce90\ub098\ub2e4":"CA",
"\ucf54\ucf54\uc2a4\uc81c\ub3c4":"CC","\ucf69\uace0-\ud0a8\uc0e4\uc0ac":"CD","\uc911\uc559 \uc544\ud504\ub9ac\uce74 \uacf5\ud654\uad6d":"CF","\ucf69\uace0":"CG","\uc2a4\uc704\uc2a4":"CH","\ucf54\ud2b8\ub514\ubd80\uc544\ub974":"CI","\ucfe1\uc81c\ub3c4":"CK","\uce60\ub808":"CL","\uce74\uba54\ub8ec":"CM","\uc911\uad6d":"CN","\ucf5c\ub86c\ube44\uc544":"CO","\ud074\ub9bd\ud37c\ud2bc \uc12c":"CP","\ucf54\uc2a4\ud0c0\ub9ac\uce74":"CR","\ucfe0\ubc14":"CU","\uae4c\ubf40\ubca0\ub974\ub370":"CV","\ud034\ub77c\uc18c":"CW",
"\ud06c\ub9ac\uc2a4\ub9c8\uc2a4\uc12c":"CX","\uc0ac\uc774\ud504\ub7ec\uc2a4":"CY","\uccb4\ucf54":"CZ","\ub3c5\uc77c":"DE","\ub514\uc5d0\uace0 \uac00\ub974\uc2dc\uc544":"DG","\uc9c0\ubd80\ud2f0":"DJ","\ub374\ub9c8\ud06c":"DK","\ub3c4\ubbf8\ub2c8\uce74":"DM","\ub3c4\ubbf8\ub2c8\uce74 \uacf5\ud654\uad6d":"DO","\uc54c\uc81c\ub9ac":"DZ","\uc138\uc6b0\ud0c0 \ubc0f \uba5c\ub9ac\uc57c":"EA","\uc5d0\ucf70\ub3c4\ub974":"EC","\uc5d0\uc2a4\ud1a0\ub2c8\uc544":"EE","\uc774\uc9d1\ud2b8":"EG","\uc11c\uc0ac\ud558\ub77c":"EH",
"\uc5d0\ub9ac\ud2b8\ub9ac\uc544":"ER","\uc2a4\ud398\uc778":"ES","\uc774\ub514\uc624\ud53c\uc544":"ET","\uc720\ub7fd \uc5f0\ud569":"EU","\ud540\ub780\ub4dc":"FI","\ud53c\uc9c0":"FJ","\ud3ec\ud074\ub79c\ub4dc \uc81c\ub3c4":"FK","\ubbf8\ud06c\ub85c\ub124\uc2dc\uc544":"FM","\ud398\ub85c\uc81c\ub3c4":"FO","\ud504\ub791\uc2a4":"FR","\uac00\ubd09":"GA","\uc601\uad6d":"GB","\uadf8\ub808\ub098\ub2e4":"GD","\uadf8\ub8e8\uc9c0\uc57c":"GE","\ud504\ub791\uc2a4\ub839 \uae30\uc544\ub098":"GF","\uac74\uc9c0":"GG",
"\uac00\ub098":"GH","\uc9c0\ube0c\ub864\ud130":"GI","\uadf8\ub9b0\ub780\ub4dc":"GL","\uac10\ube44\uc544":"GM","\uae30\ub2c8":"GN","\uacfc\ub4e4\ub8e8\ud504":"GP","\uc801\ub3c4 \uae30\ub2c8":"GQ","\uadf8\ub9ac\uc2a4":"GR","\uc0ac\uc6b0\uc2a4\uc870\uc9c0\uc544 \uc0ac\uc6b0\uc2a4\uc0cc\ub4dc\uc704\uce58 \uc81c\ub3c4":"GS","\uacfc\ud14c\ub9d0\ub77c":"GT","\uad0c":"GU","\uae30\ub124\ube44\uc3d8":"GW","\uac00\uc774\uc544\ub098":"GY","\ud64d\ucf69, \uc911\uad6d \ud2b9\ubcc4\ud589\uc815\uad6c":"HK","\ud5c8\ub4dc\uc12c-\ub9e5\ub3c4\ub110\ub4dc\uc81c\ub3c4":"HM",
"\uc628\ub450\ub77c\uc2a4":"HN","\ud06c\ub85c\uc544\ud2f0\uc544":"HR","\uc544\uc774\ud2f0":"HT","\ud5dd\uac00\ub9ac":"HU","\uce74\ub098\ub9ac\uc544 \uc81c\ub3c4":"IC","\uc778\ub3c4\ub124\uc2dc\uc544":"ID","\uc544\uc77c\ub79c\ub4dc":"IE","\uc774\uc2a4\ub77c\uc5d8":"IL","\ub9e8 \uc12c":"IM","\uc778\ub3c4":"IN","\uc601\uad6d\ub839\uc778\ub3c4\uc591\uc2dd\ubbfc\uc9c0":"IO","\uc774\ub77c\ud06c":"IQ","\uc774\ub780":"IR","\uc544\uc774\uc2ac\ub780\ub4dc":"IS","\uc774\ud0c8\ub9ac\uc544":"IT","\uc800\uc9c0":"JE",
"\uc790\uba54\uc774\uce74":"JM","\uc694\ub974\ub2e8":"JO","\uc77c\ubcf8":"JP","\ucf00\ub0d0":"KE","\ud0a4\ub974\uae30\uc2a4\uc2a4\ud0c4":"KG","\uce84\ubcf4\ub514\uc544":"KH","\ud0a4\ub9ac\ubc14\uc2dc":"KI","\ucf54\ubaa8\ub85c\uc2a4":"KM","\uc138\uc778\ud2b8\ud06c\ub9ac\uc2a4\ud1a0\ud37c \ub124\ube44\uc2a4":"KN","\uc870\uc120 \ubbfc\uc8fc\uc8fc\uc758 \uc778\ubbfc \uacf5\ud654\uad6d":"KP","\ub300\ud55c\ubbfc\uad6d":"KR","\ucfe0\uc6e8\uc774\ud2b8":"KW","\ucf00\uc774\ub9e8\uc81c\ub3c4":"KY","\uce74\uc790\ud750\uc2a4\ud0c4":"KZ",
"\ub77c\uc624\uc2a4":"LA","\ub808\ubc14\ub17c":"LB","\uc138\uc778\ud2b8\ub8e8\uc2dc\uc544":"LC","\ub9ac\ud788\ud150\uc288\ud0c0\uc778":"LI","\uc2a4\ub9ac\ub791\uce74":"LK","\ub77c\uc774\ubca0\ub9ac\uc544":"LR","\ub808\uc18c\ud1a0":"LS","\ub9ac\ud22c\uc544\ub2c8\uc544":"LT","\ub8e9\uc148\ubd80\ub974\ud06c":"LU","\ub77c\ud2b8\ube44\uc544":"LV","\ub9ac\ube44\uc544":"LY","\ubaa8\ub85c\ucf54":"MA","\ubaa8\ub098\ucf54":"MC","\ubab0\ub3c4\ubc14":"MD","\ubaac\ud14c\ub124\uadf8\ub85c":"ME","\uc0dd \ub9c8\ub974\ud0f1":"MF",
"\ub9c8\ub2e4\uac00\uc2a4\uce74\ub974":"MG","\ub9c8\uc0ec \uad70\ub3c4":"MH","\ub9c8\ucf00\ub3c4\ub2c8\uc544":"MK","\ub9d0\ub9ac":"ML","\ubbf8\uc580\ub9c8":"MM","\ubabd\uace8":"MN","\ub9c8\uce74\uc624, \uc911\uad6d \ud2b9\ubcc4\ud589\uc815\uad6c":"MO","\ubd81\ub9c8\ub9ac\uc544\ub098\uc81c\ub3c4":"MP","\ub9d0\ud2f0\ub2c8\ud06c":"MQ","\ubaa8\ub9ac\ud0c0\ub2c8":"MR","\ubaac\ud2b8\uc138\ub77c\ud2b8":"MS","\ubab0\ud0c0":"MT","\ubaa8\ub9ac\uc154\uc2a4":"MU","\ubab0\ub514\ube0c":"MV","\ub9d0\ub77c\uc704":"MW",
"\uba55\uc2dc\ucf54":"MX","\ub9d0\ub808\uc774\uc2dc\uc544":"MY","\ubaa8\uc7a0\ube44\ud06c":"MZ","\ub098\ubbf8\ube44\uc544":"NA","\ub274 \uce7c\ub808\ub3c4\ub2c8\uc544":"NC","\ub2c8\uc81c\ub974":"NE","\ub178\ud37d\uc12c":"NF","\ub098\uc774\uc9c0\ub9ac\uc544":"NG","\ub2c8\uce74\ub77c\uacfc":"NI","\ub124\ub35c\ub780\ub4dc":"NL","\ub178\ub974\uc6e8\uc774":"NO","\ub124\ud314":"NP","\ub098\uc6b0\ub8e8":"NR","\ub2c8\uc6b0\uc5d0":"NU","\ub274\uc9c8\ub79c\ub4dc":"NZ","\uc624\ub9cc":"OM","\ud30c\ub098\ub9c8":"PA",
"\ud398\ub8e8":"PE","\ud504\ub791\uc2a4\ub839 \ud3f4\ub9ac\ub124\uc2dc\uc544":"PF","\ud30c\ud478\uc544\ub274\uae30\ub2c8":"PG","\ud544\ub9ac\ud540":"PH","\ud30c\ud0a4\uc2a4\ud0c4":"PK","\ud3f4\ub780\ub4dc":"PL","\uc138\uc778\ud2b8\ud53c\uc5d0\ub974-\ubbf8\ucf00\ub871":"PM","\ud54f\ucf00\uc5b8\uc12c":"PN","\ud478\uc5d0\ub974\ud1a0\ub9ac\ucf54":"PR","\ud314\ub808\uc2a4\ud0c0\uc778 \uc9c0\uad6c":"PS","\ud3ec\ub974\ud22c\uac08":"PT","\ud314\ub77c\uc6b0":"PW","\ud30c\ub77c\uacfc\uc774":"PY","\uce74\ud0c0\ub974":"QA",
"\uc624\uc138\uc544\ub2c8\uc544 \uc678\uacfd":"QO","\ub9ac\uc720\ub2c8\uc628":"RE","\ub8e8\ub9c8\ub2c8\uc544":"RO","\uc138\ub974\ube44\uc544":"RS","\ub7ec\uc2dc\uc544":"RU","\ub974\uc644\ub2e4":"RW","\uc0ac\uc6b0\ub514\uc544\ub77c\ube44\uc544":"SA","\uc194\ub85c\ubaac \uc81c\ub3c4":"SB","\uc250\uc774\uc258":"SC","\uc218\ub2e8":"SD","\uc2a4\uc6e8\ub374":"SE","\uc2f1\uac00\ud3ec\ub974":"SG","\uc138\uc778\ud2b8\ud5ec\ub808\ub098":"SH","\uc2ac\ub85c\ubca0\ub2c8\uc544":"SI","\uc2a4\ubc1c\ubc14\ub974\uc81c\ub3c4-\uc580\ub9c8\uc6ec\uc12c":"SJ",
"\uc2ac\ub85c\ubc14\ud0a4\uc544":"SK","\uc2dc\uc5d0\ub77c\ub9ac\uc628":"SL","\uc0b0\ub9c8\ub9ac\ub178":"SM","\uc138\ub124\uac08":"SN","\uc18c\ub9d0\ub9ac\uc544":"SO","\uc218\ub9ac\ub0a8":"SR","\ub0a8\uc218\ub2e8":"SS","\uc0c1\ud22c\uba54 \ud504\ub9b0\uc2dc\ud398":"ST","\uc5d8\uc0b4\ubc14\ub3c4\ub974":"SV","\uc2e0\ud2b8\ub9c8\ub974\ud134":"SX","\uc2dc\ub9ac\uc544":"SY","\uc2a4\uc640\uc9c8\ub79c\ub4dc":"SZ","\ud2b8\ub9ac\uc2a4\ud0c4\ub2e4\ucfe0\ub098":"TA","\ud130\ud06c\uc2a4\ucf00\uc774\ucee4\uc2a4\uc81c\ub3c4":"TC",
"\ucc28\ub4dc":"TD","\ud504\ub791\uc2a4 \ub0a8\ubd80 \uc9c0\ubc29":"TF","\ud1a0\uace0":"TG","\ud0dc\uad6d":"TH","\ud0c0\uc9c0\ud0a4\uc2a4\ud0c4":"TJ","\ud1a0\ucf08\ub77c\uc6b0":"TK","\ub3d9\ud2f0\ubaa8\ub974":"TL","\ud22c\ub974\ud06c\uba54\ub2c8\uc2a4\ud0c4":"TM","\ud280\ub2c8\uc9c0":"TN","\ud1b5\uac00":"TO","\ud130\ud0a4":"TR","\ud2b8\ub9ac\ub2c8\ub2e4\ub4dc \ud1a0\ubc14\uace0":"TT","\ud22c\ubc1c\ub8e8":"TV","\ub300\ub9cc":"TW","\ud0c4\uc790\ub2c8\uc544":"TZ","\uc6b0\ud06c\ub77c\uc774\ub098":"UA",
"\uc6b0\uac04\ub2e4":"UG","\ubbf8\uad6d\ub839 \ud574\uc678 \uc81c\ub3c4":"UM","\ubbf8\uad6d":"US","\uc6b0\ub8e8\uacfc\uc774":"UY","\uc6b0\uc988\ubca0\ud0a4\uc2a4\ud0c4":"UZ","\ubc14\ud2f0\uce78":"VA","\uc138\uc778\ud2b8\ube48\uc13c\ud2b8\uadf8\ub808\ub098\ub518":"VC","\ubca0\ub124\uc218\uc5d8\ub77c":"VE","\uc601\uad6d\ub839 \ubc84\uc9c4 \uc544\uc77c\ub79c\ub4dc":"VG","\ubbf8\uad6d\ub839 \ubc84\uc9c4 \uc544\uc77c\ub79c\ub4dc":"VI","\ubca0\ud2b8\ub0a8":"VN","\ubc14\ub204\uc544\ud22c":"VU","\uc648\ub9ac\uc2a4-\ud478\ud22c\ub098 \uc81c\ub3c4":"WF",
"\uc0ac\ubaa8\uc544":"WS","\uc608\uba58":"YE","\ub9c8\uc694\ud2f0":"YT","\ub0a8\uc544\ud504\ub9ac\uce74":"ZA","\uc7a0\ube44\uc544":"ZM","\uc9d0\ubc14\ube0c\uc6e8":"ZW","\uc54c\uc218\uc5c6\uac70\ub098 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc740 \uc9c0\uc5ed":"ZZ"};
ilib.data.ctrynames_pt={"\u00c1sia":"142","\u00c1sia Central":"143","\u00c1sia Ocidental":"145",Europa:"150","Europa Oriental":"151","Europa Setentrional":"154","Europa Ocidental":"155","Am\u00e9rica Latina":"419",Mundo:"001","\u00c1frica":"002","Am\u00e9rica do Norte":"003","Am\u00e9rica do Sul":"005",Oceania:"009","\u00c1frica Ocidental":"011","Am\u00e9rica Central":"013","\u00c1frica Oriental":"014","\u00c1frica do Norte":"015","\u00c1frica Central":"017","\u00c1frica Austral":"018","Am\u00e9ricas":"019",
"Am\u00e9rica Setentrional":"021",Caribe:"029","\u00c1sia Oriental":"030","\u00c1sia do Sul":"034","\u00c1sia Centro-Oriental":"035","Europa do Sul":"039","Austr\u00e1lia e Nova Zel\u00e2ndia":"053","Melan\u00e9sia":"054","Regi\u00e3o da Micron\u00e9sia":"057","Polin\u00e9sia":"061","Ilha de Ascens\u00e3o":"AC",Andorra:"AD","Emirados \u00c1rabes Unidos":"AE","Afeganist\u00e3o":"AF","Ant\u00edgua e Barbuda":"AG",Anguilla:"AI","Alb\u00e2nia":"AL","Arm\u00eania":"AM","Antilhas Holandesas":"AN",Angola:"AO",
"Ant\u00e1rtida":"AQ",Argentina:"AR","Samoa Americana":"AS","\u00c1ustria":"AT","Austr\u00e1lia":"AU",Aruba:"AW","Ilhas Aland":"AX","Azerbaij\u00e3o":"AZ","B\u00f3snia-Herzegovina":"BA",Barbados:"BB",Bangladesh:"BD","B\u00e9lgica":"BE","Burquina Faso":"BF","Bulg\u00e1ria":"BG",Bahrain:"BH",Burundi:"BI",Benin:"BJ","S\u00e3o Bartolomeu":"BL",Bermudas:"BM",Brunei:"BN","Bol\u00edvia":"BO",Brasil:"BR",Bahamas:"BS","But\u00e3o":"BT","Ilha Bouvet":"BV",Botsuana:"BW",Belarus:"BY",Belize:"BZ","Canad\u00e1":"CA",
"Ilhas Coco":"CC","Congo-Kinshasa":"CD","Rep\u00fablica Centro-Africana":"CF","Congo - Brazzaville":"CG","Su\u00ed\u00e7a":"CH","Costa do Marfim":"CI","Ilhas Cook":"CK",Chile:"CL","Rep\u00fablica dos Camar\u00f5es":"CM",China:"CN","Col\u00f4mbia":"CO","Ilha de Clipperton":"CP","Costa Rica":"CR",Cuba:"CU","Cabo Verde":"CV","Ilhas Natal":"CX",Chipre:"CY","Rep\u00fablica Tcheca":"CZ",Alemanha:"DE","Diego Garcia":"DG",Djibuti:"DJ",Dinamarca:"DK",Dominica:"DM","Rep\u00fablica Dominicana":"DO","Arg\u00e9lia":"DZ",
"Ceuta e Melilha":"EA",Equador:"EC","Est\u00f4nia":"EE",Egito:"EG","Saara Ocidental":"EH",Eritreia:"ER",Espanha:"ES","Eti\u00f3pia":"ET","Uni\u00e3o Europeia":"EU","Finl\u00e2ndia":"FI",Fiji:"FJ","Ilhas Malvinas":"FK","Micron\u00e9sia":"FM","Ilhas Faroe":"FO","Fran\u00e7a":"FR","Gab\u00e3o":"GA","Reino Unido":"GB",Grenada:"GD","Ge\u00f3rgia":"GE","Guiana Francesa":"GF",Guernsey:"GG",Gana:"GH",Gibraltar:"GI","Gro\u00eanlandia":"GL","G\u00e2mbia":"GM","Guin\u00e9":"GN",Guadalupe:"GP","Guin\u00e9 Equatorial":"GQ",
"Gr\u00e9cia":"GR","Ge\u00f3rgia do Sul e Ilhas Sandwich do Sul":"GS",Guatemala:"GT",Guam:"GU","Guin\u00e9 Bissau":"GW",Guiana:"GY","Hong Kong, RAE da China":"HK","Ilha Heard e Ilhas McDonald":"HM",Honduras:"HN","Cro\u00e1cia":"HR",Haiti:"HT",Hungria:"HU","Ilhas Can\u00e1rias":"IC","Indon\u00e9sia":"ID",Irlanda:"IE",Israel:"IL","Ilha de Man":"IM","\u00cdndia":"IN","Territ\u00f3rio Brit\u00e2nico do Oceano \u00cdndico":"IO",Iraque:"IQ","Ir\u00e3":"IR","Isl\u00e2ndia":"IS","It\u00e1lia":"IT",Jersey:"JE",
Jamaica:"JM","Jord\u00e2nia":"JO","Jap\u00e3o":"JP","Qu\u00eania":"KE","Quirguist\u00e3o":"KG",Camboja:"KH",Quiribati:"KI",Comores:"KM","S\u00e3o Cristov\u00e3o e Nevis":"KN","Coreia do Norte":"KP","Coreia do Sul":"KR",Kuwait:"KW","Ilhas Caiman":"KY","Casaquist\u00e3o":"KZ",Laos:"LA","L\u00edbano":"LB","Santa L\u00facia":"LC",Liechtenstein:"LI","Sri Lanka":"LK","Lib\u00e9ria":"LR",Lesoto:"LS","Litu\u00e2nia":"LT",Luxemburgo:"LU","Let\u00f4nia":"LV","L\u00edbia":"LY",Marrocos:"MA","M\u00f4naco":"MC",
"Mold\u00e1via":"MD",Montenegro:"ME","S\u00e3o Martinho":"MF",Madagascar:"MG","Ilhas Marshall":"MH","Maced\u00f4nia":"MK",Mali:"ML","Mianmar [Birm\u00e2nia]":"MM","Mong\u00f3lia":"MN","Macau, RAE da China":"MO","Ilhas Marianas do Norte":"MP",Martinica:"MQ","Maurit\u00e2nia":"MR",Montserrat:"MS",Malta:"MT","Maur\u00edcio":"MU",Maldivas:"MV",Malawi:"MW","M\u00e9xico":"MX","Mal\u00e1sia":"MY","Mo\u00e7ambique":"MZ","Nam\u00edbia":"NA","Nova Caled\u00f4nia":"NC","N\u00edger":"NE","Ilha Norfolk":"NF",
"Nig\u00e9ria":"NG","Nicar\u00e1gua":"NI",Holanda:"NL",Noruega:"NO",Nepal:"NP",Nauru:"NR",Niue:"NU","Nova Zel\u00e2ndia":"NZ","Om\u00e3":"OM","Panam\u00e1":"PA",Peru:"PE","Polin\u00e9sia Francesa":"PF","Papua-Nova Guin\u00e9":"PG",Filipinas:"PH","Paquist\u00e3o":"PK","Pol\u00f4nia":"PL","Saint Pierre e Miquelon":"PM","Ilhas Pitcairn":"PN","Porto Rico":"PR","Territ\u00f3rios palestinos":"PS",Portugal:"PT",Palau:"PW",Paraguai:"PY",Catar:"QA","Oceania Remota":"QO","Reuni\u00e3o":"RE","Rom\u00eania":"RO",
"S\u00e9rvia":"RS","R\u00fassia":"RU",Ruanda:"RW","Ar\u00e1bia Saudita":"SA","Ilhas Salom\u00e3o":"SB",Seychelles:"SC","Sud\u00e3o":"SD","Su\u00e9cia":"SE",Cingapura:"SG","Santa Helena":"SH","Eslov\u00eania":"SI","Svalbard e Jan Mayen":"SJ","Eslov\u00e1quia":"SK","Serra Leoa":"SL","San Marino":"SM",Senegal:"SN","Som\u00e1lia":"SO",Suriname:"SR","Sud\u00e3o do Sul":"SS","S\u00e3o Tom\u00e9 e Pr\u00edncipe":"ST","El Salvador":"SV","Sint Maarten":"SX","S\u00edria":"SY","Suazil\u00e2ndia":"SZ","Trist\u00e3o da Cunha":"TA",
"Ilhas Turks e Caicos":"TC",Chade:"TD","Territ\u00f3rios Franceses do Sul":"TF",Togo:"TG","Tail\u00e2ndia":"TH","Tadjiquist\u00e3o":"TJ",Tokelau:"TK","Timor-Leste":"TL","Turcomenist\u00e3o":"TM","Tun\u00edsia":"TN",Tonga:"TO",Turquia:"TR","Trinidad e Tobago":"TT",Tuvalu:"TV",Taiwan:"TW","Tanz\u00e2nia":"TZ","Ucr\u00e2nia":"UA",Uganda:"UG","Ilhas Distantes dos EUA":"UM","Estados Unidos":"US",Uruguai:"UY","Uzbequist\u00e3o":"UZ",Vaticano:"VA","S\u00e3o Vicente e Granadinas":"VC",Venezuela:"VE","Ilhas Virgens Brit\u00e2nicas":"VG",
"Ilhas Virgens dos EUA":"VI","Vietn\u00e3":"VN",Vanuatu:"VU","Wallis e Futuna":"WF",Samoa:"WS","I\u00eamen":"YE",Mayotte:"YT","\u00c1frica do Sul":"ZA","Z\u00e2mbia":"ZM","Zimb\u00e1bue":"ZW","Regi\u00e3o desconhecida":"ZZ"};
ilib.data.ctrynames_ru={"\u0410\u0437\u0438\u044f":"142","\u0421\u0440\u0435\u0434\u043d\u044f\u044f \u0410\u0437\u0438\u044f":"143","\u0411\u043b\u0438\u0436\u043d\u0438\u0439 \u0438 \u0421\u0440\u0435\u0434\u043d\u0438\u0439 \u0412\u043e\u0441\u0442\u043e\u043a":"145","\u0415\u0432\u0440\u043e\u043f\u0430":"150","\u0412\u043e\u0441\u0442\u043e\u0447\u043d\u0430\u044f \u0415\u0432\u0440\u043e\u043f\u0430":"151","\u0421\u0435\u0432\u0435\u0440\u043d\u0430\u044f \u0415\u0432\u0440\u043e\u043f\u0430":"154",
"\u0417\u0430\u043f\u0430\u0434\u043d\u0430\u044f \u0415\u0432\u0440\u043e\u043f\u0430":"155","\u041b\u0430\u0442\u0438\u043d\u0441\u043a\u0430\u044f \u0410\u043c\u0435\u0440\u0438\u043a\u0430":"419","\u041c\u0438\u0440":"001","\u0410\u0444\u0440\u0438\u043a\u0430":"002","\u0421\u0435\u0432\u0435\u0440\u043d\u0430\u044f \u0410\u043c\u0435\u0440\u0438\u043a\u0430":"003","\u042e\u0436\u043d\u0430\u044f \u0410\u043c\u0435\u0440\u0438\u043a\u0430":"005","\u041e\u043a\u0435\u0430\u043d\u0438\u044f":"009",
"\u0417\u0430\u043f\u0430\u0434\u043d\u0430\u044f \u0410\u0444\u0440\u0438\u043a\u0430":"011","\u0426\u0435\u043d\u0442\u0440\u0430\u043b\u044c\u043d\u0430\u044f \u0410\u043c\u0435\u0440\u0438\u043a\u0430":"013","\u0412\u043e\u0441\u0442\u043e\u0447\u043d\u0430\u044f \u0410\u0444\u0440\u0438\u043a\u0430":"014","\u0421\u0435\u0432\u0435\u0440\u043d\u0430\u044f \u0410\u0444\u0440\u0438\u043a\u0430":"015","\u0426\u0435\u043d\u0442\u0440\u0430\u043b\u044c\u043d\u0430\u044f \u0410\u0444\u0440\u0438\u043a\u0430":"017",
"\u042e\u0436\u043d\u0430\u044f \u0410\u0444\u0440\u0438\u043a\u0430":"018","\u0426\u0435\u043d\u0442\u0440\u0430\u043b\u044c\u043d\u0430\u044f \u0438 \u042e\u0436\u043d\u0430\u044f \u0410\u043c\u0435\u0440\u0438\u043a\u0430":"019","\u0421\u0435\u0432\u0435\u0440\u043d\u0430\u044f \u0410\u043c\u0435\u0440\u0438\u043a\u0430 - \u0421\u0428\u0410 \u0438 \u041a\u0430\u043d\u0430\u0434\u0430":"021","\u041a\u0430\u0440\u0438\u0431\u044b":"029","\u0412\u043e\u0441\u0442\u043e\u0447\u043d\u0430\u044f \u0410\u0437\u0438\u044f":"030",
"\u042e\u0436\u043d\u0430\u044f \u0410\u0437\u0438\u044f":"034","\u042e\u0433\u043e-\u0412\u043e\u0441\u0442\u043e\u0447\u043d\u0430\u044f \u0410\u0437\u0438\u044f":"035","\u042e\u0436\u043d\u0430\u044f \u0415\u0432\u0440\u043e\u043f\u0430":"039","\u0410\u0432\u0441\u0442\u0440\u0430\u043b\u0430\u0437\u0438\u044f":"053","\u041c\u0435\u043b\u0430\u043d\u0435\u0437\u0438\u044f":"054","\u041c\u0438\u043a\u0440\u043e\u043d\u0435\u0437\u0438\u044f":"057","\u041f\u043e\u043b\u0438\u043d\u0435\u0437\u0438\u044f":"061",
"\u041e\u0441\u0442\u0440\u043e\u0432 \u0412\u043e\u0437\u043d\u0435\u0441\u0435\u043d\u0438\u044f":"AC","\u0410\u043d\u0434\u043e\u0440\u0440\u0430":"AD","\u041e\u0410\u042d":"AE","\u0410\u0444\u0433\u0430\u043d\u0438\u0441\u0442\u0430\u043d":"AF","\u0410\u043d\u0442\u0438\u0433\u0443\u0430 \u0438 \u0411\u0430\u0440\u0431\u0443\u0434\u0430":"AG","\u0410\u043d\u0433\u0438\u043b\u044c\u044f":"AI","\u0410\u043b\u0431\u0430\u043d\u0438\u044f":"AL","\u0410\u0440\u043c\u0435\u043d\u0438\u044f":"AM","\u041d\u0438\u0434\u0435\u0440\u043b\u0430\u043d\u0434\u0441\u043a\u0438\u0435 \u0410\u043d\u0442\u0438\u043b\u044c\u0441\u043a\u0438\u0435 \u043e-\u0432\u0430":"AN",
"\u0410\u043d\u0433\u043e\u043b\u0430":"AO","\u0410\u043d\u0442\u0430\u0440\u043a\u0442\u0438\u0434\u0430":"AQ","\u0410\u0440\u0433\u0435\u043d\u0442\u0438\u043d\u0430":"AR","\u0410\u043c\u0435\u0440\u0438\u043a\u0430\u043d\u0441\u043a\u043e\u0435 \u0421\u0430\u043c\u043e\u0430":"AS","\u0410\u0432\u0441\u0442\u0440\u0438\u044f":"AT","\u0410\u0432\u0441\u0442\u0440\u0430\u043b\u0438\u044f":"AU","\u0410\u0440\u0443\u0431\u0430":"AW","\u0410\u043b\u0430\u043d\u0434\u0441\u043a\u0438\u0435 \u043e-\u0432\u0430":"AX",
"\u0410\u0437\u0435\u0440\u0431\u0430\u0439\u0434\u0436\u0430\u043d":"AZ","\u0411\u043e\u0441\u043d\u0438\u044f \u0438 \u0413\u0435\u0440\u0446\u0435\u0433\u043e\u0432\u0438\u043d\u0430":"BA","\u0411\u0430\u0440\u0431\u0430\u0434\u043e\u0441":"BB","\u0411\u0430\u043d\u0433\u043b\u0430\u0434\u0435\u0448":"BD","\u0411\u0435\u043b\u044c\u0433\u0438\u044f":"BE","\u0411\u0443\u0440\u043a\u0438\u043d\u0430 \u0424\u0430\u0441\u043e":"BF","\u0411\u043e\u043b\u0433\u0430\u0440\u0438\u044f":"BG","\u0411\u0430\u0445\u0440\u0435\u0439\u043d":"BH",
"\u0411\u0443\u0440\u0443\u043d\u0434\u0438":"BI","\u0411\u0435\u043d\u0438\u043d":"BJ","\u041e-\u0432 \u0421\u0432. \u0411\u0430\u0440\u0442\u043e\u043b\u043e\u043c\u0435\u044f":"BL","\u0411\u0435\u0440\u043c\u0443\u0434\u0441\u043a\u0438\u0435 \u043e-\u0432\u0430":"BM","\u0411\u0440\u0443\u043d\u0435\u0439 \u0414\u0430\u0440\u0443\u0441\u0441\u0430\u043b\u0430\u043c":"BN","\u0411\u043e\u043b\u0438\u0432\u0438\u044f":"BO","\u0411\u043e\u043d\u044d\u0439\u0440, \u0421\u0438\u043d\u0442-\u042d\u0441\u0442\u0430\u0442\u0438\u0443\u0441 \u0438 \u0421\u0430\u0431\u0430":"BQ",
"\u0411\u0440\u0430\u0437\u0438\u043b\u0438\u044f":"BR","\u0411\u0430\u0433\u0430\u043c\u0441\u043a\u0438\u0435 \u043e-\u0432\u0430":"BS","\u0411\u0443\u0442\u0430\u043d":"BT","\u041e\u0441\u0442\u0440\u043e\u0432 \u0411\u0443\u0432\u0435":"BV","\u0411\u043e\u0442\u0441\u0432\u0430\u043d\u0430":"BW","\u0411\u0435\u043b\u0430\u0440\u0443\u0441\u044c":"BY","\u0411\u0435\u043b\u0438\u0437":"BZ","\u041a\u0430\u043d\u0430\u0434\u0430":"CA","\u041a\u043e\u043a\u043e\u0441\u043e\u0432\u044b\u0435 \u043e-\u0432\u0430":"CC",
"\u0414\u0435\u043c\u043e\u043a\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0420\u0435\u0441\u043f\u0443\u0431\u043b\u0438\u043a\u0430 \u041a\u043e\u043d\u0433\u043e":"CD","\u0426\u0410\u0420":"CF","\u041a\u043e\u043d\u0433\u043e - \u0411\u0440\u0430\u0437\u0437\u0430\u0432\u0438\u043b\u044c":"CG","\u0428\u0432\u0435\u0439\u0446\u0430\u0440\u0438\u044f":"CH","\u041a\u043e\u0442 \u0434\u2019\u0418\u0432\u0443\u0430\u0440":"CI","\u041e\u0441\u0442\u0440\u043e\u0432\u0430 \u041a\u0443\u043a\u0430":"CK",
"\u0427\u0438\u043b\u0438":"CL","\u041a\u0430\u043c\u0435\u0440\u0443\u043d":"CM","\u041a\u0438\u0442\u0430\u0439":"CN","\u041a\u043e\u043b\u0443\u043c\u0431\u0438\u044f":"CO","\u041e\u0441\u0442\u0440\u043e\u0432 \u041a\u043b\u0438\u043f\u043f\u0435\u0440\u0442\u043e\u043d":"CP","\u041a\u043e\u0441\u0442\u0430-\u0420\u0438\u043a\u0430":"CR","\u041a\u0443\u0431\u0430":"CU","\u041e\u0441\u0442\u0440\u043e\u0432\u0430 \u0417\u0435\u043b\u0435\u043d\u043e\u0433\u043e \u041c\u044b\u0441\u0430":"CV","\u041a\u044e\u0440\u0430\u0441\u0430\u043e":"CW",
"\u041e\u0441\u0442\u0440\u043e\u0432 \u0420\u043e\u0436\u0434\u0435\u0441\u0442\u0432\u0430":"CX","\u041a\u0438\u043f\u0440":"CY","\u0427\u0435\u0445\u0438\u044f":"CZ","\u0413\u0435\u0440\u043c\u0430\u043d\u0438\u044f":"DE","\u0414\u0438\u0435\u0433\u043e-\u0413\u0430\u0440\u0441\u0438\u044f":"DG","\u0414\u0436\u0438\u0431\u0443\u0442\u0438":"DJ","\u0414\u0430\u043d\u0438\u044f":"DK","\u0414\u043e\u043c\u0438\u043d\u0438\u043a\u0430":"DM","\u0414\u043e\u043c\u0438\u043d\u0438\u043a\u0430\u043d\u0441\u043a\u0430\u044f \u0420\u0435\u0441\u043f\u0443\u0431\u043b\u0438\u043a\u0430":"DO",
"\u0410\u043b\u0436\u0438\u0440":"DZ","\u0421\u0435\u0443\u0442\u0430 \u0438 \u041c\u0435\u043b\u0438\u043b\u044c\u044f":"EA","\u042d\u043a\u0432\u0430\u0434\u043e\u0440":"EC","\u042d\u0441\u0442\u043e\u043d\u0438\u044f":"EE","\u0415\u0433\u0438\u043f\u0435\u0442":"EG","\u0417\u0430\u043f\u0430\u0434\u043d\u0430\u044f \u0421\u0430\u0445\u0430\u0440\u0430":"EH","\u042d\u0440\u0438\u0442\u0440\u0435\u044f":"ER","\u0418\u0441\u043f\u0430\u043d\u0438\u044f":"ES","\u042d\u0444\u0438\u043e\u043f\u0438\u044f":"ET",
"\u0415\u0432\u0440\u043e\u043f\u0435\u0439\u0441\u043a\u0438\u0439 \u0441\u043e\u044e\u0437":"EU","\u0424\u0438\u043d\u043b\u044f\u043d\u0434\u0438\u044f":"FI","\u0424\u0438\u0434\u0436\u0438":"FJ","\u0424\u043e\u043b\u043a\u043b\u0435\u043d\u0434\u0441\u043a\u0438\u0435 \u043e-\u0432\u0430":"FK","\u0424\u0435\u0434\u0435\u0440\u0430\u0442\u0438\u0432\u043d\u044b\u0435 \u0428\u0442\u0430\u0442\u044b \u041c\u0438\u043a\u0440\u043e\u043d\u0435\u0437\u0438\u0438":"FM","\u0424\u0430\u0440\u0435\u0440\u0441\u043a\u0438\u0435 \u043e-\u0432\u0430":"FO",
"\u0424\u0440\u0430\u043d\u0446\u0438\u044f":"FR","\u0413\u0430\u0431\u043e\u043d":"GA","\u0412\u0435\u043b\u0438\u043a\u043e\u0431\u0440\u0438\u0442\u0430\u043d\u0438\u044f":"GB","\u0413\u0440\u0435\u043d\u0430\u0434\u0430":"GD","\u0413\u0440\u0443\u0437\u0438\u044f":"GE","\u0424\u0440\u0430\u043d\u0446\u0443\u0437\u0441\u043a\u0430\u044f \u0413\u0432\u0438\u0430\u043d\u0430":"GF","\u0413\u0435\u0440\u043d\u0441\u0438":"GG","\u0413\u0430\u043d\u0430":"GH","\u0413\u0438\u0431\u0440\u0430\u043b\u0442\u0430\u0440":"GI",
"\u0413\u0440\u0435\u043d\u043b\u0430\u043d\u0434\u0438\u044f":"GL","\u0413\u0430\u043c\u0431\u0438\u044f":"GM","\u0413\u0432\u0438\u043d\u0435\u044f":"GN","\u0413\u0432\u0430\u0434\u0435\u043b\u0443\u043f\u0430":"GP","\u042d\u043a\u0432\u0430\u0442\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u0430\u044f \u0413\u0432\u0438\u043d\u0435\u044f":"GQ","\u0413\u0440\u0435\u0446\u0438\u044f":"GR","\u042e\u0436\u043d\u0430\u044f \u0414\u0436\u043e\u0440\u0434\u0436\u0438\u044f \u0438 \u042e\u0436\u043d\u044b\u0435 \u0421\u0430\u043d\u0434\u0432\u0438\u0447\u0435\u0432\u044b \u041e\u0441\u0442\u0440\u043e\u0432\u0430":"GS",
"\u0413\u0432\u0430\u0442\u0435\u043c\u0430\u043b\u0430":"GT","\u0413\u0443\u0430\u043c":"GU","\u0413\u0432\u0438\u043d\u0435\u044f-\u0411\u0438\u0441\u0430\u0443":"GW","\u0413\u0430\u0439\u0430\u043d\u0430":"GY","\u0413\u043e\u043d\u043a\u043e\u043d\u0433 (\u043e\u0441\u043e\u0431\u044b\u0439 \u0440\u0430\u0439\u043e\u043d)":"HK","\u041e\u0441\u0442\u0440\u043e\u0432\u0430 \u0425\u0435\u0440\u0434 \u0438 \u041c\u0430\u043a\u0434\u043e\u043d\u0430\u043b\u044c\u0434":"HM","\u0413\u043e\u043d\u0434\u0443\u0440\u0430\u0441":"HN",
"\u0425\u043e\u0440\u0432\u0430\u0442\u0438\u044f":"HR","\u0413\u0430\u0438\u0442\u0438":"HT","\u0412\u0435\u043d\u0433\u0440\u0438\u044f":"HU","\u041a\u0430\u043d\u0430\u0440\u0441\u043a\u0438\u0435 \u043e-\u0432\u0430":"IC","\u0418\u043d\u0434\u043e\u043d\u0435\u0437\u0438\u044f":"ID","\u0418\u0440\u043b\u0430\u043d\u0434\u0438\u044f":"IE","\u0418\u0437\u0440\u0430\u0438\u043b\u044c":"IL","\u041e\u0441\u0442\u0440\u043e\u0432 \u041c\u044d\u043d":"IM","\u0418\u043d\u0434\u0438\u044f":"IN","\u0411\u0440\u0438\u0442\u0430\u043d\u0441\u043a\u0430\u044f \u0442\u0435\u0440\u0440\u0438\u0442\u043e\u0440\u0438\u044f \u0432 \u0418\u043d\u0434\u0438\u0439\u0441\u043a\u043e\u043c \u043e\u043a\u0435\u0430\u043d\u0435":"IO",
"\u0418\u0440\u0430\u043a":"IQ","\u0418\u0440\u0430\u043d":"IR","\u0418\u0441\u043b\u0430\u043d\u0434\u0438\u044f":"IS","\u0418\u0442\u0430\u043b\u0438\u044f":"IT","\u0414\u0436\u0435\u0440\u0441\u0438":"JE","\u042f\u043c\u0430\u0439\u043a\u0430":"JM","\u0418\u043e\u0440\u0434\u0430\u043d\u0438\u044f":"JO","\u042f\u043f\u043e\u043d\u0438\u044f":"JP","\u041a\u0435\u043d\u0438\u044f":"KE","\u041a\u0438\u0440\u0433\u0438\u0437\u0438\u044f":"KG","\u041a\u0430\u043c\u0431\u043e\u0434\u0436\u0430":"KH",
"\u041a\u0438\u0440\u0438\u0431\u0430\u0442\u0438":"KI","\u041a\u043e\u043c\u043e\u0440\u0441\u043a\u0438\u0435 \u043e-\u0432\u0430":"KM","\u0421\u0435\u043d\u0442-\u041a\u0438\u0442\u0442\u0441 \u0438 \u041d\u0435\u0432\u0438\u0441":"KN","\u0421\u0435\u0432\u0435\u0440\u043d\u0430\u044f \u041a\u043e\u0440\u0435\u044f":"KP","\u0420\u0435\u0441\u043f\u0443\u0431\u043b\u0438\u043a\u0430 \u041a\u043e\u0440\u0435\u044f":"KR","\u041a\u0443\u0432\u0435\u0439\u0442":"KW","\u041a\u0430\u0439\u043c\u0430\u043d\u043e\u0432\u044b \u043e-\u0432\u0430":"KY",
"\u041a\u0430\u0437\u0430\u0445\u0441\u0442\u0430\u043d":"KZ","\u041b\u0430\u043e\u0441":"LA","\u041b\u0438\u0432\u0430\u043d":"LB","\u0421\u0435\u043d\u0442-\u041b\u044e\u0441\u0438\u044f":"LC","\u041b\u0438\u0445\u0442\u0435\u043d\u0448\u0442\u0435\u0439\u043d":"LI","\u0428\u0440\u0438-\u041b\u0430\u043d\u043a\u0430":"LK","\u041b\u0438\u0431\u0435\u0440\u0438\u044f":"LR","\u041b\u0435\u0441\u043e\u0442\u043e":"LS","\u041b\u0438\u0442\u0432\u0430":"LT","\u041b\u044e\u043a\u0441\u0435\u043c\u0431\u0443\u0440\u0433":"LU",
"\u041b\u0430\u0442\u0432\u0438\u044f":"LV","\u041b\u0438\u0432\u0438\u044f":"LY","\u041c\u0430\u0440\u043e\u043a\u043a\u043e":"MA","\u041c\u043e\u043d\u0430\u043a\u043e":"MC","\u041c\u043e\u043b\u0434\u043e\u0432\u0430":"MD","\u0427\u0435\u0440\u043d\u043e\u0433\u043e\u0440\u0438\u044f":"ME","\u041e\u0441\u0442\u0440\u043e\u0432 \u0421\u0432\u044f\u0442\u043e\u0433\u043e \u041c\u0430\u0440\u0442\u0438\u043d\u0430":"MF","\u041c\u0430\u0434\u0430\u0433\u0430\u0441\u043a\u0430\u0440":"MG","\u041c\u0430\u0440\u0448\u0430\u043b\u043b\u043e\u0432\u044b \u043e-\u0432\u0430":"MH",
"\u041c\u0430\u043a\u0435\u0434\u043e\u043d\u0438\u044f":"MK","\u041c\u0430\u043b\u0438":"ML","\u041c\u044c\u044f\u043d\u043c\u0430 [\u0411\u0438\u0440\u043c\u0430]":"MM","\u041c\u043e\u043d\u0433\u043e\u043b\u0438\u044f":"MN","\u041c\u0430\u043a\u0430\u043e (\u043e\u0441\u043e\u0431\u044b\u0439 \u0440\u0430\u0439\u043e\u043d)":"MO","\u0421\u0435\u0432\u0435\u0440\u043d\u044b\u0435 \u041c\u0430\u0440\u0438\u0430\u043d\u0441\u043a\u0438\u0435 \u043e-\u0432\u0430":"MP","\u041c\u0430\u0440\u0442\u0438\u043d\u0438\u043a\u0430":"MQ",
"\u041c\u0430\u0432\u0440\u0438\u0442\u0430\u043d\u0438\u044f":"MR","\u041c\u043e\u043d\u0442\u0441\u0435\u0440\u0440\u0430\u0442":"MS","\u041c\u0430\u043b\u044c\u0442\u0430":"MT","\u041c\u0430\u0432\u0440\u0438\u043a\u0438\u0439":"MU","\u041c\u0430\u043b\u044c\u0434\u0438\u0432\u0441\u043a\u0438\u0435 \u043e-\u0432\u0430":"MV","\u041c\u0430\u043b\u0430\u0432\u0438":"MW","\u041c\u0435\u043a\u0441\u0438\u043a\u0430":"MX","\u041c\u0430\u043b\u0430\u0439\u0437\u0438\u044f":"MY","\u041c\u043e\u0437\u0430\u043c\u0431\u0438\u043a":"MZ",
"\u041d\u0430\u043c\u0438\u0431\u0438\u044f":"NA","\u041d\u043e\u0432\u0430\u044f \u041a\u0430\u043b\u0435\u0434\u043e\u043d\u0438\u044f":"NC","\u041d\u0438\u0433\u0435\u0440":"NE","\u041e\u0441\u0442\u0440\u043e\u0432 \u041d\u043e\u0440\u0444\u043e\u043b\u043a":"NF","\u041d\u0438\u0433\u0435\u0440\u0438\u044f":"NG","\u041d\u0438\u043a\u0430\u0440\u0430\u0433\u0443\u0430":"NI","\u041d\u0438\u0434\u0435\u0440\u043b\u0430\u043d\u0434\u044b":"NL","\u041d\u043e\u0440\u0432\u0435\u0433\u0438\u044f":"NO",
"\u041d\u0435\u043f\u0430\u043b":"NP","\u041d\u0430\u0443\u0440\u0443":"NR","\u041d\u0438\u0443\u0435":"NU","\u041d\u043e\u0432\u0430\u044f \u0417\u0435\u043b\u0430\u043d\u0434\u0438\u044f":"NZ","\u041e\u043c\u0430\u043d":"OM","\u041f\u0430\u043d\u0430\u043c\u0430":"PA","\u041f\u0435\u0440\u0443":"PE","\u0424\u0440\u0430\u043d\u0446\u0443\u0437\u0441\u043a\u0430\u044f \u041f\u043e\u043b\u0438\u043d\u0435\u0437\u0438\u044f":"PF","\u041f\u0430\u043f\u0443\u0430 \u2013 \u041d\u043e\u0432\u0430\u044f \u0413\u0432\u0438\u043d\u0435\u044f":"PG",
"\u0424\u0438\u043b\u0438\u043f\u043f\u0438\u043d\u044b":"PH","\u041f\u0430\u043a\u0438\u0441\u0442\u0430\u043d":"PK","\u041f\u043e\u043b\u044c\u0448\u0430":"PL","\u0421\u0435\u043d-\u041f\u044c\u0435\u0440 \u0438 \u041c\u0438\u043a\u0435\u043b\u043e\u043d":"PM","\u041f\u0438\u0442\u043a\u044d\u0440\u043d":"PN","\u041f\u0443\u044d\u0440\u0442\u043e-\u0420\u0438\u043a\u043e":"PR","\u041f\u0430\u043b\u0435\u0441\u0442\u0438\u043d\u0441\u043a\u0438\u0435 \u0442\u0435\u0440\u0440\u0438\u0442\u043e\u0440\u0438\u0438":"PS",
"\u041f\u043e\u0440\u0442\u0443\u0433\u0430\u043b\u0438\u044f":"PT","\u041f\u0430\u043b\u0430\u0443":"PW","\u041f\u0430\u0440\u0430\u0433\u0432\u0430\u0439":"PY","\u041a\u0430\u0442\u0430\u0440":"QA","\u0412\u043d\u0435\u0448\u043d\u044f\u044f \u041e\u043a\u0435\u0430\u043d\u0438\u044f":"QO","\u0420\u0435\u044e\u043d\u044c\u043e\u043d":"RE","\u0420\u0443\u043c\u044b\u043d\u0438\u044f":"RO","\u0421\u0435\u0440\u0431\u0438\u044f":"RS","\u0420\u043e\u0441\u0441\u0438\u044f":"RU","\u0420\u0443\u0430\u043d\u0434\u0430":"RW",
"\u0421\u0430\u0443\u0434\u043e\u0432\u0441\u043a\u0430\u044f \u0410\u0440\u0430\u0432\u0438\u044f":"SA","\u0421\u043e\u043b\u043e\u043c\u043e\u043d\u043e\u0432\u044b \u043e-\u0432\u0430":"SB","\u0421\u0435\u0439\u0448\u0435\u043b\u044c\u0441\u043a\u0438\u0435 \u043e-\u0432\u0430":"SC","\u0421\u0443\u0434\u0430\u043d":"SD","\u0428\u0432\u0435\u0446\u0438\u044f":"SE","\u0421\u0438\u043d\u0433\u0430\u043f\u0443\u0440":"SG","\u041e-\u0432 \u0421\u0432. \u0415\u043b\u0435\u043d\u044b":"SH","\u0421\u043b\u043e\u0432\u0435\u043d\u0438\u044f":"SI",
"\u0421\u0432\u0430\u043b\u044c\u0431\u0430\u0440\u0434 \u0438 \u042f\u043d-\u041c\u0430\u0439\u0435\u043d":"SJ","\u0421\u043b\u043e\u0432\u0430\u043a\u0438\u044f":"SK","\u0421\u044c\u0435\u0440\u0440\u0430-\u041b\u0435\u043e\u043d\u0435":"SL","\u0421\u0430\u043d-\u041c\u0430\u0440\u0438\u043d\u043e":"SM","\u0421\u0435\u043d\u0435\u0433\u0430\u043b":"SN","\u0421\u043e\u043c\u0430\u043b\u0438":"SO","\u0421\u0443\u0440\u0438\u043d\u0430\u043c":"SR","\u042e\u0436\u043d\u044b\u0439 \u0421\u0443\u0434\u0430\u043d":"SS",
"\u0421\u0430\u043d-\u0422\u043e\u043c\u0435 \u0438 \u041f\u0440\u0438\u043d\u0441\u0438\u043f\u0438":"ST","\u0421\u0430\u043b\u044c\u0432\u0430\u0434\u043e\u0440":"SV","\u0421\u0438\u043d\u0442-\u041c\u0430\u0440\u0442\u0435\u043d":"SX","\u0421\u0438\u0440\u0438\u044f":"SY","\u0421\u0432\u0430\u0437\u0438\u043b\u0435\u043d\u0434":"SZ","\u0422\u0440\u0438\u0441\u0442\u0430\u043d-\u0434\u0430-\u041a\u0443\u043d\u044c\u044f":"TA","\u041e-\u0432\u0430 \u0422\u0451\u0440\u043a\u0441 \u0438 \u041a\u0430\u0439\u043a\u043e\u0441":"TC",
"\u0427\u0430\u0434":"TD","\u0424\u0440\u0430\u043d\u0446\u0443\u0437\u0441\u043a\u0438\u0435 \u042e\u0436\u043d\u044b\u0435 \u0422\u0435\u0440\u0440\u0438\u0442\u043e\u0440\u0438\u0438":"TF","\u0422\u043e\u0433\u043e":"TG","\u0422\u0430\u0438\u043b\u0430\u043d\u0434":"TH","\u0422\u0430\u0434\u0436\u0438\u043a\u0438\u0441\u0442\u0430\u043d":"TJ","\u0422\u043e\u043a\u0435\u043b\u0430\u0443":"TK","\u0422\u0438\u043c\u043e\u0440-\u041b\u0435\u0448\u0442\u0438":"TL","\u0422\u0443\u0440\u043a\u043c\u0435\u043d\u0438\u0441\u0442\u0430\u043d":"TM",
"\u0422\u0443\u043d\u0438\u0441":"TN","\u0422\u043e\u043d\u0433\u0430":"TO","\u0422\u0443\u0440\u0446\u0438\u044f":"TR","\u0422\u0440\u0438\u043d\u0438\u0434\u0430\u0434 \u0438 \u0422\u043e\u0431\u0430\u0433\u043e":"TT","\u0422\u0443\u0432\u0430\u043b\u0443":"TV","\u0422\u0430\u0439\u0432\u0430\u043d\u044c":"TW","\u0422\u0430\u043d\u0437\u0430\u043d\u0438\u044f":"TZ","\u0423\u043a\u0440\u0430\u0438\u043d\u0430":"UA","\u0423\u0433\u0430\u043d\u0434\u0430":"UG","\u0412\u043d\u0435\u0448\u043d\u0438\u0435 \u043c\u0430\u043b\u044b\u0435 \u043e\u0441\u0442\u0440\u043e\u0432\u0430 (\u0421\u0428\u0410)":"UM",
"\u0421\u0428\u0410":"US","\u0423\u0440\u0443\u0433\u0432\u0430\u0439":"UY","\u0423\u0437\u0431\u0435\u043a\u0438\u0441\u0442\u0430\u043d":"UZ","\u0412\u0430\u0442\u0438\u043a\u0430\u043d":"VA","\u0421\u0435\u043d\u0442-\u0412\u0438\u043d\u0441\u0435\u043d\u0442 \u0438 \u0413\u0440\u0435\u043d\u0430\u0434\u0438\u043d\u044b":"VC","\u0412\u0435\u043d\u0435\u0441\u0443\u044d\u043b\u0430":"VE","\u0411\u0440\u0438\u0442\u0430\u043d\u0441\u043a\u0438\u0435 \u0412\u0438\u0440\u0433\u0438\u043d\u0441\u043a\u0438\u0435 \u043e-\u0432\u0430":"VG",
"\u0412\u0438\u0440\u0433\u0438\u043d\u0441\u043a\u0438\u0435 \u043e-\u0432\u0430 (\u0421\u0428\u0410)":"VI","\u0412\u044c\u0435\u0442\u043d\u0430\u043c":"VN","\u0412\u0430\u043d\u0443\u0430\u0442\u0443":"VU","\u0423\u043e\u043b\u043b\u0438\u0441 \u0438 \u0424\u0443\u0442\u0443\u043d\u0430":"WF","\u0421\u0430\u043c\u043e\u0430":"WS","\u0419\u0435\u043c\u0435\u043d":"YE","\u041c\u0430\u0439\u043e\u0442\u0442\u0430":"YT","\u042e\u0410\u0420":"ZA","\u0417\u0430\u043c\u0431\u0438\u044f":"ZM","\u0417\u0438\u043c\u0431\u0430\u0431\u0432\u0435":"ZW",
"\u041d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0439 \u0440\u0435\u0433\u0438\u043e\u043d":"ZZ"};
ilib.data.ctrynames_tr={Asya:"142","Orta Asya":"143","Bat\u0131 Asya":"145",Avrupa:"150","Do\u011fu Avrupa":"151","Kuzey Avrupa":"154","Bat\u0131 Avrupa":"155","Latin Amerika":"419","D\u00fcnya":"001",Afrika:"002","Kuzey Amerika":"003","G\u00fcney Amerika":"005",Okyanusya:"009","Bat\u0131 Afrika":"011","Orta Amerika":"013","Do\u011fu Afrika":"014","Kuzey Afrika":"015","Orta Afrika":"017","Afrika'n\u0131n G\u00fcneyi":"018",Amerika:"019","Amerika'n\u0131n Kuzeyi":"021",Karayipler:"029","Do\u011fu Asya":"030",
"G\u00fcney Asya":"034","G\u00fcneydo\u011fu Asya":"035","G\u00fcney Avrupa":"039",Avustralasya:"053",Melanezya:"054",Mikronezya:"057",Polinezya:"061","Ascension Adas\u0131":"AC",Andorra:"AD","Birle\u015fik Arap Emirlikleri":"AE",Afganistan:"AF","Antigua ve Barbuda":"AG",Anguilla:"AI",Arnavutluk:"AL",Ermenistan:"AM","Hollanda Antilleri":"AN",Angola:"AO",Antarktika:"AQ",Arjantin:"AR","Amerikan Samoas\u0131":"AS",Avusturya:"AT",Avustralya:"AU",Aruba:"AW","\u00c5land Adalar\u0131":"AX",Azerbaycan:"AZ",
"Bosna Hersek":"BA",Barbados:"BB","Banglade\u015f":"BD","Bel\u00e7ika":"BE","Burkina Faso":"BF",Bulgaristan:"BG",Bahreyn:"BH",Burundi:"BI",Benin:"BJ","Saint Barthelemy":"BL",Bermuda:"BM",Brunei:"BN",Bolivya:"BO","Karayip Hollanda":"BQ",Brezilya:"BR",Bahamalar:"BS",Butan:"BT","Bouvet Adas\u0131":"BV",Botsvana:"BW","Beyaz Rusya":"BY",Belize:"BZ",Kanada:"CA","Cocos [Keeling] Adalar\u0131":"CC","Kongo - Kin\u015fasa":"CD","Orta Afrika Cumhuriyeti":"CF","Kongo - Brazavil":"CG","\u0130svi\u00e7re":"CH",
"Fildi\u015fi Sahili":"CI","Cook Adalar\u0131":"CK","\u015eili":"CL",Kamerun:"CM","\u00c7in":"CN",Kolombiya:"CO","Clipperton Adas\u0131":"CP","Kosta Rika":"CR","K\u00fcba":"CU","Cape Verde":"CV","Cura\u00e7ao":"CW","Christmas Adas\u0131":"CX","G\u00fcney K\u0131br\u0131s Rum Kesimi":"CY","\u00c7ek Cumhuriyeti":"CZ",Almanya:"DE","Diego Garcia":"DG",Cibuti:"DJ",Danimarka:"DK",Dominika:"DM","Dominik Cumhuriyeti":"DO",Cezayir:"DZ","Ceuta ve Melilla":"EA",Ekvador:"EC",Estonya:"EE","M\u0131s\u0131r":"EG",
"Bat\u0131 Sahara":"EH",Eritre:"ER","\u0130spanya":"ES",Etiyopya:"ET","Avrupa Birli\u011fi":"EU",Finlandiya:"FI",Fiji:"FJ","Falkland Adalar\u0131":"FK","Mikronezya Federal Eyaletleri":"FM","Faroe Adalar\u0131":"FO",Fransa:"FR",Gabon:"GA","Birle\u015fik Krall\u0131k":"GB",Grenada:"GD","G\u00fcrcistan":"GE","Frans\u0131z Guyanas\u0131":"GF",Guernsey:"GG",Gana:"GH","Cebelitar\u0131k":"GI","Gr\u00f6nland":"GL",Gambiya:"GM",Gine:"GN",Guadalupe:"GP","Ekvator Ginesi":"GQ",Yunanistan:"GR","G\u00fcney Georgia ve G\u00fcney Sandwich Adalar\u0131":"GS",
Guatemala:"GT",Guam:"GU","Gine-Bissau":"GW",Guyana:"GY","\u00c7in Hong Kong \u00d6YB":"HK","Heard Adas\u0131 ve McDonald Adalar\u0131":"HM",Honduras:"HN","H\u0131rvatistan":"HR",Haiti:"HT",Macaristan:"HU","Kanarya Adalar\u0131":"IC",Endonezya:"ID","\u0130rlanda":"IE","\u0130srail":"IL","Man Adas\u0131":"IM",Hindistan:"IN","\u0130ngiliz Hint Okyanusu B\u00f6lgesi":"IO",Irak:"IQ","\u0130ran":"IR","\u0130zlanda":"IS","\u0130talya":"IT",Jersey:"JE",Jamaika:"JM","\u00dcrd\u00fcn":"JO",Japonya:"JP",Kenya:"KE",
"K\u0131rg\u0131zistan":"KG","Kambo\u00e7ya":"KH",Kiribati:"KI",Komorlar:"KM","Saint Kitts ve Nevis":"KN","Kuzey Kore":"KP","G\u00fcney Kore":"KR",Kuveyt:"KW","Cayman Adalar\u0131":"KY",Kazakistan:"KZ",Laos:"LA","L\u00fcbnan":"LB","Saint Lucia":"LC",Liechtenstein:"LI","Sri Lanka":"LK",Liberya:"LR",Lesoto:"LS",Litvanya:"LT","L\u00fcksemburg":"LU",Letonya:"LV",Libya:"LY",Fas:"MA",Monako:"MC",Moldova:"MD","Karada\u011f":"ME","Saint Martin":"MF",Madagaskar:"MG","Marshall Adalar\u0131":"MH",Makedonya:"MK",
Mali:"ML","Myanmar [Burma]":"MM","Mo\u011folistan":"MN","\u00c7in Makao \u00d6YB":"MO","Kuzey Mariana Adalar\u0131":"MP",Martinik:"MQ",Moritanya:"MR",Montserrat:"MS",Malta:"MT",Mauritius:"MU",Maldivler:"MV",Malavi:"MW",Meksika:"MX",Malezya:"MY",Mozambik:"MZ",Namibya:"NA","Yeni Kaledonya":"NC",Nijer:"NE","Norfolk Adas\u0131":"NF",Nijerya:"NG",Nikaragua:"NI",Hollanda:"NL","Norve\u00e7":"NO",Nepal:"NP",Nauru:"NR",Niue:"NU","Yeni Zelanda":"NZ",Umman:"OM",Panama:"PA",Peru:"PE","Frans\u0131z Polinezyas\u0131":"PF",
"Papua Yeni Gine":"PG",Filipinler:"PH",Pakistan:"PK",Polonya:"PL","Saint Pierre ve Miquelon":"PM","Pitcairn Adalar\u0131":"PN","Porto Riko":"PR","Filistin B\u00f6lgeleri":"PS",Portekiz:"PT",Palau:"PW",Paraguay:"PY",Katar:"QA","Uzak Okyanusya":"QO","R\u00e9union":"RE",Romanya:"RO","S\u0131rbistan":"RS",Rusya:"RU",Ruanda:"RW","Suudi Arabistan":"SA","Solomon Adalar\u0131":"SB","Sey\u015feller":"SC",Sudan:"SD","\u0130sve\u00e7":"SE",Singapur:"SG","Saint Helena":"SH",Slovenya:"SI","Svalbard ve Jan Mayen Adalar\u0131":"SJ",
Slovakya:"SK","Sierra Leone":"SL","San Marino":"SM",Senegal:"SN",Somali:"SO",Surinam:"SR","G\u00fcney Sudan":"SS","S\u00e3o Tom\u00e9 ve Pr\u00edncipe":"ST","El Salvador":"SV","Sint Maarten":"SX",Suriye:"SY",Svaziland:"SZ","Tristan da Cunha":"TA","Turks ve Caicos Adalar\u0131":"TC","\u00c7ad":"TD","Frans\u0131z G\u00fcney B\u00f6lgeleri":"TF",Togo:"TG",Tayland:"TH",Tacikistan:"TJ",Tokelau:"TK","Timor-Leste":"TL","T\u00fcrkmenistan":"TM",Tunus:"TN",Tonga:"TO","T\u00fcrkiye":"TR","Trinidad ve Tobago":"TT",
Tuvalu:"TV",Tayvan:"TW",Tanzanya:"TZ",Ukrayna:"UA",Uganda:"UG","ABD D\u0131\u015f Adalar\u0131":"UM",ABD:"US",Uruguay:"UY","\u00d6zbekistan":"UZ",Vatikan:"VA","Saint Vincent ve Grenadinler":"VC",Venezuela:"VE","Britanya Virjin Adalar\u0131":"VG","ABD Virjin Adalar\u0131":"VI",Vietnam:"VN",Vanuatu:"VU","Wallis ve Futuna Adalar\u0131":"WF",Samoa:"WS",Yemen:"YE",Mayotte:"YT","G\u00fcney Afrika":"ZA",Zambiya:"ZM",Zimbabve:"ZW","Bilinmeyen B\u00f6lge":"ZZ"};
ilib.data.ctrynames_vi={"Ch\u00e2u \u00c1":"142","Trung \u00c1":"143","T\u00e2y \u00c1":"145","\u00c2u Ch\u00e2u":"150","\u0110\u00f4ng \u00c2u":"151","Mi\u1ec1n B\u1eafc Ch\u00e2u \u00c2u":"154","T\u00e2y \u00c2u":"155","Ch\u00e2u M\u1ef9 La-tinh":"419","Th\u1ebf gi\u1edbi":"001","Ch\u00e2u Phi":"002","B\u1eafc M\u1ef9":"003","Nam M\u1ef9":"005","Ch\u00e2u \u0110\u1ea1i D\u01b0\u01a1ng":"009","T\u00e2y Phi":"011","Trung M\u1ef9":"013","\u0110\u00f4ng Phi":"014","B\u1eafc Phi":"015","Trung Phi":"017",
"Mi\u1ec1n Nam Ch\u00e2u Phi":"018","Ch\u00e2u M\u1ef9":"019","Mi\u1ec1n B\u1eafc Ch\u00e2u M\u1ef9":"021","Ca-ri-b\u00ea":"029","\u0110\u00f4ng \u00c1":"030","Nam \u00c1":"034","\u0110\u00f4ng Nam \u00c1":"035","Nam \u00c2u":"039","\u00dac v\u00e0 New Zealand":"053",Melanesia:"054","V\u00f9ng Micronesian":"057",Polynesia:"061","\u0110\u1ea3o Ascension":"AC",Andorra:"AD","C\u00e1c Ti\u1ec3u V\u01b0\u01a1ng qu\u1ed1c A-r\u1eadp Th\u1ed1ng nh\u1ea5t":"AE",Afghanistan:"AF","Antigua v\u00e0 Barbuda":"AG",
Anguilla:"AI",Albani:"AL",Armenia:"AM","T\u00e2y \u1ea4n H\u00e0 Lan":"AN",Angola:"AO","Nam C\u1ef1c":"AQ",Argentina:"AR","\u0110\u1ea3o Somoa thu\u1ed9c M\u1ef9":"AS","\u00c1o":"AT","\u00dac":"AU",Aruba:"AW","Qu\u1ea7n \u0111\u1ea3o Aland":"AX",Azerbaijan:"AZ","B\u00f4-xni-a H\u00e9c-x\u00ea-g\u00f4-vi-na":"BA",Barbados:"BB",Bangladesh:"BD","B\u1ec9":"BE","Burkina Faso":"BF",Bungari:"BG",Bahrain:"BH",Burundi:"BI",Benin:"BJ","Saint Barth\u00e9lemy":"BL",Bermuda:"BM",Brunei:"BN",Bolivia:"BO","Bra-xin":"BR",
Bahamas:"BS",Bhutan:"BT","\u0110\u1ea3o Bouvet":"BV",Botswana:"BW",Belarus:"BY","B\u00ea-li-x\u00ea":"BZ","Ca-na-\u0111a":"CA","Qu\u1ea7n \u0111\u1ea3o Cocos":"CC","Congo - Kinshasa":"CD","C\u1ed9ng h\u00f2a Trung Phi":"CF","C\u00f4ng-g\u00f4":"CG","Th\u1ee5y S\u0129":"CH","B\u1edd Bi\u1ec3n Ng\u00e0":"CI","Qu\u1ea7n \u0110\u1ea3o Cook":"CK",Chile:"CL","Ca-m\u01a1-run":"CM","Trung Qu\u1ed1c":"CN",Colombia:"CO","\u0110\u1ea3o Clipperton":"CP","C\u1ed1t-xta Ri-ca":"CR","Cu Ba":"CU","Cape Verde":"CV",
"Cura\u00e7ao":"CW","\u0110\u1ea3o Gi\u00e1ng Sinh":"CX","S\u00edp":"CY","C\u1ed9ng h\u00f2a S\u00e9c":"CZ","\u0110\u1ee9c":"DE","Diego Garcia":"DG",Djibouti:"DJ","\u0110an M\u1ea1ch":"DK",Dominica:"DM","C\u1ed9ng h\u00f2a Dominica":"DO",Algeria:"DZ","Ceuta v\u00e0 Melilla":"EA",Ecuador:"EC",Estonia:"EE","Ai C\u1eadp":"EG","T\u00e2y Sahara":"EH",Eritrea:"ER","T\u00e2y Ban Nha":"ES",Ethiopia:"ET","Li\u00ean Minh Ch\u00e2u \u00c2u":"EU","Ph\u1ea7n Lan":"FI",Fiji:"FJ","Qu\u1ea7n \u0110\u1ea3o Falkland":"FK",
Micronesia:"FM","Qu\u1ea7n \u0110\u1ea3o Faroe":"FO","Ph\u00e1p":"FR",Gabon:"GA","V\u01b0\u01a1ng qu\u1ed1c Anh":"GB",Grenada:"GD",Georgia:"GE","Quiana thu\u1ed9c Ph\u00e1p":"GF",Guernsey:"GG",Ghana:"GH",Gibraltar:"GI","B\u0103ng \u0110\u1ea3o":"GL",Gambia:"GM",Guinea:"GN",Guadeloupe:"GP","Guinea X\u00edch \u0110\u1ea1o":"GQ","Hy L\u1ea1p":"GR","Qu\u1ea7n \u0111\u1ea3o Nam Georgia v\u00e0 Nam Sandwich":"GS","Goa-t\u00ea-ma-la":"GT",Guam:"GU","Guinea-Bissau":"GW",Guyana:"GY","\u0110\u1eb7c khu h\u00e0nh ch\u00ednh H\u1ed3ng K\u00f4ng thu\u1ed9c CHND Trung Hoa":"HK",
"\u0110\u1ea3o Heard v\u00e0 Qu\u1ea7n \u0111\u1ea3o McDonald":"HM","H\u00f4n-\u0111u-r\u00e1t":"HN",Croatia:"HR",Haiti:"HT",Hungari:"HU","Qu\u1ea7n \u0111\u1ea3o Canary":"IC",Indonesia:"ID","Ai-len":"IE",Israel:"IL","\u0110\u1ea3o Man":"IM","\u1ea4n \u0110\u1ed9":"IN","Thu\u1ed9c \u0111\u1ecba Anh t\u1ea1i \u1ea4n \u0110\u1ed9 D\u01b0\u01a1ng":"IO","I-r\u1eafc":"IQ","I-ran":"IR","Ai-x\u01a1-len":"IS","\u00dd":"IT",Jersey:"JE",Jamaica:"JM",Jordan:"JO","Nh\u1eadt B\u1ea3n":"JP",Kenya:"KE",Kyrgyzstan:"KG",
Campuchia:"KH",Kiribati:"KI",Comoros:"KM","Saint Kitts v\u00e0 Nevis":"KN","B\u1eafc Tri\u1ec1u Ti\u00ean":"KP","H\u00e0n Qu\u1ed1c":"KR","C\u00f4-o\u00e9t":"KW","Qu\u1ea7n \u0110\u1ea3o Cayman":"KY",Kazakhstan:"KZ","L\u00e0o":"LA","Li-b\u0103ng":"LB","Saint Lucia":"LC",Liechtenstein:"LI","Sri Lanka":"LK",LIberia:"LR",Lesotho:"LS",Lithuania:"LT",Luxembourg:"LU",Latvia:"LV","Li-bi":"LY","Ma-r\u1ed1c":"MA",Monaco:"MC",Moldova:"MD",Montenegro:"ME","Saint Martin":"MF",Madagascar:"MG","Qu\u1ea7n \u0111\u1ea3o Marshall":"MH",
Macedonia:"MK",Mali:"ML","Myanmar [Mi\u1ebfn \u0110i\u1ec7n]":"MM","M\u00f4ng C\u1ed5":"MN","\u0110\u1eb7c khu h\u00e0nh ch\u00ednh Macao thu\u1ed9c CHND Trung Hoa":"MO","Qu\u1ea7n \u0110\u1ea3o B\u1eafc Mariana":"MP",Martinique:"MQ",Mauritania:"MR",Montserrat:"MS",Malta:"MT",Mauritius:"MU",Maldives:"MV",Malawi:"MW","M\u00ea-hi-c\u00f4":"MX",Malaysia:"MY",Mozambique:"MZ",Namibia:"NA","New Caledonia":"NC",Niger:"NE","\u0110\u1ea3o Norfolk":"NF",Nigeria:"NG",Nicaragua:"NI","H\u00e0 Lan":"NL","Na Uy":"NO",
Nepal:"NP",Nauru:"NR",Niue:"NU","New Zealand":"NZ",Oman:"OM","Pa-na-ma":"PA",Peru:"PE","Polynesia thu\u1ed9c Ph\u00e1p":"PF","Papua New Guinea":"PG",Philippin:"PH",Pakistan:"PK","Ba Lan":"PL","Saint Pierre v\u00e0 Miquelon":"PM","Qu\u1ea7n \u0111\u1ea3o Pitcairn":"PN","Puerto Rico":"PR","L\u00e3nh th\u1ed5 Palestine":"PS","B\u1ed3 \u0110\u00e0o Nha":"PT",Palau:"PW",Paraguay:"PY",Qatar:"QA","V\u00f9ng xa x\u00f4i thu\u1ed9c Ch\u00e2u \u0110\u1ea1i D\u01b0\u01a1ng":"QO","R\u00e9union":"RE",Romania:"RO",
Serbia:"RS",Nga:"RU",Rwanda:"RW","A-r\u1eadp X\u00ea-\u00fat":"SA","Qu\u1ea7n \u0111\u1ea3o Solomon":"SB",Seychelles:"SC","Xu-\u0111\u0103ng":"SD","Th\u1ee5y \u0110i\u1ec3n":"SE",Singapore:"SG","Saint Helena":"SH",Slovenia:"SI","Svalbard v\u00e0 Jan Mayen":"SJ",Slovakia:"SK","Sierra Leone":"SL","San Marino":"SM",Senegal:"SN",Somali:"SO",Suriname:"SR","Nam Sudan":"SS","S\u00e3o Tom\u00e9 v\u00e0 Pr\u00edncipe":"ST","El Salvador":"SV","Sint Maarten":"SX",Syria:"SY",Swaziland:"SZ","Tristan da Cunha":"TA",
"Qu\u1ea7n \u0110\u1ea3o Turk v\u00e0 Caicos":"TC",Chad:"TD","Thu\u1ed9c \u0110\u1ecba Nam c\u1ee7a Ph\u00e1p":"TF",Togo:"TG","Th\u00e1i Lan":"TH",Tajikistan:"TJ",Tokelau:"TK","\u0110\u00f4ng Ti-mo":"TL",Turkmenistan:"TM","Tuy-ni-di":"TN",Tonga:"TO","Th\u1ed5 Nh\u0129 K\u1ef3":"TR","Trinidad v\u00e0 Tobago":"TT",Tuvalu:"TV","\u0110\u00e0i Loan":"TW",Tanzania:"TZ",Ukraina:"UA",Uganda:"UG","C\u00e1c \u0111\u1ea3o nh\u1ecf xa trung t\u00e2m thu\u1ed9c M\u1ef9":"UM","Hoa K\u1ef3":"US",Uruguay:"UY",Uzbekistan:"UZ",
"Va-ti-c\u0103ng":"VA","Saint Vincent v\u00e0 Grenadines":"VC",Venezuela:"VE","Qu\u1ea7n \u0111\u1ea3o Virgin thu\u1ed9c Anh":"VG","Qu\u1ea7n \u0111\u1ea3o Virgin thu\u1ed9c M\u1ef9":"VI","Vi\u1ec7t Nam":"VN",Vanuatu:"VU","Wallis v\u00e0 Futuna":"WF",Samoa:"WS",Yemen:"YE",Mayotte:"YT","Nam Phi":"ZA",Zambia:"ZM",Zimbabwe:"ZW","V\u00f9ng Ch\u01b0a bi\u1ebft ho\u1eb7c kh\u00f4ng H\u1ee3p l\u1ec7":"ZZ"};
ilib.data.ctrynames_zh={generated:!1,"\u963f\u5bcc\u6c57":"AF","\u963f\u5c14\u5df4\u5c3c\u4e9a":"AL","\u963f\u5c14\u53ca\u5229\u4e9a":"DZ","\u7f8e\u5c5e\u8428\u6469\u4e9a":"AS","\u5b89\u9053\u5c14":"AD","\u5b89\u54e5\u62c9":"AO","\u5b89\u572d\u62c9":"AI","\u963f\u6839\u5ef7":"AR","\u4e9a\u7f8e\u5c3c\u4e9a":"AM","\u963f\u9c81\u5df4":"AW","\u963f\u68ee\u677e":"SH","\u963f\u68ee\u677e\u5c9b":"AC","\u6fb3\u5927\u5229\u4e9a":"AU","\u5965\u5730\u5229":"AT","\u963f\u585e\u62dc\u7586":"AZ","\u82f1\u5c5e\u7ef4\u5c14\u4eac\u7fa4\u5c9b":"VG",
"\u5df4\u54c8\u9a6c":"BS","\u5df4\u6797":"BH","\u5b5f\u52a0\u62c9\u56fd":"BD","\u5df4\u5df4\u591a\u65af":"BB","\u767d\u4fc4\u7f57\u65af":"BY","\u6bd4\u5229\u65f6":"BE","\u4f2f\u5229\u5179":"BZ","\u8d1d\u5b81":"BJ","\u767e\u6155\u5927":"BM","\u4e0d\u4e39":"BT","\u73bb\u5229\u7ef4\u4e9a":"BO","\u535a\u8328\u74e6\u7eb3":"BW","\u5df4\u897f":"BR","\u82f1\u5c5e\u5370\u5ea6\u6d0b\u9886\u5730":"IO","\u6587\u83b1":"BN","\u6587\u83b1\u8fbe\u9c81\u8428\u5170\u56fd":"BN","\u4fdd\u52a0\u5229\u4e9a":"BG","\u5e03\u57fa\u7eb3\u6cd5\u7d22":"BF",
"\u7f05\u7538":"MM","\u5e03\u9686\u8fea":"BI","\u67ec\u57d4\u5be8":"KH","\u5580\u9ea6\u9686":"CM","\u4f5b\u5f97\u89d2":"CV","\u5f00\u66fc":"KY","\u4e2d\u975e\u5171\u548c\u56fd":"CF","\u4e4d\u5f97":"TD","\u667a\u5229":"CL","\u4e2d\u56fd":"CN","\u54e5\u4f26\u6bd4\u4e9a":"CO","\u79d1\u6469\u7f57":"KM","\u5e93\u514b\u7fa4\u5c9b":"CK","\u54e5\u65af\u8fbe\u9ece\u52a0":"CR","\u514b\u7f57\u5730\u4e9a":"HR","\u53e4\u5df4":"CU","\u585e\u6d66\u8def\u65af":"CY","\u6377\u514b\u5171\u548c\u56fd":"CZ","\u79d1\u7279\u8fea\u74e6":"CI",
"\u591a\u7c73\u5c3c\u52a0\u5171\u548c\u56fd":"DO","\u521a\u679c\u6c11\u4e3b\u5171\u548c\u56fd":"CD","\u4e39\u9ea6":"DK","\u5409\u5e03\u63d0":"DJ","\u591a\u7c73\u5c3c\u514b":"DM","\u4e1c\u5e1d\u6c76":"TL","\u5384\u74dc\u591a\u5c14":"EC","\u57c3\u53ca":"EG","\u8428\u5c14\u74e6\u591a":"SV","\u8d64\u9053\u51e0\u5185\u4e9a":"GQ","\u5384\u7acb\u7279\u91cc\u4e9a":"ER","\u7231\u6c99\u5c3c\u4e9a":"EE","\u57c3\u585e\u4fc4\u6bd4\u4e9a":"ET","\u9a6c\u5176\u987f\u5171\u548c\u56fd\uff08\u524d\u5357\u65af\u62c9\u592b\uff09":"MK",
"\u798f\u514b\u5170\u7fa4\u5c9b":"FK","\u6cd5\u7f57\u7fa4\u5c9b":"FO","\u5bc6\u514b\u7f57\u5c3c\u897f\u4e9a\u8054\u90a6":"FM","\u6590\u6d4e":"FJ","\u82ac\u5170":"FI","\u6cd5\u56fd":"FR","\u6cd5\u5c5e\u572d\u4e9a\u90a3":"GF","\u6cd5\u5c5e\u6ce2\u5229\u5c3c\u897f\u4e9a":"PF","\u52a0\u84ec":"GA","\u5188\u6bd4\u4e9a":"GM","\u4e54\u6cbb\u4e9a\u5dde":"GE","\u5fb7\u56fd":"DE","\u52a0\u7eb3":"GH","\u76f4\u5e03\u7f57\u9640":"GI","\u5e0c\u814a":"GR","\u683c\u9675\u5170":"GL","\u683c\u6797\u7eb3\u8fbe":"GD",
"\u74dc\u5fb7\u7f57\u666e\u5c9b":"GP","\u5173\u5c9b":"GU","\u5371\u5730\u9a6c\u62c9":"GT","\u51e0\u5185\u4e9a":"GN","\u51e0\u5185\u4e9a\u6bd4\u7ecd":"GW","\u572d\u4e9a\u90a3":"GY","\u6d77\u5730":"HT","\u6d2a\u90fd\u62c9\u65af":"HN","\u9999\u6e2f":"HK","\u5308\u7259\u5229":"HU","\u51b0\u5c9b":"IS","\u5370\u5ea6":"IN","\u5370\u5ea6\u5c3c\u897f\u4e9a":"ID","\u4f0a\u6717":"IR","\u4f0a\u62c9\u514b":"IQ","\u7231\u5c14\u5170":"IE","\u4ee5\u8272\u5217":"IL","\u610f\u5927\u5229":"IT","\u7259\u4e70\u52a0":"JM",
"\u65e5\u672c":"JP","\u7ea6\u65e6":"JO","\u80af\u5c3c\u4e9a":"KE","\u57fa\u91cc\u5df4\u65af":"KI","\u79d1\u5a01\u7279":"KW","\u5409\u5c14\u5409\u65af\u65af\u5766":"KG","\u8001\u631d":"LA","\u62c9\u8131\u7ef4\u4e9a":"LV","\u9ece\u5df4\u5ae9":"LB","\u83b1\u7d22\u6258":"LS","\u5229\u6bd4\u91cc\u4e9a":"LR","\u5229\u6bd4\u4e9a":"LY","\u5217\u652f\u6566\u58eb\u767b":"LI","\u7acb\u9676\u5b9b":"LT","\u5362\u68ee\u5821":"LU","\u6fb3\u95e8":"MO","\u9a6c\u8fbe\u52a0\u65af\u52a0":"MG","\u9a6c\u62c9\u7ef4":"MW",
"\u9a6c\u6765\u897f\u4e9a":"MY","\u9a6c\u5c14\u4ee3\u592b":"MV","\u9a6c\u91cc":"ML","\u9a6c\u8033\u4ed6":"MT","\u9a6c\u7ecd\u5c14\u7fa4\u5c9b":"MH","\u9a6c\u63d0\u5c3c\u514b":"MQ","\u9a6c\u63d0\u5c3c\u514b\u5c9b":"MQ","\u6bdb\u91cc\u5854\u5c3c\u4e9a":"MR","\u6bdb\u91cc\u6c42\u65af":"MU","\u58a8\u897f\u54e5":"MX","\u5bc6\u514b\u7f57\u5c3c\u897f\u4e9a":"FM","\u6469\u5c14\u591a\u74e6":"MD","\u6469\u7eb3\u54e5":"MC","\u8499\u53e4":"MN","\u9ed1\u5c71":"ME","\u6469\u6d1b\u54e5":"MA","\u83ab\u6851\u6bd4\u514b":"MZ",
"\u7eb3\u7c73\u6bd4\u4e9a":"NA","\u7459\u9c81":"NR","\u5c3c\u6cca\u5c14":"NP","\u8377\u5170":"NL","\u8377\u5c5e\u5b89\u7684\u5217\u65af":"AN","\u65b0\u5580\u91cc\u591a\u5c3c\u4e9a":"NC","\u65b0\u897f\u5170":"NZ","\u5c3c\u52a0\u62c9\u74dc":"NI","\u5c3c\u65e5\u5c14":"NE","\u5c3c\u65e5\u5229\u4e9a":"NG","\u8bfa\u798f\u514b\u5c9b":"NF","\u671d\u9c9c":"KP","\u5317\u9a6c\u91cc\u4e9a\u7eb3\u7fa4\u5c9b":"MP","\u632a\u5a01":"NO","\u963f\u66fc":"OM","\u5df4\u57fa\u65af\u5766":"PK","\u5e15\u52b3":"PW","\u5df4\u52d2\u65af\u5766\u6c11\u65cf\u6743\u529b\u673a\u6784":"PS",
"\u5df4\u62ff\u9a6c":"PA","\u5df4\u5e03\u4e9a\u65b0\u51e0\u5185\u4e9a":"PG","\u5df4\u62c9\u572d":"PY","\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd":"CN","\u79d8\u9c81":"PE","\u83f2\u5f8b\u5bbe":"PH","\u76ae\u7279\u51ef\u6069":"PN","\u6ce2\u5170":"PL","\u8461\u8404\u7259":"PT","\u6ce2\u591a\u9ece\u5404":"PR","\u5361\u5854\u5c14":"QA","\u53f0\u6e7e":"TW","\u7231\u5c14\u5170\u5171\u548c\u56fd":"IE","\u7f57\u9a6c\u5c3c\u4e9a":"RO","\u4fc4\u7f57\u65af":"RU","\u5362\u65fa\u8fbe":"RW","\u7559\u5c3c\u6c6a":"RE",
"\u5723\u6d77\u4f26\u5a1c":"SH","\u5723\u5362\u897f\u4e9a":"LC","\u5723\u76ae\u57c3\u5c14\u548c\u5bc6\u514b\u9686\u5c9b":"PM","\u8428\u6469\u4e9a":"WS","\u5723\u9a6c\u529b\u8bfa":"SM","\u6c99\u7279\u963f\u62c9\u4f2f":"SA","\u585e\u5185\u52a0\u5c14":"SN","\u585e\u5c14\u7ef4\u4e9a":"RS","\u585e\u820c\u5c14":"SC","\u585e\u62c9\u5229\u6602":"SL","\u65b0\u52a0\u5761":"SG","\u65af\u6d1b\u4f10\u514b":"SK","\u65af\u6d1b\u6587\u5c3c\u4e9a":"SI","\u6240\u7f57\u95e8\u7fa4\u5c9b":"SB","\u7d22\u9a6c\u91cc":"SO",
"\u5357\u975e":"ZA","\u97e9\u56fd":"KR","\u897f\u73ed\u7259":"ES","\u65af\u91cc\u5170\u5361":"LK","\u82cf\u4e39":"SD","\u82cf\u91cc\u5357":"SR","\u65af\u5a01\u58eb\u5170":"SZ","\u745e\u5178":"SE","\u745e\u58eb":"CH","\u53d9\u5229\u4e9a":"SY","\u5854\u5409\u514b\u65af\u5766":"TJ","\u5766\u6851\u5c3c\u4e9a":"TZ","\u6cf0\u56fd":"TH","\u5f00\u66fc\u7fa4\u5c9b":"KY","\u7f8e\u5c5e\u7ef4\u5c14\u4eac\u7fa4\u5c9b":"VI","\u591a\u54e5":"TG","\u6258\u514b\u52b3":"TK","\u6c64\u52a0":"TO","\u7a81\u5c3c\u65af":"TN",
"\u571f\u8033\u5176":"TR","\u571f\u5e93\u66fc\u65af\u5766":"TM","\u56fe\u74e6\u5362":"TV","\u963f\u8054\u914b":"AE","\u4e4c\u5e72\u8fbe":"UG","\u4e4c\u514b\u5170":"UA","\u963f\u62c9\u4f2f\u8054\u5408\u914b\u957f\u56fd":"AE","\u82f1\u56fd":"GB","\u4e4c\u62c9\u572d":"UY","\u4e4c\u5179\u522b\u514b\u65af\u5766":"UZ","\u74e6\u52aa\u963f\u56fe":"VU","\u68b5\u8482\u5188\u57ce":"VA","\u59d4\u5185\u745e\u62c9":"VE","\u8d8a\u5357":"VN","\u74e6\u5229\u65af\u548c\u5bcc\u56fe\u7eb3\u7fa4\u5c9b":"WF","\u4e5f\u95e8":"YE",
"\u8d5e\u6bd4\u4e9a":"ZM","\u6d25\u5df4\u5e03\u97e6":"ZW","\u5965\u5170\u7fa4\u5c9b":"AX","\u5b89\u63d0\u74dc":"AG","\u5df4\u5e03\u8fbe":"AG","\u59d4\u5185\u745e\u62c9\u73bb\u5229\u74e6\u5c14\u5171\u548c\u56fd":"VE","\u591a\u6c11\u65cf\u73bb\u5229\u7ef4\u4e9a\u56fd":"BO","\u6ce2\u65af\u5c3c\u4e9a":"BA","\u5e03\u7ef4\u5c9b":"BV","\u6c76\u83b1":"BN","\u51ef\u79d1\u65af\u7fa4\u5c9b":"TC","\u52a0\u62ff\u5927":"CA","\u5723\u8bde\u5c9b":"CX","\u832f\u82d3\u548c\u57fa\u6797\u7fa4\u5c9b":"CC","\u832f\u82d3\u7fa4\u5c9b":"CC",
"\u521a\u679c":"CD","\u671d\u9c9c\u6c11\u4e3b\u4eba\u6c11\u5171\u548c\u56fd":"KP","\u591a\u7c73\u5c3c\u52a0":"DM","\u6cd5\u7f57":"FO","\u6cd5\u56fd\u5357\u90e8\u9886\u571f":"TF","\u5bcc\u56fe\u7eb3":"WF","\u683c\u9c81\u5409\u4e9a":"GE","\u5927\u4e0d\u5217\u98a0":"GB","\u683c\u6797\u7eb3\u4e01\u65af":"VC","\u6839\u897f\u5c9b":"GG","\u8d6b\u5fb7\u5c9b\u548c\u9ea6\u5f53\u52b3\u7fa4\u5c9b":"HM","\u8d6b\u5fb7\u5c9b":"HM","\u9ed1\u585e\u54e5\u7ef4\u90a3":"BA","\u6559\u5ef7":"VA","\u4f0a\u6717\u5171\u548c\u56fd":"IR",
"\u9a6c\u6069\u5c9b":"IM","\u8c61\u7259\u6d77\u5cb8":"CI","\u626c\u9a6c\u5ef6":"SJ","\u54c8\u8428\u514b\u65af\u5766":"KZ","\u5927\u97e9\u6c11\u56fd":"KR","\u8001\u631d\u4eba\u6c11\u6c11\u4e3b\u5171\u548c\u56fd":"LA","\u963f\u62c9\u4f2f\u5229\u6bd4\u4e9a\u6c11\u4f17\u56fd":"LY","\u9a6c\u5176\u987f":"MK","\u9a6c\u5c14\u7ef4\u7eb3\u65af":"FK","\u9a6c\u91cc\u4e9a\u7eb3":"MP","\u9a6c\u7ea6\u7279":"YT","\u9ea6\u5f53\u52b3\u7fa4\u5c9b":"HM","\u5bc6\u514b\u9686":"PM","\u6469\u5c14\u591a\u74e6\u5171\u548c\u56fd":"MD",
"\u8499\u7279\u5185\u683c\u7f57":"ME","\u8499\u7279\u585e\u62c9\u7279":"MS","\u5c3c\u7ef4\u65af":"KN","\u5317\u671d\u9c9c":"KP","\u5df4\u52d2\u65af\u5766":"PS","\u5df4\u52d2\u65af\u5766\u9886\u571f":"PS","\u88ab\u5360\u9886\u7684\u5df4\u52d2\u65af\u5766\u9886\u571f":"PS","\u666e\u6797\u897f\u6bd4":"ST","\u65b0\u52a0\u5761\u5171\u548c\u570b":"SG","\u4fc4\u7f57\u65af\u8054\u90a6":"RU","\u5723\u5df4\u6cf0\u52d2\u7c73":"BL","\u5723\u8d6b\u52d2\u62ff":"SH","\u5723\u8d6b\u52d2\u62ff\uff0c\u963f\u68ee\u677e\u5c9b\u548c\u7279\u91cc\u65af\u5766\u8fbe\u5e93\u5c3c\u4e9a":"SH",
"\u5723\u57fa\u8328":"KN","\u5723\u9a6c\u4e01":"MF","\u5723\u76ae\u57c3\u5c14":"PM","\u5723\u6587\u68ee\u7279":"VC","\u5723\u591a\u7f8e":"ST","\u5357\u683c\u9c81\u5409\u4e9a":"GS","\u5357\u683c\u9c81\u5409\u4e9a\u548c\u5357\u6851\u5a01\u5947\u7fa4\u5c9b":"GS","\u5357\u6851\u5a01\u5947\u7fa4\u5c9b":"GS","\u65af\u74e6\u5c14\u5df4\u5c9b":"SJ","\u65af\u74e6\u5c14\u5df4\u5c9b\u548c\u626c\u9a6c\u5ef6\u5c9b":"SJ","\u963f\u62c9\u4f2f\u53d9\u5229\u4e9a\u5171\u548c\u56fd":"SY","\u5766\u6851\u5c3c\u4e9a\u8054\u5408\u5171\u548c\u56fd":"TZ",
"\u591a\u5df4\u54e5":"TT","\u7279\u7acb\u5c3c\u8fbe":"TT","\u7279\u91cc\u65af\u5766\u8fbe\u5e93\u5c3c\u4e9a":"SH","\u7279\u514b\u65af\u7fa4\u5c9b":"TC","\u7f8e\u56fd":"US","\u7f8e\u5229\u575a\u5408\u4f17\u56fd":"US","\u68b5\u5e1d\u5188":"VA","\u74e6\u5229\u65af":"WF","\u897f\u6492\u54c8\u62c9":"EH","\u963f\u62c9\u4f2f\u534a\u5c9b":"SA","\u4f5b\u5f97\u89d2\u7fa4\u5c9b":"CV","\u79d1\u79d1\u65af(\u5947\u6797)\u7fa4\u5c9b":"CC","\u521a\u679c\uff0c\u6c11\u4e3b\u5171\u548c\u56fd":"CD","\u671d\u9c9c\u6c11\u4e3b\u4e3b\u4e49\u4eba\u6c11\u5171\u548c\u56fd":"KP",
"\u8fea\u62dc":"AE","\u82f1\u683c\u5170":"GB","\u5df4\u52d2\u65af\u5766\u88ab\u5360\u9886\u571f":"PS","\u6ce2\u5229\u5c3c\u897f\u4e9a":"PF","\u5723\u5df4\u7279\u5c9b":"BL","\u82cf\u683c\u5170":"GB","\u5723\u5df4\u5c14\u5fb7\u52d2\u7c73":"BL","\u5357\u5fb7\u6851\u5a01\u5947\u7fa4\u5c9b":"GS","\u68b5\u8482\u5188\u57ce\u56fd":"VA","\u7ef4\u5c14\u4eac\u7fa4\u5c9b":"VI","\u5a01\u5c14\u58eb":"GB","\u4e9a\u6d32":"142","\u4e2d\u4e9a":"143","\u897f\u4e9a":"145","\u6b27\u6d32":"150","\u4e1c\u6b27":"151","\u5317\u6b27":"154",
"\u897f\u6b27":"155","\u62c9\u4e01\u7f8e\u6d32":"419","\u4e16\u754c":"001","\u975e\u6d32":"002","\u5317\u7f8e\u6d32":"003","\u5357\u7f8e\u6d32":"005","\u5927\u6d0b\u6d32":"009","\u897f\u975e":"011","\u4e2d\u7f8e\u6d32":"013","\u4e1c\u975e":"014","\u5317\u975e":"015","\u4e2d\u975e":"017","\u5357\u90e8\u975e\u6d32":"018","\u7f8e\u6d32":"019","\u7f8e\u6d32\u5317\u90e8":"021","\u52a0\u52d2\u6bd4\u5730\u533a":"029","\u4e1c\u4e9a":"030","\u5357\u4e9a":"034","\u4e1c\u5357\u4e9a":"035","\u5357\u6b27":"039",
"\u6fb3\u5927\u62c9\u897f\u4e9a":"053","\u7f8e\u62c9\u5c3c\u897f\u4e9a":"054","\u5bc6\u514b\u7f57\u5c3c\u897f\u4e9a\u5730\u533a":"057","\u73bb\u5229\u5c3c\u897f\u4e9a":"061","\u5b89\u63d0\u74dc\u548c\u5df4\u5e03\u8fbe":"AG","\u8377\u5c5e\u5b89\u7684\u5217\u65af\u7fa4\u5c9b":"AN","\u5357\u6781\u6d32":"AQ","\u6ce2\u65af\u5c3c\u4e9a\u548c\u9ed1\u585e\u54e5\u7ef4\u90a3":"BA","\u8377\u5170\u52a0\u52d2\u6bd4":"BQ","\u5e03\u7ef4\u7279\u5c9b":"BV","\u79d1\u79d1\u65af\u7fa4\u5c9b":"CC","\u521a\u679c\uff08\u91d1\uff09":"CD",
"\u521a\u679c\uff08\u5e03\uff09":"CG","\u514b\u5229\u73c0\u987f\u5c9b":"CP","\u5e93\u62c9\u7d22":"CW","\u8fea\u6208\u52a0\u897f\u4e9a\u5c9b":"DG","\u4f11\u8fbe\u53ca\u6885\u5229\u5229\u4e9a":"EA","\u6b27\u76df":"EU","\u5357\u4e54\u6cbb\u4e9a\u5c9b\u548c\u5357\u6851\u5a01\u9f50\u7fa4\u5c9b":"GS","\u4e2d\u56fd\u9999\u6e2f\u7279\u522b\u884c\u653f\u533a":"HK","\u8d6b\u5fb7\u4e0e\u9ea6\u514b\u5510\u7eb3\u7fa4\u5c9b":"HM","\u52a0\u7eb3\u5229\u7fa4\u5c9b":"IC","\u66fc\u5c9b":"IM","\u6cfd\u897f\u5c9b":"JE",
"\u5723\u57fa\u8328\u548c\u5c3c\u7ef4\u65af":"KN","\u9ed1\u5c71\u5171\u548c\u56fd":"ME","\u6cd5\u5c5e\u5723\u9a6c\u4e01":"MF","\u4e2d\u56fd\u6fb3\u95e8\u7279\u522b\u884c\u653f\u533a":"MO","\u8499\u585e\u62c9\u7279":"MS","\u7ebd\u57c3":"NU","\u5723\u76ae\u57c3\u5c14\u548c\u5bc6\u514b\u9686\u7fa4\u5c9b":"PM","\u76ae\u7279\u51ef\u6069\u7fa4\u5c9b":"PN","\u5927\u6d0b\u6d32\u8fb9\u8fdc\u7fa4\u5c9b":"QO","\u65af\u74e6\u5c14\u5df4\u7279\u548c\u626c\u9a6c\u5ef6":"SJ","\u5357\u82cf\u4e39":"SS","\u5723\u591a\u7f8e\u548c\u666e\u6797\u897f\u6bd4":"ST",
"\u8377\u5c5e\u5723\u9a6c\u4e01":"SX","\u7279\u91cc\u65af\u5766-\u8fbe\u5e93\u5c3c\u4e9a\u7fa4\u5c9b":"TA","\u7279\u514b\u65af\u548c\u51ef\u79d1\u65af\u7fa4\u5c9b":"TC","\u6cd5\u5c5e\u5357\u90e8\u9886\u571f":"TF","\u7a81\u5c3c\u897f\u4e9e":"TN","\u7279\u7acb\u5c3c\u8fbe\u548c\u591a\u5df4\u54e5":"TT","\u7f8e\u56fd\u8fb9\u8fdc\u5c0f\u5c9b":"UM","\u68b5\u8482\u5188":"VA","\u5723\u6587\u68ee\u7279\u548c\u683c\u6797\u7eb3\u4e01\u65af":"VC","\u82f1\u5c5e\u7ef4\u4eac\u7fa4\u5c9b":"VG","\u7f8e\u5c5e\u7ef4\u4eac\u7fa4\u5c9b":"VI",
"\u74e6\u5229\u65af\u548c\u5bcc\u56fe\u7eb3":"WF","\u672a\u77e5\u5730\u533a":"ZZ"};
ilib.data.ctrynames_zh_HK={generated:!1,"\u963f\u5bcc\u6c57":"AF","\u963f\u723e\u5df4\u5c3c\u4e9e":"AL","\u963f\u723e\u53ca\u5229\u4e9e":"DZ","\u7f8e\u5c6c\u85a9\u6469\u4e9e":"AS","\u5b89\u9053\u723e":"AD","\u5b89\u54e5\u62c9":"AO","\u5b89\u572d\u62c9":"AI","\u5b89\u63d0\u74dc\u548c\u5df4\u4f48\u9054":"AG","\u963f\u6839\u5ef7":"AR","\u4e9e\u7f8e\u5c3c\u4e9e":"AM","\u963f\u9b6f\u5df4":"AW","\u963f\u68ee\u677e":"SH","\u6fb3\u5927\u5229\u4e9e":"AU","\u5967\u5730\u5229":"AT","\u963f\u585e\u62dc\u7586":"AZ",
"\u82f1\u5c6c\u7dad\u723e\u4eac\u7fa4\u5cf6":"VG","\u5df4\u54c8\u99ac":"BS","\u5df4\u6797":"BH","\u5b5f\u52a0\u62c9\u570b":"BD","\u5df4\u5df4\u591a\u65af":"BB","\u767d\u4fc4\u7f85\u65af":"BY","\u6bd4\u5229\u6642":"BE","\u4f2f\u5229\u8332":"BZ","\u8c9d\u5be7":"BJ","\u767e\u6155\u5927":"BM","\u4e0d\u4e39":"BT","\u73bb\u5229\u7dad\u4e9e":"BO","\u6ce2\u65af\u5c3c\u4e9e\u548c\u9ed1\u585e\u54e5\u7dad\u90a3":"BA","\u535a\u8328\u74e6\u7d0d":"BW","\u5df4\u897f":"BR","\u82f1\u5c6c\u5370\u5ea6\u6d0b\u9818\u5730":"IO",
"\u6c76\u840a":"BN","\u6c76\u840a\u9054\u9b6f\u85a9\u862d\u570b":"BN","\u4fdd\u52a0\u5229\u4e9e":"BG","\u5e03\u57fa\u7d0d\u6cd5\u7d22":"BF","\u7dec\u7538":"MM","\u5e03\u9686\u8fea":"BI","\u67ec\u57d4\u5be8":"KH","\u5580\u9ea5\u9686":"CM","\u4f5b\u5f97\u89d2":"CV","\u958b\u66fc":"KY","\u4e2d\u975e\u5171\u548c\u570b":"CF","\u4e4d\u5f97":"TD","\u667a\u5229":"CL","\u4e2d\u570b":"CN","\u54e5\u502b\u6bd4\u4e9e":"CO","\u79d1\u6469\u7f85":"KM","\u5eab\u514b\u7fa4\u5cf6":"CK","\u54e5\u65af\u5927\u9ece\u52a0":"CR",
"\u514b\u7f85\u5730\u4e9e":"HR","\u53e4\u5df4":"CU","\u585e\u6d66\u8def\u65af":"CY","\u6377\u514b\u5171\u548c\u570b":"CZ","\u79d1\u7279\u8fea\u74e6":"CI","\u591a\u7c73\u5c3c\u52a0\u5171\u548c\u570b":"CD","\u525b\u679c\u6c11\u4e3b\u5171\u548c\u570b":"CD","\u4e39\u9ea5":"DK","\u5409\u5e03\u63d0":"DJ","\u591a\u7c73\u5c3c\u514b":"DM","\u6771\u5e1d\u6c76":"TL","\u5384\u74dc\u591a\u723e":"EC","\u57c3\u53ca":"EG","\u85a9\u723e\u74e6\u591a":"SV","\u8d64\u9053\u5e7e\u5167\u4e9e":"GQ","\u5384\u7acb\u7279\u91cc\u4e9e":"ER",
"\u611b\u6c99\u5c3c\u4e9e":"EE","\u8863\u7d22\u6bd4\u4e9e":"ET","\u99ac\u5176\u9813\u5171\u548c\u570b\uff08\u524d\u5357\u65af\u62c9\u592b\uff09":"MK","\u798f\u514b\u862d\u7fa4\u5cf6":"FK","\u6cd5\u7f85\u7fa4\u5cf6":"FO","\u5bc6\u514b\u7f85\u5c3c\u897f\u4e9e\u806f\u90a6":"FM","\u6590\u6fdf":"FJ","\u82ac\u862d":"FI","\u6cd5\u570b":"FR","\u6cd5\u5c6c\u572d\u4e9e\u90a3":"GF","\u6cd5\u5c6c\u6ce2\u5229\u5c3c\u897f\u4e9e":"PF","\u52a0\u84ec":"GA","\u5ca1\u6bd4\u4e9e":"GM","\u55ac\u6cbb\u4e9e\u5dde":"GE",
"\u5fb7\u570b":"DE","\u52a0\u7d0d":"GH","\u76f4\u5e03\u7f85\u9640":"GI","\u5e0c\u81d8":"GR","\u683c\u9675\u862d":"GL","\u683c\u6797\u7d0d\u9054":"GD","\u74dc\u5fb7\u7f85\u666e\u5cf6":"GP","\u95dc\u5cf6":"GU","\u5371\u5730\u99ac\u62c9":"GT","\u757f\u5167\u4e9e":"GN","\u5e7e\u5167\u4e9e\u6bd4\u7d39":"GW","\u572d\u4e9e\u90a3":"GY","\u6d77\u5730":"HT","\u5b8f\u90fd\u62c9\u65af":"HN","\u9999\u6e2f":"HK","\u5308\u7259\u5229":"HU","\u51b0\u5cf6":"IS","\u5370\u5ea6":"IN","\u5370\u5ea6\u5c3c\u897f\u4e9e":"ID",
"\u4f0a\u6717":"IR","\u4f0a\u62c9\u514b":"IQ","\u611b\u723e\u862d":"IE","\u4ee5\u8272\u5217":"IL","\u7fa9\u5927\u5229":"IT","\u7259\u8cb7\u52a0":"JM","\u65e5\u672c":"JP","\u7d04\u65e6":"JO","\u80af\u5c3c\u4e9e":"KE","\u57fa\u88cf\u5df4\u65af":"KI","\u79d1\u5a01\u7279":"KW","\u5409\u723e\u5409\u65af\u65af\u5766":"KG","\u8001\u64be":"LA","\u62c9\u812b\u7dad\u4e9e":"LV","\u9ece\u5df4\u5ae9":"LB","\u840a\u7d22\u6258":"LS","\u5229\u6bd4\u91cc\u4e9e":"LR","\u5229\u6bd4\u4e9e":"LY","\u5217\u652f\u6566\u58eb\u767b":"LI",
"\u7acb\u9676\u5b9b":"LT","\u76e7\u68ee\u5821":"LU","\u6fb3\u9580":"MO","\u99ac\u9054\u52a0\u65af\u52a0":"MG","\u99ac\u62c9\u7dad":"MW","\u99ac\u4f86\u897f\u4e9e":"MY","\u99ac\u723e\u5730\u592b":"MV","\u99ac\u91cc":"ML","\u99ac\u8033\u4ed6":"MT","\u99ac\u7d39\u723e\u7fa4\u5cf6":"MH","\u99ac\u63d0\u5c3c\u514b":"MQ","\u99ac\u63d0\u5c3c\u514b\u5cf6":"MQ","\u6bdb\u91cc\u5854\u5c3c\u4e9e":"MR","\u6bdb\u91cc\u6c42\u65af":"MU","\u58a8\u897f\u54e5":"MX","\u5bc6\u514b\u7f85\u5c3c\u897f\u4e9e":"FM","\u6469\u723e\u591a\u74e6":"MD",
"\u6469\u7d0d\u54e5":"MC","\u8499\u53e4":"MN","\u9ed1\u5c71":"ME","\u6469\u6d1b\u54e5":"MA","\u83ab\u6851\u6bd4\u514b":"MZ","\u7d0d\u7c73\u6bd4\u4e9e":"NA","\u7459\u9b6f":"NR","\u5c3c\u6cca\u723e":"NP","\u8377\u862d":"NL","\u8377\u5c6c\u5b89\u7684\u5217\u65af":"AN","\u65b0\u5580\u88cf\u591a\u5c3c\u4e9e":"NC","\u65b0\u897f\u862d":"NZ","\u5c3c\u52a0\u62c9\u74dc":"NI","\u5c3c\u65e5\u723e":"NE","\u5c3c\u65e5\u5229\u4e9e":"NG","\u8afe\u798f\u514b\u5cf6":"NF","\u671d\u9bae":"KR","\u5317\u99ac\u91cc\u4e9e\u7d0d\u7fa4\u5cf6":"MP",
"\u632a\u5a01":"NO","\u963f\u66fc":"OM","\u5df4\u57fa\u65af\u5766":"PK","\u5e15\u52de":"PW","\u5df4\u52d2\u65af\u5766\u6c11\u65cf\u6b0a\u529b\u6a5f\u69cb":"PS","\u5df4\u62ff\u99ac":"PA","\u5df4\u5e03\u4e9e\u65b0\u757f\u5167\u4e9e":"PG","\u5df4\u62c9\u572d":"PY","\u4e2d\u83ef\u4eba\u6c11\u5171\u548c\u570b":"CN","\u79d8\u9b6f":"PE","\u83f2\u5f8b\u8cd3":"PH","\u76ae\u7279\u80af":"PN","\u6ce2\u862d":"PL","\u8461\u8404\u7259":"PT","\u6ce2\u591a\u9ece\u5404":"PR","\u5361\u5854\u723e":"QA","\u4e2d\u83ef\u6c11\u570b":"TW",
"\u611b\u723e\u862d\u5171\u548c\u570b":"IE","\u7f85\u99ac\u5c3c\u4e9e":"RO","\u4fc4\u7f85\u65af":"RU","\u76e7\u5b89\u9054":"RW","\u7559\u5c3c\u6c6a":"RE","\u8056\u6d77\u502b\u5a1c":"SH","\u8056\u57fa\u8328\u548c\u5c3c\u7dad\u65af":"KN","\u8056\u76e7\u897f\u4e9e":"LC","\u8056\u76ae\u57c3\u723e\u548c\u5bc6\u514b\u9686\u5cf6":"PM","\u8056\u6587\u68ee\u7279\u548c\u683c\u6797\u7d0d\u4e01\u65af":"VC","\u85a9\u6469\u4e9e":"WS","\u8056\u99ac\u529b\u8afe":"SM","\u6c99\u70cf\u5730\u963f\u62c9\u4f2f":"SA","\u585e\u5167\u52a0\u723e":"SN",
"\u585e\u723e\u7dad\u4e9e":"RS","\u585e\u820c\u723e":"SC","\u585e\u62c9\u5229\u6602":"SL","\u65b0\u52a0\u5761":"SG","\u65af\u6d1b\u4f10\u514b":"SK","\u65af\u6d1b\u6587\u5c3c\u4e9e":"SI","\u6240\u7f85\u9580\u7fa4\u5cf6":"SB","\u7d22\u99ac\u5229\u4e9e":"SO","\u5357\u975e":"ZA","\u97d3\u570b":"KR","\u897f\u73ed\u7259":"ES","\u65af\u91cc\u862d\u5361":"LK","\u8607\u4e39":"SD","\u8607\u91cc\u5357":"SR","\u65af\u5a01\u58eb\u862d":"SZ","\u745e\u5178":"SE","\u745e\u58eb":"CH","\u654d\u5229\u4e9e":"SY","\u8056\u591a\u7f8e\u548c\u666e\u6797\u897f\u6bd4":"ST",
"\u81fa\u7063":"TW","\u5854\u5409\u514b\u65af\u5766":"TJ","\u5766\u6851\u5c3c\u4e9e":"TZ","\u6cf0\u570b":"TH","\u958b\u66fc\u7fa4\u5cf6":"KY","\u7f8e\u5c6c\u7dad\u723e\u4eac\u7fa4\u5cf6":"VI","\u591a\u54e5":"TG","\u6258\u514b\u52de":"TK","\u6e6f\u52a0":"TO","\u7279\u7acb\u5c3c\u9054\u548c\u591a\u5df4\u54e5":"TT","\u7a81\u5c3c\u65af":"TN","\u571f\u8033\u5176":"TR","\u571f\u5eab\u66fc\u65af\u5766":"TM","\u5716\u74e6\u76e7":"TV","\u963f\u806f\u914b":"AE","\u70cf\u5e72\u9054":"UG","\u70cf\u514b\u862d":"UA",
"\u963f\u62c9\u4f2f\u806f\u5408\u914b\u9577\u570b":"AE","\u82f1\u570b":"GB","\u70cf\u62c9\u572d":"UY","\u70cf\u8332\u5225\u514b\u65af\u5766":"UZ","\u74e6\u52aa\u963f\u5716":"VU","\u68b5\u8482\u5ca1\u57ce":"VA","\u59d4\u5167\u745e\u62c9":"VE","\u8d8a\u5357":"VN","\u74e6\u5229\u65af\u548c\u5bcc\u5716\u7d0d\u7fa4\u5cf6":"WF","\u4e5f\u9580":"YE","\u8d0a\u6bd4\u4e9e":"ZM","\u6d25\u5df4\u5e03\u97cb":"ZW","\u5967\u862d\u7fa4\u5cf6":"AX","\u5b89\u63d0\u74dc":"AG","\u963f\u68ee\u9b06\u5cf6":"SH","\u5df4\u4f48\u9054":"AG",
"\u59d4\u5167\u745e\u62c9\u73bb\u5229\u74e6\u723e\u5171\u548c\u570b":"VE","\u591a\u6c11\u65cf\u73bb\u5229\u7dad\u4e9e\u570b":"BO","\u6ce2\u65af\u5c3c\u4e9e":"BA","\u5e03\u7dad\u5cf6":"BV","\u51f1\u79d1\u65af\u7fa4\u5cf6":"TC","\u52a0\u62ff\u5927":"CA","\u8056\u8a95\u5cf6":"CX","\u832f\u82d3\u548c\u57fa\u6797\u7fa4\u5cf6":"CC","\u832f\u82d3\u7fa4\u5cf6":"CC","\u525b\u679c":"CD","\u54e5\u65af\u9054\u9ece\u52a0":"CR","\u671d\u9bae\u6c11\u4e3b\u4eba\u6c11\u5171\u548c\u570b":"KP","\u591a\u7c73\u5c3c\u52a0":"DM",
"\u57c3\u585e\u4fc4\u6bd4\u4e9e":"ET","\u6cd5\u7f85":"FO","\u6cd5\u570b\u5357\u90e8\u9818\u571f":"TF","\u5bcc\u5716\u7d0d":"WF","\u683c\u9b6f\u5409\u4e9e":"GE","\u5927\u4e0d\u5217\u985b":"GB","\u683c\u6797\u7d0d\u4e01\u65af":"VC","\u6839\u897f\u5cf6":"GG","\u5e7e\u5167\u4e9e":"GN","\u8d6b\u5fb7\u5cf6\u548c\u9ea5\u7576\u52de\u7fa4\u5cf6":"HM","\u8d6b\u5fb7\u5cf6":"HM","\u9ed1\u585e\u54e5\u7dad\u90a3":"BA","\u6559\u5ef7":"VA","\u6d2a\u90fd\u62c9\u65af":"HN","\u4f0a\u6717\u5171\u548c\u570b":"IR","\u99ac\u6069\u5cf6":"IM",
"\u610f\u5927\u5229":"IT","\u8c61\u7259\u6d77\u5cb8":"CI","\u63da\u99ac\u5ef6":"SJ","\u54c8\u85a9\u514b\u65af\u5766":"KZ","\u57fa\u91cc\u5df4\u65af":"KI","\u5927\u97d3\u6c11\u570b":"KR","\u8001\u64be\u4eba\u6c11\u6c11\u4e3b\u5171\u548c\u570b":"LA","\u963f\u62c9\u4f2f\u5229\u6bd4\u4e9e\u6c11\u773e\u570b":"LY","\u99ac\u5176\u9813":"MK","\u99ac\u723e\u4ee3\u592b":"MV","\u99ac\u723e\u7dad\u7d0d\u65af":"FK","\u99ac\u91cc\u4e9e\u7d0d":"MP","\u99ac\u7d04\u7279":"YT","\u9ea5\u7576\u52de\u7fa4\u5cf6":"HM",
"\u5bc6\u514b\u9686":"PM","\u6469\u723e\u591a\u74e6\u5171\u548c\u570b":"MD","\u8499\u7279\u5167\u683c\u7f85":"ME","\u8499\u7279\u585e\u62c9\u7279":"MS","\u5c3c\u7dad\u65af":"KN","\u65b0\u5580\u91cc\u591a\u5c3c\u4e9e":"NC","\u5317\u671d\u9bae":"KP","\u5df4\u52d2\u65af\u5766":"PS","\u5df4\u52d2\u65af\u5766\u9818\u571f":"PS","\u88ab\u4f54\u9818\u7684\u5df4\u52d2\u65af\u5766\u9818\u571f":"PS","\u5df4\u5e03\u4e9e\u65b0\u5e7e\u5167\u4e9e":"PG","\u76ae\u7279\u51f1\u6069":"PN","\u666e\u6797\u897f\u6bd4":"ST",
"\u65b0\u52a0\u5761\u5171\u548c\u570b":"SG","\u4fc4\u7f85\u65af\u806f\u90a6":"RU","\u76e7\u65fa\u9054":"RW","\u8056\u5df4\u6cf0\u52d2\u7c73":"BL","\u8056\u8d6b\u52d2\u62ff":"SH","\u8056\u8d6b\u52d2\u62ff\uff0c\u963f\u68ee\u9b06\u5cf6\u548c\u7279\u91cc\u65af\u5766\u9054\u5eab\u5c3c\u4e9e":"SH","\u8056\u57fa\u8328":"KN","\u8056\u99ac\u4e01":"MF","\u8056\u76ae\u57c3\u723e":"PM","\u8056\u6587\u68ee\u7279":"VC","\u8056\u591a\u7f8e":"ST","\u6c99\u7279\u963f\u62c9\u4f2f":"SA","\u7d22\u99ac\u91cc":"SO","\u5357\u683c\u9b6f\u5409\u4e9e":"GS",
"\u5357\u683c\u9b6f\u5409\u4e9e\u548c\u5357\u6851\u5a01\u5947\u7fa4\u5cf6":"GS","\u5357\u6851\u5a01\u5947\u7fa4\u5cf6":"GS","\u65af\u74e6\u723e\u5df4\u5cf6":"SJ","\u65af\u74e6\u723e\u5df4\u5cf6\u548c\u63da\u99ac\u5ef6\u5cf6":"SJ","\u6558\u5229\u4e9e":"SY","\u963f\u62c9\u4f2f\u6558\u5229\u4e9e\u5171\u548c\u570b":"SY","\u53f0\u7063":"TW","\u5766\u6851\u5c3c\u4e9e\u806f\u5408\u5171\u548c\u570b":"TZ","\u591a\u5df4\u54e5":"TT","\u7279\u7acb\u5c3c\u9054":"TT","\u7279\u91cc\u65af\u5766\u9054\u5eab\u5c3c\u4e9e":"SH",
"\u7279\u514b\u65af\u548c\u51f1\u79d1\u65af\u7fa4\u5cf6":"TC","\u7279\u514b\u65af\u7fa4\u5cf6":"TC","\u7f8e\u570b":"US","\u68b5\u5e1d\u5ca1":"VA","\u74e6\u5229\u65af":"WF","\u897f\u6492\u54c8\u62c9":"EH"};
ilib.data.ctrynames_zh_TW={generated:!1,"\u963f\u5bcc\u6c57":"AF","\u963f\u723e\u5df4\u5c3c\u4e9e":"AL","\u963f\u723e\u53ca\u5229\u4e9e":"DZ","\u7f8e\u5c6c\u85a9\u6469\u4e9e":"AS","\u5b89\u9053\u723e":"AD","\u5b89\u54e5\u62c9":"AO","\u5b89\u572d\u62c9":"AI","\u5b89\u63d0\u74dc\u548c\u5df4\u4f48\u9054":"AG","\u963f\u6839\u5ef7":"AR","\u4e9e\u7f8e\u5c3c\u4e9e":"AM","\u963f\u9b6f\u5df4":"AW","\u963f\u68ee\u677e":"SH","\u6fb3\u5927\u5229\u4e9e":"AU","\u5967\u5730\u5229":"AT","\u963f\u585e\u62dc\u7586":"AZ",
"\u82f1\u5c6c\u7dad\u723e\u4eac\u7fa4\u5cf6":"VG","\u5df4\u54c8\u99ac":"BS","\u5df4\u6797":"BH","\u5b5f\u52a0\u62c9\u570b":"BD","\u5df4\u5df4\u591a\u65af":"BB","\u767d\u4fc4\u7f85\u65af":"BY","\u6bd4\u5229\u6642":"BE","\u4f2f\u5229\u8332":"BZ","\u8c9d\u5be7":"BJ","\u767e\u6155\u5927":"BM","\u4e0d\u4e39":"BT","\u73bb\u5229\u7dad\u4e9e":"BO","\u6ce2\u65af\u5c3c\u4e9e\u548c\u9ed1\u585e\u54e5\u7dad\u90a3":"BA","\u535a\u8328\u74e6\u7d0d":"BW","\u5df4\u897f":"BR","\u82f1\u5c6c\u5370\u5ea6\u6d0b\u9818\u5730":"IO",
"\u6c76\u840a":"BN","\u6c76\u840a\u9054\u9b6f\u85a9\u862d\u570b":"BN","\u4fdd\u52a0\u5229\u4e9e":"BG","\u5e03\u57fa\u7d0d\u6cd5\u7d22":"BF","\u7dec\u7538":"MM","\u5e03\u9686\u8fea":"BI","\u67ec\u57d4\u5be8":"KH","\u5580\u9ea5\u9686":"CM","\u4f5b\u5f97\u89d2":"CV","\u958b\u66fc":"KY","\u4e2d\u975e\u5171\u548c\u570b":"CF","\u4e4d\u5f97":"TD","\u667a\u5229":"CL","\u4e2d\u570b":"CN","\u54e5\u502b\u6bd4\u4e9e":"CO","\u79d1\u6469\u7f85":"KM","\u5eab\u514b\u7fa4\u5cf6":"CK","\u54e5\u65af\u5927\u9ece\u52a0":"CR",
"\u514b\u7f85\u5730\u4e9e":"HR","\u53e4\u5df4":"CU","\u585e\u6d66\u8def\u65af":"CY","\u6377\u514b\u5171\u548c\u570b":"CZ","\u79d1\u7279\u8fea\u74e6":"CI","\u591a\u7c73\u5c3c\u52a0\u5171\u548c\u570b":"CD","\u525b\u679c\u6c11\u4e3b\u5171\u548c\u570b":"CD","\u4e39\u9ea5":"DK","\u5409\u5e03\u63d0":"DJ","\u591a\u7c73\u5c3c\u514b":"DM","\u6771\u5e1d\u6c76":"TL","\u5384\u74dc\u591a\u723e":"EC","\u57c3\u53ca":"EG","\u85a9\u723e\u74e6\u591a":"SV","\u8d64\u9053\u5e7e\u5167\u4e9e":"GQ","\u5384\u7acb\u7279\u91cc\u4e9e":"ER",
"\u611b\u6c99\u5c3c\u4e9e":"EE","\u8863\u7d22\u6bd4\u4e9e":"ET","\u99ac\u5176\u9813\u5171\u548c\u570b\uff08\u524d\u5357\u65af\u62c9\u592b\uff09":"MK","\u798f\u514b\u862d\u7fa4\u5cf6":"FK","\u6cd5\u7f85\u7fa4\u5cf6":"FO","\u5bc6\u514b\u7f85\u5c3c\u897f\u4e9e\u806f\u90a6":"FM","\u6590\u6fdf":"FJ","\u82ac\u862d":"FI","\u6cd5\u570b":"FR","\u6cd5\u5c6c\u572d\u4e9e\u90a3":"GF","\u6cd5\u5c6c\u6ce2\u5229\u5c3c\u897f\u4e9e":"PF","\u52a0\u84ec":"GA","\u5ca1\u6bd4\u4e9e":"GM","\u55ac\u6cbb\u4e9e\u5dde":"GE",
"\u5fb7\u570b":"DE","\u52a0\u7d0d":"GH","\u76f4\u5e03\u7f85\u9640":"GI","\u5e0c\u81d8":"GR","\u683c\u9675\u862d":"GL","\u683c\u6797\u7d0d\u9054":"GD","\u74dc\u5fb7\u7f85\u666e\u5cf6":"GP","\u95dc\u5cf6":"GU","\u5371\u5730\u99ac\u62c9":"GT","\u757f\u5167\u4e9e":"GN","\u5e7e\u5167\u4e9e\u6bd4\u7d39":"GW","\u572d\u4e9e\u90a3":"GY","\u6d77\u5730":"HT","\u5b8f\u90fd\u62c9\u65af":"HN","\u9999\u6e2f":"HK","\u5308\u7259\u5229":"HU","\u51b0\u5cf6":"IS","\u5370\u5ea6":"IN","\u5370\u5ea6\u5c3c\u897f\u4e9e":"ID",
"\u4f0a\u6717":"IR","\u4f0a\u62c9\u514b":"IQ","\u611b\u723e\u862d":"IE","\u4ee5\u8272\u5217":"IL","\u7fa9\u5927\u5229":"IT","\u7259\u8cb7\u52a0":"JM","\u65e5\u672c":"JP","\u7d04\u65e6":"JO","\u80af\u5c3c\u4e9e":"KE","\u57fa\u88cf\u5df4\u65af":"KI","\u79d1\u5a01\u7279":"KW","\u5409\u723e\u5409\u65af\u65af\u5766":"KG","\u8001\u64be":"LA","\u62c9\u812b\u7dad\u4e9e":"LV","\u9ece\u5df4\u5ae9":"LB","\u840a\u7d22\u6258":"LS","\u5229\u6bd4\u91cc\u4e9e":"LR","\u5229\u6bd4\u4e9e":"LY","\u5217\u652f\u6566\u58eb\u767b":"LI",
"\u7acb\u9676\u5b9b":"LT","\u76e7\u68ee\u5821":"LU","\u6fb3\u9580":"MO","\u99ac\u9054\u52a0\u65af\u52a0":"MG","\u99ac\u62c9\u7dad":"MW","\u99ac\u4f86\u897f\u4e9e":"MY","\u99ac\u723e\u5730\u592b":"MV","\u99ac\u91cc":"ML","\u99ac\u8033\u4ed6":"MT","\u99ac\u7d39\u723e\u7fa4\u5cf6":"MH","\u99ac\u63d0\u5c3c\u514b":"MQ","\u99ac\u63d0\u5c3c\u514b\u5cf6":"MQ","\u6bdb\u91cc\u5854\u5c3c\u4e9e":"MR","\u6bdb\u91cc\u6c42\u65af":"MU","\u58a8\u897f\u54e5":"MX","\u5bc6\u514b\u7f85\u5c3c\u897f\u4e9e":"FM","\u6469\u723e\u591a\u74e6":"MD",
"\u6469\u7d0d\u54e5":"MC","\u8499\u53e4":"MN","\u9ed1\u5c71":"ME","\u6469\u6d1b\u54e5":"MA","\u83ab\u6851\u6bd4\u514b":"MZ","\u7d0d\u7c73\u6bd4\u4e9e":"NA","\u7459\u9b6f":"NR","\u5c3c\u6cca\u723e":"NP","\u8377\u862d":"NL","\u8377\u5c6c\u5b89\u7684\u5217\u65af":"AN","\u65b0\u5580\u88cf\u591a\u5c3c\u4e9e":"NC","\u65b0\u897f\u862d":"NZ","\u5c3c\u52a0\u62c9\u74dc":"NI","\u5c3c\u65e5\u723e":"NE","\u5c3c\u65e5\u5229\u4e9e":"NG","\u8afe\u798f\u514b\u5cf6":"NF","\u671d\u9bae":"KR","\u5317\u99ac\u91cc\u4e9e\u7d0d\u7fa4\u5cf6":"MP",
"\u632a\u5a01":"NO","\u963f\u66fc":"OM","\u5df4\u57fa\u65af\u5766":"PK","\u5e15\u52de":"PW","\u5df4\u52d2\u65af\u5766\u6c11\u65cf\u6b0a\u529b\u6a5f\u69cb":"PS","\u5df4\u62ff\u99ac":"PA","\u5df4\u5e03\u4e9e\u65b0\u757f\u5167\u4e9e":"PG","\u5df4\u62c9\u572d":"PY","\u4e2d\u83ef\u4eba\u6c11\u5171\u548c\u570b":"CN","\u79d8\u9b6f":"PE","\u83f2\u5f8b\u8cd3":"PH","\u76ae\u7279\u80af":"PN","\u6ce2\u862d":"PL","\u8461\u8404\u7259":"PT","\u6ce2\u591a\u9ece\u5404":"PR","\u5361\u5854\u723e":"QA","\u4e2d\u83ef\u6c11\u570b":"TW",
"\u611b\u723e\u862d\u5171\u548c\u570b":"IE","\u7f85\u99ac\u5c3c\u4e9e":"RO","\u4fc4\u7f85\u65af":"RU","\u76e7\u5b89\u9054":"RW","\u7559\u5c3c\u6c6a":"RE","\u8056\u6d77\u502b\u5a1c":"SH","\u8056\u57fa\u8328\u548c\u5c3c\u7dad\u65af":"KN","\u8056\u76e7\u897f\u4e9e":"LC","\u8056\u76ae\u57c3\u723e\u548c\u5bc6\u514b\u9686\u5cf6":"PM","\u8056\u6587\u68ee\u7279\u548c\u683c\u6797\u7d0d\u4e01\u65af":"VC","\u85a9\u6469\u4e9e":"WS","\u8056\u99ac\u529b\u8afe":"SM","\u6c99\u70cf\u5730\u963f\u62c9\u4f2f":"SA","\u585e\u5167\u52a0\u723e":"SN",
"\u585e\u723e\u7dad\u4e9e":"RS","\u585e\u820c\u723e":"SC","\u585e\u62c9\u5229\u6602":"SL","\u65b0\u52a0\u5761":"SG","\u65af\u6d1b\u4f10\u514b":"SK","\u65af\u6d1b\u6587\u5c3c\u4e9e":"SI","\u6240\u7f85\u9580\u7fa4\u5cf6":"SB","\u7d22\u99ac\u5229\u4e9e":"SO","\u5357\u975e":"ZA","\u97d3\u570b":"KR","\u897f\u73ed\u7259":"ES","\u65af\u91cc\u862d\u5361":"LK","\u8607\u4e39":"SD","\u8607\u91cc\u5357":"SR","\u65af\u5a01\u58eb\u862d":"SZ","\u745e\u5178":"SE","\u745e\u58eb":"CH","\u654d\u5229\u4e9e":"SY","\u8056\u591a\u7f8e\u548c\u666e\u6797\u897f\u6bd4":"ST",
"\u81fa\u7063":"TW","\u5854\u5409\u514b\u65af\u5766":"TJ","\u5766\u6851\u5c3c\u4e9e":"TZ","\u6cf0\u570b":"TH","\u958b\u66fc\u7fa4\u5cf6":"KY","\u7f8e\u5c6c\u7dad\u723e\u4eac\u7fa4\u5cf6":"VI","\u591a\u54e5":"TG","\u6258\u514b\u52de":"TK","\u6e6f\u52a0":"TO","\u7279\u7acb\u5c3c\u9054\u548c\u591a\u5df4\u54e5":"TT","\u7a81\u5c3c\u65af":"TN","\u571f\u8033\u5176":"TR","\u571f\u5eab\u66fc\u65af\u5766":"TM","\u5716\u74e6\u76e7":"TV","\u963f\u806f\u914b":"AE","\u70cf\u5e72\u9054":"UG","\u70cf\u514b\u862d":"UA",
"\u963f\u62c9\u4f2f\u806f\u5408\u914b\u9577\u570b":"AE","\u82f1\u570b":"GB","\u70cf\u62c9\u572d":"UY","\u70cf\u8332\u5225\u514b\u65af\u5766":"UZ","\u74e6\u52aa\u963f\u5716":"VU","\u68b5\u8482\u5ca1\u57ce":"VA","\u59d4\u5167\u745e\u62c9":"VE","\u8d8a\u5357":"VN","\u74e6\u5229\u65af\u548c\u5bcc\u5716\u7d0d\u7fa4\u5cf6":"WF","\u4e5f\u9580":"YE","\u8d0a\u6bd4\u4e9e":"ZM","\u6d25\u5df4\u5e03\u97cb":"ZW","\u5967\u862d\u7fa4\u5cf6":"AX","\u5b89\u63d0\u74dc":"AG","\u963f\u68ee\u9b06\u5cf6":"SH","\u5df4\u4f48\u9054":"AG",
"\u59d4\u5167\u745e\u62c9\u73bb\u5229\u74e6\u723e\u5171\u548c\u570b":"VE","\u591a\u6c11\u65cf\u73bb\u5229\u7dad\u4e9e\u570b":"BO","\u6ce2\u65af\u5c3c\u4e9e":"BA","\u5e03\u7dad\u5cf6":"BV","\u51f1\u79d1\u65af\u7fa4\u5cf6":"TC","\u52a0\u62ff\u5927":"CA","\u8056\u8a95\u5cf6":"CX","\u832f\u82d3\u548c\u57fa\u6797\u7fa4\u5cf6":"CC","\u832f\u82d3\u7fa4\u5cf6":"CC","\u525b\u679c":"CD","\u54e5\u65af\u9054\u9ece\u52a0":"CR","\u671d\u9bae\u6c11\u4e3b\u4eba\u6c11\u5171\u548c\u570b":"KP","\u591a\u7c73\u5c3c\u52a0":"DM",
"\u57c3\u585e\u4fc4\u6bd4\u4e9e":"ET","\u6cd5\u7f85":"FO","\u6cd5\u570b\u5357\u90e8\u9818\u571f":"TF","\u5bcc\u5716\u7d0d":"WF","\u683c\u9b6f\u5409\u4e9e":"GE","\u5927\u4e0d\u5217\u985b":"GB","\u683c\u6797\u7d0d\u4e01\u65af":"VC","\u6839\u897f\u5cf6":"GG","\u5e7e\u5167\u4e9e":"GN","\u8d6b\u5fb7\u5cf6\u548c\u9ea5\u7576\u52de\u7fa4\u5cf6":"HM","\u8d6b\u5fb7\u5cf6":"HM","\u9ed1\u585e\u54e5\u7dad\u90a3":"BA","\u6559\u5ef7":"VA","\u6d2a\u90fd\u62c9\u65af":"HN","\u4f0a\u6717\u5171\u548c\u570b":"IR","\u99ac\u6069\u5cf6":"IM",
"\u610f\u5927\u5229":"IT","\u8c61\u7259\u6d77\u5cb8":"CI","\u63da\u99ac\u5ef6":"SJ","\u54c8\u85a9\u514b\u65af\u5766":"KZ","\u57fa\u91cc\u5df4\u65af":"KI","\u5927\u97d3\u6c11\u570b":"KR","\u8001\u64be\u4eba\u6c11\u6c11\u4e3b\u5171\u548c\u570b":"LA","\u963f\u62c9\u4f2f\u5229\u6bd4\u4e9e\u6c11\u773e\u570b":"LY","\u99ac\u5176\u9813":"MK","\u99ac\u723e\u4ee3\u592b":"MV","\u99ac\u723e\u7dad\u7d0d\u65af":"FK","\u99ac\u91cc\u4e9e\u7d0d":"MP","\u99ac\u7d04\u7279":"YT","\u9ea5\u7576\u52de\u7fa4\u5cf6":"HM",
"\u5bc6\u514b\u9686":"PM","\u6469\u723e\u591a\u74e6\u5171\u548c\u570b":"MD","\u8499\u7279\u5167\u683c\u7f85":"ME","\u8499\u7279\u585e\u62c9\u7279":"MS","\u5c3c\u7dad\u65af":"KN","\u65b0\u5580\u91cc\u591a\u5c3c\u4e9e":"NC","\u5317\u671d\u9bae":"KP","\u5df4\u52d2\u65af\u5766":"PS","\u5df4\u52d2\u65af\u5766\u9818\u571f":"PS","\u88ab\u4f54\u9818\u7684\u5df4\u52d2\u65af\u5766\u9818\u571f":"PS","\u5df4\u5e03\u4e9e\u65b0\u5e7e\u5167\u4e9e":"PG","\u76ae\u7279\u51f1\u6069":"PN","\u666e\u6797\u897f\u6bd4":"ST",
"\u65b0\u52a0\u5761\u5171\u548c\u570b":"SG","\u4fc4\u7f85\u65af\u806f\u90a6":"RU","\u76e7\u65fa\u9054":"RW","\u8056\u5df4\u6cf0\u52d2\u7c73":"BL","\u8056\u8d6b\u52d2\u62ff":"SH","\u8056\u8d6b\u52d2\u62ff\uff0c\u963f\u68ee\u9b06\u5cf6\u548c\u7279\u91cc\u65af\u5766\u9054\u5eab\u5c3c\u4e9e":"SH","\u8056\u57fa\u8328":"KN","\u8056\u99ac\u4e01":"MF","\u8056\u76ae\u57c3\u723e":"PM","\u8056\u6587\u68ee\u7279":"VC","\u8056\u591a\u7f8e":"ST","\u6c99\u7279\u963f\u62c9\u4f2f":"SA","\u7d22\u99ac\u91cc":"SO","\u5357\u683c\u9b6f\u5409\u4e9e":"GS",
"\u5357\u683c\u9b6f\u5409\u4e9e\u548c\u5357\u6851\u5a01\u5947\u7fa4\u5cf6":"GS","\u5357\u6851\u5a01\u5947\u7fa4\u5cf6":"GS","\u65af\u74e6\u723e\u5df4\u5cf6":"SJ","\u65af\u74e6\u723e\u5df4\u5cf6\u548c\u63da\u99ac\u5ef6\u5cf6":"SJ","\u6558\u5229\u4e9e":"SY","\u963f\u62c9\u4f2f\u6558\u5229\u4e9e\u5171\u548c\u570b":"SY","\u53f0\u7063":"TW","\u5766\u6851\u5c3c\u4e9e\u806f\u5408\u5171\u548c\u570b":"TZ","\u591a\u5df4\u54e5":"TT","\u7279\u7acb\u5c3c\u9054":"TT","\u7279\u91cc\u65af\u5766\u9054\u5eab\u5c3c\u4e9e":"SH",
"\u7279\u514b\u65af\u548c\u51f1\u79d1\u65af\u7fa4\u5cf6":"TC","\u7279\u514b\u65af\u7fa4\u5cf6":"TC","\u7f8e\u570b":"US","\u68b5\u5e1d\u5ca1":"VA","\u74e6\u5229\u65af":"WF","\u897f\u6492\u54c8\u62c9":"EH"};
ilib.Address=function $ilib$Address$($freeformAddress$$,$options$$){var $address$$;if($freeformAddress$$){this.sync=true;this.loadParams={};if($options$$){if($options$$.locale)this.locale=typeof $options$$.locale==="string"?new ilib.Locale($options$$.locale):$options$$.locale;if(typeof $options$$.sync!=="undefined")this.sync=$options$$.sync==true;if($options$$.loadParams)this.loadParams=$options$$.loadParams}this.locale=this.locale||new ilib.Locale;if(typeof $freeformAddress$$==="object"){this.streetAddress=
$freeformAddress$$.streetAddress;this.locality=$freeformAddress$$.locality;this.region=$freeformAddress$$.region;this.postalCode=$freeformAddress$$.postalCode;this.postOffice=$freeformAddress$$.postOffice;this.country=$freeformAddress$$.country;$freeformAddress$$.countryCode&&(this.countryCode=$freeformAddress$$.countryCode);if($freeformAddress$$.format)this.format=$freeformAddress$$.format;return this}$address$$=$freeformAddress$$.replace(/[ \t\r]+/g," ").trim();$address$$=$address$$.replace(/[\s\n]+$/,
"");$address$$=$address$$.replace(/^[\s\n]+/,"");this.lines=$address$$.split(/[,\uff0c\n]/g);this.removeEmptyLines(this.lines);ilib.Address.shared=ilib.Address.shared||{};if(typeof ilib.Address.ctry==="undefined")ilib.Address.ctry={};ilib.CType.isAscii._init(this.sync,this.loadParams,ilib.bind(this,function(){ilib.CType.isIdeo._init(this.sync,this.loadParams,ilib.bind(this,function(){ilib.CType.isDigit._init(this.sync,this.loadParams,ilib.bind(this,function(){typeof ilib.data.nativecountries==="undefined"?
ilib.loadData({name:"nativecountries.json",locale:"-",sync:this.sync,loadParams:this.loadParams,callback:ilib.bind(this,function($nativecountries$$){ilib.data.nativecountries=$nativecountries$$;this._loadCountries($options$$&&$options$$.onLoad)})}):this._loadCountries($options$$&&$options$$.onLoad)}))}))}))}};
ilib.Address.prototype={_loadCountries:function $ilib$Address$$_loadCountries$($onLoad$$){typeof ilib.data.countries==="undefined"?ilib.loadData({name:"countries.json",locale:"-",sync:this.sync,loadParams:this.loadParams,callback:ilib.bind(this,function($countries$$){ilib.data.countries=$countries$$;this._loadCtrynames($onLoad$$)})}):this._loadCtrynames($onLoad$$)},_loadCtrynames:function $ilib$Address$$_loadCtrynames$($onLoad$$){ilib.loadData({name:"ctrynames.json",object:ilib.Address.ctry,locale:this.locale,
sync:this.sync,loadParams:this.loadParams,callback:ilib.bind(this,function($ctrynames$$){this._determineDest($ctrynames$$,$onLoad$$)})})},_findDest:function $ilib$Address$$_findDest$($ctrynames$$){var $match$$,$countryName$$;for($countryName$$ in $ctrynames$$)if($countryName$$&&$countryName$$!=="generated"&&(!$match$$||$match$$.text.length<$countryName$$.length)){var $temp$$=this._findCountry($countryName$$);if($temp$$){$match$$=$temp$$;this.country=$match$$.text;this.countryCode=$ctrynames$$[$countryName$$]}}return $match$$},
_determineDest:function $ilib$Address$$_determineDest$($localizedCountries$$,$callback$$){var $match$$,$tables$$=[];$localizedCountries$$&&$tables$$.push($localizedCountries$$);$tables$$.push(ilib.data.nativecountries);$tables$$.push(ilib.data.countries);for(var $i$$=0;$i$$<$tables$$.length;$i$$++)if($match$$=this._findDest($tables$$[$i$$])){this.lines[$match$$.line]=this.lines[$match$$.line].substring(0,$match$$.start)+this.lines[$match$$.line].substring($match$$.start+$match$$.text.length);this._init($callback$$);
return}this.country=void 0;this.countryCode=this.locale.getRegion();this._init($callback$$)},_init:function $ilib$Address$$_init$($callback$$){ilib.loadData({object:ilib.Address,locale:new ilib.Locale(this.countryCode),name:"address.json",sync:this.sync,loadParams:this.loadParams,callback:ilib.bind(this,function($info$$0$$){if(!$info$$0$$||ilib.isEmpty($info$$0$$))ilib.loadData({object:ilib.Address,locale:new ilib.Locale("XX"),name:"address.json",sync:this.sync,loadParams:this.loadParams,callback:ilib.bind(this,
function($info$$){this.info=$info$$;this._parseAddress();typeof $callback$$==="function"&&$callback$$(this)})});else{this.info=$info$$0$$;this._parseAddress();typeof $callback$$==="function"&&$callback$$(this)}})})},_parseAddress:function $ilib$Address$$_parseAddress$(){var $asianChars_i$$,$latinChars_startAt$$=$asianChars_i$$=0,$infoFields_j$$,$field_it$$,$c$$11_pattern$$,$matchFunction$$,$match$$,$fieldNumber$$;if(this.info&&this.info.multiformat){for($infoFields_j$$=0;$infoFields_j$$<this.lines.length;$infoFields_j$$++)for($field_it$$=
(new ilib.String(this.lines[$infoFields_j$$])).charIterator();$field_it$$.hasNext();){$c$$11_pattern$$=$field_it$$.next();ilib.CType.isIdeo($c$$11_pattern$$)||ilib.CType.withinRange($c$$11_pattern$$,"Hangul")?$asianChars_i$$++:ilib.CType.isAscii($c$$11_pattern$$)&&!ilib.CType.isDigit($c$$11_pattern$$)&&$latinChars_startAt$$++}this.format=$asianChars_i$$>=$latinChars_startAt$$?"asian":"latin";$latinChars_startAt$$=this.info.startAt[this.format];$infoFields_j$$=this.info.fields[this.format]}else{$latinChars_startAt$$=
this.info&&this.info.startAt||"end";$infoFields_j$$=this.info.fields}this.compare=$latinChars_startAt$$==="end"?this.endsWith:this.startsWith;for($asianChars_i$$=0;$asianChars_i$$<$infoFields_j$$.length&&this.lines.length>0;$asianChars_i$$++){$field_it$$=$infoFields_j$$[$asianChars_i$$];this.removeEmptyLines(this.lines);if($field_it$$.pattern){if(typeof $field_it$$.pattern==="string"){$c$$11_pattern$$=RegExp($field_it$$.pattern,"img");$matchFunction$$=this.matchRegExp}else{$c$$11_pattern$$=$field_it$$.pattern;
$matchFunction$$=this.matchPattern}switch($field_it$$.line){case "startAtFirst":for($fieldNumber$$=0;$fieldNumber$$<this.lines.length;$fieldNumber$$++)if($match$$=$matchFunction$$(this,this.lines[$fieldNumber$$],$c$$11_pattern$$,$field_it$$.matchGroup,$latinChars_startAt$$))break;break;case "startAtLast":for($fieldNumber$$=this.lines.length-1;$fieldNumber$$>=0;$fieldNumber$$--)if($match$$=$matchFunction$$(this,this.lines[$fieldNumber$$],$c$$11_pattern$$,$field_it$$.matchGroup,$latinChars_startAt$$))break;
break;case "first":$fieldNumber$$=0;$match$$=$matchFunction$$(this,this.lines[$fieldNumber$$],$c$$11_pattern$$,$field_it$$.matchGroup,$latinChars_startAt$$);break;default:$fieldNumber$$=this.lines.length-1;$match$$=$matchFunction$$(this,this.lines[$fieldNumber$$],$c$$11_pattern$$,$field_it$$.matchGroup,$latinChars_startAt$$)}if($match$$){this.lines[$fieldNumber$$]=$match$$.line;this[$field_it$$.name]=$match$$.match}}else this[$field_it$$.name]=this.lines.splice($fieldNumber$$,1)[0].trim()}this.removeEmptyLines(this.lines);
this.lines.length>0&&(this.streetAddress=this.lines.join(this.info.joinString&&this.info.joinString[this.format]||(this.format&&this.format==="asian"?"":", ")).trim());this.lines=void 0},_findCountry:function $ilib$Address$$_findCountry$($name$$){var $start$$=-1,$match$$,$line$$=0;if(this.lines.length>0){$start$$=this.startsWith(this.lines[$line$$],$name$$);if($start$$===-1){$line$$=this.lines.length-1;$start$$=this.endsWith(this.lines[$line$$],$name$$)}$start$$!==-1&&($match$$={text:this.lines[$line$$].substring($start$$,
$start$$+$name$$.length),line:$line$$,start:$start$$})}return $match$$},endsWith:function $ilib$Address$$endsWith$($subject$$,$query$$){var $start$$=$subject$$.length-$query$$.length,$i$$;for($i$$=0;$i$$<$query$$.length;$i$$++)if($subject$$.charAt($start$$+$i$$).toLowerCase()!==$query$$.charAt($i$$).toLowerCase())return-1;if($start$$>0){$i$$=/\s/;if(!$i$$.test($subject$$.charAt($start$$-1)))return-1}return $start$$},startsWith:function $ilib$Address$$startsWith$($subject$$,$query$$){var $i$$;for($i$$=
0;$i$$<$query$$.length;$i$$++)if($subject$$.charAt($i$$).toLowerCase()!==$query$$.charAt($i$$).toLowerCase())return-1;return 0},removeEmptyLines:function $ilib$Address$$removeEmptyLines$($arr$$){for(var $i$$=0;$i$$<$arr$$.length;)if($arr$$[$i$$]){$arr$$[$i$$]=$arr$$[$i$$].trim();$arr$$[$i$$].length===0?$arr$$.splice($i$$,1):$i$$++}else $arr$$.splice($i$$,1)},matchRegExp:function $ilib$Address$$matchRegExp$($address$$,$line$$,$expression$$2_last$$,$matchGroup$$,$startAt$$){var $lastMatch$$,$match$$,
$ret$$={};$match$$=$expression$$2_last$$.exec($line$$);if($startAt$$==="end"){for(;$match$$!==null&&$match$$.length>0;){$lastMatch$$=$match$$;$match$$=$expression$$2_last$$.exec($line$$)}$match$$=$lastMatch$$}if($match$$&&$match$$!==null){$matchGroup$$=$matchGroup$$||0;if($match$$[$matchGroup$$]!==void 0){$ret$$.match=$match$$[$matchGroup$$].trim();$ret$$.match=$ret$$.match.replace(/^\-|\-+$/,"");$ret$$.match=$ret$$.match.replace(/\s+$/,"");$expression$$2_last$$=$startAt$$==="end"?$line$$.lastIndexOf($match$$[$matchGroup$$]):
$line$$.indexOf($match$$[$matchGroup$$]);$ret$$.line=$line$$.slice(0,$expression$$2_last$$);if($address$$.format!=="asian")$ret$$.line=$ret$$.line+" ";$ret$$.line=$ret$$.line+$line$$.slice($expression$$2_last$$+$match$$[$matchGroup$$].length);$ret$$.line=$ret$$.line.trim();return $ret$$}}},matchPattern:function $ilib$Address$$matchPattern$($address$$,$line$$,$pattern$$){var $start$$,$j$$,$ret$$={};for($j$$=0;$j$$<$pattern$$.length;$j$$++){$start$$=$address$$.compare($line$$,$pattern$$[$j$$]);if($start$$!==
-1){$ret$$.match=$line$$.substring($start$$,$start$$+$pattern$$[$j$$].length);$ret$$.line=$start$$!==0?$line$$.substring(0,$start$$).trim():$line$$.substring($pattern$$[$j$$].length).trim();return $ret$$}}}};
ilib.AddressFmt=function $ilib$AddressFmt$($options$$){this.sync=true;this.styleName="default";this.loadParams={};this.locale=new ilib.Locale;if($options$$){if($options$$.locale)this.locale=typeof $options$$.locale==="string"?new ilib.Locale($options$$.locale):$options$$.locale;if(typeof $options$$.sync!=="undefined")this.sync=$options$$.sync==true;if($options$$.style)this.styleName=$options$$.style;if($options$$.loadParams)this.loadParams=$options$$.loadParams}ilib.loadData({name:"address.json",
object:ilib.Address,locale:this.locale,sync:this.sync,loadParams:this.loadParams,callback:ilib.bind(this,function($info$$0$$){if(!$info$$0$$||ilib.isEmpty($info$$0$$))ilib.loadData({name:"address.json",object:ilib.Address,locale:new ilib.Locale("XX"),sync:this.sync,loadParams:this.loadParams,callback:ilib.bind(this,function($info$$){this.info=$info$$;this._init();if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad(this)})});else{this.info=$info$$0$$;this._init();if($options$$&&
typeof $options$$.onLoad==="function")$options$$.onLoad(this)}})})};ilib.AddressFmt.prototype._init=function $ilib$AddressFmt$$_init$(){this.style=(this.style=this.info&&this.info.formats&&this.info.formats[this.styleName])||this.info&&this.info.formats["default"]||"{streetAddress}\n{locality} {region} {postalCode}\n{country}"};
ilib.AddressFmt.prototype.format=function $ilib$AddressFmt$$format$($address$$3_ret$$){var $other$$5_params$$;if(!$address$$3_ret$$)return"";if($address$$3_ret$$.countryCode&&$address$$3_ret$$.countryCode!==this.locale.region&&ilib.Locale._isRegionCode(this.locale.region)&&this.locale.region!=="XX"){$other$$5_params$$=new ilib.AddressFmt({locale:new ilib.Locale($address$$3_ret$$.countryCode),style:this.styleName});return $other$$5_params$$.format($address$$3_ret$$)}$other$$5_params$$={country:$address$$3_ret$$.country||
"",region:$address$$3_ret$$.region||"",locality:$address$$3_ret$$.locality||"",streetAddress:$address$$3_ret$$.streetAddress||"",postalCode:$address$$3_ret$$.postalCode||"",postOffice:$address$$3_ret$$.postOffice||""};$address$$3_ret$$=(new ilib.String(typeof this.style==="object"?this.style[$address$$3_ret$$.format||"latin"]:this.style)).format($other$$5_params$$);$address$$3_ret$$=$address$$3_ret$$.replace(/[ \t]+/g," ");$address$$3_ret$$=$address$$3_ret$$.replace("\n ","\n");$address$$3_ret$$=
$address$$3_ret$$.replace(" \n","\n");return $address$$3_ret$$.replace(/\n+/g,"\n").trim()};
ilib.data.norm={ccc:{"\u0300":230,"\u0301":230,"\u0302":230,"\u0303":230,"\u0304":230,"\u0305":230,"\u0306":230,"\u0307":230,"\u0308":230,"\u0309":230,"\u030a":230,"\u030b":230,"\u030c":230,"\u030d":230,"\u030e":230,"\u030f":230,"\u0310":230,"\u0311":230,"\u0312":230,"\u0313":230,"\u0314":230,"\u0315":232,"\u0316":220,"\u0317":220,"\u0318":220,"\u0319":220,"\u031a":232,"\u031b":216,"\u031c":220,"\u031d":220,"\u031e":220,"\u031f":220,"\u0320":220,"\u0321":202,"\u0322":202,"\u0323":220,"\u0324":220,
"\u0325":220,"\u0326":220,"\u0327":202,"\u0328":202,"\u0329":220,"\u032a":220,"\u032b":220,"\u032c":220,"\u032d":220,"\u032e":220,"\u032f":220,"\u0330":220,"\u0331":220,"\u0332":220,"\u0333":220,"\u0334":1,"\u0335":1,"\u0336":1,"\u0337":1,"\u0338":1,"\u0339":220,"\u033a":220,"\u033b":220,"\u033c":220,"\u033d":230,"\u033e":230,"\u033f":230,"\u0340":230,"\u0341":230,"\u0342":230,"\u0343":230,"\u0344":230,"\u0345":240,"\u0346":230,"\u0347":220,"\u0348":220,"\u0349":220,"\u034a":230,"\u034b":230,"\u034c":230,
"\u034d":220,"\u034e":220,"\u0350":230,"\u0351":230,"\u0352":230,"\u0353":220,"\u0354":220,"\u0355":220,"\u0356":220,"\u0357":230,"\u0358":232,"\u0359":220,"\u035a":220,"\u035b":230,"\u035c":233,"\u035d":234,"\u035e":234,"\u035f":233,"\u0360":234,"\u0361":234,"\u0362":233,"\u0363":230,"\u0364":230,"\u0365":230,"\u0366":230,"\u0367":230,"\u0368":230,"\u0369":230,"\u036a":230,"\u036b":230,"\u036c":230,"\u036d":230,"\u036e":230,"\u036f":230,"\u0483":230,"\u0484":230,"\u0485":230,"\u0486":230,"\u0487":230,
"\u0591":220,"\u0592":230,"\u0593":230,"\u0594":230,"\u0595":230,"\u0596":220,"\u0597":230,"\u0598":230,"\u0599":230,"\u059a":222,"\u059b":220,"\u059c":230,"\u059d":230,"\u059e":230,"\u059f":230,"\u05a0":230,"\u05a1":230,"\u05a2":220,"\u05a3":220,"\u05a4":220,"\u05a5":220,"\u05a6":220,"\u05a7":220,"\u05a8":230,"\u05a9":230,"\u05aa":220,"\u05ab":230,"\u05ac":230,"\u05ad":222,"\u05ae":228,"\u05af":230,"\u05b0":10,"\u05b1":11,"\u05b2":12,"\u05b3":13,"\u05b4":14,"\u05b5":15,"\u05b6":16,"\u05b7":17,"\u05b8":18,
"\u05b9":19,"\u05ba":19,"\u05bb":20,"\u05bc":21,"\u05bd":22,"\u05bf":23,"\u05c1":24,"\u05c2":25,"\u05c4":230,"\u05c5":220,"\u05c7":18,"\u0610":230,"\u0611":230,"\u0612":230,"\u0613":230,"\u0614":230,"\u0615":230,"\u0616":230,"\u0617":230,"\u0618":30,"\u0619":31,"\u061a":32,"\u064b":27,"\u064c":28,"\u064d":29,"\u064e":30,"\u064f":31,"\u0650":32,"\u0651":33,"\u0652":34,"\u0653":230,"\u0654":230,"\u0655":220,"\u0656":220,"\u0657":230,"\u0658":230,"\u0659":230,"\u065a":230,"\u065b":230,"\u065c":220,"\u065d":230,
"\u065e":230,"\u065f":220,"\u0670":35,"\u06d6":230,"\u06d7":230,"\u06d8":230,"\u06d9":230,"\u06da":230,"\u06db":230,"\u06dc":230,"\u06df":230,"\u06e0":230,"\u06e1":230,"\u06e2":230,"\u06e3":220,"\u06e4":230,"\u06e7":230,"\u06e8":230,"\u06ea":220,"\u06eb":230,"\u06ec":230,"\u06ed":220,"\u0711":36,"\u0730":230,"\u0731":220,"\u0732":230,"\u0733":230,"\u0734":220,"\u0735":230,"\u0736":230,"\u0737":220,"\u0738":220,"\u0739":220,"\u073a":230,"\u073b":220,"\u073c":220,"\u073d":230,"\u073e":220,"\u073f":230,
"\u0740":230,"\u0741":230,"\u0742":220,"\u0743":230,"\u0744":220,"\u0745":230,"\u0746":220,"\u0747":230,"\u0748":220,"\u0749":230,"\u074a":230,"\u07eb":230,"\u07ec":230,"\u07ed":230,"\u07ee":230,"\u07ef":230,"\u07f0":230,"\u07f1":230,"\u07f2":220,"\u07f3":230,"\u0816":230,"\u0817":230,"\u0818":230,"\u0819":230,"\u081b":230,"\u081c":230,"\u081d":230,"\u081e":230,"\u081f":230,"\u0820":230,"\u0821":230,"\u0822":230,"\u0823":230,"\u0825":230,"\u0826":230,"\u0827":230,"\u0829":230,"\u082a":230,"\u082b":230,
"\u082c":230,"\u082d":230,"\u0859":220,"\u085a":220,"\u085b":220,"\u08e4":230,"\u08e5":230,"\u08e6":220,"\u08e7":230,"\u08e8":230,"\u08e9":220,"\u08ea":230,"\u08eb":230,"\u08ec":230,"\u08ed":220,"\u08ee":220,"\u08ef":220,"\u08f0":27,"\u08f1":28,"\u08f2":29,"\u08f3":230,"\u08f4":230,"\u08f5":230,"\u08f6":220,"\u08f7":230,"\u08f8":230,"\u08f9":220,"\u08fa":220,"\u08fb":230,"\u08fc":230,"\u08fd":230,"\u08fe":230,"\u093c":7,"\u094d":9,"\u0951":230,"\u0952":220,"\u0953":230,"\u0954":230,"\u09bc":7,"\u09cd":9,
"\u0a3c":7,"\u0a4d":9,"\u0abc":7,"\u0acd":9,"\u0b3c":7,"\u0b4d":9,"\u0bcd":9,"\u0c4d":9,"\u0c55":84,"\u0c56":91,"\u0cbc":7,"\u0ccd":9,"\u0d4d":9,"\u0dca":9,"\u0e38":103,"\u0e39":103,"\u0e3a":9,"\u0e48":107,"\u0e49":107,"\u0e4a":107,"\u0e4b":107,"\u0eb8":118,"\u0eb9":118,"\u0ec8":122,"\u0ec9":122,"\u0eca":122,"\u0ecb":122,"\u0f18":220,"\u0f19":220,"\u0f35":220,"\u0f37":220,"\u0f39":216,"\u0f71":129,"\u0f72":130,"\u0f74":132,"\u0f7a":130,"\u0f7b":130,"\u0f7c":130,"\u0f7d":130,"\u0f80":130,"\u0f82":230,
"\u0f83":230,"\u0f84":9,"\u0f86":230,"\u0f87":230,"\u0fc6":220,"\u1037":7,"\u1039":9,"\u103a":9,"\u108d":220,"\u135d":230,"\u135e":230,"\u135f":230,"\u1714":9,"\u1734":9,"\u17d2":9,"\u17dd":230,"\u18a9":228,"\u1939":222,"\u193a":230,"\u193b":220,"\u1a17":230,"\u1a18":220,"\u1a60":9,"\u1a75":230,"\u1a76":230,"\u1a77":230,"\u1a78":230,"\u1a79":230,"\u1a7a":230,"\u1a7b":230,"\u1a7c":230,"\u1a7f":220,"\u1b34":7,"\u1b44":9,"\u1b6b":230,"\u1b6c":220,"\u1b6d":230,"\u1b6e":230,"\u1b6f":230,"\u1b70":230,"\u1b71":230,
"\u1b72":230,"\u1b73":230,"\u1baa":9,"\u1bab":9,"\u1be6":7,"\u1bf2":9,"\u1bf3":9,"\u1c37":7,"\u1cd0":230,"\u1cd1":230,"\u1cd2":230,"\u1cd4":1,"\u1cd5":220,"\u1cd6":220,"\u1cd7":220,"\u1cd8":220,"\u1cd9":220,"\u1cda":230,"\u1cdb":230,"\u1cdc":220,"\u1cdd":220,"\u1cde":220,"\u1cdf":220,"\u1ce0":230,"\u1ce2":1,"\u1ce3":1,"\u1ce4":1,"\u1ce5":1,"\u1ce6":1,"\u1ce7":1,"\u1ce8":1,"\u1ced":220,"\u1cf4":230,"\u1dc0":230,"\u1dc1":230,"\u1dc2":220,"\u1dc3":230,"\u1dc4":230,"\u1dc5":230,"\u1dc6":230,"\u1dc7":230,
"\u1dc8":230,"\u1dc9":230,"\u1dca":220,"\u1dcb":230,"\u1dcc":230,"\u1dcd":234,"\u1dce":214,"\u1dcf":220,"\u1dd0":202,"\u1dd1":230,"\u1dd2":230,"\u1dd3":230,"\u1dd4":230,"\u1dd5":230,"\u1dd6":230,"\u1dd7":230,"\u1dd8":230,"\u1dd9":230,"\u1dda":230,"\u1ddb":230,"\u1ddc":230,"\u1ddd":230,"\u1dde":230,"\u1ddf":230,"\u1de0":230,"\u1de1":230,"\u1de2":230,"\u1de3":230,"\u1de4":230,"\u1de5":230,"\u1de6":230,"\u1dfc":233,"\u1dfd":220,"\u1dfe":230,"\u1dff":220,"\u20d0":230,"\u20d1":230,"\u20d2":1,"\u20d3":1,
"\u20d4":230,"\u20d5":230,"\u20d6":230,"\u20d7":230,"\u20d8":1,"\u20d9":1,"\u20da":1,"\u20db":230,"\u20dc":230,"\u20e1":230,"\u20e5":1,"\u20e6":1,"\u20e7":230,"\u20e8":220,"\u20e9":230,"\u20ea":1,"\u20eb":1,"\u20ec":220,"\u20ed":220,"\u20ee":220,"\u20ef":220,"\u20f0":230,"\u2cef":230,"\u2cf0":230,"\u2cf1":230,"\u2d7f":9,"\u2de0":230,"\u2de1":230,"\u2de2":230,"\u2de3":230,"\u2de4":230,"\u2de5":230,"\u2de6":230,"\u2de7":230,"\u2de8":230,"\u2de9":230,"\u2dea":230,"\u2deb":230,"\u2dec":230,"\u2ded":230,
"\u2dee":230,"\u2def":230,"\u2df0":230,"\u2df1":230,"\u2df2":230,"\u2df3":230,"\u2df4":230,"\u2df5":230,"\u2df6":230,"\u2df7":230,"\u2df8":230,"\u2df9":230,"\u2dfa":230,"\u2dfb":230,"\u2dfc":230,"\u2dfd":230,"\u2dfe":230,"\u2dff":230,"\u302a":218,"\u302b":228,"\u302c":232,"\u302d":222,"\u302e":224,"\u302f":224,"\u3099":8,"\u309a":8,"\ua66f":230,"\ua674":230,"\ua675":230,"\ua676":230,"\ua677":230,"\ua678":230,"\ua679":230,"\ua67a":230,"\ua67b":230,"\ua67c":230,"\ua67d":230,"\ua69f":230,"\ua6f0":230,
"\ua6f1":230,"\ua806":9,"\ua8c4":9,"\ua8e0":230,"\ua8e1":230,"\ua8e2":230,"\ua8e3":230,"\ua8e4":230,"\ua8e5":230,"\ua8e6":230,"\ua8e7":230,"\ua8e8":230,"\ua8e9":230,"\ua8ea":230,"\ua8eb":230,"\ua8ec":230,"\ua8ed":230,"\ua8ee":230,"\ua8ef":230,"\ua8f0":230,"\ua8f1":230,"\ua92b":220,"\ua92c":220,"\ua92d":220,"\ua953":9,"\ua9b3":7,"\ua9c0":9,"\uaab0":230,"\uaab2":230,"\uaab3":230,"\uaab4":220,"\uaab7":230,"\uaab8":230,"\uaabe":230,"\uaabf":230,"\uaac1":230,"\uaaf6":9,"\uabed":9,"\ufb1e":26,"\ufe20":230,
"\ufe21":230,"\ufe22":230,"\ufe23":230,"\ufe24":230,"\ufe25":230,"\ufe26":230,"\ud800\uddfd":220,"\ud802\ude0d":220,"\ud802\ude0f":230,"\ud802\ude38":230,"\ud802\ude39":1,"\ud802\ude3a":220,"\ud802\ude3f":9,"\ud804\udc46":9,"\ud804\udcb9":9,"\ud804\udcba":7,"\ud804\udd00":230,"\ud804\udd01":230,"\ud804\udd02":230,"\ud804\udd33":9,"\ud804\udd34":9,"\ud804\uddc0":9,"\ud805\udeb6":9,"\ud805\udeb7":7,"\ud834\udd65":216,"\ud834\udd66":216,"\ud834\udd67":1,"\ud834\udd68":1,"\ud834\udd69":1,"\ud834\udd6d":226,
"\ud834\udd6e":216,"\ud834\udd6f":216,"\ud834\udd70":216,"\ud834\udd71":216,"\ud834\udd72":216,"\ud834\udd7b":220,"\ud834\udd7c":220,"\ud834\udd7d":220,"\ud834\udd7e":220,"\ud834\udd7f":220,"\ud834\udd80":220,"\ud834\udd81":220,"\ud834\udd82":220,"\ud834\udd85":230,"\ud834\udd86":230,"\ud834\udd87":230,"\ud834\udd88":230,"\ud834\udd89":230,"\ud834\udd8a":220,"\ud834\udd8b":220,"\ud834\uddaa":230,"\ud834\uddab":230,"\ud834\uddac":230,"\ud834\uddad":230,"\ud834\ude42":230,"\ud834\ude43":230,"\ud834\ude44":230},
nfc:{"A\u0300":"\u00c0","A\u0301":"\u00c1","A\u0302":"\u00c2","A\u0303":"\u00c3","A\u0308":"\u00c4","A\u030a":"\u00c5","C\u0327":"\u00c7","E\u0300":"\u00c8","E\u0301":"\u00c9","E\u0302":"\u00ca","E\u0308":"\u00cb","I\u0300":"\u00cc","I\u0301":"\u00cd","I\u0302":"\u00ce","I\u0308":"\u00cf","N\u0303":"\u00d1","O\u0300":"\u00d2","O\u0301":"\u00d3","O\u0302":"\u00d4","O\u0303":"\u00d5","O\u0308":"\u00d6","U\u0300":"\u00d9","U\u0301":"\u00da","U\u0302":"\u00db","U\u0308":"\u00dc","Y\u0301":"\u00dd","a\u0300":"\u00e0",
"a\u0301":"\u00e1","a\u0302":"\u00e2","a\u0303":"\u00e3","a\u0308":"\u00e4","a\u030a":"\u00e5","c\u0327":"\u00e7","e\u0300":"\u00e8","e\u0301":"\u00e9","e\u0302":"\u00ea","e\u0308":"\u00eb","i\u0300":"\u00ec","i\u0301":"\u00ed","i\u0302":"\u00ee","i\u0308":"\u00ef","n\u0303":"\u00f1","o\u0300":"\u00f2","o\u0301":"\u00f3","o\u0302":"\u00f4","o\u0303":"\u00f5","o\u0308":"\u00f6","u\u0300":"\u00f9","u\u0301":"\u00fa","u\u0302":"\u00fb","u\u0308":"\u00fc","y\u0301":"\u00fd","y\u0308":"\u00ff","A\u0304":"\u0100",
"a\u0304":"\u0101","A\u0306":"\u0102","a\u0306":"\u0103","A\u0328":"\u0104","a\u0328":"\u0105","C\u0301":"\u0106","c\u0301":"\u0107","C\u0302":"\u0108","c\u0302":"\u0109","C\u0307":"\u010a","c\u0307":"\u010b","C\u030c":"\u010c","c\u030c":"\u010d","D\u030c":"\u010e","d\u030c":"\u010f","E\u0304":"\u0112","e\u0304":"\u0113","E\u0306":"\u0114","e\u0306":"\u0115","E\u0307":"\u0116","e\u0307":"\u0117","E\u0328":"\u0118","e\u0328":"\u0119","E\u030c":"\u011a","e\u030c":"\u011b","G\u0302":"\u011c","g\u0302":"\u011d",
"G\u0306":"\u011e","g\u0306":"\u011f","G\u0307":"\u0120","g\u0307":"\u0121","G\u0327":"\u0122","g\u0327":"\u0123","H\u0302":"\u0124","h\u0302":"\u0125","I\u0303":"\u0128","i\u0303":"\u0129","I\u0304":"\u012a","i\u0304":"\u012b","I\u0306":"\u012c","i\u0306":"\u012d","I\u0328":"\u012e","i\u0328":"\u012f","I\u0307":"\u0130","J\u0302":"\u0134","j\u0302":"\u0135","K\u0327":"\u0136","k\u0327":"\u0137","L\u0301":"\u0139","l\u0301":"\u013a","L\u0327":"\u013b","l\u0327":"\u013c","L\u030c":"\u013d","l\u030c":"\u013e",
"N\u0301":"\u0143","n\u0301":"\u0144","N\u0327":"\u0145","n\u0327":"\u0146","N\u030c":"\u0147","n\u030c":"\u0148","O\u0304":"\u014c","o\u0304":"\u014d","O\u0306":"\u014e","o\u0306":"\u014f","O\u030b":"\u0150","o\u030b":"\u0151","R\u0301":"\u0154","r\u0301":"\u0155","R\u0327":"\u0156","r\u0327":"\u0157","R\u030c":"\u0158","r\u030c":"\u0159","S\u0301":"\u015a","s\u0301":"\u015b","S\u0302":"\u015c","s\u0302":"\u015d","S\u0327":"\u015e","s\u0327":"\u015f","S\u030c":"\u0160","s\u030c":"\u0161","T\u0327":"\u0162",
"t\u0327":"\u0163","T\u030c":"\u0164","t\u030c":"\u0165","U\u0303":"\u0168","u\u0303":"\u0169","U\u0304":"\u016a","u\u0304":"\u016b","U\u0306":"\u016c","u\u0306":"\u016d","U\u030a":"\u016e","u\u030a":"\u016f","U\u030b":"\u0170","u\u030b":"\u0171","U\u0328":"\u0172","u\u0328":"\u0173","W\u0302":"\u0174","w\u0302":"\u0175","Y\u0302":"\u0176","y\u0302":"\u0177","Y\u0308":"\u0178","Z\u0301":"\u0179","z\u0301":"\u017a","Z\u0307":"\u017b","z\u0307":"\u017c","Z\u030c":"\u017d","z\u030c":"\u017e","O\u031b":"\u01a0",
"o\u031b":"\u01a1","U\u031b":"\u01af","u\u031b":"\u01b0","A\u030c":"\u01cd","a\u030c":"\u01ce","I\u030c":"\u01cf","i\u030c":"\u01d0","O\u030c":"\u01d1","o\u030c":"\u01d2","U\u030c":"\u01d3","u\u030c":"\u01d4","\u00dc\u0304":"\u01d5","\u00fc\u0304":"\u01d6","\u00dc\u0301":"\u01d7","\u00fc\u0301":"\u01d8","\u00dc\u030c":"\u01d9","\u00fc\u030c":"\u01da","\u00dc\u0300":"\u01db","\u00fc\u0300":"\u01dc","\u00c4\u0304":"\u01de","\u00e4\u0304":"\u01df","\u0226\u0304":"\u01e0","\u0227\u0304":"\u01e1","\u00c6\u0304":"\u01e2",
"\u00e6\u0304":"\u01e3","G\u030c":"\u01e6","g\u030c":"\u01e7","K\u030c":"\u01e8","k\u030c":"\u01e9","O\u0328":"\u01ea","o\u0328":"\u01eb","\u01ea\u0304":"\u01ec","\u01eb\u0304":"\u01ed","\u01b7\u030c":"\u01ee","\u0292\u030c":"\u01ef","j\u030c":"\u01f0","G\u0301":"\u01f4","g\u0301":"\u01f5","N\u0300":"\u01f8","n\u0300":"\u01f9","\u00c5\u0301":"\u01fa","\u00e5\u0301":"\u01fb","\u00c6\u0301":"\u01fc","\u00e6\u0301":"\u01fd","\u00d8\u0301":"\u01fe","\u00f8\u0301":"\u01ff","A\u030f":"\u0200","a\u030f":"\u0201",
"A\u0311":"\u0202","a\u0311":"\u0203","E\u030f":"\u0204","e\u030f":"\u0205","E\u0311":"\u0206","e\u0311":"\u0207","I\u030f":"\u0208","i\u030f":"\u0209","I\u0311":"\u020a","i\u0311":"\u020b","O\u030f":"\u020c","o\u030f":"\u020d","O\u0311":"\u020e","o\u0311":"\u020f","R\u030f":"\u0210","r\u030f":"\u0211","R\u0311":"\u0212","r\u0311":"\u0213","U\u030f":"\u0214","u\u030f":"\u0215","U\u0311":"\u0216","u\u0311":"\u0217","S\u0326":"\u0218","s\u0326":"\u0219","T\u0326":"\u021a","t\u0326":"\u021b","H\u030c":"\u021e",
"h\u030c":"\u021f","A\u0307":"\u0226","a\u0307":"\u0227","E\u0327":"\u0228","e\u0327":"\u0229","\u00d6\u0304":"\u022a","\u00f6\u0304":"\u022b","\u00d5\u0304":"\u022c","\u00f5\u0304":"\u022d","O\u0307":"\u022e","o\u0307":"\u022f","\u022e\u0304":"\u0230","\u022f\u0304":"\u0231","Y\u0304":"\u0232","y\u0304":"\u0233","\u00a8\u0301":"\u0385","\u0391\u0301":"\u0386","\u0395\u0301":"\u0388","\u0397\u0301":"\u0389","\u0399\u0301":"\u038a","\u039f\u0301":"\u038c","\u03a5\u0301":"\u038e","\u03a9\u0301":"\u038f",
"\u03ca\u0301":"\u0390","\u0399\u0308":"\u03aa","\u03a5\u0308":"\u03ab","\u03b1\u0301":"\u03ac","\u03b5\u0301":"\u03ad","\u03b7\u0301":"\u03ae","\u03b9\u0301":"\u03af","\u03cb\u0301":"\u03b0","\u03b9\u0308":"\u03ca","\u03c5\u0308":"\u03cb","\u03bf\u0301":"\u03cc","\u03c5\u0301":"\u03cd","\u03c9\u0301":"\u03ce","\u03d2\u0301":"\u03d3","\u03d2\u0308":"\u03d4","\u0415\u0300":"\u0400","\u0415\u0308":"\u0401","\u0413\u0301":"\u0403","\u0406\u0308":"\u0407","\u041a\u0301":"\u040c","\u0418\u0300":"\u040d",
"\u0423\u0306":"\u040e","\u0418\u0306":"\u0419","\u0438\u0306":"\u0439","\u0435\u0300":"\u0450","\u0435\u0308":"\u0451","\u0433\u0301":"\u0453","\u0456\u0308":"\u0457","\u043a\u0301":"\u045c","\u0438\u0300":"\u045d","\u0443\u0306":"\u045e","\u0474\u030f":"\u0476","\u0475\u030f":"\u0477","\u0416\u0306":"\u04c1","\u0436\u0306":"\u04c2","\u0410\u0306":"\u04d0","\u0430\u0306":"\u04d1","\u0410\u0308":"\u04d2","\u0430\u0308":"\u04d3","\u0415\u0306":"\u04d6","\u0435\u0306":"\u04d7","\u04d8\u0308":"\u04da",
"\u04d9\u0308":"\u04db","\u0416\u0308":"\u04dc","\u0436\u0308":"\u04dd","\u0417\u0308":"\u04de","\u0437\u0308":"\u04df","\u0418\u0304":"\u04e2","\u0438\u0304":"\u04e3","\u0418\u0308":"\u04e4","\u0438\u0308":"\u04e5","\u041e\u0308":"\u04e6","\u043e\u0308":"\u04e7","\u04e8\u0308":"\u04ea","\u04e9\u0308":"\u04eb","\u042d\u0308":"\u04ec","\u044d\u0308":"\u04ed","\u0423\u0304":"\u04ee","\u0443\u0304":"\u04ef","\u0423\u0308":"\u04f0","\u0443\u0308":"\u04f1","\u0423\u030b":"\u04f2","\u0443\u030b":"\u04f3",
"\u0427\u0308":"\u04f4","\u0447\u0308":"\u04f5","\u042b\u0308":"\u04f8","\u044b\u0308":"\u04f9","\u0627\u0653":"\u0622","\u0627\u0654":"\u0623","\u0648\u0654":"\u0624","\u0627\u0655":"\u0625","\u064a\u0654":"\u0626","\u06d5\u0654":"\u06c0","\u06c1\u0654":"\u06c2","\u06d2\u0654":"\u06d3","\u0928\u093c":"\u0929","\u0930\u093c":"\u0931","\u0933\u093c":"\u0934","\u09c7\u09be":"\u09cb","\u09c7\u09d7":"\u09cc","\u0b47\u0b56":"\u0b48","\u0b47\u0b3e":"\u0b4b","\u0b47\u0b57":"\u0b4c","\u0b92\u0bd7":"\u0b94",
"\u0bc6\u0bbe":"\u0bca","\u0bc7\u0bbe":"\u0bcb","\u0bc6\u0bd7":"\u0bcc","\u0c46\u0c56":"\u0c48","\u0cbf\u0cd5":"\u0cc0","\u0cc6\u0cd5":"\u0cc7","\u0cc6\u0cd6":"\u0cc8","\u0cc6\u0cc2":"\u0cca","\u0cca\u0cd5":"\u0ccb","\u0d46\u0d3e":"\u0d4a","\u0d47\u0d3e":"\u0d4b","\u0d46\u0d57":"\u0d4c","\u0dd9\u0dca":"\u0dda","\u0dd9\u0dcf":"\u0ddc","\u0ddc\u0dca":"\u0ddd","\u0dd9\u0ddf":"\u0dde","\u1025\u102e":"\u1026","\u1b05\u1b35":"\u1b06","\u1b07\u1b35":"\u1b08","\u1b09\u1b35":"\u1b0a","\u1b0b\u1b35":"\u1b0c",
"\u1b0d\u1b35":"\u1b0e","\u1b11\u1b35":"\u1b12","\u1b3a\u1b35":"\u1b3b","\u1b3c\u1b35":"\u1b3d","\u1b3e\u1b35":"\u1b40","\u1b3f\u1b35":"\u1b41","\u1b42\u1b35":"\u1b43","A\u0325":"\u1e00","a\u0325":"\u1e01","B\u0307":"\u1e02","b\u0307":"\u1e03","B\u0323":"\u1e04","b\u0323":"\u1e05","B\u0331":"\u1e06","b\u0331":"\u1e07","\u00c7\u0301":"\u1e08","\u00e7\u0301":"\u1e09","D\u0307":"\u1e0a","d\u0307":"\u1e0b","D\u0323":"\u1e0c","d\u0323":"\u1e0d","D\u0331":"\u1e0e","d\u0331":"\u1e0f","D\u0327":"\u1e10",
"d\u0327":"\u1e11","D\u032d":"\u1e12","d\u032d":"\u1e13","\u0112\u0300":"\u1e14","\u0113\u0300":"\u1e15","\u0112\u0301":"\u1e16","\u0113\u0301":"\u1e17","E\u032d":"\u1e18","e\u032d":"\u1e19","E\u0330":"\u1e1a","e\u0330":"\u1e1b","\u0228\u0306":"\u1e1c","\u0229\u0306":"\u1e1d","F\u0307":"\u1e1e","f\u0307":"\u1e1f","G\u0304":"\u1e20","g\u0304":"\u1e21","H\u0307":"\u1e22","h\u0307":"\u1e23","H\u0323":"\u1e24","h\u0323":"\u1e25","H\u0308":"\u1e26","h\u0308":"\u1e27","H\u0327":"\u1e28","h\u0327":"\u1e29",
"H\u032e":"\u1e2a","h\u032e":"\u1e2b","I\u0330":"\u1e2c","i\u0330":"\u1e2d","\u00cf\u0301":"\u1e2e","\u00ef\u0301":"\u1e2f","K\u0301":"\u1e30","k\u0301":"\u1e31","K\u0323":"\u1e32","k\u0323":"\u1e33","K\u0331":"\u1e34","k\u0331":"\u1e35","L\u0323":"\u1e36","l\u0323":"\u1e37","\u1e36\u0304":"\u1e38","\u1e37\u0304":"\u1e39","L\u0331":"\u1e3a","l\u0331":"\u1e3b","L\u032d":"\u1e3c","l\u032d":"\u1e3d","M\u0301":"\u1e3e","m\u0301":"\u1e3f","M\u0307":"\u1e40","m\u0307":"\u1e41","M\u0323":"\u1e42","m\u0323":"\u1e43",
"N\u0307":"\u1e44","n\u0307":"\u1e45","N\u0323":"\u1e46","n\u0323":"\u1e47","N\u0331":"\u1e48","n\u0331":"\u1e49","N\u032d":"\u1e4a","n\u032d":"\u1e4b","\u00d5\u0301":"\u1e4c","\u00f5\u0301":"\u1e4d","\u00d5\u0308":"\u1e4e","\u00f5\u0308":"\u1e4f","\u014c\u0300":"\u1e50","\u014d\u0300":"\u1e51","\u014c\u0301":"\u1e52","\u014d\u0301":"\u1e53","P\u0301":"\u1e54","p\u0301":"\u1e55","P\u0307":"\u1e56","p\u0307":"\u1e57","R\u0307":"\u1e58","r\u0307":"\u1e59","R\u0323":"\u1e5a","r\u0323":"\u1e5b","\u1e5a\u0304":"\u1e5c",
"\u1e5b\u0304":"\u1e5d","R\u0331":"\u1e5e","r\u0331":"\u1e5f","S\u0307":"\u1e60","s\u0307":"\u1e61","S\u0323":"\u1e62","s\u0323":"\u1e63","\u015a\u0307":"\u1e64","\u015b\u0307":"\u1e65","\u0160\u0307":"\u1e66","\u0161\u0307":"\u1e67","\u1e62\u0307":"\u1e68","\u1e63\u0307":"\u1e69","T\u0307":"\u1e6a","t\u0307":"\u1e6b","T\u0323":"\u1e6c","t\u0323":"\u1e6d","T\u0331":"\u1e6e","t\u0331":"\u1e6f","T\u032d":"\u1e70","t\u032d":"\u1e71","U\u0324":"\u1e72","u\u0324":"\u1e73","U\u0330":"\u1e74","u\u0330":"\u1e75",
"U\u032d":"\u1e76","u\u032d":"\u1e77","\u0168\u0301":"\u1e78","\u0169\u0301":"\u1e79","\u016a\u0308":"\u1e7a","\u016b\u0308":"\u1e7b","V\u0303":"\u1e7c","v\u0303":"\u1e7d","V\u0323":"\u1e7e","v\u0323":"\u1e7f","W\u0300":"\u1e80","w\u0300":"\u1e81","W\u0301":"\u1e82","w\u0301":"\u1e83","W\u0308":"\u1e84","w\u0308":"\u1e85","W\u0307":"\u1e86","w\u0307":"\u1e87","W\u0323":"\u1e88","w\u0323":"\u1e89","X\u0307":"\u1e8a","x\u0307":"\u1e8b","X\u0308":"\u1e8c","x\u0308":"\u1e8d","Y\u0307":"\u1e8e","y\u0307":"\u1e8f",
"Z\u0302":"\u1e90","z\u0302":"\u1e91","Z\u0323":"\u1e92","z\u0323":"\u1e93","Z\u0331":"\u1e94","z\u0331":"\u1e95","h\u0331":"\u1e96","t\u0308":"\u1e97","w\u030a":"\u1e98","y\u030a":"\u1e99","\u017f\u0307":"\u1e9b","A\u0323":"\u1ea0","a\u0323":"\u1ea1","A\u0309":"\u1ea2","a\u0309":"\u1ea3","\u00c2\u0301":"\u1ea4","\u00e2\u0301":"\u1ea5","\u00c2\u0300":"\u1ea6","\u00e2\u0300":"\u1ea7","\u00c2\u0309":"\u1ea8","\u00e2\u0309":"\u1ea9","\u00c2\u0303":"\u1eaa","\u00e2\u0303":"\u1eab","\u1ea0\u0302":"\u1eac",
"\u1ea1\u0302":"\u1ead","\u0102\u0301":"\u1eae","\u0103\u0301":"\u1eaf","\u0102\u0300":"\u1eb0","\u0103\u0300":"\u1eb1","\u0102\u0309":"\u1eb2","\u0103\u0309":"\u1eb3","\u0102\u0303":"\u1eb4","\u0103\u0303":"\u1eb5","\u1ea0\u0306":"\u1eb6","\u1ea1\u0306":"\u1eb7","E\u0323":"\u1eb8","e\u0323":"\u1eb9","E\u0309":"\u1eba","e\u0309":"\u1ebb","E\u0303":"\u1ebc","e\u0303":"\u1ebd","\u00ca\u0301":"\u1ebe","\u00ea\u0301":"\u1ebf","\u00ca\u0300":"\u1ec0","\u00ea\u0300":"\u1ec1","\u00ca\u0309":"\u1ec2","\u00ea\u0309":"\u1ec3",
"\u00ca\u0303":"\u1ec4","\u00ea\u0303":"\u1ec5","\u1eb8\u0302":"\u1ec6","\u1eb9\u0302":"\u1ec7","I\u0309":"\u1ec8","i\u0309":"\u1ec9","I\u0323":"\u1eca","i\u0323":"\u1ecb","O\u0323":"\u1ecc","o\u0323":"\u1ecd","O\u0309":"\u1ece","o\u0309":"\u1ecf","\u00d4\u0301":"\u1ed0","\u00f4\u0301":"\u1ed1","\u00d4\u0300":"\u1ed2","\u00f4\u0300":"\u1ed3","\u00d4\u0309":"\u1ed4","\u00f4\u0309":"\u1ed5","\u00d4\u0303":"\u1ed6","\u00f4\u0303":"\u1ed7","\u1ecc\u0302":"\u1ed8","\u1ecd\u0302":"\u1ed9","\u01a0\u0301":"\u1eda",
"\u01a1\u0301":"\u1edb","\u01a0\u0300":"\u1edc","\u01a1\u0300":"\u1edd","\u01a0\u0309":"\u1ede","\u01a1\u0309":"\u1edf","\u01a0\u0303":"\u1ee0","\u01a1\u0303":"\u1ee1","\u01a0\u0323":"\u1ee2","\u01a1\u0323":"\u1ee3","U\u0323":"\u1ee4","u\u0323":"\u1ee5","U\u0309":"\u1ee6","u\u0309":"\u1ee7","\u01af\u0301":"\u1ee8","\u01b0\u0301":"\u1ee9","\u01af\u0300":"\u1eea","\u01b0\u0300":"\u1eeb","\u01af\u0309":"\u1eec","\u01b0\u0309":"\u1eed","\u01af\u0303":"\u1eee","\u01b0\u0303":"\u1eef","\u01af\u0323":"\u1ef0",
"\u01b0\u0323":"\u1ef1","Y\u0300":"\u1ef2","y\u0300":"\u1ef3","Y\u0323":"\u1ef4","y\u0323":"\u1ef5","Y\u0309":"\u1ef6","y\u0309":"\u1ef7","Y\u0303":"\u1ef8","y\u0303":"\u1ef9","\u03b1\u0313":"\u1f00","\u03b1\u0314":"\u1f01","\u1f00\u0300":"\u1f02","\u1f01\u0300":"\u1f03","\u1f00\u0301":"\u1f04","\u1f01\u0301":"\u1f05","\u1f00\u0342":"\u1f06","\u1f01\u0342":"\u1f07","\u0391\u0313":"\u1f08","\u0391\u0314":"\u1f09","\u1f08\u0300":"\u1f0a","\u1f09\u0300":"\u1f0b","\u1f08\u0301":"\u1f0c","\u1f09\u0301":"\u1f0d",
"\u1f08\u0342":"\u1f0e","\u1f09\u0342":"\u1f0f","\u03b5\u0313":"\u1f10","\u03b5\u0314":"\u1f11","\u1f10\u0300":"\u1f12","\u1f11\u0300":"\u1f13","\u1f10\u0301":"\u1f14","\u1f11\u0301":"\u1f15","\u0395\u0313":"\u1f18","\u0395\u0314":"\u1f19","\u1f18\u0300":"\u1f1a","\u1f19\u0300":"\u1f1b","\u1f18\u0301":"\u1f1c","\u1f19\u0301":"\u1f1d","\u03b7\u0313":"\u1f20","\u03b7\u0314":"\u1f21","\u1f20\u0300":"\u1f22","\u1f21\u0300":"\u1f23","\u1f20\u0301":"\u1f24","\u1f21\u0301":"\u1f25","\u1f20\u0342":"\u1f26",
"\u1f21\u0342":"\u1f27","\u0397\u0313":"\u1f28","\u0397\u0314":"\u1f29","\u1f28\u0300":"\u1f2a","\u1f29\u0300":"\u1f2b","\u1f28\u0301":"\u1f2c","\u1f29\u0301":"\u1f2d","\u1f28\u0342":"\u1f2e","\u1f29\u0342":"\u1f2f","\u03b9\u0313":"\u1f30","\u03b9\u0314":"\u1f31","\u1f30\u0300":"\u1f32","\u1f31\u0300":"\u1f33","\u1f30\u0301":"\u1f34","\u1f31\u0301":"\u1f35","\u1f30\u0342":"\u1f36","\u1f31\u0342":"\u1f37","\u0399\u0313":"\u1f38","\u0399\u0314":"\u1f39","\u1f38\u0300":"\u1f3a","\u1f39\u0300":"\u1f3b",
"\u1f38\u0301":"\u1f3c","\u1f39\u0301":"\u1f3d","\u1f38\u0342":"\u1f3e","\u1f39\u0342":"\u1f3f","\u03bf\u0313":"\u1f40","\u03bf\u0314":"\u1f41","\u1f40\u0300":"\u1f42","\u1f41\u0300":"\u1f43","\u1f40\u0301":"\u1f44","\u1f41\u0301":"\u1f45","\u039f\u0313":"\u1f48","\u039f\u0314":"\u1f49","\u1f48\u0300":"\u1f4a","\u1f49\u0300":"\u1f4b","\u1f48\u0301":"\u1f4c","\u1f49\u0301":"\u1f4d","\u03c5\u0313":"\u1f50","\u03c5\u0314":"\u1f51","\u1f50\u0300":"\u1f52","\u1f51\u0300":"\u1f53","\u1f50\u0301":"\u1f54",
"\u1f51\u0301":"\u1f55","\u1f50\u0342":"\u1f56","\u1f51\u0342":"\u1f57","\u03a5\u0314":"\u1f59","\u1f59\u0300":"\u1f5b","\u1f59\u0301":"\u1f5d","\u1f59\u0342":"\u1f5f","\u03c9\u0313":"\u1f60","\u03c9\u0314":"\u1f61","\u1f60\u0300":"\u1f62","\u1f61\u0300":"\u1f63","\u1f60\u0301":"\u1f64","\u1f61\u0301":"\u1f65","\u1f60\u0342":"\u1f66","\u1f61\u0342":"\u1f67","\u03a9\u0313":"\u1f68","\u03a9\u0314":"\u1f69","\u1f68\u0300":"\u1f6a","\u1f69\u0300":"\u1f6b","\u1f68\u0301":"\u1f6c","\u1f69\u0301":"\u1f6d",
"\u1f68\u0342":"\u1f6e","\u1f69\u0342":"\u1f6f","\u03b1\u0300":"\u1f70","\u03b5\u0300":"\u1f72","\u03b7\u0300":"\u1f74","\u03b9\u0300":"\u1f76","\u03bf\u0300":"\u1f78","\u03c5\u0300":"\u1f7a","\u03c9\u0300":"\u1f7c","\u1f00\u0345":"\u1f80","\u1f01\u0345":"\u1f81","\u1f02\u0345":"\u1f82","\u1f03\u0345":"\u1f83","\u1f04\u0345":"\u1f84","\u1f05\u0345":"\u1f85","\u1f06\u0345":"\u1f86","\u1f07\u0345":"\u1f87","\u1f08\u0345":"\u1f88","\u1f09\u0345":"\u1f89","\u1f0a\u0345":"\u1f8a","\u1f0b\u0345":"\u1f8b",
"\u1f0c\u0345":"\u1f8c","\u1f0d\u0345":"\u1f8d","\u1f0e\u0345":"\u1f8e","\u1f0f\u0345":"\u1f8f","\u1f20\u0345":"\u1f90","\u1f21\u0345":"\u1f91","\u1f22\u0345":"\u1f92","\u1f23\u0345":"\u1f93","\u1f24\u0345":"\u1f94","\u1f25\u0345":"\u1f95","\u1f26\u0345":"\u1f96","\u1f27\u0345":"\u1f97","\u1f28\u0345":"\u1f98","\u1f29\u0345":"\u1f99","\u1f2a\u0345":"\u1f9a","\u1f2b\u0345":"\u1f9b","\u1f2c\u0345":"\u1f9c","\u1f2d\u0345":"\u1f9d","\u1f2e\u0345":"\u1f9e","\u1f2f\u0345":"\u1f9f","\u1f60\u0345":"\u1fa0",
"\u1f61\u0345":"\u1fa1","\u1f62\u0345":"\u1fa2","\u1f63\u0345":"\u1fa3","\u1f64\u0345":"\u1fa4","\u1f65\u0345":"\u1fa5","\u1f66\u0345":"\u1fa6","\u1f67\u0345":"\u1fa7","\u1f68\u0345":"\u1fa8","\u1f69\u0345":"\u1fa9","\u1f6a\u0345":"\u1faa","\u1f6b\u0345":"\u1fab","\u1f6c\u0345":"\u1fac","\u1f6d\u0345":"\u1fad","\u1f6e\u0345":"\u1fae","\u1f6f\u0345":"\u1faf","\u03b1\u0306":"\u1fb0","\u03b1\u0304":"\u1fb1","\u1f70\u0345":"\u1fb2","\u03b1\u0345":"\u1fb3","\u03ac\u0345":"\u1fb4","\u03b1\u0342":"\u1fb6",
"\u1fb6\u0345":"\u1fb7","\u0391\u0306":"\u1fb8","\u0391\u0304":"\u1fb9","\u0391\u0300":"\u1fba","\u0391\u0345":"\u1fbc","\u00a8\u0342":"\u1fc1","\u1f74\u0345":"\u1fc2","\u03b7\u0345":"\u1fc3","\u03ae\u0345":"\u1fc4","\u03b7\u0342":"\u1fc6","\u1fc6\u0345":"\u1fc7","\u0395\u0300":"\u1fc8","\u0397\u0300":"\u1fca","\u0397\u0345":"\u1fcc","\u1fbf\u0300":"\u1fcd","\u1fbf\u0301":"\u1fce","\u1fbf\u0342":"\u1fcf","\u03b9\u0306":"\u1fd0","\u03b9\u0304":"\u1fd1","\u03ca\u0300":"\u1fd2","\u03b9\u0342":"\u1fd6",
"\u03ca\u0342":"\u1fd7","\u0399\u0306":"\u1fd8","\u0399\u0304":"\u1fd9","\u0399\u0300":"\u1fda","\u1ffe\u0300":"\u1fdd","\u1ffe\u0301":"\u1fde","\u1ffe\u0342":"\u1fdf","\u03c5\u0306":"\u1fe0","\u03c5\u0304":"\u1fe1","\u03cb\u0300":"\u1fe2","\u03c1\u0313":"\u1fe4","\u03c1\u0314":"\u1fe5","\u03c5\u0342":"\u1fe6","\u03cb\u0342":"\u1fe7","\u03a5\u0306":"\u1fe8","\u03a5\u0304":"\u1fe9","\u03a5\u0300":"\u1fea","\u03a1\u0314":"\u1fec","\u00a8\u0300":"\u1fed","\u1f7c\u0345":"\u1ff2","\u03c9\u0345":"\u1ff3",
"\u03ce\u0345":"\u1ff4","\u03c9\u0342":"\u1ff6","\u1ff6\u0345":"\u1ff7","\u039f\u0300":"\u1ff8","\u03a9\u0300":"\u1ffa","\u03a9\u0345":"\u1ffc","\u2190\u0338":"\u219a","\u2192\u0338":"\u219b","\u2194\u0338":"\u21ae","\u21d0\u0338":"\u21cd","\u21d4\u0338":"\u21ce","\u21d2\u0338":"\u21cf","\u2203\u0338":"\u2204","\u2208\u0338":"\u2209","\u220b\u0338":"\u220c","\u2223\u0338":"\u2224","\u2225\u0338":"\u2226","\u223c\u0338":"\u2241","\u2243\u0338":"\u2244","\u2245\u0338":"\u2247","\u2248\u0338":"\u2249",
"=\u0338":"\u2260","\u2261\u0338":"\u2262","\u224d\u0338":"\u226d","<\u0338":"\u226e",">\u0338":"\u226f","\u2264\u0338":"\u2270","\u2265\u0338":"\u2271","\u2272\u0338":"\u2274","\u2273\u0338":"\u2275","\u2276\u0338":"\u2278","\u2277\u0338":"\u2279","\u227a\u0338":"\u2280","\u227b\u0338":"\u2281","\u2282\u0338":"\u2284","\u2283\u0338":"\u2285","\u2286\u0338":"\u2288","\u2287\u0338":"\u2289","\u22a2\u0338":"\u22ac","\u22a8\u0338":"\u22ad","\u22a9\u0338":"\u22ae","\u22ab\u0338":"\u22af","\u227c\u0338":"\u22e0",
"\u227d\u0338":"\u22e1","\u2291\u0338":"\u22e2","\u2292\u0338":"\u22e3","\u22b2\u0338":"\u22ea","\u22b3\u0338":"\u22eb","\u22b4\u0338":"\u22ec","\u22b5\u0338":"\u22ed","\u304b\u3099":"\u304c","\u304d\u3099":"\u304e","\u304f\u3099":"\u3050","\u3051\u3099":"\u3052","\u3053\u3099":"\u3054","\u3055\u3099":"\u3056","\u3057\u3099":"\u3058","\u3059\u3099":"\u305a","\u305b\u3099":"\u305c","\u305d\u3099":"\u305e","\u305f\u3099":"\u3060","\u3061\u3099":"\u3062","\u3064\u3099":"\u3065","\u3066\u3099":"\u3067",
"\u3068\u3099":"\u3069","\u306f\u3099":"\u3070","\u306f\u309a":"\u3071","\u3072\u3099":"\u3073","\u3072\u309a":"\u3074","\u3075\u3099":"\u3076","\u3075\u309a":"\u3077","\u3078\u3099":"\u3079","\u3078\u309a":"\u307a","\u307b\u3099":"\u307c","\u307b\u309a":"\u307d","\u3046\u3099":"\u3094","\u309d\u3099":"\u309e","\u30ab\u3099":"\u30ac","\u30ad\u3099":"\u30ae","\u30af\u3099":"\u30b0","\u30b1\u3099":"\u30b2","\u30b3\u3099":"\u30b4","\u30b5\u3099":"\u30b6","\u30b7\u3099":"\u30b8","\u30b9\u3099":"\u30ba",
"\u30bb\u3099":"\u30bc","\u30bd\u3099":"\u30be","\u30bf\u3099":"\u30c0","\u30c1\u3099":"\u30c2","\u30c4\u3099":"\u30c5","\u30c6\u3099":"\u30c7","\u30c8\u3099":"\u30c9","\u30cf\u3099":"\u30d0","\u30cf\u309a":"\u30d1","\u30d2\u3099":"\u30d3","\u30d2\u309a":"\u30d4","\u30d5\u3099":"\u30d6","\u30d5\u309a":"\u30d7","\u30d8\u3099":"\u30d9","\u30d8\u309a":"\u30da","\u30db\u3099":"\u30dc","\u30db\u309a":"\u30dd","\u30a6\u3099":"\u30f4","\u30ef\u3099":"\u30f7","\u30f0\u3099":"\u30f8","\u30f1\u3099":"\u30f9",
"\u30f2\u3099":"\u30fa","\u30fd\u3099":"\u30fe","\ud804\udc99\ud804\udcba":"\ud804\udc9a","\ud804\udc9b\ud804\udcba":"\ud804\udc9c","\ud804\udca5\ud804\udcba":"\ud804\udcab","\ud804\udd31\ud804\udd27":"\ud804\udd2e","\ud804\udd32\ud804\udd27":"\ud804\udd2f"}};
ilib.data.ctype_m={Mn:[[768,879],[1155,1159],[1425,1469],[1471],[1473,1474],[1476,1477],[1479],[1552,1562],[1611,1631],[1648],[1750,1756],[1759,1764],[1767,1768],[1770,1773],[1809],[1840,1866],[1958,1968],[2027,2035],[2070,2073],[2075,2083],[2085,2087],[2089,2093],[2137,2139],[2276,2302],[2304,2306],[2362],[2364],[2369,2376],[2381],[2385,2391],[2402,2403],[2433],[2492],[2497,2500],[2509],[2530,2531],[2561,2562],[2620],[2625,2626],[2631,2632],[2635,2637],[2641],[2672,2673],[2677],[2689,2690],[2748],
[2753,2757],[2759,2760],[2765],[2786,2787],[2817],[2876],[2879],[2881,2884],[2893],[2902],[2914,2915],[2946],[3008],[3021],[3134,3136],[3142,3144],[3146,3149],[3157,3158],[3170,3171],[3260],[3263],[3270],[3276,3277],[3298,3299],[3393,3396],[3405],[3426,3427],[3530],[3538,3540],[3542],[3633],[3636,3642],[3655,3662],[3761],[3764,3769],[3771,3772],[3784,3789],[3864,3865],[3893],[3895],[3897],[3953,3966],[3968,3972],[3974,3975],[3981,3991],[3993,4028],[4038],[4141,4144],[4146,4151],[4153,4154],[4157,
4158],[4184,4185],[4190,4192],[4209,4212],[4226],[4229,4230],[4237],[4253],[4957,4959],[5906,5908],[5938,5940],[5970,5971],[6002,6003],[6068,6069],[6071,6077],[6086],[6089,6099],[6109],[6155,6157],[6313],[6432,6434],[6439,6440],[6450],[6457,6459],[6679,6680],[6742],[6744,6750],[6752],[6754],[6757,6764],[6771,6780],[6783],[6912,6915],[6964],[6966,6970],[6972],[6978],[7019,7027],[7040,7041],[7074,7077],[7080,7081],[7083],[7142],[7144,7145],[7149],[7151,7153],[7212,7219],[7222,7223],[7376,7378],[7380,
7392],[7394,7400],[7405],[7412],[7616,7654],[7676,7679],[8400,8412],[8417],[8421,8432],[11503,11505],[11647],[11744,11775],[12330,12333],[12441,12442],[42607],[42612,42621],[42655],[42736,42737],[43010],[43014],[43019],[43045,43046],[43204],[43232,43249],[43302,43309],[43335,43345],[43392,43394],[43443],[43446,43449],[43452],[43561,43566],[43569,43570],[43573,43574],[43587],[43596],[43696],[43698,43700],[43703,43704],[43710,43711],[43713],[43756,43757],[43766],[44005],[44008],[44013],[64286],[65024,
65039],[65056,65062],[66045],[68097,68099],[68101,68102],[68108,68111],[68152,68154],[68159],[69633],[69688,69702],[69760,69761],[69811,69814],[69817,69818],[69888,69890],[69927,69931],[69933,69940],[70016,70017],[70070,70078],[71339],[71341],[71344,71349],[71351],[94095,94098],[119143,119145],[119163,119170],[119173,119179],[119210,119213],[119362,119364],[917760,917999]],Me:[[1160,1161],[8413,8416],[8418,8420],[42608,42610]],Mc:[[2307],[2363],[2366,2368],[2377,2380],[2382,2383],[2434,2435],[2494,
2496],[2503,2504],[2507,2508],[2519],[2563],[2622,2624],[2691],[2750,2752],[2761],[2763,2764],[2818,2819],[2878],[2880],[2887,2888],[2891,2892],[2903],[3006,3007],[3009,3010],[3014,3016],[3018,3020],[3031],[3073,3075],[3137,3140],[3202,3203],[3262],[3264,3268],[3271,3272],[3274,3275],[3285,3286],[3330,3331],[3390,3392],[3398,3400],[3402,3404],[3415],[3458,3459],[3535,3537],[3544,3551],[3570,3571],[3902,3903],[3967],[4139,4140],[4145],[4152],[4155,4156],[4182,4183],[4194,4196],[4199,4205],[4227,4228],
[4231,4236],[4239],[4250,4252],[6070],[6078,6085],[6087,6088],[6435,6438],[6441,6443],[6448,6449],[6451,6456],[6576,6592],[6600,6601],[6681,6683],[6741],[6743],[6753],[6755,6756],[6765,6770],[6916],[6965],[6971],[6973,6977],[6979,6980],[7042],[7073],[7078,7079],[7082],[7084,7085],[7143],[7146,7148],[7150],[7154,7155],[7204,7211],[7220,7221],[7393],[7410,7411],[12334,12335],[43043,43044],[43047],[43136,43137],[43188,43203],[43346,43347],[43395],[43444,43445],[43450,43451],[43453,43456],[43567,43568],
[43571,43572],[43597],[43643],[43755],[43758,43759],[43765],[44003,44004],[44006,44007],[44009,44010],[44012],[69632],[69634],[69762],[69808,69810],[69815,69816],[69932],[70018],[70067,70069],[70079,70080],[71340],[71342,71343],[71350],[94033,94078],[119141,119142],[119149,119154]]};
ilib.GlyphString=function $ilib$GlyphString$($str$$,$options$$){ilib.String.call(this,$str$$);var $sync$$=true,$loadParams$$={};if($options$$){if(typeof $options$$.sync==="boolean")$sync$$=$options$$.sync;if($options$$.loadParams)$loadParams$$=$options$$.loadParams}ilib.CType._load("ctype_m",$sync$$,$loadParams$$,function(){if(typeof ilib.data.norm==="undefined"||typeof ilib.data.norm.ccc==="undefined")ilib.loadData({object:ilib.GlyphString,locale:"-",name:"norm.json",nonlocale:true,sync:$sync$$,
loadParams:$loadParams$$,callback:ilib.bind(this,function($norm$$){ilib.data.norm=$norm$$;if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad(this)})});else if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad(this)})};ilib.GlyphString.prototype=new ilib.String;ilib.GlyphString.parent=ilib.String;ilib.GlyphString.prototype.constructor=ilib.GlyphString;ilib.GlyphString._isJamoL=function $ilib$GlyphString$_isJamoL$($n$$){return $n$$>=4352&&$n$$<=4370};
ilib.GlyphString._isJamoV=function $ilib$GlyphString$_isJamoV$($n$$){return $n$$>=4449&&$n$$<=4469};ilib.GlyphString._isJamoT=function $ilib$GlyphString$_isJamoT$($n$$){return $n$$>=4520&&$n$$<=4546};ilib.GlyphString._isHangul=function $ilib$GlyphString$_isHangul$($n$$){return $n$$>=44032&&$n$$<=55203};ilib.GlyphString._composeJamoLV=function $ilib$GlyphString$_composeJamoLV$($lead$$,$trail$$){return ilib.String.fromCodePoint(44032+(($lead$$-4352)*21+($trail$$-4449))*28)};
ilib.GlyphString._composeJamoLVT=function $ilib$GlyphString$_composeJamoLVT$($lead$$,$trail$$){return ilib.String.fromCodePoint($lead$$+($trail$$-4519))};
ilib.GlyphString._compose=function $ilib$GlyphString$_compose$($lead$$,$trail$$){var $first$$=$lead$$.charCodeAt(0),$last$$=$trail$$.charCodeAt(0);return ilib.GlyphString._isHangul($first$$)&&ilib.GlyphString._isJamoT($last$$)?ilib.GlyphString._composeJamoLVT($first$$,$last$$):ilib.GlyphString._isJamoL($first$$)&&ilib.GlyphString._isJamoV($last$$)?ilib.GlyphString._composeJamoLV($first$$,$last$$):ilib.data.norm.nfc&&ilib.data.norm.nfc[$lead$$+$trail$$]};
ilib.GlyphString.prototype.charIterator=function $ilib$GlyphString$$charIterator$(){var $it$$=ilib.String.prototype.charIterator.call(this);return new function _chiterator(){this.index=0;this.spacingCombining=false;this.hasNext=function $this$hasNext$(){return!!this.nextChar||$it$$.hasNext()};this.next=function $this$next$(){var $ch$$=this.nextChar||$it$$.next(),$prevCcc$$=ilib.data.norm.ccc[$ch$$],$nextCcc$$,$composed$$=$ch$$;this.nextChar=void 0;this.spacingCombining=false;if(ilib.data.norm.ccc&&
(typeof ilib.data.norm.ccc[$ch$$]==="undefined"||ilib.data.norm.ccc[$ch$$]===0))for(var $notdone$$=true;$it$$.hasNext()&&$notdone$$;){this.nextChar=$it$$.next();$nextCcc$$=ilib.data.norm.ccc[this.nextChar];var $codePoint_isMc$$=ilib.String.toCodePoint(this.nextChar,0),$isMn_testChar$$=ilib.CType._inRange($codePoint_isMc$$,"Mn",ilib.data.ctype_m),$codePoint_isMc$$=ilib.CType._inRange($codePoint_isMc$$,"Mc",ilib.data.ctype_m);if($isMn_testChar$$||$codePoint_isMc$$||typeof $nextCcc$$!=="undefined"&&
$nextCcc$$!==0){if($codePoint_isMc$$)this.spacingCombining=true;$ch$$=$ch$$+this.nextChar;this.nextChar=void 0}else{$isMn_testChar$$=ilib.GlyphString._compose($composed$$,this.nextChar);if($prevCcc$$===0&&typeof $isMn_testChar$$!=="undefined"){$composed$$=$isMn_testChar$$;$ch$$=$ch$$+this.nextChar;this.nextChar=void 0}else $notdone$$=false}$prevCcc$$=$nextCcc$$}return $ch$$};this.wasSpacingCombining=function $this$wasSpacingCombining$(){return this.spacingCombining}}(this)};
ilib.GlyphString.prototype.truncate=function $ilib$GlyphString$$truncate$($c$$13_length$$){for(var $it$$=this.charIterator(),$tr$$="",$i$$=0;$i$$<$c$$13_length$$-1&&$it$$.hasNext();$i$$++)$tr$$=$tr$$+$it$$.next();if($i$$<$c$$13_length$$&&$it$$.hasNext()){$c$$13_length$$=$it$$.next();$it$$.wasSpacingCombining()||($tr$$=$tr$$+$c$$13_length$$)}return $tr$$};ilib.GlyphString.prototype.ellipsize=function $ilib$GlyphString$$ellipsize$($length$$){return this.truncate($length$$>0?$length$$-1:0)+"\u2026"};
ilib.NormString=function $ilib$NormString$($str$$){ilib.GlyphString.call(this,$str$$)};ilib.NormString.prototype=new ilib.GlyphString;ilib.NormString.parent=ilib.GlyphString;ilib.NormString.prototype.constructor=ilib.NormString;
ilib.NormString.init=function $ilib$NormString$init$($files$$4_options$$){if(ilib._load&&(typeof ilib._load==="function"||ilib._load instanceof ilib.Loader)){var $form$$="nfkc",$script$$="all",$sync$$=true,$onLoad$$=void 0,$loadParams$$=void 0;if($files$$4_options$$){$form$$=$files$$4_options$$.form||"nfkc";$script$$=$files$$4_options$$.script||"all";$sync$$=typeof $files$$4_options$$.sync!=="undefined"?$files$$4_options$$.sync:true;$onLoad$$=typeof $files$$4_options$$.onLoad==="function"?$files$$4_options$$.onLoad:
void 0;if($files$$4_options$$.loadParams)$loadParams$$=$files$$4_options$$.loadParams}var $files$$4_options$$=["norm.json"],$forms$$={nfd:["nfd"],nfc:["nfd"],nfkd:["nfkd","nfd"],nfkc:["nfkd","nfd"]}[$form$$],$f$$;for($f$$ in $forms$$)$files$$4_options$$.push($forms$$[$f$$]+"/"+$script$$+".json");ilib._callLoadData($files$$4_options$$,$sync$$,$loadParams$$,function($arr$$){ilib.data.norm=$arr$$[0];for(var $i$$=1;$i$$<$arr$$.length;$i$$++)typeof $arr$$[$i$$]!=="undefined"&&(ilib.data.norm[$forms$$[$i$$-
1]]=$arr$$[$i$$]);$onLoad$$&&$onLoad$$($arr$$)})}};ilib.NormString._decomposeHangul=function $ilib$NormString$_decomposeHangul$($cp_result$$){var $sindex_t$$=$cp_result$$-44032,$cp_result$$=String.fromCharCode(4352+$sindex_t$$/588)+String.fromCharCode(4449+$sindex_t$$%588/28),$sindex_t$$=$sindex_t$$%28;$sindex_t$$!==0&&($cp_result$$=$cp_result$$+String.fromCharCode(4519+$sindex_t$$));return $cp_result$$};
ilib.NormString._expand=function $ilib$NormString$_expand$($ch$$25_i$$,$canon$$,$compat$$){var $expansion$$="",$n$$24_result$$=$ch$$25_i$$.charCodeAt(0);if(ilib.GlyphString._isHangul($n$$24_result$$))$expansion$$=ilib.NormString._decomposeHangul($n$$24_result$$);else{$n$$24_result$$=$canon$$[$ch$$25_i$$];!$n$$24_result$$&&$compat$$&&($n$$24_result$$=$compat$$[$ch$$25_i$$]);if($n$$24_result$$&&$n$$24_result$$!==$ch$$25_i$$)for($ch$$25_i$$=0;$ch$$25_i$$<$n$$24_result$$.length;$ch$$25_i$$++)$expansion$$=
$expansion$$+ilib.NormString._expand($n$$24_result$$[$ch$$25_i$$],$canon$$,$compat$$);else $expansion$$=$ch$$25_i$$}return $expansion$$};
ilib.NormString.prototype.normalize=function $ilib$NormString$$normalize$($cpArray_decomp_form$$){function $compareByCCC$$($left$$,$right$$){return ilib.data.norm.ccc[$left$$]-ilib.data.norm.ccc[$right$$]}function $ccc$$($c$$){return ilib.data.norm.ccc[$c$$]||0}var $i$$54_it$$;if(typeof $cpArray_decomp_form$$!=="string"||this.str.length===0)return new ilib.String(this.str);var $nfc_notdone$$=false;$i$$54_it$$=false;switch($cpArray_decomp_form$$){case "nfc":$nfc_notdone$$=true;break;case "nfkd":$i$$54_it$$=
true;break;case "nfkc":$nfc_notdone$$=$i$$54_it$$=true}$cpArray_decomp_form$$="";if($i$$54_it$$){var $ch$$26_end$$;for($i$$54_it$$=ilib.String.prototype.charIterator.call(this);$i$$54_it$$.hasNext();){$ch$$26_end$$=$i$$54_it$$.next();$cpArray_decomp_form$$=$cpArray_decomp_form$$+ilib.NormString._expand($ch$$26_end$$,ilib.data.norm.nfd,ilib.data.norm.nfkd)}}else for($i$$54_it$$=ilib.String.prototype.charIterator.call(this);$i$$54_it$$.hasNext();){$ch$$26_end$$=$i$$54_it$$.next();$cpArray_decomp_form$$=
$cpArray_decomp_form$$+ilib.NormString._expand($ch$$26_end$$,ilib.data.norm.nfd)}$i$$54_it$$=(new ilib.String($cpArray_decomp_form$$)).charIterator();for($cpArray_decomp_form$$=[];$i$$54_it$$.hasNext();)$cpArray_decomp_form$$.push($i$$54_it$$.next());for($i$$54_it$$=0;$i$$54_it$$<$cpArray_decomp_form$$.length;){if(typeof ilib.data.norm.ccc[$cpArray_decomp_form$$[$i$$54_it$$]]!=="undefined"&&$ccc$$($cpArray_decomp_form$$[$i$$54_it$$])!==0){for($ch$$26_end$$=$i$$54_it$$+1;$ch$$26_end$$<$cpArray_decomp_form$$.length&&
typeof ilib.data.norm.ccc[$cpArray_decomp_form$$[$ch$$26_end$$]]!=="undefined"&&$ccc$$($cpArray_decomp_form$$[$ch$$26_end$$])!==0;)$ch$$26_end$$++;$ch$$26_end$$-$i$$54_it$$>1&&($cpArray_decomp_form$$=$cpArray_decomp_form$$.slice(0,$i$$54_it$$).concat($cpArray_decomp_form$$.slice($i$$54_it$$,$ch$$26_end$$).sort($compareByCCC$$),$cpArray_decomp_form$$.slice($ch$$26_end$$)))}$i$$54_it$$++}if($nfc_notdone$$)for($i$$54_it$$=0;$i$$54_it$$<$cpArray_decomp_form$$.length;){if(typeof ilib.data.norm.ccc[$cpArray_decomp_form$$[$i$$54_it$$]]===
"undefined"||ilib.data.norm.ccc[$cpArray_decomp_form$$[$i$$54_it$$]]===0){$ch$$26_end$$=$i$$54_it$$+1;for($nfc_notdone$$=true;$ch$$26_end$$<$cpArray_decomp_form$$.length&&$nfc_notdone$$;)if(typeof ilib.data.norm.ccc[$cpArray_decomp_form$$[$ch$$26_end$$]]!=="undefined"&&ilib.data.norm.ccc[$cpArray_decomp_form$$[$ch$$26_end$$]]!==0){if($ccc$$($cpArray_decomp_form$$[$ch$$26_end$$-1])<$ccc$$($cpArray_decomp_form$$[$ch$$26_end$$])){var $testChar$$=ilib.GlyphString._compose($cpArray_decomp_form$$[$i$$54_it$$],
$cpArray_decomp_form$$[$ch$$26_end$$]);if(typeof $testChar$$!=="undefined"){$cpArray_decomp_form$$[$i$$54_it$$]=$testChar$$;$cpArray_decomp_form$$.splice($ch$$26_end$$,1);$ch$$26_end$$=$i$$54_it$$}}$ch$$26_end$$++}else{$testChar$$=ilib.GlyphString._compose($cpArray_decomp_form$$[$i$$54_it$$],$cpArray_decomp_form$$[$ch$$26_end$$]);if($ccc$$($cpArray_decomp_form$$[$ch$$26_end$$-1])===0&&typeof $testChar$$!=="undefined"){$cpArray_decomp_form$$[$i$$54_it$$]=$testChar$$;$cpArray_decomp_form$$.splice($ch$$26_end$$,
1);$ch$$26_end$$=$i$$54_it$$+1}else $nfc_notdone$$=false}}$i$$54_it$$++}return new ilib.String($cpArray_decomp_form$$.length>0?$cpArray_decomp_form$$.join(""):"")};
ilib.NormString.prototype.charIterator=function $ilib$NormString$$charIterator$(){var $it$$=ilib.String.prototype.charIterator.call(this);return new function _chiterator(){this.index=0;this.hasNext=function $this$hasNext$(){return!!this.nextChar||$it$$.hasNext()};this.next=function $this$next$(){var $ch$$=this.nextChar||$it$$.next(),$prevCcc$$=ilib.data.norm.ccc[$ch$$]||0,$nextCcc$$,$composed$$=$ch$$;this.nextChar=void 0;if(ilib.data.norm.ccc&&(typeof ilib.data.norm.ccc[$ch$$]==="undefined"||(ilib.data.norm.ccc[$ch$$]||
0)===0))for(var $notdone$$=true;$it$$.hasNext()&&$notdone$$;){this.nextChar=$it$$.next();$nextCcc$$=ilib.data.norm.ccc[this.nextChar]||0;if(typeof ilib.data.norm.ccc[this.nextChar]!=="undefined"&&$nextCcc$$!==0){$ch$$=$ch$$+this.nextChar;this.nextChar=void 0}else{var $testChar$$=ilib.GlyphString._compose($composed$$,this.nextChar);if($prevCcc$$===0&&typeof $testChar$$!=="undefined"){$composed$$=$testChar$$;$ch$$=$ch$$+this.nextChar;this.nextChar=void 0}else $notdone$$=false}$prevCcc$$=$nextCcc$$}return $ch$$}}(this)};
ilib.data.collation={standard:{scripts:["Latn"],bits:[5,3,1,1],map:{A:[0],B:[1],C:[2],D:[3],E:[4],F:[5],G:[6],H:[7],I:[8],J:[9],K:[10],L:[11],M:[12],N:[13],O:[14],P:[15],Q:[16],R:[17],S:[18],T:[19],U:[20],V:[21],W:[22],X:[23],Y:[24],Z:[25],a:[0,0,1],b:[1,0,1],c:[2,0,1],d:[3,0,1],e:[4,0,1],f:[5,0,1],g:[6,0,1],h:[7,0,1],i:[8,0,1],j:[9,0,1],k:[10,0,1],l:[11,0,1],m:[12,0,1],n:[13,0,1],o:[14,0,1],p:[15,0,1],q:[16,0,1],r:[17,0,1],s:[18,0,1],t:[19,0,1],u:[20,0,1],v:[21,0,1],w:[22,0,1],x:[23,0,1],y:[24,0,
1],z:[25,0,1],"\u00e0":[0,1,1],"\u00e1":[0,2,1],"\u00e2":[0,3,1],"\u00e3":[0,4,1],"\u00e4":[0,5,1],"\u00e5":[0,6,1],"\u00e6":[[0,7,1],[4,0,1]],"\u00e7":[2,1,1],"\u00e8":[4,1,1],"\u00e9":[4,2,1],"\u00ea":[4,3,1],"\u00eb":[4,4,1],"\u00f0":[3,1,1],"\u00fe":[3,2,1],"\u00ec":[8,1,1],"\u00ed":[8,2,1],"\u00ee":[8,3,1],"\u00ef":[8,4,1],"\u00f1":[13,1,1],"\u00f2":[14,1,1],"\u00f3":[14,2,1],"\u00f4":[14,3,1],"\u00f5":[14,4,1],"\u00f6":[14,5,1],"\u00f8":[14,6,1],"\u00f9":[20,1,1],"\u00fa":[20,2,1],"\u00fb":[20,
3,1],"\u00fc":[20,4,1],"\u00fd":[24,1,1],"\u00ff":[24,2,1],"\u00c0":[0,1,0],"\u00c1":[0,2,0],"\u00c2":[0,3,0],"\u00c3":[0,4,0],"\u00c4":[0,5,0],"\u00c5":[0,6,0],"\u00c6":[[0,7,0],[4]],"\u00c7":[2,1,0],"\u00d0":[3,1,0],"\u00de":[3,2,0],"\u00c8":[4,1,0],"\u00c9":[4,2,0],"\u00ca":[4,3,0],"\u00cb":[4,4,0],"\u00cc":[8,1,0],"\u00cd":[8,2,0],"\u00ce":[8,3,0],"\u00cf":[8,4,0],"\u00d1":[13,1,0],"\u00d2":[14,1,0],"\u00d3":[14,2,0],"\u00d4":[14,3,0],"\u00d5":[14,4,0],"\u00d6":[14,5,0],"\u00d8":[14,6,0],"\u00d9":[20,
1,0],"\u00da":[20,2,0],"\u00db":[20,3,0],"\u00dc":[20,4,0],"\u00dd":[24,1,0],"\u00df":[[18,1,1],[25,0,1]],"a\u0300":[0,1,1,1],"a\u0301":[0,2,1,1],"a\u0302":[0,3,1,1],"a\u0303":[0,4,1,1],"a\u0308":[0,5,1,1],"a\u030a":[0,6,1,1],"c\u0327":[2,1,1,1],"e\u0300":[4,1,1,1],"e\u0301":[4,2,1,1],"e\u0302":[4,3,1,1],"e\u0308":[4,4,1,1],"i\u0300":[8,1,1,1],"i\u0301":[8,2,1,1],"i\u0302":[8,3,1,1],"i\u0308":[8,4,1,1],"n\u0303":[13,1,1,1],"o\u0300":[14,1,1,1],"o\u0301":[14,2,1,1],"o\u0302":[14,3,1,1],"o\u0303":[14,
4,1,1],"o\u0308":[14,5,1,1],"u\u0300":[20,1,1,1],"u\u0301":[20,2,1,1],"u\u0302":[20,3,1,1],"u\u0308":[20,4,1,1],"y\u0301":[24,1,1,1],"y\u0308":[24,2,1,1],"A\u0300":[0,1,0,1],"A\u0301":[0,2,0,1],"A\u0302":[0,3,0,1],"A\u0303":[0,4,0,1],"A\u0308":[0,5,0,1],"A\u030a":[0,6,0,1],"C\u0327":[2,1,0,1],"E\u0300":[4,1,0,1],"E\u0301":[4,2,0,1],"E\u0302":[4,3,0,1],"E\u0308":[4,4,0,1],"I\u0300":[8,1,0,1],"I\u0301":[8,2,0,1],"I\u0302":[8,3,0,1],"I\u0308":[8,4,0,1],"N\u0303":[13,1,0,1],"O\u0300":[14,1,0,1],"O\u0301":[14,
2,0,1],"O\u0302":[14,3,0,1],"O\u0303":[14,4,0,1],"O\u0308":[14,5,0,1],"U\u0300":[20,1,0,1],"U\u0301":[20,2,0,1],"U\u0302":[20,3,0,1],"U\u0308":[20,4,0,1],"Y\u0301":[24,1,0,1]}}};
ilib.data.collation_de={phonebook:{scripts:["Latn"],bits:[5,3,1,1],map:{A:[0],B:[1],C:[2],D:[3],E:[4],F:[5],G:[6],H:[7],I:[8],J:[9],K:[10],L:[11],M:[12],N:[13],O:[14],P:[15],Q:[16],R:[17],S:[18],T:[19],U:[20],V:[21],W:[22],X:[23],Y:[24],Z:[25],a:[0,0,1],b:[1,0,1],c:[2,0,1],d:[3,0,1],e:[4,0,1],f:[5,0,1],g:[6,0,1],h:[7,0,1],i:[8,0,1],j:[9,0,1],k:[10,0,1],l:[11,0,1],m:[12,0,1],n:[13,0,1],o:[14,0,1],p:[15,0,1],q:[16,0,1],r:[17,0,1],s:[18,0,1],t:[19,0,1],u:[20,0,1],v:[21,0,1],w:[22,0,1],x:[23,0,1],y:[24,
0,1],z:[25,0,1],"\u00e0":[0,1,1],"\u00e1":[0,2,1],"\u00e2":[0,3,1],"\u00e3":[0,4,1],"\u00e4":[[0,0,1],[4,0,1]],"\u00e5":[0,6,1],"\u00e6":[[0,7,1],[4,0,1]],"\u00e7":[2,1,1],"\u00e8":[4,1,1],"\u00e9":[4,2,1],"\u00ea":[4,3,1],"\u00eb":[4,4,1],"\u00f0":[3,1,1],"\u00fe":[3,2,1],"\u00ec":[8,1,1],"\u00ed":[8,2,1],"\u00ee":[8,3,1],"\u00ef":[8,4,1],"\u00f1":[13,1,1],"\u00f2":[14,1,1],"\u00f3":[14,2,1],"\u00f4":[14,3,1],"\u00f5":[14,4,1],"\u00f6":[[14,0,1],[4,0,1]],"\u00f8":[14,6,1],"\u00f9":[20,1,1],"\u00fa":[20,
2,1],"\u00fb":[20,3,1],"\u00fc":[[20,0,1],[4,0,1]],"\u00fd":[24,1,1],"\u00ff":[24,2,1],"\u00c0":[0,1,0],"\u00c1":[0,2,0],"\u00c2":[0,3,0],"\u00c3":[0,4,0],"\u00c4":[[0],[4]],"\u00c5":[0,6,0],"\u00c6":[[0,7,0],[4]],"\u00c7":[2,1,0],"\u00d0":[3,1,0],"\u00de":[3,2,0],"\u00c8":[4,1,0],"\u00c9":[4,2,0],"\u00ca":[4,3,0],"\u00cb":[4,4,0],"\u00cc":[8,1,0],"\u00cd":[8,2,0],"\u00ce":[8,3,0],"\u00cf":[8,4,0],"\u00d1":[13,1,0],"\u00d2":[14,1,0],"\u00d3":[14,2,0],"\u00d4":[14,3,0],"\u00d5":[14,4,0],"\u00d6":[[14],
[4]],"\u00d8":[14,6,0],"\u00d9":[20,1,0],"\u00da":[20,2,0],"\u00db":[20,3,0],"\u00dc":[[20],[4]],"\u00dd":[24,1,0],"\u00df":[[18,1,1],[25,0,1]],"a\u0300":[0,1,1,1],"a\u0301":[0,2,1,1],"a\u0302":[0,3,1,1],"a\u0303":[0,4,1,1],"a\u0308":[[0,0,1],[4,0,1]],"a\u030a":[0,6,1,1],"c\u0327":[2,1,1,1],"e\u0300":[4,1,1,1],"e\u0301":[4,2,1,1],"e\u0302":[4,3,1,1],"e\u0308":[4,4,1,1],"i\u0300":[8,1,1,1],"i\u0301":[8,2,1,1],"i\u0302":[8,3,1,1],"i\u0308":[8,4,1,1],"n\u0303":[13,1,1,1],"o\u0300":[14,1,1,1],"o\u0301":[14,
2,1,1],"o\u0302":[14,3,1,1],"o\u0303":[14,4,1,1],"o\u0308":[[14,0,1],[4,0,1]],"u\u0300":[20,1,1,1],"u\u0301":[20,2,1,1],"u\u0302":[20,3,1,1],"u\u0308":[[20,0,1],[4,0,1]],"y\u0301":[24,1,1,1],"y\u0308":[24,2,1,1],"A\u0300":[0,1,0,1],"A\u0301":[0,2,0,1],"A\u0302":[0,3,0,1],"A\u0303":[0,4,0,1],"A\u0308":[[0],[4]],"A\u030a":[0,6,0,1],"C\u0327":[2,1,0,1],"E\u0300":[4,1,0,1],"E\u0301":[4,2,0,1],"E\u0302":[4,3,0,1],"E\u0308":[4,4,0,1],"I\u0300":[8,1,0,1],"I\u0301":[8,2,0,1],"I\u0302":[8,3,0,1],"I\u0308":[8,
4,0,1],"N\u0303":[13,1,0,1],"O\u0300":[14,1,0,1],"O\u0301":[14,2,0,1],"O\u0302":[14,3,0,1],"O\u0303":[14,4,0,1],"O\u0308":[[14],[4]],"U\u0300":[20,1,0,1],"U\u0301":[20,2,0,1],"U\u0302":[20,3,0,1],"U\u0308":[[20],[4]],"Y\u0301":[24,1,0,1]}}};
ilib.data.collation_es={traditional:{scripts:["Latn"],bits:[5,3,1,1],map:{A:[0],B:[1],C:[2],Ch:[3,0,0,1],CH:[3],D:[4],E:[5],F:[6],G:[7],H:[8],I:[9],J:[10],K:[11],L:[12],Ll:[13,0,0,1],LL:[13],M:[14],N:[15],"\u00d1":[16],O:[17],P:[18],Q:[19],R:[20],S:[21],T:[22],U:[23],V:[24],W:[25],X:[26],Y:[27],Z:[28],a:[0,0,1],b:[1,0,1],c:[2,0,1],ch:[3,0,1],d:[4,0,1],e:[5,0,1],f:[6,0,1],g:[7,0,1],h:[8,0,1],i:[9,0,1],j:[10,0,1],k:[11,0,1],l:[12,0,1],ll:[13,0,1],m:[14,0,1],n:[15,0,1],"\u00f1":[16,0,1],o:[17,0,1],p:[18,
0,1],q:[19,0,1],r:[20,0,1],s:[21,0,1],t:[22,0,1],u:[23,0,1],v:[24,0,1],w:[25,0,1],x:[26,0,1],y:[27,0,1],z:[28,0,1],"\u00e0":[0,1,1],"\u00e1":[0,2,1],"\u00e2":[0,3,1],"\u00e3":[0,4,1],"\u00e4":[0,5,1],"\u00e5":[0,6,1],"\u00e6":[[0,7,1],[5,0,1]],"\u00e7":[2,1,1],"\u00e8":[5,1,1],"\u00e9":[5,2,1],"\u00ea":[5,3,1],"\u00eb":[5,4,1],"\u00f0":[4,1,1],"\u00fe":[4,2,1],"\u00ec":[9,1,1],"\u00ed":[9,2,1],"\u00ee":[9,3,1],"\u00ef":[9,4,1],"\u00f2":[17,1,1],"\u00f3":[17,2,1],"\u00f4":[17,3,1],"\u00f5":[17,4,1],
"\u00f6":[17,5,1],"\u00f8":[17,6,1],"\u00f9":[23,1,1],"\u00fa":[23,2,1],"\u00fb":[23,3,1],"\u00fc":[23,4,1],"\u00fd":[27,1,1],"\u00ff":[27,2,1],"\u00c0":[0,1,0],"\u00c1":[0,2,0],"\u00c2":[0,3,0],"\u00c3":[0,4,0],"\u00c4":[0,5,0],"\u00c5":[0,6,0],"\u00c6":[[0,7,0],[5]],"\u00c7":[2,1,0],"\u00d0":[4,1,0],"\u00de":[4,2,0],"\u00c8":[5,1,0],"\u00c9":[5,2,0],"\u00ca":[5,3,0],"\u00cb":[5,4,0],"\u00cc":[9,1,0],"\u00cd":[9,2,0],"\u00ce":[9,3,0],"\u00cf":[9,4,0],"\u00d2":[17,1,0],"\u00d3":[17,2,0],"\u00d4":[17,
3,0],"\u00d5":[17,4,0],"\u00d6":[17,5,0],"\u00d8":[17,6,0],"\u00d9":[23,1,0],"\u00da":[23,2,0],"\u00db":[23,3,0],"\u00dc":[23,4,0],"\u00dd":[27,1,0],"\u00df":[[21,1,1],[28,0,1]],"a\u0300":[0,1,1,1],"a\u0301":[0,2,1,1],"a\u0302":[0,3,1,1],"a\u0303":[0,4,1,1],"a\u0308":[0,5,1,1],"a\u030a":[0,6,1,1],"c\u0327":[2,1,1,1],"e\u0300":[5,1,1,1],"e\u0301":[5,2,1,1],"e\u0302":[5,3,1,1],"e\u0308":[5,4,1,1],"i\u0300":[9,1,1,1],"i\u0301":[9,2,1,1],"i\u0302":[9,3,1,1],"i\u0308":[9,4,1,1],"n\u0303":[16,1,1,1],"o\u0300":[17,
1,1,1],"o\u0301":[17,2,1,1],"o\u0302":[17,3,1,1],"o\u0303":[17,4,1,1],"o\u0308":[17,5,1,1],"u\u0300":[23,1,1,1],"u\u0301":[23,2,1,1],"u\u0302":[23,3,1,1],"u\u0308":[23,4,1,1],"y\u0301":[27,1,1,1],"y\u0308":[27,2,1,1],"A\u0300":[0,1,0,1],"A\u0301":[0,2,0,1],"A\u0302":[0,3,0,1],"A\u0303":[0,4,0,1],"A\u0308":[0,5,0,1],"A\u030a":[0,6,0,1],"C\u0327":[2,1,0,1],"E\u0300":[5,1,0,1],"E\u0301":[5,2,0,1],"E\u0302":[5,3,0,1],"E\u0308":[5,4,0,1],"I\u0300":[9,1,0,1],"I\u0301":[9,2,0,1],"I\u0302":[9,3,0,1],"I\u0308":[9,
4,0,1],"N\u0303":[16,1,0,1],"O\u0300":[17,1,0,1],"O\u0301":[17,2,0,1],"O\u0302":[17,3,0,1],"O\u0303":[17,4,0,1],"O\u0308":[17,5,0,1],"U\u0300":[23,1,0,1],"U\u0301":[23,2,0,1],"U\u0302":[23,3,0,1],"U\u0308":[23,4,0,1],"Y\u0301":[27,1,0,1]}}};ilib.CodePointSource=function $ilib$CodePointSource$($str$$,$ignorePunctuation$$){this.chars=[];this.it=(typeof $str$$==="string"?new ilib.NormString($str$$):$str$$).charIterator();this.ignorePunctuation=typeof $ignorePunctuation$$==="boolean"&&$ignorePunctuation$$};
ilib.CodePointSource.prototype.peek=function $ilib$CodePointSource$$peek$($num$$){if(!($num$$<1)){if(this.chars.length<$num$$&&this.it.hasNext())for(var $i$$=0;this.chars.length<4&&this.it.hasNext();$i$$++){var $c$$=this.it.next();($c$$&&!this.ignorePunctuation||!ilib.CType.isPunct($c$$))&&this.chars.push($c$$)}return this.chars.length<$num$$?void 0:this.chars.slice(0,$num$$).join("")}};
ilib.CodePointSource.prototype.consume=function $ilib$CodePointSource$$consume$($num$$){if($num$$>0){this.peek($num$$);this.chars=$num$$<this.chars.length?this.chars.slice($num$$):[]}};ilib.ElementIterator=function $ilib$ElementIterator$($source$$,$map$$,$keysize$$){this.elements=[];this.source=$source$$;this.map=$map$$;this.keysize=$keysize$$};
ilib.ElementIterator.prototype._fillBuffer=function $ilib$ElementIterator$$_fillBuffer$(){for(var $str$$=void 0,$i$$=4;$i$$>0;$i$$--)if(($str$$=this.source.peek($i$$))&&this.map[$str$$]){this.elements=this.elements.concat(this.map[$str$$]);this.source.consume($i$$);return}if($str$$){this.elements.push($str$$.charCodeAt(0)<<this.keysize);this.source.consume(1)}};ilib.ElementIterator.prototype.hasNext=function $ilib$ElementIterator$$hasNext$(){this.elements.length<1&&this._fillBuffer();return!!this.elements.length};
ilib.ElementIterator.prototype.next=function $ilib$ElementIterator$$next$(){this.elements.length<1&&this._fillBuffer();var $ret$$=this.elements[0];this.elements=this.elements.slice(1);return $ret$$};
ilib.Collator=function $ilib$Collator$($options$$){var $sync$$=true,$loadParams$$=void 0,$useNative$$=true;this.locale=new ilib.Locale(ilib.getLocale());this.caseFirst="upper";this.sensitivity="variant";this.level=4;this.usage="sort";this.numeric=this.reverse=false;this.style="standard";this.ignorePunctuation=false;if($options$$){if($options$$.locale)this.locale=typeof $options$$.locale==="string"?new ilib.Locale($options$$.locale):$options$$.locale;if($options$$.sensitivity)switch($options$$.sensitivity){case "primary":case "base":this.sensitivity=
"base";this.level=1;break;case "secondary":case "case":this.sensitivity="case";this.level=2;break;case "tertiary":case "accent":this.sensitivity="accent";this.level=3;break;case "quaternary":case "variant":this.sensitivity="variant";this.level=4}if(typeof $options$$.upperFirst!=="undefined")this.caseFirst=$options$$.upperFirst?"upper":"lower";if(typeof $options$$.ignorePunctuation!=="undefined")this.ignorePunctuation=$options$$.ignorePunctuation;typeof $options$$.sync!=="undefined"&&($sync$$=$options$$.sync==
true);$loadParams$$=$options$$.loadParams;if(typeof $options$$.useNative!=="undefined")$useNative$$=$options$$.useNative;if($options$$.usage==="sort"||$options$$.usage==="search")this.usage=$options$$.usage;if(typeof $options$$.reverse==="boolean")this.reverse=$options$$.reverse;if(typeof $options$$.numeric==="boolean")this.numeric=$options$$.numeric;if(typeof $options$$.style==="string")this.style=$options$$.style}if(this.usage==="sort")this.level=4;if($useNative$$&&typeof Intl!=="undefined"&&Intl){this.collator=
new Intl.Collator(this.locale.getSpec(),this);if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad(this)}else{if(!ilib.Collator.cache)ilib.Collator.cache={};ilib.loadData({object:ilib.Collator,locale:this.locale,name:"collation.json",replace:true,sync:$sync$$,loadParams:$loadParams$$,callback:ilib.bind(this,function($collation$$){if(!$collation$$){var $collation$$=ilib.data.collation,$spec$$=this.locale.getSpec().replace(/-/g,"_");ilib.Collator.cache[$spec$$]=$collation$$}this._init($collation$$);
new ilib.LocaleInfo(this.locale,{sync:$sync$$,loadParams:$loadParams$$,onLoad:ilib.bind(this,function($li$$){this.li=$li$$;if(this.ignorePunctuation)ilib.CType.isPunct._init($sync$$,$loadParams$$,ilib.bind(this,function(){if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad(this)}));else if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad(this)})})})})}};
ilib.Collator.prototype={_pack:function $ilib$Collator$$_pack$($arr$$){var $value$$=0;if($arr$$){typeof $arr$$==="number"&&($arr$$=[$arr$$]);for(var $i$$=0;$i$$<this.level;$i$$++){$i$$>0&&($value$$=$value$$<<this.collation.bits[$i$$]);$value$$=$i$$===2&&this.caseFirst==="lower"?$value$$|1-(typeof $arr$$[$i$$]!=="undefined"?$arr$$[$i$$]:0):$value$$|$arr$$[$i$$]}}return $value$$},_packRule:function $ilib$Collator$$_packRule$($rule$$){if($rule$$[0]instanceof Array){for(var $ret$$=[],$i$$=0;$i$$<$rule$$.length;$i$$++)$ret$$.push(this._pack($rule$$[$i$$]));
return $ret$$}return[this._pack($rule$$)]},_init:function $ilib$Collator$$_init$($i$$59_remainder$$){this.collation=$i$$59_remainder$$[this.style];this.map={};for($i$$59_remainder$$=this.keysize=0;$i$$59_remainder$$<this.level;$i$$59_remainder$$++)this.keysize=this.keysize+this.collation.bits[$i$$59_remainder$$];$i$$59_remainder$$=ilib.mod(this.keysize,4);this.keysize=this.keysize+($i$$59_remainder$$>0?4-$i$$59_remainder$$:0);for(var $r$$ in this.collation.map)$r$$&&(this.map[$r$$]=this._packRule(this.collation.map[$r$$]))},
_basicCompare:function $ilib$Collator$$_basicCompare$($left$$,$right$$){if(this.numeric){var $l$$=new ilib.Number($left$$,{locale:this.locale}),$r$$=new ilib.Number($right$$,{locale:this.locale});return isNaN($l$$.valueOf())?isNaN($r$$.valueOf())?0:1:isNaN($r$$.valueOf())?-1:$l$$.valueOf()-$r$$.valueOf()}$l$$=$left$$ instanceof ilib.NormString?$left$$:new ilib.NormString($left$$);$r$$=$right$$ instanceof ilib.NormString?$right$$:new ilib.NormString($right$$);$l$$=new ilib.ElementIterator(new ilib.CodePointSource($l$$,
this.ignorePunctuation),this.map,this.keysize);for($r$$=new ilib.ElementIterator(new ilib.CodePointSource($r$$,this.ignorePunctuation),this.map,this.keysize);$l$$.hasNext()&&$r$$.hasNext();){var $diff$$=$l$$.next()-$r$$.next();if($diff$$)return $diff$$}return!$l$$.hasNext()&&!$r$$.hasNext()?0:$l$$.hasNext()?1:-1},compare:function $ilib$Collator$$compare$($left$$,$right$$){if(this.collator)return this.collator.compare($left$$,$right$$);var $ret$$=this._basicCompare($left$$,$right$$);return this.reverse?
-$ret$$:$ret$$},getComparator:function $ilib$Collator$$getComparator$(){return this.collator?this.collator.compare:ilib.bind(this,this.compare)},sortKey:function $ilib$Collator$$sortKey$($ret$$22_s$$4_str$$36_v$$){function $pad$$($str$$,$limit$$){return"0000000000000000".substring(0,$limit$$-$str$$.length)+$str$$}if(!$ret$$22_s$$4_str$$36_v$$)return"";if(this.collator)return $ret$$22_s$$4_str$$36_v$$;if(this.numeric){$ret$$22_s$$4_str$$36_v$$=new ilib.Number($ret$$22_s$$4_str$$36_v$$,{locale:this.locale});
$ret$$22_s$$4_str$$36_v$$=isNaN($ret$$22_s$$4_str$$36_v$$.valueOf())?"":$ret$$22_s$$4_str$$36_v$$.valueOf().toString(16);return $pad$$($ret$$22_s$$4_str$$36_v$$,16)}for(var $lelements$$1_n$$=typeof $ret$$22_s$$4_str$$36_v$$==="string"?new ilib.NormString($ret$$22_s$$4_str$$36_v$$):$ret$$22_s$$4_str$$36_v$$,$ret$$22_s$$4_str$$36_v$$="",$lelements$$1_n$$=new ilib.ElementIterator(new ilib.CodePointSource($lelements$$1_n$$,this.ignorePunctuation),this.map,this.keysize),$element$$;$lelements$$1_n$$.hasNext();){$element$$=
$lelements$$1_n$$.next();this.reverse&&($element$$=(1<<this.keysize)-$element$$);$ret$$22_s$$4_str$$36_v$$=$ret$$22_s$$4_str$$36_v$$+$pad$$($element$$.toString(16),this.keysize/4)}return $ret$$22_s$$4_str$$36_v$$}};ilib.Collator.getAvailableStyles=function $ilib$Collator$getAvailableStyles$(){return["standard"]};ilib.Collator.getAvailableScripts=function $ilib$Collator$getAvailableScripts$(){return["Latn"]};
ilib.data.nfd_all={"\u00c0":"A\u0300","\u00c1":"A\u0301","\u00c2":"A\u0302","\u00c3":"A\u0303","\u00c4":"A\u0308","\u00c5":"A\u030a","\u00c7":"C\u0327","\u00c8":"E\u0300","\u00c9":"E\u0301","\u00ca":"E\u0302","\u00cb":"E\u0308","\u00cc":"I\u0300","\u00cd":"I\u0301","\u00ce":"I\u0302","\u00cf":"I\u0308","\u00d1":"N\u0303","\u00d2":"O\u0300","\u00d3":"O\u0301","\u00d4":"O\u0302","\u00d5":"O\u0303","\u00d6":"O\u0308","\u00d9":"U\u0300","\u00da":"U\u0301","\u00db":"U\u0302","\u00dc":"U\u0308","\u00dd":"Y\u0301",
"\u00e0":"a\u0300","\u00e1":"a\u0301","\u00e2":"a\u0302","\u00e3":"a\u0303","\u00e4":"a\u0308","\u00e5":"a\u030a","\u00e7":"c\u0327","\u00e8":"e\u0300","\u00e9":"e\u0301","\u00ea":"e\u0302","\u00eb":"e\u0308","\u00ec":"i\u0300","\u00ed":"i\u0301","\u00ee":"i\u0302","\u00ef":"i\u0308","\u00f1":"n\u0303","\u00f2":"o\u0300","\u00f3":"o\u0301","\u00f4":"o\u0302","\u00f5":"o\u0303","\u00f6":"o\u0308","\u00f9":"u\u0300","\u00fa":"u\u0301","\u00fb":"u\u0302","\u00fc":"u\u0308","\u00fd":"y\u0301","\u00ff":"y\u0308",
"\u0100":"A\u0304","\u0101":"a\u0304","\u0102":"A\u0306","\u0103":"a\u0306","\u0104":"A\u0328","\u0105":"a\u0328","\u0106":"C\u0301","\u0107":"c\u0301","\u0108":"C\u0302","\u0109":"c\u0302","\u010a":"C\u0307","\u010b":"c\u0307","\u010c":"C\u030c","\u010d":"c\u030c","\u010e":"D\u030c","\u010f":"d\u030c","\u0112":"E\u0304","\u0113":"e\u0304","\u0114":"E\u0306","\u0115":"e\u0306","\u0116":"E\u0307","\u0117":"e\u0307","\u0118":"E\u0328","\u0119":"e\u0328","\u011a":"E\u030c","\u011b":"e\u030c","\u011c":"G\u0302",
"\u011d":"g\u0302","\u011e":"G\u0306","\u011f":"g\u0306","\u0120":"G\u0307","\u0121":"g\u0307","\u0122":"G\u0327","\u0123":"g\u0327","\u0124":"H\u0302","\u0125":"h\u0302","\u0128":"I\u0303","\u0129":"i\u0303","\u012a":"I\u0304","\u012b":"i\u0304","\u012c":"I\u0306","\u012d":"i\u0306","\u012e":"I\u0328","\u012f":"i\u0328","\u0130":"I\u0307","\u0134":"J\u0302","\u0135":"j\u0302","\u0136":"K\u0327","\u0137":"k\u0327","\u0139":"L\u0301","\u013a":"l\u0301","\u013b":"L\u0327","\u013c":"l\u0327","\u013d":"L\u030c",
"\u013e":"l\u030c","\u0143":"N\u0301","\u0144":"n\u0301","\u0145":"N\u0327","\u0146":"n\u0327","\u0147":"N\u030c","\u0148":"n\u030c","\u014c":"O\u0304","\u014d":"o\u0304","\u014e":"O\u0306","\u014f":"o\u0306","\u0150":"O\u030b","\u0151":"o\u030b","\u0154":"R\u0301","\u0155":"r\u0301","\u0156":"R\u0327","\u0157":"r\u0327","\u0158":"R\u030c","\u0159":"r\u030c","\u015a":"S\u0301","\u015b":"s\u0301","\u015c":"S\u0302","\u015d":"s\u0302","\u015e":"S\u0327","\u015f":"s\u0327","\u0160":"S\u030c","\u0161":"s\u030c",
"\u0162":"T\u0327","\u0163":"t\u0327","\u0164":"T\u030c","\u0165":"t\u030c","\u0168":"U\u0303","\u0169":"u\u0303","\u016a":"U\u0304","\u016b":"u\u0304","\u016c":"U\u0306","\u016d":"u\u0306","\u016e":"U\u030a","\u016f":"u\u030a","\u0170":"U\u030b","\u0171":"u\u030b","\u0172":"U\u0328","\u0173":"u\u0328","\u0174":"W\u0302","\u0175":"w\u0302","\u0176":"Y\u0302","\u0177":"y\u0302","\u0178":"Y\u0308","\u0179":"Z\u0301","\u017a":"z\u0301","\u017b":"Z\u0307","\u017c":"z\u0307","\u017d":"Z\u030c","\u017e":"z\u030c",
"\u01a0":"O\u031b","\u01a1":"o\u031b","\u01af":"U\u031b","\u01b0":"u\u031b","\u01cd":"A\u030c","\u01ce":"a\u030c","\u01cf":"I\u030c","\u01d0":"i\u030c","\u01d1":"O\u030c","\u01d2":"o\u030c","\u01d3":"U\u030c","\u01d4":"u\u030c","\u01d5":"U\u0308\u0304","\u01d6":"u\u0308\u0304","\u01d7":"U\u0308\u0301","\u01d8":"u\u0308\u0301","\u01d9":"U\u0308\u030c","\u01da":"u\u0308\u030c","\u01db":"U\u0308\u0300","\u01dc":"u\u0308\u0300","\u01de":"A\u0308\u0304","\u01df":"a\u0308\u0304","\u01e0":"A\u0307\u0304",
"\u01e1":"a\u0307\u0304","\u01e2":"\u00c6\u0304","\u01e3":"\u00e6\u0304","\u01e6":"G\u030c","\u01e7":"g\u030c","\u01e8":"K\u030c","\u01e9":"k\u030c","\u01ea":"O\u0328","\u01eb":"o\u0328","\u01ec":"O\u0328\u0304","\u01ed":"o\u0328\u0304","\u01ee":"\u01b7\u030c","\u01ef":"\u0292\u030c","\u01f0":"j\u030c","\u01f4":"G\u0301","\u01f5":"g\u0301","\u01f8":"N\u0300","\u01f9":"n\u0300","\u01fa":"A\u030a\u0301","\u01fb":"a\u030a\u0301","\u01fc":"\u00c6\u0301","\u01fd":"\u00e6\u0301","\u01fe":"\u00d8\u0301",
"\u01ff":"\u00f8\u0301","\u0200":"A\u030f","\u0201":"a\u030f","\u0202":"A\u0311","\u0203":"a\u0311","\u0204":"E\u030f","\u0205":"e\u030f","\u0206":"E\u0311","\u0207":"e\u0311","\u0208":"I\u030f","\u0209":"i\u030f","\u020a":"I\u0311","\u020b":"i\u0311","\u020c":"O\u030f","\u020d":"o\u030f","\u020e":"O\u0311","\u020f":"o\u0311","\u0210":"R\u030f","\u0211":"r\u030f","\u0212":"R\u0311","\u0213":"r\u0311","\u0214":"U\u030f","\u0215":"u\u030f","\u0216":"U\u0311","\u0217":"u\u0311","\u0218":"S\u0326","\u0219":"s\u0326",
"\u021a":"T\u0326","\u021b":"t\u0326","\u021e":"H\u030c","\u021f":"h\u030c","\u0226":"A\u0307","\u0227":"a\u0307","\u0228":"E\u0327","\u0229":"e\u0327","\u022a":"O\u0308\u0304","\u022b":"o\u0308\u0304","\u022c":"O\u0303\u0304","\u022d":"o\u0303\u0304","\u022e":"O\u0307","\u022f":"o\u0307","\u0230":"O\u0307\u0304","\u0231":"o\u0307\u0304","\u0232":"Y\u0304","\u0233":"y\u0304","\u0340":"\u0300","\u0341":"\u0301","\u0343":"\u0313","\u0344":"\u0308\u0301","\u0374":"\u02b9","\u037e":";","\u0385":"\u00a8\u0301",
"\u0386":"\u0391\u0301","\u0387":"\u00b7","\u0388":"\u0395\u0301","\u0389":"\u0397\u0301","\u038a":"\u0399\u0301","\u038c":"\u039f\u0301","\u038e":"\u03a5\u0301","\u038f":"\u03a9\u0301","\u0390":"\u03b9\u0308\u0301","\u03aa":"\u0399\u0308","\u03ab":"\u03a5\u0308","\u03ac":"\u03b1\u0301","\u03ad":"\u03b5\u0301","\u03ae":"\u03b7\u0301","\u03af":"\u03b9\u0301","\u03b0":"\u03c5\u0308\u0301","\u03ca":"\u03b9\u0308","\u03cb":"\u03c5\u0308","\u03cc":"\u03bf\u0301","\u03cd":"\u03c5\u0301","\u03ce":"\u03c9\u0301",
"\u03d3":"\u03d2\u0301","\u03d4":"\u03d2\u0308","\u0400":"\u0415\u0300","\u0401":"\u0415\u0308","\u0403":"\u0413\u0301","\u0407":"\u0406\u0308","\u040c":"\u041a\u0301","\u040d":"\u0418\u0300","\u040e":"\u0423\u0306","\u0419":"\u0418\u0306","\u0439":"\u0438\u0306","\u0450":"\u0435\u0300","\u0451":"\u0435\u0308","\u0453":"\u0433\u0301","\u0457":"\u0456\u0308","\u045c":"\u043a\u0301","\u045d":"\u0438\u0300","\u045e":"\u0443\u0306","\u0476":"\u0474\u030f","\u0477":"\u0475\u030f","\u04c1":"\u0416\u0306",
"\u04c2":"\u0436\u0306","\u04d0":"\u0410\u0306","\u04d1":"\u0430\u0306","\u04d2":"\u0410\u0308","\u04d3":"\u0430\u0308","\u04d6":"\u0415\u0306","\u04d7":"\u0435\u0306","\u04da":"\u04d8\u0308","\u04db":"\u04d9\u0308","\u04dc":"\u0416\u0308","\u04dd":"\u0436\u0308","\u04de":"\u0417\u0308","\u04df":"\u0437\u0308","\u04e2":"\u0418\u0304","\u04e3":"\u0438\u0304","\u04e4":"\u0418\u0308","\u04e5":"\u0438\u0308","\u04e6":"\u041e\u0308","\u04e7":"\u043e\u0308","\u04ea":"\u04e8\u0308","\u04eb":"\u04e9\u0308",
"\u04ec":"\u042d\u0308","\u04ed":"\u044d\u0308","\u04ee":"\u0423\u0304","\u04ef":"\u0443\u0304","\u04f0":"\u0423\u0308","\u04f1":"\u0443\u0308","\u04f2":"\u0423\u030b","\u04f3":"\u0443\u030b","\u04f4":"\u0427\u0308","\u04f5":"\u0447\u0308","\u04f8":"\u042b\u0308","\u04f9":"\u044b\u0308","\u0622":"\u0627\u0653","\u0623":"\u0627\u0654","\u0624":"\u0648\u0654","\u0625":"\u0627\u0655","\u0626":"\u064a\u0654","\u06c0":"\u06d5\u0654","\u06c2":"\u06c1\u0654","\u06d3":"\u06d2\u0654","\u0929":"\u0928\u093c",
"\u0931":"\u0930\u093c","\u0934":"\u0933\u093c","\u0958":"\u0915\u093c","\u0959":"\u0916\u093c","\u095a":"\u0917\u093c","\u095b":"\u091c\u093c","\u095c":"\u0921\u093c","\u095d":"\u0922\u093c","\u095e":"\u092b\u093c","\u095f":"\u092f\u093c","\u09cb":"\u09c7\u09be","\u09cc":"\u09c7\u09d7","\u09dc":"\u09a1\u09bc","\u09dd":"\u09a2\u09bc","\u09df":"\u09af\u09bc","\u0a33":"\u0a32\u0a3c","\u0a36":"\u0a38\u0a3c","\u0a59":"\u0a16\u0a3c","\u0a5a":"\u0a17\u0a3c","\u0a5b":"\u0a1c\u0a3c","\u0a5e":"\u0a2b\u0a3c",
"\u0b48":"\u0b47\u0b56","\u0b4b":"\u0b47\u0b3e","\u0b4c":"\u0b47\u0b57","\u0b5c":"\u0b21\u0b3c","\u0b5d":"\u0b22\u0b3c","\u0b94":"\u0b92\u0bd7","\u0bca":"\u0bc6\u0bbe","\u0bcb":"\u0bc7\u0bbe","\u0bcc":"\u0bc6\u0bd7","\u0c48":"\u0c46\u0c56","\u0cc0":"\u0cbf\u0cd5","\u0cc7":"\u0cc6\u0cd5","\u0cc8":"\u0cc6\u0cd6","\u0cca":"\u0cc6\u0cc2","\u0ccb":"\u0cc6\u0cc2\u0cd5","\u0d4a":"\u0d46\u0d3e","\u0d4b":"\u0d47\u0d3e","\u0d4c":"\u0d46\u0d57","\u0dda":"\u0dd9\u0dca","\u0ddc":"\u0dd9\u0dcf","\u0ddd":"\u0dd9\u0dcf\u0dca",
"\u0dde":"\u0dd9\u0ddf","\u0f43":"\u0f42\u0fb7","\u0f4d":"\u0f4c\u0fb7","\u0f52":"\u0f51\u0fb7","\u0f57":"\u0f56\u0fb7","\u0f5c":"\u0f5b\u0fb7","\u0f69":"\u0f40\u0fb5","\u0f73":"\u0f71\u0f72","\u0f75":"\u0f71\u0f74","\u0f76":"\u0fb2\u0f80","\u0f78":"\u0fb3\u0f80","\u0f81":"\u0f71\u0f80","\u0f93":"\u0f92\u0fb7","\u0f9d":"\u0f9c\u0fb7","\u0fa2":"\u0fa1\u0fb7","\u0fa7":"\u0fa6\u0fb7","\u0fac":"\u0fab\u0fb7","\u0fb9":"\u0f90\u0fb5","\u1026":"\u1025\u102e","\u1b06":"\u1b05\u1b35","\u1b08":"\u1b07\u1b35",
"\u1b0a":"\u1b09\u1b35","\u1b0c":"\u1b0b\u1b35","\u1b0e":"\u1b0d\u1b35","\u1b12":"\u1b11\u1b35","\u1b3b":"\u1b3a\u1b35","\u1b3d":"\u1b3c\u1b35","\u1b40":"\u1b3e\u1b35","\u1b41":"\u1b3f\u1b35","\u1b43":"\u1b42\u1b35","\u1e00":"A\u0325","\u1e01":"a\u0325","\u1e02":"B\u0307","\u1e03":"b\u0307","\u1e04":"B\u0323","\u1e05":"b\u0323","\u1e06":"B\u0331","\u1e07":"b\u0331","\u1e08":"C\u0327\u0301","\u1e09":"c\u0327\u0301","\u1e0a":"D\u0307","\u1e0b":"d\u0307","\u1e0c":"D\u0323","\u1e0d":"d\u0323","\u1e0e":"D\u0331",
"\u1e0f":"d\u0331","\u1e10":"D\u0327","\u1e11":"d\u0327","\u1e12":"D\u032d","\u1e13":"d\u032d","\u1e14":"E\u0304\u0300","\u1e15":"e\u0304\u0300","\u1e16":"E\u0304\u0301","\u1e17":"e\u0304\u0301","\u1e18":"E\u032d","\u1e19":"e\u032d","\u1e1a":"E\u0330","\u1e1b":"e\u0330","\u1e1c":"E\u0327\u0306","\u1e1d":"e\u0327\u0306","\u1e1e":"F\u0307","\u1e1f":"f\u0307","\u1e20":"G\u0304","\u1e21":"g\u0304","\u1e22":"H\u0307","\u1e23":"h\u0307","\u1e24":"H\u0323","\u1e25":"h\u0323","\u1e26":"H\u0308","\u1e27":"h\u0308",
"\u1e28":"H\u0327","\u1e29":"h\u0327","\u1e2a":"H\u032e","\u1e2b":"h\u032e","\u1e2c":"I\u0330","\u1e2d":"i\u0330","\u1e2e":"I\u0308\u0301","\u1e2f":"i\u0308\u0301","\u1e30":"K\u0301","\u1e31":"k\u0301","\u1e32":"K\u0323","\u1e33":"k\u0323","\u1e34":"K\u0331","\u1e35":"k\u0331","\u1e36":"L\u0323","\u1e37":"l\u0323","\u1e38":"L\u0323\u0304","\u1e39":"l\u0323\u0304","\u1e3a":"L\u0331","\u1e3b":"l\u0331","\u1e3c":"L\u032d","\u1e3d":"l\u032d","\u1e3e":"M\u0301","\u1e3f":"m\u0301","\u1e40":"M\u0307","\u1e41":"m\u0307",
"\u1e42":"M\u0323","\u1e43":"m\u0323","\u1e44":"N\u0307","\u1e45":"n\u0307","\u1e46":"N\u0323","\u1e47":"n\u0323","\u1e48":"N\u0331","\u1e49":"n\u0331","\u1e4a":"N\u032d","\u1e4b":"n\u032d","\u1e4c":"O\u0303\u0301","\u1e4d":"o\u0303\u0301","\u1e4e":"O\u0303\u0308","\u1e4f":"o\u0303\u0308","\u1e50":"O\u0304\u0300","\u1e51":"o\u0304\u0300","\u1e52":"O\u0304\u0301","\u1e53":"o\u0304\u0301","\u1e54":"P\u0301","\u1e55":"p\u0301","\u1e56":"P\u0307","\u1e57":"p\u0307","\u1e58":"R\u0307","\u1e59":"r\u0307",
"\u1e5a":"R\u0323","\u1e5b":"r\u0323","\u1e5c":"R\u0323\u0304","\u1e5d":"r\u0323\u0304","\u1e5e":"R\u0331","\u1e5f":"r\u0331","\u1e60":"S\u0307","\u1e61":"s\u0307","\u1e62":"S\u0323","\u1e63":"s\u0323","\u1e64":"S\u0301\u0307","\u1e65":"s\u0301\u0307","\u1e66":"S\u030c\u0307","\u1e67":"s\u030c\u0307","\u1e68":"S\u0323\u0307","\u1e69":"s\u0323\u0307","\u1e6a":"T\u0307","\u1e6b":"t\u0307","\u1e6c":"T\u0323","\u1e6d":"t\u0323","\u1e6e":"T\u0331","\u1e6f":"t\u0331","\u1e70":"T\u032d","\u1e71":"t\u032d",
"\u1e72":"U\u0324","\u1e73":"u\u0324","\u1e74":"U\u0330","\u1e75":"u\u0330","\u1e76":"U\u032d","\u1e77":"u\u032d","\u1e78":"U\u0303\u0301","\u1e79":"u\u0303\u0301","\u1e7a":"U\u0304\u0308","\u1e7b":"u\u0304\u0308","\u1e7c":"V\u0303","\u1e7d":"v\u0303","\u1e7e":"V\u0323","\u1e7f":"v\u0323","\u1e80":"W\u0300","\u1e81":"w\u0300","\u1e82":"W\u0301","\u1e83":"w\u0301","\u1e84":"W\u0308","\u1e85":"w\u0308","\u1e86":"W\u0307","\u1e87":"w\u0307","\u1e88":"W\u0323","\u1e89":"w\u0323","\u1e8a":"X\u0307","\u1e8b":"x\u0307",
"\u1e8c":"X\u0308","\u1e8d":"x\u0308","\u1e8e":"Y\u0307","\u1e8f":"y\u0307","\u1e90":"Z\u0302","\u1e91":"z\u0302","\u1e92":"Z\u0323","\u1e93":"z\u0323","\u1e94":"Z\u0331","\u1e95":"z\u0331","\u1e96":"h\u0331","\u1e97":"t\u0308","\u1e98":"w\u030a","\u1e99":"y\u030a","\u1e9b":"\u017f\u0307","\u1ea0":"A\u0323","\u1ea1":"a\u0323","\u1ea2":"A\u0309","\u1ea3":"a\u0309","\u1ea4":"A\u0302\u0301","\u1ea5":"a\u0302\u0301","\u1ea6":"A\u0302\u0300","\u1ea7":"a\u0302\u0300","\u1ea8":"A\u0302\u0309","\u1ea9":"a\u0302\u0309",
"\u1eaa":"A\u0302\u0303","\u1eab":"a\u0302\u0303","\u1eac":"A\u0323\u0302","\u1ead":"a\u0323\u0302","\u1eae":"A\u0306\u0301","\u1eaf":"a\u0306\u0301","\u1eb0":"A\u0306\u0300","\u1eb1":"a\u0306\u0300","\u1eb2":"A\u0306\u0309","\u1eb3":"a\u0306\u0309","\u1eb4":"A\u0306\u0303","\u1eb5":"a\u0306\u0303","\u1eb6":"A\u0323\u0306","\u1eb7":"a\u0323\u0306","\u1eb8":"E\u0323","\u1eb9":"e\u0323","\u1eba":"E\u0309","\u1ebb":"e\u0309","\u1ebc":"E\u0303","\u1ebd":"e\u0303","\u1ebe":"E\u0302\u0301","\u1ebf":"e\u0302\u0301",
"\u1ec0":"E\u0302\u0300","\u1ec1":"e\u0302\u0300","\u1ec2":"E\u0302\u0309","\u1ec3":"e\u0302\u0309","\u1ec4":"E\u0302\u0303","\u1ec5":"e\u0302\u0303","\u1ec6":"E\u0323\u0302","\u1ec7":"e\u0323\u0302","\u1ec8":"I\u0309","\u1ec9":"i\u0309","\u1eca":"I\u0323","\u1ecb":"i\u0323","\u1ecc":"O\u0323","\u1ecd":"o\u0323","\u1ece":"O\u0309","\u1ecf":"o\u0309","\u1ed0":"O\u0302\u0301","\u1ed1":"o\u0302\u0301","\u1ed2":"O\u0302\u0300","\u1ed3":"o\u0302\u0300","\u1ed4":"O\u0302\u0309","\u1ed5":"o\u0302\u0309",
"\u1ed6":"O\u0302\u0303","\u1ed7":"o\u0302\u0303","\u1ed8":"O\u0323\u0302","\u1ed9":"o\u0323\u0302","\u1eda":"O\u031b\u0301","\u1edb":"o\u031b\u0301","\u1edc":"O\u031b\u0300","\u1edd":"o\u031b\u0300","\u1ede":"O\u031b\u0309","\u1edf":"o\u031b\u0309","\u1ee0":"O\u031b\u0303","\u1ee1":"o\u031b\u0303","\u1ee2":"O\u031b\u0323","\u1ee3":"o\u031b\u0323","\u1ee4":"U\u0323","\u1ee5":"u\u0323","\u1ee6":"U\u0309","\u1ee7":"u\u0309","\u1ee8":"U\u031b\u0301","\u1ee9":"u\u031b\u0301","\u1eea":"U\u031b\u0300",
"\u1eeb":"u\u031b\u0300","\u1eec":"U\u031b\u0309","\u1eed":"u\u031b\u0309","\u1eee":"U\u031b\u0303","\u1eef":"u\u031b\u0303","\u1ef0":"U\u031b\u0323","\u1ef1":"u\u031b\u0323","\u1ef2":"Y\u0300","\u1ef3":"y\u0300","\u1ef4":"Y\u0323","\u1ef5":"y\u0323","\u1ef6":"Y\u0309","\u1ef7":"y\u0309","\u1ef8":"Y\u0303","\u1ef9":"y\u0303","\u1f00":"\u03b1\u0313","\u1f01":"\u03b1\u0314","\u1f02":"\u03b1\u0313\u0300","\u1f03":"\u03b1\u0314\u0300","\u1f04":"\u03b1\u0313\u0301","\u1f05":"\u03b1\u0314\u0301","\u1f06":"\u03b1\u0313\u0342",
"\u1f07":"\u03b1\u0314\u0342","\u1f08":"\u0391\u0313","\u1f09":"\u0391\u0314","\u1f0a":"\u0391\u0313\u0300","\u1f0b":"\u0391\u0314\u0300","\u1f0c":"\u0391\u0313\u0301","\u1f0d":"\u0391\u0314\u0301","\u1f0e":"\u0391\u0313\u0342","\u1f0f":"\u0391\u0314\u0342","\u1f10":"\u03b5\u0313","\u1f11":"\u03b5\u0314","\u1f12":"\u03b5\u0313\u0300","\u1f13":"\u03b5\u0314\u0300","\u1f14":"\u03b5\u0313\u0301","\u1f15":"\u03b5\u0314\u0301","\u1f18":"\u0395\u0313","\u1f19":"\u0395\u0314","\u1f1a":"\u0395\u0313\u0300",
"\u1f1b":"\u0395\u0314\u0300","\u1f1c":"\u0395\u0313\u0301","\u1f1d":"\u0395\u0314\u0301","\u1f20":"\u03b7\u0313","\u1f21":"\u03b7\u0314","\u1f22":"\u03b7\u0313\u0300","\u1f23":"\u03b7\u0314\u0300","\u1f24":"\u03b7\u0313\u0301","\u1f25":"\u03b7\u0314\u0301","\u1f26":"\u03b7\u0313\u0342","\u1f27":"\u03b7\u0314\u0342","\u1f28":"\u0397\u0313","\u1f29":"\u0397\u0314","\u1f2a":"\u0397\u0313\u0300","\u1f2b":"\u0397\u0314\u0300","\u1f2c":"\u0397\u0313\u0301","\u1f2d":"\u0397\u0314\u0301","\u1f2e":"\u0397\u0313\u0342",
"\u1f2f":"\u0397\u0314\u0342","\u1f30":"\u03b9\u0313","\u1f31":"\u03b9\u0314","\u1f32":"\u03b9\u0313\u0300","\u1f33":"\u03b9\u0314\u0300","\u1f34":"\u03b9\u0313\u0301","\u1f35":"\u03b9\u0314\u0301","\u1f36":"\u03b9\u0313\u0342","\u1f37":"\u03b9\u0314\u0342","\u1f38":"\u0399\u0313","\u1f39":"\u0399\u0314","\u1f3a":"\u0399\u0313\u0300","\u1f3b":"\u0399\u0314\u0300","\u1f3c":"\u0399\u0313\u0301","\u1f3d":"\u0399\u0314\u0301","\u1f3e":"\u0399\u0313\u0342","\u1f3f":"\u0399\u0314\u0342","\u1f40":"\u03bf\u0313",
"\u1f41":"\u03bf\u0314","\u1f42":"\u03bf\u0313\u0300","\u1f43":"\u03bf\u0314\u0300","\u1f44":"\u03bf\u0313\u0301","\u1f45":"\u03bf\u0314\u0301","\u1f48":"\u039f\u0313","\u1f49":"\u039f\u0314","\u1f4a":"\u039f\u0313\u0300","\u1f4b":"\u039f\u0314\u0300","\u1f4c":"\u039f\u0313\u0301","\u1f4d":"\u039f\u0314\u0301","\u1f50":"\u03c5\u0313","\u1f51":"\u03c5\u0314","\u1f52":"\u03c5\u0313\u0300","\u1f53":"\u03c5\u0314\u0300","\u1f54":"\u03c5\u0313\u0301","\u1f55":"\u03c5\u0314\u0301","\u1f56":"\u03c5\u0313\u0342",
"\u1f57":"\u03c5\u0314\u0342","\u1f59":"\u03a5\u0314","\u1f5b":"\u03a5\u0314\u0300","\u1f5d":"\u03a5\u0314\u0301","\u1f5f":"\u03a5\u0314\u0342","\u1f60":"\u03c9\u0313","\u1f61":"\u03c9\u0314","\u1f62":"\u03c9\u0313\u0300","\u1f63":"\u03c9\u0314\u0300","\u1f64":"\u03c9\u0313\u0301","\u1f65":"\u03c9\u0314\u0301","\u1f66":"\u03c9\u0313\u0342","\u1f67":"\u03c9\u0314\u0342","\u1f68":"\u03a9\u0313","\u1f69":"\u03a9\u0314","\u1f6a":"\u03a9\u0313\u0300","\u1f6b":"\u03a9\u0314\u0300","\u1f6c":"\u03a9\u0313\u0301",
"\u1f6d":"\u03a9\u0314\u0301","\u1f6e":"\u03a9\u0313\u0342","\u1f6f":"\u03a9\u0314\u0342","\u1f70":"\u03b1\u0300","\u1f71":"\u03b1\u0301","\u1f72":"\u03b5\u0300","\u1f73":"\u03b5\u0301","\u1f74":"\u03b7\u0300","\u1f75":"\u03b7\u0301","\u1f76":"\u03b9\u0300","\u1f77":"\u03b9\u0301","\u1f78":"\u03bf\u0300","\u1f79":"\u03bf\u0301","\u1f7a":"\u03c5\u0300","\u1f7b":"\u03c5\u0301","\u1f7c":"\u03c9\u0300","\u1f7d":"\u03c9\u0301","\u1f80":"\u03b1\u0313\u0345","\u1f81":"\u03b1\u0314\u0345","\u1f82":"\u03b1\u0313\u0300\u0345",
"\u1f83":"\u03b1\u0314\u0300\u0345","\u1f84":"\u03b1\u0313\u0301\u0345","\u1f85":"\u03b1\u0314\u0301\u0345","\u1f86":"\u03b1\u0313\u0342\u0345","\u1f87":"\u03b1\u0314\u0342\u0345","\u1f88":"\u0391\u0313\u0345","\u1f89":"\u0391\u0314\u0345","\u1f8a":"\u0391\u0313\u0300\u0345","\u1f8b":"\u0391\u0314\u0300\u0345","\u1f8c":"\u0391\u0313\u0301\u0345","\u1f8d":"\u0391\u0314\u0301\u0345","\u1f8e":"\u0391\u0313\u0342\u0345","\u1f8f":"\u0391\u0314\u0342\u0345","\u1f90":"\u03b7\u0313\u0345","\u1f91":"\u03b7\u0314\u0345",
"\u1f92":"\u03b7\u0313\u0300\u0345","\u1f93":"\u03b7\u0314\u0300\u0345","\u1f94":"\u03b7\u0313\u0301\u0345","\u1f95":"\u03b7\u0314\u0301\u0345","\u1f96":"\u03b7\u0313\u0342\u0345","\u1f97":"\u03b7\u0314\u0342\u0345","\u1f98":"\u0397\u0313\u0345","\u1f99":"\u0397\u0314\u0345","\u1f9a":"\u0397\u0313\u0300\u0345","\u1f9b":"\u0397\u0314\u0300\u0345","\u1f9c":"\u0397\u0313\u0301\u0345","\u1f9d":"\u0397\u0314\u0301\u0345","\u1f9e":"\u0397\u0313\u0342\u0345","\u1f9f":"\u0397\u0314\u0342\u0345","\u1fa0":"\u03c9\u0313\u0345",
"\u1fa1":"\u03c9\u0314\u0345","\u1fa2":"\u03c9\u0313\u0300\u0345","\u1fa3":"\u03c9\u0314\u0300\u0345","\u1fa4":"\u03c9\u0313\u0301\u0345","\u1fa5":"\u03c9\u0314\u0301\u0345","\u1fa6":"\u03c9\u0313\u0342\u0345","\u1fa7":"\u03c9\u0314\u0342\u0345","\u1fa8":"\u03a9\u0313\u0345","\u1fa9":"\u03a9\u0314\u0345","\u1faa":"\u03a9\u0313\u0300\u0345","\u1fab":"\u03a9\u0314\u0300\u0345","\u1fac":"\u03a9\u0313\u0301\u0345","\u1fad":"\u03a9\u0314\u0301\u0345","\u1fae":"\u03a9\u0313\u0342\u0345","\u1faf":"\u03a9\u0314\u0342\u0345",
"\u1fb0":"\u03b1\u0306","\u1fb1":"\u03b1\u0304","\u1fb2":"\u03b1\u0300\u0345","\u1fb3":"\u03b1\u0345","\u1fb4":"\u03b1\u0301\u0345","\u1fb6":"\u03b1\u0342","\u1fb7":"\u03b1\u0342\u0345","\u1fb8":"\u0391\u0306","\u1fb9":"\u0391\u0304","\u1fba":"\u0391\u0300","\u1fbb":"\u0391\u0301","\u1fbc":"\u0391\u0345","\u1fbe":"\u03b9","\u1fc1":"\u00a8\u0342","\u1fc2":"\u03b7\u0300\u0345","\u1fc3":"\u03b7\u0345","\u1fc4":"\u03b7\u0301\u0345","\u1fc6":"\u03b7\u0342","\u1fc7":"\u03b7\u0342\u0345","\u1fc8":"\u0395\u0300",
"\u1fc9":"\u0395\u0301","\u1fca":"\u0397\u0300","\u1fcb":"\u0397\u0301","\u1fcc":"\u0397\u0345","\u1fcd":"\u1fbf\u0300","\u1fce":"\u1fbf\u0301","\u1fcf":"\u1fbf\u0342","\u1fd0":"\u03b9\u0306","\u1fd1":"\u03b9\u0304","\u1fd2":"\u03b9\u0308\u0300","\u1fd3":"\u03b9\u0308\u0301","\u1fd6":"\u03b9\u0342","\u1fd7":"\u03b9\u0308\u0342","\u1fd8":"\u0399\u0306","\u1fd9":"\u0399\u0304","\u1fda":"\u0399\u0300","\u1fdb":"\u0399\u0301","\u1fdd":"\u1ffe\u0300","\u1fde":"\u1ffe\u0301","\u1fdf":"\u1ffe\u0342","\u1fe0":"\u03c5\u0306",
"\u1fe1":"\u03c5\u0304","\u1fe2":"\u03c5\u0308\u0300","\u1fe3":"\u03c5\u0308\u0301","\u1fe4":"\u03c1\u0313","\u1fe5":"\u03c1\u0314","\u1fe6":"\u03c5\u0342","\u1fe7":"\u03c5\u0308\u0342","\u1fe8":"\u03a5\u0306","\u1fe9":"\u03a5\u0304","\u1fea":"\u03a5\u0300","\u1feb":"\u03a5\u0301","\u1fec":"\u03a1\u0314","\u1fed":"\u00a8\u0300","\u1fee":"\u00a8\u0301","\u1fef":"`","\u1ff2":"\u03c9\u0300\u0345","\u1ff3":"\u03c9\u0345","\u1ff4":"\u03c9\u0301\u0345","\u1ff6":"\u03c9\u0342","\u1ff7":"\u03c9\u0342\u0345",
"\u1ff8":"\u039f\u0300","\u1ff9":"\u039f\u0301","\u1ffa":"\u03a9\u0300","\u1ffb":"\u03a9\u0301","\u1ffc":"\u03a9\u0345","\u1ffd":"\u00b4","\u2000":"\u2002","\u2001":"\u2003","\u2126":"\u03a9","\u212a":"K","\u212b":"A\u030a","\u219a":"\u2190\u0338","\u219b":"\u2192\u0338","\u21ae":"\u2194\u0338","\u21cd":"\u21d0\u0338","\u21ce":"\u21d4\u0338","\u21cf":"\u21d2\u0338","\u2204":"\u2203\u0338","\u2209":"\u2208\u0338","\u220c":"\u220b\u0338","\u2224":"\u2223\u0338","\u2226":"\u2225\u0338","\u2241":"\u223c\u0338",
"\u2244":"\u2243\u0338","\u2247":"\u2245\u0338","\u2249":"\u2248\u0338","\u2260":"=\u0338","\u2262":"\u2261\u0338","\u226d":"\u224d\u0338","\u226e":"<\u0338","\u226f":">\u0338","\u2270":"\u2264\u0338","\u2271":"\u2265\u0338","\u2274":"\u2272\u0338","\u2275":"\u2273\u0338","\u2278":"\u2276\u0338","\u2279":"\u2277\u0338","\u2280":"\u227a\u0338","\u2281":"\u227b\u0338","\u2284":"\u2282\u0338","\u2285":"\u2283\u0338","\u2288":"\u2286\u0338","\u2289":"\u2287\u0338","\u22ac":"\u22a2\u0338","\u22ad":"\u22a8\u0338",
"\u22ae":"\u22a9\u0338","\u22af":"\u22ab\u0338","\u22e0":"\u227c\u0338","\u22e1":"\u227d\u0338","\u22e2":"\u2291\u0338","\u22e3":"\u2292\u0338","\u22ea":"\u22b2\u0338","\u22eb":"\u22b3\u0338","\u22ec":"\u22b4\u0338","\u22ed":"\u22b5\u0338","\u2329":"\u3008","\u232a":"\u3009","\u2adc":"\u2add\u0338","\u304c":"\u304b\u3099","\u304e":"\u304d\u3099","\u3050":"\u304f\u3099","\u3052":"\u3051\u3099","\u3054":"\u3053\u3099","\u3056":"\u3055\u3099","\u3058":"\u3057\u3099","\u305a":"\u3059\u3099","\u305c":"\u305b\u3099",
"\u305e":"\u305d\u3099","\u3060":"\u305f\u3099","\u3062":"\u3061\u3099","\u3065":"\u3064\u3099","\u3067":"\u3066\u3099","\u3069":"\u3068\u3099","\u3070":"\u306f\u3099","\u3071":"\u306f\u309a","\u3073":"\u3072\u3099","\u3074":"\u3072\u309a","\u3076":"\u3075\u3099","\u3077":"\u3075\u309a","\u3079":"\u3078\u3099","\u307a":"\u3078\u309a","\u307c":"\u307b\u3099","\u307d":"\u307b\u309a","\u3094":"\u3046\u3099","\u309e":"\u309d\u3099","\u30ac":"\u30ab\u3099","\u30ae":"\u30ad\u3099","\u30b0":"\u30af\u3099",
"\u30b2":"\u30b1\u3099","\u30b4":"\u30b3\u3099","\u30b6":"\u30b5\u3099","\u30b8":"\u30b7\u3099","\u30ba":"\u30b9\u3099","\u30bc":"\u30bb\u3099","\u30be":"\u30bd\u3099","\u30c0":"\u30bf\u3099","\u30c2":"\u30c1\u3099","\u30c5":"\u30c4\u3099","\u30c7":"\u30c6\u3099","\u30c9":"\u30c8\u3099","\u30d0":"\u30cf\u3099","\u30d1":"\u30cf\u309a","\u30d3":"\u30d2\u3099","\u30d4":"\u30d2\u309a","\u30d6":"\u30d5\u3099","\u30d7":"\u30d5\u309a","\u30d9":"\u30d8\u3099","\u30da":"\u30d8\u309a","\u30dc":"\u30db\u3099",
"\u30dd":"\u30db\u309a","\u30f4":"\u30a6\u3099","\u30f7":"\u30ef\u3099","\u30f8":"\u30f0\u3099","\u30f9":"\u30f1\u3099","\u30fa":"\u30f2\u3099","\u30fe":"\u30fd\u3099","\uf900":"\u8c48","\uf901":"\u66f4","\uf902":"\u8eca","\uf903":"\u8cc8","\uf904":"\u6ed1","\uf905":"\u4e32","\uf906":"\u53e5","\uf907":"\u9f9c","\uf908":"\u9f9c","\uf909":"\u5951","\uf90a":"\u91d1","\uf90b":"\u5587","\uf90c":"\u5948","\uf90d":"\u61f6","\uf90e":"\u7669","\uf90f":"\u7f85","\uf910":"\u863f","\uf911":"\u87ba","\uf912":"\u88f8",
"\uf913":"\u908f","\uf914":"\u6a02","\uf915":"\u6d1b","\uf916":"\u70d9","\uf917":"\u73de","\uf918":"\u843d","\uf919":"\u916a","\uf91a":"\u99f1","\uf91b":"\u4e82","\uf91c":"\u5375","\uf91d":"\u6b04","\uf91e":"\u721b","\uf91f":"\u862d","\uf920":"\u9e1e","\uf921":"\u5d50","\uf922":"\u6feb","\uf923":"\u85cd","\uf924":"\u8964","\uf925":"\u62c9","\uf926":"\u81d8","\uf927":"\u881f","\uf928":"\u5eca","\uf929":"\u6717","\uf92a":"\u6d6a","\uf92b":"\u72fc","\uf92c":"\u90ce","\uf92d":"\u4f86","\uf92e":"\u51b7",
"\uf92f":"\u52de","\uf930":"\u64c4","\uf931":"\u6ad3","\uf932":"\u7210","\uf933":"\u76e7","\uf934":"\u8001","\uf935":"\u8606","\uf936":"\u865c","\uf937":"\u8def","\uf938":"\u9732","\uf939":"\u9b6f","\uf93a":"\u9dfa","\uf93b":"\u788c","\uf93c":"\u797f","\uf93d":"\u7da0","\uf93e":"\u83c9","\uf93f":"\u9304","\uf940":"\u9e7f","\uf941":"\u8ad6","\uf942":"\u58df","\uf943":"\u5f04","\uf944":"\u7c60","\uf945":"\u807e","\uf946":"\u7262","\uf947":"\u78ca","\uf948":"\u8cc2","\uf949":"\u96f7","\uf94a":"\u58d8",
"\uf94b":"\u5c62","\uf94c":"\u6a13","\uf94d":"\u6dda","\uf94e":"\u6f0f","\uf94f":"\u7d2f","\uf950":"\u7e37","\uf951":"\u964b","\uf952":"\u52d2","\uf953":"\u808b","\uf954":"\u51dc","\uf955":"\u51cc","\uf956":"\u7a1c","\uf957":"\u7dbe","\uf958":"\u83f1","\uf959":"\u9675","\uf95a":"\u8b80","\uf95b":"\u62cf","\uf95c":"\u6a02","\uf95d":"\u8afe","\uf95e":"\u4e39","\uf95f":"\u5be7","\uf960":"\u6012","\uf961":"\u7387","\uf962":"\u7570","\uf963":"\u5317","\uf964":"\u78fb","\uf965":"\u4fbf","\uf966":"\u5fa9",
"\uf967":"\u4e0d","\uf968":"\u6ccc","\uf969":"\u6578","\uf96a":"\u7d22","\uf96b":"\u53c3","\uf96c":"\u585e","\uf96d":"\u7701","\uf96e":"\u8449","\uf96f":"\u8aaa","\uf970":"\u6bba","\uf971":"\u8fb0","\uf972":"\u6c88","\uf973":"\u62fe","\uf974":"\u82e5","\uf975":"\u63a0","\uf976":"\u7565","\uf977":"\u4eae","\uf978":"\u5169","\uf979":"\u51c9","\uf97a":"\u6881","\uf97b":"\u7ce7","\uf97c":"\u826f","\uf97d":"\u8ad2","\uf97e":"\u91cf","\uf97f":"\u52f5","\uf980":"\u5442","\uf981":"\u5973","\uf982":"\u5eec",
"\uf983":"\u65c5","\uf984":"\u6ffe","\uf985":"\u792a","\uf986":"\u95ad","\uf987":"\u9a6a","\uf988":"\u9e97","\uf989":"\u9ece","\uf98a":"\u529b","\uf98b":"\u66c6","\uf98c":"\u6b77","\uf98d":"\u8f62","\uf98e":"\u5e74","\uf98f":"\u6190","\uf990":"\u6200","\uf991":"\u649a","\uf992":"\u6f23","\uf993":"\u7149","\uf994":"\u7489","\uf995":"\u79ca","\uf996":"\u7df4","\uf997":"\u806f","\uf998":"\u8f26","\uf999":"\u84ee","\uf99a":"\u9023","\uf99b":"\u934a","\uf99c":"\u5217","\uf99d":"\u52a3","\uf99e":"\u54bd",
"\uf99f":"\u70c8","\uf9a0":"\u88c2","\uf9a1":"\u8aaa","\uf9a2":"\u5ec9","\uf9a3":"\u5ff5","\uf9a4":"\u637b","\uf9a5":"\u6bae","\uf9a6":"\u7c3e","\uf9a7":"\u7375","\uf9a8":"\u4ee4","\uf9a9":"\u56f9","\uf9aa":"\u5be7","\uf9ab":"\u5dba","\uf9ac":"\u601c","\uf9ad":"\u73b2","\uf9ae":"\u7469","\uf9af":"\u7f9a","\uf9b0":"\u8046","\uf9b1":"\u9234","\uf9b2":"\u96f6","\uf9b3":"\u9748","\uf9b4":"\u9818","\uf9b5":"\u4f8b","\uf9b6":"\u79ae","\uf9b7":"\u91b4","\uf9b8":"\u96b8","\uf9b9":"\u60e1","\uf9ba":"\u4e86",
"\uf9bb":"\u50da","\uf9bc":"\u5bee","\uf9bd":"\u5c3f","\uf9be":"\u6599","\uf9bf":"\u6a02","\uf9c0":"\u71ce","\uf9c1":"\u7642","\uf9c2":"\u84fc","\uf9c3":"\u907c","\uf9c4":"\u9f8d","\uf9c5":"\u6688","\uf9c6":"\u962e","\uf9c7":"\u5289","\uf9c8":"\u677b","\uf9c9":"\u67f3","\uf9ca":"\u6d41","\uf9cb":"\u6e9c","\uf9cc":"\u7409","\uf9cd":"\u7559","\uf9ce":"\u786b","\uf9cf":"\u7d10","\uf9d0":"\u985e","\uf9d1":"\u516d","\uf9d2":"\u622e","\uf9d3":"\u9678","\uf9d4":"\u502b","\uf9d5":"\u5d19","\uf9d6":"\u6dea",
"\uf9d7":"\u8f2a","\uf9d8":"\u5f8b","\uf9d9":"\u6144","\uf9da":"\u6817","\uf9db":"\u7387","\uf9dc":"\u9686","\uf9dd":"\u5229","\uf9de":"\u540f","\uf9df":"\u5c65","\uf9e0":"\u6613","\uf9e1":"\u674e","\uf9e2":"\u68a8","\uf9e3":"\u6ce5","\uf9e4":"\u7406","\uf9e5":"\u75e2","\uf9e6":"\u7f79","\uf9e7":"\u88cf","\uf9e8":"\u88e1","\uf9e9":"\u91cc","\uf9ea":"\u96e2","\uf9eb":"\u533f","\uf9ec":"\u6eba","\uf9ed":"\u541d","\uf9ee":"\u71d0","\uf9ef":"\u7498","\uf9f0":"\u85fa","\uf9f1":"\u96a3","\uf9f2":"\u9c57",
"\uf9f3":"\u9e9f","\uf9f4":"\u6797","\uf9f5":"\u6dcb","\uf9f6":"\u81e8","\uf9f7":"\u7acb","\uf9f8":"\u7b20","\uf9f9":"\u7c92","\uf9fa":"\u72c0","\uf9fb":"\u7099","\uf9fc":"\u8b58","\uf9fd":"\u4ec0","\uf9fe":"\u8336","\uf9ff":"\u523a","\ufa00":"\u5207","\ufa01":"\u5ea6","\ufa02":"\u62d3","\ufa03":"\u7cd6","\ufa04":"\u5b85","\ufa05":"\u6d1e","\ufa06":"\u66b4","\ufa07":"\u8f3b","\ufa08":"\u884c","\ufa09":"\u964d","\ufa0a":"\u898b","\ufa0b":"\u5ed3","\ufa0c":"\u5140","\ufa0d":"\u55c0","\ufa10":"\u585a",
"\ufa12":"\u6674","\ufa15":"\u51de","\ufa16":"\u732a","\ufa17":"\u76ca","\ufa18":"\u793c","\ufa19":"\u795e","\ufa1a":"\u7965","\ufa1b":"\u798f","\ufa1c":"\u9756","\ufa1d":"\u7cbe","\ufa1e":"\u7fbd","\ufa20":"\u8612","\ufa22":"\u8af8","\ufa25":"\u9038","\ufa26":"\u90fd","\ufa2a":"\u98ef","\ufa2b":"\u98fc","\ufa2c":"\u9928","\ufa2d":"\u9db4","\ufa2e":"\u90de","\ufa2f":"\u96b7","\ufa30":"\u4fae","\ufa31":"\u50e7","\ufa32":"\u514d","\ufa33":"\u52c9","\ufa34":"\u52e4","\ufa35":"\u5351","\ufa36":"\u559d",
"\ufa37":"\u5606","\ufa38":"\u5668","\ufa39":"\u5840","\ufa3a":"\u58a8","\ufa3b":"\u5c64","\ufa3c":"\u5c6e","\ufa3d":"\u6094","\ufa3e":"\u6168","\ufa3f":"\u618e","\ufa40":"\u61f2","\ufa41":"\u654f","\ufa42":"\u65e2","\ufa43":"\u6691","\ufa44":"\u6885","\ufa45":"\u6d77","\ufa46":"\u6e1a","\ufa47":"\u6f22","\ufa48":"\u716e","\ufa49":"\u722b","\ufa4a":"\u7422","\ufa4b":"\u7891","\ufa4c":"\u793e","\ufa4d":"\u7949","\ufa4e":"\u7948","\ufa4f":"\u7950","\ufa50":"\u7956","\ufa51":"\u795d","\ufa52":"\u798d",
"\ufa53":"\u798e","\ufa54":"\u7a40","\ufa55":"\u7a81","\ufa56":"\u7bc0","\ufa57":"\u7df4","\ufa58":"\u7e09","\ufa59":"\u7e41","\ufa5a":"\u7f72","\ufa5b":"\u8005","\ufa5c":"\u81ed","\ufa5d":"\u8279","\ufa5e":"\u8279","\ufa5f":"\u8457","\ufa60":"\u8910","\ufa61":"\u8996","\ufa62":"\u8b01","\ufa63":"\u8b39","\ufa64":"\u8cd3","\ufa65":"\u8d08","\ufa66":"\u8fb6","\ufa67":"\u9038","\ufa68":"\u96e3","\ufa69":"\u97ff","\ufa6a":"\u983b","\ufa6b":"\u6075","\ufa6c":"\ud850\udeee","\ufa6d":"\u8218","\ufa70":"\u4e26",
"\ufa71":"\u51b5","\ufa72":"\u5168","\ufa73":"\u4f80","\ufa74":"\u5145","\ufa75":"\u5180","\ufa76":"\u52c7","\ufa77":"\u52fa","\ufa78":"\u559d","\ufa79":"\u5555","\ufa7a":"\u5599","\ufa7b":"\u55e2","\ufa7c":"\u585a","\ufa7d":"\u58b3","\ufa7e":"\u5944","\ufa7f":"\u5954","\ufa80":"\u5a62","\ufa81":"\u5b28","\ufa82":"\u5ed2","\ufa83":"\u5ed9","\ufa84":"\u5f69","\ufa85":"\u5fad","\ufa86":"\u60d8","\ufa87":"\u614e","\ufa88":"\u6108","\ufa89":"\u618e","\ufa8a":"\u6160","\ufa8b":"\u61f2","\ufa8c":"\u6234",
"\ufa8d":"\u63c4","\ufa8e":"\u641c","\ufa8f":"\u6452","\ufa90":"\u6556","\ufa91":"\u6674","\ufa92":"\u6717","\ufa93":"\u671b","\ufa94":"\u6756","\ufa95":"\u6b79","\ufa96":"\u6bba","\ufa97":"\u6d41","\ufa98":"\u6edb","\ufa99":"\u6ecb","\ufa9a":"\u6f22","\ufa9b":"\u701e","\ufa9c":"\u716e","\ufa9d":"\u77a7","\ufa9e":"\u7235","\ufa9f":"\u72af","\ufaa0":"\u732a","\ufaa1":"\u7471","\ufaa2":"\u7506","\ufaa3":"\u753b","\ufaa4":"\u761d","\ufaa5":"\u761f","\ufaa6":"\u76ca","\ufaa7":"\u76db","\ufaa8":"\u76f4",
"\ufaa9":"\u774a","\ufaaa":"\u7740","\ufaab":"\u78cc","\ufaac":"\u7ab1","\ufaad":"\u7bc0","\ufaae":"\u7c7b","\ufaaf":"\u7d5b","\ufab0":"\u7df4","\ufab1":"\u7f3e","\ufab2":"\u8005","\ufab3":"\u8352","\ufab4":"\u83ef","\ufab5":"\u8779","\ufab6":"\u8941","\ufab7":"\u8986","\ufab8":"\u8996","\ufab9":"\u8abf","\ufaba":"\u8af8","\ufabb":"\u8acb","\ufabc":"\u8b01","\ufabd":"\u8afe","\ufabe":"\u8aed","\ufabf":"\u8b39","\ufac0":"\u8b8a","\ufac1":"\u8d08","\ufac2":"\u8f38","\ufac3":"\u9072","\ufac4":"\u9199",
"\ufac5":"\u9276","\ufac6":"\u967c","\ufac7":"\u96e3","\ufac8":"\u9756","\ufac9":"\u97db","\ufaca":"\u97ff","\ufacb":"\u980b","\ufacc":"\u983b","\ufacd":"\u9b12","\uface":"\u9f9c","\ufacf":"\ud84a\udc4a","\ufad0":"\ud84a\udc44","\ufad1":"\ud84c\udfd5","\ufad2":"\u3b9d","\ufad3":"\u4018","\ufad4":"\u4039","\ufad5":"\ud854\ude49","\ufad6":"\ud857\udcd0","\ufad7":"\ud85f\uded3","\ufad8":"\u9f43","\ufad9":"\u9f8e","\ufb1d":"\u05d9\u05b4","\ufb1f":"\u05f2\u05b7","\ufb2a":"\u05e9\u05c1","\ufb2b":"\u05e9\u05c2",
"\ufb2c":"\u05e9\u05bc\u05c1","\ufb2d":"\u05e9\u05bc\u05c2","\ufb2e":"\u05d0\u05b7","\ufb2f":"\u05d0\u05b8","\ufb30":"\u05d0\u05bc","\ufb31":"\u05d1\u05bc","\ufb32":"\u05d2\u05bc","\ufb33":"\u05d3\u05bc","\ufb34":"\u05d4\u05bc","\ufb35":"\u05d5\u05bc","\ufb36":"\u05d6\u05bc","\ufb38":"\u05d8\u05bc","\ufb39":"\u05d9\u05bc","\ufb3a":"\u05da\u05bc","\ufb3b":"\u05db\u05bc","\ufb3c":"\u05dc\u05bc","\ufb3e":"\u05de\u05bc","\ufb40":"\u05e0\u05bc","\ufb41":"\u05e1\u05bc","\ufb43":"\u05e3\u05bc","\ufb44":"\u05e4\u05bc",
"\ufb46":"\u05e6\u05bc","\ufb47":"\u05e7\u05bc","\ufb48":"\u05e8\u05bc","\ufb49":"\u05e9\u05bc","\ufb4a":"\u05ea\u05bc","\ufb4b":"\u05d5\u05b9","\ufb4c":"\u05d1\u05bf","\ufb4d":"\u05db\u05bf","\ufb4e":"\u05e4\u05bf","\ud804\udc9a":"\ud804\udc99\ud804\udcba","\ud804\udc9c":"\ud804\udc9b\ud804\udcba","\ud804\udcab":"\ud804\udca5\ud804\udcba","\ud804\udd2e":"\ud804\udd31\ud804\udd27","\ud804\udd2f":"\ud804\udd32\ud804\udd27","\ud834\udd5e":"\ud834\udd57\ud834\udd65","\ud834\udd5f":"\ud834\udd58\ud834\udd65",
"\ud834\udd60":"\ud834\udd58\ud834\udd65\ud834\udd6e","\ud834\udd61":"\ud834\udd58\ud834\udd65\ud834\udd6f","\ud834\udd62":"\ud834\udd58\ud834\udd65\ud834\udd70","\ud834\udd63":"\ud834\udd58\ud834\udd65\ud834\udd71","\ud834\udd64":"\ud834\udd58\ud834\udd65\ud834\udd72","\ud834\uddbb":"\ud834\uddb9\ud834\udd65","\ud834\uddbc":"\ud834\uddba\ud834\udd65","\ud834\uddbd":"\ud834\uddb9\ud834\udd65\ud834\udd6e","\ud834\uddbe":"\ud834\uddba\ud834\udd65\ud834\udd6e","\ud834\uddbf":"\ud834\uddb9\ud834\udd65\ud834\udd6f",
"\ud834\uddc0":"\ud834\uddba\ud834\udd65\ud834\udd6f","\ud87e\udc00":"\u4e3d","\ud87e\udc01":"\u4e38","\ud87e\udc02":"\u4e41","\ud87e\udc03":"\ud840\udd22","\ud87e\udc04":"\u4f60","\ud87e\udc05":"\u4fae","\ud87e\udc06":"\u4fbb","\ud87e\udc07":"\u5002","\ud87e\udc08":"\u507a","\ud87e\udc09":"\u5099","\ud87e\udc0a":"\u50e7","\ud87e\udc0b":"\u50cf","\ud87e\udc0c":"\u349e","\ud87e\udc0d":"\ud841\ude3a","\ud87e\udc0e":"\u514d","\ud87e\udc0f":"\u5154","\ud87e\udc10":"\u5164","\ud87e\udc11":"\u5177","\ud87e\udc12":"\ud841\udd1c",
"\ud87e\udc13":"\u34b9","\ud87e\udc14":"\u5167","\ud87e\udc15":"\u518d","\ud87e\udc16":"\ud841\udd4b","\ud87e\udc17":"\u5197","\ud87e\udc18":"\u51a4","\ud87e\udc19":"\u4ecc","\ud87e\udc1a":"\u51ac","\ud87e\udc1b":"\u51b5","\ud87e\udc1c":"\ud864\udddf","\ud87e\udc1d":"\u51f5","\ud87e\udc1e":"\u5203","\ud87e\udc1f":"\u34df","\ud87e\udc20":"\u523b","\ud87e\udc21":"\u5246","\ud87e\udc22":"\u5272","\ud87e\udc23":"\u5277","\ud87e\udc24":"\u3515","\ud87e\udc25":"\u52c7","\ud87e\udc26":"\u52c9","\ud87e\udc27":"\u52e4",
"\ud87e\udc28":"\u52fa","\ud87e\udc29":"\u5305","\ud87e\udc2a":"\u5306","\ud87e\udc2b":"\u5317","\ud87e\udc2c":"\u5349","\ud87e\udc2d":"\u5351","\ud87e\udc2e":"\u535a","\ud87e\udc2f":"\u5373","\ud87e\udc30":"\u537d","\ud87e\udc31":"\u537f","\ud87e\udc32":"\u537f","\ud87e\udc33":"\u537f","\ud87e\udc34":"\ud842\ude2c","\ud87e\udc35":"\u7070","\ud87e\udc36":"\u53ca","\ud87e\udc37":"\u53df","\ud87e\udc38":"\ud842\udf63","\ud87e\udc39":"\u53eb","\ud87e\udc3a":"\u53f1","\ud87e\udc3b":"\u5406","\ud87e\udc3c":"\u549e",
"\ud87e\udc3d":"\u5438","\ud87e\udc3e":"\u5448","\ud87e\udc3f":"\u5468","\ud87e\udc40":"\u54a2","\ud87e\udc41":"\u54f6","\ud87e\udc42":"\u5510","\ud87e\udc43":"\u5553","\ud87e\udc44":"\u5563","\ud87e\udc45":"\u5584","\ud87e\udc46":"\u5584","\ud87e\udc47":"\u5599","\ud87e\udc48":"\u55ab","\ud87e\udc49":"\u55b3","\ud87e\udc4a":"\u55c2","\ud87e\udc4b":"\u5716","\ud87e\udc4c":"\u5606","\ud87e\udc4d":"\u5717","\ud87e\udc4e":"\u5651","\ud87e\udc4f":"\u5674","\ud87e\udc50":"\u5207","\ud87e\udc51":"\u58ee",
"\ud87e\udc52":"\u57ce","\ud87e\udc53":"\u57f4","\ud87e\udc54":"\u580d","\ud87e\udc55":"\u578b","\ud87e\udc56":"\u5832","\ud87e\udc57":"\u5831","\ud87e\udc58":"\u58ac","\ud87e\udc59":"\ud845\udce4","\ud87e\udc5a":"\u58f2","\ud87e\udc5b":"\u58f7","\ud87e\udc5c":"\u5906","\ud87e\udc5d":"\u591a","\ud87e\udc5e":"\u5922","\ud87e\udc5f":"\u5962","\ud87e\udc60":"\ud845\udea8","\ud87e\udc61":"\ud845\udeea","\ud87e\udc62":"\u59ec","\ud87e\udc63":"\u5a1b","\ud87e\udc64":"\u5a27","\ud87e\udc65":"\u59d8","\ud87e\udc66":"\u5a66",
"\ud87e\udc67":"\u36ee","\ud87e\udc68":"\u36fc","\ud87e\udc69":"\u5b08","\ud87e\udc6a":"\u5b3e","\ud87e\udc6b":"\u5b3e","\ud87e\udc6c":"\ud846\uddc8","\ud87e\udc6d":"\u5bc3","\ud87e\udc6e":"\u5bd8","\ud87e\udc6f":"\u5be7","\ud87e\udc70":"\u5bf3","\ud87e\udc71":"\ud846\udf18","\ud87e\udc72":"\u5bff","\ud87e\udc73":"\u5c06","\ud87e\udc74":"\u5f53","\ud87e\udc75":"\u5c22","\ud87e\udc76":"\u3781","\ud87e\udc77":"\u5c60","\ud87e\udc78":"\u5c6e","\ud87e\udc79":"\u5cc0","\ud87e\udc7a":"\u5c8d","\ud87e\udc7b":"\ud847\udde4",
"\ud87e\udc7c":"\u5d43","\ud87e\udc7d":"\ud847\udde6","\ud87e\udc7e":"\u5d6e","\ud87e\udc7f":"\u5d6b","\ud87e\udc80":"\u5d7c","\ud87e\udc81":"\u5de1","\ud87e\udc82":"\u5de2","\ud87e\udc83":"\u382f","\ud87e\udc84":"\u5dfd","\ud87e\udc85":"\u5e28","\ud87e\udc86":"\u5e3d","\ud87e\udc87":"\u5e69","\ud87e\udc88":"\u3862","\ud87e\udc89":"\ud848\udd83","\ud87e\udc8a":"\u387c","\ud87e\udc8b":"\u5eb0","\ud87e\udc8c":"\u5eb3","\ud87e\udc8d":"\u5eb6","\ud87e\udc8e":"\u5eca","\ud87e\udc8f":"\ud868\udf92","\ud87e\udc90":"\u5efe",
"\ud87e\udc91":"\ud848\udf31","\ud87e\udc92":"\ud848\udf31","\ud87e\udc93":"\u8201","\ud87e\udc94":"\u5f22","\ud87e\udc95":"\u5f22","\ud87e\udc96":"\u38c7","\ud87e\udc97":"\ud84c\udeb8","\ud87e\udc98":"\ud858\uddda","\ud87e\udc99":"\u5f62","\ud87e\udc9a":"\u5f6b","\ud87e\udc9b":"\u38e3","\ud87e\udc9c":"\u5f9a","\ud87e\udc9d":"\u5fcd","\ud87e\udc9e":"\u5fd7","\ud87e\udc9f":"\u5ff9","\ud87e\udca0":"\u6081","\ud87e\udca1":"\u393a","\ud87e\udca2":"\u391c","\ud87e\udca3":"\u6094","\ud87e\udca4":"\ud849\uded4",
"\ud87e\udca5":"\u60c7","\ud87e\udca6":"\u6148","\ud87e\udca7":"\u614c","\ud87e\udca8":"\u614e","\ud87e\udca9":"\u614c","\ud87e\udcaa":"\u617a","\ud87e\udcab":"\u618e","\ud87e\udcac":"\u61b2","\ud87e\udcad":"\u61a4","\ud87e\udcae":"\u61af","\ud87e\udcaf":"\u61de","\ud87e\udcb0":"\u61f2","\ud87e\udcb1":"\u61f6","\ud87e\udcb2":"\u6210","\ud87e\udcb3":"\u621b","\ud87e\udcb4":"\u625d","\ud87e\udcb5":"\u62b1","\ud87e\udcb6":"\u62d4","\ud87e\udcb7":"\u6350","\ud87e\udcb8":"\ud84a\udf0c","\ud87e\udcb9":"\u633d",
"\ud87e\udcba":"\u62fc","\ud87e\udcbb":"\u6368","\ud87e\udcbc":"\u6383","\ud87e\udcbd":"\u63e4","\ud87e\udcbe":"\ud84a\udff1","\ud87e\udcbf":"\u6422","\ud87e\udcc0":"\u63c5","\ud87e\udcc1":"\u63a9","\ud87e\udcc2":"\u3a2e","\ud87e\udcc3":"\u6469","\ud87e\udcc4":"\u647e","\ud87e\udcc5":"\u649d","\ud87e\udcc6":"\u6477","\ud87e\udcc7":"\u3a6c","\ud87e\udcc8":"\u654f","\ud87e\udcc9":"\u656c","\ud87e\udcca":"\ud84c\udc0a","\ud87e\udccb":"\u65e3","\ud87e\udccc":"\u66f8","\ud87e\udccd":"\u6649","\ud87e\udcce":"\u3b19",
"\ud87e\udccf":"\u6691","\ud87e\udcd0":"\u3b08","\ud87e\udcd1":"\u3ae4","\ud87e\udcd2":"\u5192","\ud87e\udcd3":"\u5195","\ud87e\udcd4":"\u6700","\ud87e\udcd5":"\u669c","\ud87e\udcd6":"\u80ad","\ud87e\udcd7":"\u43d9","\ud87e\udcd8":"\u6717","\ud87e\udcd9":"\u671b","\ud87e\udcda":"\u6721","\ud87e\udcdb":"\u675e","\ud87e\udcdc":"\u6753","\ud87e\udcdd":"\ud84c\udfc3","\ud87e\udcde":"\u3b49","\ud87e\udcdf":"\u67fa","\ud87e\udce0":"\u6785","\ud87e\udce1":"\u6852","\ud87e\udce2":"\u6885","\ud87e\udce3":"\ud84d\udc6d",
"\ud87e\udce4":"\u688e","\ud87e\udce5":"\u681f","\ud87e\udce6":"\u6914","\ud87e\udce7":"\u3b9d","\ud87e\udce8":"\u6942","\ud87e\udce9":"\u69a3","\ud87e\udcea":"\u69ea","\ud87e\udceb":"\u6aa8","\ud87e\udcec":"\ud84d\udea3","\ud87e\udced":"\u6adb","\ud87e\udcee":"\u3c18","\ud87e\udcef":"\u6b21","\ud87e\udcf0":"\ud84e\udca7","\ud87e\udcf1":"\u6b54","\ud87e\udcf2":"\u3c4e","\ud87e\udcf3":"\u6b72","\ud87e\udcf4":"\u6b9f","\ud87e\udcf5":"\u6bba","\ud87e\udcf6":"\u6bbb","\ud87e\udcf7":"\ud84e\ude8d","\ud87e\udcf8":"\ud847\udd0b",
"\ud87e\udcf9":"\ud84e\udefa","\ud87e\udcfa":"\u6c4e","\ud87e\udcfb":"\ud84f\udcbc","\ud87e\udcfc":"\u6cbf","\ud87e\udcfd":"\u6ccd","\ud87e\udcfe":"\u6c67","\ud87e\udcff":"\u6d16","\ud87e\udd00":"\u6d3e","\ud87e\udd01":"\u6d77","\ud87e\udd02":"\u6d41","\ud87e\udd03":"\u6d69","\ud87e\udd04":"\u6d78","\ud87e\udd05":"\u6d85","\ud87e\udd06":"\ud84f\udd1e","\ud87e\udd07":"\u6d34","\ud87e\udd08":"\u6e2f","\ud87e\udd09":"\u6e6e","\ud87e\udd0a":"\u3d33","\ud87e\udd0b":"\u6ecb","\ud87e\udd0c":"\u6ec7","\ud87e\udd0d":"\ud84f\uded1",
"\ud87e\udd0e":"\u6df9","\ud87e\udd0f":"\u6f6e","\ud87e\udd10":"\ud84f\udf5e","\ud87e\udd11":"\ud84f\udf8e","\ud87e\udd12":"\u6fc6","\ud87e\udd13":"\u7039","\ud87e\udd14":"\u701e","\ud87e\udd15":"\u701b","\ud87e\udd16":"\u3d96","\ud87e\udd17":"\u704a","\ud87e\udd18":"\u707d","\ud87e\udd19":"\u7077","\ud87e\udd1a":"\u70ad","\ud87e\udd1b":"\ud841\udd25","\ud87e\udd1c":"\u7145","\ud87e\udd1d":"\ud850\ude63","\ud87e\udd1e":"\u719c","\ud87e\udd1f":"\ud850\udfab","\ud87e\udd20":"\u7228","\ud87e\udd21":"\u7235",
"\ud87e\udd22":"\u7250","\ud87e\udd23":"\ud851\ude08","\ud87e\udd24":"\u7280","\ud87e\udd25":"\u7295","\ud87e\udd26":"\ud851\udf35","\ud87e\udd27":"\ud852\udc14","\ud87e\udd28":"\u737a","\ud87e\udd29":"\u738b","\ud87e\udd2a":"\u3eac","\ud87e\udd2b":"\u73a5","\ud87e\udd2c":"\u3eb8","\ud87e\udd2d":"\u3eb8","\ud87e\udd2e":"\u7447","\ud87e\udd2f":"\u745c","\ud87e\udd30":"\u7471","\ud87e\udd31":"\u7485","\ud87e\udd32":"\u74ca","\ud87e\udd33":"\u3f1b","\ud87e\udd34":"\u7524","\ud87e\udd35":"\ud853\udc36",
"\ud87e\udd36":"\u753e","\ud87e\udd37":"\ud853\udc92","\ud87e\udd38":"\u7570","\ud87e\udd39":"\ud848\udd9f","\ud87e\udd3a":"\u7610","\ud87e\udd3b":"\ud853\udfa1","\ud87e\udd3c":"\ud853\udfb8","\ud87e\udd3d":"\ud854\udc44","\ud87e\udd3e":"\u3ffc","\ud87e\udd3f":"\u4008","\ud87e\udd40":"\u76f4","\ud87e\udd41":"\ud854\udcf3","\ud87e\udd42":"\ud854\udcf2","\ud87e\udd43":"\ud854\udd19","\ud87e\udd44":"\ud854\udd33","\ud87e\udd45":"\u771e","\ud87e\udd46":"\u771f","\ud87e\udd47":"\u771f","\ud87e\udd48":"\u774a",
"\ud87e\udd49":"\u4039","\ud87e\udd4a":"\u778b","\ud87e\udd4b":"\u4046","\ud87e\udd4c":"\u4096","\ud87e\udd4d":"\ud855\udc1d","\ud87e\udd4e":"\u784e","\ud87e\udd4f":"\u788c","\ud87e\udd50":"\u78cc","\ud87e\udd51":"\u40e3","\ud87e\udd52":"\ud855\ude26","\ud87e\udd53":"\u7956","\ud87e\udd54":"\ud855\ude9a","\ud87e\udd55":"\ud855\udec5","\ud87e\udd56":"\u798f","\ud87e\udd57":"\u79eb","\ud87e\udd58":"\u412f","\ud87e\udd59":"\u7a40","\ud87e\udd5a":"\u7a4a","\ud87e\udd5b":"\u7a4f","\ud87e\udd5c":"\ud856\udd7c",
"\ud87e\udd5d":"\ud856\udea7","\ud87e\udd5e":"\ud856\udea7","\ud87e\udd5f":"\u7aee","\ud87e\udd60":"\u4202","\ud87e\udd61":"\ud856\udfab","\ud87e\udd62":"\u7bc6","\ud87e\udd63":"\u7bc9","\ud87e\udd64":"\u4227","\ud87e\udd65":"\ud857\udc80","\ud87e\udd66":"\u7cd2","\ud87e\udd67":"\u42a0","\ud87e\udd68":"\u7ce8","\ud87e\udd69":"\u7ce3","\ud87e\udd6a":"\u7d00","\ud87e\udd6b":"\ud857\udf86","\ud87e\udd6c":"\u7d63","\ud87e\udd6d":"\u4301","\ud87e\udd6e":"\u7dc7","\ud87e\udd6f":"\u7e02","\ud87e\udd70":"\u7e45",
"\ud87e\udd71":"\u4334","\ud87e\udd72":"\ud858\ude28","\ud87e\udd73":"\ud858\ude47","\ud87e\udd74":"\u4359","\ud87e\udd75":"\ud858\uded9","\ud87e\udd76":"\u7f7a","\ud87e\udd77":"\ud858\udf3e","\ud87e\udd78":"\u7f95","\ud87e\udd79":"\u7ffa","\ud87e\udd7a":"\u8005","\ud87e\udd7b":"\ud859\udcda","\ud87e\udd7c":"\ud859\udd23","\ud87e\udd7d":"\u8060","\ud87e\udd7e":"\ud859\udda8","\ud87e\udd7f":"\u8070","\ud87e\udd80":"\ud84c\udf5f","\ud87e\udd81":"\u43d5","\ud87e\udd82":"\u80b2","\ud87e\udd83":"\u8103",
"\ud87e\udd84":"\u440b","\ud87e\udd85":"\u813e","\ud87e\udd86":"\u5ab5","\ud87e\udd87":"\ud859\udfa7","\ud87e\udd88":"\ud859\udfb5","\ud87e\udd89":"\ud84c\udf93","\ud87e\udd8a":"\ud84c\udf9c","\ud87e\udd8b":"\u8201","\ud87e\udd8c":"\u8204","\ud87e\udd8d":"\u8f9e","\ud87e\udd8e":"\u446b","\ud87e\udd8f":"\u8291","\ud87e\udd90":"\u828b","\ud87e\udd91":"\u829d","\ud87e\udd92":"\u52b3","\ud87e\udd93":"\u82b1","\ud87e\udd94":"\u82b3","\ud87e\udd95":"\u82bd","\ud87e\udd96":"\u82e6","\ud87e\udd97":"\ud85a\udf3c",
"\ud87e\udd98":"\u82e5","\ud87e\udd99":"\u831d","\ud87e\udd9a":"\u8363","\ud87e\udd9b":"\u83ad","\ud87e\udd9c":"\u8323","\ud87e\udd9d":"\u83bd","\ud87e\udd9e":"\u83e7","\ud87e\udd9f":"\u8457","\ud87e\udda0":"\u8353","\ud87e\udda1":"\u83ca","\ud87e\udda2":"\u83cc","\ud87e\udda3":"\u83dc","\ud87e\udda4":"\ud85b\udc36","\ud87e\udda5":"\ud85b\udd6b","\ud87e\udda6":"\ud85b\udcd5","\ud87e\udda7":"\u452b","\ud87e\udda8":"\u84f1","\ud87e\udda9":"\u84f3","\ud87e\uddaa":"\u8516","\ud87e\uddab":"\ud85c\udfca",
"\ud87e\uddac":"\u8564","\ud87e\uddad":"\ud85b\udf2c","\ud87e\uddae":"\u455d","\ud87e\uddaf":"\u4561","\ud87e\uddb0":"\ud85b\udfb1","\ud87e\uddb1":"\ud85c\udcd2","\ud87e\uddb2":"\u456b","\ud87e\uddb3":"\u8650","\ud87e\uddb4":"\u865c","\ud87e\uddb5":"\u8667","\ud87e\uddb6":"\u8669","\ud87e\uddb7":"\u86a9","\ud87e\uddb8":"\u8688","\ud87e\uddb9":"\u870e","\ud87e\uddba":"\u86e2","\ud87e\uddbb":"\u8779","\ud87e\uddbc":"\u8728","\ud87e\uddbd":"\u876b","\ud87e\uddbe":"\u8786","\ud87e\uddbf":"\u45d7","\ud87e\uddc0":"\u87e1",
"\ud87e\uddc1":"\u8801","\ud87e\uddc2":"\u45f9","\ud87e\uddc3":"\u8860","\ud87e\uddc4":"\u8863","\ud87e\uddc5":"\ud85d\ude67","\ud87e\uddc6":"\u88d7","\ud87e\uddc7":"\u88de","\ud87e\uddc8":"\u4635","\ud87e\uddc9":"\u88fa","\ud87e\uddca":"\u34bb","\ud87e\uddcb":"\ud85e\udcae","\ud87e\uddcc":"\ud85e\udd66","\ud87e\uddcd":"\u46be","\ud87e\uddce":"\u46c7","\ud87e\uddcf":"\u8aa0","\ud87e\uddd0":"\u8aed","\ud87e\uddd1":"\u8b8a","\ud87e\uddd2":"\u8c55","\ud87e\uddd3":"\ud85f\udca8","\ud87e\uddd4":"\u8cab",
"\ud87e\uddd5":"\u8cc1","\ud87e\uddd6":"\u8d1b","\ud87e\uddd7":"\u8d77","\ud87e\uddd8":"\ud85f\udf2f","\ud87e\uddd9":"\ud842\udc04","\ud87e\uddda":"\u8dcb","\ud87e\udddb":"\u8dbc","\ud87e\udddc":"\u8df0","\ud87e\udddd":"\ud842\udcde","\ud87e\uddde":"\u8ed4","\ud87e\udddf":"\u8f38","\ud87e\udde0":"\ud861\uddd2","\ud87e\udde1":"\ud861\udded","\ud87e\udde2":"\u9094","\ud87e\udde3":"\u90f1","\ud87e\udde4":"\u9111","\ud87e\udde5":"\ud861\udf2e","\ud87e\udde6":"\u911b","\ud87e\udde7":"\u9238","\ud87e\udde8":"\u92d7",
"\ud87e\udde9":"\u92d8","\ud87e\uddea":"\u927c","\ud87e\uddeb":"\u93f9","\ud87e\uddec":"\u9415","\ud87e\udded":"\ud862\udffa","\ud87e\uddee":"\u958b","\ud87e\uddef":"\u4995","\ud87e\uddf0":"\u95b7","\ud87e\uddf1":"\ud863\udd77","\ud87e\uddf2":"\u49e6","\ud87e\uddf3":"\u96c3","\ud87e\uddf4":"\u5db2","\ud87e\uddf5":"\u9723","\ud87e\uddf6":"\ud864\udd45","\ud87e\uddf7":"\ud864\ude1a","\ud87e\uddf8":"\u4a6e","\ud87e\uddf9":"\u4a76","\ud87e\uddfa":"\u97e0","\ud87e\uddfb":"\ud865\udc0a","\ud87e\uddfc":"\u4ab2",
"\ud87e\uddfd":"\ud865\udc96","\ud87e\uddfe":"\u980b","\ud87e\uddff":"\u980b","\ud87e\ude00":"\u9829","\ud87e\ude01":"\ud865\uddb6","\ud87e\ude02":"\u98e2","\ud87e\ude03":"\u4b33","\ud87e\ude04":"\u9929","\ud87e\ude05":"\u99a7","\ud87e\ude06":"\u99c2","\ud87e\ude07":"\u99fe","\ud87e\ude08":"\u4bce","\ud87e\ude09":"\ud866\udf30","\ud87e\ude0a":"\u9b12","\ud87e\ude0b":"\u9c40","\ud87e\ude0c":"\u9cfd","\ud87e\ude0d":"\u4cce","\ud87e\ude0e":"\u4ced","\ud87e\ude0f":"\u9d67","\ud87e\ude10":"\ud868\udcce",
"\ud87e\ude11":"\u4cf8","\ud87e\ude12":"\ud868\udd05","\ud87e\ude13":"\ud868\ude0e","\ud87e\ude14":"\ud868\ude91","\ud87e\ude15":"\u9ebb","\ud87e\ude16":"\u4d56","\ud87e\ude17":"\u9ef9","\ud87e\ude18":"\u9efe","\ud87e\ude19":"\u9f05","\ud87e\ude1a":"\u9f0f","\ud87e\ude1b":"\u9f16","\ud87e\ude1c":"\u9f3b","\ud87e\ude1d":"\ud869\ude00"};ilib.data.norm.nfd=ilib.merge(ilib.data.norm.nfd||{},ilib.data.nfd_all);ilib.data.nfd_all=void 0;
ilib.data.nfkd_all={"\u00a0":" ","\u00a8":" \u0308","\u00aa":"a","\u00af":" \u0304","\u00b2":"2","\u00b3":"3","\u00b4":" \u0301","\u00b5":"\u03bc","\u00b8":" \u0327","\u00b9":"1","\u00ba":"o","\u00bc":"1\u20444","\u00bd":"1\u20442","\u00be":"3\u20444","\u0132":"IJ","\u0133":"ij","\u013f":"L\u00b7","\u0140":"l\u00b7","\u0149":"\u02bcn","\u017f":"s","\u01c4":"DZ\u030c","\u01c5":"Dz\u030c","\u01c6":"dz\u030c","\u01c7":"LJ","\u01c8":"Lj","\u01c9":"lj","\u01ca":"NJ","\u01cb":"Nj","\u01cc":"nj","\u01f1":"DZ",
"\u01f2":"Dz","\u01f3":"dz","\u02b0":"h","\u02b1":"\u0266","\u02b2":"j","\u02b3":"r","\u02b4":"\u0279","\u02b5":"\u027b","\u02b6":"\u0281","\u02b7":"w","\u02b8":"y","\u02d8":" \u0306","\u02d9":" \u0307","\u02da":" \u030a","\u02db":" \u0328","\u02dc":" \u0303","\u02dd":" \u030b","\u02e0":"\u0263","\u02e1":"l","\u02e2":"s","\u02e3":"x","\u02e4":"\u0295","\u037a":" \u0345","\u0384":" \u0301","\u03d0":"\u03b2","\u03d1":"\u03b8","\u03d2":"\u03a5","\u03d5":"\u03c6","\u03d6":"\u03c0","\u03f0":"\u03ba","\u03f1":"\u03c1",
"\u03f2":"\u03c2","\u03f4":"\u0398","\u03f5":"\u03b5","\u03f9":"\u03a3","\u0587":"\u0565\u0582","\u0675":"\u0627\u0674","\u0676":"\u0648\u0674","\u0677":"\u06c7\u0674","\u0678":"\u064a\u0674","\u0e33":"\u0e4d\u0e32","\u0eb3":"\u0ecd\u0eb2","\u0edc":"\u0eab\u0e99","\u0edd":"\u0eab\u0ea1","\u0f0c":"\u0f0b","\u0f77":"\u0fb2\u0f71\u0f80","\u0f79":"\u0fb3\u0f71\u0f80","\u10fc":"\u10dc","\u1d2c":"A","\u1d2d":"\u00c6","\u1d2e":"B","\u1d30":"D","\u1d31":"E","\u1d32":"\u018e","\u1d33":"G","\u1d34":"H","\u1d35":"I",
"\u1d36":"J","\u1d37":"K","\u1d38":"L","\u1d39":"M","\u1d3a":"N","\u1d3c":"O","\u1d3d":"\u0222","\u1d3e":"P","\u1d3f":"R","\u1d40":"T","\u1d41":"U","\u1d42":"W","\u1d43":"a","\u1d44":"\u0250","\u1d45":"\u0251","\u1d46":"\u1d02","\u1d47":"b","\u1d48":"d","\u1d49":"e","\u1d4a":"\u0259","\u1d4b":"\u025b","\u1d4c":"\u025c","\u1d4d":"g","\u1d4f":"k","\u1d50":"m","\u1d51":"\u014b","\u1d52":"o","\u1d53":"\u0254","\u1d54":"\u1d16","\u1d55":"\u1d17","\u1d56":"p","\u1d57":"t","\u1d58":"u","\u1d59":"\u1d1d",
"\u1d5a":"\u026f","\u1d5b":"v","\u1d5c":"\u1d25","\u1d5d":"\u03b2","\u1d5e":"\u03b3","\u1d5f":"\u03b4","\u1d60":"\u03c6","\u1d61":"\u03c7","\u1d62":"i","\u1d63":"r","\u1d64":"u","\u1d65":"v","\u1d66":"\u03b2","\u1d67":"\u03b3","\u1d68":"\u03c1","\u1d69":"\u03c6","\u1d6a":"\u03c7","\u1d78":"\u043d","\u1d9b":"\u0252","\u1d9c":"c","\u1d9d":"\u0255","\u1d9e":"\u00f0","\u1d9f":"\u025c","\u1da0":"f","\u1da1":"\u025f","\u1da2":"\u0261","\u1da3":"\u0265","\u1da4":"\u0268","\u1da5":"\u0269","\u1da6":"\u026a",
"\u1da7":"\u1d7b","\u1da8":"\u029d","\u1da9":"\u026d","\u1daa":"\u1d85","\u1dab":"\u029f","\u1dac":"\u0271","\u1dad":"\u0270","\u1dae":"\u0272","\u1daf":"\u0273","\u1db0":"\u0274","\u1db1":"\u0275","\u1db2":"\u0278","\u1db3":"\u0282","\u1db4":"\u0283","\u1db5":"\u01ab","\u1db6":"\u0289","\u1db7":"\u028a","\u1db8":"\u1d1c","\u1db9":"\u028b","\u1dba":"\u028c","\u1dbb":"z","\u1dbc":"\u0290","\u1dbd":"\u0291","\u1dbe":"\u0292","\u1dbf":"\u03b8","\u1e9a":"a\u02be","\u1fbd":" \u0313","\u1fbf":" \u0313",
"\u1fc0":" \u0342","\u1ffe":" \u0314","\u2002":" ","\u2003":" ","\u2004":" ","\u2005":" ","\u2006":" ","\u2007":" ","\u2008":" ","\u2009":" ","\u200a":" ","\u2011":"\u2010","\u2017":" \u0333","\u2024":".","\u2025":"..","\u2026":"...","\u202f":" ","\u2033":"\u2032\u2032","\u2034":"\u2032\u2032\u2032","\u2036":"\u2035\u2035","\u2037":"\u2035\u2035\u2035","\u203c":"!!","\u203e":" \u0305","\u2047":"??","\u2048":"?!","\u2049":"!?","\u2057":"\u2032\u2032\u2032\u2032","\u205f":" ","\u2070":"0","\u2071":"i",
"\u2074":"4","\u2075":"5","\u2076":"6","\u2077":"7","\u2078":"8","\u2079":"9","\u207a":"+","\u207b":"\u2212","\u207c":"=","\u207d":"(","\u207e":")","\u207f":"n","\u2080":"0","\u2081":"1","\u2082":"2","\u2083":"3","\u2084":"4","\u2085":"5","\u2086":"6","\u2087":"7","\u2088":"8","\u2089":"9","\u208a":"+","\u208b":"\u2212","\u208c":"=","\u208d":"(","\u208e":")","\u2090":"a","\u2091":"e","\u2092":"o","\u2093":"x","\u2094":"\u0259","\u2095":"h","\u2096":"k","\u2097":"l","\u2098":"m","\u2099":"n","\u209a":"p",
"\u209b":"s","\u209c":"t","\u20a8":"Rs","\u2100":"a/c","\u2101":"a/s","\u2102":"C","\u2103":"\u00b0C","\u2105":"c/o","\u2106":"c/u","\u2107":"\u0190","\u2109":"\u00b0F","\u210a":"g","\u210b":"H","\u210c":"H","\u210d":"H","\u210e":"h","\u210f":"\u0127","\u2110":"I","\u2111":"I","\u2112":"L","\u2113":"l","\u2115":"N","\u2116":"No","\u2119":"P","\u211a":"Q","\u211b":"R","\u211c":"R","\u211d":"R","\u2120":"SM","\u2121":"TEL","\u2122":"TM","\u2124":"Z","\u2128":"Z","\u212c":"B","\u212d":"C","\u212f":"e",
"\u2130":"E","\u2131":"F","\u2133":"M","\u2134":"o","\u2135":"\u05d0","\u2136":"\u05d1","\u2137":"\u05d2","\u2138":"\u05d3","\u2139":"i","\u213b":"FAX","\u213c":"\u03c0","\u213d":"\u03b3","\u213e":"\u0393","\u213f":"\u03a0","\u2140":"\u2211","\u2145":"D","\u2146":"d","\u2147":"e","\u2148":"i","\u2149":"j","\u2150":"1\u20447","\u2151":"1\u20449","\u2152":"1\u204410","\u2153":"1\u20443","\u2154":"2\u20443","\u2155":"1\u20445","\u2156":"2\u20445","\u2157":"3\u20445","\u2158":"4\u20445","\u2159":"1\u20446",
"\u215a":"5\u20446","\u215b":"1\u20448","\u215c":"3\u20448","\u215d":"5\u20448","\u215e":"7\u20448","\u215f":"1\u2044","\u2160":"I","\u2161":"II","\u2162":"III","\u2163":"IV","\u2164":"V","\u2165":"VI","\u2166":"VII","\u2167":"VIII","\u2168":"IX","\u2169":"X","\u216a":"XI","\u216b":"XII","\u216c":"L","\u216d":"C","\u216e":"D","\u216f":"M","\u2170":"i","\u2171":"ii","\u2172":"iii","\u2173":"iv","\u2174":"v","\u2175":"vi","\u2176":"vii","\u2177":"viii","\u2178":"ix","\u2179":"x","\u217a":"xi","\u217b":"xii",
"\u217c":"l","\u217d":"c","\u217e":"d","\u217f":"m","\u2189":"0\u20443","\u222c":"\u222b\u222b","\u222d":"\u222b\u222b\u222b","\u222f":"\u222e\u222e","\u2230":"\u222e\u222e\u222e","\u2460":"1","\u2461":"2","\u2462":"3","\u2463":"4","\u2464":"5","\u2465":"6","\u2466":"7","\u2467":"8","\u2468":"9","\u2469":"10","\u246a":"11","\u246b":"12","\u246c":"13","\u246d":"14","\u246e":"15","\u246f":"16","\u2470":"17","\u2471":"18","\u2472":"19","\u2473":"20","\u2474":"(1)","\u2475":"(2)","\u2476":"(3)","\u2477":"(4)",
"\u2478":"(5)","\u2479":"(6)","\u247a":"(7)","\u247b":"(8)","\u247c":"(9)","\u247d":"(10)","\u247e":"(11)","\u247f":"(12)","\u2480":"(13)","\u2481":"(14)","\u2482":"(15)","\u2483":"(16)","\u2484":"(17)","\u2485":"(18)","\u2486":"(19)","\u2487":"(20)","\u2488":"1.","\u2489":"2.","\u248a":"3.","\u248b":"4.","\u248c":"5.","\u248d":"6.","\u248e":"7.","\u248f":"8.","\u2490":"9.","\u2491":"10.","\u2492":"11.","\u2493":"12.","\u2494":"13.","\u2495":"14.","\u2496":"15.","\u2497":"16.","\u2498":"17.","\u2499":"18.",
"\u249a":"19.","\u249b":"20.","\u249c":"(a)","\u249d":"(b)","\u249e":"(c)","\u249f":"(d)","\u24a0":"(e)","\u24a1":"(f)","\u24a2":"(g)","\u24a3":"(h)","\u24a4":"(i)","\u24a5":"(j)","\u24a6":"(k)","\u24a7":"(l)","\u24a8":"(m)","\u24a9":"(n)","\u24aa":"(o)","\u24ab":"(p)","\u24ac":"(q)","\u24ad":"(r)","\u24ae":"(s)","\u24af":"(t)","\u24b0":"(u)","\u24b1":"(v)","\u24b2":"(w)","\u24b3":"(x)","\u24b4":"(y)","\u24b5":"(z)","\u24b6":"A","\u24b7":"B","\u24b8":"C","\u24b9":"D","\u24ba":"E","\u24bb":"F","\u24bc":"G",
"\u24bd":"H","\u24be":"I","\u24bf":"J","\u24c0":"K","\u24c1":"L","\u24c2":"M","\u24c3":"N","\u24c4":"O","\u24c5":"P","\u24c6":"Q","\u24c7":"R","\u24c8":"S","\u24c9":"T","\u24ca":"U","\u24cb":"V","\u24cc":"W","\u24cd":"X","\u24ce":"Y","\u24cf":"Z","\u24d0":"a","\u24d1":"b","\u24d2":"c","\u24d3":"d","\u24d4":"e","\u24d5":"f","\u24d6":"g","\u24d7":"h","\u24d8":"i","\u24d9":"j","\u24da":"k","\u24db":"l","\u24dc":"m","\u24dd":"n","\u24de":"o","\u24df":"p","\u24e0":"q","\u24e1":"r","\u24e2":"s","\u24e3":"t",
"\u24e4":"u","\u24e5":"v","\u24e6":"w","\u24e7":"x","\u24e8":"y","\u24e9":"z","\u24ea":"0","\u2a0c":"\u222b\u222b\u222b\u222b","\u2a74":"::=","\u2a75":"==","\u2a76":"===","\u2c7c":"j","\u2c7d":"V","\u2d6f":"\u2d61","\u2e9f":"\u6bcd","\u2ef3":"\u9f9f","\u2f00":"\u4e00","\u2f01":"\u4e28","\u2f02":"\u4e36","\u2f03":"\u4e3f","\u2f04":"\u4e59","\u2f05":"\u4e85","\u2f06":"\u4e8c","\u2f07":"\u4ea0","\u2f08":"\u4eba","\u2f09":"\u513f","\u2f0a":"\u5165","\u2f0b":"\u516b","\u2f0c":"\u5182","\u2f0d":"\u5196",
"\u2f0e":"\u51ab","\u2f0f":"\u51e0","\u2f10":"\u51f5","\u2f11":"\u5200","\u2f12":"\u529b","\u2f13":"\u52f9","\u2f14":"\u5315","\u2f15":"\u531a","\u2f16":"\u5338","\u2f17":"\u5341","\u2f18":"\u535c","\u2f19":"\u5369","\u2f1a":"\u5382","\u2f1b":"\u53b6","\u2f1c":"\u53c8","\u2f1d":"\u53e3","\u2f1e":"\u56d7","\u2f1f":"\u571f","\u2f20":"\u58eb","\u2f21":"\u5902","\u2f22":"\u590a","\u2f23":"\u5915","\u2f24":"\u5927","\u2f25":"\u5973","\u2f26":"\u5b50","\u2f27":"\u5b80","\u2f28":"\u5bf8","\u2f29":"\u5c0f",
"\u2f2a":"\u5c22","\u2f2b":"\u5c38","\u2f2c":"\u5c6e","\u2f2d":"\u5c71","\u2f2e":"\u5ddb","\u2f2f":"\u5de5","\u2f30":"\u5df1","\u2f31":"\u5dfe","\u2f32":"\u5e72","\u2f33":"\u5e7a","\u2f34":"\u5e7f","\u2f35":"\u5ef4","\u2f36":"\u5efe","\u2f37":"\u5f0b","\u2f38":"\u5f13","\u2f39":"\u5f50","\u2f3a":"\u5f61","\u2f3b":"\u5f73","\u2f3c":"\u5fc3","\u2f3d":"\u6208","\u2f3e":"\u6236","\u2f3f":"\u624b","\u2f40":"\u652f","\u2f41":"\u6534","\u2f42":"\u6587","\u2f43":"\u6597","\u2f44":"\u65a4","\u2f45":"\u65b9",
"\u2f46":"\u65e0","\u2f47":"\u65e5","\u2f48":"\u66f0","\u2f49":"\u6708","\u2f4a":"\u6728","\u2f4b":"\u6b20","\u2f4c":"\u6b62","\u2f4d":"\u6b79","\u2f4e":"\u6bb3","\u2f4f":"\u6bcb","\u2f50":"\u6bd4","\u2f51":"\u6bdb","\u2f52":"\u6c0f","\u2f53":"\u6c14","\u2f54":"\u6c34","\u2f55":"\u706b","\u2f56":"\u722a","\u2f57":"\u7236","\u2f58":"\u723b","\u2f59":"\u723f","\u2f5a":"\u7247","\u2f5b":"\u7259","\u2f5c":"\u725b","\u2f5d":"\u72ac","\u2f5e":"\u7384","\u2f5f":"\u7389","\u2f60":"\u74dc","\u2f61":"\u74e6",
"\u2f62":"\u7518","\u2f63":"\u751f","\u2f64":"\u7528","\u2f65":"\u7530","\u2f66":"\u758b","\u2f67":"\u7592","\u2f68":"\u7676","\u2f69":"\u767d","\u2f6a":"\u76ae","\u2f6b":"\u76bf","\u2f6c":"\u76ee","\u2f6d":"\u77db","\u2f6e":"\u77e2","\u2f6f":"\u77f3","\u2f70":"\u793a","\u2f71":"\u79b8","\u2f72":"\u79be","\u2f73":"\u7a74","\u2f74":"\u7acb","\u2f75":"\u7af9","\u2f76":"\u7c73","\u2f77":"\u7cf8","\u2f78":"\u7f36","\u2f79":"\u7f51","\u2f7a":"\u7f8a","\u2f7b":"\u7fbd","\u2f7c":"\u8001","\u2f7d":"\u800c",
"\u2f7e":"\u8012","\u2f7f":"\u8033","\u2f80":"\u807f","\u2f81":"\u8089","\u2f82":"\u81e3","\u2f83":"\u81ea","\u2f84":"\u81f3","\u2f85":"\u81fc","\u2f86":"\u820c","\u2f87":"\u821b","\u2f88":"\u821f","\u2f89":"\u826e","\u2f8a":"\u8272","\u2f8b":"\u8278","\u2f8c":"\u864d","\u2f8d":"\u866b","\u2f8e":"\u8840","\u2f8f":"\u884c","\u2f90":"\u8863","\u2f91":"\u897e","\u2f92":"\u898b","\u2f93":"\u89d2","\u2f94":"\u8a00","\u2f95":"\u8c37","\u2f96":"\u8c46","\u2f97":"\u8c55","\u2f98":"\u8c78","\u2f99":"\u8c9d",
"\u2f9a":"\u8d64","\u2f9b":"\u8d70","\u2f9c":"\u8db3","\u2f9d":"\u8eab","\u2f9e":"\u8eca","\u2f9f":"\u8f9b","\u2fa0":"\u8fb0","\u2fa1":"\u8fb5","\u2fa2":"\u9091","\u2fa3":"\u9149","\u2fa4":"\u91c6","\u2fa5":"\u91cc","\u2fa6":"\u91d1","\u2fa7":"\u9577","\u2fa8":"\u9580","\u2fa9":"\u961c","\u2faa":"\u96b6","\u2fab":"\u96b9","\u2fac":"\u96e8","\u2fad":"\u9751","\u2fae":"\u975e","\u2faf":"\u9762","\u2fb0":"\u9769","\u2fb1":"\u97cb","\u2fb2":"\u97ed","\u2fb3":"\u97f3","\u2fb4":"\u9801","\u2fb5":"\u98a8",
"\u2fb6":"\u98db","\u2fb7":"\u98df","\u2fb8":"\u9996","\u2fb9":"\u9999","\u2fba":"\u99ac","\u2fbb":"\u9aa8","\u2fbc":"\u9ad8","\u2fbd":"\u9adf","\u2fbe":"\u9b25","\u2fbf":"\u9b2f","\u2fc0":"\u9b32","\u2fc1":"\u9b3c","\u2fc2":"\u9b5a","\u2fc3":"\u9ce5","\u2fc4":"\u9e75","\u2fc5":"\u9e7f","\u2fc6":"\u9ea5","\u2fc7":"\u9ebb","\u2fc8":"\u9ec3","\u2fc9":"\u9ecd","\u2fca":"\u9ed1","\u2fcb":"\u9ef9","\u2fcc":"\u9efd","\u2fcd":"\u9f0e","\u2fce":"\u9f13","\u2fcf":"\u9f20","\u2fd0":"\u9f3b","\u2fd1":"\u9f4a",
"\u2fd2":"\u9f52","\u2fd3":"\u9f8d","\u2fd4":"\u9f9c","\u2fd5":"\u9fa0","\u3000":" ","\u3036":"\u3012","\u3038":"\u5341","\u3039":"\u5344","\u303a":"\u5345","\u309b":" \u3099","\u309c":" \u309a","\u309f":"\u3088\u308a","\u30ff":"\u30b3\u30c8","\u3131":"\u1100","\u3132":"\u1101","\u3133":"\u11aa","\u3134":"\u1102","\u3135":"\u11ac","\u3136":"\u11ad","\u3137":"\u1103","\u3138":"\u1104","\u3139":"\u1105","\u313a":"\u11b0","\u313b":"\u11b1","\u313c":"\u11b2","\u313d":"\u11b3","\u313e":"\u11b4","\u313f":"\u11b5",
"\u3140":"\u111a","\u3141":"\u1106","\u3142":"\u1107","\u3143":"\u1108","\u3144":"\u1121","\u3145":"\u1109","\u3146":"\u110a","\u3147":"\u110b","\u3148":"\u110c","\u3149":"\u110d","\u314a":"\u110e","\u314b":"\u110f","\u314c":"\u1110","\u314d":"\u1111","\u314e":"\u1112","\u314f":"\u1161","\u3150":"\u1162","\u3151":"\u1163","\u3152":"\u1164","\u3153":"\u1165","\u3154":"\u1166","\u3155":"\u1167","\u3156":"\u1168","\u3157":"\u1169","\u3158":"\u116a","\u3159":"\u116b","\u315a":"\u116c","\u315b":"\u116d",
"\u315c":"\u116e","\u315d":"\u116f","\u315e":"\u1170","\u315f":"\u1171","\u3160":"\u1172","\u3161":"\u1173","\u3162":"\u1174","\u3163":"\u1175","\u3164":"\u1160","\u3165":"\u1114","\u3166":"\u1115","\u3167":"\u11c7","\u3168":"\u11c8","\u3169":"\u11cc","\u316a":"\u11ce","\u316b":"\u11d3","\u316c":"\u11d7","\u316d":"\u11d9","\u316e":"\u111c","\u316f":"\u11dd","\u3170":"\u11df","\u3171":"\u111d","\u3172":"\u111e","\u3173":"\u1120","\u3174":"\u1122","\u3175":"\u1123","\u3176":"\u1127","\u3177":"\u1129",
"\u3178":"\u112b","\u3179":"\u112c","\u317a":"\u112d","\u317b":"\u112e","\u317c":"\u112f","\u317d":"\u1132","\u317e":"\u1136","\u317f":"\u1140","\u3180":"\u1147","\u3181":"\u114c","\u3182":"\u11f1","\u3183":"\u11f2","\u3184":"\u1157","\u3185":"\u1158","\u3186":"\u1159","\u3187":"\u1184","\u3188":"\u1185","\u3189":"\u1188","\u318a":"\u1191","\u318b":"\u1192","\u318c":"\u1194","\u318d":"\u119e","\u318e":"\u11a1","\u3192":"\u4e00","\u3193":"\u4e8c","\u3194":"\u4e09","\u3195":"\u56db","\u3196":"\u4e0a",
"\u3197":"\u4e2d","\u3198":"\u4e0b","\u3199":"\u7532","\u319a":"\u4e59","\u319b":"\u4e19","\u319c":"\u4e01","\u319d":"\u5929","\u319e":"\u5730","\u319f":"\u4eba","\u3200":"(\u1100)","\u3201":"(\u1102)","\u3202":"(\u1103)","\u3203":"(\u1105)","\u3204":"(\u1106)","\u3205":"(\u1107)","\u3206":"(\u1109)","\u3207":"(\u110b)","\u3208":"(\u110c)","\u3209":"(\u110e)","\u320a":"(\u110f)","\u320b":"(\u1110)","\u320c":"(\u1111)","\u320d":"(\u1112)","\u320e":"(\u1100\u1161)","\u320f":"(\u1102\u1161)","\u3210":"(\u1103\u1161)",
"\u3211":"(\u1105\u1161)","\u3212":"(\u1106\u1161)","\u3213":"(\u1107\u1161)","\u3214":"(\u1109\u1161)","\u3215":"(\u110b\u1161)","\u3216":"(\u110c\u1161)","\u3217":"(\u110e\u1161)","\u3218":"(\u110f\u1161)","\u3219":"(\u1110\u1161)","\u321a":"(\u1111\u1161)","\u321b":"(\u1112\u1161)","\u321c":"(\u110c\u116e)","\u321d":"(\u110b\u1169\u110c\u1165\u11ab)","\u321e":"(\u110b\u1169\u1112\u116e)","\u3220":"(\u4e00)","\u3221":"(\u4e8c)","\u3222":"(\u4e09)","\u3223":"(\u56db)","\u3224":"(\u4e94)","\u3225":"(\u516d)",
"\u3226":"(\u4e03)","\u3227":"(\u516b)","\u3228":"(\u4e5d)","\u3229":"(\u5341)","\u322a":"(\u6708)","\u322b":"(\u706b)","\u322c":"(\u6c34)","\u322d":"(\u6728)","\u322e":"(\u91d1)","\u322f":"(\u571f)","\u3230":"(\u65e5)","\u3231":"(\u682a)","\u3232":"(\u6709)","\u3233":"(\u793e)","\u3234":"(\u540d)","\u3235":"(\u7279)","\u3236":"(\u8ca1)","\u3237":"(\u795d)","\u3238":"(\u52b4)","\u3239":"(\u4ee3)","\u323a":"(\u547c)","\u323b":"(\u5b66)","\u323c":"(\u76e3)","\u323d":"(\u4f01)","\u323e":"(\u8cc7)","\u323f":"(\u5354)",
"\u3240":"(\u796d)","\u3241":"(\u4f11)","\u3242":"(\u81ea)","\u3243":"(\u81f3)","\u3244":"\u554f","\u3245":"\u5e7c","\u3246":"\u6587","\u3247":"\u7b8f","\u3250":"PTE","\u3251":"21","\u3252":"22","\u3253":"23","\u3254":"24","\u3255":"25","\u3256":"26","\u3257":"27","\u3258":"28","\u3259":"29","\u325a":"30","\u325b":"31","\u325c":"32","\u325d":"33","\u325e":"34","\u325f":"35","\u3260":"\u1100","\u3261":"\u1102","\u3262":"\u1103","\u3263":"\u1105","\u3264":"\u1106","\u3265":"\u1107","\u3266":"\u1109",
"\u3267":"\u110b","\u3268":"\u110c","\u3269":"\u110e","\u326a":"\u110f","\u326b":"\u1110","\u326c":"\u1111","\u326d":"\u1112","\u326e":"\u1100\u1161","\u326f":"\u1102\u1161","\u3270":"\u1103\u1161","\u3271":"\u1105\u1161","\u3272":"\u1106\u1161","\u3273":"\u1107\u1161","\u3274":"\u1109\u1161","\u3275":"\u110b\u1161","\u3276":"\u110c\u1161","\u3277":"\u110e\u1161","\u3278":"\u110f\u1161","\u3279":"\u1110\u1161","\u327a":"\u1111\u1161","\u327b":"\u1112\u1161","\u327c":"\u110e\u1161\u11b7\u1100\u1169",
"\u327d":"\u110c\u116e\u110b\u1174","\u327e":"\u110b\u116e","\u3280":"\u4e00","\u3281":"\u4e8c","\u3282":"\u4e09","\u3283":"\u56db","\u3284":"\u4e94","\u3285":"\u516d","\u3286":"\u4e03","\u3287":"\u516b","\u3288":"\u4e5d","\u3289":"\u5341","\u328a":"\u6708","\u328b":"\u706b","\u328c":"\u6c34","\u328d":"\u6728","\u328e":"\u91d1","\u328f":"\u571f","\u3290":"\u65e5","\u3291":"\u682a","\u3292":"\u6709","\u3293":"\u793e","\u3294":"\u540d","\u3295":"\u7279","\u3296":"\u8ca1","\u3297":"\u795d","\u3298":"\u52b4",
"\u3299":"\u79d8","\u329a":"\u7537","\u329b":"\u5973","\u329c":"\u9069","\u329d":"\u512a","\u329e":"\u5370","\u329f":"\u6ce8","\u32a0":"\u9805","\u32a1":"\u4f11","\u32a2":"\u5199","\u32a3":"\u6b63","\u32a4":"\u4e0a","\u32a5":"\u4e2d","\u32a6":"\u4e0b","\u32a7":"\u5de6","\u32a8":"\u53f3","\u32a9":"\u533b","\u32aa":"\u5b97","\u32ab":"\u5b66","\u32ac":"\u76e3","\u32ad":"\u4f01","\u32ae":"\u8cc7","\u32af":"\u5354","\u32b0":"\u591c","\u32b1":"36","\u32b2":"37","\u32b3":"38","\u32b4":"39","\u32b5":"40",
"\u32b6":"41","\u32b7":"42","\u32b8":"43","\u32b9":"44","\u32ba":"45","\u32bb":"46","\u32bc":"47","\u32bd":"48","\u32be":"49","\u32bf":"50","\u32c0":"1\u6708","\u32c1":"2\u6708","\u32c2":"3\u6708","\u32c3":"4\u6708","\u32c4":"5\u6708","\u32c5":"6\u6708","\u32c6":"7\u6708","\u32c7":"8\u6708","\u32c8":"9\u6708","\u32c9":"10\u6708","\u32ca":"11\u6708","\u32cb":"12\u6708","\u32cc":"Hg","\u32cd":"erg","\u32ce":"eV","\u32cf":"LTD","\u32d0":"\u30a2","\u32d1":"\u30a4","\u32d2":"\u30a6","\u32d3":"\u30a8",
"\u32d4":"\u30aa","\u32d5":"\u30ab","\u32d6":"\u30ad","\u32d7":"\u30af","\u32d8":"\u30b1","\u32d9":"\u30b3","\u32da":"\u30b5","\u32db":"\u30b7","\u32dc":"\u30b9","\u32dd":"\u30bb","\u32de":"\u30bd","\u32df":"\u30bf","\u32e0":"\u30c1","\u32e1":"\u30c4","\u32e2":"\u30c6","\u32e3":"\u30c8","\u32e4":"\u30ca","\u32e5":"\u30cb","\u32e6":"\u30cc","\u32e7":"\u30cd","\u32e8":"\u30ce","\u32e9":"\u30cf","\u32ea":"\u30d2","\u32eb":"\u30d5","\u32ec":"\u30d8","\u32ed":"\u30db","\u32ee":"\u30de","\u32ef":"\u30df",
"\u32f0":"\u30e0","\u32f1":"\u30e1","\u32f2":"\u30e2","\u32f3":"\u30e4","\u32f4":"\u30e6","\u32f5":"\u30e8","\u32f6":"\u30e9","\u32f7":"\u30ea","\u32f8":"\u30eb","\u32f9":"\u30ec","\u32fa":"\u30ed","\u32fb":"\u30ef","\u32fc":"\u30f0","\u32fd":"\u30f1","\u32fe":"\u30f2","\u3300":"\u30a2\u30cf\u309a\u30fc\u30c8","\u3301":"\u30a2\u30eb\u30d5\u30a1","\u3302":"\u30a2\u30f3\u30d8\u309a\u30a2","\u3303":"\u30a2\u30fc\u30eb","\u3304":"\u30a4\u30cb\u30f3\u30af\u3099","\u3305":"\u30a4\u30f3\u30c1","\u3306":"\u30a6\u30a9\u30f3",
"\u3307":"\u30a8\u30b9\u30af\u30fc\u30c8\u3099","\u3308":"\u30a8\u30fc\u30ab\u30fc","\u3309":"\u30aa\u30f3\u30b9","\u330a":"\u30aa\u30fc\u30e0","\u330b":"\u30ab\u30a4\u30ea","\u330c":"\u30ab\u30e9\u30c3\u30c8","\u330d":"\u30ab\u30ed\u30ea\u30fc","\u330e":"\u30ab\u3099\u30ed\u30f3","\u330f":"\u30ab\u3099\u30f3\u30de","\u3310":"\u30ad\u3099\u30ab\u3099","\u3311":"\u30ad\u3099\u30cb\u30fc","\u3312":"\u30ad\u30e5\u30ea\u30fc","\u3313":"\u30ad\u3099\u30eb\u30bf\u3099\u30fc","\u3314":"\u30ad\u30ed","\u3315":"\u30ad\u30ed\u30af\u3099\u30e9\u30e0",
"\u3316":"\u30ad\u30ed\u30e1\u30fc\u30c8\u30eb","\u3317":"\u30ad\u30ed\u30ef\u30c3\u30c8","\u3318":"\u30af\u3099\u30e9\u30e0","\u3319":"\u30af\u3099\u30e9\u30e0\u30c8\u30f3","\u331a":"\u30af\u30eb\u30bb\u3099\u30a4\u30ed","\u331b":"\u30af\u30ed\u30fc\u30cd","\u331c":"\u30b1\u30fc\u30b9","\u331d":"\u30b3\u30eb\u30ca","\u331e":"\u30b3\u30fc\u30db\u309a","\u331f":"\u30b5\u30a4\u30af\u30eb","\u3320":"\u30b5\u30f3\u30c1\u30fc\u30e0","\u3321":"\u30b7\u30ea\u30f3\u30af\u3099","\u3322":"\u30bb\u30f3\u30c1",
"\u3323":"\u30bb\u30f3\u30c8","\u3324":"\u30bf\u3099\u30fc\u30b9","\u3325":"\u30c6\u3099\u30b7","\u3326":"\u30c8\u3099\u30eb","\u3327":"\u30c8\u30f3","\u3328":"\u30ca\u30ce","\u3329":"\u30ce\u30c3\u30c8","\u332a":"\u30cf\u30a4\u30c4","\u332b":"\u30cf\u309a\u30fc\u30bb\u30f3\u30c8","\u332c":"\u30cf\u309a\u30fc\u30c4","\u332d":"\u30cf\u3099\u30fc\u30ec\u30eb","\u332e":"\u30d2\u309a\u30a2\u30b9\u30c8\u30eb","\u332f":"\u30d2\u309a\u30af\u30eb","\u3330":"\u30d2\u309a\u30b3","\u3331":"\u30d2\u3099\u30eb",
"\u3332":"\u30d5\u30a1\u30e9\u30c3\u30c8\u3099","\u3333":"\u30d5\u30a3\u30fc\u30c8","\u3334":"\u30d5\u3099\u30c3\u30b7\u30a7\u30eb","\u3335":"\u30d5\u30e9\u30f3","\u3336":"\u30d8\u30af\u30bf\u30fc\u30eb","\u3337":"\u30d8\u309a\u30bd","\u3338":"\u30d8\u309a\u30cb\u30d2","\u3339":"\u30d8\u30eb\u30c4","\u333a":"\u30d8\u309a\u30f3\u30b9","\u333b":"\u30d8\u309a\u30fc\u30b7\u3099","\u333c":"\u30d8\u3099\u30fc\u30bf","\u333d":"\u30db\u309a\u30a4\u30f3\u30c8","\u333e":"\u30db\u3099\u30eb\u30c8","\u333f":"\u30db\u30f3",
"\u3340":"\u30db\u309a\u30f3\u30c8\u3099","\u3341":"\u30db\u30fc\u30eb","\u3342":"\u30db\u30fc\u30f3","\u3343":"\u30de\u30a4\u30af\u30ed","\u3344":"\u30de\u30a4\u30eb","\u3345":"\u30de\u30c3\u30cf","\u3346":"\u30de\u30eb\u30af","\u3347":"\u30de\u30f3\u30b7\u30e7\u30f3","\u3348":"\u30df\u30af\u30ed\u30f3","\u3349":"\u30df\u30ea","\u334a":"\u30df\u30ea\u30cf\u3099\u30fc\u30eb","\u334b":"\u30e1\u30ab\u3099","\u334c":"\u30e1\u30ab\u3099\u30c8\u30f3","\u334d":"\u30e1\u30fc\u30c8\u30eb","\u334e":"\u30e4\u30fc\u30c8\u3099",
"\u334f":"\u30e4\u30fc\u30eb","\u3350":"\u30e6\u30a2\u30f3","\u3351":"\u30ea\u30c3\u30c8\u30eb","\u3352":"\u30ea\u30e9","\u3353":"\u30eb\u30d2\u309a\u30fc","\u3354":"\u30eb\u30fc\u30d5\u3099\u30eb","\u3355":"\u30ec\u30e0","\u3356":"\u30ec\u30f3\u30c8\u30b1\u3099\u30f3","\u3357":"\u30ef\u30c3\u30c8","\u3358":"0\u70b9","\u3359":"1\u70b9","\u335a":"2\u70b9","\u335b":"3\u70b9","\u335c":"4\u70b9","\u335d":"5\u70b9","\u335e":"6\u70b9","\u335f":"7\u70b9","\u3360":"8\u70b9","\u3361":"9\u70b9","\u3362":"10\u70b9",
"\u3363":"11\u70b9","\u3364":"12\u70b9","\u3365":"13\u70b9","\u3366":"14\u70b9","\u3367":"15\u70b9","\u3368":"16\u70b9","\u3369":"17\u70b9","\u336a":"18\u70b9","\u336b":"19\u70b9","\u336c":"20\u70b9","\u336d":"21\u70b9","\u336e":"22\u70b9","\u336f":"23\u70b9","\u3370":"24\u70b9","\u3371":"hPa","\u3372":"da","\u3373":"AU","\u3374":"bar","\u3375":"oV","\u3376":"pc","\u3377":"dm","\u3378":"dm2","\u3379":"dm3","\u337a":"IU","\u337b":"\u5e73\u6210","\u337c":"\u662d\u548c","\u337d":"\u5927\u6b63","\u337e":"\u660e\u6cbb",
"\u337f":"\u682a\u5f0f\u4f1a\u793e","\u3380":"pA","\u3381":"nA","\u3382":"\u03bcA","\u3383":"mA","\u3384":"kA","\u3385":"KB","\u3386":"MB","\u3387":"GB","\u3388":"cal","\u3389":"kcal","\u338a":"pF","\u338b":"nF","\u338c":"\u03bcF","\u338d":"\u03bcg","\u338e":"mg","\u338f":"kg","\u3390":"Hz","\u3391":"kHz","\u3392":"MHz","\u3393":"GHz","\u3394":"THz","\u3395":"\u03bcl","\u3396":"ml","\u3397":"dl","\u3398":"kl","\u3399":"fm","\u339a":"nm","\u339b":"\u03bcm","\u339c":"mm","\u339d":"cm","\u339e":"km",
"\u339f":"mm2","\u33a0":"cm2","\u33a1":"m2","\u33a2":"km2","\u33a3":"mm3","\u33a4":"cm3","\u33a5":"m3","\u33a6":"km3","\u33a7":"m\u2215s","\u33a8":"m\u2215s2","\u33a9":"Pa","\u33aa":"kPa","\u33ab":"MPa","\u33ac":"GPa","\u33ad":"rad","\u33ae":"rad\u2215s","\u33af":"rad\u2215s2","\u33b0":"ps","\u33b1":"ns","\u33b2":"\u03bcs","\u33b3":"ms","\u33b4":"pV","\u33b5":"nV","\u33b6":"\u03bcV","\u33b7":"mV","\u33b8":"kV","\u33b9":"MV","\u33ba":"pW","\u33bb":"nW","\u33bc":"\u03bcW","\u33bd":"mW","\u33be":"kW",
"\u33bf":"MW","\u33c0":"k\u03a9","\u33c1":"M\u03a9","\u33c2":"a.m.","\u33c3":"Bq","\u33c4":"cc","\u33c5":"cd","\u33c6":"C\u2215kg","\u33c7":"Co.","\u33c8":"dB","\u33c9":"Gy","\u33ca":"ha","\u33cb":"HP","\u33cc":"in","\u33cd":"KK","\u33ce":"KM","\u33cf":"kt","\u33d0":"lm","\u33d1":"ln","\u33d2":"log","\u33d3":"lx","\u33d4":"mb","\u33d5":"mil","\u33d6":"mol","\u33d7":"PH","\u33d8":"p.m.","\u33d9":"PPM","\u33da":"PR","\u33db":"sr","\u33dc":"Sv","\u33dd":"Wb","\u33de":"V\u2215m","\u33df":"A\u2215m","\u33e0":"1\u65e5",
"\u33e1":"2\u65e5","\u33e2":"3\u65e5","\u33e3":"4\u65e5","\u33e4":"5\u65e5","\u33e5":"6\u65e5","\u33e6":"7\u65e5","\u33e7":"8\u65e5","\u33e8":"9\u65e5","\u33e9":"10\u65e5","\u33ea":"11\u65e5","\u33eb":"12\u65e5","\u33ec":"13\u65e5","\u33ed":"14\u65e5","\u33ee":"15\u65e5","\u33ef":"16\u65e5","\u33f0":"17\u65e5","\u33f1":"18\u65e5","\u33f2":"19\u65e5","\u33f3":"20\u65e5","\u33f4":"21\u65e5","\u33f5":"22\u65e5","\u33f6":"23\u65e5","\u33f7":"24\u65e5","\u33f8":"25\u65e5","\u33f9":"26\u65e5","\u33fa":"27\u65e5",
"\u33fb":"28\u65e5","\u33fc":"29\u65e5","\u33fd":"30\u65e5","\u33fe":"31\u65e5","\u33ff":"gal","\ua770":"\ua76f","\ua7f8":"\u0126","\ua7f9":"\u0153","\ufb00":"ff","\ufb01":"fi","\ufb02":"fl","\ufb03":"ffi","\ufb04":"ffl","\ufb05":"st","\ufb06":"st","\ufb13":"\u0574\u0576","\ufb14":"\u0574\u0565","\ufb15":"\u0574\u056b","\ufb16":"\u057e\u0576","\ufb17":"\u0574\u056d","\ufb20":"\u05e2","\ufb21":"\u05d0","\ufb22":"\u05d3","\ufb23":"\u05d4","\ufb24":"\u05db","\ufb25":"\u05dc","\ufb26":"\u05dd","\ufb27":"\u05e8",
"\ufb28":"\u05ea","\ufb29":"+","\ufb4f":"\u05d0\u05dc","\ufb50":"\u0671","\ufb51":"\u0671","\ufb52":"\u067b","\ufb53":"\u067b","\ufb54":"\u067b","\ufb55":"\u067b","\ufb56":"\u067e","\ufb57":"\u067e","\ufb58":"\u067e","\ufb59":"\u067e","\ufb5a":"\u0680","\ufb5b":"\u0680","\ufb5c":"\u0680","\ufb5d":"\u0680","\ufb5e":"\u067a","\ufb5f":"\u067a","\ufb60":"\u067a","\ufb61":"\u067a","\ufb62":"\u067f","\ufb63":"\u067f","\ufb64":"\u067f","\ufb65":"\u067f","\ufb66":"\u0679","\ufb67":"\u0679","\ufb68":"\u0679",
"\ufb69":"\u0679","\ufb6a":"\u06a4","\ufb6b":"\u06a4","\ufb6c":"\u06a4","\ufb6d":"\u06a4","\ufb6e":"\u06a6","\ufb6f":"\u06a6","\ufb70":"\u06a6","\ufb71":"\u06a6","\ufb72":"\u0684","\ufb73":"\u0684","\ufb74":"\u0684","\ufb75":"\u0684","\ufb76":"\u0683","\ufb77":"\u0683","\ufb78":"\u0683","\ufb79":"\u0683","\ufb7a":"\u0686","\ufb7b":"\u0686","\ufb7c":"\u0686","\ufb7d":"\u0686","\ufb7e":"\u0687","\ufb7f":"\u0687","\ufb80":"\u0687","\ufb81":"\u0687","\ufb82":"\u068d","\ufb83":"\u068d","\ufb84":"\u068c",
"\ufb85":"\u068c","\ufb86":"\u068e","\ufb87":"\u068e","\ufb88":"\u0688","\ufb89":"\u0688","\ufb8a":"\u0698","\ufb8b":"\u0698","\ufb8c":"\u0691","\ufb8d":"\u0691","\ufb8e":"\u06a9","\ufb8f":"\u06a9","\ufb90":"\u06a9","\ufb91":"\u06a9","\ufb92":"\u06af","\ufb93":"\u06af","\ufb94":"\u06af","\ufb95":"\u06af","\ufb96":"\u06b3","\ufb97":"\u06b3","\ufb98":"\u06b3","\ufb99":"\u06b3","\ufb9a":"\u06b1","\ufb9b":"\u06b1","\ufb9c":"\u06b1","\ufb9d":"\u06b1","\ufb9e":"\u06ba","\ufb9f":"\u06ba","\ufba0":"\u06bb",
"\ufba1":"\u06bb","\ufba2":"\u06bb","\ufba3":"\u06bb","\ufba4":"\u06d5\u0654","\ufba5":"\u06d5\u0654","\ufba6":"\u06c1","\ufba7":"\u06c1","\ufba8":"\u06c1","\ufba9":"\u06c1","\ufbaa":"\u06be","\ufbab":"\u06be","\ufbac":"\u06be","\ufbad":"\u06be","\ufbae":"\u06d2","\ufbaf":"\u06d2","\ufbb0":"\u06d2\u0654","\ufbb1":"\u06d2\u0654","\ufbd3":"\u06ad","\ufbd4":"\u06ad","\ufbd5":"\u06ad","\ufbd6":"\u06ad","\ufbd7":"\u06c7","\ufbd8":"\u06c7","\ufbd9":"\u06c6","\ufbda":"\u06c6","\ufbdb":"\u06c8","\ufbdc":"\u06c8",
"\ufbdd":"\u06c7\u0674","\ufbde":"\u06cb","\ufbdf":"\u06cb","\ufbe0":"\u06c5","\ufbe1":"\u06c5","\ufbe2":"\u06c9","\ufbe3":"\u06c9","\ufbe4":"\u06d0","\ufbe5":"\u06d0","\ufbe6":"\u06d0","\ufbe7":"\u06d0","\ufbe8":"\u0649","\ufbe9":"\u0649","\ufbea":"\u064a\u0654\u0627","\ufbeb":"\u064a\u0654\u0627","\ufbec":"\u064a\u0654\u06d5","\ufbed":"\u064a\u0654\u06d5","\ufbee":"\u064a\u0654\u0648","\ufbef":"\u064a\u0654\u0648","\ufbf0":"\u064a\u0654\u06c7","\ufbf1":"\u064a\u0654\u06c7","\ufbf2":"\u064a\u0654\u06c6",
"\ufbf3":"\u064a\u0654\u06c6","\ufbf4":"\u064a\u0654\u06c8","\ufbf5":"\u064a\u0654\u06c8","\ufbf6":"\u064a\u0654\u06d0","\ufbf7":"\u064a\u0654\u06d0","\ufbf8":"\u064a\u0654\u06d0","\ufbf9":"\u064a\u0654\u0649","\ufbfa":"\u064a\u0654\u0649","\ufbfb":"\u064a\u0654\u0649","\ufbfc":"\u06cc","\ufbfd":"\u06cc","\ufbfe":"\u06cc","\ufbff":"\u06cc","\ufc00":"\u064a\u0654\u062c","\ufc01":"\u064a\u0654\u062d","\ufc02":"\u064a\u0654\u0645","\ufc03":"\u064a\u0654\u0649","\ufc04":"\u064a\u0654\u064a","\ufc05":"\u0628\u062c",
"\ufc06":"\u0628\u062d","\ufc07":"\u0628\u062e","\ufc08":"\u0628\u0645","\ufc09":"\u0628\u0649","\ufc0a":"\u0628\u064a","\ufc0b":"\u062a\u062c","\ufc0c":"\u062a\u062d","\ufc0d":"\u062a\u062e","\ufc0e":"\u062a\u0645","\ufc0f":"\u062a\u0649","\ufc10":"\u062a\u064a","\ufc11":"\u062b\u062c","\ufc12":"\u062b\u0645","\ufc13":"\u062b\u0649","\ufc14":"\u062b\u064a","\ufc15":"\u062c\u062d","\ufc16":"\u062c\u0645","\ufc17":"\u062d\u062c","\ufc18":"\u062d\u0645","\ufc19":"\u062e\u062c","\ufc1a":"\u062e\u062d",
"\ufc1b":"\u062e\u0645","\ufc1c":"\u0633\u062c","\ufc1d":"\u0633\u062d","\ufc1e":"\u0633\u062e","\ufc1f":"\u0633\u0645","\ufc20":"\u0635\u062d","\ufc21":"\u0635\u0645","\ufc22":"\u0636\u062c","\ufc23":"\u0636\u062d","\ufc24":"\u0636\u062e","\ufc25":"\u0636\u0645","\ufc26":"\u0637\u062d","\ufc27":"\u0637\u0645","\ufc28":"\u0638\u0645","\ufc29":"\u0639\u062c","\ufc2a":"\u0639\u0645","\ufc2b":"\u063a\u062c","\ufc2c":"\u063a\u0645","\ufc2d":"\u0641\u062c","\ufc2e":"\u0641\u062d","\ufc2f":"\u0641\u062e",
"\ufc30":"\u0641\u0645","\ufc31":"\u0641\u0649","\ufc32":"\u0641\u064a","\ufc33":"\u0642\u062d","\ufc34":"\u0642\u0645","\ufc35":"\u0642\u0649","\ufc36":"\u0642\u064a","\ufc37":"\u0643\u0627","\ufc38":"\u0643\u062c","\ufc39":"\u0643\u062d","\ufc3a":"\u0643\u062e","\ufc3b":"\u0643\u0644","\ufc3c":"\u0643\u0645","\ufc3d":"\u0643\u0649","\ufc3e":"\u0643\u064a","\ufc3f":"\u0644\u062c","\ufc40":"\u0644\u062d","\ufc41":"\u0644\u062e","\ufc42":"\u0644\u0645","\ufc43":"\u0644\u0649","\ufc44":"\u0644\u064a",
"\ufc45":"\u0645\u062c","\ufc46":"\u0645\u062d","\ufc47":"\u0645\u062e","\ufc48":"\u0645\u0645","\ufc49":"\u0645\u0649","\ufc4a":"\u0645\u064a","\ufc4b":"\u0646\u062c","\ufc4c":"\u0646\u062d","\ufc4d":"\u0646\u062e","\ufc4e":"\u0646\u0645","\ufc4f":"\u0646\u0649","\ufc50":"\u0646\u064a","\ufc51":"\u0647\u062c","\ufc52":"\u0647\u0645","\ufc53":"\u0647\u0649","\ufc54":"\u0647\u064a","\ufc55":"\u064a\u062c","\ufc56":"\u064a\u062d","\ufc57":"\u064a\u062e","\ufc58":"\u064a\u0645","\ufc59":"\u064a\u0649",
"\ufc5a":"\u064a\u064a","\ufc5b":"\u0630\u0670","\ufc5c":"\u0631\u0670","\ufc5d":"\u0649\u0670","\ufc5e":" \u064c\u0651","\ufc5f":" \u064d\u0651","\ufc60":" \u064e\u0651","\ufc61":" \u064f\u0651","\ufc62":" \u0650\u0651","\ufc63":" \u0651\u0670","\ufc64":"\u064a\u0654\u0631","\ufc65":"\u064a\u0654\u0632","\ufc66":"\u064a\u0654\u0645","\ufc67":"\u064a\u0654\u0646","\ufc68":"\u064a\u0654\u0649","\ufc69":"\u064a\u0654\u064a","\ufc6a":"\u0628\u0631","\ufc6b":"\u0628\u0632","\ufc6c":"\u0628\u0645","\ufc6d":"\u0628\u0646",
"\ufc6e":"\u0628\u0649","\ufc6f":"\u0628\u064a","\ufc70":"\u062a\u0631","\ufc71":"\u062a\u0632","\ufc72":"\u062a\u0645","\ufc73":"\u062a\u0646","\ufc74":"\u062a\u0649","\ufc75":"\u062a\u064a","\ufc76":"\u062b\u0631","\ufc77":"\u062b\u0632","\ufc78":"\u062b\u0645","\ufc79":"\u062b\u0646","\ufc7a":"\u062b\u0649","\ufc7b":"\u062b\u064a","\ufc7c":"\u0641\u0649","\ufc7d":"\u0641\u064a","\ufc7e":"\u0642\u0649","\ufc7f":"\u0642\u064a","\ufc80":"\u0643\u0627","\ufc81":"\u0643\u0644","\ufc82":"\u0643\u0645",
"\ufc83":"\u0643\u0649","\ufc84":"\u0643\u064a","\ufc85":"\u0644\u0645","\ufc86":"\u0644\u0649","\ufc87":"\u0644\u064a","\ufc88":"\u0645\u0627","\ufc89":"\u0645\u0645","\ufc8a":"\u0646\u0631","\ufc8b":"\u0646\u0632","\ufc8c":"\u0646\u0645","\ufc8d":"\u0646\u0646","\ufc8e":"\u0646\u0649","\ufc8f":"\u0646\u064a","\ufc90":"\u0649\u0670","\ufc91":"\u064a\u0631","\ufc92":"\u064a\u0632","\ufc93":"\u064a\u0645","\ufc94":"\u064a\u0646","\ufc95":"\u064a\u0649","\ufc96":"\u064a\u064a","\ufc97":"\u064a\u0654\u062c",
"\ufc98":"\u064a\u0654\u062d","\ufc99":"\u064a\u0654\u062e","\ufc9a":"\u064a\u0654\u0645","\ufc9b":"\u064a\u0654\u0647","\ufc9c":"\u0628\u062c","\ufc9d":"\u0628\u062d","\ufc9e":"\u0628\u062e","\ufc9f":"\u0628\u0645","\ufca0":"\u0628\u0647","\ufca1":"\u062a\u062c","\ufca2":"\u062a\u062d","\ufca3":"\u062a\u062e","\ufca4":"\u062a\u0645","\ufca5":"\u062a\u0647","\ufca6":"\u062b\u0645","\ufca7":"\u062c\u062d","\ufca8":"\u062c\u0645","\ufca9":"\u062d\u062c","\ufcaa":"\u062d\u0645","\ufcab":"\u062e\u062c",
"\ufcac":"\u062e\u0645","\ufcad":"\u0633\u062c","\ufcae":"\u0633\u062d","\ufcaf":"\u0633\u062e","\ufcb0":"\u0633\u0645","\ufcb1":"\u0635\u062d","\ufcb2":"\u0635\u062e","\ufcb3":"\u0635\u0645","\ufcb4":"\u0636\u062c","\ufcb5":"\u0636\u062d","\ufcb6":"\u0636\u062e","\ufcb7":"\u0636\u0645","\ufcb8":"\u0637\u062d","\ufcb9":"\u0638\u0645","\ufcba":"\u0639\u062c","\ufcbb":"\u0639\u0645","\ufcbc":"\u063a\u062c","\ufcbd":"\u063a\u0645","\ufcbe":"\u0641\u062c","\ufcbf":"\u0641\u062d","\ufcc0":"\u0641\u062e",
"\ufcc1":"\u0641\u0645","\ufcc2":"\u0642\u062d","\ufcc3":"\u0642\u0645","\ufcc4":"\u0643\u062c","\ufcc5":"\u0643\u062d","\ufcc6":"\u0643\u062e","\ufcc7":"\u0643\u0644","\ufcc8":"\u0643\u0645","\ufcc9":"\u0644\u062c","\ufcca":"\u0644\u062d","\ufccb":"\u0644\u062e","\ufccc":"\u0644\u0645","\ufccd":"\u0644\u0647","\ufcce":"\u0645\u062c","\ufccf":"\u0645\u062d","\ufcd0":"\u0645\u062e","\ufcd1":"\u0645\u0645","\ufcd2":"\u0646\u062c","\ufcd3":"\u0646\u062d","\ufcd4":"\u0646\u062e","\ufcd5":"\u0646\u0645",
"\ufcd6":"\u0646\u0647","\ufcd7":"\u0647\u062c","\ufcd8":"\u0647\u0645","\ufcd9":"\u0647\u0670","\ufcda":"\u064a\u062c","\ufcdb":"\u064a\u062d","\ufcdc":"\u064a\u062e","\ufcdd":"\u064a\u0645","\ufcde":"\u064a\u0647","\ufcdf":"\u064a\u0654\u0645","\ufce0":"\u064a\u0654\u0647","\ufce1":"\u0628\u0645","\ufce2":"\u0628\u0647","\ufce3":"\u062a\u0645","\ufce4":"\u062a\u0647","\ufce5":"\u062b\u0645","\ufce6":"\u062b\u0647","\ufce7":"\u0633\u0645","\ufce8":"\u0633\u0647","\ufce9":"\u0634\u0645","\ufcea":"\u0634\u0647",
"\ufceb":"\u0643\u0644","\ufcec":"\u0643\u0645","\ufced":"\u0644\u0645","\ufcee":"\u0646\u0645","\ufcef":"\u0646\u0647","\ufcf0":"\u064a\u0645","\ufcf1":"\u064a\u0647","\ufcf2":"\u0640\u064e\u0651","\ufcf3":"\u0640\u064f\u0651","\ufcf4":"\u0640\u0650\u0651","\ufcf5":"\u0637\u0649","\ufcf6":"\u0637\u064a","\ufcf7":"\u0639\u0649","\ufcf8":"\u0639\u064a","\ufcf9":"\u063a\u0649","\ufcfa":"\u063a\u064a","\ufcfb":"\u0633\u0649","\ufcfc":"\u0633\u064a","\ufcfd":"\u0634\u0649","\ufcfe":"\u0634\u064a","\ufcff":"\u062d\u0649",
"\ufd00":"\u062d\u064a","\ufd01":"\u062c\u0649","\ufd02":"\u062c\u064a","\ufd03":"\u062e\u0649","\ufd04":"\u062e\u064a","\ufd05":"\u0635\u0649","\ufd06":"\u0635\u064a","\ufd07":"\u0636\u0649","\ufd08":"\u0636\u064a","\ufd09":"\u0634\u062c","\ufd0a":"\u0634\u062d","\ufd0b":"\u0634\u062e","\ufd0c":"\u0634\u0645","\ufd0d":"\u0634\u0631","\ufd0e":"\u0633\u0631","\ufd0f":"\u0635\u0631","\ufd10":"\u0636\u0631","\ufd11":"\u0637\u0649","\ufd12":"\u0637\u064a","\ufd13":"\u0639\u0649","\ufd14":"\u0639\u064a",
"\ufd15":"\u063a\u0649","\ufd16":"\u063a\u064a","\ufd17":"\u0633\u0649","\ufd18":"\u0633\u064a","\ufd19":"\u0634\u0649","\ufd1a":"\u0634\u064a","\ufd1b":"\u062d\u0649","\ufd1c":"\u062d\u064a","\ufd1d":"\u062c\u0649","\ufd1e":"\u062c\u064a","\ufd1f":"\u062e\u0649","\ufd20":"\u062e\u064a","\ufd21":"\u0635\u0649","\ufd22":"\u0635\u064a","\ufd23":"\u0636\u0649","\ufd24":"\u0636\u064a","\ufd25":"\u0634\u062c","\ufd26":"\u0634\u062d","\ufd27":"\u0634\u062e","\ufd28":"\u0634\u0645","\ufd29":"\u0634\u0631",
"\ufd2a":"\u0633\u0631","\ufd2b":"\u0635\u0631","\ufd2c":"\u0636\u0631","\ufd2d":"\u0634\u062c","\ufd2e":"\u0634\u062d","\ufd2f":"\u0634\u062e","\ufd30":"\u0634\u0645","\ufd31":"\u0633\u0647","\ufd32":"\u0634\u0647","\ufd33":"\u0637\u0645","\ufd34":"\u0633\u062c","\ufd35":"\u0633\u062d","\ufd36":"\u0633\u062e","\ufd37":"\u0634\u062c","\ufd38":"\u0634\u062d","\ufd39":"\u0634\u062e","\ufd3a":"\u0637\u0645","\ufd3b":"\u0638\u0645","\ufd3c":"\u0627\u064b","\ufd3d":"\u0627\u064b","\ufd50":"\u062a\u062c\u0645",
"\ufd51":"\u062a\u062d\u062c","\ufd52":"\u062a\u062d\u062c","\ufd53":"\u062a\u062d\u0645","\ufd54":"\u062a\u062e\u0645","\ufd55":"\u062a\u0645\u062c","\ufd56":"\u062a\u0645\u062d","\ufd57":"\u062a\u0645\u062e","\ufd58":"\u062c\u0645\u062d","\ufd59":"\u062c\u0645\u062d","\ufd5a":"\u062d\u0645\u064a","\ufd5b":"\u062d\u0645\u0649","\ufd5c":"\u0633\u062d\u062c","\ufd5d":"\u0633\u062c\u062d","\ufd5e":"\u0633\u062c\u0649","\ufd5f":"\u0633\u0645\u062d","\ufd60":"\u0633\u0645\u062d","\ufd61":"\u0633\u0645\u062c",
"\ufd62":"\u0633\u0645\u0645","\ufd63":"\u0633\u0645\u0645","\ufd64":"\u0635\u062d\u062d","\ufd65":"\u0635\u062d\u062d","\ufd66":"\u0635\u0645\u0645","\ufd67":"\u0634\u062d\u0645","\ufd68":"\u0634\u062d\u0645","\ufd69":"\u0634\u062c\u064a","\ufd6a":"\u0634\u0645\u062e","\ufd6b":"\u0634\u0645\u062e","\ufd6c":"\u0634\u0645\u0645","\ufd6d":"\u0634\u0645\u0645","\ufd6e":"\u0636\u062d\u0649","\ufd6f":"\u0636\u062e\u0645","\ufd70":"\u0636\u062e\u0645","\ufd71":"\u0637\u0645\u062d","\ufd72":"\u0637\u0645\u062d",
"\ufd73":"\u0637\u0645\u0645","\ufd74":"\u0637\u0645\u064a","\ufd75":"\u0639\u062c\u0645","\ufd76":"\u0639\u0645\u0645","\ufd77":"\u0639\u0645\u0645","\ufd78":"\u0639\u0645\u0649","\ufd79":"\u063a\u0645\u0645","\ufd7a":"\u063a\u0645\u064a","\ufd7b":"\u063a\u0645\u0649","\ufd7c":"\u0641\u062e\u0645","\ufd7d":"\u0641\u062e\u0645","\ufd7e":"\u0642\u0645\u062d","\ufd7f":"\u0642\u0645\u0645","\ufd80":"\u0644\u062d\u0645","\ufd81":"\u0644\u062d\u064a","\ufd82":"\u0644\u062d\u0649","\ufd83":"\u0644\u062c\u062c",
"\ufd84":"\u0644\u062c\u062c","\ufd85":"\u0644\u062e\u0645","\ufd86":"\u0644\u062e\u0645","\ufd87":"\u0644\u0645\u062d","\ufd88":"\u0644\u0645\u062d","\ufd89":"\u0645\u062d\u062c","\ufd8a":"\u0645\u062d\u0645","\ufd8b":"\u0645\u062d\u064a","\ufd8c":"\u0645\u062c\u062d","\ufd8d":"\u0645\u062c\u0645","\ufd8e":"\u0645\u062e\u062c","\ufd8f":"\u0645\u062e\u0645","\ufd92":"\u0645\u062c\u062e","\ufd93":"\u0647\u0645\u062c","\ufd94":"\u0647\u0645\u0645","\ufd95":"\u0646\u062d\u0645","\ufd96":"\u0646\u062d\u0649",
"\ufd97":"\u0646\u062c\u0645","\ufd98":"\u0646\u062c\u0645","\ufd99":"\u0646\u062c\u0649","\ufd9a":"\u0646\u0645\u064a","\ufd9b":"\u0646\u0645\u0649","\ufd9c":"\u064a\u0645\u0645","\ufd9d":"\u064a\u0645\u0645","\ufd9e":"\u0628\u062e\u064a","\ufd9f":"\u062a\u062c\u064a","\ufda0":"\u062a\u062c\u0649","\ufda1":"\u062a\u062e\u064a","\ufda2":"\u062a\u062e\u0649","\ufda3":"\u062a\u0645\u064a","\ufda4":"\u062a\u0645\u0649","\ufda5":"\u062c\u0645\u064a","\ufda6":"\u062c\u062d\u0649","\ufda7":"\u062c\u0645\u0649",
"\ufda8":"\u0633\u062e\u0649","\ufda9":"\u0635\u062d\u064a","\ufdaa":"\u0634\u062d\u064a","\ufdab":"\u0636\u062d\u064a","\ufdac":"\u0644\u062c\u064a","\ufdad":"\u0644\u0645\u064a","\ufdae":"\u064a\u062d\u064a","\ufdaf":"\u064a\u062c\u064a","\ufdb0":"\u064a\u0645\u064a","\ufdb1":"\u0645\u0645\u064a","\ufdb2":"\u0642\u0645\u064a","\ufdb3":"\u0646\u062d\u064a","\ufdb4":"\u0642\u0645\u062d","\ufdb5":"\u0644\u062d\u0645","\ufdb6":"\u0639\u0645\u064a","\ufdb7":"\u0643\u0645\u064a","\ufdb8":"\u0646\u062c\u062d",
"\ufdb9":"\u0645\u062e\u064a","\ufdba":"\u0644\u062c\u0645","\ufdbb":"\u0643\u0645\u0645","\ufdbc":"\u0644\u062c\u0645","\ufdbd":"\u0646\u062c\u062d","\ufdbe":"\u062c\u062d\u064a","\ufdbf":"\u062d\u062c\u064a","\ufdc0":"\u0645\u062c\u064a","\ufdc1":"\u0641\u0645\u064a","\ufdc2":"\u0628\u062d\u064a","\ufdc3":"\u0643\u0645\u0645","\ufdc4":"\u0639\u062c\u0645","\ufdc5":"\u0635\u0645\u0645","\ufdc6":"\u0633\u062e\u064a","\ufdc7":"\u0646\u062c\u064a","\ufdf0":"\u0635\u0644\u06d2","\ufdf1":"\u0642\u0644\u06d2",
"\ufdf2":"\u0627\u0644\u0644\u0647","\ufdf3":"\u0627\u0643\u0628\u0631","\ufdf4":"\u0645\u062d\u0645\u062f","\ufdf5":"\u0635\u0644\u0639\u0645","\ufdf6":"\u0631\u0633\u0648\u0644","\ufdf7":"\u0639\u0644\u064a\u0647","\ufdf8":"\u0648\u0633\u0644\u0645","\ufdf9":"\u0635\u0644\u0649","\ufdfa":"\u0635\u0644\u0649 \u0627\u0644\u0644\u0647 \u0639\u0644\u064a\u0647 \u0648\u0633\u0644\u0645","\ufdfb":"\u062c\u0644 \u062c\u0644\u0627\u0644\u0647","\ufdfc":"\u0631\u06cc\u0627\u0644","\ufe10":",","\ufe11":"\u3001",
"\ufe12":"\u3002","\ufe13":":","\ufe14":";","\ufe15":"!","\ufe16":"?","\ufe17":"\u3016","\ufe18":"\u3017","\ufe19":"...","\ufe30":"..","\ufe31":"\u2014","\ufe32":"\u2013","\ufe33":"_","\ufe34":"_","\ufe35":"(","\ufe36":")","\ufe37":"{","\ufe38":"}","\ufe39":"\u3014","\ufe3a":"\u3015","\ufe3b":"\u3010","\ufe3c":"\u3011","\ufe3d":"\u300a","\ufe3e":"\u300b","\ufe3f":"\u3008","\ufe40":"\u3009","\ufe41":"\u300c","\ufe42":"\u300d","\ufe43":"\u300e","\ufe44":"\u300f","\ufe47":"[","\ufe48":"]","\ufe49":" \u0305",
"\ufe4a":" \u0305","\ufe4b":" \u0305","\ufe4c":" \u0305","\ufe4d":"_","\ufe4e":"_","\ufe4f":"_","\ufe50":",","\ufe51":"\u3001","\ufe52":".","\ufe54":";","\ufe55":":","\ufe56":"?","\ufe57":"!","\ufe58":"\u2014","\ufe59":"(","\ufe5a":")","\ufe5b":"{","\ufe5c":"}","\ufe5d":"\u3014","\ufe5e":"\u3015","\ufe5f":"#","\ufe60":"&","\ufe61":"*","\ufe62":"+","\ufe63":"-","\ufe64":"<","\ufe65":">","\ufe66":"=","\ufe68":"\\","\ufe69":"$","\ufe6a":"%","\ufe6b":"@","\ufe70":" \u064b","\ufe71":"\u0640\u064b","\ufe72":" \u064c",
"\ufe74":" \u064d","\ufe76":" \u064e","\ufe77":"\u0640\u064e","\ufe78":" \u064f","\ufe79":"\u0640\u064f","\ufe7a":" \u0650","\ufe7b":"\u0640\u0650","\ufe7c":" \u0651","\ufe7d":"\u0640\u0651","\ufe7e":" \u0652","\ufe7f":"\u0640\u0652","\ufe80":"\u0621","\ufe81":"\u0627\u0653","\ufe82":"\u0627\u0653","\ufe83":"\u0627\u0654","\ufe84":"\u0627\u0654","\ufe85":"\u0648\u0654","\ufe86":"\u0648\u0654","\ufe87":"\u0627\u0655","\ufe88":"\u0627\u0655","\ufe89":"\u064a\u0654","\ufe8a":"\u064a\u0654","\ufe8b":"\u064a\u0654",
"\ufe8c":"\u064a\u0654","\ufe8d":"\u0627","\ufe8e":"\u0627","\ufe8f":"\u0628","\ufe90":"\u0628","\ufe91":"\u0628","\ufe92":"\u0628","\ufe93":"\u0629","\ufe94":"\u0629","\ufe95":"\u062a","\ufe96":"\u062a","\ufe97":"\u062a","\ufe98":"\u062a","\ufe99":"\u062b","\ufe9a":"\u062b","\ufe9b":"\u062b","\ufe9c":"\u062b","\ufe9d":"\u062c","\ufe9e":"\u062c","\ufe9f":"\u062c","\ufea0":"\u062c","\ufea1":"\u062d","\ufea2":"\u062d","\ufea3":"\u062d","\ufea4":"\u062d","\ufea5":"\u062e","\ufea6":"\u062e","\ufea7":"\u062e",
"\ufea8":"\u062e","\ufea9":"\u062f","\ufeaa":"\u062f","\ufeab":"\u0630","\ufeac":"\u0630","\ufead":"\u0631","\ufeae":"\u0631","\ufeaf":"\u0632","\ufeb0":"\u0632","\ufeb1":"\u0633","\ufeb2":"\u0633","\ufeb3":"\u0633","\ufeb4":"\u0633","\ufeb5":"\u0634","\ufeb6":"\u0634","\ufeb7":"\u0634","\ufeb8":"\u0634","\ufeb9":"\u0635","\ufeba":"\u0635","\ufebb":"\u0635","\ufebc":"\u0635","\ufebd":"\u0636","\ufebe":"\u0636","\ufebf":"\u0636","\ufec0":"\u0636","\ufec1":"\u0637","\ufec2":"\u0637","\ufec3":"\u0637",
"\ufec4":"\u0637","\ufec5":"\u0638","\ufec6":"\u0638","\ufec7":"\u0638","\ufec8":"\u0638","\ufec9":"\u0639","\ufeca":"\u0639","\ufecb":"\u0639","\ufecc":"\u0639","\ufecd":"\u063a","\ufece":"\u063a","\ufecf":"\u063a","\ufed0":"\u063a","\ufed1":"\u0641","\ufed2":"\u0641","\ufed3":"\u0641","\ufed4":"\u0641","\ufed5":"\u0642","\ufed6":"\u0642","\ufed7":"\u0642","\ufed8":"\u0642","\ufed9":"\u0643","\ufeda":"\u0643","\ufedb":"\u0643","\ufedc":"\u0643","\ufedd":"\u0644","\ufede":"\u0644","\ufedf":"\u0644",
"\ufee0":"\u0644","\ufee1":"\u0645","\ufee2":"\u0645","\ufee3":"\u0645","\ufee4":"\u0645","\ufee5":"\u0646","\ufee6":"\u0646","\ufee7":"\u0646","\ufee8":"\u0646","\ufee9":"\u0647","\ufeea":"\u0647","\ufeeb":"\u0647","\ufeec":"\u0647","\ufeed":"\u0648","\ufeee":"\u0648","\ufeef":"\u0649","\ufef0":"\u0649","\ufef1":"\u064a","\ufef2":"\u064a","\ufef3":"\u064a","\ufef4":"\u064a","\ufef5":"\u0644\u0627\u0653","\ufef6":"\u0644\u0627\u0653","\ufef7":"\u0644\u0627\u0654","\ufef8":"\u0644\u0627\u0654","\ufef9":"\u0644\u0627\u0655",
"\ufefa":"\u0644\u0627\u0655","\ufefb":"\u0644\u0627","\ufefc":"\u0644\u0627","\uff01":"!","\uff02":'"',"\uff03":"#","\uff04":"$","\uff05":"%","\uff06":"&","\uff07":"'","\uff08":"(","\uff09":")","\uff0a":"*","\uff0b":"+","\uff0c":",","\uff0d":"-","\uff0e":".","\uff0f":"/","\uff10":"0","\uff11":"1","\uff12":"2","\uff13":"3","\uff14":"4","\uff15":"5","\uff16":"6","\uff17":"7","\uff18":"8","\uff19":"9","\uff1a":":","\uff1b":";","\uff1c":"<","\uff1d":"=","\uff1e":">","\uff1f":"?","\uff20":"@","\uff21":"A",
"\uff22":"B","\uff23":"C","\uff24":"D","\uff25":"E","\uff26":"F","\uff27":"G","\uff28":"H","\uff29":"I","\uff2a":"J","\uff2b":"K","\uff2c":"L","\uff2d":"M","\uff2e":"N","\uff2f":"O","\uff30":"P","\uff31":"Q","\uff32":"R","\uff33":"S","\uff34":"T","\uff35":"U","\uff36":"V","\uff37":"W","\uff38":"X","\uff39":"Y","\uff3a":"Z","\uff3b":"[","\uff3c":"\\","\uff3d":"]","\uff3e":"^","\uff3f":"_","\uff40":"`","\uff41":"a","\uff42":"b","\uff43":"c","\uff44":"d","\uff45":"e","\uff46":"f","\uff47":"g","\uff48":"h",
"\uff49":"i","\uff4a":"j","\uff4b":"k","\uff4c":"l","\uff4d":"m","\uff4e":"n","\uff4f":"o","\uff50":"p","\uff51":"q","\uff52":"r","\uff53":"s","\uff54":"t","\uff55":"u","\uff56":"v","\uff57":"w","\uff58":"x","\uff59":"y","\uff5a":"z","\uff5b":"{","\uff5c":"|","\uff5d":"}","\uff5e":"~","\uff5f":"\u2985","\uff60":"\u2986","\uff61":"\u3002","\uff62":"\u300c","\uff63":"\u300d","\uff64":"\u3001","\uff65":"\u30fb","\uff66":"\u30f2","\uff67":"\u30a1","\uff68":"\u30a3","\uff69":"\u30a5","\uff6a":"\u30a7",
"\uff6b":"\u30a9","\uff6c":"\u30e3","\uff6d":"\u30e5","\uff6e":"\u30e7","\uff6f":"\u30c3","\uff70":"\u30fc","\uff71":"\u30a2","\uff72":"\u30a4","\uff73":"\u30a6","\uff74":"\u30a8","\uff75":"\u30aa","\uff76":"\u30ab","\uff77":"\u30ad","\uff78":"\u30af","\uff79":"\u30b1","\uff7a":"\u30b3","\uff7b":"\u30b5","\uff7c":"\u30b7","\uff7d":"\u30b9","\uff7e":"\u30bb","\uff7f":"\u30bd","\uff80":"\u30bf","\uff81":"\u30c1","\uff82":"\u30c4","\uff83":"\u30c6","\uff84":"\u30c8","\uff85":"\u30ca","\uff86":"\u30cb",
"\uff87":"\u30cc","\uff88":"\u30cd","\uff89":"\u30ce","\uff8a":"\u30cf","\uff8b":"\u30d2","\uff8c":"\u30d5","\uff8d":"\u30d8","\uff8e":"\u30db","\uff8f":"\u30de","\uff90":"\u30df","\uff91":"\u30e0","\uff92":"\u30e1","\uff93":"\u30e2","\uff94":"\u30e4","\uff95":"\u30e6","\uff96":"\u30e8","\uff97":"\u30e9","\uff98":"\u30ea","\uff99":"\u30eb","\uff9a":"\u30ec","\uff9b":"\u30ed","\uff9c":"\u30ef","\uff9d":"\u30f3","\uff9e":"\u3099","\uff9f":"\u309a","\uffa0":"\u1160","\uffa1":"\u1100","\uffa2":"\u1101",
"\uffa3":"\u11aa","\uffa4":"\u1102","\uffa5":"\u11ac","\uffa6":"\u11ad","\uffa7":"\u1103","\uffa8":"\u1104","\uffa9":"\u1105","\uffaa":"\u11b0","\uffab":"\u11b1","\uffac":"\u11b2","\uffad":"\u11b3","\uffae":"\u11b4","\uffaf":"\u11b5","\uffb0":"\u111a","\uffb1":"\u1106","\uffb2":"\u1107","\uffb3":"\u1108","\uffb4":"\u1121","\uffb5":"\u1109","\uffb6":"\u110a","\uffb7":"\u110b","\uffb8":"\u110c","\uffb9":"\u110d","\uffba":"\u110e","\uffbb":"\u110f","\uffbc":"\u1110","\uffbd":"\u1111","\uffbe":"\u1112",
"\uffc2":"\u1161","\uffc3":"\u1162","\uffc4":"\u1163","\uffc5":"\u1164","\uffc6":"\u1165","\uffc7":"\u1166","\uffca":"\u1167","\uffcb":"\u1168","\uffcc":"\u1169","\uffcd":"\u116a","\uffce":"\u116b","\uffcf":"\u116c","\uffd2":"\u116d","\uffd3":"\u116e","\uffd4":"\u116f","\uffd5":"\u1170","\uffd6":"\u1171","\uffd7":"\u1172","\uffda":"\u1173","\uffdb":"\u1174","\uffdc":"\u1175","\uffe0":"\u00a2","\uffe1":"\u00a3","\uffe2":"\u00ac","\uffe3":" \u0304","\uffe4":"\u00a6","\uffe5":"\u00a5","\uffe6":"\u20a9",
"\uffe8":"\u2502","\uffe9":"\u2190","\uffea":"\u2191","\uffeb":"\u2192","\uffec":"\u2193","\uffed":"\u25a0","\uffee":"\u25cb","\ud835\udc00":"A","\ud835\udc01":"B","\ud835\udc02":"C","\ud835\udc03":"D","\ud835\udc04":"E","\ud835\udc05":"F","\ud835\udc06":"G","\ud835\udc07":"H","\ud835\udc08":"I","\ud835\udc09":"J","\ud835\udc0a":"K","\ud835\udc0b":"L","\ud835\udc0c":"M","\ud835\udc0d":"N","\ud835\udc0e":"O","\ud835\udc0f":"P","\ud835\udc10":"Q","\ud835\udc11":"R","\ud835\udc12":"S","\ud835\udc13":"T",
"\ud835\udc14":"U","\ud835\udc15":"V","\ud835\udc16":"W","\ud835\udc17":"X","\ud835\udc18":"Y","\ud835\udc19":"Z","\ud835\udc1a":"a","\ud835\udc1b":"b","\ud835\udc1c":"c","\ud835\udc1d":"d","\ud835\udc1e":"e","\ud835\udc1f":"f","\ud835\udc20":"g","\ud835\udc21":"h","\ud835\udc22":"i","\ud835\udc23":"j","\ud835\udc24":"k","\ud835\udc25":"l","\ud835\udc26":"m","\ud835\udc27":"n","\ud835\udc28":"o","\ud835\udc29":"p","\ud835\udc2a":"q","\ud835\udc2b":"r","\ud835\udc2c":"s","\ud835\udc2d":"t","\ud835\udc2e":"u",
"\ud835\udc2f":"v","\ud835\udc30":"w","\ud835\udc31":"x","\ud835\udc32":"y","\ud835\udc33":"z","\ud835\udc34":"A","\ud835\udc35":"B","\ud835\udc36":"C","\ud835\udc37":"D","\ud835\udc38":"E","\ud835\udc39":"F","\ud835\udc3a":"G","\ud835\udc3b":"H","\ud835\udc3c":"I","\ud835\udc3d":"J","\ud835\udc3e":"K","\ud835\udc3f":"L","\ud835\udc40":"M","\ud835\udc41":"N","\ud835\udc42":"O","\ud835\udc43":"P","\ud835\udc44":"Q","\ud835\udc45":"R","\ud835\udc46":"S","\ud835\udc47":"T","\ud835\udc48":"U","\ud835\udc49":"V",
"\ud835\udc4a":"W","\ud835\udc4b":"X","\ud835\udc4c":"Y","\ud835\udc4d":"Z","\ud835\udc4e":"a","\ud835\udc4f":"b","\ud835\udc50":"c","\ud835\udc51":"d","\ud835\udc52":"e","\ud835\udc53":"f","\ud835\udc54":"g","\ud835\udc56":"i","\ud835\udc57":"j","\ud835\udc58":"k","\ud835\udc59":"l","\ud835\udc5a":"m","\ud835\udc5b":"n","\ud835\udc5c":"o","\ud835\udc5d":"p","\ud835\udc5e":"q","\ud835\udc5f":"r","\ud835\udc60":"s","\ud835\udc61":"t","\ud835\udc62":"u","\ud835\udc63":"v","\ud835\udc64":"w","\ud835\udc65":"x",
"\ud835\udc66":"y","\ud835\udc67":"z","\ud835\udc68":"A","\ud835\udc69":"B","\ud835\udc6a":"C","\ud835\udc6b":"D","\ud835\udc6c":"E","\ud835\udc6d":"F","\ud835\udc6e":"G","\ud835\udc6f":"H","\ud835\udc70":"I","\ud835\udc71":"J","\ud835\udc72":"K","\ud835\udc73":"L","\ud835\udc74":"M","\ud835\udc75":"N","\ud835\udc76":"O","\ud835\udc77":"P","\ud835\udc78":"Q","\ud835\udc79":"R","\ud835\udc7a":"S","\ud835\udc7b":"T","\ud835\udc7c":"U","\ud835\udc7d":"V","\ud835\udc7e":"W","\ud835\udc7f":"X","\ud835\udc80":"Y",
"\ud835\udc81":"Z","\ud835\udc82":"a","\ud835\udc83":"b","\ud835\udc84":"c","\ud835\udc85":"d","\ud835\udc86":"e","\ud835\udc87":"f","\ud835\udc88":"g","\ud835\udc89":"h","\ud835\udc8a":"i","\ud835\udc8b":"j","\ud835\udc8c":"k","\ud835\udc8d":"l","\ud835\udc8e":"m","\ud835\udc8f":"n","\ud835\udc90":"o","\ud835\udc91":"p","\ud835\udc92":"q","\ud835\udc93":"r","\ud835\udc94":"s","\ud835\udc95":"t","\ud835\udc96":"u","\ud835\udc97":"v","\ud835\udc98":"w","\ud835\udc99":"x","\ud835\udc9a":"y","\ud835\udc9b":"z",
"\ud835\udc9c":"A","\ud835\udc9e":"C","\ud835\udc9f":"D","\ud835\udca2":"G","\ud835\udca5":"J","\ud835\udca6":"K","\ud835\udca9":"N","\ud835\udcaa":"O","\ud835\udcab":"P","\ud835\udcac":"Q","\ud835\udcae":"S","\ud835\udcaf":"T","\ud835\udcb0":"U","\ud835\udcb1":"V","\ud835\udcb2":"W","\ud835\udcb3":"X","\ud835\udcb4":"Y","\ud835\udcb5":"Z","\ud835\udcb6":"a","\ud835\udcb7":"b","\ud835\udcb8":"c","\ud835\udcb9":"d","\ud835\udcbb":"f","\ud835\udcbd":"h","\ud835\udcbe":"i","\ud835\udcbf":"j","\ud835\udcc0":"k",
"\ud835\udcc1":"l","\ud835\udcc2":"m","\ud835\udcc3":"n","\ud835\udcc5":"p","\ud835\udcc6":"q","\ud835\udcc7":"r","\ud835\udcc8":"s","\ud835\udcc9":"t","\ud835\udcca":"u","\ud835\udccb":"v","\ud835\udccc":"w","\ud835\udccd":"x","\ud835\udcce":"y","\ud835\udccf":"z","\ud835\udcd0":"A","\ud835\udcd1":"B","\ud835\udcd2":"C","\ud835\udcd3":"D","\ud835\udcd4":"E","\ud835\udcd5":"F","\ud835\udcd6":"G","\ud835\udcd7":"H","\ud835\udcd8":"I","\ud835\udcd9":"J","\ud835\udcda":"K","\ud835\udcdb":"L","\ud835\udcdc":"M",
"\ud835\udcdd":"N","\ud835\udcde":"O","\ud835\udcdf":"P","\ud835\udce0":"Q","\ud835\udce1":"R","\ud835\udce2":"S","\ud835\udce3":"T","\ud835\udce4":"U","\ud835\udce5":"V","\ud835\udce6":"W","\ud835\udce7":"X","\ud835\udce8":"Y","\ud835\udce9":"Z","\ud835\udcea":"a","\ud835\udceb":"b","\ud835\udcec":"c","\ud835\udced":"d","\ud835\udcee":"e","\ud835\udcef":"f","\ud835\udcf0":"g","\ud835\udcf1":"h","\ud835\udcf2":"i","\ud835\udcf3":"j","\ud835\udcf4":"k","\ud835\udcf5":"l","\ud835\udcf6":"m","\ud835\udcf7":"n",
"\ud835\udcf8":"o","\ud835\udcf9":"p","\ud835\udcfa":"q","\ud835\udcfb":"r","\ud835\udcfc":"s","\ud835\udcfd":"t","\ud835\udcfe":"u","\ud835\udcff":"v","\ud835\udd00":"w","\ud835\udd01":"x","\ud835\udd02":"y","\ud835\udd03":"z","\ud835\udd04":"A","\ud835\udd05":"B","\ud835\udd07":"D","\ud835\udd08":"E","\ud835\udd09":"F","\ud835\udd0a":"G","\ud835\udd0d":"J","\ud835\udd0e":"K","\ud835\udd0f":"L","\ud835\udd10":"M","\ud835\udd11":"N","\ud835\udd12":"O","\ud835\udd13":"P","\ud835\udd14":"Q","\ud835\udd16":"S",
"\ud835\udd17":"T","\ud835\udd18":"U","\ud835\udd19":"V","\ud835\udd1a":"W","\ud835\udd1b":"X","\ud835\udd1c":"Y","\ud835\udd1e":"a","\ud835\udd1f":"b","\ud835\udd20":"c","\ud835\udd21":"d","\ud835\udd22":"e","\ud835\udd23":"f","\ud835\udd24":"g","\ud835\udd25":"h","\ud835\udd26":"i","\ud835\udd27":"j","\ud835\udd28":"k","\ud835\udd29":"l","\ud835\udd2a":"m","\ud835\udd2b":"n","\ud835\udd2c":"o","\ud835\udd2d":"p","\ud835\udd2e":"q","\ud835\udd2f":"r","\ud835\udd30":"s","\ud835\udd31":"t","\ud835\udd32":"u",
"\ud835\udd33":"v","\ud835\udd34":"w","\ud835\udd35":"x","\ud835\udd36":"y","\ud835\udd37":"z","\ud835\udd38":"A","\ud835\udd39":"B","\ud835\udd3b":"D","\ud835\udd3c":"E","\ud835\udd3d":"F","\ud835\udd3e":"G","\ud835\udd40":"I","\ud835\udd41":"J","\ud835\udd42":"K","\ud835\udd43":"L","\ud835\udd44":"M","\ud835\udd46":"O","\ud835\udd4a":"S","\ud835\udd4b":"T","\ud835\udd4c":"U","\ud835\udd4d":"V","\ud835\udd4e":"W","\ud835\udd4f":"X","\ud835\udd50":"Y","\ud835\udd52":"a","\ud835\udd53":"b","\ud835\udd54":"c",
"\ud835\udd55":"d","\ud835\udd56":"e","\ud835\udd57":"f","\ud835\udd58":"g","\ud835\udd59":"h","\ud835\udd5a":"i","\ud835\udd5b":"j","\ud835\udd5c":"k","\ud835\udd5d":"l","\ud835\udd5e":"m","\ud835\udd5f":"n","\ud835\udd60":"o","\ud835\udd61":"p","\ud835\udd62":"q","\ud835\udd63":"r","\ud835\udd64":"s","\ud835\udd65":"t","\ud835\udd66":"u","\ud835\udd67":"v","\ud835\udd68":"w","\ud835\udd69":"x","\ud835\udd6a":"y","\ud835\udd6b":"z","\ud835\udd6c":"A","\ud835\udd6d":"B","\ud835\udd6e":"C","\ud835\udd6f":"D",
"\ud835\udd70":"E","\ud835\udd71":"F","\ud835\udd72":"G","\ud835\udd73":"H","\ud835\udd74":"I","\ud835\udd75":"J","\ud835\udd76":"K","\ud835\udd77":"L","\ud835\udd78":"M","\ud835\udd79":"N","\ud835\udd7a":"O","\ud835\udd7b":"P","\ud835\udd7c":"Q","\ud835\udd7d":"R","\ud835\udd7e":"S","\ud835\udd7f":"T","\ud835\udd80":"U","\ud835\udd81":"V","\ud835\udd82":"W","\ud835\udd83":"X","\ud835\udd84":"Y","\ud835\udd85":"Z","\ud835\udd86":"a","\ud835\udd87":"b","\ud835\udd88":"c","\ud835\udd89":"d","\ud835\udd8a":"e",
"\ud835\udd8b":"f","\ud835\udd8c":"g","\ud835\udd8d":"h","\ud835\udd8e":"i","\ud835\udd8f":"j","\ud835\udd90":"k","\ud835\udd91":"l","\ud835\udd92":"m","\ud835\udd93":"n","\ud835\udd94":"o","\ud835\udd95":"p","\ud835\udd96":"q","\ud835\udd97":"r","\ud835\udd98":"s","\ud835\udd99":"t","\ud835\udd9a":"u","\ud835\udd9b":"v","\ud835\udd9c":"w","\ud835\udd9d":"x","\ud835\udd9e":"y","\ud835\udd9f":"z","\ud835\udda0":"A","\ud835\udda1":"B","\ud835\udda2":"C","\ud835\udda3":"D","\ud835\udda4":"E","\ud835\udda5":"F",
"\ud835\udda6":"G","\ud835\udda7":"H","\ud835\udda8":"I","\ud835\udda9":"J","\ud835\uddaa":"K","\ud835\uddab":"L","\ud835\uddac":"M","\ud835\uddad":"N","\ud835\uddae":"O","\ud835\uddaf":"P","\ud835\uddb0":"Q","\ud835\uddb1":"R","\ud835\uddb2":"S","\ud835\uddb3":"T","\ud835\uddb4":"U","\ud835\uddb5":"V","\ud835\uddb6":"W","\ud835\uddb7":"X","\ud835\uddb8":"Y","\ud835\uddb9":"Z","\ud835\uddba":"a","\ud835\uddbb":"b","\ud835\uddbc":"c","\ud835\uddbd":"d","\ud835\uddbe":"e","\ud835\uddbf":"f","\ud835\uddc0":"g",
"\ud835\uddc1":"h","\ud835\uddc2":"i","\ud835\uddc3":"j","\ud835\uddc4":"k","\ud835\uddc5":"l","\ud835\uddc6":"m","\ud835\uddc7":"n","\ud835\uddc8":"o","\ud835\uddc9":"p","\ud835\uddca":"q","\ud835\uddcb":"r","\ud835\uddcc":"s","\ud835\uddcd":"t","\ud835\uddce":"u","\ud835\uddcf":"v","\ud835\uddd0":"w","\ud835\uddd1":"x","\ud835\uddd2":"y","\ud835\uddd3":"z","\ud835\uddd4":"A","\ud835\uddd5":"B","\ud835\uddd6":"C","\ud835\uddd7":"D","\ud835\uddd8":"E","\ud835\uddd9":"F","\ud835\uddda":"G","\ud835\udddb":"H",
"\ud835\udddc":"I","\ud835\udddd":"J","\ud835\uddde":"K","\ud835\udddf":"L","\ud835\udde0":"M","\ud835\udde1":"N","\ud835\udde2":"O","\ud835\udde3":"P","\ud835\udde4":"Q","\ud835\udde5":"R","\ud835\udde6":"S","\ud835\udde7":"T","\ud835\udde8":"U","\ud835\udde9":"V","\ud835\uddea":"W","\ud835\uddeb":"X","\ud835\uddec":"Y","\ud835\udded":"Z","\ud835\uddee":"a","\ud835\uddef":"b","\ud835\uddf0":"c","\ud835\uddf1":"d","\ud835\uddf2":"e","\ud835\uddf3":"f","\ud835\uddf4":"g","\ud835\uddf5":"h","\ud835\uddf6":"i",
"\ud835\uddf7":"j","\ud835\uddf8":"k","\ud835\uddf9":"l","\ud835\uddfa":"m","\ud835\uddfb":"n","\ud835\uddfc":"o","\ud835\uddfd":"p","\ud835\uddfe":"q","\ud835\uddff":"r","\ud835\ude00":"s","\ud835\ude01":"t","\ud835\ude02":"u","\ud835\ude03":"v","\ud835\ude04":"w","\ud835\ude05":"x","\ud835\ude06":"y","\ud835\ude07":"z","\ud835\ude08":"A","\ud835\ude09":"B","\ud835\ude0a":"C","\ud835\ude0b":"D","\ud835\ude0c":"E","\ud835\ude0d":"F","\ud835\ude0e":"G","\ud835\ude0f":"H","\ud835\ude10":"I","\ud835\ude11":"J",
"\ud835\ude12":"K","\ud835\ude13":"L","\ud835\ude14":"M","\ud835\ude15":"N","\ud835\ude16":"O","\ud835\ude17":"P","\ud835\ude18":"Q","\ud835\ude19":"R","\ud835\ude1a":"S","\ud835\ude1b":"T","\ud835\ude1c":"U","\ud835\ude1d":"V","\ud835\ude1e":"W","\ud835\ude1f":"X","\ud835\ude20":"Y","\ud835\ude21":"Z","\ud835\ude22":"a","\ud835\ude23":"b","\ud835\ude24":"c","\ud835\ude25":"d","\ud835\ude26":"e","\ud835\ude27":"f","\ud835\ude28":"g","\ud835\ude29":"h","\ud835\ude2a":"i","\ud835\ude2b":"j","\ud835\ude2c":"k",
"\ud835\ude2d":"l","\ud835\ude2e":"m","\ud835\ude2f":"n","\ud835\ude30":"o","\ud835\ude31":"p","\ud835\ude32":"q","\ud835\ude33":"r","\ud835\ude34":"s","\ud835\ude35":"t","\ud835\ude36":"u","\ud835\ude37":"v","\ud835\ude38":"w","\ud835\ude39":"x","\ud835\ude3a":"y","\ud835\ude3b":"z","\ud835\ude3c":"A","\ud835\ude3d":"B","\ud835\ude3e":"C","\ud835\ude3f":"D","\ud835\ude40":"E","\ud835\ude41":"F","\ud835\ude42":"G","\ud835\ude43":"H","\ud835\ude44":"I","\ud835\ude45":"J","\ud835\ude46":"K","\ud835\ude47":"L",
"\ud835\ude48":"M","\ud835\ude49":"N","\ud835\ude4a":"O","\ud835\ude4b":"P","\ud835\ude4c":"Q","\ud835\ude4d":"R","\ud835\ude4e":"S","\ud835\ude4f":"T","\ud835\ude50":"U","\ud835\ude51":"V","\ud835\ude52":"W","\ud835\ude53":"X","\ud835\ude54":"Y","\ud835\ude55":"Z","\ud835\ude56":"a","\ud835\ude57":"b","\ud835\ude58":"c","\ud835\ude59":"d","\ud835\ude5a":"e","\ud835\ude5b":"f","\ud835\ude5c":"g","\ud835\ude5d":"h","\ud835\ude5e":"i","\ud835\ude5f":"j","\ud835\ude60":"k","\ud835\ude61":"l","\ud835\ude62":"m",
"\ud835\ude63":"n","\ud835\ude64":"o","\ud835\ude65":"p","\ud835\ude66":"q","\ud835\ude67":"r","\ud835\ude68":"s","\ud835\ude69":"t","\ud835\ude6a":"u","\ud835\ude6b":"v","\ud835\ude6c":"w","\ud835\ude6d":"x","\ud835\ude6e":"y","\ud835\ude6f":"z","\ud835\ude70":"A","\ud835\ude71":"B","\ud835\ude72":"C","\ud835\ude73":"D","\ud835\ude74":"E","\ud835\ude75":"F","\ud835\ude76":"G","\ud835\ude77":"H","\ud835\ude78":"I","\ud835\ude79":"J","\ud835\ude7a":"K","\ud835\ude7b":"L","\ud835\ude7c":"M","\ud835\ude7d":"N",
"\ud835\ude7e":"O","\ud835\ude7f":"P","\ud835\ude80":"Q","\ud835\ude81":"R","\ud835\ude82":"S","\ud835\ude83":"T","\ud835\ude84":"U","\ud835\ude85":"V","\ud835\ude86":"W","\ud835\ude87":"X","\ud835\ude88":"Y","\ud835\ude89":"Z","\ud835\ude8a":"a","\ud835\ude8b":"b","\ud835\ude8c":"c","\ud835\ude8d":"d","\ud835\ude8e":"e","\ud835\ude8f":"f","\ud835\ude90":"g","\ud835\ude91":"h","\ud835\ude92":"i","\ud835\ude93":"j","\ud835\ude94":"k","\ud835\ude95":"l","\ud835\ude96":"m","\ud835\ude97":"n","\ud835\ude98":"o",
"\ud835\ude99":"p","\ud835\ude9a":"q","\ud835\ude9b":"r","\ud835\ude9c":"s","\ud835\ude9d":"t","\ud835\ude9e":"u","\ud835\ude9f":"v","\ud835\udea0":"w","\ud835\udea1":"x","\ud835\udea2":"y","\ud835\udea3":"z","\ud835\udea4":"\u0131","\ud835\udea5":"\u0237","\ud835\udea8":"\u0391","\ud835\udea9":"\u0392","\ud835\udeaa":"\u0393","\ud835\udeab":"\u0394","\ud835\udeac":"\u0395","\ud835\udead":"\u0396","\ud835\udeae":"\u0397","\ud835\udeaf":"\u0398","\ud835\udeb0":"\u0399","\ud835\udeb1":"\u039a","\ud835\udeb2":"\u039b",
"\ud835\udeb3":"\u039c","\ud835\udeb4":"\u039d","\ud835\udeb5":"\u039e","\ud835\udeb6":"\u039f","\ud835\udeb7":"\u03a0","\ud835\udeb8":"\u03a1","\ud835\udeb9":"\u0398","\ud835\udeba":"\u03a3","\ud835\udebb":"\u03a4","\ud835\udebc":"\u03a5","\ud835\udebd":"\u03a6","\ud835\udebe":"\u03a7","\ud835\udebf":"\u03a8","\ud835\udec0":"\u03a9","\ud835\udec1":"\u2207","\ud835\udec2":"\u03b1","\ud835\udec3":"\u03b2","\ud835\udec4":"\u03b3","\ud835\udec5":"\u03b4","\ud835\udec6":"\u03b5","\ud835\udec7":"\u03b6",
"\ud835\udec8":"\u03b7","\ud835\udec9":"\u03b8","\ud835\udeca":"\u03b9","\ud835\udecb":"\u03ba","\ud835\udecc":"\u03bb","\ud835\udecd":"\u03bc","\ud835\udece":"\u03bd","\ud835\udecf":"\u03be","\ud835\uded0":"\u03bf","\ud835\uded1":"\u03c0","\ud835\uded2":"\u03c1","\ud835\uded3":"\u03c2","\ud835\uded4":"\u03c3","\ud835\uded5":"\u03c4","\ud835\uded6":"\u03c5","\ud835\uded7":"\u03c6","\ud835\uded8":"\u03c7","\ud835\uded9":"\u03c8","\ud835\udeda":"\u03c9","\ud835\udedb":"\u2202","\ud835\udedc":"\u03b5",
"\ud835\udedd":"\u03b8","\ud835\udede":"\u03ba","\ud835\udedf":"\u03c6","\ud835\udee0":"\u03c1","\ud835\udee1":"\u03c0","\ud835\udee2":"\u0391","\ud835\udee3":"\u0392","\ud835\udee4":"\u0393","\ud835\udee5":"\u0394","\ud835\udee6":"\u0395","\ud835\udee7":"\u0396","\ud835\udee8":"\u0397","\ud835\udee9":"\u0398","\ud835\udeea":"\u0399","\ud835\udeeb":"\u039a","\ud835\udeec":"\u039b","\ud835\udeed":"\u039c","\ud835\udeee":"\u039d","\ud835\udeef":"\u039e","\ud835\udef0":"\u039f","\ud835\udef1":"\u03a0",
"\ud835\udef2":"\u03a1","\ud835\udef3":"\u0398","\ud835\udef4":"\u03a3","\ud835\udef5":"\u03a4","\ud835\udef6":"\u03a5","\ud835\udef7":"\u03a6","\ud835\udef8":"\u03a7","\ud835\udef9":"\u03a8","\ud835\udefa":"\u03a9","\ud835\udefb":"\u2207","\ud835\udefc":"\u03b1","\ud835\udefd":"\u03b2","\ud835\udefe":"\u03b3","\ud835\udeff":"\u03b4","\ud835\udf00":"\u03b5","\ud835\udf01":"\u03b6","\ud835\udf02":"\u03b7","\ud835\udf03":"\u03b8","\ud835\udf04":"\u03b9","\ud835\udf05":"\u03ba","\ud835\udf06":"\u03bb",
"\ud835\udf07":"\u03bc","\ud835\udf08":"\u03bd","\ud835\udf09":"\u03be","\ud835\udf0a":"\u03bf","\ud835\udf0b":"\u03c0","\ud835\udf0c":"\u03c1","\ud835\udf0d":"\u03c2","\ud835\udf0e":"\u03c3","\ud835\udf0f":"\u03c4","\ud835\udf10":"\u03c5","\ud835\udf11":"\u03c6","\ud835\udf12":"\u03c7","\ud835\udf13":"\u03c8","\ud835\udf14":"\u03c9","\ud835\udf15":"\u2202","\ud835\udf16":"\u03b5","\ud835\udf17":"\u03b8","\ud835\udf18":"\u03ba","\ud835\udf19":"\u03c6","\ud835\udf1a":"\u03c1","\ud835\udf1b":"\u03c0",
"\ud835\udf1c":"\u0391","\ud835\udf1d":"\u0392","\ud835\udf1e":"\u0393","\ud835\udf1f":"\u0394","\ud835\udf20":"\u0395","\ud835\udf21":"\u0396","\ud835\udf22":"\u0397","\ud835\udf23":"\u0398","\ud835\udf24":"\u0399","\ud835\udf25":"\u039a","\ud835\udf26":"\u039b","\ud835\udf27":"\u039c","\ud835\udf28":"\u039d","\ud835\udf29":"\u039e","\ud835\udf2a":"\u039f","\ud835\udf2b":"\u03a0","\ud835\udf2c":"\u03a1","\ud835\udf2d":"\u0398","\ud835\udf2e":"\u03a3","\ud835\udf2f":"\u03a4","\ud835\udf30":"\u03a5",
"\ud835\udf31":"\u03a6","\ud835\udf32":"\u03a7","\ud835\udf33":"\u03a8","\ud835\udf34":"\u03a9","\ud835\udf35":"\u2207","\ud835\udf36":"\u03b1","\ud835\udf37":"\u03b2","\ud835\udf38":"\u03b3","\ud835\udf39":"\u03b4","\ud835\udf3a":"\u03b5","\ud835\udf3b":"\u03b6","\ud835\udf3c":"\u03b7","\ud835\udf3d":"\u03b8","\ud835\udf3e":"\u03b9","\ud835\udf3f":"\u03ba","\ud835\udf40":"\u03bb","\ud835\udf41":"\u03bc","\ud835\udf42":"\u03bd","\ud835\udf43":"\u03be","\ud835\udf44":"\u03bf","\ud835\udf45":"\u03c0",
"\ud835\udf46":"\u03c1","\ud835\udf47":"\u03c2","\ud835\udf48":"\u03c3","\ud835\udf49":"\u03c4","\ud835\udf4a":"\u03c5","\ud835\udf4b":"\u03c6","\ud835\udf4c":"\u03c7","\ud835\udf4d":"\u03c8","\ud835\udf4e":"\u03c9","\ud835\udf4f":"\u2202","\ud835\udf50":"\u03b5","\ud835\udf51":"\u03b8","\ud835\udf52":"\u03ba","\ud835\udf53":"\u03c6","\ud835\udf54":"\u03c1","\ud835\udf55":"\u03c0","\ud835\udf56":"\u0391","\ud835\udf57":"\u0392","\ud835\udf58":"\u0393","\ud835\udf59":"\u0394","\ud835\udf5a":"\u0395",
"\ud835\udf5b":"\u0396","\ud835\udf5c":"\u0397","\ud835\udf5d":"\u0398","\ud835\udf5e":"\u0399","\ud835\udf5f":"\u039a","\ud835\udf60":"\u039b","\ud835\udf61":"\u039c","\ud835\udf62":"\u039d","\ud835\udf63":"\u039e","\ud835\udf64":"\u039f","\ud835\udf65":"\u03a0","\ud835\udf66":"\u03a1","\ud835\udf67":"\u0398","\ud835\udf68":"\u03a3","\ud835\udf69":"\u03a4","\ud835\udf6a":"\u03a5","\ud835\udf6b":"\u03a6","\ud835\udf6c":"\u03a7","\ud835\udf6d":"\u03a8","\ud835\udf6e":"\u03a9","\ud835\udf6f":"\u2207",
"\ud835\udf70":"\u03b1","\ud835\udf71":"\u03b2","\ud835\udf72":"\u03b3","\ud835\udf73":"\u03b4","\ud835\udf74":"\u03b5","\ud835\udf75":"\u03b6","\ud835\udf76":"\u03b7","\ud835\udf77":"\u03b8","\ud835\udf78":"\u03b9","\ud835\udf79":"\u03ba","\ud835\udf7a":"\u03bb","\ud835\udf7b":"\u03bc","\ud835\udf7c":"\u03bd","\ud835\udf7d":"\u03be","\ud835\udf7e":"\u03bf","\ud835\udf7f":"\u03c0","\ud835\udf80":"\u03c1","\ud835\udf81":"\u03c2","\ud835\udf82":"\u03c3","\ud835\udf83":"\u03c4","\ud835\udf84":"\u03c5",
"\ud835\udf85":"\u03c6","\ud835\udf86":"\u03c7","\ud835\udf87":"\u03c8","\ud835\udf88":"\u03c9","\ud835\udf89":"\u2202","\ud835\udf8a":"\u03b5","\ud835\udf8b":"\u03b8","\ud835\udf8c":"\u03ba","\ud835\udf8d":"\u03c6","\ud835\udf8e":"\u03c1","\ud835\udf8f":"\u03c0","\ud835\udf90":"\u0391","\ud835\udf91":"\u0392","\ud835\udf92":"\u0393","\ud835\udf93":"\u0394","\ud835\udf94":"\u0395","\ud835\udf95":"\u0396","\ud835\udf96":"\u0397","\ud835\udf97":"\u0398","\ud835\udf98":"\u0399","\ud835\udf99":"\u039a",
"\ud835\udf9a":"\u039b","\ud835\udf9b":"\u039c","\ud835\udf9c":"\u039d","\ud835\udf9d":"\u039e","\ud835\udf9e":"\u039f","\ud835\udf9f":"\u03a0","\ud835\udfa0":"\u03a1","\ud835\udfa1":"\u0398","\ud835\udfa2":"\u03a3","\ud835\udfa3":"\u03a4","\ud835\udfa4":"\u03a5","\ud835\udfa5":"\u03a6","\ud835\udfa6":"\u03a7","\ud835\udfa7":"\u03a8","\ud835\udfa8":"\u03a9","\ud835\udfa9":"\u2207","\ud835\udfaa":"\u03b1","\ud835\udfab":"\u03b2","\ud835\udfac":"\u03b3","\ud835\udfad":"\u03b4","\ud835\udfae":"\u03b5",
"\ud835\udfaf":"\u03b6","\ud835\udfb0":"\u03b7","\ud835\udfb1":"\u03b8","\ud835\udfb2":"\u03b9","\ud835\udfb3":"\u03ba","\ud835\udfb4":"\u03bb","\ud835\udfb5":"\u03bc","\ud835\udfb6":"\u03bd","\ud835\udfb7":"\u03be","\ud835\udfb8":"\u03bf","\ud835\udfb9":"\u03c0","\ud835\udfba":"\u03c1","\ud835\udfbb":"\u03c2","\ud835\udfbc":"\u03c3","\ud835\udfbd":"\u03c4","\ud835\udfbe":"\u03c5","\ud835\udfbf":"\u03c6","\ud835\udfc0":"\u03c7","\ud835\udfc1":"\u03c8","\ud835\udfc2":"\u03c9","\ud835\udfc3":"\u2202",
"\ud835\udfc4":"\u03b5","\ud835\udfc5":"\u03b8","\ud835\udfc6":"\u03ba","\ud835\udfc7":"\u03c6","\ud835\udfc8":"\u03c1","\ud835\udfc9":"\u03c0","\ud835\udfca":"\u03dc","\ud835\udfcb":"\u03dd","\ud835\udfce":"0","\ud835\udfcf":"1","\ud835\udfd0":"2","\ud835\udfd1":"3","\ud835\udfd2":"4","\ud835\udfd3":"5","\ud835\udfd4":"6","\ud835\udfd5":"7","\ud835\udfd6":"8","\ud835\udfd7":"9","\ud835\udfd8":"0","\ud835\udfd9":"1","\ud835\udfda":"2","\ud835\udfdb":"3","\ud835\udfdc":"4","\ud835\udfdd":"5","\ud835\udfde":"6",
"\ud835\udfdf":"7","\ud835\udfe0":"8","\ud835\udfe1":"9","\ud835\udfe2":"0","\ud835\udfe3":"1","\ud835\udfe4":"2","\ud835\udfe5":"3","\ud835\udfe6":"4","\ud835\udfe7":"5","\ud835\udfe8":"6","\ud835\udfe9":"7","\ud835\udfea":"8","\ud835\udfeb":"9","\ud835\udfec":"0","\ud835\udfed":"1","\ud835\udfee":"2","\ud835\udfef":"3","\ud835\udff0":"4","\ud835\udff1":"5","\ud835\udff2":"6","\ud835\udff3":"7","\ud835\udff4":"8","\ud835\udff5":"9","\ud835\udff6":"0","\ud835\udff7":"1","\ud835\udff8":"2","\ud835\udff9":"3",
"\ud835\udffa":"4","\ud835\udffb":"5","\ud835\udffc":"6","\ud835\udffd":"7","\ud835\udffe":"8","\ud835\udfff":"9","\ud83b\ude00":"\u0627","\ud83b\ude01":"\u0628","\ud83b\ude02":"\u062c","\ud83b\ude03":"\u062f","\ud83b\ude05":"\u0648","\ud83b\ude06":"\u0632","\ud83b\ude07":"\u062d","\ud83b\ude08":"\u0637","\ud83b\ude09":"\u064a","\ud83b\ude0a":"\u0643","\ud83b\ude0b":"\u0644","\ud83b\ude0c":"\u0645","\ud83b\ude0d":"\u0646","\ud83b\ude0e":"\u0633","\ud83b\ude0f":"\u0639","\ud83b\ude10":"\u0641","\ud83b\ude11":"\u0635",
"\ud83b\ude12":"\u0642","\ud83b\ude13":"\u0631","\ud83b\ude14":"\u0634","\ud83b\ude15":"\u062a","\ud83b\ude16":"\u062b","\ud83b\ude17":"\u062e","\ud83b\ude18":"\u0630","\ud83b\ude19":"\u0636","\ud83b\ude1a":"\u0638","\ud83b\ude1b":"\u063a","\ud83b\ude1c":"\u066e","\ud83b\ude1d":"\u06ba","\ud83b\ude1e":"\u06a1","\ud83b\ude1f":"\u066f","\ud83b\ude21":"\u0628","\ud83b\ude22":"\u062c","\ud83b\ude24":"\u0647","\ud83b\ude27":"\u062d","\ud83b\ude29":"\u064a","\ud83b\ude2a":"\u0643","\ud83b\ude2b":"\u0644",
"\ud83b\ude2c":"\u0645","\ud83b\ude2d":"\u0646","\ud83b\ude2e":"\u0633","\ud83b\ude2f":"\u0639","\ud83b\ude30":"\u0641","\ud83b\ude31":"\u0635","\ud83b\ude32":"\u0642","\ud83b\ude34":"\u0634","\ud83b\ude35":"\u062a","\ud83b\ude36":"\u062b","\ud83b\ude37":"\u062e","\ud83b\ude39":"\u0636","\ud83b\ude3b":"\u063a","\ud83b\ude42":"\u062c","\ud83b\ude47":"\u062d","\ud83b\ude49":"\u064a","\ud83b\ude4b":"\u0644","\ud83b\ude4d":"\u0646","\ud83b\ude4e":"\u0633","\ud83b\ude4f":"\u0639","\ud83b\ude51":"\u0635",
"\ud83b\ude52":"\u0642","\ud83b\ude54":"\u0634","\ud83b\ude57":"\u062e","\ud83b\ude59":"\u0636","\ud83b\ude5b":"\u063a","\ud83b\ude5d":"\u06ba","\ud83b\ude5f":"\u066f","\ud83b\ude61":"\u0628","\ud83b\ude62":"\u062c","\ud83b\ude64":"\u0647","\ud83b\ude67":"\u062d","\ud83b\ude68":"\u0637","\ud83b\ude69":"\u064a","\ud83b\ude6a":"\u0643","\ud83b\ude6c":"\u0645","\ud83b\ude6d":"\u0646","\ud83b\ude6e":"\u0633","\ud83b\ude6f":"\u0639","\ud83b\ude70":"\u0641","\ud83b\ude71":"\u0635","\ud83b\ude72":"\u0642",
"\ud83b\ude74":"\u0634","\ud83b\ude75":"\u062a","\ud83b\ude76":"\u062b","\ud83b\ude77":"\u062e","\ud83b\ude79":"\u0636","\ud83b\ude7a":"\u0638","\ud83b\ude7b":"\u063a","\ud83b\ude7c":"\u066e","\ud83b\ude7e":"\u06a1","\ud83b\ude80":"\u0627","\ud83b\ude81":"\u0628","\ud83b\ude82":"\u062c","\ud83b\ude83":"\u062f","\ud83b\ude84":"\u0647","\ud83b\ude85":"\u0648","\ud83b\ude86":"\u0632","\ud83b\ude87":"\u062d","\ud83b\ude88":"\u0637","\ud83b\ude89":"\u064a","\ud83b\ude8b":"\u0644","\ud83b\ude8c":"\u0645",
"\ud83b\ude8d":"\u0646","\ud83b\ude8e":"\u0633","\ud83b\ude8f":"\u0639","\ud83b\ude90":"\u0641","\ud83b\ude91":"\u0635","\ud83b\ude92":"\u0642","\ud83b\ude93":"\u0631","\ud83b\ude94":"\u0634","\ud83b\ude95":"\u062a","\ud83b\ude96":"\u062b","\ud83b\ude97":"\u062e","\ud83b\ude98":"\u0630","\ud83b\ude99":"\u0636","\ud83b\ude9a":"\u0638","\ud83b\ude9b":"\u063a","\ud83b\udea1":"\u0628","\ud83b\udea2":"\u062c","\ud83b\udea3":"\u062f","\ud83b\udea5":"\u0648","\ud83b\udea6":"\u0632","\ud83b\udea7":"\u062d",
"\ud83b\udea8":"\u0637","\ud83b\udea9":"\u064a","\ud83b\udeab":"\u0644","\ud83b\udeac":"\u0645","\ud83b\udead":"\u0646","\ud83b\udeae":"\u0633","\ud83b\udeaf":"\u0639","\ud83b\udeb0":"\u0641","\ud83b\udeb1":"\u0635","\ud83b\udeb2":"\u0642","\ud83b\udeb3":"\u0631","\ud83b\udeb4":"\u0634","\ud83b\udeb5":"\u062a","\ud83b\udeb6":"\u062b","\ud83b\udeb7":"\u062e","\ud83b\udeb8":"\u0630","\ud83b\udeb9":"\u0636","\ud83b\udeba":"\u0638","\ud83b\udebb":"\u063a","\ud83c\udd00":"0.","\ud83c\udd01":"0,","\ud83c\udd02":"1,",
"\ud83c\udd03":"2,","\ud83c\udd04":"3,","\ud83c\udd05":"4,","\ud83c\udd06":"5,","\ud83c\udd07":"6,","\ud83c\udd08":"7,","\ud83c\udd09":"8,","\ud83c\udd0a":"9,","\ud83c\udd10":"(A)","\ud83c\udd11":"(B)","\ud83c\udd12":"(C)","\ud83c\udd13":"(D)","\ud83c\udd14":"(E)","\ud83c\udd15":"(F)","\ud83c\udd16":"(G)","\ud83c\udd17":"(H)","\ud83c\udd18":"(I)","\ud83c\udd19":"(J)","\ud83c\udd1a":"(K)","\ud83c\udd1b":"(L)","\ud83c\udd1c":"(M)","\ud83c\udd1d":"(N)","\ud83c\udd1e":"(O)","\ud83c\udd1f":"(P)","\ud83c\udd20":"(Q)",
"\ud83c\udd21":"(R)","\ud83c\udd22":"(S)","\ud83c\udd23":"(T)","\ud83c\udd24":"(U)","\ud83c\udd25":"(V)","\ud83c\udd26":"(W)","\ud83c\udd27":"(X)","\ud83c\udd28":"(Y)","\ud83c\udd29":"(Z)","\ud83c\udd2a":"\u3014S\u3015","\ud83c\udd2b":"C","\ud83c\udd2c":"R","\ud83c\udd2d":"CD","\ud83c\udd2e":"WZ","\ud83c\udd30":"A","\ud83c\udd31":"B","\ud83c\udd32":"C","\ud83c\udd33":"D","\ud83c\udd34":"E","\ud83c\udd35":"F","\ud83c\udd36":"G","\ud83c\udd37":"H","\ud83c\udd38":"I","\ud83c\udd39":"J","\ud83c\udd3a":"K",
"\ud83c\udd3b":"L","\ud83c\udd3c":"M","\ud83c\udd3d":"N","\ud83c\udd3e":"O","\ud83c\udd3f":"P","\ud83c\udd40":"Q","\ud83c\udd41":"R","\ud83c\udd42":"S","\ud83c\udd43":"T","\ud83c\udd44":"U","\ud83c\udd45":"V","\ud83c\udd46":"W","\ud83c\udd47":"X","\ud83c\udd48":"Y","\ud83c\udd49":"Z","\ud83c\udd4a":"HV","\ud83c\udd4b":"MV","\ud83c\udd4c":"SD","\ud83c\udd4d":"SS","\ud83c\udd4e":"PPV","\ud83c\udd4f":"WC","\ud83c\udd6a":"MC","\ud83c\udd6b":"MD","\ud83c\udd90":"DJ","\ud83c\ude00":"\u307b\u304b","\ud83c\ude01":"\u30b3\u30b3",
"\ud83c\ude02":"\u30b5","\ud83c\ude10":"\u624b","\ud83c\ude11":"\u5b57","\ud83c\ude12":"\u53cc","\ud83c\ude13":"\u30c6\u3099","\ud83c\ude14":"\u4e8c","\ud83c\ude15":"\u591a","\ud83c\ude16":"\u89e3","\ud83c\ude17":"\u5929","\ud83c\ude18":"\u4ea4","\ud83c\ude19":"\u6620","\ud83c\ude1a":"\u7121","\ud83c\ude1b":"\u6599","\ud83c\ude1c":"\u524d","\ud83c\ude1d":"\u5f8c","\ud83c\ude1e":"\u518d","\ud83c\ude1f":"\u65b0","\ud83c\ude20":"\u521d","\ud83c\ude21":"\u7d42","\ud83c\ude22":"\u751f","\ud83c\ude23":"\u8ca9",
"\ud83c\ude24":"\u58f0","\ud83c\ude25":"\u5439","\ud83c\ude26":"\u6f14","\ud83c\ude27":"\u6295","\ud83c\ude28":"\u6355","\ud83c\ude29":"\u4e00","\ud83c\ude2a":"\u4e09","\ud83c\ude2b":"\u904a","\ud83c\ude2c":"\u5de6","\ud83c\ude2d":"\u4e2d","\ud83c\ude2e":"\u53f3","\ud83c\ude2f":"\u6307","\ud83c\ude30":"\u8d70","\ud83c\ude31":"\u6253","\ud83c\ude32":"\u7981","\ud83c\ude33":"\u7a7a","\ud83c\ude34":"\u5408","\ud83c\ude35":"\u6e80","\ud83c\ude36":"\u6709","\ud83c\ude37":"\u6708","\ud83c\ude38":"\u7533",
"\ud83c\ude39":"\u5272","\ud83c\ude3a":"\u55b6","\ud83c\ude40":"\u3014\u672c\u3015","\ud83c\ude41":"\u3014\u4e09\u3015","\ud83c\ude42":"\u3014\u4e8c\u3015","\ud83c\ude43":"\u3014\u5b89\u3015","\ud83c\ude44":"\u3014\u70b9\u3015","\ud83c\ude45":"\u3014\u6253\u3015","\ud83c\ude46":"\u3014\u76d7\u3015","\ud83c\ude47":"\u3014\u52dd\u3015","\ud83c\ude48":"\u3014\u6557\u3015","\ud83c\ude50":"\u5f97","\ud83c\ude51":"\u53ef"};ilib.data.norm.nfkd=ilib.merge(ilib.data.norm.nfkd||{},ilib.data.nfkd_all);
ilib.data.nfkd_all=void 0;
ilib.data.likelylocales={aa:"aa-Latn-ET",ab:"ab-Cyrl-GE",ady:"ady-Cyrl-RU",af:"af-Latn-ZA",agq:"agq-Latn-CM",ak:"ak-Latn-GH",am:"am-Ethi-ET",ar:"ar-Arab-EG",as:"as-Beng-IN",asa:"asa-Latn-TZ",ast:"ast-Latn-ES",av:"av-Cyrl-RU",ay:"ay-Latn-BO",az:"az-Latn-AZ","az-Arab":"az-Arab-IR","az-IR":"az-Arab-IR",ba:"ba-Cyrl-RU",bas:"bas-Latn-CM",be:"be-Cyrl-BY",bem:"bem-Latn-ZM",bez:"bez-Latn-TZ",bg:"bg-Cyrl-BG",bi:"bi-Latn-VU",bm:"bm-Latn-ML",bn:"bn-Beng-BD",bo:"bo-Tibt-CN",br:"br-Latn-FR",brx:"brx-Deva-IN",
bs:"bs-Latn-BA",byn:"byn-Ethi-ER",ca:"ca-Latn-ES",cch:"cch-Latn-NG",ce:"ce-Cyrl-RU",ceb:"ceb-Latn-PH",cgg:"cgg-Latn-UG",ch:"ch-Latn-GU",chk:"chk-Latn-FM",chr:"chr-Cher-US",ckb:"ckb-Arab-IQ",cs:"cs-Latn-CZ",csb:"csb-Latn-PL",cy:"cy-Latn-GB",da:"da-Latn-DK",dav:"dav-Latn-KE",de:"de-Latn-DE",dje:"dje-Latn-NE",dua:"dua-Latn-CM",dv:"dv-Thaa-MV",dyo:"dyo-Latn-SN",dz:"dz-Tibt-BT",ebu:"ebu-Latn-KE",ee:"ee-Latn-GH",efi:"efi-Latn-NG",el:"el-Grek-GR",en:"en-Latn-US",eo:"eo-Latn-001",es:"es-Latn-ES",et:"et-Latn-EE",
eu:"eu-Latn-ES",ewo:"ewo-Latn-CM",fa:"fa-Arab-IR",ff:"ff-Latn-SN",fi:"fi-Latn-FI",fil:"fil-Latn-PH",fj:"fj-Latn-FJ",fo:"fo-Latn-FO",fr:"fr-Latn-FR",fur:"fur-Latn-IT",fy:"fy-Latn-NL",ga:"ga-Latn-IE",gaa:"gaa-Latn-GH",gag:"gag-Latn-MD",gd:"gd-Latn-GB",gil:"gil-Latn-KI",gl:"gl-Latn-ES",gn:"gn-Latn-PY",gsw:"gsw-Latn-CH",gu:"gu-Gujr-IN",guz:"guz-Latn-KE",gv:"gv-Latn-GB","gv-Latn":"gv-Latn-IM",ha:"ha-Latn-NG",haw:"haw-Latn-US",he:"he-Hebr-IL",hi:"hi-Deva-IN",hil:"hil-Latn-PH",ho:"ho-Latn-PG",hr:"hr-Latn-HR",
ht:"ht-Latn-HT",hu:"hu-Latn-HU",hy:"hy-Armn-AM",ia:"ia-Latn-001",id:"id-Latn-ID",ig:"ig-Latn-NG",ii:"ii-Yiii-CN",ilo:"ilo-Latn-PH",inh:"inh-Cyrl-RU",is:"is-Latn-IS",it:"it-Latn-IT",ja:"ja-Jpan-JP",jgo:"jgo-Latn-CM",jmc:"jmc-Latn-TZ",jv:"jv-Latn-ID",ka:"ka-Geor-GE",kab:"kab-Latn-DZ",kaj:"kaj-Latn-NG",kam:"kam-Latn-KE",kbd:"kbd-Cyrl-RU",kcg:"kcg-Latn-NG",kde:"kde-Latn-TZ",kea:"kea-Latn-CV",kg:"kg-Latn-CD",kha:"kha-Latn-IN",khq:"khq-Latn-ML",ki:"ki-Latn-KE",kj:"kj-Latn-NA",kk:"kk-Cyrl-KZ",kkj:"kkj-Latn-CM",
kl:"kl-Latn-GL",kln:"kln-Latn-KE",km:"km-Khmr-KH",kn:"kn-Knda-IN",ko:"ko-Kore-KR",koi:"koi-Cyrl-RU",kok:"kok-Deva-IN",kos:"kos-Latn-FM",kpe:"kpe-Latn-LR",kpv:"kpv-Cyrl-RU",krc:"krc-Cyrl-RU",ks:"ks-Arab-IN",ksb:"ksb-Latn-TZ",ksf:"ksf-Latn-CM",ksh:"ksh-Latn-DE",ku:"ku-Latn-TR","ku-Arab":"ku-Arab-IQ","ku-IQ":"ku-Arab-IQ",kum:"kum-Cyrl-RU",kv:"kv-Cyrl-RU",kw:"kw-Latn-GB",ky:"ky-Cyrl-KG",la:"la-Latn-VA",lag:"lag-Latn-TZ",lah:"lah-Arab-PK",lb:"lb-Latn-LU",lbe:"lbe-Cyrl-RU",lez:"lez-Cyrl-RU",lg:"lg-Latn-UG",
ln:"ln-Latn-CD",lo:"lo-Laoo-LA",lt:"lt-Latn-LT",lu:"lu-Latn-CD",lua:"lua-Latn-CD",luo:"luo-Latn-KE",luy:"luy-Latn-KE",lv:"lv-Latn-LV",mai:"mai-Deva-IN",mas:"mas-Latn-KE",mdf:"mdf-Cyrl-RU",mdh:"mdh-Latn-PH",mer:"mer-Latn-KE",mfe:"mfe-Latn-MU",mg:"mg-Latn-MG",mgh:"mgh-Latn-MZ",mgo:"mgo-Latn-CM",mh:"mh-Latn-MH",mi:"mi-Latn-NZ",mk:"mk-Cyrl-MK",ml:"ml-Mlym-IN",mn:"mn-Cyrl-MN","mn-CN":"mn-Mong-CN","mn-Mong":"mn-Mong-CN",mr:"mr-Deva-IN",ms:"ms-Latn-MY",mt:"mt-Latn-MT",mua:"mua-Latn-CM",my:"my-Mymr-MM",myv:"myv-Cyrl-RU",
na:"na-Latn-NR",naq:"naq-Latn-NA",nb:"nb-Latn-NO",nd:"nd-Latn-ZW",nds:"nds-Latn-DE",ne:"ne-Deva-NP",niu:"niu-Latn-NU",nl:"nl-Latn-NL",nmg:"nmg-Latn-CM",nn:"nn-Latn-NO",nnh:"nnh-Latn-CM",nr:"nr-Latn-ZA",nso:"nso-Latn-ZA",nus:"nus-Latn-SD",ny:"ny-Latn-MW",nyn:"nyn-Latn-UG",oc:"oc-Latn-FR",om:"om-Latn-ET",or:"or-Orya-IN","or-Orya":"or-Orya-IN",os:"os-Cyrl-GE",pa:"pa-Guru-IN","pa-Arab":"pa-Arab-PK","pa-PK":"pa-Arab-PK",pag:"pag-Latn-PH",pap:"pap-Latn-AN",pau:"pau-Latn-PW",pl:"pl-Latn-PL",pon:"pon-Latn-FM",
ps:"ps-Arab-AF",pt:"pt-Latn-BR",qu:"qu-Latn-PE",rm:"rm-Latn-CH",rn:"rn-Latn-BI",ro:"ro-Latn-RO",rof:"rof-Latn-TZ",ru:"ru-Cyrl-RU",rw:"rw-Latn-RW",rwk:"rwk-Latn-TZ",sa:"sa-Deva-IN",sah:"sah-Cyrl-RU",saq:"saq-Latn-KE",sat:"sat-Latn-IN",sbp:"sbp-Latn-TZ",sd:"sd-Arab-IN",se:"se-Latn-NO",seh:"seh-Latn-MZ",ses:"ses-Latn-ML",sg:"sg-Latn-CF",shi:"shi-Tfng-MA","shi-MA":"shi-Latn-MA",si:"si-Sinh-LK",sid:"sid-Latn-ET",sk:"sk-Latn-SK",sl:"sl-Latn-SI",sm:"sm-Latn-WS",sn:"sn-Latn-ZW",so:"so-Latn-SO",sq:"sq-Latn-AL",
sr:"sr-Cyrl-RS","sr-ME":"sr-Latn-ME",ss:"ss-Latn-ZA",ssy:"ssy-Latn-ER",st:"st-Latn-ZA",su:"su-Latn-ID",sv:"sv-Latn-SE",sw:"sw-Latn-TZ",swc:"swc-Latn-CD",ta:"ta-Taml-IN",te:"te-Telu-IN",teo:"teo-Latn-UG",tet:"tet-Latn-TL",tg:"tg-Cyrl-TJ",th:"th-Thai-TH",ti:"ti-Ethi-ET",tig:"tig-Ethi-ER",tk:"tk-Latn-TM",tkl:"tkl-Latn-TK",tl:"tl-Latn-PH",tn:"tn-Latn-ZA",to:"to-Latn-TO",tpi:"tpi-Latn-PG",tr:"tr-Latn-TR",trv:"trv-Latn-TW",ts:"ts-Latn-ZA",tsg:"tsg-Latn-PH",tt:"tt-Cyrl-RU",tvl:"tvl-Latn-TV",twq:"twq-Latn-NE",
ty:"ty-Latn-PF",tyv:"tyv-Cyrl-RU",tzm:"tzm-Latn-MA",udm:"udm-Cyrl-RU",ug:"ug-Arab-CN",uk:"uk-Cyrl-UA",uli:"uli-Latn-FM",und:"en-Latn-US",AD:"ca-Latn-AD",AE:"ar-Arab-AE",AF:"fa-Arab-AF",AL:"sq-Latn-AL",AM:"hy-Armn-AM",AN:"pap-Latn-AN",AO:"pt-Latn-AO",AR:"es-Latn-AR",Arab:"ar-Arab-EG","Arab-CN":"ug-Arab-CN","Arab-IN":"ur-Arab-IN","Arab-NG":"ha-Arab-NG","Arab-PK":"ur-Arab-PK",Armi:"arc-Armi-IR",Armn:"hy-Armn-AM",AS:"sm-Latn-AS",AT:"de-Latn-AT",Avst:"ae-Avst-IR",AW:"nl-Latn-AW",AX:"sv-Latn-AX",AZ:"az-Latn-AZ",
BA:"bs-Latn-BA",Bali:"ban-Bali-ID",Bamu:"bax-Bamu-CM",Batk:"bbc-Batk-ID",BD:"bn-Beng-BD",BE:"nl-Latn-BE",Beng:"bn-Beng-BD",BF:"fr-Latn-BF",BG:"bg-Cyrl-BG",BH:"ar-Arab-BH",BI:"rn-Latn-BI",BJ:"fr-Latn-BJ",BL:"fr-Latn-BL",BN:"ms-Latn-BN",BO:"es-Latn-BO",Bopo:"zh-Bopo-TW",BR:"pt-Latn-BR",Brah:"pra-Brah-IN",Brai:"und-Brai-FR",BT:"dz-Tibt-BT",Bugi:"bug-Bugi-ID",Buhd:"bku-Buhd-PH",BY:"be-Cyrl-BY",Cakm:"ccp-Cakm-BD",Cans:"cr-Cans-CA",Cari:"xcr-Cari-TR",CD:"sw-Latn-CD",CF:"fr-Latn-CF",CG:"fr-Latn-CG",CH:"de-Latn-CH",
Cham:"cjm-Cham-VN",Cher:"chr-Cher-US",CI:"fr-Latn-CI",CL:"es-Latn-CL",CM:"fr-Latn-CM",CN:"zh-Hans-CN",CO:"es-Latn-CO",Copt:"cop-Copt-EG",CP:"fr-Latn-CP",Cprt:"grc-Cprt-CY",CR:"es-Latn-CR",CU:"es-Latn-CU",CV:"pt-Latn-CV",CY:"el-Grek-CY",Cyrl:"ru-Cyrl-RU","Cyrl-BA":"sr-Cyrl-BA","Cyrl-GE":"ab-Cyrl-GE",CZ:"cs-Latn-CZ",DE:"de-Latn-DE",Deva:"hi-Deva-IN",DJ:"aa-Latn-DJ",DK:"da-Latn-DK",DO:"es-Latn-DO",DZ:"ar-Arab-DZ",EA:"es-Latn-EA",EC:"es-Latn-EC",EE:"et-Latn-EE",EG:"ar-Arab-EG",Egyp:"egy-Egyp-EG",EH:"ar-Arab-EH",
ER:"ti-Ethi-ER",ES:"es-Latn-ES",Ethi:"am-Ethi-ET",FI:"fi-Latn-FI",FM:"chk-Latn-FM",FO:"fo-Latn-FO",FR:"fr-Latn-FR",GA:"fr-Latn-GA",GE:"ka-Geor-GE",Geor:"ka-Geor-GE",GF:"fr-Latn-GF",GH:"ak-Latn-GH",GL:"kl-Latn-GL",Glag:"cu-Glag-BG",GN:"fr-Latn-GN",Goth:"got-Goth-UA",GP:"fr-Latn-GP",GQ:"es-Latn-GQ",GR:"el-Grek-GR",Grek:"el-Grek-GR",GT:"es-Latn-GT",Gujr:"gu-Gujr-IN",Guru:"pa-Guru-IN",GW:"pt-Latn-GW",Hang:"ko-Hang-KR",Hani:"zh-Hans-CN",Hano:"hnn-Hano-PH",Hans:"zh-Hans-CN",Hant:"zh-Hant-TW",Hebr:"he-Hebr-IL",
Hira:"ja-Hira-JP",HK:"zh-Hant-HK",HN:"es-Latn-HN",HR:"hr-Latn-HR",HT:"ht-Latn-HT",HU:"hu-Latn-HU",IC:"es-Latn-IC",ID:"id-Latn-ID",IL:"he-Hebr-IL",IN:"hi-Deva-IN",IQ:"ar-Arab-IQ",IR:"fa-Arab-IR",IS:"is-Latn-IS",IT:"it-Latn-IT",Ital:"ett-Ital-IT",Java:"jv-Java-ID",JO:"ar-Arab-JO",JP:"ja-Jpan-JP",Jpan:"ja-Jpan-JP",Kali:"eky-Kali-MM",Kana:"ja-Kana-JP",KG:"ky-Cyrl-KG",KH:"km-Khmr-KH",Khar:"pra-Khar-PK",Khmr:"km-Khmr-KH",KM:"ar-Arab-KM",Knda:"kn-Knda-IN",Kore:"ko-Kore-KR",KP:"ko-Kore-KP",KR:"ko-Kore-KR",
Kthi:"bh-Kthi-IN",KW:"ar-Arab-KW",KZ:"ru-Cyrl-KZ",LA:"lo-Laoo-LA",Lana:"nod-Lana-TH",Laoo:"lo-Laoo-LA","Latn-CN":"za-Latn-CN","Latn-CY":"tr-Latn-CY","Latn-DZ":"fr-Latn-DZ","Latn-ER":"aa-Latn-ER","Latn-KM":"fr-Latn-KM","Latn-MA":"fr-Latn-MA","Latn-MK":"sq-Latn-MK","Latn-MR":"fr-Latn-MR","Latn-SY":"fr-Latn-SY","Latn-TN":"fr-Latn-TN",LB:"ar-Arab-LB",Lepc:"lep-Lepc-IN",LI:"de-Latn-LI",Limb:"lif-Limb-IN",Linb:"grc-Linb-GR",Lisu:"lis-Lisu-CN",LK:"si-Sinh-LK",LS:"st-Latn-LS",LT:"lt-Latn-LT",LU:"fr-Latn-LU",
LV:"lv-Latn-LV",LY:"ar-Arab-LY",Lyci:"xlc-Lyci-TR",Lydi:"xld-Lydi-TR",MA:"ar-Arab-MA",Mand:"myz-Mand-IR",MC:"fr-Latn-MC",MD:"ro-Latn-MD",ME:"sr-Latn-ME",Merc:"xmr-Merc-SD",Mero:"xmr-Mero-SD",MF:"fr-Latn-MF",MG:"mg-Latn-MG",MK:"mk-Cyrl-MK",ML:"bm-Latn-ML",Mlym:"ml-Mlym-IN",MM:"my-Mymr-MM",MN:"mn-Cyrl-MN",MO:"zh-Hant-MO",Mong:"mn-Mong-CN",MQ:"fr-Latn-MQ",MR:"ar-Arab-MR",MT:"mt-Latn-MT",Mtei:"mni-Mtei-IN",MU:"mfe-Latn-MU",MV:"dv-Thaa-MV",MX:"es-Latn-MX",MY:"ms-Latn-MY",Mymr:"my-Mymr-MM",MZ:"pt-Latn-MZ",
NA:"kj-Latn-NA",NC:"fr-Latn-NC",NE:"ha-Latn-NE",NI:"es-Latn-NI",Nkoo:"man-Nkoo-GN",NL:"nl-Latn-NL",NO:"nb-Latn-NO",NP:"ne-Deva-NP",Ogam:"sga-Ogam-IE",Olck:"sat-Olck-IN",OM:"ar-Arab-OM",Orkh:"otk-Orkh-MN",Orya:"or-Orya-IN",Osma:"so-Osma-SO",PA:"es-Latn-PA",PE:"es-Latn-PE",PF:"fr-Latn-PF",PG:"tpi-Latn-PG",PH:"fil-Latn-PH",Phag:"lzh-Phag-CN",Phli:"pal-Phli-IR",Phnx:"phn-Phnx-LB",PK:"ur-Arab-PK",PL:"pl-Latn-PL",Plrd:"hmd-Plrd-CN",PM:"fr-Latn-PM",PR:"es-Latn-PR",Prti:"xpr-Prti-IR",PS:"ar-Arab-PS",PT:"pt-Latn-PT",
PW:"pau-Latn-PW",PY:"gn-Latn-PY",QA:"ar-Arab-QA",RE:"fr-Latn-RE",Rjng:"rej-Rjng-ID",RO:"ro-Latn-RO",RS:"sr-Cyrl-RS",RU:"ru-Cyrl-RU",Runr:"non-Runr-SE",RW:"rw-Latn-RW",SA:"ar-Arab-SA",Samr:"smp-Samr-IL",Sarb:"xsa-Sarb-YE",Saur:"saz-Saur-IN",SC:"fr-Latn-SC",SD:"ar-Arab-SD",SE:"sv-Latn-SE",Shaw:"en-Shaw-GB",Shrd:"sa-Shrd-IN",SI:"sl-Latn-SI",Sinh:"si-Sinh-LK",SJ:"nb-Latn-SJ",SK:"sk-Latn-SK",SM:"it-Latn-SM",SN:"fr-Latn-SN",SO:"so-Latn-SO",Sora:"srb-Sora-IN",SR:"nl-Latn-SR",ST:"pt-Latn-ST",Sund:"su-Sund-ID",
SV:"es-Latn-SV",SY:"ar-Arab-SY",Sylo:"syl-Sylo-BD",Syrc:"syr-Syrc-SY",Tagb:"tbw-Tagb-PH",Takr:"doi-Takr-IN",Tale:"tdd-Tale-CN",Talu:"khb-Talu-CN",Taml:"ta-Taml-IN",Tavt:"blt-Tavt-VN",TD:"fr-Latn-TD",Telu:"te-Telu-IN",Tfng:"shi-Tfng-TN",TG:"fr-Latn-TG",Tglg:"fil-Tglg-PH",TH:"th-Thai-TH",Thaa:"dv-Thaa-MV",Thai:"th-Thai-TH",Tibt:"bo-Tibt-CN",TJ:"tg-Cyrl-TJ",TK:"tkl-Latn-TK",TL:"pt-Latn-TL",TM:"tk-Latn-TM",TN:"ar-Arab-TN",TO:"to-Latn-TO",TR:"tr-Latn-TR",TV:"tvl-Latn-TV",TW:"zh-Hant-TW",TZ:"sw-Latn-TZ",
UA:"uk-Cyrl-UA",UG:"sw-Latn-UG",Ugar:"uga-Ugar-SY",UY:"es-Latn-UY",UZ:"uz-Cyrl-UZ",VA:"la-Latn-VA",Vaii:"vai-Vaii-LR",VE:"es-Latn-VE",VN:"vi-Latn-VN",VU:"bi-Latn-VU",WF:"fr-Latn-WF",WS:"sm-Latn-WS",Xpeo:"peo-Xpeo-IR",Xsux:"akk-Xsux-IQ",YE:"ar-Arab-YE",Yiii:"ii-Yiii-CN",YT:"fr-Latn-YT",ur:"ur-Arab-PK",uz:"uz-Cyrl-UZ","uz-AF":"uz-Arab-AF","uz-Arab":"uz-Arab-AF",vai:"vai-Vaii-LR",ve:"ve-Latn-ZA",vi:"vi-Latn-VN",vo:"vo-Latn-001",vun:"vun-Latn-TZ",wae:"wae-Latn-CH",wal:"wal-Ethi-ET",war:"war-Latn-PH",
wo:"wo-Latn-SN",xh:"xh-Latn-ZA",xog:"xog-Latn-UG",yap:"yap-Latn-FM",yav:"yav-Latn-CM",yi:"yi-Hebr-IL",yo:"yo-Latn-NG",za:"za-Latn-CN",zh:"zh-Hans-CN","zh-Hani":"zh-Hans-CN","zh-Hant":"zh-Hant-TW","zh-HK":"zh-Hant-HK","zh-MO":"zh-Hant-MO","zh-TW":"zh-Hant-TW",zu:"zu-Latn-ZA"};
ilib.LocaleMatcher=function $ilib$LocaleMatcher$($options$$){var $sync$$=true,$loadParams$$=void 0;this.locale=new ilib.Locale;if($options$$){if(typeof $options$$.locale!=="undefined")this.locale=typeof $options$$.locale==="string"?new ilib.Locale($options$$.locale):$options$$.locale;typeof $options$$.sync!=="undefined"&&($sync$$=$options$$.sync==true);if(typeof $options$$.loadParams!=="undefined")$loadParams$$=$options$$.loadParams}if(!ilib.LocaleMatcher.cache)ilib.LocaleMatcher.cache={};typeof ilib.data.likelylocales===
"undefined"?ilib.loadData({object:ilib.LocaleMatcher,locale:"-",name:"likelylocales.json",sync:$sync$$,loadParams:$loadParams$$,callback:ilib.bind(this,function($info$$){if(!$info$$){var $info$$={},$spec$$=this.locale.getSpec().replace(/-/g,"_");ilib.LocaleMatcher.cache[$spec$$]=$info$$}this.info=$info$$;if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad(this)})}):this.info=ilib.data.likelylocales};
ilib.LocaleMatcher.prototype={getLocale:function $ilib$LocaleMatcher$$getLocale$(){return this.locale},getLikelyLocale:function $ilib$LocaleMatcher$$getLikelyLocale$(){return typeof this.info[this.locale.getSpec()]==="undefined"?this.locale:new ilib.Locale(this.info[this.locale.getSpec()])}};
ilib.CaseMapper=function $ilib$CaseMapper$($options$$){this.up=true;this.locale=new ilib.Locale;if($options$$){if(typeof $options$$.locale!=="undefined")this.locale=typeof $options$$.locale==="string"?new ilib.Locale($options$$.locale):$options$$.locale;this.up=!$options$$.direction||$options$$.direction==="toupper"}this.mapData=this.up?{"\u00df":"SS","\u0390":"\u0399","\u03ac":"\u0391","\u03ad":"\u0395","\u03ae":"\u0397","\u03af":"\u0399","\u03b0":"\u03a5","\u03ca":"\u0399","\u03cb":"\u03a5","\u03cc":"\u039f",
"\u03cd":"\u03a5","\u03ce":"\u03a9","\u04c0":"\u04c0","\u04cf":"\u04c0"}:{"\u04c0":"\u04c0"};switch(this.locale.getLanguage()){case "az":case "tr":case "crh":case "kk":case "krc":case "tt":this._setUpMap("i\u0131","\u0130I");break;case "fr":this.up&&this.locale.getRegion()!=="CA"&&this._setUpMap("\u00e0\u00e1\u00e2\u00e3\u00e4\u00e7\u00e8\u00e9\u00ea\u00eb\u00ec\u00ed\u00ee\u00ef\u00f1\u00f2\u00f3\u00f4\u00f6\u00f9\u00fa\u00fb\u00fc","AAAAACEEEEIIIINOOOOUUUU")}if(ilib._getBrowser()==="ie"){this.up&&
(this.mapData["\u03c2"]="\u03a3");this._setUpMap("\u2c81\u2c83\u2c85\u2c87\u2c89\u2c8b\u2c8d\u2c8f\u2c91\u2c93\u2c95\u2c97\u2c99\u2c9b\u2c9d\u2c9f\u2ca1\u2ca3\u2ca5\u2ca7\u2ca9\u2cab\u2cad\u2caf\u2cb1\u2cc1\u2cc9\u2ccb","\u2c80\u2c82\u2c84\u2c86\u2c88\u2c8a\u2c8c\u2c8e\u2c90\u2c92\u2c94\u2c96\u2c98\u2c9a\u2c9c\u2c9e\u2ca0\u2ca2\u2ca4\u2ca6\u2ca8\u2caa\u2cac\u2cae\u2cb0\u2cc0\u2cc8\u2cca");this._setUpMap("\u2d00\u2d01\u2d02\u2d03\u2d04\u2d05\u2d06\u2d07\u2d08\u2d09\u2d0a\u2d0b\u2d0c\u2d0d\u2d0e\u2d0f\u2d10\u2d11\u2d12\u2d13\u2d14\u2d15\u2d16\u2d17\u2d18\u2d19\u2d1a\u2d1b\u2d1c\u2d1d\u2d1e\u2d1f\u2d20\u2d21\u2d22\u2d23\u2d24\u2d25",
"\u10a0\u10a1\u10a2\u10a3\u10a4\u10a5\u10a6\u10a7\u10a8\u10a9\u10aa\u10ab\u10ac\u10ad\u10ae\u10af\u10b0\u10b1\u10b2\u10b3\u10b4\u10b5\u10b6\u10b7\u10b8\u10b9\u10ba\u10bb\u10bc\u10bd\u10be\u10bf\u10c0\u10c1\u10c2\u10c3\u10c4\u10c5")}};
ilib.CaseMapper.prototype={_charMapper:function $ilib$CaseMapper$$_charMapper$($it$$10_string$$){if(!$it$$10_string$$)return $it$$10_string$$;for(var $ret$$="",$it$$10_string$$=(typeof $it$$10_string$$==="string"?new ilib.String($it$$10_string$$):$it$$10_string$$.toString()).charIterator(),$c$$;$it$$10_string$$.hasNext();){$c$$=$it$$10_string$$.next();if(!this.up&&$c$$==="\u03a3")if($it$$10_string$$.hasNext()){$c$$=$it$$10_string$$.next();var $code$$=$c$$.charCodeAt(0),$ret$$=$ret$$+($code$$<904&&
$code$$!==902||$code$$>974?"\u03c2":"\u03c3"),$ret$$=$ret$$+$c$$.toLowerCase()}else $ret$$=$ret$$+"\u03c2";else $ret$$=this.mapData[$c$$]?$ret$$+this.mapData[$c$$]:$ret$$+(this.up?$c$$.toUpperCase():$c$$.toLowerCase())}return $ret$$},_setUpMap:function $ilib$CaseMapper$$_setUpMap$($lower$$,$upper$$){var $from$$,$to$$;if(this.up){$from$$=$lower$$;$to$$=$upper$$}else{$from$$=$upper$$;$to$$=$lower$$}for(var $i$$=0;$i$$<$upper$$.length;$i$$++)this.mapData[$from$$[$i$$]]=$to$$[$i$$]},getLocale:function $ilib$CaseMapper$$getLocale$(){return this.locale},
map:function $ilib$CaseMapper$$map$($string$$){return this._charMapper($string$$)}};ilib.data.numplan={region:"XX",skipTrunk:!1,trunkCode:"0",iddCode:"00",dialingPlan:"closed",commonFormatChars:" ()-./",fieldLengths:{areaCode:0,cic:0,mobilePrefix:0,serviceCode:0}};ilib.data.numplan_AU={region:"AU",skipTrunk:!0,trunkCode:"0",iddCode:"0011",dialingPlan:"open",extendedAreaCodes:!0,commonFormatChars:" ()",fieldLengths:{areaCode:1,cic:0,mobilePrefix:4,serviceCode:0,emergency:0,vsc:0,minLocalLength:8,maxLocalLength:8}};
ilib.data.numplan_GB={region:"GB",skipTrunk:!0,trunkCode:"0",contextFree:!1,iddCode:"00",dialingPlan:"open",commonFormatChars:" ()-",fieldLengths:{areaCode:0,cic:0,vsc:0,mobilePrefix:4,serviceCode:0,personal:0,minLocalLength:4,maxLocalLength:8,emergency:0}};ilib.data.numplan_IN={region:"IN",skipTrunk:!0,trunkCode:"0",iddCode:"00",dialingPlan:"open",commonFormatChars:" ()-",fieldLengths:{areaCode:0,mobilePrefix:3,serviceCode:0,emergency:0,cic:4,minLocalLength:6,maxLocalLength:8}};
ilib.data.numplan_NG={region:"NG",countryCode:"234",iddCode:"009",trunkCode:"0",skipTrunk:!0};ilib.data.numplan_PH={region:"PH",countryCode:"63",iddCode:"00",trunkCode:"0",skipTrunk:!0};ilib.data.numplan_PK={region:"PK",countryCode:"92",iddCode:"00",trunkCode:"0",skipTrunk:!0};
ilib.data.numplan_US={region:"US",skipTrunk:!0,trunkCode:"1",iddCode:"011",dialingPlan:"closed",commonFormatChars:" ()-.",fieldLengths:{areaCode:3,vsc:0,cic:7,mobilePrefix:0,serviceCode:0,minLocalLength:7,maxLocalLength:7,emergency:0,special:0,cic2:4}};ilib.data.numplan_ZA={region:"ZA",countryCode:"27",iddCode:"00",trunkCode:"0",skipTrunk:!0,dialingPlan:"closed"};
ilib.data.numplan_DE={region:"DE",skipTrunk:!0,trunkCode:"0",findExtensions:!0,iddCode:"00",dialingPlan:"open",commonFormatChars:" ()-/.",fieldLengths:{areaCode:0,cic:0,mobilePrefix:-1,serviceCode:0,personal:0,service2:6,service3:7,emergency:0,minLocalLength:3,premium:0}};
ilib.data.numplan_FR={region:"FR",skipTrunk:!0,trunkCode:"0",iddCode:"00",dialingPlan:"closed",trunkRequired:!0,commonFormatChars:" ().-",extendedAreaCodes:!0,fieldLengths:{areaCode:1,cic:0,mobilePrefix:1,serviceCode:1,minLocalLength:8,special:0,service2:0}};ilib.data.numplan_AR={region:"AR",countryCode:"54",iddCode:"00",trunkCode:"0",skipTrunk:!0};
ilib.data.numplan_ES={region:"ES",skipTrunk:!0,trunkCode:"",iddCode:"00",dialingPlan:"closed",commonFormatChars:" ()-",fieldLengths:{areaCode:0,cic:4,mobilePrefix:3,serviceCode:3,emergency:0,minLocalLength:9,personal:3,service2:3}};ilib.data.numplan_MX={region:"MX",skipTrunk:!0,trunkCode:"01",iddCode:"00",dialingPlan:"open",commonFormatChars:" ()-/",fieldLengths:{areaCode:0,cic:0,mobilePrefix:0,serviceCode:0,minLocalLength:7,maxLocalLength:8}};
ilib.data.numplan_ID={region:"ID",countryCode:"62",iddCode:"001",trunkCode:"0",skipTrunk:!0};ilib.data.numplan_IT={region:"IT",skipTrunk:!1,trunkCode:"0",iddCode:"00",dialingPlan:"open",commonFormatChars:" ()-/",fieldLengths:{areaCode:0,cic:0,mobilePrefix:3,serviceCode:0,service2:2,service3:3,service4:4,emergency:0,minLocalLength:4,premium:0}};
ilib.data.numplan_JP={region:"JP",countryCode:"81",iddCode:"010",trunkCode:"0",skipTrunk:!0,dialingPlan:"open",extendedAreaCodes:!0,commonFormatChars:" ()-\u2015",fieldLengths:{areaCode:0,cic:0,vsc:0,mobilePrefix:0,serviceCode:0,personal:0,minLocalLength:5,maxLocalLength:13,emergency:0}};
ilib.data.numplan_KR={region:"KR",countryCode:"82",iddCode:"001",trunkCode:"0",skipTrunk:!0,dialingPlan:"open",commonFormatChars:" ()-.",fieldLengths:{areaCode:0,vsc:0,cic:0,mobilePrefix:0,serviceCode:0,minLocalLength:7,maxLocalLength:8,emergency:0,special:0}};
ilib.data.numplan_BR={region:"BR",countryCode:"55",iddCode:"00",trunkCode:"0",skipTrunk:!0,dialingPlan:"open",commonFormatChars:" -",fieldLengths:{areaCode:0,vsc:0,cic:0,mobilePrefix:0,serviceCode:0,minLocalLength:8,maxLocalLength:8,emergency:0,special:0}};
ilib.data.numplan_RU={region:"RU",countryCode:"7",iddCode:"810",trunkCode:"8",skipTrunk:!0,dialingPlan:"open",commonFormatChars:" ()-.",fieldLengths:{areaCode:0,vsc:0,cic:0,mobilePrefix:0,serviceCode:0,minLocalLength:5,maxLocalLength:11,emergency:0,special:0}};ilib.data.numplan_TR={region:"TR",countryCode:"90",iddCode:"00",trunkCode:"0",skipTrunk:!0,dialingPlan:"closed"};ilib.data.numplan_VN={region:"VN",countryCode:"84",iddCode:"00",trunkCode:"0",skipTrunk:!0};
ilib.data.numplan_CN={region:"CN",skipTrunk:!0,trunkCode:"0",iddCode:"00",dialingPlan:"open",commonFormatChars:" ()-",fieldLengths:{areaCode:0,mobilePrefix:0,serviceCode:0,premium:0,minLocalLength:7,emergency:0}};ilib.data.numplan_HK={region:"HK",countryCode:"852",iddCode:"001",dialingPlan:"closed",skipTrunk:!1,findExtensions:!1,commonFormatChars:" ()-/",fieldLengths:{mobilePrefix:1,serviceCode:1,premium:0,minLocalLength:7,maxLocalLength:8,emergency:0}};
ilib.data.numplan_TW={region:"TW",countryCode:"886",iddCode:"002",trunkCode:"0",skipTrunk:!0,commonFormatChars:" ()-",dialingPlan:"open",extendedAreaCodes:"true",fieldLengths:{areaCode:0,vsc:0,cic:0,mobilePrefix:0,serviceCode:0,minLocalLength:5,maxLocalLength:12,emergency:3}};ilib.data.numplan_SG={region:"SG",skipTrunk:!1,trunkCode:"0",iddCode:"00",dialingPlan:"closed",findExtensions:!1,commonFormatChars:" ()-/",fieldLengths:{mobilePrefix:-2,serviceCode:0,premium:0,minLocalLength:8,emergency:0}};
ilib.NumPlan=function $ilib$NumPlan$($options$$){var $sync$$=true,$loadParams$$={};this.locale=new ilib.Locale;if($options$$){if($options$$.locale)this.locale=typeof $options$$.locale==="string"?new ilib.Locale($options$$.locale):$options$$.locale;typeof $options$$.sync!=="undefined"&&($sync$$=$options$$.sync==true);if($options$$.loadParams)$loadParams$$=$options$$.loadParams}ilib.loadData({name:"numplan.json",object:ilib.NumPlan,locale:this.locale,sync:$sync$$,loadParams:$loadParams$$,callback:ilib.bind(this,
function($npdata$$){$npdata$$||($npdata$$={region:"XX",skipTrunk:false,trunkCode:"0",iddCode:"00",dialingPlan:"closed",commonFormatChars:" ()-./",fieldLengths:{areaCode:0,cic:0,mobilePrefix:0,serviceCode:0}});this.npdata=$npdata$$;if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad(this)})})};
ilib.NumPlan.prototype={getName:function $ilib$NumPlan$$getName$(){return this.npdata.region},getTrunkCode:function $ilib$NumPlan$$getTrunkCode$(){return this.npdata.trunkCode},getIDDCode:function $ilib$NumPlan$$getIDDCode$(){return this.npdata.iddCode},getPlanStyle:function $ilib$NumPlan$$getPlanStyle$(){return this.npdata.dialingPlan},getContextFree:function $ilib$NumPlan$$getContextFree$(){return this.npdata.contextFree},getFindExtensions:function $ilib$NumPlan$$getFindExtensions$(){return this.npdata.findExtensions},
getSkipTrunk:function $ilib$NumPlan$$getSkipTrunk$(){return this.npdata.skipTrunk},getTrunkRequired:function $ilib$NumPlan$$getTrunkRequired$(){return this.npdata.trunkRequired},getExtendedAreaCode:function $ilib$NumPlan$$getExtendedAreaCode$(){return this.npdata.extendedAreaCodes},getCommonFormatChars:function $ilib$NumPlan$$getCommonFormatChars$(){return this.npdata.commonFormatChars},getFieldLength:function $ilib$NumPlan$$getFieldLength$($field$$){return this.npdata.fieldLengths[$field$$]}};
ilib.data.phoneloc={mcc2reg:{202:"GR",204:"NL",206:"BE",208:"FR",212:"MC",213:"AD",214:"ES",216:"HU",218:"BA",219:"HR",220:"RS",222:"IT",225:"VA",226:"RO",228:"CH",230:"CZ",231:"SK",232:"AT",234:"GB",235:"GB",238:"DK",240:"SE",242:"NO",244:"FI",246:"LT",247:"LV",248:"EE",250:"RU",255:"UA",257:"BY",259:"MD",260:"PL",262:"DE",266:"GI",268:"PT",270:"LU",272:"IE",274:"IS",276:"AL",278:"MT",280:"CY",282:"GE",283:"AM",284:"BG",286:"TR",288:"FO",290:"GL",292:"SM",293:"SI",294:"MK",295:"LI",297:"ME",302:"CA",
308:"PM",310:"US",311:"US",312:"US",313:"US",314:"US",315:"US",316:"US",330:"PR",332:"VI",334:"MX",338:"JM",340:"MQ",342:"BB",344:"AG",346:"KY",348:"VG",350:"BM",352:"GD",354:"MS",356:"KN",358:"LC",360:"VC",362:"AN",363:"AW",364:"BS",365:"AI",366:"DM",368:"CU",370:"DO",372:"HT",374:"TT",376:"TC",400:"AZ",401:"KZ",402:"BT",404:"IN",405:"IN",406:"IN",410:"PK",412:"AF",413:"LK",414:"MM",415:"LB",416:"JO",417:"SY",418:"IQ",419:"KW",420:"SA",421:"YE",422:"OM",423:"PS",424:"AE",425:"IL",426:"BH",427:"QA",
428:"MN",429:"NP",430:"AE",431:"AE",432:"IR",434:"UZ",436:"TJ",437:"KG",438:"TM",440:"JP",441:"JP",450:"KR",452:"VN",454:"HK",455:"MO",456:"KH",457:"LA",460:"CN",461:"CN",466:"TW",467:"KP",470:"BD",472:"MV",502:"MY",505:"AU",510:"ID",514:"TL",515:"PH",520:"TH",525:"SG",528:"BN",530:"NZ",534:"MP",535:"GU",536:"NR",537:"PG",539:"TO",540:"SB",541:"VU",542:"FJ",543:"WF",544:"AS",545:"KI",546:"NC",547:"PF",548:"CK",549:"WS",550:"FM",551:"MH",552:"PW",602:"EG",603:"DZ",604:"MA",605:"TN",606:"LY",607:"GM",
608:"SN",609:"MR",610:"ML",611:"GN",612:"CI",613:"BF",614:"NE",615:"TG",616:"BJ",617:"MU",618:"LR",619:"SL",620:"GH",621:"NG",622:"TD",623:"CF",624:"CM",625:"CV",626:"ST",627:"GQ",628:"GA",629:"CG",630:"CD",631:"AO",632:"GW",633:"SC",634:"SD",635:"RW",636:"ET",637:"SO",638:"DJ",639:"KE",640:"TZ",641:"UG",642:"BI",643:"MZ",645:"ZM",646:"MG",647:"RE",648:"ZW",649:"NA",650:"MW",651:"LS",652:"BW",653:"SZ",654:"KM",655:"ZA",657:"ER",702:"BZ",704:"GT",706:"SV",708:"HN",710:"NI",712:"CR",714:"PA",716:"PE",
722:"AR",724:"BR",730:"CL",732:"CO",734:"VE",736:"BO",738:"GY",740:"EC",742:"GF",744:"PY",746:"SR",748:"UY",750:"FK",971:"AE"},mcc2cc:{202:"30",204:"31",206:"32",208:"33",212:"377",213:"376",214:"34",216:"36",218:"387",219:"385",220:"381",222:"39",225:"379",226:"40",228:"41",230:"420",231:"421",232:"43",234:"44",235:"44",238:"45",240:"46",242:"47",244:"358",246:"370",247:"371",248:"372",250:"7",255:"380",257:"375",259:"373",260:"48",262:"49",266:"350",268:"351",270:"352",272:"353",274:"354",276:"355",
278:"356",280:"357",282:"995",283:"374",284:"359",286:"90",288:"298",290:"299",292:"378",293:"386",294:"389",295:"423",297:"382",302:"1",308:"508",310:"1",311:"1",312:"1",313:"1",314:"1",315:"1",316:"1",330:"1",332:"1",334:"52",338:"1",340:"596",342:"1",344:"1",346:"1",348:"1",350:"1",352:"1",354:"1",356:"1",358:"1",360:"1",362:"599",363:"297",364:"1",365:"1",366:"1",368:"53",370:"1",372:"509",374:"1",376:"1",400:"994",401:"7",402:"975",404:"91",405:"91",410:"92",412:"93",413:"94",414:"95",415:"961",
416:"962",417:"963",418:"964",419:"965",420:"966",421:"967",422:"968",423:"970",424:"971",425:"972",426:"973",427:"974",428:"976",429:"977",430:"971",431:"971",432:"98",434:"998",436:"992",437:"996",438:"993",440:"81",441:"81",450:"82",452:"84",454:"852",455:"853",456:"855",457:"856",460:"86",466:"886",467:"850",470:"880",472:"960",502:"60",505:"61",510:"62",514:"670",515:"63",520:"66",525:"65",528:"673",530:"64",534:"1",535:"1",536:"674",537:"675",539:"676",540:"677",541:"678",542:"679",543:"681",
544:"1",545:"686",546:"687",547:"689",548:"682",549:"685",550:"691",551:"692",552:"680",602:"20",603:"213",604:"212",605:"216",606:"218",607:"220",608:"221",609:"222",610:"223",611:"224",612:"225",613:"226",614:"227",615:"228",616:"229",617:"230",618:"231",619:"232",620:"233",621:"234",622:"235",623:"236",624:"237",625:"238",626:"239",627:"240",628:"241",629:"242",630:"243",631:"244",632:"245",633:"248",634:"249",635:"250",636:"251",637:"252",638:"253",639:"254",640:"255",641:"256",642:"257",643:"258",
645:"260",646:"261",647:"262",648:"263",649:"264",650:"265",651:"266",652:"267",653:"268",654:"269",655:"27",657:"291",702:"501",704:"502",706:"503",708:"504",710:"505",712:"506",714:"507",716:"51",722:"54",724:"55",730:"56",732:"57",734:"58",736:"591",738:"592",740:"593",742:"594",744:"595",746:"597",748:"598",750:"500"},cc2reg:{1:"US",7:"RU",20:"EG",27:"ZA",28:"unknown",30:"GR",31:"NL",32:"BE",33:"FR",34:"ES",36:"HU",39:"IT",40:"RO",41:"CH",43:"AT",44:"GB",45:"DK",46:"SE",47:"NO",48:"PL",49:"DE",
51:"PE",52:"MX",53:"CU",54:"AR",55:"BR",56:"CL",57:"CO",58:"VE",60:"MY",61:"AU",62:"ID",63:"PH",64:"NZ",65:"SG",66:"TH",81:"JP",82:"KR",83:"unknown",84:"VN",86:"CN",89:"unknown",90:"TR",91:"IN",92:"PK",93:"AF",94:"LK",95:"MM",98:"IR",210:"unknown",211:"unknown",212:"MA",213:"DZ",214:"unknown",215:"unknown",216:"TN",217:"unknown",218:"LY",219:"unknown",220:"GM",221:"SN",222:"MR",223:"ML",224:"GN",225:"CI",226:"BF",227:"NE",228:"TG",229:"BJ",230:"MU",231:"LR",232:"SL",233:"GH",234:"NG",235:"TD",236:"CF",
237:"CM",238:"CV",239:"ST",240:"GQ",241:"GA",242:"CG",243:"CD",244:"AO",245:"GW",246:"IO",247:"AC",248:"SC",249:"SD",250:"RW",251:"ET",252:"SO",253:"DJ",254:"KE",255:"TZ",256:"UG",257:"BI",258:"MZ",259:"unknown",260:"ZM",261:"MG",262:"RE",263:"ZW",264:"NA",265:"MW",266:"LS",267:"BW",268:"SZ",269:"KM",290:"SH",291:"ER",292:"unknown",293:"unknown",294:"unknown",295:"unknown",296:"unknown",297:"AW",298:"FO",299:"GL",350:"GI",351:"PT",352:"LU",353:"IE",354:"IS",355:"AL",356:"MT",357:"CY",358:"FI",359:"BG",
370:"LT",371:"LV",372:"EE",373:"MD",374:"AM",375:"BY",376:"AD",377:"MC",378:"SM",379:"VA",380:"UA",381:"RS",382:"ME",383:"unknown",384:"unknown",385:"HR",386:"SI",387:"BA",388:"EU",389:"MK",420:"CZ",421:"SK",422:"unknown",423:"LI",424:"unknown",425:"unknown",426:"unknown",427:"unknown",428:"unknown",429:"unknown",500:"FK",501:"BZ",502:"GT",503:"SV",504:"HN",505:"NI",506:"CR",507:"PA",508:"PM",509:"HT",590:"GP",591:"BO",592:"GY",593:"EC",594:"GF",595:"PY",596:"MQ",597:"SR",598:"UY",599:"AN",670:"TL",
671:"unknown",672:"NF",673:"BN",674:"NR",675:"PG",676:"TO",677:"SB",678:"VU",679:"FJ",680:"PW",681:"WF",682:"CK",683:"NU",684:"unknown",685:"WS",686:"KI",687:"NC",688:"TV",689:"PF",690:"TK",691:"FM",692:"MH",693:"unknown",694:"unknown",695:"unknown",696:"unknown",697:"unknown",698:"unknown",699:"unknown",800:"XT",801:"unknown",802:"unknown",803:"unknown",804:"unknown",805:"unknown",806:"unknown",807:"unknown",808:"XS",809:"unknown",850:"KP",851:"unknown",852:"HK",853:"MO",854:"unknown",855:"KH",856:"LA",
857:"unknown",858:"unknown",859:"unknown",870:"XN",871:"unknown",872:"PN",873:"unknown",874:"unknown",875:"unknown",876:"unknown",877:"unknown",878:"XP",879:"unknown",880:"BD",881:"XG",882:"XV",883:"XL",884:"unknown",885:"unknown",886:"TW",887:"unknown",888:"XD",889:"unknown",960:"MV",961:"LB",962:"JO",963:"SY",964:"IQ",965:"KW",966:"SA",967:"YE",968:"OM",969:"unknown",970:"PS",971:"AE",972:"IL",973:"BH",974:"QA",975:"BT",976:"MN",977:"NP",978:"unknown",979:"XR",990:"unknown",991:"XC",992:"TJ",993:"TM",
994:"AZ",995:"GE",996:"KG",997:"unknown",998:"UZ",999:"unknown"},reg2cc:{US:"1",EG:"20",unknown:"0",MA:"212",DZ:"213",TN:"216",LY:"218",GM:"220",SN:"221",MR:"222",ML:"223",GN:"224",CI:"225",BF:"226",NE:"227",TG:"228",BJ:"229",MU:"230",LR:"231",SL:"232",GH:"233",NG:"234",TD:"235",CF:"236",CM:"237",CV:"238",ST:"239",GQ:"240",GA:"241",CG:"242",CD:"243",AO:"244",GW:"245",IO:"246",AC:"247",SC:"248",SD:"249",RW:"250",ET:"251",SO:"252",DJ:"253",KE:"254",TZ:"255",UG:"256",BI:"257",MZ:"258",ZM:"260",MG:"261",
RE:"262",ZW:"263",NA:"264",MW:"265",LS:"266",BW:"267",SZ:"268",KM:"269",ZA:"27",SH:"290",ER:"291",AW:"297",FO:"298",GL:"299",GR:"30",NL:"31",BE:"32",FR:"33",ES:"34",GI:"350",PT:"351",LU:"352",IE:"353",IS:"354",AL:"355",MT:"356",CY:"357",FI:"358",BG:"359",HU:"36",LT:"370",LV:"371",EE:"372",MD:"373",AM:"374",BY:"375",AD:"376",MC:"377",SM:"378",VA:"379",UA:"380",RS:"381",ME:"382",HR:"385",SI:"386",BA:"387",EU:"388",MK:"389",IT:"39",RO:"40",CH:"41",CZ:"420",SK:"421",LI:"423",AT:"43",GB:"44",DK:"45",SE:"46",
NO:"47",PL:"48",DE:"49",FK:"500",BZ:"501",GT:"502",SV:"503",HN:"504",NI:"505",CR:"506",PA:"507",PM:"508",HT:"509",PE:"51",MX:"52",CU:"53",AR:"54",BR:"55",CL:"56",CO:"57",VE:"58",GP:"590",BO:"591",GY:"592",EC:"593",GF:"594",PY:"595",MQ:"596",SR:"597",UY:"598",AN:"599",MY:"60",AU:"61",ID:"62",PH:"63",NZ:"64",SG:"65",TH:"66",TL:"1",NF:"672",BN:"673",NR:"674",PG:"675",TO:"676",SB:"677",VU:"678",FJ:"679",PW:"680",WF:"681",CK:"682",NU:"683",WS:"685",KI:"686",NC:"687",TV:"688",PF:"689",TK:"690",FM:"691",
MH:"692",RU:"7",XT:"800",XS:"808",JP:"81",KR:"82",VN:"84",KP:"850",HK:"852",MO:"853",KH:"855",LA:"856",CN:"86",XN:"870",PN:"872",XP:"878",BD:"880",XG:"881",XV:"882",XL:"883",TW:"886",XD:"888",TR:"90",IN:"91",PK:"92",AF:"93",LK:"94",MM:"95",MV:"960",LB:"961",JO:"962",SY:"963",IQ:"964",KW:"965",SA:"966",YE:"967",OM:"968",PS:"970",AE:"971",IL:"972",BH:"973",QA:"974",BT:"975",MN:"976",NP:"977",XR:"979",IR:"98",XC:"991",TJ:"992",TM:"993",AZ:"994",GE:"995",KG:"996",UZ:"998",CA:"1",AG:"1",BS:"1",BB:"1",
DM:"1",DO:"1",GD:"1",JM:"1",KN:"1",LC:"1",VC:"1",TT:"1",AI:"1",BM:"1",VG:"1",KY:"1",MS:"1",TC:"1",AS:"1",VI:"1",PR:"1",MP:"1",GU:"1"},area2reg:{1:{204:"CA",226:"CA",242:"BS",246:"BB",250:"CA",264:"AI",268:"AG",284:"VG",289:"CA",306:"CA",340:"VI",343:"CA",345:"KY",403:"CA",416:"CA",418:"CA",438:"CA",441:"BM",450:"CA",473:"GD",506:"CA",514:"CA",519:"CA",579:"CA",581:"CA",587:"CA",604:"CA",613:"CA",647:"CA",649:"TC",664:"MS",670:"MP",671:"GU",684:"AS",705:"CA",709:"CA",721:"AN",758:"LC",767:"DM",778:"CA",
780:"CA",784:"VC",787:"PR",807:"CA",809:"DO",819:"CA",829:"DO",849:"DO",867:"CA",868:"TT",869:"KN",876:"JM",902:"CA",905:"CA",939:"PR","default":"US"},33:{262:"RE",508:"PM",590:"GP",594:"GF",596:"MQ","default":"FR"},39:{549:"SM","default":"IT"}}};
ilib.Locale.PhoneLoc=function $ilib$Locale$PhoneLoc$($options$$){var $region$$,$mcc$$,$cc$$,$sync$$=true,$loadParams$$={};this.parent.call(this,$options$$&&$options$$.locale||ilib.getLocale());$region$$=this.region;if($options$$){if(typeof $options$$.mcc!=="undefined")$mcc$$=$options$$.mcc;typeof $options$$.countryCode!=="undefined"&&($cc$$=$options$$.countryCode);typeof $options$$.sync!=="undefined"&&($sync$$=$options$$.sync==true);if($options$$.loadParams)$loadParams$$=$options$$.loadParams}ilib.loadData({name:"phoneloc.json",
object:ilib.Locale.PhoneLoc,nonlocale:true,sync:$sync$$,loadParams:$loadParams$$,callback:ilib.bind(this,function($data$$){this.mappings=$data$$;typeof $mcc$$!=="undefined"&&($region$$=this.mappings.mcc2reg[$mcc$$]);typeof $cc$$!=="undefined"&&($region$$=this.mappings.cc2reg[$cc$$]);$region$$||($region$$="XX");this.region=this._normPhoneReg($region$$);this._genSpec();if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad(this)})})};ilib.Locale.PhoneLoc.prototype=new ilib.Locale;
ilib.Locale.PhoneLoc.prototype.parent=ilib.Locale;ilib.Locale.PhoneLoc.prototype.constructor=ilib.Locale.PhoneLoc;ilib.Locale.PhoneLoc.prototype._mapMCCtoRegion=function $ilib$Locale$PhoneLoc$$_mapMCCtoRegion$($mcc$$){return!$mcc$$?void 0:this.mappings.mcc2reg&&this.mappings.mcc2reg[$mcc$$]||"XX"};ilib.Locale.PhoneLoc.prototype._mapCCtoRegion=function $ilib$Locale$PhoneLoc$$_mapCCtoRegion$($cc$$){return!$cc$$?void 0:this.mappings.cc2reg&&this.mappings.cc2reg[$cc$$]||"XX"};
ilib.Locale.PhoneLoc.prototype._mapRegiontoCC=function $ilib$Locale$PhoneLoc$$_mapRegiontoCC$($region$$){return!$region$$?void 0:this.mappings.reg2cc&&this.mappings.reg2cc[$region$$]||"0"};ilib.Locale.PhoneLoc.prototype._mapAreatoRegion=function $ilib$Locale$PhoneLoc$$_mapAreatoRegion$($cc$$,$area$$){return!$cc$$?void 0:$cc$$ in this.mappings.area2reg?this.mappings.area2reg[$cc$$][$area$$]||this.mappings.area2reg[$cc$$]["default"]:this.mappings.cc2reg[$cc$$]};
ilib.Locale.PhoneLoc.prototype._normPhoneReg=function $ilib$Locale$PhoneLoc$$_normPhoneReg$($norm$$1_region$$){switch($norm$$1_region$$){case "US":case "CA":case "AG":case "BS":case "BB":case "DM":case "DO":case "GD":case "JM":case "KN":case "LC":case "VC":case "TT":case "AI":case "BM":case "VG":case "KY":case "MS":case "TC":case "AS":case "VI":case "PR":case "MP":case "T:":case "GU":$norm$$1_region$$="US";break;case "IT":case "SM":case "VA":$norm$$1_region$$="IT";break;case "FR":case "GF":case "MQ":case "GP":case "BL":case "MF":case "RE":$norm$$1_region$$=
"FR";break}return $norm$$1_region$$};ilib.StateHandler=function _StateHandler(){return this};
ilib.StateHandler.prototype={processSubscriberNumber:function $ilib$StateHandler$$processSubscriberNumber$($number$$,$fields$$,$regionSettings$$){var $last$$;$last$$=$number$$.search(/[xwtp,;]/i);if($last$$>-1){if($last$$>0)$fields$$.subscriberNumber=$number$$.substring(0,$last$$);$fields$$.extension=$number$$.substring($last$$).replace("x","")}else if($number$$.length)$fields$$.subscriberNumber=$number$$;if($regionSettings$$.plan.getFieldLength("maxLocalLength")&&$fields$$.subscriberNumber&&$fields$$.subscriberNumber.length>
$regionSettings$$.plan.getFieldLength("maxLocalLength"))$fields$$.invalid=true},processFieldWithSubscriberNumber:function $ilib$StateHandler$$processFieldWithSubscriberNumber$($fieldName$$,$end$$7_length$$,$number$$,$currentChar$$,$fields$$,$regionSettings$$){$end$$7_length$$!==void 0&&$end$$7_length$$>0?$regionSettings$$.plan.getTrunkCode()==="0"&&$number$$.charAt(0)==="0"&&($end$$7_length$$=$end$$7_length$$+$regionSettings$$.plan.getTrunkCode().length):$end$$7_length$$=$currentChar$$+1-$end$$7_length$$;
if($fields$$[$fieldName$$]!==void 0)this.processSubscriberNumber($number$$,$fields$$,$regionSettings$$);else{$fields$$[$fieldName$$]=$number$$.substring(0,$end$$7_length$$);$number$$.length>$end$$7_length$$&&this.processSubscriberNumber($number$$.substring($end$$7_length$$),$fields$$,$regionSettings$$)}return{number:""}},processField:function $ilib$StateHandler$$processField$($fieldName$$,$end$$8_length$$,$number$$,$currentChar$$,$fields$$,$regionSettings$$){var $ret$$={};$end$$8_length$$!==void 0&&
$end$$8_length$$>0?$regionSettings$$.plan.getTrunkCode()==="0"&&$number$$.charAt(0)==="0"&&($end$$8_length$$=$end$$8_length$$+$regionSettings$$.plan.getTrunkCode().length):$end$$8_length$$=$currentChar$$+1-$end$$8_length$$;if($fields$$[$fieldName$$]!==void 0){this.processSubscriberNumber($number$$,$fields$$,$regionSettings$$);$ret$$.number=""}else{$fields$$[$fieldName$$]=$number$$.substring(0,$end$$8_length$$);$ret$$.number=$number$$.length>$end$$8_length$$?$number$$.substring($end$$8_length$$):""}return $ret$$},
trunk:function $ilib$StateHandler$$trunk$($number$$,$currentChar$$,$fields$$,$regionSettings$$){if($fields$$.trunkAccess!==void 0){this.processSubscriberNumber($number$$,$fields$$,$regionSettings$$);$number$$=""}else{$currentChar$$=$regionSettings$$.plan.getTrunkCode().length;$fields$$.trunkAccess=$number$$.substring(0,$currentChar$$);$number$$=$number$$.length>$currentChar$$?$number$$.substring($currentChar$$):""}return{number:$number$$}},plus:function $ilib$StateHandler$$plus$($number$$,$currentChar$$3_ret$$,
$fields$$,$regionSettings$$){$currentChar$$3_ret$$={};if($fields$$.iddPrefix!==void 0){this.processSubscriberNumber($number$$,$fields$$,$regionSettings$$);$currentChar$$3_ret$$.number=""}else{$fields$$.iddPrefix=$number$$.substring(0,1);$currentChar$$3_ret$$={number:$number$$.substring(1),table:"idd"}}return $currentChar$$3_ret$$},idd:function $ilib$StateHandler$$idd$($number$$,$currentChar$$,$fields$$,$regionSettings$$){var $ret$$={};if($fields$$.iddPrefix!==void 0){this.processSubscriberNumber($number$$,
$fields$$,$regionSettings$$);$ret$$.number=""}else{$fields$$.iddPrefix=$number$$.substring(0,$currentChar$$+1);$ret$$={number:$number$$.substring($currentChar$$+1),table:"idd"}}return $ret$$},country:function $ilib$StateHandler$$country$($number$$,$currentChar$$,$cc$$3_fields$$){$cc$$3_fields$$.countryCode=$number$$.substring(0,$currentChar$$+1);$cc$$3_fields$$=$cc$$3_fields$$.countryCode.replace(/[wWpPtT\+#\*]/g,"");return{number:$number$$.substring($currentChar$$+1),countryCode:$cc$$3_fields$$}},
cic:function $ilib$StateHandler$$cic$($number$$,$currentChar$$,$fields$$,$regionSettings$$){return this.processField("cic",$regionSettings$$.plan.getFieldLength("cic"),$number$$,$currentChar$$,$fields$$,$regionSettings$$)},service:function $ilib$StateHandler$$service$($number$$,$currentChar$$,$fields$$,$regionSettings$$){return this.processFieldWithSubscriberNumber("serviceCode",$regionSettings$$.plan.getFieldLength("serviceCode"),$number$$,$currentChar$$,$fields$$,$regionSettings$$,false)},area:function $ilib$StateHandler$$area$($dash$$1_number$$,
$currentChar$$8_end$$,$fields$$,$regionSettings$$){var $last$$;$last$$=$dash$$1_number$$.search(/[xwtp]/i);$last$$=$last$$>-1?$last$$:$dash$$1_number$$.length;if($regionSettings$$.plan.getFieldLength("areaCode")>0){$currentChar$$8_end$$=$regionSettings$$.plan.getFieldLength("areaCode");if($regionSettings$$.plan.getTrunkCode()===$dash$$1_number$$.charAt(0)){$currentChar$$8_end$$=$currentChar$$8_end$$+$regionSettings$$.plan.getTrunkCode().length;$last$$=$last$$-$regionSettings$$.plan.getTrunkCode().length}}else $currentChar$$8_end$$=
$currentChar$$8_end$$+1-$regionSettings$$.plan.getFieldLength("areaCode");if($regionSettings$$.plan.getFieldLength("maxLocalLength")!==void 0)if($fields$$.trunkAccess!==void 0||$fields$$.mobilePrefix!==void 0||$fields$$.countryCode!==void 0||$last$$>$regionSettings$$.plan.getFieldLength("maxLocalLength")){$fields$$.areaCode=$dash$$1_number$$.substring(0,$currentChar$$8_end$$);$dash$$1_number$$.length>$currentChar$$8_end$$&&this.processSubscriberNumber($dash$$1_number$$.substring($currentChar$$8_end$$),
$fields$$,$regionSettings$$)}else this.processSubscriberNumber($dash$$1_number$$,$fields$$,$regionSettings$$);else{$fields$$.areaCode=$dash$$1_number$$.substring(0,$currentChar$$8_end$$);$dash$$1_number$$.length>$currentChar$$8_end$$&&this.processSubscriberNumber($dash$$1_number$$.substring($currentChar$$8_end$$),$fields$$,$regionSettings$$)}if($regionSettings$$.plan.getFindExtensions()!==void 0&&$fields$$.subscriberNumber!==void 0){$dash$$1_number$$=$fields$$.subscriberNumber.indexOf("-");if($dash$$1_number$$>
-1){$fields$$.subscriberNumber=$fields$$.subscriberNumber.substring(0,$dash$$1_number$$);$fields$$.extension=$fields$$.subscriberNumber.substring($dash$$1_number$$+1)}}return{number:""}},none:function $ilib$StateHandler$$none$($number$$,$currentChar$$,$fields$$,$regionSettings$$){if($number$$.length>0){this.processSubscriberNumber($number$$,$fields$$,$regionSettings$$);if($currentChar$$>0&&$currentChar$$<$number$$.length)$fields$$.invalid=true}return{number:""}},vsc:function $ilib$StateHandler$$vsc$($number$$,
$currentChar$$10_end$$,$fields$$,$length$$24_regionSettings$$){if($fields$$.vsc===void 0){$length$$24_regionSettings$$=$length$$24_regionSettings$$.plan.getFieldLength("vsc")||0;$currentChar$$10_end$$=$length$$24_regionSettings$$!==void 0&&$length$$24_regionSettings$$>0?$length$$24_regionSettings$$:$currentChar$$10_end$$+1-$length$$24_regionSettings$$;$fields$$.vsc=$number$$.substring(0,$currentChar$$10_end$$);$number$$=$number$$.length>$currentChar$$10_end$$?"^"+$number$$.substring($currentChar$$10_end$$):
""}else{this.processSubscriberNumber($number$$,$fields$$,$length$$24_regionSettings$$);$number$$=""}return{number:$number$$}},cell:function $ilib$StateHandler$$cell$($number$$,$currentChar$$,$fields$$,$regionSettings$$){return this.processFieldWithSubscriberNumber("mobilePrefix",$regionSettings$$.plan.getFieldLength("mobilePrefix"),$number$$,$currentChar$$,$fields$$,$regionSettings$$,false)},personal:function $ilib$StateHandler$$personal$($number$$,$currentChar$$,$fields$$,$regionSettings$$){return this.processFieldWithSubscriberNumber("serviceCode",
$regionSettings$$.plan.getFieldLength("personal"),$number$$,$currentChar$$,$fields$$,$regionSettings$$,false)},emergency:function $ilib$StateHandler$$emergency$($number$$,$currentChar$$,$fields$$,$regionSettings$$){return this.processFieldWithSubscriberNumber("emergency",$regionSettings$$.plan.getFieldLength("emergency"),$number$$,$currentChar$$,$fields$$,$regionSettings$$,true)},premium:function $ilib$StateHandler$$premium$($number$$,$currentChar$$,$fields$$,$regionSettings$$){return this.processFieldWithSubscriberNumber("serviceCode",
$regionSettings$$.plan.getFieldLength("premium"),$number$$,$currentChar$$,$fields$$,$regionSettings$$,false)},special:function $ilib$StateHandler$$special$($number$$,$currentChar$$,$fields$$,$regionSettings$$){return this.processFieldWithSubscriberNumber("serviceCode",$regionSettings$$.plan.getFieldLength("special"),$number$$,$currentChar$$,$fields$$,$regionSettings$$,false)},service2:function $ilib$StateHandler$$service2$($number$$,$currentChar$$,$fields$$,$regionSettings$$){return this.processFieldWithSubscriberNumber("serviceCode",
$regionSettings$$.plan.getFieldLength("service2"),$number$$,$currentChar$$,$fields$$,$regionSettings$$,false)},service3:function $ilib$StateHandler$$service3$($number$$,$currentChar$$,$fields$$,$regionSettings$$){return this.processFieldWithSubscriberNumber("serviceCode",$regionSettings$$.plan.getFieldLength("service3"),$number$$,$currentChar$$,$fields$$,$regionSettings$$,false)},service4:function $ilib$StateHandler$$service4$($number$$,$currentChar$$,$fields$$,$regionSettings$$){return this.processFieldWithSubscriberNumber("serviceCode",
$regionSettings$$.plan.getFieldLength("service4"),$number$$,$currentChar$$,$fields$$,$regionSettings$$,false)},cic2:function $ilib$StateHandler$$cic2$($number$$,$currentChar$$,$fields$$,$regionSettings$$){return this.processField("cic",$regionSettings$$.plan.getFieldLength("cic2"),$number$$,$currentChar$$,$fields$$,$regionSettings$$)},cic3:function $ilib$StateHandler$$cic3$($number$$,$currentChar$$,$fields$$,$regionSettings$$){return this.processField("cic",$regionSettings$$.plan.getFieldLength("cic3"),
$number$$,$currentChar$$,$fields$$,$regionSettings$$)},start:function $ilib$StateHandler$$start$($number$$){return{number:$number$$}},local:function $ilib$StateHandler$$local$($number$$,$currentChar$$,$fields$$,$regionSettings$$){this.processSubscriberNumber($number$$,$fields$$,$regionSettings$$);return{number:""}}};ilib.CSStateHandler=function $ilib$CSStateHandler$(){return this};ilib.CSStateHandler.prototype=new ilib.StateHandler;
ilib.CSStateHandler.prototype.special=function $ilib$CSStateHandler$$special$($number$$,$currentChar$$,$fields$$,$regionSettings$$){if($number$$.charAt(0)==="0"){$fields$$.trunkAccess=$number$$.charAt(0);$fields$$.areaCode=$number$$.substring(1,$currentChar$$)}else $fields$$.areaCode=$number$$.substring(0,$currentChar$$);this.processSubscriberNumber($number$$.substring($currentChar$$),$fields$$,$regionSettings$$);return{number:""}};ilib.USStateHandler=function $ilib$USStateHandler$(){return this};
ilib.USStateHandler.prototype=new ilib.StateHandler;ilib.USStateHandler.prototype.vsc=function $ilib$USStateHandler$$vsc$($number$$,$currentChar$$,$fields$$){$fields$$.vsc=$number$$;return{number:""}};
ilib._handlerFactory=function $ilib$_handlerFactory$($locale$$,$plan$$){if($plan$$.getContextFree()!==void 0&&typeof $plan$$.getContextFree()==="boolean"&&$plan$$.getContextFree()===false)return new ilib.CSStateHandler;switch($locale$$&&$locale$$.getRegion()||"ZZ"){case "US":return new ilib.USStateHandler;default:return new ilib.StateHandler}};
ilib.data.states_AU={s:[{s:[{s:[0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,3]}]}]},{s:[0,0,0,0,16,0,5,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,6]},{s:[0,0,0,0,0,0,0,0,5]}]},7,7,6,{s:[{s:[10]},0,0,0,0,{s:[5]},0,0,0,5]},0,7,7,0,0,0,0,{s:[{l:12,s:[{s:[14,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,3]}]}]},{l:21,s:[{s:[0,0,0,0,0,0,14]},{s:[{s:[5]},0,14,0,5,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,5]}]},{s:[0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,5]},{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,5]},{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,
0,0,0,0,0,0,0,0,5]}]},{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,5]}]}]},{s:[0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,5]}]},5,{s:[0,0,5,0,0,0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,5]}]}]},{s:[{s:[15]},0,0,0,{s:[0,0,0,0,0,5]},0,0,0,0,0,0,0,0,0,5]},{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,4]}]},5,0,0,{s:[{s:[15,0,0,0,0,0,0,0,0,0,0,0,0,0,15]},0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,8]}]}]},21,21,21,21,21,21,21,21,
2]}]};
ilib.data.states_GB={s:[12,{s:[0,{s:[0,0,0,7,7,7,7,7,7]},{s:[{s:[7,7,7,7,7,7,7,7,7,7]},7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]}]},{s:[{s:[7,7,7,7,7,7,7,7,7,7]},7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,
7,7,{s:[11,11,11,7,11,11,11,11,11,11]},7,7]},{s:[7,7,7,7,7,7,7,7,7,7]}]},{s:[{s:[7,7,7,7,7,7,7,7,7,7]},7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,0,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]}]},{s:[{s:[7,7,7,7,7,7,7,7,7,7]},7,{s:[7,7,7,7,{s:[11,11,7,11,11,11,11,11,11,11]},7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,{s:[11,11,11,11,7,7,7,11,11,11]}]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,
7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]}]},{s:[{s:[7,7,7,7,7,7,7,7,7,7]},7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,{s:[11,11,11,7,7,11,11,7,11,11]},7,7]}]},{s:[{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},
{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,{s:[11,0,0,7,7,0,0,7]},7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]}]},{s:[{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,0,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]}]},{s:[{s:[7,7,7,7,7,7,7,7,7,7]},7,{s:[7,7,7,7,7,7,7,7,7,7]},
{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,{s:[0,11,11,11,11,11,11,7,11,11]},7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]}]}]},{s:[7,0,0,7,7,0,0,0,7,7]},{s:[{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,5]},0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,5]},{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,5]},0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,5]}]},0,{s:[{s:[5]},0,0,0,0,5,5]},0,{s:[10,0,0,0,0,6,6,6,6,6]},{s:[{s:[5,0,0,0,0,0,0,0,5]},0,{s:[5]},0,{s:[0,
0,5,5,5,5]},0,0,{s:[5,5,5,5]}]},0,0,0,0,{s:[{l:12,s:[3]},{s:[0,{s:[0,0,14,0,0,14,14,0,14]},0,0,{s:[0,8,0,0,0,0,0,{s:[8,8,0,0,0,8]}]}]},21,21,21,21,21,21,21,{s:[0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,14]},0,0,0,0,21]},2]}]};
ilib.data.states_IN={s:[0,{s:[4,7,{s:[7,7,7,{s:[0,0,7,7,7,0,0,7]},7,{s:[7,7,7,7,7,7,0,7,7,7]},{s:[0,0,7,7,0,0,0,7,7]},{s:[0,0,0,0,7,7,7]},{s:[0,7,7,0,7,7]},7]},{s:[7,7,7,{s:[0,7,7,0,7,0,7]},{s:[0,7,7,7,7,7,7,0,7]},7,{s:[7,0,0,7,7,0,0,0,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,0,0,0,7,0,0,7]},{s:[0,0,7,0,0,0,7,0,7]}]},{s:[0,7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7]},7,7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]}]},{s:[{s:[0,7,7,7,
7,7,7,7,7,7]},7,{s:[7,7,7,7,0,0,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,0,7]},7,{s:[0,0,7,0,0,7,0,0,0,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7]}]},{s:[7,7,{s:[0,0,0,0,7,0,0,0,7]},{s:[0,0,7,7,7,7,7,7,7,7]},7,{s:[0,7,7,0,0,7,0,0,0,7]},{s:[0,0,7,7,7,0,7,7,7,7]},{s:[0,0,7,0,0,7,7,0,0,7]},{s:[0,7,7,7,7,7,7]},{s:[0,0,7,7,0,0,7,7,7]}]},{s:[{s:[0,0,7,0,7]},7,7,{s:[0,7,7,7,7,7]},{s:[0,7,0,7,7,7,7,0,7,7]},7,{s:[0,0,7,7,7,7]},7,{s:[0,7,7,7,0,7,7]},{s:[0,0,7,0,0,7,
7,0,0,7]}]},{s:[7,7,{s:[0,7,7,7,7,0,7,0,7]},7,7,{s:[0,7,7,7,0,0,0,0,7,7]},7,{s:[7,7,7,0,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[0,0,7,7,7,7,7,7,0,7]}]},{s:[{s:[7,0,7,7,7,7,7,7,7,7]},7,{s:[0,7,7,7,7]},{s:[0,7,7,7,0,0,7]},7,{s:[0,7,7,0,7,7,7,7,7]},{s:[7,0,7,0,7,7]},{s:[7,0,7,0,0,7,7,0,7]},{s:[7,7,7,7,0,7]},{s:[7,7,7,0,0,7,7,7,7,7]}]}]},{s:[7,{s:[0,{s:[0,7,7,7,7,7,0,7,7,7]},7,{s:[7,0,7,7,0,7,7,7,7,7]},{s:[7,7,7,7,7,7,0,7,7,7]},7,{s:[7,7,7,7,7,7,7,7,7,7]},7,{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,0,7]}]},7,{s:[7,
7,{s:[7,7,7,7,7,7,7,7,7,7]},7,{s:[0,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,0,7,7,7,7,7,7]},{s:[0,7,7,7,0,7,0,0,7]},{s:[0,7,7,7,7,7]}]},{s:[0,7,{s:[0,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,0,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[7,7,7,7,0,7,7,7,7,7]},{s:[0,7,7,7,0,7,0,7,7]},{s:[0,7,7,7,7,7,0,7,7,7]}]},{s:[7,7,{s:[7,7,7,0,7,7,7,7,7,7]},7,0,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},7,{s:[7,0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]}]},{s:[7,7,{s:[0,7,7,7,7,7,7,0,7,
7]},{s:[7,7,7,7,7,0,0,7]},{s:[7,7,7,7,7,7,7,0,0,7]},7,{s:[0,7,7,7,7,7,7,7,7,7]},{s:[7,0,7,7,7,7,7,7,7,7]},7,{s:[7,7,7,0,7,0,7,7,7,7]}]},{s:[0,{s:[0,7,7,7,7,7,7,7,7]},0,{s:[0,0,0,7,7,7,0,7,7,7]},{s:[7,0,7,0,7,0,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,0,0,7,7]},7,{s:[0,7,7,7,7,7,7,7]}]},{s:[{s:[0,7,0,7,7,0,7,0,7]},7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},7,7,{s:[7,7,7,7,7,7,7,7,7]},7,{s:[0,7,7,7,7,7,7,7,7]}]},{s:[{s:[7,7,7,7,7,
7,7,7,7,7]},7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]}]}]},{s:[{s:[0,{s:[7,7,7,7,7,7,7,7,7,7]}]},{s:[0,0,0,0,0,0,0,{s:[0,0,0,0,7]},0,{s:[0,0,7,7]}]},{s:[0,{s:[7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,0,7,7,7]},0,{s:[0,7,7,7,7]},{s:[0,7,7,7,7]},7]},7,{s:[0,7,7,7,0,{s:[0,7,7,7,7]},{s:[0,7,7,7,0,7]},{s:[0,7,7,7,7]},{s:[0,7,7,7,7,7]}]},{s:[0,{s:[0,7,7,7]},{s:[0,7,7,
7,7,7,7]},7,7,{s:[0,0,7]},{s:[0,7,7,7,7,7,7]},0,{s:[0,7,7,7,7]},{s:[0,0,7,0,0,7]}]},{s:[7,7,{s:[0,7,0,7,7]},{s:[0,0,0,0,0,0,0,7,7,7]},7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7]},7,7]},{s:[7,{s:[0,7,7,7,7,7]},7,7,7,{s:[0,7,7,7,7,0,7,0,7,7]},7,{s:[0,7,7,0,7,7,7,7,7,7]},{s:[7,0,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,0,7,7,7]}]},{s:[{s:[7,7,7,7,7,7,7,7,7,7]},7,{s:[0,7,7,7,7,7,7]},{s:[7,7,0,0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,0,0,7]},7,{s:[7,7,7,7,0,7,0,7,0,7]},{s:[7,7,7,7,7,0,
7,7,7,7]},{s:[7]},7]}]},{s:[7,{s:[0,{s:[0,7,7,0,7,7,7,0,7,7]},0,7,{s:[0,0,7,7,7,7,7,7,0,7]},{s:[0,7,0,7]},7,{s:[0,7,7,7,7,7,0,7,0,7]},{s:[0,7,7,7,0,0,0,0,7]}]},{s:[{s:[0,0,7,0,7]},7,7,7,7,{s:[0,0,7,7,7,7,7,7,7,7]},{s:[0,0,7,0,0,0,7,0,7]},7,{s:[0,7,7,7,0,7,7,7,7]},{s:[7,0,7,0,7,7,7,0,7]}]},{s:[0,7,{s:[7,0,7,7,7,0,7,7,7,7]},{s:[0,7,7,7,0,0,0,0,0,7]},{s:[0,7,7,7,7,0,7,7,7]},7,{s:[0,0,7,0,7,7,7,7,7,7]},{s:[0,7,7,7,7]}]},7,{s:[0,7,7,0,{s:[0,0,7,7,7,7,7,0,0,7]},{s:[0,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[0,
0,0,7,7,7,7,7]}]},{s:[0,7,7,{s:[7,0,7,7,7,7,7,7,7,7]},0,{s:[0,7,7]},0,0,0,7]},{s:[7,7,{s:[0,0,0,0,0,0,0,0,7]},{s:[0,0,0,7,7,7]},7,7,7,7,7,7]},{s:[7,7,{s:[0,0,7,0,0,0,0,0,7,7]},7,7,7,{s:[0,0,7,0,7,7,0,0,7,7]},7,{s:[0,0,0,0,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]}]},{s:[7,7,{s:[0,0,7,7,7,0,7]},{s:[0,7,0,7,0,7,7]},7,7,7,7,{s:[0,0,7,0,0,7]},{s:[0,0,0,0,7,0,0,7,7]}]}]},{s:[0,{s:[0,{s:[0,7,7,7,7,7]},7,0,{s:[0,0,7,7,7]},7,{s:[0,0,7,0,7,7,0,0,7]},{s:[7,7,7,0,7,7,7,0,7]},{s:[7,7,7,7]},{s:[7,7,7,0,7,7,0,0,7]}]},{s:[0,
{s:[0,0,7]},7,0,{s:[7,7,0,0,7,0,0,0,7]},{s:[7,7,7,7,7,7]},{s:[7,7,7,7,7,7]},{s:[7,7,0,7,7,7,0,0,7]},{s:[7,7,7,7,7]}]},{s:[0,{s:[0,7,0,7,0,7,0,7]},7,{s:[0,7,7,7,7,7]},{s:[0,7,7,7]},7,{s:[0,7,7,0,7,0,0,0,7]}]},{s:[0,{s:[0,0,7,7,7]},7,0,{s:[7,0,7,7,7,7,7,7]},{s:[7,7,7,7,7]},{s:[7,7,7,7,7,7,7]},0,7,{s:[0,7,0,7,7,7,7,7,7]}]},{s:[0,7,{s:[0,7,7,7,7,7]},0,{s:[0,7,7,7,7,7,7,7,7]},0,{s:[0,7,0,7,7,0,7,7,7]}]},{s:[0,{s:[0,0,7,7,7]},7,0,{s:[7,7,7,7,7,7,7,7,7]},7,{s:[0,7,7,0,7]},{s:[0,7,7,7,0,0,7,7]},{s:[7,7,0,
7,0,0,0,0,7]},{s:[7,7,7,0,7]}]},{s:[0,7,{s:[0,7,7,7,7]},{s:[0,7,7,7,7,7,7,0,7]},{s:[7,0,7,0,7,7]}]},{s:[0,7,{s:[0,7,7,7,7,7]},{s:[0,7,7,7,7,0,7]},{s:[0,7,7,7,7]},{s:[7,7,7,7,7,7]},{s:[0,7,7,7,7,7]},{s:[7,7,7,7,7,7,7]},{s:[7,7,7]}]},{s:[0,7,{s:[0,7,7,7,7]},0,{s:[0,0,7,7,7,7,7,7,7,7]},7,{s:[7,7,7,7,7,7,7,7]}]}]},{s:[0,{s:[0,{s:[0,7,7,0,7,7]},7,{s:[0,0,7,0,0,7]},0,{s:[7,7,7,7,7,7,7,7,7,7]},0,0,{s:[7,7,7,7,7,7,7,7,7,7]}]},{s:[0,7,{s:[0,0,7,7,7,0,7,7,7,7]},0,{s:[0,0,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,
7]},0,{s:[0,7,7,7,7,7,7,7,7,7]}]},{s:[0,7,{s:[0,0,7,7,7,7,7,7,7]},{s:[0,7,7,0,0,0,7,7]},{s:[0,7,7,0,7,7,7,7,7,7]}]},{s:[0,7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]},0,{s:[0,7,7,7,7,7,0,7,0,7]},{s:[0,7,7,0,0,0,7,7]},{s:[0,7,0,7,0,7,7,7,7,7]}]},{s:[0,7,{s:[0,0,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,0,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,0,7,7,0,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},7,{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,0,7,7,0,7,7]}]},{s:[0,7,{s:[0,7,7,0,7,7,7]},7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,
7,7,7,7,7,0,7]},0,{s:[7,7,7,7,0,7,7,7,7,7]},{s:[0,7,7,7,7,7]}]},{s:[0,7,{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,0,7]},7,{s:[0,0,7,7,0,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},0,{s:[0,7,7,0,7,0,7,0,7]},{s:[0,7,7,7,7,7,7,7]}]},{s:[7,{s:[7,7,0,0,7,7,7,7,7,7]},{s:[0,7,7]},0,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,0,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]}]}]},{s:[0,{s:[{s:[7,0,7,7,7,7,7,0,0,7]},{s:[0,0,7,7,7,7,7,0,7]},7,{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,0,7,7,7,7]},{s:[7,7,7,0,7,7,7,
7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,0,7]},{s:[0,0,0,0,0,0,7,7,7,7]}]},{s:[{s:[0,7,7,7]},7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},7,{s:[0,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,0,7,7,7,7]},{s:[7,7,7,7,7,0,0,0,0,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,0,7,7,7,7]}]},{s:[0,7,{s:[7,7,7,7,7,7,7,7,7,7]},7,7,0,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,0,7,7]},0,{s:[7,7,7,7,7,7]}]},{s:[0,{s:[7,0,7,7,7]},{s:[7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7]},7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,
7,7,7,7,7,7]},7,{s:[7,7,7,0,7,7,7,7]},{s:[7,7,7,7,7,7,7,7]}]},{s:[0,7,{s:[0,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7]},7,{s:[7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7]}]},{s:[{s:[0,7,0,7,7,7,7,0,7,7]},7,{s:[0,7,7,7,7,7,7,7,7,7]},{s:[7,0,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,0,7,7,7,7,7]},{s:[7,7,7,7,7]},{s:[7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7]}]},{s:[{s:[7,7,0,7,7,7,7,7]},7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,
7,7,7,7]},{s:[7,7,0,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7]}]},{s:[{s:[0,7,7,7,7,7,7]},{s:[7,7,7,7,0,7,7,7,7,7]},{s:[7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[7,7,0,7,7,0,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]},0,7]},7]},{s:[7,{s:[0,{s:[7,7,0,7,0,0,0,7,7,7]},0,{s:[0,7,7,7,7,7,7,7,7,7]},0,{s:[7,7,7,7,7,7,7,7,7,7]},7,{s:[7,0,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,0,7,7]}]},
{s:[7,7,{s:[0,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,0,7,0,7]},7,{s:[0,7,0,7,7,7,7,7,7,7]},{s:[0,7,7,7,0,7,7,7]},{s:[0,0,7,0,7,0,7]},{s:[0,0,7,7,7,0,0,0,7,7]}]},{s:[{s:[0,7,0,0,7]},7,7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,0,7,7,0,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},7,{s:[7,7,7,7,0,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]}]},{s:[{s:[0,0,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,0,7,0,7,7,7]},0,{s:[7,7,7,7,7]},{s:[7,7,7,0,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,
7,7,7,7,7,0,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]}]},{s:[{s:[0,7,7,7,7,7,7]},{s:[7,0,7,7,7,7,7,7,7,7]},{s:[7,0,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,0,7,7,0,7,7]},{s:[7,7,7,0,7,0,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,0,0,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,0,7,7,7,0,7,0,7,7]}]},{s:[0,7,{s:[7,7,7,7,7,7,7,7,7,7]},7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,0,0,0,7,0,7,0,0,7]},7,{s:[0,7,7,7,7,0,7,7,7]},{s:[7,7,7,7,7,7,0,0,0,7]},{s:[0,7,7,7,7]}]},{s:[7,{s:[7,7,0,7,0,7,7,7,7,7]},{s:[7,7,0,7,7,
7,0,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7]},{s:[0,7]},7,7]},{s:[0,{s:[0,7,7,7,7,0,7,0,7,7]},{s:[0,7,0,7,0,0,0,0,0,7]},7,7,{s:[0,0,7,0,7,7,7,7]},{s:[0,0,7,7,7,7,0,0,7,7]}]},{s:[0,7,{s:[0,0,7,0,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,0,7,7,7,7]},{s:[0,0,7]},{s:[0,0,0,7,7,7,7]}]}]},6,0,0,0,{s:[{l:12,s:[3]},{s:[{s:[14,14,14,14,14,0,0,0,14]},{s:[0,0,14]},{s:[0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,14]}]},0,0,0,0,0,{s:[{s:[5]}]}]},21,21,21,21,21,0,0,6,2]}]};
ilib.data.states_US={s:[0,0,{s:[{s:[0,7,7,7,7,7,7,7,7,7]},{s:[7,5,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,7]}]},{s:[{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,5,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,
7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,7]}]},{s:[{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,5,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,7]}]},{s:[{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,5,7,7,7,7,7,
7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,7]}]},{s:[{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,5,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,
7,7,7,7,7,7,7,7,7]},0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,7]}]},{s:[{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,5,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,7]}]},{s:[{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,5,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,
7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,7]}]},{s:[{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,14,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,7]}]},0,0,{s:[0,
0,0,0,0,0,0,0,0,0,0,0,0,{s:[0,{s:[0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,7]}]},{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,7]}]},{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,7]}]},{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,7]}]},{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,7]}]},{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,7]}]},{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,
0,0,0,0,0,0,0,0,0,0,7]}]},{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,7]}]}]}]}]},{s:[{s:[3,{s:[0,3]}]},{l:12,s:[{s:[0,4]},{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,8]}]},0,0,0,0,0,0,0,0,2,8,8,0,20]}]};
ilib.data.states_DE={s:[0,{s:[{s:[{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,4]}]},0,0,0,0,0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,4]}]},5,5,{s:[0,0,0,0,0,0,0,{s:[0,13,13,13,13,13,13,13,13,13]},13]},0,6,6,6,{s:[{s:[0,13,13,13,13,13]},5,5,13,13,13,13,13,13,13]},{s:[0,5,5,5,5,0,0,0,{s:[0,0,0,0,0,0,0,5,5,5]},5]}]},{s:[{s:[0,7,7,7,{s:[0,7,0,7,0,7]},{s:[0,7,7,7,7,0,7,0,7]},{s:[0,0,0,0,7,7,7]},0,7,7]},{s:[{s:[0,0,7,7,7]},7,7,{s:[0,7,7,7,0,0,0,7]},7,{s:[7,7,7,7,7,0,7,7,0,7]},
{s:[0,7,7,7,7,7,7]},{s:[0,7,0,7,7,7]},{s:[0,7,7,7]},{s:[0,7,7,7,0,7,7]}]},{s:[{s:[0,0,7,7,7,7,7,7,7]},7,{s:[0,0,7,7,7,7,7,7,7]},{s:[0,0,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7]},7,{s:[0,7,7,7,7,7,7,7]}]},{s:[{s:[0,7,7,7,7,7,7,7,7,7]},7,{s:[0,0,0,7,7,7,0,7]},{s:[7,7,7,7,7,7,7,7,7,7]},7,{s:[0,7,7,7,7,7,0,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,0,7,7,7]},{s:[0,7,7,7,7,7,0,7,7,7]},{s:[0,7,7,7,7,7]}]},{s:[{s:[0,7,7,7,7,7,7,7,7,7]},
7,{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[7,7,0,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7]},{s:[0,7,7,7,7]},{s:[0,0,7,0,7,7,7]}]},{s:[{s:[0,7,7,0,7,7,7,7,7,7]},{l:7,s:[0,0,0,0,0,0,0,0,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,0,7,7,7,7,7,0,7]},{s:[0,7,7,7,0,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]}]},{s:[{s:[0,7,7,7,7,7,7,7,7]},7,{s:[7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},
{s:[0,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,0,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]}]},{s:[0,7,{s:[0,7,7,7,7,7]},{s:[0,0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,0,7]},{s:[7,7,7,7,7,7,0,0,7,7]},{s:[0,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]}]},{s:[{s:[0,7,7,7,7]},7,{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7]},{s:[7,7,7,7,0,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[0,7,7,7,7]}]},{s:[{s:[0,0,7,7,7,7]},7,{s:[0,7,7,7,7,7,0,7,7]},{s:[0,7,7,7,7,7,0,7,7]},{s:[0,7,7,7,
7,7,0,7,7]},{s:[0,7,7,7,7,7,0,7,7]},{s:[0,7,7,7,7]},{s:[7,7,7,7,7,7,0,7,7,7]},{s:[0,7,7,7,7,7]},{s:[0,7,7,7,7]}]}]},{s:[7,0,5,{s:[{s:[0,7,7,7,7,{s:[0,7,0,7,7,7,7]},7,7,{s:[7,0,7,7,7,7,7,7,7,7]},{s:[0,0,0,7,7]}]},7,{s:[{s:[7,7,7,7,7,7,7,7,7,7]},7,7,{s:[7,7,7,7,7,7,0,7,7,7]},0,0,0,7,7,7]},{s:[0,7,7,{s:[0,7,7,7,7,7,7,7,7]},7,7,{s:[0,7,7,7,7,7,7,7,7,7]},7,7,{s:[0,0,0,7,7,7,7,7,7]}]},{s:[0,7,7,{s:[0,0,7,7,7,7,7,7,7,7]},7,{s:[0,7,7,0,7,0,7,7,7]},7,{s:[7,0,7,7,7,7,7,7,7,7]}]},7,{s:[{s:[0,7,7,7,7,7,7,7,7,
7]},7,7,{s:[0,7,7,7,7,7,7,7,7]},7,{s:[0,0,7,7,7,7,7,7]},7,{s:[0,7,7,7,7,7,7,7,7,7]}]},{s:[{s:[0,7,7,7,7,0,0,0,7]},7,7,{s:[0,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]},7,{s:[7,0,7,7,7,7,7,7,7,7]},7,7,7]},{s:[0,7,7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,0,7,7,7,7,7,7,7]},7,7,{s:[7,0,7,7,7,7,7,7,7]}]},{s:[0,7,{s:[7,7,7,7,7,7,7,0,7,7]},{s:[0,7,7,7]},7,7,{s:[0,0,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,0,7,0,0,7]}]}]},{s:[7,7,{s:[{s:[0,0,7,7,7,7,7,7,7]},7,{s:[0,7,7,7,7]},7,{s:[0,7,7,7,7]},7,{s:[0,7,
7,7]},0,0,{s:[0,7,7,7,7,7,7,7,7,7]}]},{s:[0,7,{s:[0,7,7,0,7,7,0,7,7]},7,{s:[0,7,7,7,7,7,7,7,7]},7,{s:[0,7,7,7,7]},7,{s:[0,7,7,7,7,7,7]}]},{s:[0,7,0,7,0,7,{s:[0,0,0,7]},7,7]},7,{s:[0,7,7,0,7,0,7]},{s:[0,7,{s:[0,7,7]},7,{s:[0,7,7,7,0,7,7]},7,7,{s:[0,7,7,7,7,7,7,0,0,7]}]},0,{s:[{s:[0,7,0,7,7,7,7,7,0,7]},7,{s:[7,7,7,7,7,7,7,7,7,7]},7,7,{s:[0,0,0,7,7,7,7]},7,{s:[0,0,0,7,0,7,7,7,7,7]}]}]},{s:[{s:[0,7,{s:[7,7,7,7,7,7,7,7,7]},{s:[0,0,7,7]},7,{s:[0,0,7,7,7,7,7,7,7]}]},7,{s:[{s:[7,7,7,7,7,7,7,7,7,7]},7,7,7,
{s:[7,7,7,7,7,7,7,7,7,7]},7,{s:[0,0,0,7,7,7,7,7,7]},0,7,7]},{s:[0,7,{s:[0,0,7,7,7,7,7,7,0,7]},7,{s:[0,7,7,7]},7,{s:[0,7,7,7,7,7]},7,{s:[0,0,0,7,7,7,7,7,7,7]}]},{s:[0,7,7,{s:[0,0,0,7,7,7,7,0,0,7]},7,{s:[0,7,7,7,7,7,7]},7,{s:[0,7,7,7,7,7,7,7,7]}]},7,{s:[{s:[7,7,7,7,7,7,7,7,7,7]},7,7,7,7,0,0,0,0,{s:[0,7,7,7,7,7,7,7,7]}]},{s:[0,7,{s:[0,0,7,7,7,7,7,7,7]},7,7,{s:[0,7,7,7,7,7,7]},7,{s:[0,7,7,7,7,7]},7,{s:[0,0,7,7,0,7,7,7]}]},{s:[0,7,{s:[7,0,7,7,0,7,7,7,7,7]},7,{s:[0,7,7,7,7]},7,7,{s:[0,0,7,7,7,7,7,7]},7,
{s:[0,7,7,7,7,7]}]},{s:[0,7,7,{s:[7,7,7,7,7,7,7,7,7,7]},7,{s:[0,7,7,7,7,7,0,7]},7,{s:[0,7,0,7,7,7]}]}]},{s:[{s:[0,7,{s:[7,7,7,7,7,7,7,7,7,7]},7,{s:[0,7,7,7]},7,7,{s:[0,7,7,0,7,7,7,7]},{s:[0,7,7,7,7,7,0,7]}]},7,{s:[{s:[7,7,7,7,7,7,7,7,7,7]},7,7,7,7,{s:[0,0,7,7,7,7,7,7,7,7]},0,0,7,7]},{s:[0,7,7,{s:[7,7,7,7,7,7,7,7,7]},7,7,7,{s:[7,7,7,7,7,7,7,7,7,7]}]},{s:[0,7,{s:[0,7,7,7,7,7,7,7,7]},7,7,{s:[7,7,7,7,7,0,0,0,7,7]},{s:[0,7,7,7,7,7]},7,{s:[0,7,7,7,7]}]},7,{s:[{s:[0,7,7,7,7,7,7,7,7]},7,{s:[0,7,7,7,7,7,7,
0,7]},7,{s:[7,0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7]},0,0,0,{s:[0,7,7,7,7]}]},{s:[{s:[0,7,7,7,7,7]},7,7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7]},7,{s:[0,7,7,0,7,0,7]},7,{s:[0,7,7,7,7,7]},7]},{s:[0,7,7,7,{s:[7,7,7,7,7,7,7,7,7,7]},7,7,{s:[7,7,0,7,7,7,0,0,7]}]},{s:[0,7,{s:[7,7,7,7,7,7,7,7,7,7]},7,{s:[7,7,0,7,7,7,7,7,7,7]},7,{s:[0,7,7,7,7,7,7,7,7,7]}]}]},{s:[0,7,{s:[{s:[7,0,7,7,7,0,7,7,7,7]},7,7,7,7,7,7,7,0,{s:[0,7,7,7,7,7,7,7,7]}]},{s:[0,7,{s:[7,7,7,7,7,7,7,7,7,7]},7,{s:[0,7,7,7,7,0,7,7,7,7]},7,{s:[7,7,7,
7,7,7,7,7,7,7]},7,{s:[0,7,7,7,7]}]},{s:[0,7,{s:[0,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},7,7,{s:[0,0,7,7,7,7,0,7,7]}]},7,{s:[{s:[7,7,7,7,7,7,7,7,7,7]},7,7,7,7,7]},{s:[0,7,7,7,7,{s:[0,0,7,0,7,7,7,7]}]}]},{s:[0,7,{s:[{s:[0,7,0,7,7,7,7,7,7,7]},7,{s:[7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7]},0,0,0,0,0,{s:[0,0,7,7,7,7]}]},{s:[{s:[7,7,7,7,7,7,7,7,7,7]},7,{s:[7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7]},7,{s:[0,7]},7,{s:[7,7,7,0,0,7,7,7,7]},7,{s:[0,7,7,7]}]},{s:[0,7,{s:[0,0,7,7,7,7,7,7,7,7]},7,7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,
7,7,0,7,0,7]},7,{s:[0,7,7,7,7,7,7,0,7]}]},7,{s:[7,7,0,7,0,7,7,7,7,7]},{s:[0,7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,0,7,7,7,7]},7,{s:[7,7,7,7,7,7,7,7,7,7]},7,7,{s:[7,7,7,7,7,7,0,7,7,7]},{s:[0,7,7,7,7,0,7,7]}]},{s:[0,7,{s:[0,7,7,7,7,7,7,7,7]},7,{s:[0,7,7,7,7,7,0,7,7]},{s:[7,7,7,7,7,7,7,0,7,7]},7,{s:[0,7,7,7,7,7,7]}]}]},{s:[{s:[0,7]},7,{s:[{s:[7,7,7,7,7,7,7,7,7,7]},7,{s:[0,7,7,7,7,7,7]},7,{s:[0,7,7,7,7,7,7,7,7]},7,{s:[0,0,7,7,7,7,7,7,7]},0,7,{s:[0,7,7,7,7,7,7,7,7]}]},{s:[0,7,{s:[7,7,7,7,7,7,0,7,7,7]},
7,{s:[0,7,7,7,7,7,7,7,7,7]},7,{s:[0,7,7,7,7,7,7]},7,{s:[0,0,7,7,7,0,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]}]},{s:[{s:[7,7,7,7,7,7,7,7,7,7]},7,{s:[0,7,7,7,7,7,7,7,7]},7,7,{s:[0,7,7,7,7,7,7,7,7,7]},7,7,{s:[0,7,7,7,7,7,0,7,7,7]},7]},7,{s:[{s:[7,7,7,7,7,7,7,7,7]},7,7,7,7,7,7,7,7,7]},{s:[0,7,{s:[0,7,7,7,7,0,7,7,7]},7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7]},7,{s:[0,7,7,7,7,7,7,7,7,7]}]},{s:[0,7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7]},7,{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7]},0,{s:[0,7,7,7,7,7,7,7,7,7]}]},{s:[0,
7,{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7]},7,{s:[0,7,7,7,7,7,7,7,0,7]},7,{s:[0,7,7,7,0,7,7,7,7]},7,{s:[0,7,7,7,7,7,7,7,7,7]}]}]}]},{s:[7,{s:[{s:[0,7,7,7,7,7,7,7,7,7]},0,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,0,7,0,7,7]},{s:[0,7,7,7,7,7,7,0,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7]}]},{s:[{s:[0,0,7,7,7,7,7,7,7,7]},7,{s:[0,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,0,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[7,
7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,0,7,7,7,7,7,7,7]}]},{s:[{s:[0,0,7,7,0,7,0,7,7]},7,{s:[7,7,7,7,7,0,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,0,7,7,7,0,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[0,7,7]},{s:[0,7,7,7,7,7]},{s:[0,0,7,7,7]}]},{s:[{s:[0,7,7,0,7,7,7,7,7]},7,{s:[0,7,7,7,0,7,7]},{s:[0,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,0,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,0,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,
7,7,7,7,7]}]},{s:[{s:[0,7,7,7,7,7,7,0,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,0,7]},{s:[0,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7]}]},{s:[0,7,{s:[0,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,0,7]},{s:[0,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7]},{s:[0,7,7,7,7]}]},{s:[{s:[0,0,7,7,7,7,7,7,7]},7,{s:[0,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},0,
{s:[0,7,7,7,7,7,7]}]},{s:[{s:[0,0,7,7,7,7,7]},7,{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,0,7,0,0,0,0,7]},{s:[0,7,0,0,0,7]},{s:[0,7,7,0,7]},{s:[0,7,7,7,7,7]},0,{s:[0,7,7]}]},{s:[{s:[0,0,7,7]},7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,0,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]}]}]},{s:[{s:[0,0,{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,0,7,7]},{s:[0,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[7,0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7]},{s:[0,0,7,7,7,7,7]}]},{s:[{s:[0,
7,7,7,0,7,0,0,7,7]},7,{s:[0,7,0,7,0,0,7,7,7,7]},{s:[7,7,7,0,0,7,7,7,7,7]},{s:[0,7,7,7,7,7,0,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,0,7,7,7,7]}]},{s:[{s:[0,7,7,7,7,7,7,7,7,7]},7,{s:[0,7,7,7,7,7,7,0,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,0,7,7,7,7,7]},{s:[7,7,7,7,7,7,0,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[0,0,7,7,7,7]}]},{s:[{s:[7,7,7,7,7,7,7,7,7,7]},7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,
7,7,7,7,7,7,0,7]},{s:[0,7,0,0,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,0,7,7]},{s:[0,7,7,7,7]}]},{s:[{s:[0,7,7,7,7,7,7,7,0,7]},7,{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,0,7,7,7,0,7]},{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7]},{s:[0,7,7,7,7,7]}]},{s:[{s:[0,0,7,7,7,7,7,7,7,7]},7,{s:[7,7,7,7,7,7,0,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7]},{s:[0,7,7,7,7]},{s:[0,
0,7,7,7,7]},{s:[0,0,7,7,7]}]},{s:[{s:[0,7,7,7,7,7,7,7,7,7]},7,{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]}]},{s:[{s:[0,0,7,7,7,7,7,7]},7,{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7]},{s:[0,7,0,0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]}]},{s:[{s:[0,0,7,7,7,7,7,7]},7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,0,7,7]},{s:[7,7,7,
7,7,7,0,7,7,7]},{s:[0,7,7,7,7,7]},{s:[0,0,7,0,7,7]},{s:[0,0,7,7]}]},{s:[{s:[0,7,7,7,7,7,7,7,7,7]},7,{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,0,7]},{s:[0,7,7,7,7,0,7,7,7]},{s:[0,7,7,0,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[0,7,0,7,0,7,7,7,7]}]}]},{s:[{s:[{s:[0,0,7,7,7,0,0,7,7]},0,{s:[7,7,7,7,7,0,7,7,7,7]},{s:[0,7,7,7,7,7,7,0,0,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,0,0,7,0,7]},{s:[0,7,0,7,7,0,0,0,7]},{s:[0,7,7,7,7,7,7,7]},{s:[0,0,7,7,7,7,7]}]},{s:[{s:[0,7,7,7,7,7,7,7,7,7]},7,
{s:[7,0,7,7,7,0,7,7,7,7]},{s:[7,7,7,7,7,7,7,0,7,7]},{s:[0,0,7,0,7,7,7,7]},{s:[7,7,7,0,7,7,0,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[7,0,7,0,0,7,7,0,7]}]},{s:[{s:[0,7,7,7,7,7,7,7,0,7]},7,{s:[7,7,7,7,7,0,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,0,0,7,0,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,0,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[0,7,7,7,0,7,0,7,7]}]},{s:[{s:[0,7,7,7,0,0,0,7]},7,{s:[0,7,7,7,0,0,0,7]},{s:[0,7,0,7,7,0,7]},{s:[7,7,7,7,7,7,7,7,7,
7]},{s:[0,7,7,7,0,0,0,0,0,7]},0,{s:[0,7,7,7,7,7]},{s:[0,0,0,0,0,7]}]},{s:[{s:[7,7,0,7,7,7,7,7,7,7]},7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,0,7,7]},{s:[0,7,7,7,7,7,7,7,0,7]},{s:[0,7,7,0,7,0,0,7]},{s:[0,7,7,0,7,7,7,7,7]},{s:[0,7,7,7,7,0,7,7,7,7]},{s:[0,0,7,7,7,7,7]}]},{s:[{s:[0,7,7]},7,0,{s:[0,7,0,7,0,7]},{s:[0,7,0,0,7]},{s:[0,7]},{s:[0,7]},{s:[0,7]},{s:[0,7,0,0,0,0,0,0,7]},{s:[0,7,7]}]},{s:[0,7,{s:[0,0,7]},0,{s:[0,7,7,7,7,7,0,7,7]},{s:[0,0,0,0,0,0,7,7,7]},{s:[0,7]},0,0,{s:[0,0,7]}]},{s:[0,7,
{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7]},{s:[0,0,0,0,0,0,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7]},0,{s:[0,7,0,0,7]}]},{s:[0,7,{s:[0,7,0,0,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,0,0,0,0,0,0,7]},{s:[0,7,0,7,0,7,0,7]},{s:[0,7,0,0,7]},{s:[0,7,7,0,0,0,7]},{s:[0,7,0,0,0,0,0,7]},{s:[0,0,0,0,7,0,0,7,7]}]},7]},{s:[{s:[10,10,{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[0,0,7,7,0,0,7]},{s:[0,7,7,7]},{s:[0,7,7,7,7,7]}]},{s:[0,7,{s:[0,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,0,7,
7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,0,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7]},{s:[0,7,7,7,7,7]}]},{s:[{s:[0,0,7,7,7]},7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[7,0,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]}]},{s:[{s:[7,0,7,7,7,7,7,7,7,7]},7,{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[7,0,0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[0,7,0,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,
7,7,7,7,7]}]},{s:[{s:[0,0,7,7,7]},7,{s:[7,0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,0,7,7,7,7,7]}]},{s:[{s:[0,0,7,7,7,7,7]},7,{s:[7,0,7,0,7,7,0,7,7,7]},{s:[0,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]}]},{s:[{s:[0,0,7]},7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[7,
7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7]}]},{s:[{s:[0,0,7,7,7,7,7,7,7,7]},7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,0,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,0,7,7,7]},{s:[0,7,7,7,7,7]},{s:[0,7,0,7,7,7,0,7]}]},{s:[{s:[0,0,7,7,7,7,7,7,7]},7,{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7]},{s:[0,7,7,7,7]}]},{s:[{s:[0,0,0,7,7,7,7,7]},7,0,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,0,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]}]}]},{s:[{s:[13,
0,{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,0,7,7]},{s:[0,7,7,7,0,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7]}]},{s:[{s:[0,0,7,0,7,7,7]},7,{s:[0,7,7,7,7]},{s:[0,7,0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,0,0,0,7,7]},{s:[0,7,0,0,0,7,7,7,7]},{s:[7,7,0,0,0,0,7,7,7,7]}]},{s:[{s:[0,0,0,0,0,0,7]},7,{s:[0,7,7,7,7,7,7]},{s:[7,7,7,7,7,0,7,7,7,7]},{s:[0,7,0,7,0,7,7,7,7,7]},{s:[7,7,7,7,7,0,0,7,7,7]},{s:[0,7,7,7,0,7,7,7,7,7]},{s:[0,7,7,7,
7,0,7]},{s:[0,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]}]},{s:[{s:[0,0,7,7,7,0,7]},7,{s:[7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},0,{s:[0,7,7,7,7,7,7,7,7,7]},{s:[7,0,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,0,7,7,7,7]}]},{s:[{s:[0,0,7,7,7,7,7,7]},7,{s:[0,7,7,7,7,0,7,7]},{s:[0,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[7,0,7,7,7,0,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]}]},{s:[{s:[0,7,7,7,7,7,7,7,0,7]},7,0,{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7]},{s:[0,
7,7,7,7,7]},{s:[0,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7]}]},{s:[0,7,{s:[0,7,7,7,7,0,0,0,7,7]},{s:[7,7,0,7,7,0,7,0,7]},0,{s:[7,7,7,0,7,0,7,7]},{s:[0,7,7,7,7,7,7,7,0,7]},{s:[7,0,0,0,0,0,0,7,0,7]},{s:[0,0,7]}]},{s:[{s:[0,0,0,0,0,7]},7,0,{s:[0,7,7]},{s:[0,7,0,7,0,7]},0,{s:[0,7,0,0,0,7]},0,{s:[0,7]}]},{s:[{s:[0,7,7,7,0,7,7,7,7,7]},7,{s:[0,7,0,7,7,7]},0,{s:[0,7]},{s:[0,7,0,0,0,0,7,7,7]},{s:[7,7,7,0,0,0,0,7,7,7]}]},7]},{s:[{s:[13,0,0,0,0,0,7,{s:[7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,
7,7,7,0,0,7,0,7]}]},{s:[{s:[0,7,7,7,7,7,7,7]},7,{s:[0,0,7,7,0,0,7,7,7,7]},{s:[0,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,0,7]}]},{s:[{s:[0,7,7,7,7,7,7,7,7]},7,{s:[7,7,7,7,0,7,0,7,7,7]},{s:[0,7,7,7,7,7,7,0,7]},{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,0,7,7,7,7]}]},{s:[{s:[0,0,7,7,0,7,7,7]},7,{s:[0,7,0,7,
7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,0,0,7,7,7,7,7,0,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]}]},{s:[{s:[0,7,7,7,7,7,7,7,7,7]},7,{s:[7,7,7,7,7,0,7,7,7,7]},{s:[0,7,0,7,7,7,7,0,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7]},{s:[7,7,7,0,7]},{s:[0,7,7,7,0,7,0,7,7,7]}]},{s:[{s:[0,0,7,7,7,7]},7,{s:[0,7,0,7,7,7,0,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[0,0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,
7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]}]},{s:[{s:[0,0,7,7,7,7,7,7,7]},7,{s:[0,7,7,0,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[0,7,7,7]}]},{s:[{s:[0,7,0,0,7,0,0,0,7]},7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,0,7,7,7,7,7,7,7]},{s:[0,7,7,0,7,7,7,7,7,7]},0,{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]}]},{s:[{s:[0,0,7,7,7,7]},7,{s:[7,0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,0,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,
7,7,7,7,7,7]},{s:[0,7,0,0,0,7,0,7,7,7]},{s:[0,7,7,7,7,7,7]}]},{s:[{s:[0,7,0,7,7,7,7,7,7]},7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,0,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]}]}]},0,0,0,{s:[{l:12,s:[3]},{s:[0,{s:[14,0,14,0,0,14,15,0,{s:[{s:[{s:[0,16]}]}]}]},0,0,0,0,0,0,0,{s:[0,0,{s:[0,0,{s:[0,0,14]}]}]}]},21,21,21,21,21,21,21,21,2]}]};
ilib.data.states_FR={s:[0,7,{l:7,s:[0,0,0,0,0,0,{s:[0,0,5]}]},7,7,{l:7,s:[{s:[0,0,0,0,0,0,0,0,5]},0,0,0,0,0,0,0,0,{s:[5,0,0,0,5,0,5]}]},{l:6,s:[0,0,0,{s:[0,0,0,0,0,0,0,0,0,5]},0,0,0,0,0,{s:[5,0,5,0,5,0,5]}]},6,{l:15,s:[{s:[15,15,15,15,0,15,0,0,0,15]},{l:15,s:[0,0,0,0,0,0,0,0,0,15]},15,0,0,0,0,0,0,15]},16,0,0,0,{s:[{l:12,s:[3]},21,21,21,21,21,21,21,21,21,2]}]};
ilib.data.states_ES={s:[0,0,7,7,7,10,6,{s:[5,0,0,0,0,0,0,0,0,0,0,0,0,0,6]},{s:[5,5,{s:[0,0,7,0,7,0,0,0,7]},0,{s:[0,0,0,7,0,0,0,0,7]},{s:[0,0,0,0,0,0,7,0,7]},{s:[0,0,0,0,0,0,0,0,7]},{s:[0,7,7,7,0,0,7,7]},{s:[0,7,0,0,0,0,7]}]},{s:[5,{s:[7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7]}]},0,0,0,{s:[{l:15,s:[3]},{l:15,s:[4,{s:[0,0,14,0,0,0,0,0,14]}]},0,0,0,
0,0,0,0,0,2,0,0,0,20]}]};
ilib.data.states_MX={s:[0,0,{s:[0,0,{s:[0,0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,0,7,7,7,7]},{s:[0,7,0,7,7,7,7,7,7,7]},0,0,{s:[0,7,7,7,7,7,7,0,7,7]},{s:[0,7,7,7,7,7,0,7,7]},{s:[0,0,0,0,7,0,7,7]}]},{s:[0,{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},7,{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]},0,{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7]}]},{s:[0,{s:[0,7,7,7,7,7,0,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,0,7,7,7]},{s:[0,7,7,7,7,7,7,7,
7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,0,7,7,7,7,7]},{s:[0,0,7,7,7,7,7,0,7,7]}]},{s:[0,0,0,0,0,7,0,0,{s:[0,0,0,0,0,0,7,7,7,7]},{s:[0,7,7,7,7,7,7,0,0,7]}]},{s:[0,{s:[0,0,7,7,7,7,7,0,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,0,0,7,0,7,7]},{s:[0,7,7,0,0,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[0,0,0,0,0,0,7,7]},{s:[0,0,0,0,7,7,7,7,7]}]},{s:[0,{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,
7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,0,0,7]},{s:[0,7,0,0,0,0,0,7]}]},{s:[{s:[5]},7,{s:[0,7,0,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[0,7,7,0,7,7,7]},0,{s:[0,7,7,0,7,0,7,7,7,7]},{s:[0,7,7,7,0,0,0,7,7]},0,{s:[0,7,7,0,7,0,0,7,0,7]}]},{s:[0,{s:[0,0,0,7,7,0,7,7,7,7]},{s:[0,7,7,7,7]},{s:[0,0,7,7,7,0,7,7,7]},0,{s:[0,7,0,7,7,0,0,0,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]}]},0,0,
0,{s:[{s:[3,12,5,{s:[5,5]},{s:[5,0,0,0,6,6]},{s:[5]},{s:[5,0,0,0,0,0,5]},{s:[5,5]},{s:[5]},3]},6,0,0,0,0,0,0,0,0,2,0,0,0,20]}]};
ilib.data.states_IT={s:[12,{s:[7,7,{s:[0,7,7,7,7,7]},{s:[0,7]},{s:[0,7,7,7,7]},7,{s:[0,7,0,7,0,7,7]},{s:[0,7,7,7,7,7]},{s:[0,0,7,7,7,7,0,7]},7]},7,{s:[7,7,{s:[0,7,7,7,7]},{s:[0,7,7]},{s:[0,7,7,7,7,7,7]},7,{s:[0,0,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]},7]},{s:[7,7,{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,0,7,0,7,7]},7,{s:[0,7,7,7,7,7]},{s:[0,7,7,7,7]},{s:[0,7]},7]},{s:[7,7,{s:[0,7,7,7,7,7]},{s:[0,0,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,0,7]},7,{s:[0,0,0,0,7,7,7]},{s:[0,7,7,
7,7,7,0,7,7]},{s:[0,0,0,7,7,7,7,7,7]},7]},7,{s:[7,7,{s:[0,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[0,0,7,7,7,0,7]},7,{s:[0,7,0,7,0,7,7]},{s:[0,7,0,7,7,7,7]},{s:[0,7,7,7,7,7,0,0,0,7]},7]},{s:[7,7,{s:[0,0,0,7,7,7,0,7,7]},{s:[0,7,7,7,0,7,7]},0,7,{s:[0,7,7,7,7,7]},{s:[0,7,7,7,7,7,0,0,5]},{s:[0,7,7,7,7,7]},7]},{s:[7,7,{s:[0,7,7,7,7,7]},{s:[0,7,7,7,7,7]},{s:[0,7,7]},{l:7,s:[0,0,0,0,0,0,0,0,7]},{s:[0,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[0,7,7,7,7,7]},7]},0,0,0,{s:[{l:12,s:[3]},{l:5,s:[0,{s:[0,0,14,14,0,14,14,
14,14]},{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,5]}]},0,{s:[0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,5]}]},{s:[0,{s:[0,0,0,0,0,5,0,0,5]},0,{s:[5]},0,0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,5]}]},{s:[0,0,0,0,0,0,5]},{s:[0,0,0,0,0,0,0,0,5]},5,{l:5,s:[0,0,0,0,0,0,0,0,0,5]}]},0,6,5,5,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,5]}]},{s:[{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,5]},0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,5]},0,0,0,0,{s:[0,0,5,0,0,0,0,0,0,0,0,
0,0,0,5]}]},0,2]}]};
ilib.data.states_JP={s:[{s:[0,4,0,{s:[0,0,0,4,0,0,4,4,0,4]},{s:[0,4]},{s:[0,0,0,4,0,0,4,5]},{s:[0,4,0,0,0,0,4]},{s:[0,4,0,0,0,0,0,4]},{s:[4,4,0,0,0,0,0,0,4,4]},{s:[0,4]}]},{s:[3,7,{s:[5,0,0,{l:7,s:[0,0,0,0,0,7,0,7,7]},{l:7,s:[0,0,7]},7,{l:7,s:[0,0,0,0,0,0,7,7]}]},{s:[5,0,0,{l:7,s:[0,0,7,0,0,0,0,{l:7,s:[0,0,0,0,0,0,0,0,0,7]}]},7,7,7,{l:7,s:[0,0,7,0,7,0,7,7,7]},7,{l:7,s:[0,0,7,0,7,7,7,7,7]}]},{s:[5,0,7,7,7,{l:7,s:[0,0,7,0,7,0,7,7]},{l:7,s:[0,0,7,7,7,0,7]}]},{l:7,s:[0,0,{l:7,s:[0,0,7,0,0,0,0,7]},{l:7,
s:[0,0,7,0,0,0,0,7,7]},{l:7,s:[0,0,0,0,0,0,0,7,7]},{l:7,s:[0,0,0,0,0,0,0,7,7]},{l:7,s:[0,0,7,0,7,0,7]},7,{l:7,s:[0,0,{l:7,s:[0,0,0,0,0,0,0,0,0,7]},0,7,0,7,7,7]}]},{s:[5,0,7,{l:7,s:[0,0,7,0,7,7,0,0,7]},{l:7,s:[0,0,0,0,0,7,7,0,7]},{l:7,s:[0,0,{l:7,s:[0,0,0,0,0,0,0,0,7]},7,7,7,7,0,7]},7,7]},{l:7,s:[5,0,7,7,7,7,7,0,7,7]},{l:7,s:[5,0,7,7,7,7,7,7,7]},{l:7,s:[5,7,7,7,7,7,0,7,7]}]},{s:[6,0,{l:7,s:[7,0,0,7,7,7,7,0,7,7]},{l:7,s:[0,0,0,7,7,7,7,7,7]},{l:7,s:[7,7,7,7,7,0,7,7,7]},{l:7,s:[7,0,0,0,{l:7,s:[0,0,0,
0,0,0,0,0,0,7]},{l:7,s:[0,0,0,0,0,0,0,0,0,7]},7,{l:7,s:[0,0,0,0,0,0,0,0,0,7]},7,7]},{l:7,s:[7,7,0,7,7,7,7,7,7,7]},{l:7,s:[7,0,0,7,7,0,7,7,7,7]},{l:7,s:[7,0,7,7,7,7,0,7,7,7]},{l:7,s:[0,7,7,7,7,{l:7,s:[0,0,0,0,0,7,0,7]},7,7,7,7]}]},{l:7,s:[6]},{l:7,s:[6,0,{l:7,s:[0,0,7,7,7,0,7,7,7,7]},{l:7,s:[0,0,0,0,7,0,7,0,7,7]},7,7,{l:7,s:[7,0,0,7,0,7,7,7,7]},{l:7,s:[7,0,0,0,7,7,7,0,7,7]},{l:7,s:[7,0,0,0,0,7,0,0,0,7]},{l:7,s:[0,0,7,7,7,7,0,0,0,{s:[0,0,7,0,7,0,7,0,7]}]}]},{s:[5,0,7,{l:7,s:[0,{l:7,s:[0,0,7,7,{s:[0,
0,0,0,0,7]}]},7,7,0,0,{l:7,s:[0,0,7,7,0,0,7,7,{l:7,s:[0,0,0,7]}]},7,7,7]},{l:7,s:[0,0,0,7,7,7,0,7,7]},{l:7,s:[7,7,7,7,7,7,7,7,7,7]},{l:7,s:[0,{l:7,s:[0,0,0,7,0,0,0,7]},7,7,7,7,7,{l:7,s:[0,0,0,0,0,7,0,0,0,7]},7,7]},{s:[5,0,7,7,7,7,{l:7,s:[0,0,0,0,0,0,0,0,0,7]},7,7]},{l:7,s:[0,{l:7,s:[0,0,0,{s:[0,0,0,0,0,0,0,0,7,7]},0,{s:[0,0,0,0,0,0,0,7,7]}]},0,7,7,7,{l:7,s:[0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,7]}]},7]},{l:7,s:[0,0,0,7,7,{l:7,s:[0,0,0,0,0,0,0,0,7,7]},7,{l:7,s:[0,0,7,7,7,0,0,0,7,7]},{l:7,s:[0,0,0,
{l:7,s:[0,0,7]},{l:7,s:[0,0,0,0,0,0,0,0,0,7]},{s:[0,0,0,0,0,0,7]},0,{l:7,s:[0,0,7]},7]},{l:7,s:[0,0,0,0,7,7,7,7,7]}]}]},{l:7,s:[5]},{s:[{l:6,s:[0,6]},0,{l:7,s:[0,7,7,7,7,7,7,7,0,7]},{l:7,s:[0,0,0,0,7,{l:7,s:[0,0,0,0,{l:7,s:[0,0,0,0,0,0,0,0,0,7]},7,7,7]},7,7,7,7]},{s:[7,0,7,{l:7,s:[0,0,0,0,0,0,0,7,0,{l:7,s:[0,0,0,0,0,7]}]},{l:7,s:[0,0,0,7]},7,{l:7,s:[0,0,0,7,0,0,0,0,7]},{l:7,s:[0,0,7,7]},7,7]},7,{l:7,s:[0,{l:7,s:[0,0,0,0,0,0,0,7,0,7]},0,7,7,7,7,7,7]},{l:7,s:[7,7,7,7,7,7,7,0,7,{l:7,s:[0,0,0,0,0,0,0,
7]}]},7,{l:7,s:[7,{l:7,s:[0,0,7,0,7,7]},7,{s:[0,0,7,7]},7,7,7,7,7,7]}]},{s:[{l:6,s:[5]},0,{l:7,s:[{l:7,s:[0,0,0,0,0,0,0,7]},0,0,7,{l:7,s:[0,0,0,0,0,0,0,7,{l:7,s:[0,0,0,0,0,7,7,0,7]}]},0,{l:7,s:[0,0,7]},7,0,7]},{l:7,s:[0,0,7,7,7,7,7,{l:7,s:[0,0,0,0,0,7,7]},{l:7,s:[0,0,0,0,0,0,0,7,7]},{l:7,s:[0,0,0,0,0,7,7]}]},{l:7,s:[0,0,0,0,0,{l:7,s:[0,0,7]},{l:7,s:[0,0,0,0,0,0,7]},{l:7,s:[0,0,7,{l:7,s:[0,0,7]},0,0,{s:[0,0,7,0,0,0,0,7]},7,7]},{l:7,s:[0,0,0,0,0,0,0,7]},7]},{s:[0,{s:[0,0,7,0,7]},7,7,{l:7,s:[0,0,0,0,
0,0,0,0,7]},7,{l:7,s:[0,0,0,0,0,0,0,7]},7,7,7]},{l:7,s:[0,0,0,{l:7,s:[0,0,0,0,0,0,7]},0,{l:7,s:[0,0,0,0,{l:7,s:[0,0,7]}]},7,7,{l:7,s:[0,0,0,0,0,0,0,7]},{l:7,s:[0,0,{l:7,s:[0,0,0,0,0,0,7]},0,0,7,0,0,0,7]}]},{l:7,s:[0,0,0,0,0,7,0,7,0,7]},{l:7,s:[7,0,0,7,{l:7,s:[0,0,0,0,0,0,7,7]},{l:7,s:[0,0,0,7,7]},7,{l:7,s:[0,0,7,7,7,7]},7,7]},{l:7,s:[0,0,7,7,7,7,7,7,7]}]},{s:[6,{s:[5]},{l:7,s:[{l:7,s:[0,0,0,0,7,7,0,0,7]}]},{l:7,s:[{l:7,s:[0,0,7,{s:[0,0,7,7]},7,7]},0,0,7]},{s:[7,0,7,7,7,0,7,7,7,{l:7,s:[0,0,7,7,0,0,
7]}]},{l:7,s:[7,0,7,0,{l:7,s:[0,0,0,0,0,0,7]},7,7,7,0,7]},{l:7,s:[0,0,0,0,7,7,7,{l:7,s:[0,0,0,0,0,0,7]},7,{l:7,s:[0,0,0,0,0,0,0,7]}]},{l:7,s:[0,0,7,{l:7,s:[0,0,0,0,0,0,0,7]},7,7,0,7,7,7]},{l:7,s:[{l:7,s:[0,0,7,0,0,0,0,7,7]},0,7,7,7,7,7,7]},{l:7,s:[5,{s:[0,0,7,7]},0,7,{l:7,s:[0,0,7]},{l:7,s:[0,0,7]},{l:7,s:[0,0,0,0,0,0,0,0,0,7]},{l:7,s:[0,0,7,0,7,0,0,7]}]}]},0,0,0,{s:[12,{s:[{s:[14,0,0,0,14,0,14,0,14]},{s:[14,0,0,14,14,14,14,14,14,14]},0,{s:[0,0,0,0,0,0,14]},0,0,0,{s:[0,14,0,0,0,0,0,14]}]},0,0,0,0,
0,0,0,0,2,8,8]}]};
ilib.data.states_KR={s:[0,{s:[6,6,6,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,6]}]},{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,6]}]},6,6,6,6,6]},7,{s:[5,7,7,7]},{s:[0,7,7,7,7,0,0,0,0,7]},{s:[5,7,7,7,7,7]},{s:[5,7,7,7,7]},{s:[5]},{s:[5,4,4,4,4,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,4]}]},4]},0,0,0,0,{s:[{l:12,s:[{s:[0,3,3,{s:[0,0,0,0,0,0,{s:[0,0,0,0,0,3]}]},0,3,3,{s:[{s:[3]},0,{s:[0,0,0,0,0,0,0,3]},0,0,0,0,0,0,{s:[0,0,0,0,3]}]},3]}]},
{s:[{s:[14,14,0,0,0,0,14,14]},{s:[14,14,14,14,0,14,0,14,14,14]},{s:[14,14,14,14,0,14,0,14,14,14]},{s:[{s:[14,14]},0,14,{s:[14,14,14,14,0,14,14,14,0,14]},0,{s:[14,0,0,0,0,14,0,14]},{s:[0,0,0,0,0,14,14,0,0,14]},{s:[0,0,0,0,0,0,0,14,0,14]},{s:[0,0,14,0,0,14,0,0,14]},{s:[14,0,0,0,0,0,0,0,14,14]}]},0,0,0,0,{s:[0,0,14,0,0,0,0,0,14]}]},21,21,21,21,21,21,21,21,2,8,8,0,20]}]};
ilib.data.states_BR={s:[0,{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,0,7,0,0,7,7]},{s:[0,7,7,7,7,7,0,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,0,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,0,7,7,7,0,7,0,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},0,0,0,{s:[{l:12,s:[{s:[0,{s:[0,0,3,0,3,3]},{s:[0,3,0,3,0,3]},{s:[0,3,3]},{s:[0,3,0,3]}]},{s:[0,0,4,0,4,4]},{s:[0,4,0,4,0,4]},{s:[{s:[5,0,0,5]},4,4]},{s:[0,4,0,4]},{s:[{s:[13]}]},0,0,{s:[{s:[5]}]},{s:[{s:[13]}]}]},{l:5,s:[{s:[14]},0,{s:[0,0,0,0,0,0,0,0,14]},
0,0,0,0,0,{s:[0,14]},{s:[14,14,14,14,14,0,0,14,14,14]}]},21,21,21,21,6,6,6,{l:6,s:[{s:[0,{s:[0,0,16,0,16,16]},{s:[0,16,0,16,0,16]},{s:[0,16,16]},{s:[0,16,0,16]},0,0,0,0,{s:[15]}]}]},2,8,8,0,20]}]};
ilib.data.states_RU={s:[0,0,7,{s:[{s:[0,{l:7,s:[0,0,7]},7]},0,0,0,{s:[0,{l:7,s:[0,0,7]},{s:[0,0,7]},7,0,7,{l:7,s:[0,0,7]},{l:7,s:[0,0,7]},0,7]},{s:[0,7,7,{s:[0,0,7]}]},{s:[0,0,0,0,0,7]},0,{s:[0,{s:[0,0,7]},{s:[0,0,7]},7,{l:7,s:[0,0,7]},{l:7,s:[0,0,7]},0,0,7]},{s:[7,{l:7,s:[0,{s:[0,0,0,7]},7,0,0,{s:[0,0,7]}]},0,0,7,{l:7,s:[0,0,7]}]}]},{s:[{s:[0,7]},{s:[0,{l:7,s:[0,0,7]},0,{l:7,s:[0,0,{s:[0,0,7]}]},0,{l:7,s:[0,0,7]},7]},{s:[0,{l:7,s:[0,0,7]},0,{l:7,s:[0,0,7]},7,0,7,{l:7,s:[0,0,{s:[0,0,7]}]}]},0,0,0,
0,{s:[0,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]}]},0,7,7,{s:[{s:[5,5,5,5,5,5,5,5,5,5]},{s:[0,7,7,7,7,{s:[0,0,7]},{s:[0,0,{s:[0,0,7]}]},7,{l:7,s:[0,0,7]}]},{s:[7,7,0,0,0,0,{s:[0,0,7]}]},{s:[0,7,0,7,7,{l:7,s:[0,0,7]},7]},{s:[0,{s:[0,0,7]},{l:7,s:[0,0,7]},7,{s:[0,0,7]},{s:[0,0,7]},{s:[0,0,7]},7]},{s:[0,{l:7,s:[0,0,7]},0,0,0,{s:[0,0,7]}]},{s:[0,{l:7,s:[0,{s:[0,0,0,0,0,0,0,7]},7]},7,7,0,{s:[0,0,7]},7,7,0,7]},{s:[0,7,7,7,0,0,0,7,{l:7,s:[0,0,{s:[0,0,7]}]},7]}]},{l:6,s:[0,0,0,0,0,0,0,{s:[5,5]}]},
0,0,{s:[0,0,0,0,0,0,0,0,0,{s:[{s:[0,6,6,6]},{s:[6,6,6,0,6,0,6,0,6]},{s:[0,6,6,6,6,0,6,6,6,6]},{s:[6,6,6,6,6,0,6,6,6]},0,{s:[6,6,6,6]},{s:[6,6,6,6,6,6]},0,{s:[6,6,6,6,6,6,0,6,6,6]},{s:[0,0,0,0,0,0,0,6]}]}]},{s:[{s:[{s:[0,0,0,0,0,0,0,0,0,5]},0,0,0,0,0,0,5,0,5]},{s:[{s:[5,14,14,14,14]},{s:[0,0,14,0,0,5]}]},21,21,21,21,21,21,{l:12,s:[0,{s:[3]},{s:[0,4,4,4,0,0,3,3,3]},0,0,{s:[0,4,4,4,4,4,3,3,3,3]}]},21,2,8,8,0,20]}]};
ilib.data.states_XX={s:[0,21,21,21,21,21,21,21,21,21,0,0,0,{s:[{l:12,s:[3]},21,21,21,21,21,21,21,21,21,2]}]};
ilib.data.states_CN={s:[0,{s:[7,0,0,{s:[6,6,6,6,{s:[6,6,6,6,6,6,6,6,6,6]},6,6,6,6,6]},{s:[0,0,0,0,0,6,0,6]},{s:[6,6,6,6,0,6,6,6,6,6]},0,0,{s:[6,0,6,0,0,6,6,6,6,6]}]},{s:[7,7,7,7,7,7,0,7,7,7]},{s:[0,{s:[7,7,7,7,7,7,7,7,7,7]},0,{s:[0,0,0,0,0,7]},{s:[0,0,0,0,0,0,0,0,0,7]},{s:[7,7,7,7,7,7,7,7,7,7]},0,{s:[7,7,7,7,7,7,7,7,7,7]},0,{s:[0,7,7,7,7,7,7,0,7]}]},{s:[0,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,0,0,0,0,0,7,0,7]},{s:[0,7,7,7,7,7,7,7,7,7]},0,{s:[0,7,7,7,7,7,7,7,7,7]},{s:[0,0,0,0,7,0,0,7,7,7]},{s:[7,7,7,7,
7,0,7,7,7,7]},{s:[0,0,7,7]}]},{s:[0,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,0,0,7,0,0,0,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,0,0,7,0,0,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7]},{s:[0,7,7,7,7,7,7,7,7,7]}]},{s:[0,0,0,{s:[0,7,7,7,7,7]},0,0,{s:[7,0,7,7,0,0,0,0,7]},0,0,{s:[0,7,7]}]},{s:[{s:[0,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,0,7,0,7,0,0,0,7]},{s:[7,7,0,0,7,7,7,7,7,7]},{s:[0,0,0,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,0,7,7,0,0,7,0,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},0,
{s:[7,7,7,7,7,7,7,7,7,7]}]},{s:[{s:[0,0,{s:[0,0,0,0,0,0,0,0,0,7]},0,0,0,{s:[7,0,0,7,0,7,0,7,7]},{s:[7,7,0,0,0,0,0,0,7]},{s:[0,7]}]},{s:[0,0,7,7,0,0,7,7,7]},{s:[0,0,0,0,0,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},0,{s:[0,7,7,7,7,7,7,7,7,7]},0,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,0,0,7,0,0,7,7,7]},{s:[0,7,7,7,7,7,7,7,7]}]},{s:[{s:[0,7,7,7,0,0,7,0,7,7]},{s:[0,7,7,7,7,7,7,7,0,7]},0,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,0,7]},{s:[0,7,7,7,7,7]},0,{s:[7,7,7,7,7,7,7,7,0,7]},0,{s:[7,7,7,7,7,7,7,7,7,7]}]},0,0,0,{s:[{l:12,s:[3]},
{l:21,s:[0,{s:[14,0,0,0,5,0,0,0,0,14]},{s:[14,{s:[0,{s:[0,0,0,0,0,0,0,13]},{s:[0,13]}]},14]},{s:[6,6,6,6,{s:[6,6,6,6,6,6,6,6,6,6]},6,6,6,6,6]},{s:[0,0,0,0,0,6,0,6]},{s:[6,6,6,6,0,6,6,6,6,6]},0,0,{s:[6,0,6,0,0,6,6,6,6,6]}]},21,21,21,21,21,21,21,{l:21,s:[0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,5]}]},2]}]};
ilib.data.states_HK={s:[0,5,21,21,0,6,6,6,5,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,6]},0,0,0,{s:[{s:[{s:[0,3]}]},{s:[0,{s:[0,0,14]},0,0,0,0,0,0,0,0,0,0,0,0,5]},21,21,0,6,6,6,5,{s:[0,0,0,0,0,0,0,0,0,{s:[0,0,14,0,0,0,0,0,0,14]},0,0,0,0,6]},2]}]};
ilib.data.states_TW={s:[0,{s:[0,0,0,0,0,0,{s:[0,0,5]}]},{l:7,s:[{s:[0,0,0,5,5,0,0,0,0,5]}]},{l:7,s:[0,0,7,7,7,7,7,7,7,7]},{l:7,s:[0,0,7,7,7,{l:7,s:[0,0,0,0,0,0,0,0,7]},7,7,7,7]},{l:7,s:[0,0,0,0,0,7,7]},{l:7,s:[0,0,7,0,0,0,7,7,0,7]},7,{l:7,s:[{s:[5]},0,{s:[0,0,0,7,0,0,7,7]},0,0,0,0,0,7,7]},6,0,0,0,{s:[{l:12,s:[{s:[0,0,3,0,0,3,3,3,0,3]},{s:[0,0,0,0,0,0,0,0,0,3]}]},{s:[{s:[14,0,0,0,14,14,14]},{s:[14,0,14,0,0,0,0,14,0,14]},0,0,0,0,{s:[0,0,0,0,0,0,14,0,14]}]},0,0,0,0,0,0,0,0,2]}]};
ilib.data.states_SG={s:[0,0,0,21,0,0,21,21,{s:[{s:[5]},0,0,0,0,0,0,0,0,0,0,0,0,0,21]},21,0,0,0,{s:[{s:[0,{s:[0,5]},0,0,0,0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,3]}]},{s:[0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,5]}]},0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,5]}]},{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,5]}]},{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,5]}]},{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,
0,{s:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,13]}]}]},0,21,0,0,21,21,{s:[{s:[5]},0,0,0,0,0,0,0,0,0,0,0,0,0,21]},{s:[0,0,0,0,0,0,0,0,0,{s:[0,0,0,14,0,14,0,0,0,14]},0,0,0,0,21]},2]}]};
ilib.data.idd={s:[0,9,{s:[9,{s:[9,9,9,9,9,9,9,9,9,9]},{s:[9,9,9,9,9,9,9,9,9,9]},{s:[9,9,9,9,9,9,9,9,9,9]},{s:[9,9,9,9,9,9,9,9,9,9]},{s:[9,9,9,9,9,9,9,9,9,9]},{s:[9,9,9,9,9,9,9,9,9,9]},9,9,{s:[9,9,9,9,9,9,9,9,9,9]}]},{s:[9,9,9,9,9,{s:[9,9,9,9,9,9,9,9,9,9]},9,{s:[9,9,9,9,9,9,9,9,9,9]},{s:[9,9,9,9,9,9,9,9,9,9]},9]},{s:[9,9,{s:[9,9,9,9,9,9,9,9,9,9]},9,9,9,9,9,9,9]},{s:[{s:[9,9,9,9,9,9,9,9,9,9]},9,9,9,9,9,9,9,9,{s:[9,9,9,9,9,9,9,9,9,9]}]},{s:[9,9,9,9,9,9,9,{s:[9,9,9,9,9,9,9,9,9,9]},{s:[9,9,9,9,9,9,9,9,
9,9]},{s:[9,9,9,9,9,9,9,9,9,9]}]},9,{s:[{s:[9,9,9,9,9,9,9,9,9,9]},9,9,9,9,{s:[9,9,9,9,9,9,9,9,9,9]},9,{s:[9,9,9,9,9,9,9,9,9,9]},{s:[9,9,9,9,9,9,9,9,9,9]},9]},{s:[9,9,9,9,9,9,{s:[9,9,9,9,9,9,9,9,9,9]},{s:[9,9,9,9,9,9,9,9,9,9]},9,{s:[9,9,9,9,9,9,9,9,9,9]}]}]};
ilib.data.mnc={s:[{s:[{s:[0,{s:[{s:[0,7]}]}]}]},0,{s:[{s:[{s:[{s:[0,0,0,0,0,{s:[0,0,0,7,7]},{s:[0,0,0,0,0,0,7]}]}]},0,{s:[{s:[0,7,0,0,0,7,0,0,0,7]},{s:[7]}]},0,{s:[{s:[0,7,7,7,7,7,7,7,7,7]},{s:[7,0,7,0,7,0,7,0,7]},{s:[7,7]},0,0,0,{s:[0,0,0,0,0,0,0,7,0,7]}]},0,{s:[{s:[0,7]},{s:[7]},{s:[7]}]},0,{s:[{s:[7,7,7,0,0,7,7,7]},{s:[7,7,0,7]},{s:[7,7,7]},0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,7]}]}]},{s:[0,0,{s:[{s:[0,7]}]},{s:[{s:[0,0,0,7]}]},{s:[{s:[0,7,0,7,7,7,7,7,7,7]},{s:[0,0,0,0,0,7,7,7,7,7]},{s:[0,7,7,7]}]},0,
{s:[{s:[0,7]},0,0,{s:[7]},0,0,0,{s:[7]}]},0,{s:[{s:[0,0,0,7,0,7]},0,0,0,0,0,0,0,0,{s:[7]}]},{s:[{s:[0,7,7]},{s:[7]}]}]},{s:[{s:[{s:[0,7,0,7,0,7]}]},0,{s:[{s:[0,7,7]},{s:[7]},0,{s:[7]},0,0,0,{s:[0,0,0,0,0,0,0,7]},{s:[0,0,0,0,0,0,0,0,7]},{s:[0,0,0,0,0,0,0,0,7,7]}]},0,0,0,{s:[{s:[0,7,7,7,7,7,7]},{s:[7]}]},0,{s:[{s:[0,7,7,7,0,7,7,7,7]},0,0,0,0,{s:[7,7]}]}]},{s:[{s:[{s:[0,7,7,7,7]},0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,7,7]}]},{s:[{s:[0,7,7,7,7,7,7]},0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,7]}]},{s:[{s:[0,
7,0,7,0,7,0,7]},{s:[7,7,7,0,7,7,7]}]},0,{s:[{s:[7,7,7,7,7,0,0,7,7]},{s:[7,7,7,0,7,7,7,0,7,7]},{s:[7,0,7,0,0,7]},{s:[7,7,7,7,7]},0,{s:[7,0,0,0,0,7,0,0,7]},0,{s:[0,0,0,0,0,7,0,7]}]},0,0,0,{s:[{s:[0,7,7,7,0,7,7,7,0,7]},{s:[7,7,7]},{s:[7]},{s:[7]},{s:[7]},0,0,{s:[0,0,0,0,0,0,0,7]}]}]},{s:[{s:[{s:[0,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7]},{s:[7,7,0,0,0,7]}]},0,{s:[{s:[0,7,7,7,7,7,7,7,7,7]},0,{s:[7]}]},0,{s:[{s:[0,0,0,7,0,7,0,7,7]},{s:[7,0,7,0,7]},{s:[0,7,0,0,0,0,0,0,0,7]},0,0,0,0,0,0,{s:[0,7]}]},0,{s:[{s:[0,
7,7,7]}]},{s:[{s:[0,7,7,7,0,7,7,7,7,7]}]},{s:[{s:[0,7,7,7,7,7,7]}]}]},{s:[{s:[{s:[0,7,7,7,7,7,7,7,0,7]},{s:[7,7,7,7,0,7,7,7,0,7]},{s:[7,0,0,7,0,0,0,0,7]},{s:[0,0,0,0,0,7,0,0,7,7]},{s:[0,0,0,0,7]},0,0,0,0,{s:[0,0,7,7,0,0,0,0,0,7]}]},0,0,0,0,{s:[{s:[0,7,7,7,7,7,7,7]},0,{s:[0,7,0,7]}]},0,{s:[{s:[0,7,7,7,7]}]},0,{s:[{s:[0,7,7,7,7,7]}]}]},{s:[{s:[{s:[0,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7]}]},0,{s:[{s:[0,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7]},0,0,0,0,{s:[7]},{s:[0,0,0,0,0,0,7,7]},0,{s:[{s:[0,7]}]}]},
0,0,0,{s:[{s:[0,7,0,0,0,0,7]}]},0,{s:[{s:[0,7,0,7,0,0,7]},0,{s:[0,7]}]}]},{s:[{s:[{s:[0,7]},0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,7]},0,{s:[0,0,0,0,0,0,0,0,0,7]}]},0,{s:[{s:[0,7,7,7,7,7,0,7,0,7]}]},0,{s:[{s:[0,7,7,7,7,0,7,7,7]},{s:[0,7]}]},0,{s:[{s:[0,7,7,7]}]},0,{s:[{s:[0,7]},0,{s:[0,7]},0,0,0,0,{s:[0,0,0,0,0,0,0,7]}]}]},{s:[{s:[{s:[0,7]},{s:[7]}]},0,{s:[{s:[0,7,7,7,7]}]},{s:[{s:[0,7,0,0,7,7]},{s:[7]}]},{s:[{s:[0,7,0,7,0,7]}]},0,{s:[{s:[0,7,7,7,7]}]},0,{s:[{s:[0,7,7]}]},{s:[0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,
7]},0,{s:[0,0,0,0,0,0,0,0,7]}]}]},{s:[{s:[{s:[0,7]}]},0,{s:[{s:[0,7]}]},{s:[0,0,0,0,{s:[7,7]},0,{s:[0,0,0,0,7]},{s:[7]}]},{s:[{s:[0,7,7,7]}]},{s:[{s:[0,7,7,0,0,7]},0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,7]}]},0,{s:[{s:[0,7,7,7]}]}]}]},{s:[{s:[0,0,{s:[0,0,{s:[0,0,{s:[7,7]},0,0,0,0,0,0,{s:[7]}]},{s:[0,0,0,0,0,{s:[7]},{s:[7,7]},{s:[7]},{s:[7]}]},{s:[0,0,0,0,0,0,0,0,0,{s:[7]}]},{s:[{s:[7]},{s:[7]}]},{s:[0,{s:[7]},{s:[7]},0,{s:[7]},{s:[0,7,7,7,0,7,7,7]},0,0,{s:[7]}]},{s:[{s:[0,7,7,7]},{s:[7]},{s:[7]},0,0,0,0,0,
{s:[7]}]},{s:[0,0,0,0,0,0,0,0,{s:[7]}]}]},0,0,0,0,0,{s:[{s:[0,7]}]}]},{s:[{s:[{s:[{l:7,s:[7,0,0,0,7]},{s:[7,0,7,7,7,0,7,7]},{s:[7,0,0,0,0,0,7]},{s:[7,0,7,7,7,0,0,0,7]},{s:[7,0,0,0,0,0,7]},0,{s:[7]},{s:[7]},{s:[7]},{s:[7]}]},{s:[{s:[7]},{s:[7]},{s:[7]},0,{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]}]},{s:[{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]}]},{s:[{s:[7]},{s:[7,7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]},0,{s:[7]},{s:[7]},{s:[7]}]},{s:[{s:[7]},{s:[7]},{s:[7]},{s:[7]},
{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]}]},{s:[{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]},0,{s:[7]},{s:[7]},{s:[7]},{s:[7]}]},{s:[0,{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]}]},{s:[0,0,0,{s:[7]},{s:[7]},0,{s:[7]},{s:[7]},{s:[7]},{s:[7]}]},{s:[{s:[7]},0,0,{s:[7]},0,{s:[7]},0,{s:[7]},{s:[7]},{s:[7]}]},{s:[{s:[7]},{s:[7]},0,0,{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]}]}]},{s:[{s:[{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]}]},{s:[{s:[7]},
{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]}]},{s:[0,{s:[7]},0,0,0,{s:[7]}]}]},0,0,0,0,{s:[{s:[0,{s:[7,7]}]}]}]},0,{s:[{s:[0,{s:[0,7]}]},0,0,0,{s:[{s:[0,7,7,7,7]}]},0,0,0,{s:[{s:[0,0,{s:[7]},0,0,{l:7,s:[7]},0,{s:[7]}]},{s:[0,0,0,0,0,0,0,0,{s:[7]}]}]}]},{s:[{s:[{s:[0,7,7,7,0,0,0,0,7]},0,{s:[7]}]},0,{s:[0,0,0,0,0,0,{s:[{s:[7]}]},{s:[0,0,0,0,0,{s:[7]}]},{s:[0,0,{s:[7]}]}]},0,{s:[{s:[0,0,0,{s:[7]}]},0,0,0,0,0,0,0,0,{s:[0,0,{s:[7]}]}]},0,{s:[0,{s:[0,0,0,0,{s:[7]}]}]},0,{s:[0,
{s:[0,0,0,0,0,0,0,{s:[7]}]},0,0,0,{s:[0,0,0,0,0,0,0,{s:[7]}]}]}]},{s:[{s:[{s:[0,7,7]}]},0,{s:[{s:[0,0,0,{s:[7]}]},{s:[0,{s:[7]}]}]},0,0,0,{s:[{s:[0,0,0,0,0,{s:[7]}]},{s:[0,{s:[7]}]}]},0,{s:[{s:[0,0,0,0,0,{s:[7]}]},{s:[0,{s:[7]}]}]}]},{s:[{s:[{s:[0,0,0,0,0,0,0,{s:[7]}]},{s:[{s:[7]},{s:[7]}]}]},0,{s:[0,0,0,0,0,{s:[0,7]},{s:[0,0,0,0,0,0,0,0,0,7]},0,0,{s:[0,7,0,0,7,7]}]},{s:[{s:[0,7,7]}]},{s:[0,0,0,{s:[0,0,0,0,0,0,0,0,0,{s:[7]}]}]},{s:[{s:[0,{s:[7]}]},0,0,0,0,0,0,0,{s:[0,0,0,0,{s:[7]}]}]},{s:[{s:[0,0,
{s:[7]}]},{s:[0,{s:[7]}]}]},0,{s:[{s:[0,7]}]}]},{s:[{s:[{s:[0,7,7,7,7]}]},0,{s:[{s:[0,7]}]},0,{s:[0,{s:[0,0,7,{s:[7]}]}]},0,{s:[0,0,0,{s:[0,0,0,0,0,{s:[7,0,7]}]}]}]}]},{s:[{s:[{s:[{s:[0,7,7,7,7]}]},{s:[{s:[0,7,7,0,0,0,0,7]},0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,7]}]},{s:[0,{s:[0,7]},0,0,0,0,0,{s:[0,0,0,0,0,0,0,7]}]},0,{s:[{s:[0,7,7,0,7,7,0,7,0,7]},{s:[7,7,7,7,7,7,0,7,0,7]},{s:[7,7,7,0,7,0,0,7,7,7]},{s:[7,7,0,0,7,0,7,7,7]},{s:[0,7,7,0,7,7]},{s:[0,7,7,7,7,7,7,7,7,7]},{s:[7,0,7,0,7,0,7,7,7,7]},{s:[0,0,7,0,7,
0,7,0,7]},{s:[7,7,7,7,7,7,7]},{s:[7,7,7,7,0,0,7]}]},{s:[{s:[0,0,{s:[0,0,0,0,0,7,7,7,0,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,7,7,7,7,7,7]},7]},{s:[7,0,0,7]},0,0,0,{s:[0,7,7,0,7,0,7]},{s:[0,0,0,0,0,0,7]},{s:[7,0,0,0,0,{s:[7,7,7,7,7,7,7]},0,0,0,{s:[0,0,0,0,0,0,0,0,0,7]}]},{s:[{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,0,0,0,0,0,7,7]},{s:[7,7,7,0,7]},{s:[0,0,0,0,7]},{s:[0,0,0,0,7,7,0,0,7]},{s:[7,0,0,0,0,7]},{s:[0,0,0,0,7,7]},{s:[0,0,0,0,0,7]},{s:[7,7]}]},{s:[0,{s:[0,0,7,7,7,0,0,7]},{s:[0,0,0,0,0,0,0,7,0,7]}]}]}]},
{s:[{s:[{s:[0,7,0,7,7,0,7,7]}]},0,{s:[{s:[0,7]},0,{s:[7]},0,{s:[7]},{s:[7]}]},{s:[{s:[0,7,7,7,0,7,0,0,7]}]},{s:[{s:[0,7]}]},{s:[{s:[0,7,0,7]}]},{s:[{s:[0,7,7,7]},0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,7]}]},{s:[{s:[0,7,7]}]},{s:[{s:[0,0,0,0,0,7,0,0,7]},0,{s:[7]},{s:[7]},{s:[7]}]},{s:[{s:[0,0,7,7,7]}]}]},{s:[{s:[{s:[0,7,0,7,7,0,0,7]}]},{s:[{s:[0,7,7,7,7]}]},{s:[{s:[0,0,7,7]}]},{s:[{s:[0,0,0,0,0,7,7]}]},{s:[{s:[0,0,7,7]}]},{s:[{s:[0,7,7,7]},0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,7]}]},{s:[{s:[0,7,7,0,7]}]},{s:[{s:[0,
7,7]}]},{s:[0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,7]},{s:[0,7,0,0,0,0,0,0,7,7]}]},{s:[{s:[0,7,7,7]}]}]},{s:[0,0,{s:[0,{s:[0,7,0,0,7,0,0,0,0,7]},0,{s:[0,0,7,0,0,7]}]},0,{s:[{s:[0,7,7,0,7,7,7,7]}]},0,{s:[{s:[0,7,7,7,7,7]}]},{s:[{s:[0,7,0,0,0,7,0,0,0,7]}]},{s:[{s:[0,7,7]}]}]},{s:[{s:[{s:[7,7,7,7,7,0,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,0,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,
7,7,7,7]},{s:[7,0,7,7,7,7,7,7,7,7]}]}]},{s:[{s:[{s:[0,0,7,7,7,7,7,0,7]}]},0,{s:[{s:[0,7,7,7,7,7,7,7,7]}]},0,{s:[{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,0,7,7,7,7,7,7]},{s:[0,0,0,0,0,0,0,0,0,7]}]},{s:[{s:[7,7,7,7,7,7]}]},{s:[{s:[0,7,7,7,7,7,7,0,7,7]},{s:[0,0,0,0,0,0,0,0,7]}]},{s:[{s:[0,7,7,7,0,0,0,0,7]}]}]},{s:[{s:[{s:[7,7,7,7,0,7,7]},0,{s:[7]}]},0,0,0,0,0,{s:[{s:[0,7,7,0,0,0,7]},{s:[0,7]},0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,7,7]},{s:[0,0,7,7,0,0,0,7,0,7]}]},{s:[0,{s:[0,0,0,0,0,0,0,0,0,{s:[0,0,0,7]}]}]}]},
{s:[{s:[{s:[0,7,7,7,7,7,7,7]}]},0,{s:[{s:[0,7,7]}]}]}]},{s:[{s:[0,0,{s:[0,{s:[0,0,7,7,0,0,7,7,7,7]}]},0,0,{s:[{s:[0,7,7,7,7,7,7,0,7,7]},{s:[0,0,7,7,7,7,7]},{s:[0,7,0,0,7]},{s:[0,0,0,0,0,0,0,0,7]},0,0,0,{s:[0,7,7]},{s:[0,0,0,0,0,0,0,0,7]},{s:[7,0,0,0,0,0,0,0,0,7]}]}]},{s:[{s:[{s:[7,7,0,7,0,0,0,7,7,7]},{s:[7,7]},{s:[7,7,0,0,0,0,0,7,7]},0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,7]},{s:[0,0,0,0,0,0,0,0,0,7]}]},0,0,0,{s:[{s:[0,0,7]}]},{s:[{s:[0,7,7,7,0,7]},{s:[0,7,0,0,0,0,0,0,7]},0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,
7]}]}]},{s:[{s:[{s:[7,7,7]},{s:[0,0,0,0,0,7,0,0,7]},{s:[0,0,0,7]},0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,7]}]},0,0,0,0,{s:[{s:[0,7,7,7,0,7]},{s:[0,0,7]}]},0,0,{s:[{s:[0,7,7]},{s:[0,7]}]}]},{s:[{s:[{s:[7,7,7,7,7,7]},{s:[0,0,7]},{s:[0,0,0,0,7]}]},0,0,0,0,0,0,{s:[{s:[0,7,0,7]}]},0,{s:[{s:[0,7]},0,0,0,{s:[0,0,0,7]},0,0,0,{s:[0,0,0,0,0,0,0,0,7]}]}]},{s:[{s:[0,7]},{s:[{s:[0,7]}]},{s:[{s:[0,7,7]}]},0,0,{s:[{s:[0,0,0,0,0,0,0,0,0,7]}]},{s:[{s:[0,7]}]},0,{s:[{s:[0,7]}]},{s:[{s:[0,7]},0,{s:[0,0,0,0,0,0,0,7]}]}]},
{s:[{s:[{s:[0,7]}]},0,{s:[{s:[0,7]},0,0,0,0,0,0,0,{s:[7]}]},{s:[{s:[0,7]}]}]}]},{s:[{s:[0,0,{s:[{s:[0,7,7,7]}]},{s:[{s:[0,7,7,7]}]},{s:[{s:[7,7,7]}]},{s:[{s:[0,7,7,7]}]},{s:[{s:[7,7]}]},{s:[{s:[0,7,7,7,7]}]},{s:[{s:[0,7,7,7]}]},{s:[{s:[0,7]},{s:[7]}]}]},{s:[{s:[{s:[0,7,7]}]},{s:[{s:[0,7,7,7,7]}]},{s:[{s:[0,7,7,7,7,7,7]}]},{s:[{s:[0,7,7,7]}]},{s:[{s:[0,7,7,7,7]}]},{s:[{s:[0,7,0,7]}]},{s:[{s:[0,7,7,7,7,7]}]},{s:[{s:[0,7,7]},{s:[7]}]},{s:[{s:[0,7,0,0,7]},0,{s:[7]}]},{s:[{s:[0,7,7,7,7,7]},0,{s:[0,0,0,
0,0,7]}]}]},{s:[{s:[{s:[0,7,7,7,7,0,7]}]},{s:[0,0,{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]}]},{s:[{s:[0,7,7,7,7]}]},{s:[{s:[0,7,7,7,7]}]},{s:[{s:[0,7,7]}]},{s:[{s:[0,7,7]}]},{s:[{s:[0,7]}]},{s:[{s:[0,7,0,7]}]},{s:[{s:[0,7,7,7]}]},{s:[{s:[0,7]},{s:[7]}]}]},{s:[{s:[{s:[0,7,7,0,7,7]},0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,7,0,0,7]}]},{s:[{s:[0,0,7]}]},{s:[{s:[0,0,7,7]}]},{s:[{s:[0,7,7]},{s:[7]}]},{l:7,s:[{s:[0,7,7,0,0,7]}]},{s:[0,{s:[7,0,0,7]}]},{s:[{s:[0,7]}]},{s:[{s:[0,7,0,0,7]},{s:[7]},{s:[0,0,0,0,0,7]},{s:[7]},
0,0,0,0,{s:[0,0,7]}]},{s:[{s:[0,7]}]},{s:[{s:[0,0,7,7,0,7,0,7]}]}]},{s:[{s:[{s:[0,0,7,7,7,7,7,7]}]},{s:[{s:[0,7]},{s:[7,7,0,0,7]},{s:[0,0,7]}]},{s:[{s:[0,7,7,7,0,0,0,7]},0,0,0,0,0,0,0,{s:[0,0,7]}]},{s:[{s:[0,7,0,0,7]}]},0,{s:[{s:[0,7,7,7]}]},{s:[{s:[0,7,7,7,7]}]},{s:[{s:[7,0,7]},{s:[7]}]},{s:[{s:[0,7,0,7,7]}]},{s:[{s:[0,7,7,7]}]}]},{s:[{s:[{s:[0,7]},{s:[7]}]},{s:[{s:[0,7,7]}]},{s:[{s:[0,7,7,0,7]}]},{s:[0,{s:[7]}]},{s:[{s:[0,7]}]},{s:[{s:[0,7,7,0,0,0,7,7]},{s:[7,7,0,7]},{s:[0,7]},{s:[7,7,7,7]}]},0,
{s:[{s:[0,7]}]}]}]},{s:[{s:[0,0,{s:[0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,7,7]}]},0,{s:[{s:[0,7,7,7]}]},0,{s:[{s:[0,7,7,7,7]},{s:[7]}]},0,{s:[{s:[0,7,7]},0,0,{s:[7]},{s:[7]}]}]},{s:[{s:[0,0,{s:[0,7]},{s:[7]},0,0,0,{s:[0,0,0,7]}]},0,{s:[{s:[0,7,7,7]}]},0,{s:[{s:[0,7,7,7,7]}]},0,{s:[{s:[0,0,0,0,0,0,7]},{s:[7,0,0,0,0,0,0,7]}]}]},{s:[0,0,{s:[{s:[0,{s:[7]},{s:[7]},0,0,0,0,{s:[7]}]},0,0,{s:[0,{s:[7]},{s:[7]},{s:[7]},{s:[7]},{s:[7]}]}]},0,{s:[{s:[7,0,7,7,7,7,7,7,7]},{s:[7,7,0,0,0,7,7]},{s:[0,0,0,7,7]},{s:[0,7,7,
7,7,0,0,7]}]}]},{s:[{s:[{s:[0,7,7,7,7]},{s:[7]},0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,7]}]},0,{s:[{s:[{s:[0,7,7]}]},{s:[{s:[0,7,7,7]},{s:[0,7]},7]}]},0,{s:[{s:[0,7,7,7,7,0,7]}]},0,{s:[{s:[0,7,7,7]}]},0,{s:[{s:[0,7,7]}]}]},{s:[{s:[{s:[7,7,7]}]},0,0,0,{s:[{s:[0,7,7,0,7,7]}]},0,{s:[{s:[0,0,7]}]},0,{s:[{s:[7,7,0,0,0,0,0,7]},{s:[7]}]}]}]},0,{s:[{s:[0,{s:[{s:[0,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,7,0,0,7,0,0,0,0,7]}]}]}]}]};
ilib.PhoneNumber=function $ilib$PhoneNumber$($number$$,$options$$){var $stateData$$,$regionSettings$$;this.sync=true;this.loadParams={};if(!$number$$||typeof $number$$==="string"&&$number$$.length===0)return this;if($options$$){if(typeof $options$$.sync==="boolean")this.sync=$options$$.sync;if($options$$.loadParams)this.loadParams=$options$$.loadParams;if(typeof $options$$.onLoad==="function")this.onLoad=$options$$.onLoad}if(typeof $number$$==="object"){this.vsc=$number$$.vsc;this.iddPrefix=$number$$.iddPrefix;
this.countryCode=$number$$.countryCode;this.trunkAccess=$number$$.trunkAccess;this.cic=$number$$.cic;this.emergency=$number$$.emergency;this.mobilePrefix=$number$$.mobilePrefix;this.serviceCode=$number$$.serviceCode;this.areaCode=$number$$.areaCode;this.subscriberNumber=$number$$.subscriberNumber;this.extension=$number$$.extension;this.invalid=$number$$.invalid;if($number$$.plan&&$number$$.locale){this.plan=$number$$.plan;this.locale=$number$$.locale;this.destinationPlan=$number$$.destinationPlan;
this.destinationLocale=$number$$.destinationLocale;if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad(this);return}}new ilib.Locale.PhoneLoc({locale:$options$$&&$options$$.locale,mcc:$options$$&&$options$$.mcc,sync:this.sync,loadParams:this.loadParams,onLoad:ilib.bind(this,function($loc$$){this.locale=this.destinationLocale=$loc$$;new ilib.NumPlan({locale:this.locale,sync:this.sync,loadParms:this.loadParams,onLoad:ilib.bind(this,function($plan$$){this.plan=this.destinationPlan=
$plan$$;typeof $number$$!=="object"&&ilib.loadData({name:"states.json",object:ilib.PhoneNumber,locale:this.locale,sync:this.sync,loadParams:ilib.merge(this.loadParams,{returnOne:true}),callback:ilib.bind(this,function($stdata$$){if(!$stdata$$)$stdata$$=ilib.PhoneNumber._defaultStates;$stateData$$=$stdata$$;$regionSettings$$={stateData:$stateData$$,plan:$plan$$,handler:ilib._handlerFactory(this.locale,$plan$$)};$number$$="^"+$number$$.replace(/\^/g,"");$number$$=ilib.PhoneNumber._stripFormatting($number$$);
this._parseNumber($number$$,$regionSettings$$,$options$$)})})})})})})};
ilib.PhoneNumber.parseImsi=function $ilib$PhoneNumber$parseImsi$($imsi$$,$options$$){var $sync$$=true,$loadParams$$={},$fields$$={};if($imsi$$){if($options$$){typeof $options$$.sync!=="undefined"&&($sync$$=$options$$.sync==true);if($options$$.loadParams)$loadParams$$=$options$$.loadParams}if(ilib.data.mnc){$fields$$=ilib.PhoneNumber._parseImsi(ilib.data.mnc,$imsi$$);if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad($fields$$)}else ilib.loadData({name:"mnc.json",object:ilib.PhoneNumber,
nonlocale:true,sync:$sync$$,loadParams:$loadParams$$,callback:ilib.bind(this,function($data$$){ilib.data.mnc=$data$$;$fields$$=ilib.PhoneNumber._parseImsi($data$$,$imsi$$);if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad($fields$$)})});return $fields$$}};
ilib.PhoneNumber._parseImsi=function $ilib$PhoneNumber$_parseImsi$($data$$,$imsi$$){var $ch$$,$end$$11_i$$,$currentState$$,$handlerMethod_lastLeaf$$,$fields$$={},$consumed$$=0;if($currentState$$=$data$$){for($end$$11_i$$=0;$end$$11_i$$<$imsi$$.length;){$ch$$=ilib.PhoneNumber._getCharacterCode($imsi$$.charAt($end$$11_i$$));if($ch$$>=0){$ch$$=$currentState$$.s&&$currentState$$.s[$ch$$];if(typeof $ch$$==="object"){if(typeof $ch$$.l!=="undefined"){$handlerMethod_lastLeaf$$=$ch$$;$consumed$$=$end$$11_i$$}$currentState$$=
$ch$$;$end$$11_i$$++}else{if((typeof $ch$$==="undefined"||$ch$$===0||typeof $ch$$==="object"&&typeof $ch$$.l==="undefined")&&$handlerMethod_lastLeaf$$){$ch$$=$handlerMethod_lastLeaf$$;$end$$11_i$$=$consumed$$}if(typeof $ch$$==="number"&&$ch$$||typeof $ch$$==="object"&&typeof $ch$$.l!=="undefined"){$handlerMethod_lastLeaf$$=ilib.PhoneNumber._states[typeof $ch$$==="number"?$ch$$:$ch$$.l];$end$$11_i$$=$handlerMethod_lastLeaf$$==="area"?$end$$11_i$$+1:6;$fields$$.mcc=$imsi$$.substring(0,3);$fields$$.mnc=
$imsi$$.substring(3,$end$$11_i$$);$fields$$.msin=$imsi$$.substring($end$$11_i$$)}else if($imsi$$.length>=6){$fields$$.mcc=$imsi$$.substring(0,3);$fields$$.mnc=$imsi$$.substring(3,6);$fields$$.msin=$imsi$$.substring(6)}return $fields$$}}else $end$$11_i$$++}if($end$$11_i$$>=$imsi$$.length&&$imsi$$.length>=6){$fields$$.mcc=$imsi$$.substring(0,3);$fields$$.mnc=$imsi$$.substring(3,6);$fields$$.msin=$imsi$$.substring(6)}else $fields$$=void 0;return $fields$$}};
ilib.PhoneNumber._stripFormatting=function $ilib$PhoneNumber$_stripFormatting$($str$$){var $ret$$="",$i$$;for($i$$=0;$i$$<$str$$.length;$i$$++)ilib.PhoneNumber._getCharacterCode($str$$.charAt($i$$))>=-1&&($ret$$=$ret$$+$str$$.charAt($i$$));return $ret$$};
ilib.PhoneNumber._getCharacterCode=function $ilib$PhoneNumber$_getCharacterCode$($ch$$){if($ch$$>="0"&&$ch$$<="9")return $ch$$-0;switch($ch$$){case "+":return 10;case "*":return 11;case "#":return 12;case "^":return 13;case "p":case "P":case "t":case "T":case "w":case "W":return-1;case "x":case "X":case ",":case ";":return-1}return-2};ilib.PhoneNumber._states="none unknown plus idd cic service cell area vsc country personal special trunk premium emergency service2 service3 service4 cic2 cic3 start local".split(" ");
ilib.PhoneNumber._fieldOrder="vsc iddPrefix countryCode trunkAccess cic emergency mobilePrefix serviceCode areaCode subscriberNumber extension".split(" ");ilib.PhoneNumber._defaultStates={s:[0,21,21,21,21,21,21,21,21,21,0,0,0,{s:[{s:[3],l:12},21,21,21,21,21,21,21,21,21,2]}]};
ilib.PhoneNumber.prototype={_parseOtherCountry:function $ilib$PhoneNumber$$_parseOtherCountry$($number$$,$regionData$$,$options$$,$countryCode$$){new ilib.Locale.PhoneLoc({locale:this.locale,countryCode:$countryCode$$,sync:this.sync,loadParms:this.loadParams,onLoad:ilib.bind(this,function($loc$$){this.destinationLocale=$loc$$;ilib.loadData({name:"states.json",object:ilib.PhoneNumber,locale:this.destinationLocale,sync:this.sync,loadParams:ilib.merge(this.loadParams,{returnOne:true}),callback:ilib.bind(this,
function($stateData$$){if(!$stateData$$)$stateData$$=ilib.PhoneNumber._defaultStates;new ilib.NumPlan({locale:this.destinationLocale,sync:this.sync,loadParms:this.loadParams,onLoad:ilib.bind(this,function($plan$$){this.destinationPlan=$plan$$;var $regionSettings$$={stateData:$stateData$$,plan:$plan$$,handler:ilib._handlerFactory(this.destinationLocale,$plan$$)};$plan$$.getSkipTrunk()||($number$$="^"+$number$$);this._parseNumber($number$$,$regionSettings$$,$options$$)})})})})})})},_parseNumber:function $ilib$PhoneNumber$$_parseNumber$($number$$,
$regionData$$,$options$$){var $i$$,$ch$$30_newState$$1_result$$,$regionSettings$$,$handlerMethod$$1_lastLeaf$$,$currentState$$=$regionData$$.stateData;$handlerMethod$$1_lastLeaf$$=void 0;var $consumed$$=0;$regionSettings$$=$regionData$$;for($i$$=0;$i$$<$number$$.length;){$ch$$30_newState$$1_result$$=ilib.PhoneNumber._getCharacterCode($number$$.charAt($i$$));if($ch$$30_newState$$1_result$$>=0){$ch$$30_newState$$1_result$$=$currentState$$.s&&$currentState$$.s[$ch$$30_newState$$1_result$$];!$ch$$30_newState$$1_result$$&&
($currentState$$.s&&$currentState$$.s[14])&&($ch$$30_newState$$1_result$$=$currentState$$.s[14]);if(typeof $ch$$30_newState$$1_result$$==="object"&&$i$$+1<$number$$.length){if(typeof $ch$$30_newState$$1_result$$.l!=="undefined"){$handlerMethod$$1_lastLeaf$$=$ch$$30_newState$$1_result$$;$consumed$$=$i$$}$currentState$$=$ch$$30_newState$$1_result$$;$i$$++}else{if((typeof $ch$$30_newState$$1_result$$==="undefined"||$ch$$30_newState$$1_result$$===0||typeof $ch$$30_newState$$1_result$$==="object"&&typeof $ch$$30_newState$$1_result$$.l===
"undefined")&&$handlerMethod$$1_lastLeaf$$){$ch$$30_newState$$1_result$$=$handlerMethod$$1_lastLeaf$$;$i$$=$consumed$$;$consumed$$=0;$handlerMethod$$1_lastLeaf$$=void 0}if(typeof $ch$$30_newState$$1_result$$==="number"&&$ch$$30_newState$$1_result$$||typeof $ch$$30_newState$$1_result$$==="object"&&typeof $ch$$30_newState$$1_result$$.l!=="undefined"){$handlerMethod$$1_lastLeaf$$=ilib.PhoneNumber._states[typeof $ch$$30_newState$$1_result$$==="number"?$ch$$30_newState$$1_result$$:$ch$$30_newState$$1_result$$.l];
$ch$$30_newState$$1_result$$=$number$$.charAt(0)==="^"?$regionSettings$$.handler[$handlerMethod$$1_lastLeaf$$]($number$$.slice(1),$i$$-1,this,$regionSettings$$):$regionSettings$$.handler[$handlerMethod$$1_lastLeaf$$]($number$$,$i$$,this,$regionSettings$$);$number$$=$ch$$30_newState$$1_result$$.number;$i$$=$consumed$$=0;$handlerMethod$$1_lastLeaf$$=void 0;$currentState$$=$regionSettings$$.stateData;if($ch$$30_newState$$1_result$$.countryCode!==void 0){this._parseOtherCountry($number$$,$regionData$$,
$options$$,$ch$$30_newState$$1_result$$.countryCode);return}if($ch$$30_newState$$1_result$$.table!==void 0){ilib.loadData({name:$ch$$30_newState$$1_result$$.table+".json",object:ilib.PhoneNumber,nonlocale:true,sync:this.sync,loadParams:this.loadParams,callback:ilib.bind(this,function($data$$){if(!$data$$)$data$$=ilib.PhoneNumber._defaultStates;$regionSettings$$={stateData:$data$$,plan:$regionSettings$$.plan,handler:$regionSettings$$.handler};this._parseNumber($number$$,$regionSettings$$,$options$$)})});
return}if($ch$$30_newState$$1_result$$.skipTrunk!==void 0){$ch$$30_newState$$1_result$$=ilib.PhoneNumber._getCharacterCode($regionSettings$$.plan.getTrunkCode());$currentState$$=$currentState$$.s&&$currentState$$.s[$ch$$30_newState$$1_result$$]}}else{$handlerMethod$$1_lastLeaf$$=typeof $ch$$30_newState$$1_result$$==="number"?"none":"local";$ch$$30_newState$$1_result$$=$number$$.charAt(0)==="^"?$regionSettings$$.handler[$handlerMethod$$1_lastLeaf$$]($number$$.slice(1),$i$$-1,this,$regionSettings$$):
$regionSettings$$.handler[$handlerMethod$$1_lastLeaf$$]($number$$,$i$$,this,$regionSettings$$);break}}}else $i$$++}if($i$$>=$number$$.length&&$currentState$$!==$regionData$$.stateData){$handlerMethod$$1_lastLeaf$$=typeof $currentState$$.l==="undefined"||$currentState$$===0?"none":"local";$ch$$30_newState$$1_result$$=$number$$.charAt(0)==="^"?$regionSettings$$.handler[$handlerMethod$$1_lastLeaf$$]($number$$.slice(1),$i$$-1,this,$regionSettings$$):$regionSettings$$.handler[$handlerMethod$$1_lastLeaf$$]($number$$,
$i$$,this,$regionSettings$$)}if(this.onLoad)this.onLoad(this)},_getPrefix:function $ilib$PhoneNumber$$_getPrefix$(){return this.areaCode||this.serviceCode||this.mobilePrefix||""},_hasPrefix:function $ilib$PhoneNumber$$_hasPrefix$(){return this._getPrefix()!==""},_xor:function $ilib$PhoneNumber$$_xor$($left$$,$right$$){return $left$$===void 0&&$right$$===void 0||$left$$!==void 0&&$right$$!==void 0?false:true},_join:function $ilib$PhoneNumber$$_join$(){var $fieldName$$,$formatted$$="";try{for(var $field$$ in ilib.PhoneNumber._fieldOrder)if(typeof $field$$===
"string"&&typeof ilib.PhoneNumber._fieldOrder[$field$$]==="string"){$fieldName$$=ilib.PhoneNumber._fieldOrder[$field$$];this[$fieldName$$]!==void 0&&($formatted$$=$formatted$$+this[$fieldName$$])}}catch($e$$){throw $e$$;}return $formatted$$},compare:function $ilib$PhoneNumber$$compare$($other$$){var $match$$=100,$FRdepartments_thisPrefix$$={590:1,594:1,596:1,262:1},$ITcountries$$={378:1,379:1},$currentCountryCode$$=0;typeof this.locale.region==="string"&&($currentCountryCode$$=this.locale._mapRegiontoCC(this.locale.region));
if(!this.subscriberNumber||!$other$$.subscriberNumber||this.subscriberNumber!==$other$$.subscriberNumber||this._xor(this.extension,$other$$.extension)||this.extension!==$other$$.extension)return 0;if(this._xor(this.countryCode,$other$$.countryCode))switch(this.locale.getRegion()){case "FR":if(this.countryCode in $FRdepartments_thisPrefix$$||$other$$.countryCode in $FRdepartments_thisPrefix$$){if(this.areaCode!==$other$$.areaCode||this.mobilePrefix!==$other$$.mobilePrefix)$match$$=$match$$-100}else $match$$=
$match$$-16;break;case "IT":this.countryCode in $ITcountries$$||$other$$.countryCode in $ITcountries$$?this.areaCode!==$other$$.areaCode&&($match$$=$match$$-100):$match$$=$match$$-16;break;default:$match$$=$match$$-16;if(this.countryCode!==void 0&&this.countryCode!==$currentCountryCode$$||$other$$.countryCode!==void 0&&$other$$.countryCode!==$currentCountryCode$$)$match$$=$match$$-16}else if(this.countryCode!==$other$$.countryCode)if($other$$.countryCode==="33"||this.countryCode==="33")if(this.countryCode in
$FRdepartments_thisPrefix$$||$other$$.countryCode in $FRdepartments_thisPrefix$$){if(this.areaCode!==$other$$.areaCode||this.mobilePrefix!==$other$$.mobilePrefix)$match$$=$match$$-100}else $match$$=$match$$-100;else this.countryCode==="39"||$other$$.countryCode==="39"?this.countryCode in $ITcountries$$||$other$$.countryCode in $ITcountries$$?this.areaCode!==$other$$.areaCode&&($match$$=$match$$-100):$match$$=$match$$-100:$match$$=$match$$-100;this._xor(this.serviceCode,$other$$.serviceCode)?$match$$=
$match$$-20:this.serviceCode!==$other$$.serviceCode&&($match$$=$match$$-100);this._xor(this.mobilePrefix,$other$$.mobilePrefix)?$match$$=$match$$-20:this.mobilePrefix!==$other$$.mobilePrefix&&($match$$=$match$$-100);this._xor(this.areaCode,$other$$.areaCode)?$match$$=$match$$-12:this.areaCode!==$other$$.areaCode&&($match$$=$match$$-100);$FRdepartments_thisPrefix$$=this._getPrefix();$other$$=$other$$._getPrefix();$FRdepartments_thisPrefix$$&&($other$$&&$FRdepartments_thisPrefix$$!==$other$$)&&($match$$=
$match$$-100);$match$$<0?$match$$=0:$match$$>100&&($match$$=100);return $match$$},equals:function equals($other$$){if($other$$.locale&&this.locale&&!this.locale.equals($other$$.locale)&&(!this.countryCode||!$other$$.countryCode))return false;for(var $p$$ in $other$$)if($p$$!==void 0&&(this[$p$$]!==void 0&&typeof this[$p$$]!=="object")&&($other$$[$p$$]===void 0||this[$p$$]!==$other$$[$p$$]))return false;for($p$$ in $other$$)if($p$$!==void 0&&($other$$[$p$$]!==void 0&&typeof $other$$[$p$$]!=="object")&&
(this[$p$$]===void 0||this[$p$$]!==$other$$[$p$$]))return false;return true},_doNormalize:function $ilib$PhoneNumber$$_doNormalize$($options$$,$norm$$,$homeLocale$$,$currentLocale$$,$currentPlan$$,$destinationLocale$$,$destinationPlan$$){var $formatted$$="";if(!$norm$$.invalid&&$options$$&&$options$$.assistedDialing){if($norm$$.subscriberNumber&&(!$options$$.manualDialing||$norm$$.iddPrefix||$norm$$.countryCode||$norm$$.trunkAccess))if($currentLocale$$.getRegion()!==$destinationLocale$$.getRegion()){if(!$norm$$._hasPrefix()&&
$options$$.defaultAreaCode&&$destinationLocale$$.getRegion()===$homeLocale$$.getRegion()&&(!$destinationPlan$$.getFieldLength("minLocalLength")||$norm$$.subscriberNumber.length>=$destinationPlan$$.getFieldLength("minLocalLength"))){$norm$$.areaCode=$options$$.defaultAreaCode;if(!$destinationPlan$$.getSkipTrunk()&&$destinationPlan$$.getTrunkCode())$norm$$.trunkAccess=$destinationPlan$$.getTrunkCode()}$norm$$.trunkAccess&&$destinationPlan$$.getSkipTrunk()&&delete $norm$$.trunkAccess;if($options$$.sms)if($homeLocale$$.getRegion()===
"US"&&$currentLocale$$.getRegion()!=="US")if($destinationLocale$$.getRegion()!=="US"){$norm$$.iddPrefix="011";$norm$$.countryCode=$norm$$.countryCode||$homeLocale$$._mapRegiontoCC($destinationLocale$$.getRegion())}else if($options$$.networkType==="cdma"){delete $norm$$.iddPrefix;delete $norm$$.countryCode;if($norm$$.areaCode)$norm$$.trunkAccess="1"}else{if($norm$$.areaCode){$norm$$.iddPrefix="+";$norm$$.countryCode="1";delete $norm$$.trunkAccess}}else{$norm$$.iddPrefix=$options$$.networkType==="cdma"?
$currentPlan$$.getIDDCode():"+";$norm$$.countryCode=$norm$$.countryCode||$homeLocale$$._mapRegiontoCC($destinationLocale$$.region)}else $norm$$._hasPrefix()&&!$norm$$.countryCode&&($norm$$.countryCode=$homeLocale$$._mapRegiontoCC($destinationLocale$$.region));if($norm$$.countryCode&&!$options$$.sms)$norm$$.iddPrefix=$options$$.networkType==="cdma"?$currentPlan$$.getIDDCode():"+"}else{if($options$$.defaultAreaCode)if($destinationPlan$$.getPlanStyle()==="open"){if(!$norm$$.trunkAccess&&$norm$$._hasPrefix()&&
$destinationPlan$$.getTrunkCode())$norm$$.trunkAccess=$destinationPlan$$.getTrunkCode()}else if($norm$$._hasPrefix()){if($destinationPlan$$.getTrunkRequired()&&$destinationPlan$$.getTrunkCode())$norm$$.trunkAccess=$norm$$.trunkAccess||$destinationPlan$$.getTrunkCode()}else if($destinationLocale$$.getRegion()===$homeLocale$$.getRegion()){$norm$$.areaCode=$options$$.defaultAreaCode;if($destinationPlan$$.getTrunkRequired()&&$destinationPlan$$.getTrunkCode())$norm$$.trunkAccess=$norm$$.trunkAccess||$destinationPlan$$.getTrunkCode()}if($options$$.sms&&
$homeLocale$$.getRegion()==="US"&&$currentLocale$$.getRegion()!=="US"){$norm$$.iddPrefix="011";$destinationPlan$$.getSkipTrunk()&&$norm$$.trunkAccess&&delete $norm$$.trunkAccess}else if($norm$$.iddPrefix||$norm$$.countryCode){delete $norm$$.iddPrefix;delete $norm$$.countryCode;if(($destinationPlan$$.getPlanStyle()==="open"||$destinationPlan$$.getTrunkRequired())&&$destinationPlan$$.getTrunkCode())$norm$$.trunkAccess=$destinationPlan$$.getTrunkCode()}}}else if(!$norm$$.invalid){if(!$norm$$._hasPrefix()&&
$options$$&&$options$$.defaultAreaCode&&$destinationLocale$$.getRegion()===$homeLocale$$.region)$norm$$.areaCode=$options$$.defaultAreaCode;!$norm$$.countryCode&&$norm$$._hasPrefix()&&($norm$$.countryCode=$homeLocale$$._mapRegiontoCC($destinationLocale$$.getRegion()));if($norm$$.countryCode){$norm$$.iddPrefix=$options$$&&$options$$.networkType&&$options$$.networkType==="cdma"?$currentPlan$$.getIDDCode():"+";if($destinationPlan$$.getSkipTrunk()&&$norm$$.trunkAccess)delete $norm$$.trunkAccess;else if(!$destinationPlan$$.getSkipTrunk()&&
!$norm$$.trunkAccess&&$destinationPlan$$.getTrunkCode())$norm$$.trunkAccess=$destinationPlan$$.getTrunkCode()}}return $formatted$$=$norm$$._join()},_doReparse:function $ilib$PhoneNumber$$_doReparse$($options$$,$norm$$,$homeLocale$$,$currentLocale$$,$currentPlan$$,$destinationLocale$$,$destinationPlan$$,$sync$$,$loadParams$$,$callback$$){var $formatted$$,$tempRegion$$;if($options$$&&$options$$.assistedDialing&&!$norm$$.trunkAccess&&!$norm$$.iddPrefix&&$norm$$.subscriberNumber&&$norm$$.subscriberNumber.length>
$destinationPlan$$.getFieldLength("maxLocalLength"))new ilib.PhoneNumber("+"+this._join(),{locale:this.locale,sync:$sync$$,loadParms:$loadParams$$,onLoad:ilib.bind(this,function($data$$){if(($tempRegion$$=$data$$.countryCode&&$data$$.locale._mapCCtoRegion($data$$.countryCode))&&$tempRegion$$!=="unknown"&&$tempRegion$$!=="SG"){$norm$$=$data$$;$destinationLocale$$=$data$$.destinationLocale;$destinationPlan$$=$data$$.destinationPlan}$formatted$$=this._doNormalize($options$$,$norm$$,$homeLocale$$,$currentLocale$$,
$currentPlan$$,$destinationLocale$$,$destinationPlan$$,$sync$$,$loadParams$$);typeof $callback$$==="function"&&$callback$$($formatted$$)})});else if($options$$&&$options$$.assistedDialing&&$norm$$.invalid&&$currentLocale$$.region!==$norm$$.locale.region)new ilib.PhoneNumber(this._join(),{locale:$currentLocale$$,sync:$sync$$,loadParms:$loadParams$$,onLoad:ilib.bind(this,function($data$$){$data$$&&!$data$$.invalid&&($norm$$=$data$$);$formatted$$=this._doNormalize($options$$,$norm$$,$homeLocale$$,$currentLocale$$,
$currentPlan$$,$destinationLocale$$,$destinationPlan$$,$sync$$,$loadParams$$);typeof $callback$$==="function"&&$callback$$($formatted$$)})});else{$formatted$$=this._doNormalize($options$$,$norm$$,$homeLocale$$,$currentLocale$$,$currentPlan$$,$destinationLocale$$,$destinationPlan$$,$sync$$,$loadParams$$);typeof $callback$$==="function"&&$callback$$($formatted$$)}},normalize:function $ilib$PhoneNumber$$normalize$($options$$){var $norm$$,$sync$$=true,$loadParams$$={};if($options$$){typeof $options$$.sync!==
"undefined"&&($sync$$=$options$$.sync==true);if($options$$.loadParams)$loadParams$$=$options$$.loadParams}$norm$$=new ilib.PhoneNumber(this);var $normalized$$;$options$$&&(typeof $options$$.mcc!=="undefined"||typeof $options$$.country!=="undefined")?new ilib.Locale.PhoneLoc({mcc:$options$$.mcc,countryCode:$options$$.countryCode,locale:this.locale,sync:$sync$$,loadParams:$loadParams$$,onLoad:ilib.bind(this,function($loc$$){new ilib.NumPlan({locale:$loc$$,sync:$sync$$,loadParms:$loadParams$$,onLoad:ilib.bind(this,
function($plan$$){this._doReparse($options$$,$norm$$,this.locale,$loc$$,$plan$$,this.destinationLocale,this.destinationPlan,$sync$$,$loadParams$$,function($fmt$$){$normalized$$=$fmt$$;if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad($fmt$$)})})})})}):this._doReparse($options$$,$norm$$,this.locale,this.locale,this.plan,this.destinationLocale,this.destinationPlan,$sync$$,$loadParams$$,function($fmt$$){$normalized$$=$fmt$$;if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad($fmt$$)});
return $normalized$$}};
ilib.data.phonefmt={international:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],trunkAccess:["X","XX "],subscriberNumber:"X XX XXX XXXX XXXXX XXXXXX XXXXXXX XXXXXXXX XXXXXXXXX XXXXXXXXXX XXXXXXXXXXX".split(" ")},mobile:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],trunkAccess:["X","XX "],subscriberNumber:"X XX XXX XXXX XXXXX XXXXXX XXXXXXX XXXXXXXX XXXXXXXXX XXXXXXXXXX XXXXXXXXXXX".split(" ")},internationalmobile:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],trunkAccess:["X",
"XX "],subscriberNumber:"X XX XXX XXXX XXXXX XXXXXX XXXXXXX XXXXXXXX XXXXXXXXX XXXXXXXXXX XXXXXXXXXXX".split(" ")},"default":{example:"87654321",iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],trunkAccess:["X","XX "],subscriberNumber:"X XX XXX XXXX XXXXX XXXXXX XXXXXXX XXXXXXXX XXXXXXXXX XXXXXXXXXX XXXXXXXXXXX".split(" ")}};
ilib.data.phonefmt_AU={international:{iddPrefix:["X","XX ","XXX ","XXXX "],countryCode:["X ","XX ","XXX "],trunkAccess:"",areaCode:"X ",serviceCode:"X ;XX ;XXX ;XXXX ;XXXXX ;XXXXXX ".split(";"),subscriberNumber:"X;XX;XXX;XXXX;XXXX X;XXXX XX;XXXX XXX;XXXX XXXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},mobile:{iddPrefix:["X","XX ","XXX ","XXXX "],countryCode:["X ","XX ","XXX "],trunkAccess:"X",mobilePrefix:["X ","XX ","XXX ","XXX X"],areaCode:"X ",serviceCode:"X ;XX ;XXX ;XXXX ;XXX XX;XXX XXX".split(";"),
subscriberNumber:["X","XX","XX X","XX XX","XX XXX"],extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},internationalmobile:{iddPrefix:["X","XX ","XXX ","XXXX "],countryCode:["X ","XX ","XXX "],trunkAccess:"",mobilePrefix:["X ","XX ","XXX ","XXX X"],areaCode:"X ",serviceCode:"X ;XX ;XXX ;XXXX ;XXXXX ;XXXXXX ".split(";"),subscriberNumber:["X","XX","XX X","XX XX","XX XXX"],extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},service:{iddPrefix:["X","XX ","XXX ","XXXX "],countryCode:["X ",
"XX ","XXX "],trunkAccess:"X",mobilePrefix:["X ","XX ","XXX ","XXX X"],areaCode:"X ",serviceCode:"X ;XX ;XXX ;XXXX ;XXXXX ;XXXXXX ".split(";"),subscriberNumber:"X;XX;XXX;XXX X;XXX XX;XXX XXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},"default":{example:"(02) 1234 5678",whole:{iddPrefix:["X","XX ","XXX ","XXXX "],countryCode:["X ","XX ","XXX "],trunkAccess:"(X",areaCode:"X) ",subscriberNumber:"X;XX;XXX;XXXX;XXXXX;XXXXXX;XXXX XXX;XXXX XXXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},
partial:{iddPrefix:["X","XX ","XXX ","XXXX "],countryCode:["X ","XX ","XXX "],trunkAccess:"(X",areaCode:"X) ",subscriberNumber:"X;XX;XXX;XXXX;XXXX X;XXXX XX;XXXX XXX;XXXX XXXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")}},nobrackets:{example:"02 1234 5678",whole:{iddPrefix:["X","XX ","XXX ","XXXX "],countryCode:["X ","XX ","XXX "],trunkAccess:"X",areaCode:"X ",subscriberNumber:"X;XX;XXX;XXXX;XXXXX;XXXXXX;XXXX XXX;XXXX XXXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},
partial:{iddPrefix:["X","XX ","XXX ","XXXX "],countryCode:["X ","XX ","XXX "],trunkAccess:"X",areaCode:"X ",subscriberNumber:"X;XX;XXX;XXXX;XXXX X;XXXX XX;XXXX XXX;XXXX XXXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")}},compressed:{example:"02 12345678",iddPrefix:["X","XX ","XXX ","XXXX "],countryCode:["X ","XX ","XXX "],trunkAccess:"X",areaCode:"X ",subscriberNumber:"X XX XXX XXXX XXXXX XXXXXX XXXXXXX XXXXXXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")}};
ilib.data.phonefmt_GB={international:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],emergency:"XXX ",trunkAccess:"",mobilePrefix:["X","XX ","XXX ","XXXX ","XXXXX "],areaCode:"X;XX ;XXX ;XXXX ;XXX XX ;XXX XXX ".split(";"),serviceCode:["X","XX ","XXX ","XXXX ","XXX XX "],subscriberNumber:"X;XX;XXX;XXXX;XXXXX;XXXXXX;XXX XXXX;XXXX XXXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},mobile:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],emergency:"XXX ",trunkAccess:"X",
mobilePrefix:["X","XX ","XXX ","XXXX ","XXXXX "],areaCode:"X;XX ;XXX ;XXXX ;XXXXX ;XXX XXX ".split(";"),serviceCode:["X","XX ","XXX ","XXXX ","XXXXX "],subscriberNumber:"X;XX;XXX;XXXX;XXXXX;XXXXXX;XXX XXXX;XXXX XXXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},internationalmobile:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],emergency:"XXX ",trunkAccess:"",mobilePrefix:["X","XX ","XXX ","XXXX ","XXXXX "],areaCode:"X;XX ;XXX ;XXXX ;XXXXX ;XXX XXX ".split(";"),
serviceCode:["X","XX ","XXX ","XXXX ","XXXXX "],subscriberNumber:"X;XX;XXX;XXXX;XXXXX;XXXXXX;XXX XXXX;XXXX XXXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},"default":{example:"(020) 1234 5678",iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],emergency:"XXX ",trunkAccess:"(X",areaCode:"X);XX) ;XXX) ;XXXX) ;XXX XX) ;XXX XXX) ".split(";"),serviceCode:["X) ","XX) ","XXX) ","XXXX) "],subscriberNumber:"X;XX;XXX;XXXX;XXXXX;XXXXXX;XXX XXXX;XXXX XXXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},
common:{example:"020 1234 5678",iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],emergency:"XXX ",trunkAccess:"X",areaCode:"X;XX ;XXX ;XXXX ;XXX XX ;XXX XXX ".split(";"),serviceCode:["X ","XX ","XXX ","XXXX "],subscriberNumber:"X;XX;XXX;XXXX;XXXXX;XXXXXX;XXX XXXX;XXXX XXXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},compressed:{example:"020 12345678",iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],emergency:"XXX ",trunkAccess:"X",areaCode:"X;XX ;XXX ;XXXX ;XXXXX ;XXXXXX ".split(";"),
serviceCode:["X ","XX ","XXX ","XXXX "],subscriberNumber:"X XX XXX XXXX XXXXX XXXXXX XXXXXXX XXXXXXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")}};
ilib.data.phonefmt_IN={international:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX","XXXX-"],emergency:"XXX ",trunkAccess:"",mobilePrefix:["X","XX","XXX"],areaCode:["X ","XX ","XXX ","XXXX "],serviceCode:["X ","XX ","XXX ","XXXX "],subscriberNumber:"X XX XXX XXXX XXXXX XXXXXX XXXXXXX XXXXXXXX XXXXXXXXX XXXXXXXXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},mobile:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX",
"XXXX-"],emergency:"XXX ",trunkAccess:"X",mobilePrefix:["X","XX","XXX"],areaCode:["X-","XX-","XXX-","XXXX-"],serviceCode:["X-","XX-","XXX-","XXXX-"],subscriberNumber:"X XX XX-X XX-XX XX-XXX XX-XXXX XX-XXXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},internationalmobile:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX","XXXX-"],emergency:"XXX ",trunkAccess:"X",mobilePrefix:["X","XX","XXX"],areaCode:["X ","XX ","XXX ","XXXX "],serviceCode:["X ",
"XX ","XXX ","XXXX "],subscriberNumber:"X;XX;XX X;XX XX;XX XXX;XX XXXX;XX XXXXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},"default":{example:"022-12345678",iddPrefix:["X","XX "],countryCode:["X-","XX-","XXX-"],cic:["X","XX","XXX","XXXX-"],emergency:"XXX ",trunkAccess:"X",areaCode:["X-","XX-","XXX-","XXXX-"],serviceCode:["X-","XX-","XXX-","XXXX-"],subscriberNumber:"X XX XXX XXXX XXXXX XXXXXX XXXXXXX XXXXXXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},
spaces:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX","XXXX-"],emergency:"XXX ",trunkAccess:"X",areaCode:["X ","XX ","XXX ","XXXX "],serviceCode:["X","XX","XXX","XXXX "],subscriberNumber:"X;XX;XXX;XXXX;XXXXX;XXX XXX;XXX XXXX;XXXX XXXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},hyphens:{iddPrefix:["X","XX-"],countryCode:["X-","XX-","XXX-"],cic:["X","XX","XXX","XXXX-"],emergency:"XXX ",trunkAccess:"X",areaCode:["X-","XX-","XXX-","XXXX-"],
serviceCode:["X","XX","XXX","XXXX-"],subscriberNumber:"X XX XXX XXXX XXXXX XXX-XXX XXX-XXXX XXXX-XXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")}};
ilib.data.phonefmt_US={international:{vsc:"X ;XX ;XXX ;XXXX ;XXXXX ;XXXXXX ".split(";"),iddPrefix:["X","XX ","XXX "],countryCode:["X ","XX ","XXX "],cic:"X;XX;XX X;XX XX;XX XX X;XX XX XX;XX XX XXX ".split(";"),emergency:"XXX ",trunkAccess:"",areaCode:["X","XX","XXX "],serviceCode:["X","XX","XXX "],subscriberNumber:"X;XX;XXX;XXX X;XXX XX;XXX XXX;XXX XXXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},mobile:{vsc:"X ;XX ;XXX ;XXXX ;XXXXX ;XXXXXX ".split(";"),iddPrefix:["X",
"XX ","XXX "],countryCode:["X ","XX ","XXX "],cic:"X XX XX-X XX-XX XX-XX-X XX-XX-XX XX-XX-XXX-".split(" "),emergency:"XXX ",trunkAccess:"X ",areaCode:["(X)","(XX)","(XXX) "],serviceCode:["(X)","(XX)","(XXX) "],subscriberNumber:"X XX XXX XXX-X XXX-XX XXX-XXX XXX-XXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},internationalmobile:{vsc:"X ;XX ;XXX ;XXXX ;XXXXX ;XXXXXX ".split(";"),iddPrefix:["X","XX ","XXX "],countryCode:["X ","XX ","XXX "],cic:"X;XX;XX X;XX XX;XX XX X;XX XX XX;XX XX XXX ".split(";"),
emergency:"XXX ",trunkAccess:"X ",areaCode:["X","XX","XXX "],serviceCode:["X","XX","XXX "],subscriberNumber:"X;XX;XXX;XXX X;XXX XX;XXX XXX;XXX XXXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},service:{vsc:"X ;XX ;XXX ;XXXX ;XXXXX ;XXXXXX ".split(";"),iddPrefix:["X","XX ","XXX "],countryCode:["X ","XX ","XXX "],cic:"X;XX;XX X;XX XX;XX XX X;XX XX XX;XX XX XXX ".split(";"),emergency:"XXX ",trunkAccess:"X ",areaCode:["X","XX","XXX "],serviceCode:["X","XX","XXX "],subscriberNumber:"X XX XXX XXX-X XXX-XX XXX-XXX XXX-XXXX".split(" "),
extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},"default":{example:"1 (650) 555-1234",whole:{vsc:"X ;XX ;XXX ;XXXX ;XXXXX ;XXXXXX ".split(";"),emergency:"XXX ",iddPrefix:["X","XX ","XXX "],countryCode:["X ","XX ","XXX "],cic:"X;XX;XX-X;XX-XX;XX-XX-X;XX-XX-XX;XX-XX-XXX ".split(";"),trunkAccess:"X ",areaCode:["(X)","(XX)","(XXX) "],serviceCode:["(X)","(XX)","(XXX) "],subscriberNumber:"X XX XXX XXXX XXXXX XXXXXX XXX-XXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},
partial:{vsc:"X ;XX ;XXX ;XXXX ;XXXXX ;XXXXXX ".split(";"),emergency:"XXX ",iddPrefix:["X","XX ","XXX "],countryCode:["X ","XX ","XXX "],cic:"X;XX;XX-X;XX-XX;XX-XX-X;XX-XX-XX;XX-XX-XXX ".split(";"),trunkAccess:"X ",areaCode:["(X)","(XX)","(XXX) "],serviceCode:["(X)","(XX)","(XXX) "],subscriberNumber:"X XX XXX XXX-X XXX-XX XXX-XXX XXX-XXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")}},dashes:{example:"1-650-555-1234",whole:{vsc:"X ;XX ;XXX ;XXXX ;XXXXX ;XXXXXX ".split(";"),
emergency:"XXX ",iddPrefix:["X","XX","XXX-"],countryCode:["X-","XX-","XXX-"],cic:"X XX XX-X XX-XX XX-XX-X XX-XX-XX XX-XX-XXX-".split(" "),trunkAccess:"X-",areaCode:["X","XX","XXX-"],serviceCode:["X","XX","XXX-"],subscriberNumber:"X XX XXX XXXX XXXXX XXXXXX XXX-XXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},partial:{vsc:"X ;XX ;XXX ;XXXX ;XXXXX ;XXXXXX ".split(";"),emergency:"XXX ",iddPrefix:["X","XX","XXX-"],countryCode:["X-","XX-","XXX-"],cic:"X XX XX-X XX-XX XX-XX-X XX-XX-XX XX-XX-XXX-".split(" "),
trunkAccess:"X-",areaCode:["X","XX","XXX-"],serviceCode:["X","XX","XXX-"],subscriberNumber:"X XX XXX XXX-X XXX-XX XXX-XXX XXX-XXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")}},dots:{example:"1.650.555.1234",whole:{vsc:"X ;XX ;XXX ;XXXX ;XXXXX ;XXXXXX ".split(";"),emergency:"XXX ",iddPrefix:["X","XX","XXX."],countryCode:["X.","XX.","XXX."],cic:"X XX XX.X XX.XX XX.XX.X XX.XX.XX XX.XX.XXX.".split(" "),trunkAccess:"X.",areaCode:["X","XX","XXX."],serviceCode:["X","XX",
"XXX."],subscriberNumber:"X XX XXX XXXX XXXXX XXXXXX XXX.XXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},partial:{vsc:"X ;XX ;XXX ;XXXX ;XXXXX ;XXXXXX ".split(";"),emergency:"XXX ",iddPrefix:["X","XX","XXX."],countryCode:["X.","XX.","XXX."],cic:"X XX XX.X XX.XX XX.XX.X XX.XX.XX XX.XX.XXX.".split(" "),trunkAccess:"X.",areaCode:["X","XX","XXX."],serviceCode:["X","XX","XXX."],subscriberNumber:"X XX XXX XXX.X XXX.XX XXX.XXX XXX.XXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")}}};
ilib.data.phonefmt_DE={international:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX","XXXX ","XXXXX "],emergency:["X","XX","XXX ","XXXX ","XXXXX "],trunkAccess:"X",mobilePrefix:"XXX ",areaCode:["X ","XX ","XXX ","XXXX ","XXXXX "],serviceCode:["X ","XX ","XXX ","XXXX ","XXXXX "],subscriberNumber:"X;XX;XXX;XXXX;XXXXX;XXX XXX;XXX XXXX;XXXX XXXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},mobile:{iddPrefix:["X","XX "],countryCode:["X ","XX ",
"XXX "],cic:["X","XX","XXX","XXXX ","XXXXX "],emergency:["X","XX","XXX ","XXXX ","XXXXX "],trunkAccess:"X",mobilePrefix:"XXX ",areaCode:["X ","XX ","XXX ","XXXX ","XXXXX "],serviceCode:["X ","XX ","XXX ","XXXX ","XXXXX "],subscriberNumber:"X;XX;XXX;XXXX;XXXXX;XXX XXX;XXX XXXX;XXXX XXXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},internationalmobile:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX","XXXX ","XXXXX "],emergency:["X","XX","XXX ",
"XXXX ","XXXXX "],trunkAccess:"X",mobilePrefix:"XXX ",areaCode:["X ","XX ","XXX ","XXXX ","XXXXX "],serviceCode:["X ","XX ","XXX ","XXXX ","XXXXX "],subscriberNumber:"X;XX;XXX;XXX X;XXX XX;XXX XX X;XXX XX XX;XXXX XXXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},"default":{example:"030 12 34 56 78",partial:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX","XXXX ","XXXXX "],emergency:["X","XX","XXX ","XXXX ","XXXXX "],trunkAccess:"X",mobilePrefix:"XXX ",
areaCode:["X ","XX ","XXX ","XXXX ","XXXXX "],serviceCode:["X ","XX ","XXX ","XXXX ","XXXXX "],subscriberNumber:"X;XX;XX X;XX XX;XX XX X;XX XX XX;XX XX XX X;XX XX XX XX".split(";"),extension:["-X","-XX","-XX X","-XX XX","-X XX XX"]},whole:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX","XXXX ","XXXXX "],emergency:["X","XX","XXX ","XXXX ","XXXXX "],trunkAccess:"X",mobilePrefix:"XXX ",areaCode:["X ","XX ","XXX ","XXXX ","XXXXX "],serviceCode:["X ","XX ","XXX ","XXXX ","XXXXX "],
subscriberNumber:"X;XX;XXX;XXXX;XXXXX;XX XX XX;XXX XX XX;XX XX XX XX".split(";"),extension:["-X","-XX","-XX X","-XX XX","-X XX XX"]}},alten:{example:"030/1234 5678",iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX","XX XX ","XXX XX "],emergency:["X","XX","XXX ","XXXX ","XXXXX "],trunkAccess:"X",mobilePrefix:"XXX ",areaCode:["X/","XX/","XXX/","XXXX/","XXXXX/"],serviceCode:["X/","XX/","XXX/","XXXX/","XXXXX "],subscriberNumber:"X;XX;X XX;XX XX;X XX XX;XX XX XX;X XX XX XX;XX XX XX XX".split(";"),
extension:["-X","-XX","-XX X","-XX XX","-X XX XX"]},Microsoft:{example:"(030) 1234 5678",iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX","XXXX ","XXXXX "],emergency:["X","XX","XXX ","XXXX ","XXXXX "],trunkAccess:"(X",mobilePrefix:"XXX ",areaCode:["X) ","XX) ","XXX) ","XXXX) ","XXXXX) "],serviceCode:["X) ","XX) ","XXX) ","XXXX) ","XXXXX) "],subscriberNumber:"X;XX;XXX;XXXX;XXXXX;XXX XXX;XXX XXXX;XXXX XXXX".split(";"),extension:["-X","-XX","-XXX","-XXXX","-XXXXX"]},minimalistischen:{example:"030 12345678",
iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX","XXXX ","XXXXX "],emergency:["X","XX","XXX ","XXXX ","XXXXX "],trunkAccess:"X",mobilePrefix:"XXX ",areaCode:["X ","XX ","XXX ","XXXX ","XXXXX "],serviceCode:["X ","XX ","XXX ","XXXX ","XXXXX "],subscriberNumber:"X XX XXX XXXX XXXXX XXXXXX XXXXXXX XXXXXXXX".split(" "),extension:["-X","-XX","-XXX","-XXXX","-XXXXX"]},alternitive:{example:"030 1234 5678",iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX",
"XXXX ","XXXXX "],emergency:["X","XX","XXX ","XXXX ","XXXXX "],trunkAccess:"X",mobilePrefix:"XXX ",areaCode:["X ","XX ","XXX ","XXXX ","XXXXX "],serviceCode:["X ","XX ","XXX ","XXXX ","XXXXX "],subscriberNumber:"X;XX;XXX;XXXX;XXXXX;XXX XXX;XXX XXXX;XXXX XXXX".split(";"),extension:["-X","-XX","-XXX","-XXXX","-XXXXX"]}};
ilib.data.phonefmt_FR={international:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],trunkAccess:"",mobilePrefix:"X ",areaCode:"X ",serviceCode:["X ","XX ","XXX ","XXXX "],subscriberNumber:"X;XX;XX X;XX XX;XX XX X;XX XX XX;XX XX XX X;XX XX XX XX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},mobile:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],trunkAccess:"X",mobilePrefix:"X ",areaCode:"X ",serviceCode:["X ","XX ","XXX ","XXXX "],subscriberNumber:"X;XX;XX X;XX XX;XX XX X;XX XX XX;XX XX XX X;XX XX XX XX".split(";"),
extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},internationalmobile:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],trunkAccess:"",mobilePrefix:"X ",areaCode:"X ",serviceCode:["X ","XX ","XXX ","XXXX "],subscriberNumber:"X;XX;XX X;XX XX;XX XX X;XX XX XX;XX XX XX X;XX XX XX XX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},service:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],trunkAccess:"X",mobilePrefix:"X ",areaCode:"X ",serviceCode:["X ",
"XX ","XXX ","XXXX "],subscriberNumber:"X;XX;XXX;XXX X;XXX XX;XXX XXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},"default":{example:"01 12 34 56 78",whole:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],trunkAccess:"X",mobilePrefix:"X ",areaCode:"X ",serviceCode:["X ","XX ","XXX ","XXXX "],subscriberNumber:"X;XX;XXX;XXXX;XXXXX;XX XX XX;XX XX XX X;XX XX XX XX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},partial:{iddPrefix:["X",
"XX "],countryCode:["X ","XX ","XXX "],trunkAccess:"X",mobilePrefix:"X ",areaCode:"X ",serviceCode:["X ","XX ","XXX ","XXXX "],subscriberNumber:"X;XX;XX X;XX XX;XX XX X;XX XX XX;XX XX XX X;XX XX XX XX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")}},"parenth\u00e8ses":{example:"(0)1 12 34 56 78",whole:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],trunkAccess:"(X)",mobilePrefix:"X ",areaCode:"X ",serviceCode:["X ","XX ","XXX ","XXXX "],subscriberNumber:"X;XX;XXX;XXXX;XXXXX;XX XX XX;XX XX XX X;XX XX XX XX".split(";"),
extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},partial:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],trunkAccess:"(X)",mobilePrefix:"X ",areaCode:"X ",serviceCode:["X ","XX ","XXX ","XXXX "],subscriberNumber:"X;XX;XX X;XX XX;XX XX X;XX XX XX;XX XX XX X;XX XX XX XX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")}},"comprim\u00e9":{example:"01 12345678",iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],trunkAccess:"X",mobilePrefix:"X ",areaCode:"X ",
serviceCode:["X ","XX ","XXX ","XXXX "],subscriberNumber:"X XX XXX XXXX XXXXX XXXXXX XXXXXXX XXXXXXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},"p\u00e9riodes":{example:"01.12.34.56.78",whole:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],trunkAccess:"X",mobilePrefix:"X.",areaCode:"X.",serviceCode:["X.","XX.","XXX.","XXXX."],subscriberNumber:"X XX XXX XXXX XXXXX XX.XX.XX XX.XX.XX.X XX.XX.XX.XX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},
partial:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],trunkAccess:"X",mobilePrefix:"X.",areaCode:"X.",serviceCode:["X.","XX.","XXX.","XXXX."],subscriberNumber:"X XX XX.X XX.XX XX.XX.X XX.XX.XX XX.XX.XX.X XX.XX.XX.XX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")}}};
ilib.data.phonefmt_ES={international:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX ","XXXX "],emergency:"XXX ",areaCode:["X","XX ","XXX "],mobilePrefix:["X","XX ","XXX "],serviceCode:["X","XX","XXX ","XXXX "],subscriberNumber:"X;XX;XXX;XXX X;XXX XX;XXX XXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},mobile:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX ","XXXX "],emergency:"XXX ",areaCode:["X","XX ","XXX "],mobilePrefix:["X",
"XX ","XXX "],serviceCode:["X","XX","XXX ","XXXX "],subscriberNumber:"X;XX;XXX;XXX X;XXX XX;XXX XXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},internationalmobile:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX ","XXXX "],emergency:"XXX ",areaCode:["X","XX ","XXX "],mobilePrefix:["X","XX ","XXX "],serviceCode:["X","XX","XXX ","XXXX "],subscriberNumber:"X;XX;XXX;XXX X;XXX XX;XXX XXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},
"default":{example:"912 123 456",whole:{trunkAccess:"X",iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX","XXXX "],emergency:"XXX ",areaCode:["X","XX ","XXX "],serviceCode:["X","XX ","XXX ","XXXX "],subscriberNumber:"X;XX;XXX;XXX X;XXX XX;XXX XXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},partial:{trunkAccess:"X",iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX","XXXX "],emergency:"XXX ",areaCode:["X","XX ","XXX "],
serviceCode:["X","XX ","XXX ","XXXX "],subscriberNumber:"X;XX;XXX;XXX X;XXX XX;XXX XXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")}},dobles:{example:"912 12 34 56",trunkAccess:"X",iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX","XXXX "],emergency:"XXX ",areaCode:["X","XX ","XXX "],serviceCode:["X","XX ","XXX ","XXXX "],subscriberNumber:"X;XX;XX X;XX XX;XX XX X;XX XX XX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},
viejo:{example:"91 212 34 56",trunkAccess:"X",iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX","XXXX "],emergency:"XXX ",areaCode:["X","XX ","XX X"],serviceCode:["X","XX ","XXX ","XXXX "],subscriberNumber:"X;XX;XX X;XX XX;XX XX X;XX XX XX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},compacto:{example:"912 123456",trunkAccess:"X",iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX","XXXX "],emergency:"XXX ",areaCode:["X",
"XX ","XXX "],serviceCode:["X","XX ","XXX ","XXXX "],subscriberNumber:"X XX XXX XXXX XXXXX XXXXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")}};
ilib.data.phonefmt_MX={international:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],trunkAccess:["",""],mobilePrefix:["1 ","1 ","1 "],areaCode:["X","XX ","XXX "],serviceCode:["X","XX ","XXX "],subscriberNumber:"X;XX;XXX;XXX X;XXX XX;XXX XXX;XXX XXXX;XXXX XXXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},mobile:{iddPrefix:["X","XX-"],countryCode:["X-","XX-","XXX-"],trunkAccess:["X-","XX-"],mobilePrefix:["X-","XX-","XXX-"],areaCode:["X","XX-","XXX-"],serviceCode:["X",
"XX-","XXX-"],subscriberNumber:"X XX XXX XXX-X XXX-XX XXX-XXX XXX-XXXX XXXX-XXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},internationalmobile:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],trunkAccess:["",""],mobilePrefix:["1 ","1 ","1 "],areaCode:["X","XX ","XXX "],serviceCode:["X","XX ","XXX "],subscriberNumber:"X;XX;XXX;XXX X;XXX XX;XXX XXX;XXX XXXX;XXXX XXXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},"default":{example:"55-1234-5678",
whole:{iddPrefix:["X","XX-"],countryCode:["X-","XX-","XXX-"],trunkAccess:["X","XX-"],areaCode:["X-","XX-","XXX-"],serviceCode:["X-","XX-","XXX-"],subscriberNumber:"X XX XXX XXXX XXXXX XXXXXX XXX-XXXX XXXX-XXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},partial:{iddPrefix:["X","XX-"],countryCode:["X-","XX-","XXX-"],trunkAccess:["X","XX-"],areaCode:["X-","XX-","XXX-"],serviceCode:["X-","XX-","XXX-"],subscriberNumber:"X XX XXX XXX-X XXX-XX XXX-XXX XXX-XXXX XXXX-XXXX".split(" "),
extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")}},"par\u00e9ntesis":{example:"(55) 1234-5678",iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],trunkAccess:["X","XX "],areaCode:["(X) ","(XX) ","(XXX) "],serviceCode:["X ","XX ","XXX "],subscriberNumber:"X XX XXX XXX-X XXX-XX XXX-XXX XXX-XXXX XXXX-XXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},espacios:{example:"55 12 34 56 78",iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],trunkAccess:["X",
"XX "],areaCode:["X","XX ","XXX "],serviceCode:["X ","XX ","XXX "],subscriberNumber:"X;XX;XXX;XXX X;XXX XX;XXX XX X;XXX XX XX;XX XX XX XX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},barras:{example:"55/1234-5678",iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],trunkAccess:["X","XX "],areaCode:["X/","XX/","XXX/"],serviceCode:["X/","XX/","XXX/"],subscriberNumber:"X XX XXX XXX-X XXX-XX XXX-XXX XXX-XXXX XXXX-XXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},
comprimido:{example:"55 12345678",iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],trunkAccess:["X","XX "],areaCode:["X","XX ","XXX "],serviceCode:["X ","XX ","XXX "],subscriberNumber:"X XX XXX XXXX XXXXX XXXXXX XXXXXXX XXXXXXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")}};
ilib.data.phonefmt_IT={international:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],trunkAccess:"X",emergency:"XXX ",mobilePrefix:["X ","XX ","XXX "],areaCode:["X ","XX ","XXX "],serviceCode:["X ","XX ","XXX "],subscriberNumber:"X XX XXX XXXX XXXXX XXXXXX XXXXXXX XXXXXXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},mobile:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],trunkAccess:"X ",emergency:"XXX ",mobilePrefix:["X ","XX ","XXX "],areaCode:["X ",
"XX ","XXX "],serviceCode:["X ","XX ","XXX "],subscriberNumber:"X XX XXX XXXX XXXXX XXXXXX XXXXXXX XXXXXXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},internationalmobile:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],trunkAccess:"X ",emergency:"XXX ",mobilePrefix:["X ","XX ","XXX "],areaCode:["X ","XX ","XXX "],serviceCode:["X ","XX ","XXX "],subscriberNumber:"X XX XXX XXXX XXXXX XXXXXX XXXXXXX XXXXXXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},
"default":{example:"06 12345678",iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],trunkAccess:"X",emergency:"XXX ",areaCode:["X ","XX ","XXX "],serviceCode:["X ","XX ","XXX "],subscriberNumber:"X XX XXX XXXX XXXXX XXXXXX XXXXXXX XXXXXXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},trattini:{example:"06-12345678",iddPrefix:["X","XX "],countryCode:["X-","XX-","XXX-"],trunkAccess:"X",emergency:"XXX ",areaCode:["X-","XX-","XXX-"],serviceCode:["X-","XX-","XXX-"],
subscriberNumber:"X XX XXX XXXX XXXXX XXXXXX XXXXXXX XXXXXXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},slash:{example:"06/12345678",iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],trunkAccess:"X",emergency:"XXX ",areaCode:["X/","XX/","XXX/"],serviceCode:["X/","XX/","XXX/"],subscriberNumber:"X XX XXX XXXX XXXXX XXXXXX XXXXXXX XXXXXXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")}};
ilib.data.phonefmt_JP={international:{iddPrefix:["X","XX ","XXX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX","XXXX ","XXXXX "],emergency:["X","XX","XXX ","XXXX ","XXXXX "],mobilePrefix:["X-","XX-"],areaCode:["X ","XX ","XXX ","XXXX ","XXXXX "],serviceCode:["X ","XX ","XXX ","XXXX "],subscriberNumber:"X;XX;XXX;XXXX;XXXXX;XXX XXX;XXX XXXX;XXXX XXXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},mobile:{iddPrefix:["X","XX","XXX-"],countryCode:["X ","XX ","XXX "],
cic:["X","XX","XXX","XXXX ","XXXXX "],emergency:["X","XX","XXX ","XXXX ","XXXXX "],trunkAccess:"X",mobilePrefix:["X-","XX-"],subscriberNumber:"X XX XXX XXXX XXX-XX XXX-XXX XXX-XXXX XXXX-XXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},internationalmobile:{iddPrefix:["X","XX ","XXX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX","XXXX ","XXXXX "],emergency:["X","XX","XXX ","XXXX ","XXXXX "],mobilePrefix:["X ","XX "],areaCode:["X ","XX ","XXX ","XXXX ","XXXXX "],
serviceCode:["X ","XX ","XXX ","XXXX "],subscriberNumber:"X;XX;XXX;XXX X;XXX XX;XXX XXX;XXX XXXX;XXXX XXXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},"default":{example:"033-1234-5678",partial:{iddPrefix:["X","XX-","XXX-"],countryCode:["X ","XX ","XXX "],cic:["X","XX-","XXX-","XXXX-"],emergency:["X","XX","XXX ","XXXX ","XXXXX "],trunkAccess:"X",mobilePrefix:"XX-",areaCode:["X-","XX-","XXX-","XXXX-","XXXXX-"],serviceCode:["X","XX-","XXX-","XXXX-"],subscriberNumber:"X XX XXX XXX-X XXX-XX XXX-XXX XXX-XXXX XXXX-XXXX".split(" "),
extension:["-X","-XX","-XXX","-XXXX","-XXXXX"]},whole:{iddPrefix:["X","XX-","XXX-"],countryCode:["X ","XX ","XXX "],cic:["X","XX-","XXX-","XXXX-"],emergency:["X","XX","XXX ","XXXX ","XXXXX "],trunkAccess:"X",mobilePrefix:"XX-",areaCode:["X-","XX-","XXX-","XXX-","XXXXX-"],serviceCode:["X","XX-","XXX-","XXXX-"],subscriberNumber:"X XX XXX XXXX XX-XXX XX-XXXX XXX-XXXX XXXX-XXXX".split(" "),extension:["-X","-XX","-XXX","-XXXX","-XXXXX"]}},"\u304b\u3063\u3053":{example:"(0568) 1234-5678",iddPrefix:["X",
"XX ","XXX "],countryCode:["X ","XX ","XXX "],emergency:["X","XX","XXX ","XXXX ","XXXXX "],trunkAccess:"(X",mobilePrefix:"XX)",areaCode:["X) ","XX) ","XXX) ","XXXX) ","XXXXX) "],serviceCode:["X) ","XX) "],cic:["X) ","XX) ","XXX) ","XXXX) "],subscriberNumber:"X XX XXX XXX-X XX-XXX XX-XXXX XXX-XXXX XXXX-XXXX".split(" "),extension:["-X","-XX","-XXX","-XXXX","-XXXXX"]}};
ilib.data.phonefmt_KR={international:{iddPrefix:["X","XX ","XXX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX","XXXX ","XXXXX "],emergency:["X","XX","XXX","XXXX"],mobilePrefix:["X ","XX "],areaCode:["X ","XX "],serviceCode:["X","XX"],subscriberNumber:"X;XX;XXX;XXX X;XXX XX;XXX XXX;XXX XXXX;XXXX XXXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX".split(";")},mobile:{iddPrefix:["X","XX ","XXX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX","XXXX ","XXXXX "],emergency:["X","XX",
"XXX","XXXX"],trunkAccess:"X",mobilePrefix:{template:["X","XX"],suffix:"-"},subscriberNumber:"X XX XXX XXXX XXX-XX XXX-XXX XXX-XXXX XXXX-XXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX".split(";")},internationalmobile:{iddPrefix:["X","XX ","XXX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX","XXXX ","XXXXX "],emergency:["X","XX","XXX ","XXXX "],mobilePrefix:["X ","XX "],areaCode:["X ","XX "],serviceCode:["X ","XX ","XXX ","XXXX "],subscriberNumber:"X;XX;XXX;XXX X;XXX XX;XXX XXX;XXX XXXX;XXXX XXXX".split(";"),
extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX".split(";")},"default":{example:"033-1234-5678",partial:{iddPrefix:{template:["X","XX","XXX"],suffix:"-"},countryCode:["X ","XX ","XXX "],cic:{template:["X","XX","XXX","XXXX"],suffix:"-"},emergency:["X","XX","XXX","XXXX"],trunkAccess:"X",mobilePrefix:{template:["X","XX"],suffix:"-"},areaCode:{template:["X","XX"],suffix:"-"},serviceCode:{template:["X","XX"],suffix:"-"},subscriberNumber:{template:"X XX XXX XXX-X XXX-XX XXX-XXX XXX-XXXX XXXX-XXXX XXXX-XXXXX XXXX-XXXXXX XXXX-XXXXXXX XXXX-XXXXXXXX XXXX-XXXXXXXXX XXXX-XXXXXXXXXX XXXX-XXXXXXXXXXX".split(" "),
suffix:"-"},extension:"X XX XXX XXXX XXXXX XXXXXX".split(" ")},whole:{iddPrefix:{template:["X","XX","XXX"],suffix:"-"},countryCode:["X ","XX ","XXX "],cic:{template:["X","XX","XXX","XXXX"],suffix:"-"},emergency:["X","XX","XXX","XXXX"],trunkAccess:"X",mobilePrefix:{template:["X","XX"],suffix:"-"},areaCode:{template:["X","XX"],suffix:"-"},serviceCode:{template:["X","XX"],suffix:"-"},subscriberNumber:{template:"X XX XXX XXX-X XXX-XX XXX-XXX XXX-XXXX XXXX-XXXX XXXX-XXXXX XXXX-XXXXXX XXXX-XXXXXXX XXXX-XXXXXXXX XXXX-XXXXXXXXX XXXX-XXXXXXXXXX XXXX-XXXXXXXXXXX".split(" "),
suffix:"-"},extension:"X XX XXX XXXX XXXXX XXXXXX".split(" ")}},"\uad04\ud638":{example:"(033) 1234-5678",iddPrefix:["X","XX ","XXX "],countryCode:["X ","XX ","XXX "],emergency:["X","XX","XXX","XXXX"],trunkAccess:"(X",mobilePrefix:"XX)",areaCode:["X) ","XX) "],serviceCode:["X) ","XX) "],cic:["X) ","XX) ","XXX) ","XXXX) "],subscriberNumber:"X XX XXX XXX-X XXX-XX XXX-XXX XXX-XXXX XXXX-XXXX XXXX-XXXXX XXXX-XXXXXX XXXX-XXXXXXX XXXX-XXXXXXXX XXXX-XXXXXXXXX XXXX-XXXXXXXXXX XXXX-XXXXXXXXXXX".split(" "),
extension:"-X -XX -XXX -XXXX -XXXXX -XXXXXX".split(" ")},"\uc810":{example:"033.1234.5678",iddPrefix:{template:["X","XX","XXX"],suffix:"."},countryCode:["X ","XX ","XXX "],emergency:["X","XX","XXX","XXXX"],trunkAccess:"X",mobilePrefix:{template:["X","XX"],suffix:"."},areaCode:{template:["X","XX"],suffix:"."},serviceCode:{template:["X","XX"],suffix:"."},cic:{template:["X","XX","XXX","XXXX"],suffix:"."},subscriberNumber:{template:"X XX XXX XXX.X XXX.XX XXX.XXX XXX.XXXX XXXX.XXXX XXXX.XXXXX XXXX.XXXXXX XXXX.XXXXXXX XXXX.XXXXXXXX XXXX.XXXXXXXXX XXXX.XXXXXXXXXX XXXX.XXXXXXXXXXX".split(" "),
suffix:"."},extension:"X XX XXX XXXX XXXXX XXXXXX".split(" ")},"\uacf5\uac04":{example:"033 1234 5678",iddPrefix:["X","XX ","XXX "],countryCode:["X ","XX ","XXX "],emergency:["X","XX","XXX","XXXX"],trunkAccess:"X",mobilePrefix:"XX ",areaCode:["X ","XX "],serviceCode:["X ","XX "],cic:["X ","XX ","XXX ","XXXX "],subscriberNumber:{template:"X;XX;XXX;XXX X;XXX XX;XXX XXX;XXX XXXX;XXXX XXXX;XXXX XXXXX;XXXX XXXXXX;XXXX XXXXXXX;XXXX XXXXXXXX;XXXX XXXXXXXXX;XXXX XXXXXXXXXX;XXXX XXXXXXXXXXX".split(";"),suffix:" "},
extension:"X XX XXX XXXX XXXXX XXXXXX".split(" ")}};
ilib.data.phonefmt_BR={international:{iddPrefix:["X","XX ","XX X ","XX XX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX","XXXX ","XXXXX "],emergency:["X","XX","XXX ","XXXX ","XXXXX "],mobilePrefix:["X-","XX-"],areaCode:["X ","XX "],serviceCode:["X ","XX ","XXX ","XXXX "],subscriberNumber:"X XX XXX XXXX XXXXX XXX-XXX XXX-XXXX XXXX-XXXX XXXXX-XXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},mobile:{iddPrefix:["X","XX","XXX-"],countryCode:["X ","XX ","XXX "],
cic:["X","XX","XXX","XXXX ","XXXXX "],emergency:["X","XX","XXX ","XXXX ","XXXXX "],trunkAccess:"X",mobilePrefix:["X"],subscriberNumber:"X XX XXX XXXX- XXXX-X XXXX-XX XXXX-XXX XXXX-XXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},internationalmobile:{iddPrefix:["X","XX ","XX X","XX XX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX","XXXX ","XXXXX "],emergency:["X","XX","XXX ","XXXX ","XXXXX "],mobilePrefix:["X ","XX "],areaCode:["X ","XX ","XXX ","XXXX ","XXXXX "],
serviceCode:["X ","XX ","XXX ","XXXX "],subscriberNumber:"X;XX;XXX;XXX X;XXX XX;XXX XXX;XXX XXXX;XXXX XXXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},"default":{example:"0 21 11 2345-6789",partial:{iddPrefix:["X","XX-","XXX-"],countryCode:["X ","XX ","XXX "],cic:["X ","X X","X XX "],emergency:["X","XX","XXX"],trunkAccess:"X",mobilePrefix:"X",areaCode:["X","XX "],serviceCode:["X","XX","XXX","XXXX-"],subscriberNumber:"X XX XXX XXX-X XXX-XX XXX-XXX XXX-XXXX XXXX-XXXX".split(" "),
extension:["-X","-XX","-XXX","-XXXX","-XXXXX"]},whole:{iddPrefix:["X","XX-","XXX-"],countryCode:["X ","XX ","XXX "],cic:["X ","X X ","X XX "],emergency:["X","XX","XXX"],trunkAccess:"X",mobilePrefix:"X",areaCode:["X","XX "],serviceCode:["X","XX ","XXX ","XXXX-"],subscriberNumber:"X XX XXX XXXX XX-XXX XXX-XXX XXX-XXXX XXXX-XXXX XXXX-XXXX".split(" "),extension:["-X","-XX","-XXX","-XXXX","-XXXXX"]}}};
ilib.data.phonefmt_RU={international:{iddPrefix:["X","XX ","XXX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX","XXXX ","XXXXX "],emergency:["X","XX","XXX ","XXXX ","XXXXX "],mobilePrefix:["X-","XX-","XXX-"],areaCode:["X ","XX ","XXX "],serviceCode:["X ","XX ","XXX ","XXXX "],subscriberNumber:"X XX XXX XXX-X X-XX-XX XX-XX-XX XXX-XX-XX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},mobile:{iddPrefix:["X","XX","XXX-"],countryCode:["X ","XX ","XXX "],cic:["X","XX",
"XXX","XXXX ","XXXXX "],emergency:["X","XX","XXX ","XXXX ","XXXXX "],trunkAccess:"X-",mobilePrefix:["X","XX","XXX"],subscriberNumber:"X XX XX-X XX-XX XX-XXX XX-XXX-X XX-XXX-XX XX-XXX-XXX XX-XXX-XXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},internationalmobile:{iddPrefix:["X","XX","XXX"],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX","XXXX ","XXXXX "],emergency:["X","XX","XXX ","XXXX ","XXXXX "],mobilePrefix:["X","XX","XXX"],areaCode:["X ","XX "],serviceCode:["X ",
"XX ","XXX ","XXXX "],subscriberNumber:"X XX XX-X XX-XX XX-XXX XX-XXX-X XX-XXX-XX XX-XXX-XXX XX-XXX-XXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},"default":{example:"8 (495) 234-56-78",iddPrefix:["X","XX ","XXX "],countryCode:["X ","XX ","XXX "],emergency:["X","XX","XXX"],trunkAccess:"X ",mobilePrefix:"X",areaCode:["(X) ","(XX) ","(XXX) ","(XXXX) ","(XXXXX) "],serviceCode:["(X) ","(XX) ","(XXX) ","(XXXX) "],cic:["(X) ","(XX) ","(XXX) ","(XXXX) "],subscriberNumber:"X XX XXX XXX-X X-XX-XX XX-XX-XX XXX-XX-XX".split(" "),
extension:["-X","-XX","-XXX","-XXXX","-XXXXX"]},"\u0442\u043e\u0447\u043a\u0430":{example:"8.812.234-56-78",iddPrefix:["X.","XX.","XXX."],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX","XXXX"],emergency:["X","XX","XXX"],trunkAccess:"X.",mobilePrefix:"X",areaCode:["X.","XX.","XXX.","XXXX.","XXXXX."],serviceCode:["X.","XX.","XXX.","XXXX."],subscriberNumber:"X XX XXX XXX-X X-XX-XX XX-XX-XX XXX-XX-XX".split(" "),extension:["-X","-XX","-XXX","-XXXX","-XXXXX"]}};
ilib.data.phonefmt_CN={international:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],trunkAccess:["X","XX "],emergency:"XXX ",mobilePrefix:["X ","XX ","XXX ","XXXX "],areaCode:["X ","XX ","XXX ","XXXX "],serviceCode:["X ","XX ","XXX "],subscriberNumber:"X XX XXX XXXX XXXXX XXXXXX XXXXXXX XXXXXXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},mobile:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],trunkAccess:["X","XX "],emergency:"XXX ",mobilePrefix:["X ",
"XX ","XXX ","XXXX "],areaCode:["X ","XX ","XXX ","XXXX "],serviceCode:["X ","XX ","XXX "],subscriberNumber:"X XX XXX XXXX XXXXX XXXXXX XXXXXXX XXXXXXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},internationalmobile:{iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],trunkAccess:["X","XX "],emergency:"XXX ",mobilePrefix:["X ","XX ","XXX ","XXXX "],areaCode:["X ","XX ","XXX ","XXXX "],serviceCode:["X ","XX ","XXX "],subscriberNumber:"X XX XXX XXXX XXXXX XXXXXX XXXXXXX XXXXXXXX".split(" "),
extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},"default":{example:"010 12345678",iddPrefix:["X","XX "],countryCode:["X ","XX ","XXX "],emergency:"XXX ",trunkAccess:["X","XX "],areaCode:["X ","XX ","XXX ","XXXX "],serviceCode:["X ","XX ","XXX "],mobilePrefix:["X ","XX ","XXX ","XXXX "],subscriberNumber:"X XX XXX XXXX XXXXX XXXXXX XXXXXXX XXXXXXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},"\u7834\u6298\u53f7":{example:"010-12345678",iddPrefix:["X",
"XX-"],countryCode:["X-","XX-","XXX-"],emergency:"XXX ",trunkAccess:["X","XX-"],areaCode:["X-","XX-","XXX-","XXXX-"],serviceCode:["X-","XX-","XXX-"],mobilePrefix:["X-","XX-","XXX-","XXXX-"],subscriberNumber:"X XX XXX XXXX XXXXX XXXXXX XXXXXXX XXXXXXXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")}};
ilib.data.phonefmt_HK={international:{iddPrefix:["X","XX ","XXX "],emergency:"XXX ",countryCode:["X ","XX ","XXX "],mobilePrefix:"X",serviceCode:"X",subscriberNumber:"X;XX;XXX;XXXX;XXXX X;XXXX XX;XXXX XXX;XXXX XXXX".split(";")},mobile:{iddPrefix:["X","XX ","XXX "],countryCode:["X ","XX ","XXX "],trunkAccess:"",emergency:"XXX ",mobilePrefix:"X",serviceCode:"X",subscriberNumber:"X;XX;XXX;XXX X;XXX XX;XXX XXX;XXX XXXX;XXXX XXXX".split(";")},service:{iddPrefix:["X","XX ","XXX "],trunkAccess:"",emergency:"XXX ",
countryCode:["X ","XX ","XXX "],serviceCode:"X",subscriberNumber:"X;XX;XXX;XXXX;XXXXX;XXX XXX;XXX XXXX;XXXX XXXX".split(";")},internationalmobile:{iddPrefix:["X","XX ","XXX "],countryCode:["X ","XX ","XXX "],trunkAccess:"",emergency:"XXX ",mobilePrefix:"X",serviceCode:"X",subscriberNumber:"X;XX;XXX;XXX X;XXX XX;XXX XXX;XXX XXXX;XXXX XXXX".split(";")},"default":{example:"2123 4567",whole:{iddPrefix:["X","XX ","XXX "],trunkAccess:"",emergency:"XXX ",mobilePrefix:"X",countryCode:["X ","XX ","XXX "],
serviceCode:"X",subscriberNumber:"X;XX;XXX;XXXX;XXXXX;XXX XXX;XXX XXXX;XXXX XXXX".split(";")},partial:{iddPrefix:["X","XX ","XXX "],trunkAccess:"",emergency:"XXX ",mobilePrefix:"X",countryCode:["X ","XX ","XXX "],serviceCode:"X",subscriberNumber:"X;XX;XXX;XXXX;XXXX X;XXXX XX;XXXX XXX;XXXX XXXX".split(";")}}};
ilib.data.phonefmt_TW={international:{iddPrefix:["X","XX ","XXX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX","XXXX ","XXXXX "],emergency:["X","XX","XXX ","XXXX ","XXXXX "],mobilePrefix:["X-","XX-"],areaCode:["X ","XX ","XXX ","XXXX ","XXXXX "],serviceCode:["X ","XX ","XXX ","XXXX "],subscriberNumber:"X;XX;XXX;XXXX;XXXXX;XXX XXX;XXX XXXX;XXXX XXXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},mobile:{iddPrefix:["X","XX","XXX-"],countryCode:["X ","XX ","XXX "],
cic:["X","XX","XXX","XXXX ","XXXXX "],emergency:["X","XX","XXX ","XXXX ","XXXXX "],trunkAccess:"X",mobilePrefix:["X","XX"],subscriberNumber:"X XX XX-X XX-XX XX-XXX XX-XXX-X XX-XXX-XX XX-XXX-XXX".split(" "),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},internationalmobile:{iddPrefix:["X","XX ","XXX "],countryCode:["X ","XX ","XXX "],cic:["X","XX","XXX","XXXX ","XXXXX "],emergency:["X","XX","XXX ","XXXX ","XXXXX "],mobilePrefix:["X","XX"],areaCode:["X ","XX ","XXX ","XXXX ","XXXXX "],
serviceCode:["X ","XX ","XXX ","XXXX "],subscriberNumber:"X;XX;XX X;XX XX;XX XXX;XX XXX X;XX XXX XX;XX XXX XXX".split(";"),extension:" X; XX; XXX; XXXX; XXXXX; XXXXXX; XXXXXXX".split(";")},"default":{example:"(039) 606-537 ",partial:{iddPrefix:["X","XX-","XXX-"],countryCode:["X ","XX ","XXX "],cic:["X","XX-","XXX-","XXXX-"],emergency:["X","XX","XXX "],trunkAccess:"(X",mobilePrefix:"X",areaCode:["X) ","XX) ","XXX) ","XXXX) "],serviceCode:["X","XX-","XXX-","XXXX-"],subscriberNumber:"X XX XXX XXX-X XXX-XX XXX-XXX XXX-XXXX XXXX-XXXX".split(" "),
extension:["-X","-XX","-XXX","-XXXX","-XXXXX"]},whole:{iddPrefix:["X","XX-","XXX-"],countryCode:["X ","XX ","XXX "],cic:["X","XX-","XXX-","XXXX-"],emergency:["X","XX","XXX "],trunkAccess:"(X",mobilePrefix:"X",areaCode:["X) ","XX) ","XXX) ","XXXX) "],serviceCode:["X","XX-","XXX-","XXXX-"],subscriberNumber:"X XX XXX XXX-X XXX-XX XXX-XXX XXX-XXXX XXXX-XXXX".split(" "),extension:["-X","-XX","-XXX","-XXXX","-XXXXX"]}},"\u62ec\u865f":{example:"039 606 537 ",iddPrefix:["X","XX ","XXX "],countryCode:["X ",
"XX ","XXX "],emergency:["X","XX","XXX "],trunkAccess:"X",mobilePrefix:"X",areaCode:["X ","XX ","XXX ","XXXX "],serviceCode:["X ","XX ","XXX "],cic:["X ","XX ","XXX ","XXXX  "],subscriberNumber:"X;XX;XXX;XXX X;XXX XX;XXX XXX;XXX XXXX;XXXX XXXX".split(";"),extension:["-X","-XX","-XXX","-XXXX","-XXXXX"]},"\u7834\u6298\u865f":{example:"039-606-537 ",iddPrefix:["X","XX ","XXX "],countryCode:["X ","XX ","XXX "],emergency:["X","XX","XXX "],trunkAccess:"X",mobilePrefix:"X",areaCode:["X-","XX-","XXX-","XXXX-"],
serviceCode:["X-","XX-","XXX-","XXXX-"],cic:["X-","XX-","XXX-","XXXX-"],subscriberNumber:"X XX XXX XXX-X XXX-XX XXX-XXX XXX-XXXX XXXX-XXXX".split(" "),extension:["-X","-XX","-XXX","-XXXX","-XXXXX"]},"\u6c92\u6709\u7a7a\u683c":{example:"(039) 606537 ",iddPrefix:["X","XX ","XXX "],countryCode:["X ","XX ","XXX "],emergency:["X","XX","XXX "],trunkAccess:"(X",mobilePrefix:"X",areaCode:["X) ","XX) ","XXX) ","XXXX) "],serviceCode:["X-","XX-","XXX- ","XXXX- "],cic:["X- ","XX-","XXX-","XXXX-"],subscriberNumber:"X XX XXX XXXX XXXXX XXXXXX XXXXXXX XXXXXXXX".split(" "),
extension:["-X","-XX","-XXX","-XXXX","-XXXXX"]}};
ilib.data.phonefmt_SG={international:{iddPrefix:["X","XX ","XXX "],emergency:"XXX ",countryCode:["X ","XX ","XXX "],serviceCode:["X","XX ","XXX ","XXXX "],subscriberNumber:"X;XX;XXX;XXXX;XXXX X;XXXX XX;XXXX XXX;XXXX XXXX".split(";")},service:{iddPrefix:["X","XX ","XXX "],trunkAccess:"",emergency:"XXX ",countryCode:["X ","XX ","XXX "],serviceCode:["X ","XX ","XXX ","XXXX ","XXXXX "],subscriberNumber:"X;XX;XXX;XXXX;XXXXX;XXX XXX;XXX XXXX;XXXX XXXX".split(";")},"default":{example:"6123 4567",whole:{iddPrefix:["X",
"XX ","XXX "],trunkAccess:"",emergency:"XXX ",countryCode:["X ","XX ","XXX "],serviceCode:["X ","XX ","XXX ","XXXX ","XXXXX "],subscriberNumber:"X;XX;XXX;XXXX;XX XXX;XXX XXX;XXX XXXX;XXXX XXXX".split(";")},partial:{iddPrefix:["X","XX ","XXX "],trunkAccess:"",emergency:"XXX ",countryCode:["X ","XX ","XXX "],serviceCode:["X ","XX ","XXX ","XXXX ","XXXXX "],subscriberNumber:"X;XX;XXX;XXXX;XXXX X;XXXX XX;XXXX XXX;XXXX XXXX".split(";")}}};
ilib.PhoneFmt=function $ilib$PhoneFmt$($options$$){this.sync=true;this.styleName="default";this.loadParams={};var $locale$$=new ilib.Locale;if($options$$){if($options$$.locale)$locale$$=$options$$.locale;if(typeof $options$$.sync!=="undefined")this.sync=$options$$.sync==true;if($options$$.loadParams)this.loadParams=$options$$.loadParams;if($options$$.style)this.style=$options$$.style}new ilib.Locale.PhoneLoc({locale:$locale$$,mcc:$options$$&&$options$$.mcc,countryCode:$options$$&&$options$$.countryCode,
onLoad:ilib.bind(this,function($data$$){this.locale=$data$$;new ilib.NumPlan({locale:this.locale,sync:this.sync,loadParms:this.loadParams,onLoad:ilib.bind(this,function($plan$$){this.plan=$plan$$;ilib.loadData({name:"phonefmt.json",object:ilib.PhoneFmt,locale:this.locale,sync:this.sync,loadParams:ilib.merge(this.loadParams,{returnOne:true}),callback:ilib.bind(this,function($fmtdata$$){this.fmtdata=$fmtdata$$;if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad(this)})})})})})})};
ilib.PhoneFmt.prototype={_substituteDigits:function $ilib$PhoneFmt$$_substituteDigits$($part$$,$formatString$$1_formats$$2_templates$$,$mustUseAll$$){var $formatted$$="",$partIndex$$=0,$i$$;if(!$part$$)return $formatted$$;if(typeof $formatString$$1_formats$$2_templates$$==="object"){$formatString$$1_formats$$2_templates$$=typeof $formatString$$1_formats$$2_templates$$.template!=="undefined"?$formatString$$1_formats$$2_templates$$.template:$formatString$$1_formats$$2_templates$$;if($part$$.length>
$formatString$$1_formats$$2_templates$$.length)throw"part "+$part$$+" is too big. We do not have a format template to format it.";$formatString$$1_formats$$2_templates$$=$formatString$$1_formats$$2_templates$$[$part$$.length-1]}for($i$$=0;$i$$<$formatString$$1_formats$$2_templates$$.length;$i$$++)if($formatString$$1_formats$$2_templates$$.charAt($i$$)==="X"){$formatted$$=$formatted$$+$part$$.charAt($partIndex$$);$partIndex$$++}else $formatted$$=$formatted$$+$formatString$$1_formats$$2_templates$$.charAt($i$$);
if($mustUseAll$$&&$partIndex$$<$part$$.length-1)throw"too many digits in "+$part$$+" for format "+$formatString$$1_formats$$2_templates$$;return $formatted$$},_getStyle:function $ilib$PhoneFmt$$_getStyle$($name$$,$fmtdata$$){return $fmtdata$$[$name$$]||$fmtdata$$["default"]},_doFormat:function $ilib$PhoneFmt$$_doFormat$($number$$,$options$$,$fieldName$$,$isWhole_locale$$14_temp$$7_templates$$,$fmtdata$$0$$,$callback$$){var $sync$$=true,$loadParams$$={},$countryCode$$,$style$$,$formatted$$="";if($options$$){typeof $options$$.sync!==
"undefined"&&($sync$$=$options$$.sync==true);if($options$$.loadParams)$loadParams$$=$options$$.loadParams}$style$$=this.style;$number$$.countryCode?$style$$=$number$$.mobilePrefix?"internationalmobile":"international":$number$$.mobilePrefix!==void 0?$style$$="mobile":$number$$.serviceCode!==void 0&&typeof $fmtdata$$0$$.service!=="undefined"&&($style$$="service");for(var $isWhole_locale$$14_temp$$7_templates$$=!$options$$||!$options$$.partial,$fmtdata$$0$$=this._getStyle($style$$,$fmtdata$$0$$),$fmtdata$$0$$=
($isWhole_locale$$14_temp$$7_templates$$?$fmtdata$$0$$.whole:$fmtdata$$0$$.partial)||$fmtdata$$0$$,$i$$=$fieldName$$;$i$$<ilib.PhoneNumber._fieldOrder.length;$i$$++){$fieldName$$=ilib.PhoneNumber._fieldOrder[$i$$];if($number$$[$fieldName$$]!==void 0)if($fmtdata$$0$$[$fieldName$$]!==void 0){$isWhole_locale$$14_temp$$7_templates$$=$fmtdata$$0$$[$fieldName$$];$fieldName$$==="trunkAccess"&&$number$$.areaCode===void 0&&($number$$.serviceCode===void 0&&$number$$.mobilePrefix===void 0)&&($isWhole_locale$$14_temp$$7_templates$$=
"X");$countryCode$$&&typeof $fmtdata$$0$$[$countryCode$$].suffix!=="undefined"&&$fieldName$$!=="extension"&&$number$$[$fieldName$$].search(/[xwtp,;]/i)<=-1&&($formatted$$=$formatted$$+$fmtdata$$0$$[$countryCode$$].suffix);$countryCode$$=$fieldName$$;$isWhole_locale$$14_temp$$7_templates$$=this._substituteDigits($number$$[$fieldName$$],$isWhole_locale$$14_temp$$7_templates$$,$fieldName$$==="subscriberNumber");$formatted$$=$formatted$$+$isWhole_locale$$14_temp$$7_templates$$;if($fieldName$$==="countryCode"){$countryCode$$=
$number$$.countryCode.replace(/[wWpPtT\+#\*]/g,"");new ilib.Locale.PhoneLoc({locale:this.locale,sync:$sync$$,loadParms:$loadParams$$,countryCode:$countryCode$$,onLoad:ilib.bind(this,function($locale$$){ilib.loadData({name:"phonefmt.json",object:ilib.PhoneFmt,locale:$locale$$,sync:$sync$$,loadParams:ilib.merge($loadParams$$,{returnOne:true}),callback:ilib.bind(this,function($fmtdata$$){var $subfmt$$="";this._doFormat($number$$,$options$$,$i$$+1,$locale$$,$fmtdata$$,function($subformat$$){$subfmt$$=
$subformat$$;typeof $callback$$==="function"&&$callback$$($formatted$$+$subformat$$)});$formatted$$=$formatted$$+$subfmt$$})})})});return $formatted$$}}else $formatted$$=$formatted$$+$number$$[$fieldName$$]}typeof $callback$$==="function"&&$callback$$($formatted$$);return $formatted$$},format:function $ilib$PhoneFmt$$format$($number$$,$options$$){var $formatted$$="",$callback$$;$callback$$=$options$$&&$options$$.onLoad;try{this._doFormat($number$$,$options$$,0,this.locale,this.fmtdata,function($fmt$$){$formatted$$=
$fmt$$;typeof $callback$$==="function"&&$callback$$($fmt$$)})}catch($e$$){if(typeof $e$$==="string"){var $formatted$$="",$field$$;for($field$$ in ilib.PhoneNumber._fieldOrder)if(typeof $field$$==="string"&&typeof ilib.PhoneNumber._fieldOrder[$field$$]==="string"&&$number$$[ilib.PhoneNumber._fieldOrder[$field$$]]!==void 0){$formatted$$=$formatted$$+$number$$[ilib.PhoneNumber._fieldOrder[$field$$]];ilib.PhoneNumber._fieldOrder[$field$$]==="countryCode"&&($formatted$$=$formatted$$+" ")}}else throw $e$$;
typeof $callback$$==="function"&&$callback$$($formatted$$)}return $formatted$$},getAvailableStyles:function $ilib$PhoneFmt$$getAvailableStyles$(){var $ret$$=[],$style$$;if(this.fmtdata)for($style$$ in this.fmtdata)this.fmtdata[$style$$].example&&$ret$$.push($style$$);return $ret$$},getStyleExample:function $ilib$PhoneFmt$$getStyleExample$($style$$){return this.fmtdata[$style$$].example||void 0}};
ilib.data.iddarea={1:{sn:"North America",ln:"North America and the Caribbean Islands"},7:{sn:"Russia",ln:"Russia, Kazakhstan"},20:{sn:"Egypt",ln:"Egypt"},27:{sn:"South Africa",ln:"South Africa"},28:{sn:"Unknown Country",ln:"Unknown Country"},30:{sn:"Greece",ln:"Greece"},31:{sn:"Netherlands",ln:"Netherlands"},32:{sn:"Belgium",ln:"Belgium"},33:{sn:"France",ln:"France"},34:{sn:"Spain",ln:"Spain"},36:{sn:"Hungary",ln:"Hungary"},39:{sn:"Italy",ln:"Italy, Vatican City"},40:{sn:"Romania",ln:"Romania"},41:{sn:"Switzerland",
ln:"Switzerland"},43:{sn:"Austria",ln:"Austria"},44:{sn:"United Kingdom",ln:"United Kingdom, Guernsey, Isle of Man, Jersey"},45:{sn:"Denmark",ln:"Denmark"},46:{sn:"Sweden",ln:"Sweden"},47:{sn:"Norway",ln:"Norway, Svalbard and Jan Mayen"},48:{sn:"Poland",ln:"Poland"},49:{sn:"Germany",ln:"Germany"},51:{sn:"Peru",ln:"Peru"},52:{sn:"Mexico",ln:"Mexico"},53:{sn:"Cuba",ln:"Cuba"},54:{sn:"Argentina",ln:"Argentina"},55:{sn:"Brazil",ln:"Brazil"},56:{sn:"Chile",ln:"Chile"},57:{sn:"Colombia",ln:"Colombia"},
58:{sn:"Venezuela",ln:"Venezuela"},60:{sn:"Malaysia",ln:"Malaysia"},61:{sn:"Australia",ln:"Australia, Christmas Island, Cocos Islands"},62:{sn:"Indonesia",ln:"Indonesia"},63:{sn:"Philippines",ln:"Philippines"},64:{sn:"New Zealand",ln:"New Zealand"},65:{sn:"Singapore",ln:"Republic of Singapore"},66:{sn:"Thailand",ln:"Thailand"},81:{sn:"Japan",ln:"Japan"},82:{sn:"South Korea",ln:"South Korea"},83:{sn:"Unknown Country",ln:"Unknown Country"},84:{sn:"Vietnam",ln:"Vietnam"},86:{sn:"China",ln:"People's Republic of China"},
89:{sn:"Unknown Country",ln:"Unknown Country"},90:{sn:"Turkey",ln:"Turkey, Turkish Republic of Northern Cyprus"},91:{sn:"India",ln:"India"},92:{sn:"Pakistan",ln:"Pakistan"},93:{sn:"Afghanistan",ln:"Afghanistan"},94:{sn:"Sri Lanka",ln:"Sri Lanka"},95:{sn:"Burma",ln:"Burma"},98:{sn:"Iran",ln:"Iran"},210:{sn:"Unknown Country",ln:"Unknown Country"},211:{sn:"South Sudan",ln:"South Sudan"},212:{sn:"Morocco",ln:"Morocco, Western Sahara"},213:{sn:"Algeria",ln:"Algeria"},214:{sn:"Unknown Country",ln:"Unknown Country"},
215:{sn:"Unknown Country",ln:"Unknown Country"},216:{sn:"Tunisia",ln:"Tunisia"},217:{sn:"Unknown Country",ln:"Unknown Country"},218:{sn:"Libya",ln:"Libya"},219:{sn:"Unknown Country",ln:"Unknown Country"},220:{sn:"Gambia",ln:"The Gambia"},221:{sn:"Senegal",ln:"Senegal"},222:{sn:"Mauritania",ln:"Mauritania"},223:{sn:"Mali",ln:"Mali"},224:{sn:"Guinea",ln:"Guinea"},225:{sn:"C\u00f4te d'Ivoire",ln:"C\u00f4te d'Ivoire"},226:{sn:"Burkina Faso",ln:"Burkina Faso"},227:{sn:"Niger",ln:"Niger"},228:{sn:"Togo",
ln:"Togo"},229:{sn:"Benin",ln:"Benin"},230:{sn:"Mauritius",ln:"Mauritius"},231:{sn:"Liberia",ln:"Liberia"},232:{sn:"Sierra Leone",ln:"Sierra Leone"},233:{sn:"Ghana",ln:"Ghana"},234:{sn:"Nigeria",ln:"Nigeria"},235:{sn:"Chad",ln:"Chad"},236:{sn:"Central African Republic",ln:"Central African Republic"},237:{sn:"Cameroon",ln:"Cameroon"},238:{sn:"Cape Verde",ln:"Cape Verde"},239:{sn:"S\u00e3o Tom\u00e9 and Pr\u00edncipe",ln:"S\u00e3o Tom\u00e9 and Pr\u00edncipe"},240:{sn:"Equatorial Guinea",ln:"Equatorial Guinea"},
241:{sn:"Gabon",ln:"Gabon"},242:{sn:"Republic of Congo",ln:"Republic of Congo"},243:{sn:"DRC",ln:"Democratic Republic of the Congo"},244:{sn:"Angola",ln:"Angola"},245:{sn:"Guinea-Bissau",ln:"Guinea-Bissau"},246:{sn:"British Indian Ocean",ln:"British Indian Ocean Territory"},247:{sn:"Ascension",ln:"Ascension Island"},248:{sn:"Seychelles",ln:"Seychelles"},249:{sn:"Sudan",ln:"Sudan"},250:{sn:"Rwanda",ln:"Rwanda"},251:{sn:"Ethiopia",ln:"Ethiopia"},252:{sn:"Somalia",ln:"Somalia, Somaliland"},253:{sn:"Djibouti",
ln:"Djibouti"},254:{sn:"Kenya",ln:"Kenya"},255:{sn:"Tanzania",ln:"Tanzania"},256:{sn:"Uganda",ln:"Uganda"},257:{sn:"Burundi",ln:"Burundi"},258:{sn:"Mozambique",ln:"Mozambique"},259:{sn:"Unknown Country",ln:"Unknown Country"},260:{sn:"Zambia",ln:"Zambia"},261:{sn:"Madagascar",ln:"Madagascar"},262:{sn:"R\u00e9union",ln:"R\u00e9union, Mayotte"},263:{sn:"Zimbabwe",ln:"Zimbabwe"},264:{sn:"Namibia",ln:"Namibia"},265:{sn:"Malawi",ln:"Malawi"},266:{sn:"Lesotho",ln:"Lesotho"},267:{sn:"Botswana",ln:"Botswana"},
268:{sn:"Swaziland",ln:"Swaziland"},269:{sn:"Comoros",ln:"Comoros"},290:{sn:"Saint Helena",ln:"Saint Helena, Tristan da Cunha"},291:{sn:"Eritrea",ln:"Eritrea"},292:{sn:"Unknown Country",ln:"Unknown Country"},293:{sn:"Unknown Country",ln:"Unknown Country"},294:{sn:"Unknown Country",ln:"Unknown Country"},295:{sn:"Unknown Country",ln:"Unknown Country"},296:{sn:"Unknown Country",ln:"Unknown Country"},297:{sn:"Aruba",ln:"Aruba"},298:{sn:"Faroe Islands",ln:"Faroe Islands"},299:{sn:"Greenland",ln:"Greenland"},
350:{sn:"Gibraltar",ln:"Gibraltar"},351:{sn:"Portugal",ln:"Portugal"},352:{sn:"Luxembourg",ln:"Luxembourg"},353:{sn:"Ireland",ln:"Republic of Ireland"},354:{sn:"Iceland",ln:"Iceland"},355:{sn:"Albania",ln:"Albania"},356:{sn:"Malta",ln:"Malta"},357:{sn:"Cyprus",ln:"Cyprus"},358:{sn:"Finland",ln:"Finland, \u00c5land Islands"},359:{sn:"Bulgaria",ln:"Bulgaria"},370:{sn:"Lithuania",ln:"Lithuania"},371:{sn:"Latvia",ln:"Latvia"},372:{sn:"Estonia",ln:"Estonia"},373:{sn:"Moldova",ln:"Moldova"},374:{sn:"Armenia",
ln:"Armenia, Nagorno-Karabakh"},375:{sn:"Belarus",ln:"Belarus"},376:{sn:"Andorra",ln:"Andorra"},377:{sn:"Monaco",ln:"Monaco"},378:{sn:"San Marino",ln:"San Marino"},379:{sn:"Vatican City",ln:"Vatican City"},380:{sn:"Ukraine",ln:"Ukraine"},381:{sn:"Serbia",ln:"Serbia"},382:{sn:"Montenegro",ln:"Montenegro"},383:{sn:"Unknown Country",ln:"Unknown Country"},384:{sn:"Unknown Country",ln:"Unknown Country"},385:{sn:"Croatia",ln:"Croatia"},386:{sn:"Slovenia",ln:"Slovenia"},387:{sn:"Bosnia and Herzegovina",
ln:"Bosnia and Herzegovina"},388:{sn:"European Telephony",ln:"European Telephony Numbering Space"},389:{sn:"FYRoM",ln:"Former Yugoslav Republic of Macedonia"},420:{sn:"Czech Republic",ln:"Czech Republic"},421:{sn:"Slovakia",ln:"Slovakia"},422:{sn:"Unknown Country",ln:"Unknown Country"},423:{sn:"Liechtenstein",ln:"Liechtenstein"},424:{sn:"Unknown Country",ln:"Unknown Country"},425:{sn:"Unknown Country",ln:"Unknown Country"},426:{sn:"Unknown Country",ln:"Unknown Country"},427:{sn:"Unknown Country",
ln:"Unknown Country"},428:{sn:"Unknown Country",ln:"Unknown Country"},429:{sn:"Unknown Country",ln:"Unknown Country"},500:{sn:"Falklands",ln:"Falkland Islands"},501:{sn:"Belize",ln:"Belize"},502:{sn:"Guatemala",ln:"Guatemala"},503:{sn:"El Salvador",ln:"El Salvador"},504:{sn:"Honduras",ln:"Honduras"},505:{sn:"Nicaragua",ln:"Nicaragua"},506:{sn:"Costa Rica",ln:"Costa Rica"},507:{sn:"Panama",ln:"Panama"},508:{sn:"St. Pierre and Miquelon",ln:"St. Pierre and Miquelon"},509:{sn:"Haiti",ln:"Haiti"},590:{sn:"Guadeloupe",
ln:"Guadeloupe, Saint Barth\u00e9lemy, Saint Martin"},591:{sn:"Bolivia",ln:"Bolivia"},592:{sn:"Guyana",ln:"Guyana"},593:{sn:"Ecuador",ln:"Ecuador"},594:{sn:"French Guiana",ln:"French Guiana"},595:{sn:"Paraguay",ln:"Paraguay"},596:{sn:"Martinique",ln:"Martinique"},597:{sn:"Suriname",ln:"Suriname"},598:{sn:"Uruguay",ln:"Uruguay"},599:{sn:"Netherlands Antilles",ln:"Netherlands Antilles"},670:{sn:"East Timor",ln:"East Timor"},671:{sn:"Unknown Country",ln:"Unknown Country"},672:{sn:"Norfolk Island",ln:"Norfolk Island, Australian Antarctic Territory"},
673:{sn:"Brunei",ln:"Brunei Darussalam"},674:{sn:"Nauru",ln:"Nauru"},675:{sn:"Papua New Guinea",ln:"Papua New Guinea"},676:{sn:"Tonga",ln:"Tonga"},677:{sn:"Solomon Islands",ln:"Solomon Islands"},678:{sn:"Vanuatu",ln:"Vanuatu"},679:{sn:"Fiji",ln:"Fiji"},680:{sn:"Palau",ln:"Palau"},681:{sn:"Wallis and Futuna",ln:"Wallis and Futuna"},682:{sn:"Cook Islands",ln:"Cook Islands"},683:{sn:"Niue",ln:"Niue"},684:{sn:"Unknown Country",ln:"Unknown Country"},685:{sn:"Samoa",ln:"Samoa"},686:{sn:"Kiribati",ln:"Kiribati"},
687:{sn:"New Caledonia",ln:"New Caledonia"},688:{sn:"Tuvalu",ln:"Tuvalu"},689:{sn:"French Polynesia",ln:"French Polynesia"},690:{sn:"Tokelau",ln:"Tokelau"},691:{sn:"Micronesia",ln:"Federated States of Micronesia"},692:{sn:"Marshall Islands",ln:"Marshall Islands"},693:{sn:"Unknown Country",ln:"Unknown Country"},694:{sn:"Unknown Country",ln:"Unknown Country"},695:{sn:"Unknown Country",ln:"Unknown Country"},696:{sn:"Unknown Country",ln:"Unknown Country"},697:{sn:"Unknown Country",ln:"Unknown Country"},
698:{sn:"Unknown Country",ln:"Unknown Country"},699:{sn:"Unknown Country",ln:"Unknown Country"},800:{sn:"Freephone",ln:"Universal international freephone number"},801:{sn:"Unknown Country",ln:"Unknown Country"},802:{sn:"Unknown Country",ln:"Unknown Country"},803:{sn:"Unknown Country",ln:"Unknown Country"},804:{sn:"Unknown Country",ln:"Unknown Country"},805:{sn:"Unknown Country",ln:"Unknown Country"},806:{sn:"Unknown Country",ln:"Unknown Country"},807:{sn:"Unknown Country",ln:"Unknown Country"},808:{sn:"Shared Cost",
ln:"Shared Cost Service"},809:{sn:"Unknown Country",ln:"Unknown Country"},850:{sn:"North Korea",ln:"North Korea"},851:{sn:"Unknown Country",ln:"Unknown Country"},852:{sn:"Hong Kong",ln:"Hong Kong"},853:{sn:"Macau",ln:"Macau"},854:{sn:"Unknown Country",ln:"Unknown Country"},855:{sn:"Cambodia",ln:"Cambodia"},856:{sn:"Laos",ln:"Laos"},857:{sn:"Unknown Country",ln:"Unknown Country"},858:{sn:"Unknown Country",ln:"Unknown Country"},859:{sn:"Unknown Country",ln:"Unknown Country"},870:{sn:"Inmarsat",ln:"Inmarsat"},
871:{sn:"Unknown Country",ln:"Unknown Country"},872:{sn:"Pitcairn",ln:"Pitcairn"},873:{sn:"Unknown Country",ln:"Unknown Country"},874:{sn:"Unknown Country",ln:"Unknown Country"},875:{sn:"Unknown Country",ln:"Unknown Country"},876:{sn:"Unknown Country",ln:"Unknown Country"},877:{sn:"Unknown Country",ln:"Unknown Country"},878:{sn:"Universal Personal",ln:"Universal Personal Telecommunications"},879:{sn:"Unknown Country",ln:"Unknown Country"},880:{sn:"Bangladesh",ln:"Bangladesh"},881:{sn:"Global Satellite",
ln:"Global Mobile Satellite System"},882:{sn:"International Networks",ln:"International Networks (country code)"},883:{sn:"National Rate",ln:"International National Rate Service"},884:{sn:"Unknown Country",ln:"Unknown Country"},885:{sn:"Unknown Country",ln:"Unknown Country"},886:{sn:"Taiwan",ln:"Republic of China"},887:{sn:"Unknown Country",ln:"Unknown Country"},888:{sn:"OCHA",ln:"OCHA"},889:{sn:"Unknown Country",ln:"Unknown Country"},960:{sn:"Maldives",ln:"Maldives"},961:{sn:"Lebanon",ln:"Lebanon"},
962:{sn:"Jordan",ln:"Jordan"},963:{sn:"Syria",ln:"Syria"},964:{sn:"Iraq",ln:"Iraq"},965:{sn:"Kuwait",ln:"Kuwait"},966:{sn:"Saudi Arabia",ln:"Saudi Arabia"},967:{sn:"Yemen",ln:"Yemen"},968:{sn:"Oman",ln:"Oman"},969:{sn:"Unknown Country",ln:"Unknown Country"},970:{sn:"Palestinian Authority",ln:"Palestinian Authority"},971:{sn:"UAE",ln:"United Arab Emirates"},972:{sn:"Israel",ln:"Israel, Palestinian Authority"},973:{sn:"Bahrain",ln:"Bahrain"},974:{sn:"Qatar",ln:"Qatar"},975:{sn:"Bhutan",ln:"Bhutan"},
976:{sn:"Mongolia",ln:"Mongolia"},977:{sn:"Nepal",ln:"Nepal"},978:{sn:"Unknown Country",ln:"Unknown Country"},979:{sn:"Premium Rate",ln:"International Premium Rate Service"},990:{sn:"Unknown Country",ln:"Unknown Country"},991:{sn:"ITPCS",ln:"ITPCS"},992:{sn:"Tajikistan",ln:"Tajikistan"},993:{sn:"Turkmenistan",ln:"Turkmenistan"},994:{sn:"Azerbaijan",ln:"Azerbaijan, Nagorno-Karabakh"},995:{sn:"Georgia",ln:"Georgia"},996:{sn:"Kyrgyzstan",ln:"Kyrgyzstan"},997:{sn:"Unknown Country",ln:"Unknown Country"},
998:{sn:"Uzbekistan",ln:"Uzbekistan"},999:{sn:"Unknown Country",ln:"Unknown Country"}};ilib.data.area_AU={2:{sn:"Central East",ln:"Central Eastern Australia  (NSW, ACT)"},3:{sn:"Southeast",ln:"Southeastern Australia (VIC, TAS)"},7:{sn:"Northeast",ln:"Northeastern Australia (QLD)"},8:{sn:"Central/West",ln:"Central and Western Australia (SA, NT, WA)"}};
ilib.data.area_GB={20:{sn:"London",ln:"London"},23:{sn:"Southampton",ln:"Southampton, Portsmouth"},24:{sn:"Coventry",ln:"Coventry"},28:{sn:"Northern Ireland",ln:"Northern Ireland"},29:{sn:"Cardiff",ln:"Cardiff"},113:{sn:"Leeds",ln:"Leeds"},114:{sn:"Sheffield",ln:"Sheffield"},115:{sn:"Nottingham",ln:"Nottingham"},116:{sn:"Leicester",ln:"Leicester"},117:{sn:"Bristol",ln:"Bristol"},118:{sn:"Reading",ln:"Reading"},121:{sn:"Birmingham",ln:"Birmingham"},131:{sn:"Edinburgh",ln:"Edinburgh"},141:{sn:"Glasgow",
ln:"Glasgow"},151:{sn:"Liverpool",ln:"Liverpool"},161:{sn:"Manchester",ln:"Manchester"},191:{sn:"Tyne",ln:"Tyne, Wear, Durham"},1200:{sn:"Clitheroe",ln:"Clitheroe"},1201:{sn:"Unknown Location",ln:"Unknown Location"},1202:{sn:"Bournemouth",ln:"Bournemouth"},1203:{sn:"Unknown Location",ln:"Unknown Location"},1204:{sn:"Bolton",ln:"Bolton"},1205:{sn:"Boston",ln:"Boston"},1206:{sn:"Colchester",ln:"Colchester"},1207:{sn:"Consett",ln:"Consett"},1208:{sn:"Bodmin",ln:"Bodmin"},1209:{sn:"Redruth",ln:"Redruth, Cornwall"},
1220:{sn:"Unknown Location",ln:"Unknown Location"},1221:{sn:"Unknown Location",ln:"Unknown Location"},1222:{sn:"Unknown Location",ln:"Unknown Location"},1223:{sn:"Cambridge",ln:"Cambridge"},1224:{sn:"Aberdeen",ln:"Aberdeen"},1225:{sn:"Bath",ln:"Bath"},1226:{sn:"Barnsley",ln:"Barnsley"},1227:{sn:"Canterbury",ln:"Canterbury"},1228:{sn:"Carlisle",ln:"Carlisle"},1229:{sn:"Barrow-in-Furness",ln:"Barrow-in-Furness"},1230:{sn:"Unknown Location",ln:"Unknown Location"},1231:{sn:"Unknown Location",ln:"Unknown Location"},
1232:{sn:"Unknown Location",ln:"Unknown Location"},1233:{sn:"Ashford",ln:"Ashford"},1234:{sn:"Bedford",ln:"Bedford"},1235:{sn:"Abingdon",ln:"Abingdon"},1236:{sn:"Coatbridge",ln:"Coatbridge"},1237:{sn:"Bideford",ln:"Bideford"},1238:{sn:"Unknown Location",ln:"Unknown Location"},1239:{sn:"Cardigan",ln:"Cardigan"},1240:{sn:"Unknown Location",ln:"Unknown Location"},1241:{sn:"Arbroath",ln:"Arbroath"},1242:{sn:"Cheltenham",ln:"Cheltenham"},1243:{sn:"Chichester",ln:"Chichester, West Sussex"},1244:{sn:"Chester",
ln:"Chester"},1245:{sn:"Chelmsford",ln:"Chelmsford"},1246:{sn:"Chesterfield",ln:"Chesterfield"},1247:{sn:"Unknown Location",ln:"Unknown Location"},1248:{sn:"Bangor",ln:"Bangor, Wales"},1249:{sn:"Chippenham",ln:"Chippenham"},1250:{sn:"Blairgowrie",ln:"Blairgowrie"},1251:{sn:"Unknown Location",ln:"Unknown Location"},1252:{sn:"Aldershot",ln:"Aldershot"},1253:{sn:"Blackpool",ln:"Blackpool"},1254:{sn:"Blackburn",ln:"Blackburn"},1255:{sn:"Clacton on Sea",ln:"Clacton on Sea"},1256:{sn:"Basingstoke",ln:"Basingstoke"},
1257:{sn:"Chorley",ln:"Chorley"},1258:{sn:"Blandford",ln:"Blandford"},1259:{sn:"Alloa",ln:"Alloa"},1260:{sn:"Congleton",ln:"Congleton"},1261:{sn:"Banff",ln:"Banff"},1262:{sn:"Bridlington",ln:"Bridlington"},1263:{sn:"Cromer",ln:"Cromer"},1264:{sn:"Andover",ln:"Andover"},1265:{sn:"Unknown Location",ln:"Unknown Location"},1266:{sn:"Unknown Location",ln:"Unknown Location"},1267:{sn:"Carmarthen",ln:"Carmarthen"},1268:{sn:"Basildon",ln:"Basildon"},1269:{sn:"Ammanford",ln:"Ammanford"},1270:{sn:"Crewe",ln:"Crewe"},
1271:{sn:"Barnstaple",ln:"Barnstaple"},1272:{sn:"Unknown Location",ln:"Unknown Location"},1273:{sn:"Brighton",ln:"Brighton"},1274:{sn:"Bradford",ln:"Bradford"},1275:{sn:"Clevedon",ln:"Clevedon, Bristol"},1276:{sn:"Camberley",ln:"Camberley"},1277:{sn:"Brentwood",ln:"Brentwood"},1278:{sn:"Bridgwater",ln:"Bridgwater"},1279:{sn:"Bishop's Stortford",ln:"Bishop's Stortford"},1280:{sn:"Buckingham",ln:"Buckingham"},1281:{sn:"Unknown Location",ln:"Unknown Location"},1282:{sn:"Burnley",ln:"Burnley"},1283:{sn:"Burton upon Trent",
ln:"Burton upon Trent"},1284:{sn:"Bury St Edmunds",ln:"Bury St Edmunds"},1285:{sn:"Cirencester",ln:"Cirencester"},1286:{sn:"Caernarfon",ln:"Caernarfon"},1287:{sn:"Guisborough",ln:"Guisborough"},1288:{sn:"Bude",ln:"Bude"},1289:{sn:"Berwick-upon-Tweed",ln:"Berwick-upon-Tweed"},1290:{sn:"Cumnock",ln:"Cumnock, Ayrshire"},1291:{sn:"Chepstow",ln:"Chepstow"},1292:{sn:"Ayr",ln:"Ayr"},1293:{sn:"Crawley",ln:"Crawley"},1294:{sn:"Ardrossan",ln:"Ardrossan, Ayrshire"},1295:{sn:"Banbury",ln:"Banbury"},1296:{sn:"Aylesbury",
ln:"Aylesbury"},1297:{sn:"Axminster",ln:"Axminster"},1298:{sn:"Buxton",ln:"Buxton"},1299:{sn:"Bewdley",ln:"Bewdley"},1300:{sn:"Cerne Abbas",ln:"Cerne Abbas, Dorset"},1301:{sn:"Arrochar",ln:"Arrochar"},1302:{sn:"Doncaster",ln:"Doncaster"},1303:{sn:"Folkestone",ln:"Folkestone"},1304:{sn:"Dover",ln:"Dover"},1305:{sn:"Dorchester",ln:"Dorchester"},1306:{sn:"Dorking",ln:"Dorking"},1307:{sn:"Forfar",ln:"Forfar"},1308:{sn:"Bridport",ln:"Bridport, Dorset"},1309:{sn:"Forres",ln:"Forres"},1320:{sn:"Fort Augustus",
ln:"Fort Augustus"},1321:{sn:"Unknown Location",ln:"Unknown Location"},1322:{sn:"Dartford",ln:"Dartford"},1323:{sn:"Eastbourne",ln:"Eastbourne"},1324:{sn:"Falkirk",ln:"Falkirk"},1325:{sn:"Darlington",ln:"Darlington"},1326:{sn:"Falmouth",ln:"Falmouth"},1327:{sn:"Daventry",ln:"Daventry"},1328:{sn:"Fakenham",ln:"Fakenham"},1329:{sn:"Fareham",ln:"Fareham"},1330:{sn:"Banchory",ln:"Banchory, Deeside"},1331:{sn:"Unknown Location",ln:"Unknown Location"},1332:{sn:"Derby",ln:"Derby"},1333:{sn:"Peat Inn",ln:"Peat Inn, Fife"},
1334:{sn:"St Andrews",ln:"St Andrews, Fife"},1335:{sn:"Ashbourne",ln:"Ashbourne"},1336:{sn:"Unknown Location",ln:"Unknown Location"},1337:{sn:"Ladybank",ln:"Ladybank, Fife"},1338:{sn:"Unknown Location",ln:"Unknown Location"},1339:{sn:"Aboyne",ln:"Aboyne, Ballater, Deeside"},1340:{sn:"Craigellachie",ln:"Craigellachie, Elgin"},1341:{sn:"Barmouth",ln:"Barmouth, Dolgellau"},1342:{sn:"East Grinstead",ln:"East Grinstead"},1343:{sn:"Elgin",ln:"Elgin"},1344:{sn:"Bracknell",ln:"Bracknell, Easthampstead"},
1345:{sn:"Unknown Location",ln:"Unknown Location"},1346:{sn:"Fraserburgh",ln:"Fraserburgh"},1347:{sn:"Easingwold",ln:"Easingwold"},1348:{sn:"Fishguard",ln:"Fishguard"},1349:{sn:"Dingwall",ln:"Dingwall"},1350:{sn:"Dunkeld",ln:"Dunkeld"},1351:{sn:"Unknown Location",ln:"Unknown Location"},1352:{sn:"Mold",ln:"Mold, Flint"},1353:{sn:"Ely",ln:"Ely"},1354:{sn:"March",ln:"March, Cambridgeshire, Fenland"},1355:{sn:"East Kilbride",ln:"East Kilbride"},1356:{sn:"Brechin",ln:"Brechin, Edzell"},1357:{sn:"Strathaven",
ln:"Strathaven, East Kilbride"},1358:{sn:"Ellon",ln:"Ellon"},1359:{sn:"Pakenham",ln:"Pakenham, Elmswell"},1360:{sn:"Killearn",ln:"Killearn, Drymen"},1361:{sn:"Duns",ln:"Duns"},1362:{sn:"Dereham",ln:"Dereham"},1363:{sn:"Crediton",ln:"Crediton"},1364:{sn:"Ashburton",ln:"Ashburton, Devon"},1365:{sn:"Unknown Location",ln:"Unknown Location"},1366:{sn:"Downham Market",ln:"Downham Market"},1367:{sn:"Faringdon",ln:"Faringdon"},1368:{sn:"Dunbar",ln:"Dunbar"},1369:{sn:"Dunoon",ln:"Dunoon"},1370:{sn:"Unknown Location",
ln:"Unknown Location"},1371:{sn:"Great Dunmow",ln:"Great Dunmow, Essex"},1372:{sn:"Epsom",ln:"Epsom"},1373:{sn:"Frome",ln:"Frome"},1374:{sn:"Unknown Location",ln:"Unknown Location"},1375:{sn:"Grays Thurrock",ln:"Grays Thurrock, Essex"},1376:{sn:"Braintree",ln:"Braintree, Essex"},1377:{sn:"Driffield",ln:"Driffield"},1378:{sn:"Unknown Location",ln:"Unknown Location"},1379:{sn:"Diss",ln:"Diss"},1380:{sn:"Devizes",ln:"Devizes"},1381:{sn:"Fortrose",ln:"Fortrose"},1382:{sn:"Dundee",ln:"Dundee"},1383:{sn:"Dunfermline",
ln:"Dunfermline"},1384:{sn:"Dudley",ln:"Dudley"},1385:{sn:"Unknown Location",ln:"Unknown Location"},1386:{sn:"Evesham",ln:"Evesham"},1388:{sn:"Bishop Auckland",ln:"Bishop Auckland, Durham"},1389:{sn:"Dumbarton",ln:"Dumbarton"},1390:{sn:"Unknown Location",ln:"Unknown Location"},1391:{sn:"Unknown Location",ln:"Unknown Location"},1392:{sn:"Exeter",ln:"Exeter"},1393:{sn:"Unknown Location",ln:"Unknown Location"},1394:{sn:"Felixstowe",ln:"Felixstowe"},1395:{sn:"Budleigh Salterton",ln:"Budleigh Salterton, Exmouth"},
1396:{sn:"Unknown Location",ln:"Unknown Location"},1397:{sn:"Fort William",ln:"Fort William"},1398:{sn:"Dulverton",ln:"Dulverton, Exmoor"},1399:{sn:"Unknown Location",ln:"Unknown Location"},1400:{sn:"Honington",ln:"Honington"},1401:{sn:"Unknown Location",ln:"Unknown Location"},1402:{sn:"Unknown Location",ln:"Unknown Location"},1403:{sn:"Horsham",ln:"Horsham"},1404:{sn:"Honiton",ln:"Honiton"},1405:{sn:"Goole",ln:"Goole"},1406:{sn:"Holbeach",ln:"Holbeach"},1407:{sn:"Holyhead",ln:"Holyhead"},1408:{sn:"Golspie",
ln:"Golspie"},1409:{sn:"Holsworthy",ln:"Holsworthy"},1420:{sn:"Alton",ln:"Alton"},1421:{sn:"Unknown Location",ln:"Unknown Location"},1422:{sn:"Halifax",ln:"Halifax"},1423:{sn:"Boroughbridge",ln:"Boroughbridge, Harrogate"},1424:{sn:"Hastings",ln:"Hastings"},1425:{sn:"Ringwood",ln:"Ringwood, Highcliffe, New Milton, Ashley"},1426:{sn:"Unknown Location",ln:"Unknown Location"},1427:{sn:"Gainsborough",ln:"Gainsborough"},1428:{sn:"Haslemere",ln:"Haslemere"},1429:{sn:"Hartlepool",ln:"Hartlepool"},1430:{sn:"Market Weighton",
ln:"Market Weighton, North Cave, Howden"},1431:{sn:"Helmsdale",ln:"Helmsdale"},1432:{sn:"Hereford",ln:"Hereford"},1433:{sn:"Hathersage",ln:"Hathersage"},1434:{sn:"Bellingham",ln:"Bellingham, Haltwhistle, Hexham"},1435:{sn:"Heathfield",ln:"Heathfield"},1436:{sn:"Helensburgh",ln:"Helensburgh"},1437:{sn:"Clynderwen",ln:"Clynderwen, Haverfordwest"},1438:{sn:"Stevenage",ln:"Stevenage, Hertfordshire"},1439:{sn:"Helmsley",ln:"Helmsley"},1440:{sn:"Haverhill",ln:"Haverhill"},1441:{sn:"Unknown Location",ln:"Unknown Location"},
1442:{sn:"Hemel",ln:"Hemel Hempstead"},1443:{sn:"Pontypridd",ln:"Pontypridd, Glamorgan"},1444:{sn:"Haywards Heath",ln:"Haywards Heath, Burgess Hill"},1445:{sn:"Gairloch",ln:"Gairloch"},1446:{sn:"Barry",ln:"Barry, Glamorgan"},1447:{sn:"Unknown Location",ln:"Unknown Location"},1448:{sn:"Unknown Location",ln:"Unknown Location"},1449:{sn:"Stowmarket",ln:"Stowmarket, Gipping"},1450:{sn:"Hawick",ln:"Hawick"},1451:{sn:"Stow-on-the-Wold",ln:"Stow-on-the-Wold, Gloucestershire"},1452:{sn:"Gloucester",ln:"Gloucester"},
1453:{sn:"Dursley",ln:"Dursley, Gloucestershire"},1454:{sn:"Chipping Sodbury",ln:"Chipping Sodbury, Gloucestershire"},1455:{sn:"Hinckley",ln:"Hinckley"},1456:{sn:"Glenurquhart",ln:"Glenurquhart"},1457:{sn:"Glossop",ln:"Glossop"},1458:{sn:"Glastonbury",ln:"Glastonbury"},1459:{sn:"Unknown Location",ln:"Unknown Location"},1460:{sn:"Chard",ln:"Chard, Ilminster"},1461:{sn:"Gretna",ln:"Gretna"},1462:{sn:"Hitchin",ln:"Hitchin"},1463:{sn:"Inverness",ln:"Inverness"},1464:{sn:"Insch",ln:"Insch"},1465:{sn:"Girvan",
ln:"Girvan"},1466:{sn:"Huntly",ln:"Huntly"},1467:{sn:"Inverurie",ln:"Inverurie"},1468:{sn:"Unknown Location",ln:"Unknown Location"},1469:{sn:"Killingholme",ln:"Killingholme, Immingham"},1470:{sn:"Edinbane",ln:"Edinbane, Isle of Skye"},1471:{sn:"Broadford",ln:"Broadford, Isle of Skye"},1472:{sn:"Grimsby",ln:"Grimsby"},1473:{sn:"Ipswich",ln:"Ipswich"},1474:{sn:"Gravesend",ln:"Gravesend"},1475:{sn:"Greenock",ln:"Greenock"},1476:{sn:"Grantham",ln:"Grantham"},1477:{sn:"Holmes Chapel",ln:"Holmes Chapel"},
1478:{sn:"Portree",ln:"Portree, Isle of Skye"},1479:{sn:"Grantown-on-Spey",ln:"Grantown-on-Spey"},1480:{sn:"Huntingdon",ln:"Huntingdon"},1481:{sn:"Guernsey",ln:"Guernsey"},1482:{sn:"Hull",ln:"Hull"},1483:{sn:"Guildford",ln:"Guildford"},1484:{sn:"Huddersfield",ln:"Huddersfield"},1485:{sn:"Hunstanton",ln:"Hunstanton"},1487:{sn:"Warboys",ln:"Warboys, Huntingdon"},1488:{sn:"Hungerford",ln:"Hungerford"},1489:{sn:"Bishop's Waltham",ln:"Bishop's Waltham, Hamble Valley"},1490:{sn:"Corwen",ln:"Corwen, Gwynedd"},
1491:{sn:"Henley-on-Thames",ln:"Henley-on-Thames"},1492:{sn:"Colwyn Bay",ln:"Colwyn Bay, Gwynedd"},1493:{sn:"Great Yarmouth",ln:"Great Yarmouth"},1494:{sn:"High Wycombe",ln:"High Wycombe"},1495:{sn:"Pontypool",ln:"Pontypool, Gwent"},1496:{sn:"Port Ellen",ln:"Port Ellen, Islay"},1497:{sn:"Hay-on-Wye",ln:"Hay-on-Wye"},1498:{sn:"Unknown Location",ln:"Unknown Location"},1499:{sn:"Inveraray",ln:"Inveraray"},1500:{sn:"Unknown Location",ln:"Unknown Location"},1501:{sn:"Harthill",ln:"Harthill, Lothian"},
1502:{sn:"Lowestoft",ln:"Lowestoft"},1503:{sn:"Looe",ln:"Looe"},1504:{sn:"Unknown Location",ln:"Unknown Location"},1505:{sn:"Johnstone",ln:"Johnstone"},1506:{sn:"Bathgate",ln:"Bathgate, Lothian"},1507:{sn:"Alford",ln:"Alford, Louth and Spilsby"},1508:{sn:"Brooke",ln:"Brooke"},1509:{sn:"Loughborough",ln:"Loughborough"},1520:{sn:"Lochcarron",ln:"Lochcarron"},1521:{sn:"Unknown Location",ln:"Unknown Location"},1522:{sn:"Lincoln",ln:"Lincoln"},1523:{sn:"Unknown Location",ln:"Unknown Location"},1525:{sn:"Leighton Buzzard",
ln:"Leighton Buzzard"},1526:{sn:"Martin",ln:"Martin, Lincolnshire"},1527:{sn:"Redditch",ln:"Redditch"},1528:{sn:"Laggan",ln:"Laggan, Badenoch"},1529:{sn:"Sleaford",ln:"Sleaford, Lincolnshire"},1530:{sn:"Coalville",ln:"Coalville, Ashby-de-la-Zouch Leicestershire"},1531:{sn:"Ledbury",ln:"Ledbury"},1532:{sn:"Unknown Location",ln:"Unknown Location"},1533:{sn:"Unknown Location",ln:"Unknown Location"},1534:{sn:"Jersey",ln:"Jersey"},1535:{sn:"Keighley",ln:"Keighley"},1536:{sn:"Kettering",ln:"Kettering"},
1537:{sn:"Unknown Location",ln:"Unknown Location"},1538:{sn:"Ipstones",ln:"Ipstones, Leek"},1540:{sn:"Kingussie",ln:"Kingussie"},1541:{sn:"Unknown Location",ln:"Unknown Location"},1542:{sn:"Keith",ln:"Keith"},1543:{sn:"Cannock",ln:"Cannock, Lichfield"},1544:{sn:"Kington",ln:"Kington"},1545:{sn:"Llanarth",ln:"Llanarth, Ceredigion"},1546:{sn:"Lochgilphead",ln:"Lochgilphead"},1547:{sn:"Knighton",ln:"Knighton"},1548:{sn:"Kingsbridge",ln:"Kingsbridge"},1549:{sn:"Lairg",ln:"Lairg"},1550:{sn:"Llandovery",
ln:"Llandovery"},1551:{sn:"Unknown Location",ln:"Unknown Location"},1552:{sn:"Unknown Location",ln:"Unknown Location"},1553:{sn:"King's Lynn",ln:"King's Lynn"},1554:{sn:"Llanelli",ln:"Llanelli"},1555:{sn:"Lanark",ln:"Lanark"},1556:{sn:"Castle Douglas",ln:"Castle Douglas, Kirkcudbrightshire"},1557:{sn:"Kirkcudbright",ln:"Kirkcudbright"},1558:{sn:"Llandeilo",ln:"Llandeilo"},1559:{sn:"Llandysul",ln:"Llandysul"},1560:{sn:"Moscow",ln:"Moscow, Kilmarnock"},1561:{sn:"Laurencekirk",ln:"Laurencekirk"},1562:{sn:"Kidderminster",
ln:"Kidderminster"},1563:{sn:"Kilmarnock",ln:"Kilmarnock"},1564:{sn:"Lapworth",ln:"Lapworth, Knowle"},1565:{sn:"Knutsford",ln:"Knutsford"},1566:{sn:"Launceston",ln:"Launceston"},1567:{sn:"Killin",ln:"Killin"},1568:{sn:"Leominster",ln:"Leominster"},1569:{sn:"Stonehaven",ln:"Stonehaven, Laurencekirk"},1570:{sn:"Lampeter",ln:"Lampeter"},1571:{sn:"Lochinver",ln:"Lochinver"},1572:{sn:"Oakham",ln:"Oakham"},1573:{sn:"Kelso",ln:"Kelso"},1574:{sn:"Unknown Location",ln:"Unknown Location"},1575:{sn:"Kirriemuir",
ln:"Kirriemuir"},1576:{sn:"Lockerbie",ln:"Lockerbie"},1577:{sn:"Kinross",ln:"Kinross"},1578:{sn:"Lauder",ln:"Lauder"},1579:{sn:"Liskeard",ln:"Liskeard"},1580:{sn:"Cranbrook",ln:"Cranbrook, Kent"},1581:{sn:"New Luce",ln:"New Luce, Luce"},1582:{sn:"Luton",ln:"Luton"},1583:{sn:"Carradale",ln:"Carradale, Kintyre"},1584:{sn:"Ludlow",ln:"Ludlow"},1585:{sn:"was Kesgrave",ln:"was Kesgrave"},1586:{sn:"Campbeltown",ln:"Campbeltown, Kintyre"},1587:{sn:"Unknown Location",ln:"Unknown Location"},1588:{sn:"Bishop's Castle",
ln:"Bishop's Castle, Ludlow"},1589:{sn:"Unknown Location",ln:"Unknown Location"},1590:{sn:"Lymington",ln:"Lymington"},1591:{sn:"Llanwrtyd Wells",ln:"Llanwrtyd Wells"},1592:{sn:"Kirkcaldy",ln:"Kirkcaldy"},1593:{sn:"Lybster",ln:"Lybster"},1594:{sn:"Lydney",ln:"Lydney"},1595:{sn:"Lerwick",ln:"Lerwick, Foula and Fair Isle"},1596:{sn:"Unknown Location",ln:"Unknown Location"},1597:{sn:"Llandrindod Wells",ln:"Llandrindod Wells"},1598:{sn:"Lynton",ln:"Lynton"},1599:{sn:"Kyle",ln:"Kyle"},1600:{sn:"Monmouth",
ln:"Monmouth"},1601:{sn:"Unknown Location",ln:"Unknown Location"},1602:{sn:"Unknown Location",ln:"Unknown Location"},1603:{sn:"Norwich",ln:"Norwich"},1604:{sn:"Northampton",ln:"Northampton"},1605:{sn:"Unknown Location",ln:"Unknown Location"},1606:{sn:"Northwich",ln:"Northwich"},1607:{sn:"Unknown Location",ln:"Unknown Location"},1608:{sn:"Chipping Norton",ln:"Chipping Norton"},1609:{sn:"Northallerton",ln:"Northallerton"},1620:{sn:"North Berwick",ln:"North Berwick"},1621:{sn:"Maldon",ln:"Maldon"},1622:{sn:"Maidstone",
ln:"Maidstone"},1623:{sn:"Mansfield",ln:"Mansfield"},1624:{sn:"Isle of Man",ln:"Isle of Man"},1625:{sn:"Macclesfield",ln:"Macclesfield"},1626:{sn:"Newton Abbot",ln:"Newton Abbot"},1627:{sn:"Unknown Location",ln:"Unknown Location"},1628:{sn:"Maidenhead",ln:"Maidenhead"},1629:{sn:"Matlock",ln:"Matlock"},1630:{sn:"Market Drayton",ln:"Market Drayton"},1631:{sn:"Oban",ln:"Oban"},1632:{sn:"Unknown Location",ln:"Unknown Location"},1633:{sn:"Newport",ln:"Newport"},1634:{sn:"Medway",ln:"Medway"},1635:{sn:"Newbury",
ln:"Newbury"},1636:{sn:"Newark-on-Trent",ln:"Newark-on-Trent"},1637:{sn:"Newquay",ln:"Newquay"},1638:{sn:"Newmarket",ln:"Newmarket"},1639:{sn:"Neath",ln:"Neath"},1640:{sn:"Unknown Location",ln:"Unknown Location"},1641:{sn:"Strathy",ln:"Strathy, Melvich"},1642:{sn:"Middlesbrough",ln:"Middlesbrough"},1643:{sn:"Minehead",ln:"Minehead"},1644:{sn:"New Galloway",ln:"New Galloway"},1645:{sn:"Unknown Location",ln:"Unknown Location"},1646:{sn:"Milford Haven",ln:"Milford Haven"},1647:{sn:"Moretonhampstead",
ln:"Moretonhampstead"},1648:{sn:"Unknown Location",ln:"Unknown Location"},1649:{sn:"Unknown Location",ln:"Unknown Location"},1650:{sn:"Cemmaes Road",ln:"Cemmaes Road, Machynlleth"},1651:{sn:"Oldmeldrum",ln:"Oldmeldrum"},1652:{sn:"Brigg",ln:"Brigg, North Kelsey"},1653:{sn:"Malton",ln:"Malton"},1654:{sn:"Machynlleth",ln:"Machynlleth"},1655:{sn:"Maybole",ln:"Maybole"},1656:{sn:"Bridgend",ln:"Bridgend"},1657:{sn:"Unknown Location",ln:"Unknown Location"},1658:{sn:"Unknown Location",ln:"Unknown Location"},
1659:{sn:"Sanquhar",ln:"Sanquhar, Nithsdale"},1660:{sn:"Unknown Location",ln:"Unknown Location"},1661:{sn:"Prudhoe",ln:"Prudhoe, Northumberland"},1662:{sn:"Unknown Location",ln:"Unknown Location"},1663:{sn:"New Mills",ln:"New Mills"},1664:{sn:"Melton Mowbray",ln:"Melton Mowbray"},1665:{sn:"Alnwick",ln:"Alnwick, Northumberland"},1666:{sn:"Malmesbury",ln:"Malmesbury"},1667:{sn:"Nairn",ln:"Nairn"},1668:{sn:"Bamburgh",ln:"Bamburgh, Northumberland"},1669:{sn:"Rothbury",ln:"Rothbury, Northumberland"},1670:{sn:"Morpeth",
ln:"Morpeth"},1671:{sn:"Newton Stewart",ln:"Newton Stewart"},1672:{sn:"Marlborough",ln:"Marlborough"},1673:{sn:"Market Rasen",ln:"Market Rasen"},1674:{sn:"Montrose",ln:"Montrose"},1675:{sn:"Coleshill",ln:"Coleshill, Warwickshire, Meriden"},1676:{sn:"Meriden",ln:"Meriden"},1677:{sn:"Bedale",ln:"Bedale, North Riding"},1678:{sn:"Bala",ln:"Bala, Meirionydd"},1679:{sn:"Unknown Location",ln:"Unknown Location"},1680:{sn:"Craignure",ln:"Craignure, Isle of Mull"},1681:{sn:"Fionnphort",ln:"Fionnphort, Isle of Mull"},
1682:{sn:"Unknown Location",ln:"Unknown Location"},1683:{sn:"Moffat",ln:"Moffat"},1684:{sn:"Malvern",ln:"Malvern"},1685:{sn:"Merthyr Tydfil",ln:"Merthyr Tydfil"},1686:{sn:"Llanidloes and Newtown",ln:"Llanidloes and Newtown"},1687:{sn:"Mallaig",ln:"Mallaig"},1688:{sn:"Tobermory",ln:"Tobermory, Isle of Mull"},1689:{sn:"Orpington",ln:"Orpington"},1690:{sn:"Betws-y-Coed",ln:"Betws-y-Coed"},1691:{sn:"Oswestry",ln:"Oswestry"},1692:{sn:"North Walsham",ln:"North Walsham"},1693:{sn:"Unknown Location",ln:"Unknown Location"},
1694:{sn:"Church Stretton",ln:"Church Stretton"},1695:{sn:"Skelmersdale/Ormskirk",ln:"Skelmersdale/Ormskirk"},1696:{sn:"Unknown Location",ln:"Unknown Location"},1698:{sn:"Motherwell",ln:"Motherwell"},1699:{sn:"Unknown Location",ln:"Unknown Location"},1700:{sn:"Rothesay",ln:"Rothesay"},1701:{sn:"Unknown Location",ln:"Unknown Location"},1702:{sn:"Southend-on-Sea",ln:"Southend-on-Sea"},1703:{sn:"Unknown Location",ln:"Unknown Location"},1704:{sn:"Southport",ln:"Southport"},1705:{sn:"Unknown Location",
ln:"Unknown Location"},1706:{sn:"Rochdale",ln:"Rochdale, Rossendale"},1707:{sn:"Welwyn Hatfield and Potters Bar",ln:"Welwyn Hatfield and Potters Bar"},1708:{sn:"Romford",ln:"Romford"},1709:{sn:"Rotherham",ln:"Rotherham"},1710:{sn:"Unknown Location",ln:"Unknown Location"},1711:{sn:"Unknown Location",ln:"Unknown Location"},1712:{sn:"Unknown Location",ln:"Unknown Location"},1713:{sn:"Unknown Location",ln:"Unknown Location"},1714:{sn:"Unknown Location",ln:"Unknown Location"},1715:{sn:"Unknown Location",
ln:"Unknown Location"},1716:{sn:"Unknown Location",ln:"Unknown Location"},1717:{sn:"Unknown Location",ln:"Unknown Location"},1718:{sn:"Unknown Location",ln:"Unknown Location"},1719:{sn:"Unknown Location",ln:"Unknown Location"},1720:{sn:"Isles of Scilly",ln:"Isles of Scilly"},1721:{sn:"Peebles",ln:"Peebles"},1722:{sn:"Salisbury",ln:"Salisbury"},1723:{sn:"Scarborough",ln:"Scarborough"},1724:{sn:"Scunthorpe",ln:"Scunthorpe"},1725:{sn:"Rockbourne",ln:"Rockbourne"},1726:{sn:"St Austell",ln:"St Austell"},
1727:{sn:"St Albans",ln:"St Albans"},1728:{sn:"Saxmundham",ln:"Saxmundham"},1729:{sn:"Settle",ln:"Settle, Ribblesdale"},1730:{sn:"Petersfield",ln:"Petersfield"},1731:{sn:"Unknown Location",ln:"Unknown Location"},1732:{sn:"Sevenoaks",ln:"Sevenoaks"},1733:{sn:"Peterborough",ln:"Peterborough"},1734:{sn:"Unknown Location",ln:"Unknown Location"},1735:{sn:"Unknown Location",ln:"Unknown Location"},1736:{sn:"Penzance",ln:"Penzance"},1737:{sn:"Redhill",ln:"Redhill"},1738:{sn:"Perth",ln:"Perth"},1739:{sn:"Unknown Location",
ln:"Unknown Location"},1740:{sn:"Sedgefield",ln:"Sedgefield"},1741:{sn:"Unknown Location",ln:"Unknown Location"},1742:{sn:"Unknown Location",ln:"Unknown Location"},1743:{sn:"Shrewsbury",ln:"Shrewsbury"},1744:{sn:"St Helens",ln:"St Helens"},1745:{sn:"Rhyl",ln:"Rhyl"},1746:{sn:"Bridgnorth",ln:"Bridgnorth, Shropshire"},1747:{sn:"Shaftesbury",ln:"Shaftesbury"},1748:{sn:"Richmond",ln:"Richmond"},1749:{sn:"Shepton Mallet",ln:"Shepton Mallet"},1750:{sn:"Selkirk",ln:"Selkirk"},1751:{sn:"Pickering",ln:"Pickering"},
1752:{sn:"Plymouth",ln:"Plymouth"},1753:{sn:"Slough",ln:"Slough"},1754:{sn:"Skegness",ln:"Skegness"},1755:{sn:"Unknown Location",ln:"Unknown Location"},1756:{sn:"Skipton",ln:"Skipton"},1757:{sn:"Selby",ln:"Selby"},1758:{sn:"Pwllheli",ln:"Pwllheli"},1759:{sn:"Pocklington",ln:"Pocklington"},1760:{sn:"Swaffham",ln:"Swaffham"},1761:{sn:"Temple Cloud",ln:"Temple Cloud, Somerset"},1762:{sn:"Unknown Location",ln:"Unknown Location"},1763:{sn:"Royston",ln:"Royston"},1764:{sn:"Crieff",ln:"Crieff, Ruthven"},
1765:{sn:"Ripon",ln:"Ripon"},1766:{sn:"Porthmadog",ln:"Porthmadog"},1767:{sn:"Sandy",ln:"Sandy"},1769:{sn:"South Molton",ln:"South Molton"},1770:{sn:"Isle of Arran",ln:"Isle of Arran"},1771:{sn:"Maud",ln:"Maud"},1772:{sn:"Preston",ln:"Preston"},1773:{sn:"Ripley",ln:"Ripley"},1774:{sn:"Unknown Location",ln:"Unknown Location"},1775:{sn:"Spalding",ln:"Spalding"},1776:{sn:"Stranraer",ln:"Stranraer"},1777:{sn:"Retford",ln:"Retford"},1778:{sn:"Market Deeping/Bourne (Spalding-dependent)",ln:"Market Deeping/Bourne (Spalding-dependent)"},
1779:{sn:"Peterhead",ln:"Peterhead"},1780:{sn:"Stamford",ln:"Stamford"},1781:{sn:"Unknown Location",ln:"Unknown Location"},1782:{sn:"Stoke on Trent",ln:"Stoke on Trent"},1783:{sn:"Unknown Location",ln:"Unknown Location"},1784:{sn:"Staines",ln:"Staines"},1785:{sn:"Stafford",ln:"Stafford"},1786:{sn:"Stirling",ln:"Stirling"},1787:{sn:"Sudbury",ln:"Sudbury"},1788:{sn:"Rugby",ln:"Rugby"},1789:{sn:"Stratford-upon-Avon",ln:"Stratford-upon-Avon"},1790:{sn:"Spilsby",ln:"Spilsby"},1791:{sn:"Unknown Location",
ln:"Unknown Location"},1792:{sn:"Swansea",ln:"Swansea"},1793:{sn:"Swindon",ln:"Swindon"},1794:{sn:"Romsey",ln:"Romsey"},1795:{sn:"Sittingbourne",ln:"Sittingbourne, Sheppey"},1796:{sn:"Pitlochry",ln:"Pitlochry"},1797:{sn:"Rye",ln:"Rye"},1798:{sn:"Pulborough",ln:"Pulborough, Sussex"},1799:{sn:"Saffron Walden",ln:"Saffron Walden"},1800:{sn:"Unknown Location",ln:"Unknown Location"},1801:{sn:"Unknown Location",ln:"Unknown Location"},1802:{sn:"Unknown Location",ln:"Unknown Location"},1803:{sn:"Torquay",
ln:"Torquay"},1804:{sn:"Unknown Location",ln:"Unknown Location"},1805:{sn:"Torrington",ln:"Torrington"},1806:{sn:"Voe",ln:"Voe, Shetland"},1807:{sn:"Ballindalloch",ln:"Ballindalloch, Tomintoul"},1808:{sn:"Tomatin",ln:"Tomatin"},1809:{sn:"Tomdoun",ln:"Tomdoun"},1810:{sn:"Unknown Location",ln:"Unknown Location"},1811:{sn:"Unknown Location",ln:"Unknown Location"},1812:{sn:"Unknown Location",ln:"Unknown Location"},1813:{sn:"Unknown Location",ln:"Unknown Location"},1814:{sn:"Unknown Location",ln:"Unknown Location"},
1815:{sn:"Unknown Location",ln:"Unknown Location"},1816:{sn:"Unknown Location",ln:"Unknown Location"},1817:{sn:"Unknown Location",ln:"Unknown Location"},1818:{sn:"Unknown Location",ln:"Unknown Location"},1819:{sn:"Unknown Location",ln:"Unknown Location"},1820:{sn:"Unknown Location",ln:"Unknown Location"},1821:{sn:"Kinrossie",ln:"Kinrossie, Tayside"},1822:{sn:"Tavistock",ln:"Tavistock"},1823:{sn:"Taunton",ln:"Taunton"},1824:{sn:"Ruthin",ln:"Ruthin, Vale of Clwyd"},1825:{sn:"Uckfield",ln:"Uckfield"},
1827:{sn:"Tamworth",ln:"Tamworth"},1828:{sn:"Coupar Angus",ln:"Coupar Angus, Tayside"},1829:{sn:"Tarporley",ln:"Tarporley"},1830:{sn:"Kirkwhelpington",ln:"Kirkwhelpington"},1831:{sn:"Unknown Location",ln:"Unknown Location"},1832:{sn:"Clopton",ln:"Clopton, Oundle"},1833:{sn:"Teesdale",ln:"Teesdale"},1834:{sn:"Narberth",ln:"Narberth, Tenby"},1835:{sn:"St. Boswells",ln:"St. Boswells"},1836:{sn:"Unknown Location",ln:"Unknown Location"},1837:{sn:"Okehampton",ln:"Okehampton"},1838:{sn:"Dalmally",ln:"Dalmally, Tyndrum"},
1839:{sn:"Unknown Location",ln:"Unknown Location"},1840:{sn:"Camelford",ln:"Camelford, Tintagel"},1841:{sn:"Newquay",ln:"Newquay"},1842:{sn:"Thetford",ln:"Thetford"},1843:{sn:"Thanet",ln:"Thanet"},1844:{sn:"Thame",ln:"Thame"},1845:{sn:"Thirsk",ln:"Thirsk"},1846:{sn:"Unknown Location",ln:"Unknown Location"},1847:{sn:"Thurso and Tongue",ln:"Thurso and Tongue"},1848:{sn:"Thornhill",ln:"Thornhill"},1849:{sn:"Unknown Location",ln:"Unknown Location"},1850:{sn:"Unknown Location",ln:"Unknown Location"},1851:{sn:"Great Bernera and Stornoway",
ln:"Great Bernera and Stornoway"},1852:{sn:"Kilmelford",ln:"Kilmelford"},1853:{sn:"Unknown Location",ln:"Unknown Location"},1854:{sn:"Ullapool",ln:"Ullapool"},1855:{sn:"Ballachulish",ln:"Ballachulish"},1856:{sn:"Orkney",ln:"Orkney"},1857:{sn:"Sanday",ln:"Sanday"},1858:{sn:"Market Harborough",ln:"Market Harborough"},1859:{sn:"Harris",ln:"Harris"},1860:{sn:"Unknown Location",ln:"Unknown Location"},1861:{sn:"Unknown Location",ln:"Unknown Location"},1862:{sn:"Tain",ln:"Tain"},1863:{sn:"Ardgay",ln:"Ardgay, Tain"},
1864:{sn:"Tinto",ln:"Tinto, Abington"},1865:{sn:"Oxford",ln:"Oxford"},1866:{sn:"Kilchrenan",ln:"Kilchrenan"},1867:{sn:"Unknown Location",ln:"Unknown Location"},1868:{sn:"Unknown Location",ln:"Unknown Location"},1869:{sn:"Bicester",ln:"Bicester, Oxfordshire"},1870:{sn:"Isle of Benbecula",ln:"Isle of Benbecula"},1871:{sn:"Castlebay",ln:"Castlebay"},1872:{sn:"Truro",ln:"Truro"},1873:{sn:"Abergavenny",ln:"Abergavenny, Usk"},1874:{sn:"Brecon",ln:"Brecon, Usk"},1875:{sn:"Tranent",ln:"Tranent"},1876:{sn:"Lochmaddy",
ln:"Lochmaddy"},1877:{sn:"Callander",ln:"Callander, Trossachs"},1878:{sn:"Lochboisdale",ln:"Lochboisdale"},1879:{sn:"Scarinish",ln:"Scarinish, Tiree"},1880:{sn:"Tarbert",ln:"Tarbert"},1881:{sn:"Unknown Location",ln:"Unknown Location"},1882:{sn:"Kinloch Rannoch",ln:"Kinloch Rannoch, Tummel Bridge"},1883:{sn:"Caterham",ln:"Caterham"},1884:{sn:"Tiverton",ln:"Tiverton"},1885:{sn:"Pencombe",ln:"Pencombe"},1886:{sn:"Bromyard",ln:"Bromyard, Teme Valley"},1887:{sn:"Aberfeldy",ln:"Aberfeldy, Tay Valley"},
1888:{sn:"Turriff",ln:"Turriff"},1889:{sn:"Uttoxeter",ln:"Uttoxeter"},1890:{sn:"Ayton",ln:"Ayton, Berwickshire and Coldstream, Tweed"},1891:{sn:"Unknown Location",ln:"Unknown Location"},1892:{sn:"Tunbridge Wells",ln:"Tunbridge Wells"},1893:{sn:"Unknown Location",ln:"Unknown Location"},1894:{sn:"Unknown Location",ln:"Unknown Location"},1895:{sn:"Uxbridge",ln:"Uxbridge"},1896:{sn:"Galashiels",ln:"Galashiels, Tweed"},1897:{sn:"Unknown Location",ln:"Unknown Location"},1898:{sn:"Unknown Location",ln:"Unknown Location"},
1899:{sn:"Biggar",ln:"Biggar, Tweed"},1900:{sn:"Workington",ln:"Workington"},1901:{sn:"Unknown Location",ln:"Unknown Location"},1902:{sn:"Wolverhampton",ln:"Wolverhampton"},1903:{sn:"Worthing",ln:"Worthing"},1904:{sn:"York",ln:"York"},1905:{sn:"Worcester",ln:"Worcester"},1906:{sn:"Unknown Location",ln:"Unknown Location"},1907:{sn:"Unknown Location",ln:"Unknown Location"},1908:{sn:"Milton Keynes",ln:"Milton Keynes, Wolverton"},1909:{sn:"Worksop",ln:"Worksop"},1920:{sn:"Ware",ln:"Ware"},1921:{sn:"Unknown Location",
ln:"Unknown Location"},1922:{sn:"Walsall",ln:"Walsall"},1923:{sn:"Watford",ln:"Watford"},1924:{sn:"Wakefield",ln:"Wakefield"},1925:{sn:"Warrington",ln:"Warrington"},1926:{sn:"Warwick",ln:"Warwick"},1927:{sn:"Unknown Location",ln:"Unknown Location"},1928:{sn:"Runcorn",ln:"Runcorn, Warrington"},1929:{sn:"Wareham",ln:"Wareham"},1930:{sn:"Unknown Location",ln:"Unknown Location"},1931:{sn:"Shap",ln:"Shap, Westmorland"},1932:{sn:"Weybridge",ln:"Weybridge"},1933:{sn:"Wellingborough",ln:"Wellingborough"},
1934:{sn:"Weston-super-Mare",ln:"Weston-super-Mare"},1935:{sn:"Yeovil",ln:"Yeovil"},1936:{sn:"Unknown Location",ln:"Unknown Location"},1937:{sn:"Wetherby",ln:"Wetherby"},1938:{sn:"Welshpool",ln:"Welshpool"},1939:{sn:"Wem",ln:"Wem"},1940:{sn:"Unknown Location",ln:"Unknown Location"},1941:{sn:"Unknown Location",ln:"Unknown Location"},1942:{sn:"Wigan",ln:"Wigan"},1943:{sn:"Guiseley",ln:"Guiseley, Wharfedale"},1944:{sn:"West Heslerton",ln:"West Heslerton"},1945:{sn:"Wisbech",ln:"Wisbech"},1947:{sn:"Whitby",
ln:"Whitby"},1948:{sn:"Whitchurch",ln:"Whitchurch"},1949:{sn:"Whatton",ln:"Whatton"},1950:{sn:"Sandwick",ln:"Sandwick, Yell"},1951:{sn:"Colonsay",ln:"Colonsay"},1952:{sn:"Telford",ln:"Telford, Wellington"},1953:{sn:"Wymondham",ln:"Wymondham"},1954:{sn:"Madingley",ln:"Madingley, Willingham"},1955:{sn:"Wick",ln:"Wick"},1956:{sn:"Unknown Location",ln:"Unknown Location"},1957:{sn:"Mid Yell",ln:"Mid Yell, Yell"},1958:{sn:"Unknown Location",ln:"Unknown Location"},1959:{sn:"Westerham",ln:"Westerham, West Kent"},
1960:{sn:"Unknown Location",ln:"Unknown Location"},1961:{sn:"Unknown Location",ln:"Unknown Location"},1962:{sn:"Winchester",ln:"Winchester"},1963:{sn:"Wincanton",ln:"Wincanton"},1964:{sn:"Hornsea and Patrington",ln:"Hornsea and Patrington, Withernsea"},1965:{sn:"Unknown Location",ln:"Unknown Location"},1966:{sn:"Unknown Location",ln:"Unknown Location"},1967:{sn:"Strontian",ln:"Strontian"},1968:{sn:"Penicuik",ln:"Penicuik, West Linton"},1969:{sn:"Leyburn",ln:"Leyburn, Wensleydale"},1970:{sn:"Aberystwyth",
ln:"Aberystwyth, Ystwyth"},1971:{sn:"Scourie",ln:"Scourie, Wrath"},1972:{sn:"Glenborrodale",ln:"Glenborrodale"},1973:{sn:"Unknown Location",ln:"Unknown Location"},1974:{sn:"Llanon",ln:"Llanon, Ystwyth"},1975:{sn:"Alford",ln:"Alford, Aberdeenshire and Strathdon, Water"},1976:{sn:"Unknown Location",ln:"Unknown Location"},1977:{sn:"Pontefract",ln:"Pontefract, West Riding"},1978:{sn:"Wrexham",ln:"Wrexham"},1979:{sn:"Unknown Location",ln:"Unknown Location"},1980:{sn:"Amesbury",ln:"Amesbury, Wiltshire"},
1981:{sn:"Wormbridge",ln:"Wormbridge"},1982:{sn:"Builth Wells",ln:"Builth Wells"},1983:{sn:"Isle of Wight",ln:"Isle of Wight"},1984:{sn:"Watchet",ln:"Watchet"},1985:{sn:"Warminster",ln:"Warminster"},1986:{sn:"Bungay",ln:"Bungay, Waveney"},1987:{sn:"Ebbsfleet",ln:"Ebbsfleet"},1988:{sn:"Wigtown",ln:"Wigtown"},1989:{sn:"Ross on Wye",ln:"Ross on Wye, Wye"},1990:{sn:"Unknown Location",ln:"Unknown Location"},1991:{sn:"Unknown Location",ln:"Unknown Location"},1992:{sn:"Lea Valley",ln:"Lea Valley, Waltham X"},
1993:{sn:"Witney",ln:"Witney"},1994:{sn:"St Clears",ln:"St Clears, West Wales"},1995:{sn:"Garstang",ln:"Garstang, Wyre"},1996:{sn:"Unknown Location",ln:"Unknown Location"},1997:{sn:"Strathpeffer",ln:"Strathpeffer, Wyvis"},1998:{sn:"Unknown Location",ln:"Unknown Location"},1999:{sn:"Unknown Location",ln:"Unknown Location"},13873:{sn:"Langholm",ln:"Langholm"},15242:{sn:"Hornby-with-Farleton",ln:"Hornby-with-Farleton"},15394:{sn:"Hawkshead",ln:"Hawkshead"},15395:{sn:"Grange-over-Sands",ln:"Grange-over-Sands"},
15396:{sn:"Sedbergh",ln:"Sedbergh"},16973:{sn:"Wigton",ln:"Wigton"},16974:{sn:"Raughton Head",ln:"Raughton Head"},16977:{sn:"Hallbankgate/Brampton",ln:"Hallbankgate/Brampton"},17683:{sn:"Appleby",ln:"Appleby"},17684:{sn:"Pooley Bridge",ln:"Pooley Bridge"},17687:{sn:"Keswick",ln:"Keswick"},19467:{sn:"Gosforth",ln:"Gosforth"}};
ilib.data.area_IN={11:{sn:"New Delhi",ln:"New Delhi, New Delhi"},20:{sn:"Pune",ln:"Pune, Pune"},22:{sn:"Mumbai",ln:"Mumbai, Mumbai"},33:{sn:"Kolkata",ln:"Kolkata, Kolkata"},40:{sn:"Hyderabad Loc",ln:"Hyderabad Loc, Hyderabad"},44:{sn:"Chennai",ln:"Chennai, Chennai"},79:{sn:"Ahemdabad",ln:"Ahemdabad Local, Ahmedabad"},80:{sn:"Bangalore",ln:"Bangalore, Bangalore"},120:{sn:"Ghaziabad+Dadri",ln:"Ghaziabad+Dadri, Ghaziabad"},121:{sn:"Meerut",ln:"Meerut, Meerut"},122:{sn:"Hapur",ln:"Hapur, Ghaziabad"},
124:{sn:"Gurgaon",ln:"Gurgaon, Gurgaon"},129:{sn:"Faridabad",ln:"Faridabad, Gurgaon"},130:{sn:"Sonipat",ln:"Sonipat, Sonipat"},131:{sn:"Muzaffar Nagar",ln:"Muzaffar Nagar, Muzaffarnagar"},132:{sn:"Saharanpur",ln:"Saharanpur, Saharanpur"},135:{sn:"Dehradun",ln:"Dehradun, Dehradun"},141:{sn:"Jaipur",ln:"Jaipur, Jaipur"},144:{sn:"Alwar",ln:"Alwar, Alwar"},145:{sn:"Ajmer",ln:"Ajmer, Ajmer"},151:{sn:"Bikaner (S)",ln:"Bikaner (S), Bikaner"},154:{sn:"Sriganganagar",ln:"Sriganganagar, Sriganganagar"},160:{sn:"Kharar",
ln:"Kharar, Ropar"},161:{sn:"Ludhiana",ln:"Ludhiana, Ludhiana"},164:{sn:"Bhatinda",ln:"Bhatinda, Bhatinda"},171:{sn:"Ambala",ln:"Ambala, Ambala"},172:{sn:"Chandigarh",ln:"Chandigarh, Chandigarh"},175:{sn:"Patiala",ln:"Patiala, Patiala"},177:{sn:"Shimla",ln:"Shimla, Shimla"},180:{sn:"Panipat",ln:"Panipat, Karnal"},181:{sn:"Jallandhar",ln:"Jallandhar, Jalandhar"},183:{sn:"Amritsar",ln:"Amritsar, Amritsar"},184:{sn:"Karnal",ln:"Karnal, Karnal"},186:{sn:"Pathankot",ln:"Pathankot, Pathankot"},191:{sn:"Jammu",
ln:"Jammu, Jammu"},194:{sn:"Srinagar",ln:"Srinagar, Srinagar"},212:{sn:"Chinchwad",ln:"Chinchwad, Pune"},215:{sn:"Navi Mumbai",ln:"Navi Mumbai (Turbhe), Mumbai"},217:{sn:"Sholapur",ln:"Sholapur, Sholapur"},230:{sn:"Khadakwasala",ln:"Khadakwasala, Pune"},231:{sn:"Kolhapur",ln:"Kolhapur, Kolhapur"},233:{sn:"Sangli",ln:"Sangli, Sangli"},241:{sn:"Ahmednagar",ln:"Ahmednagar, Ahmednagar"},250:{sn:"Bassein",ln:"Bassein, Kalyan"},251:{sn:"Kalyan",ln:"Kalyan, Kalyan"},253:{sn:"Nasikcity",ln:"Nasikcity, Nasik"},
257:{sn:"Jalgaon",ln:"Jalgaon, Jalgaon"},260:{sn:"Vapi",ln:"Vapi, Valsad"},261:{sn:"Surat",ln:"Surat, Surat"},265:{sn:"Vadodara",ln:"Vadodara, Vadodara"},268:{sn:"Nadiad",ln:"Nadiad, Nadiad"},278:{sn:"Bhavnagar",ln:"Bhavnagar, Bhavnagar"},281:{sn:"Rajkot",ln:"Rajkot, Rajkot"},285:{sn:"Junagarh",ln:"Junagarh, Junagarh"},286:{sn:"Porbander",ln:"Porbander, Junagarh"},288:{sn:"Jamnagar",ln:"Jamnagar, Jamnagar"},291:{sn:"Jodhpur (E)",ln:"Jodhpur (E), Jodhpur"},294:{sn:"Girwa",ln:"Girwa (Udaipur), Udaipur"},
326:{sn:"Dhanbad",ln:"Dhanbad, Dhanbad"},341:{sn:"Asansol",ln:"Asansol, Asansol"},342:{sn:"Burdwan",ln:"Burdwan, Asansol"},343:{sn:"Durgapur",ln:"Durgapur, Asansol"},353:{sn:"Siliguri",ln:"Siliguri, Darjeeling (Siliguri)"},354:{sn:"Darjeeling",ln:"Darjeeling, Darjeeling (Siliguri)"},360:{sn:"Itanagar",ln:"Itanagar, Arunachal-Pradesh (Zero)"},361:{sn:"Guwahati",ln:"Guwahati, Guwahati"},364:{sn:"Shillong",ln:"Shillong, Meghalaya (Shillong)"},368:{sn:"Passighat",ln:"Passighat, Arunachal-Pradesh (Zero)"},
369:{sn:"Mokokchung",ln:"Mokokchung, Nagaland (Kohima)"},370:{sn:"Kohima",ln:"Kohima, Nagaland (Kohima)"},372:{sn:"Lungleh",ln:"Lungleh, Mizoram (Aizwal)"},373:{sn:"Dibrugarh",ln:"Dibrugarh, Tinsukia (Dibrugarh)"},374:{sn:"Tinsukhia",ln:"Tinsukhia, Tinsukia (Dibrugarh)"},376:{sn:"Jorhat",ln:"Jorhat, Jorhat"},381:{sn:"Agartala",ln:"Agartala, Tripura (Agartala)"},385:{sn:"Imphal",ln:"Imphal, Manipur (Imphal)"},389:{sn:"Aizawal",ln:"Aizawal-I, Mizoram (Aizwal)"},413:{sn:"Pondicherry",ln:"Pondicherry, Pondichery"},
416:{sn:"Vellore",ln:"Vellore, Vellore"},421:{sn:"Tirupur",ln:"Tirupur, Coimbatore"},422:{sn:"Coimbatore",ln:"Coimbatore, Coimbatore"},423:{sn:"Ootacamund",ln:"Ootacamund, Ooty"},424:{sn:"Erode",ln:"Erode, Erode"},427:{sn:"Salem",ln:"Salem, Salem"},431:{sn:"Trichy",ln:"Trichy, Trichy"},435:{sn:"Kumbakonam",ln:"Kumbakonam, Thanjavur"},451:{sn:"Dindigul",ln:"Dindigul, Madurai"},452:{sn:"Madurai",ln:"Madurai, Madurai"},461:{sn:"Tuticorin",ln:"Tuticorin, Tuticorin"},462:{sn:"Tirunelvelli",ln:"Tirunelvelli, Tirunelvelli"},
469:{sn:"Tiruvalla",ln:"Tiruvalla, Tiruvalla"},470:{sn:"Attingal",ln:"Attingal, Thiruvananthapuram"},471:{sn:"Thiruvananthapuram",ln:"Thiruvananthapuram, Thiruvananthapuram"},474:{sn:"Quilon",ln:"Quilon, Quilon"},475:{sn:"Punalur",ln:"Punalur, Quilon"},476:{sn:"Karunagapally",ln:"Karunagapally, Quilon"},477:{sn:"Alleppey",ln:"Alleppey, Alleppy"},478:{sn:"Shertallai",ln:"Shertallai, Alleppy"},479:{sn:"Mavelikkara",ln:"Mavelikkara, Alleppy"},480:{sn:"Irinjalakuda",ln:"Irinjalakuda, Trichur"},481:{sn:"Kottayam",
ln:"Kottayam, Kottayam"},483:{sn:"Manjeri",ln:"Manjeri, Calicut (Kozhikode)"},484:{sn:"Ernakulam",ln:"Ernakulam, Ernakulam"},485:{sn:"Muvattupuzha",ln:"Muvattupuzha, Ernakulam"},487:{sn:"Trichur",ln:"Trichur, Trichur"},490:{sn:"Tellicherry",ln:"Tellicherry, Cannanore"},491:{sn:"Palghat",ln:"Palghat, Palghat"},494:{sn:"Tirur",ln:"Tirur, Calicut (Kozhikode)"},495:{sn:"Calicut",ln:"Calicut, Calicut (Kozhikode)"},496:{sn:"Badagara",ln:"Badagara, Calicut (Kozhikode)"},497:{sn:"Cannanore",ln:"Cannanore, Cannanore"},
512:{sn:"Kanpur",ln:"Kanpur, Kanpur"},515:{sn:"Unnao",ln:"Unnao, Unnao"},522:{sn:"Lucknow",ln:"Lucknow, Lucknow"},532:{sn:"Allahabad",ln:"Allahabad, Allahabad"},535:{sn:"Raibareli",ln:"Raibareli, Raibareilly"},542:{sn:"Varansi",ln:"Varansi, Varansi"},548:{sn:"Ghazipur",ln:"Ghazipur, Ghazipur"},551:{sn:"Gorakhpur",ln:"Gorakhpur, Gorakhpur"},562:{sn:"Agra",ln:"Agra, Agra"},565:{sn:"Mathura",ln:"Mathura, Mathura"},571:{sn:"Aligarh",ln:"Aligarh, Aligarh"},581:{sn:"Bareilly",ln:"Bareilly, Bareilly"},591:{sn:"Moradabad",
ln:"Moradabad, Moradabad"},595:{sn:"Rampur",ln:"Rampur, Rampur"},612:{sn:"Patna",ln:"Patna, Patna"},621:{sn:"Muzaffarpur",ln:"Muzaffarpur, Muzaffarpur"},631:{sn:"Gaya",ln:"Gaya, Gaya"},641:{sn:"Bhagalpur",ln:"Bhagalpur, Bhagalpur"},651:{sn:"Ranchi",ln:"Ranchi, Ranchi"},657:{sn:"Jamshedpur",ln:"Jamshedpur, Jamshedpur"},661:{sn:"Rourkela",ln:"Rourkela, Sundargarh (Rourkela)"},663:{sn:"Sambalpur",ln:"Sambalpur, Sambalpur"},671:{sn:"Cuttack",ln:"Cuttack, Cuttack"},674:{sn:"Bhubaneshwar",ln:"Bhubaneshwar, Bhubaneswar (Puri)"},
680:{sn:"Berhampur",ln:"Berhampur, Berhampur"},712:{sn:"Nagpur",ln:"Nagpur, Nagpur"},721:{sn:"Amravati",ln:"Amravati, Amravati"},724:{sn:"Akola",ln:"Akola, Akola"},731:{sn:"Indore",ln:"Indore, Indore"},733:{sn:"Khandwa",ln:"Khandwa, Khandwa"},734:{sn:"Ujjain",ln:"Ujjain, Ujjain"},744:{sn:"Ladpura",ln:"Ladpura (Kota), Kota"},747:{sn:"Bundi",ln:"Bundi, Bundi"},751:{sn:"Gwalior",ln:"Gwalior, Gwalior"},755:{sn:"Bhopal",ln:"Bhopal, Bhopal"},761:{sn:"Jabalpur",ln:"Jabalpur, Jabalpur"},771:{sn:"Raipur",
ln:"Raipur, Raipur"},788:{sn:"Durg",ln:"Durg, Durg"},816:{sn:"Tumkur",ln:"Tumkur, Tumkur"},820:{sn:"Udupi",ln:"Udupi, Dakshin-Kanada (Mangalore)"},821:{sn:"Mysore",ln:"Mysore, Mysore"},824:{sn:"Mangalore",ln:"Mangalore, Dakshin-Kanada (Mangalore)"},831:{sn:"Belgaum",ln:"Belgaum, Belgaum"},832:{sn:"Panji",ln:"Panji, Panji"},836:{sn:"Hubli",ln:"Hubli, Hubli"},861:{sn:"Nellore",ln:"Nellore, Nellore"},863:{sn:"Guntur",ln:"Guntur, Guntur"},866:{sn:"Vijayawada",ln:"Vijayawada, Vijayawada"},870:{sn:"Warangal",
ln:"Warangal, Warangal"},877:{sn:"Tirupathi",ln:"Tirupathi, Chittoor"},878:{sn:"Karimnagar",ln:"Karimnagar, Karimnagar"},883:{sn:"Rajahmundri",ln:"Rajahmundri, Rajahmundri"},884:{sn:"Kakinada",ln:"Kakinada, Rajahmundri"},891:{sn:"Visakhapatnam",ln:"Visakhapatnam, Visakhapatnam"},1232:{sn:"Modinagar",ln:"Modinagar, Ghaziabad"},1233:{sn:"Mawana",ln:"Mawana, Meerut"},1234:{sn:"Baghpat",ln:"Baghpat-II (Baraut), Meerut"},1237:{sn:"Sardhana",ln:"Sardhana, Meerut"},1250:{sn:"Charkhidadri",ln:"Charkhidadri, Rohtak"},
1251:{sn:"Jhajjar",ln:"Jhajjar, Rohtak"},1252:{sn:"Loharu",ln:"Loharu, Rohtak"},1253:{sn:"Tohsham",ln:"Tohsham, Rohtak"},1254:{sn:"Bawanikhera",ln:"Bawanikhera, Rohtak"},1255:{sn:"Siwani",ln:"Siwani, Rohtak"},1257:{sn:"Meham",ln:"Meham, Rohtak"},1258:{sn:"Kalanaur",ln:"Kalanaur, Rohtak"},1259:{sn:"Kosli",ln:"Kosli, Narnaul"},1262:{sn:"Rohtak",ln:"Rohtak, Rohtak"},1263:{sn:"Gohana",ln:"Gohana, Sonipat"},1267:{sn:"Nuh",ln:"Nuh, Gurgaon"},1268:{sn:"Ferojpur",ln:"Ferojpur, Gurgaon"},1274:{sn:"Rewari",
ln:"Rewari, Narnaul"},1275:{sn:"Palwal",ln:"Palwal, Gurgaon"},1276:{sn:"Bahadurgarh",ln:"Bahadurgarh, Rohtak"},1281:{sn:"Jatusana",ln:"Jatusana, Narnaul"},1282:{sn:"Narnaul",ln:"Narnaul, Narnaul"},1284:{sn:"Bawal",ln:"Bawal, Narnaul"},1285:{sn:"Mohindergarh",ln:"Mohindergarh, Narnaul"},1331:{sn:"Nakur",ln:"Nakur (Gangoh), Saharanpur"},1332:{sn:"Roorkee",ln:"Roorkee-I, Saharanpur"},1334:{sn:"Roorkee",ln:"Roorkee-II (Hardwar), Saharanpur"},1336:{sn:"Deoband",ln:"Deoband, Saharanpur"},1341:{sn:"Najibabad",
ln:"Najibabad, Bijnore"},1342:{sn:"Bijnore",ln:"Bijnore-I, Bijnore"},1343:{sn:"Nagina",ln:"Nagina, Bijnore"},1344:{sn:"Dhampur",ln:"Dhampur, Bijnore"},1345:{sn:"Bijnore",ln:"Bijnore-II (Chandpur), Bijnore"},1346:{sn:"Pauri",ln:"Pauri-II (Bubakhal), Kotdwara"},1348:{sn:"Lansdown",ln:"Lansdown-III (Syunsi), Kotdwara"},1360:{sn:"Chakrata",ln:"Chakrata (Dakpather), Dehradun"},1363:{sn:"Karan Prayag",ln:"Karan Prayag, Kotdwara"},1364:{sn:"Ukhimath",ln:"Ukhimath (Guptkashi), Kotdwara"},1368:{sn:"Pauri",
ln:"Pauri-I, Kotdwara"},1370:{sn:"Deoprayag",ln:"Deoprayag-II (Jakholi), Uttarkashi"},1371:{sn:"Dunda",ln:"Dunda, Uttarkashi"},1372:{sn:"Chamoli",ln:"Chamoli, Kotdwara"},1373:{sn:"Purola",ln:"Purola, Uttarkashi"},1374:{sn:"Bhatwari",ln:"Bhatwari-I (Uttarkashi), Uttarkashi"},1375:{sn:"Rajgarhi",ln:"Rajgarhi, Uttarkashi"},1376:{sn:"Tehri",ln:"Tehri, Uttarkashi"},1377:{sn:"Bhatwari",ln:"Bhatwari-I (Gangotri), Uttarkashi"},1378:{sn:"Deoprayag",ln:"Deoprayag-I, Uttarkashi"},1379:{sn:"Partapnagar",ln:"Partapnagar, Uttarkashi"},
1381:{sn:"Joshimath",ln:"Joshimath-II (Badrinath), Kotdwara"},1382:{sn:"Lansdown",ln:"Lansdown-II (Kotdwara), Kotdwara"},1386:{sn:"Lansdown",ln:"Lansdown-I, Kotdwara"},1389:{sn:"Joshimath",ln:"Joshimath-I, Kotdwara"},1392:{sn:"Budhana",ln:"Budhana, Muzaffarnagar"},1396:{sn:"Jansath",ln:"Jansath (Khatauli), Muzaffarnagar"},1398:{sn:"Kairana",ln:"Kairana (Shamli), Muzaffarnagar"},1420:{sn:"Baswa",ln:"Baswa (Bandikui), Jaipur"},1421:{sn:"Kotputli",ln:"Kotputli, Jaipur"},1422:{sn:"Viratnagar",ln:"Viratnagar (Shahpura), Jaipur"},
1423:{sn:"Amber",ln:"Amber (Chomu), Jaipur"},1424:{sn:"Phulera (E)",ln:"Phulera (E) (Renwal), Jaipur"},1425:{sn:"Phulera (W)",ln:"Phulera (W) (Sambhar), Jaipur"},1426:{sn:"Jamwa-Ramgarh",ln:"Jamwa-Ramgarh (Achrol), Jaipur"},1427:{sn:"Dausa",ln:"Dausa, Jaipur"},1428:{sn:"Dudu",ln:"Dudu, Jaipur"},1429:{sn:"Bassi",ln:"Bassi, Jaipur"},1430:{sn:"Phagi",ln:"Phagi, Jaipur"},1431:{sn:"Lalsot",ln:"Lalsot, Jaipur"},1432:{sn:"Tonk (S)",ln:"Tonk (S), Tonk"},1433:{sn:"Todaraisingh",ln:"Todaraisingh, Tonk"},1434:{sn:"Deoli",
ln:"Deoli, Tonk"},1435:{sn:"Tonk (N)",ln:"Tonk (N) (Piploo), Tonk"},1436:{sn:"Uniayara",ln:"Uniayara, Tonk"},1437:{sn:"Malpura",ln:"Malpura, Tonk"},1438:{sn:"Newai",ln:"Newai, Tonk"},1460:{sn:"Kishangarhbas",ln:"Kishangarhbas (Khairthal), Alwar"},1461:{sn:"Bansur",ln:"Bansur, Alwar"},1462:{sn:"Beawar",ln:"Beawar, Ajmer"},1463:{sn:"Kishangarh (S)",ln:"Kishangarh (S), Ajmer"},1464:{sn:"Rajgarh",ln:"Rajgarh, Alwar"},1465:{sn:"Thanaghazi",ln:"Thanaghazi, Alwar"},1466:{sn:"Kekri (W)",ln:"Kekri (W) (Bhinai), Ajmer"},
1467:{sn:"Kekri (E)",ln:"Kekri (E), Ajmer"},1468:{sn:"Ramgarh",ln:"Ramgarh, Alwar"},1469:{sn:"Tijara (S)",ln:"Tijara (S), Alwar"},1470:{sn:"Dungla",ln:"Dungla, Chittorgarh"},1471:{sn:"Rashmi",ln:"Rashmi, Chittorgarh"},1472:{sn:"Chittorgarh",ln:"Chittorgarh, Chittorgarh"},1473:{sn:"Barisadri",ln:"Barisadri, Chittorgarh"},1474:{sn:"Begun (N)",ln:"Begun (N), Chittorgarh"},1475:{sn:"Begun (S)",ln:"Begun (S) (Rawatbhata), Chittorgarh"},1476:{sn:"Kapasan",ln:"Kapasan, Chittorgarh"},1477:{sn:"Nimbahera",
ln:"Nimbahera, Chittorgarh"},1478:{sn:"Pratapgarh (N)",ln:"Pratapgarh (N), Chittorgarh"},1479:{sn:"Pratapgarh (S)",ln:"Pratapgarh (S) (Arnod), Chittorgarh"},1480:{sn:"Asind",ln:"Asind, Bhilwara"},1481:{sn:"Raipur",ln:"Raipur, Bhilwara"},1482:{sn:"Bhilwara",ln:"Bhilwara, Bhilwara"},1483:{sn:"Hurda",ln:"Hurda (Gulabpura), Bhilwara"},1484:{sn:"Shahapura",ln:"Shahapura, Bhilwara"},1485:{sn:"Jahazpur",ln:"Jahazpur, Bhilwara"},1486:{sn:"Mandal",ln:"Mandal, Bhilwara"},1487:{sn:"Banera",ln:"Banera, Bhilwara"},
1488:{sn:"Kotri",ln:"Kotri, Bhilwara"},1489:{sn:"Mandalgarh",ln:"Mandalgarh, Bhilwara"},1491:{sn:"Nasirabad",ln:"Nasirabad, Ajmer"},1492:{sn:"Laxmangarh",ln:"Laxmangarh (Kherli), Alwar"},1493:{sn:"Tijara (N)",ln:"Tijara (N) (Bhiwadi), Alwar"},1494:{sn:"Behror",ln:"Behror, Alwar"},1495:{sn:"Mandawar",ln:"Mandawar, Alwar"},1496:{sn:"Sarwar",ln:"Sarwar, Ajmer"},1497:{sn:"Kishangarh (N)",ln:"Kishangarh (N) (Roopangarh), Ajmer"},1498:{sn:"Anupgarh (E)",ln:"Anupgarh (E), Sriganganagar"},1499:{sn:"Sangaria",
ln:"Sangaria, Sriganganagar"},1501:{sn:"Srikaranpur",ln:"Srikaranpur, Sriganganagar"},1502:{sn:"Nohar (W)",ln:"Nohar (W) (Jedasar), Sriganganagar"},1503:{sn:"Sadulshahar",ln:"Sadulshahar, Sriganganagar"},1504:{sn:"Bhadra",ln:"Bhadra, Sriganganagar"},1505:{sn:"Padampur",ln:"Padampur, Sriganganagar"},1506:{sn:"Anupgarh (W)",ln:"Anupgarh (W) (Gharsana), Sriganganagar"},1507:{sn:"Raisinghnagar",ln:"Raisinghnagar, Sriganganagar"},1508:{sn:"Suratgarh (N)",ln:"Suratgarh (N) (Goluwala), Sriganganagar"},1509:{sn:"Suratgarh (S)",
ln:"Suratgarh (S), Sriganganagar"},1520:{sn:"Bikaner (N)",ln:"Bikaner (N) (Chhatargarh), Bikaner"},1521:{sn:"Bikaner (C)",ln:"Bikaner (C) (Jaimalsar), Bikaner"},1522:{sn:"Bikaner (E)",ln:"Bikaner(E) (Jamsar), Bikaner"},1523:{sn:"Bikaner (W)",ln:"Bikaner (W) (Poogal), Bikaner"},1526:{sn:"Lunkaransar",ln:"Lunkaransar-II (Mahajan), Bikaner"},1527:{sn:"Lunkaransar",ln:"Lunkaransar-III (Rajasarb), Bikaner"},1528:{sn:"Lunkaransar",ln:"Lunkaransar-IV, Bikaner"},1529:{sn:"Lunkaransar",ln:"Lunkaransar-IV and -I (Kanholi), Bikaner"},
1531:{sn:"Nokha (E)",ln:"Nokha (E), Bikaner"},1532:{sn:"Nokha (W)",ln:"Nokha (W) (Nathusar), Bikaner"},1533:{sn:"Kolayat",ln:"Kolayat-I (Goddo), Bikaner"},1534:{sn:"Kolayat",ln:"Kolayat-II, Bikaner"},1535:{sn:"Kolayat",ln:"Kolayat-II and -III (Bajju), Bikaner"},1536:{sn:"Kolayat",ln:"Kolayat-IV (Daitra), Bikaner"},1537:{sn:"Nohar (C)",ln:"Nohar (C) (Rawatsar), Sriganganagar"},1539:{sn:"Tibbi",ln:"Tibbi, Sriganganagar"},1552:{sn:"Hanumangarh",ln:"Hanumangarh, Sriganganagar"},1555:{sn:"Nohar (E)",ln:"Nohar (E), Sriganganagar"},
1559:{sn:"Rajgarh",ln:"Rajgarh, Churu"},1560:{sn:"Sujangarh (C)",ln:"Sujangarh (C) (Bidasar), Churu"},1561:{sn:"Taranagar",ln:"Taranagar, Churu"},1562:{sn:"Churu",ln:"Churu, Churu"},1563:{sn:"Sardarshahar (N)",ln:"Sardarshahar (N)-Jaitsisar, Churu"},1564:{sn:"Sardarshahar (S)",ln:"Sardarshahar (S), Churu"},1565:{sn:"Sridungargarh (N)",ln:"Sridungargarh (N)-Dungargh, Churu"},1566:{sn:"Sridungargarh (S)",ln:"Sridungargarh (S) (Sudsar), Churu"},1567:{sn:"Ratangarh",ln:"Ratangarh, Churu"},1568:{sn:"Sujangarh (E)",
ln:"Sujangarh (E), Churu"},1569:{sn:"Sujangarh (W)",ln:"Sujangarh (W) (Lalgarh), Churu"},1570:{sn:"Laxmangarh (W)",ln:"Laxmangarh (W) (Nechwa), Sikar"},1571:{sn:"Fatehpur",ln:"Fatehpur, Sikar"},1572:{sn:"Sikar",ln:"Sikar, Sikar"},1573:{sn:"Laxmangarh (E)",ln:"Laxmangarh (E), Sikar"},1574:{sn:"Neem Ka Thana",ln:"Neem Ka Thana, Sikar"},1575:{sn:"Srimadhopur",ln:"Srimadhopur, Sikar"},1576:{sn:"Dantaramgarh (E)",ln:"Dantaramgarh (E) (Shyamji), Sikar"},1577:{sn:"Dantaramgarh (W)",ln:"Dantaramgarh (W), Sikar"},
1580:{sn:"Deedwana",ln:"Deedwana, Nagaur"},1581:{sn:"Ladnun",ln:"Ladnun, Nagaur"},1582:{sn:"Nagaur (N)",ln:"Nagaur (N), Nagaur"},1583:{sn:"Jayal",ln:"Jayal, Nagaur"},1584:{sn:"Nagaur (E)",ln:"Nagaur (E) (Mundwa Marwar), Nagaur"},1585:{sn:"Nagaur (W)",ln:"Nagaur (W) (Khinwsar), Naguar"},1586:{sn:"Nawa",ln:"Nawa (Kuchamancity), Nagaur"},1587:{sn:"Degana",ln:"Degana, Nagaur"},1588:{sn:"Parbatsar (N)",ln:"Parbatsar (N) (Makrana), Nagaur"},1589:{sn:"Parbatsar (S)",ln:"Parbatsar (S), Nagaur"},1590:{sn:"Merta (E)",
ln:"Merta (E) (Merta-City), Nagaur"},1591:{sn:"Merta (W)",ln:"Merta (W) (Gotan), Nagaur"},1592:{sn:"Jhunjhunu (S)",ln:"Jhunjhunu (S), Jhunjhunu"},1593:{sn:"Khetri",ln:"Khetri, Jhunjhunu"},1594:{sn:"Udaipurwati",ln:"Udaipurwati, Jhunjhunu"},1595:{sn:"Jhunjhunu (N)",ln:"Jhunjhunu (N) (Bissau), Jhunjhunu"},1596:{sn:"Chirawa",ln:"Chirawa, Jhunjhunu"},1624:{sn:"Jagraon",ln:"Jagraon, Ludhiana"},1628:{sn:"Samrala",ln:"Samrala, Ludhiana"},1632:{sn:"Ferozepur",ln:"Ferozepur, Ferozepur"},1633:{sn:"Muktasar",
ln:"Muktasar, Ferozepur"},1634:{sn:"Abohar",ln:"Abohar, Ferozepur"},1635:{sn:"Kotkapura",ln:"Kotkapura, Ferozepur"},1636:{sn:"Moga",ln:"Moga, Ferozepur"},1637:{sn:"Malaut",ln:"Malaut, Ferozepur"},1638:{sn:"Fazilka",ln:"Fazilka, Ferozepur"},1639:{sn:"Faridakot",ln:"Faridakot, Ferozepur"},1651:{sn:"Phulmandi",ln:"Phulmandi, Bhatinda"},1652:{sn:"Mansa",ln:"Mansa, Bhatinda"},1655:{sn:"Raman",ln:"Raman, Bhatinda"},1659:{sn:"Sardulgarh",ln:"Sardulgarh, Bhatinda"},1662:{sn:"Hissar",ln:"Hissar, Hissar"},
1663:{sn:"Hansi",ln:"Hansi, Hissar"},1664:{sn:"Bhiwani",ln:"Bhiwani, Rohtak"},1666:{sn:"Sirsa",ln:"Sirsa, Hissar"},1667:{sn:"Fatehabad",ln:"Fatehabad, Hissar"},1668:{sn:"Dabwali",ln:"Dabwali, Hissar"},1669:{sn:"Adampur Mandi",ln:"Adampur Mandi, Hissar"},1672:{sn:"Sangrur",ln:"Sangrur, Sangrur"},1675:{sn:"Malerkotla",ln:"Malerkotla, Sangrur"},1676:{sn:"Sunam",ln:"Sunam, Sangrur"},1679:{sn:"Barnala",ln:"Barnala, Sangrur"},1681:{sn:"Jind",ln:"Jind, Jind"},1682:{sn:"Zira",ln:"Zira, Ferozepur"},1683:{sn:"Julana",
ln:"Julana, Jind"},1684:{sn:"Narwana",ln:"Narwana, Jind"},1685:{sn:"Guruharsahai",ln:"Guruharsahai, Ferozepur"},1686:{sn:"Safidon",ln:"Safidon, Jind"},1692:{sn:"Tohana",ln:"Tohana, Hissar"},1693:{sn:"Barwala",ln:"Barwala, Hissar"},1696:{sn:"Kalanwali",ln:"Kalanwali, Hissar"},1697:{sn:"Ratia",ln:"Ratia, Hissar"},1698:{sn:"Ellenabad",ln:"Ellenabad, Hissar"},1702:{sn:"Nahan",ln:"Nahan, Solan"},1704:{sn:"Paonta",ln:"Paonta, Solan"},1731:{sn:"Barara",ln:"Barara, Ambala"},1732:{sn:"Jagadhari",ln:"Jagadhari, Ambala"},
1733:{sn:"Kalka",ln:"Kalka, Ambala"},1734:{sn:"Naraingarh",ln:"Naraingarh, Ambala"},1735:{sn:"Chaaharauli",ln:"Chaaharauli, Ambala"},1741:{sn:"Pehowa",ln:"Pehowa, Karnal"},1743:{sn:"Cheeka",ln:"Cheeka, Karnal"},1744:{sn:"Kurukshetra",ln:"Kurukshetra, Karnal"},1745:{sn:"Nilokheri",ln:"Nilokheri, Karnal"},1746:{sn:"Kaithal",ln:"Kaithal, Karnal"},1748:{sn:"Gharaunda",ln:"Gharaunda, Karnal"},1749:{sn:"Assandh",ln:"Assandh, Karnal"},1762:{sn:"Rajpura",ln:"Rajpura, Patiala"},1763:{sn:"Sarhind",ln:"Sarhind, Patiala"},
1764:{sn:"Samana",ln:"Samana, Patiala"},1765:{sn:"Nabha",ln:"Nabha, Patiala"},1781:{sn:"Rohru",ln:"Rohru, Shimla"},1782:{sn:"Rampur Bushahar",ln:"Rampur Bushahar, Shimla"},1783:{sn:"Theog",ln:"Theog, Shimla"},1785:{sn:"Pooh",ln:"Pooh, Shimla"},1786:{sn:"Kalpa",ln:"Kalpa, Shimla"},1792:{sn:"Solan",ln:"Solan, Solan"},1795:{sn:"Nalagarh",ln:"Nalagarh, Solan"},1796:{sn:"Arki",ln:"Arki, Solan"},1799:{sn:"Rajgarh",ln:"Rajgarh, Solan"},1821:{sn:"Nakodar",ln:"Nakodar, Jalandhar"},1822:{sn:"Kapurthala",ln:"Kapurthala, Jalandhar"},
1823:{sn:"Nawanshahar",ln:"Nawanshahar, Jalandhar"},1824:{sn:"Phagwara",ln:"Phagwara, Jalandhar"},1826:{sn:"Phillaur",ln:"Phillaur, Jalandhar"},1828:{sn:"Sultanpur Lodhi",ln:"Sultanpur Lodhi, Jalandhar"},1851:{sn:"Patti",ln:"Patti, Amritsar"},1852:{sn:"Taran Taran",ln:"Taran Taran, Amritsar"},1853:{sn:"Rayya",ln:"Rayya, Amritsar"},1858:{sn:"Ajnala",ln:"Ajnala, Amritsar"},1859:{sn:"Goindwal",ln:"Goindwal, Amritsar"},1870:{sn:"Jugial",ln:"Jugial, Pathankot"},1871:{sn:"Batala",ln:"Batala, Pathankot"},
1872:{sn:"Quadian",ln:"Quadian, Pathankot"},1874:{sn:"Gurdaspur",ln:"Gurdaspur, Pathankot"},1875:{sn:"Dinanagar",ln:"Dinanagar, Pathankot"},1881:{sn:"Ropar",ln:"Ropar, Ropar"},1882:{sn:"Hoshiarpur",ln:"Hoshiarpur, Hosiarpur"},1883:{sn:"Dasua",ln:"Dasua, Hosiarpur"},1884:{sn:"Garhashanker",ln:"Garhashanker, Hosiarpur"},1885:{sn:"Balachaur",ln:"Balachaur, Hosiarpur"},1886:{sn:"Tanda Urmar",ln:"Tanda Urmar, Hosiarpur"},1887:{sn:"Nangal",ln:"Nangal, Ropar"},1892:{sn:"Kangra",ln:"Kangra (Dharamsala), Kangra (Dharamsala)"},
1893:{sn:"Nurpur",ln:"Nurpur, Kangra (Dharamsala)"},1894:{sn:"Palampur",ln:"Palampur, Kangra (Dharamsala)"},1895:{sn:"Bharmour",ln:"Bharmour, Kangra (Dharamsala)"},1896:{sn:"Churah",ln:"Churah (Tissa), Kangra (Dharamsala)"},1897:{sn:"Pangi",ln:"Pangi (Killar), Kandra (Dharamsala)"},1899:{sn:"Chamba",ln:"Chamba, Kangra (Dharamsala)"},1900:{sn:"Lahul",ln:"Lahul (Keylong), Kullu"},1902:{sn:"Kullu",ln:"Kullu, Kullu"},1903:{sn:"Banjar",ln:"Banjar, Kullu"},1904:{sn:"Nirmand",ln:"Nirmand, Kullu"},1905:{sn:"Mandi",
ln:"Mandi, Mandi"},1906:{sn:"Spiti",ln:"Spiti (Kaza), Kullu"},1907:{sn:"Sundernagar",ln:"Sundernagar, Mandi"},1908:{sn:"Jogindernagar",ln:"Jogindernagar, Mandi"},1909:{sn:"Udaipur",ln:"Udaipur, Kullu"},1921:{sn:"Basholi",ln:"Basholi, Jammu"},1922:{sn:"Kathua",ln:"Kathua, Jammu"},1923:{sn:"Samba",ln:"Samba, Jammu"},1924:{sn:"Akhnoor",ln:"Akhnoor, Jammu"},1931:{sn:"Kulgam",ln:"Kulgam, Srinagar"},1932:{sn:"Anantnag",ln:"Anantnag, Srinagar"},1933:{sn:"Pulwama",ln:"Pulwama, Srinagar"},1936:{sn:"Pahalgam",
ln:"Pahalgam, Srinagar"},1951:{sn:"Badgam",ln:"Badgam, Srinagar"},1952:{sn:"Baramulla",ln:"Baramulla, Srinagar"},1954:{sn:"Sopore",ln:"Sopore, Srinagar"},1955:{sn:"Kupwara",ln:"Kupwara, Srinagar"},1956:{sn:"Uri",ln:"Uri, Srinagar"},1957:{sn:"Bandipur",ln:"Bandipur, Srinagar"},1958:{sn:"Karnah",ln:"Karnah, Srinagar"},1960:{sn:"Nowshera",ln:"Nowshera, Rajouri"},1962:{sn:"Rajouri",ln:"Rajouri, Rajouri"},1964:{sn:"Kalakot",ln:"Kalakot, Rajouri"},1965:{sn:"Poonch",ln:"Poonch, Rajouri"},1970:{sn:"Dehra Gopipur",
ln:"Dehra Gopipur, Kangra (Dharamsala)"},1972:{sn:"Hamirpur",ln:"Hamirpur, Hamirpur"},1975:{sn:"Una",ln:"Una, Hamirpur"},1976:{sn:"Amb",ln:"Amb, Hamirpur"},1978:{sn:"Bilaspur",ln:"Bilaspur, Hamirpur"},1980:{sn:"Nobra",ln:"Nobra, Leh"},1981:{sn:"Nyoma",ln:"Nyoma, Leh"},1982:{sn:"Leh",ln:"Leh, Leh"},1983:{sn:"Zanaskar",ln:"Zanaskar, Leh"},1985:{sn:"Kargil",ln:"Kargil, Leh"},1990:{sn:"Ramnagar",ln:"Ramnagar, Udhampur"},1991:{sn:"Reasi",ln:"Reasi, Udhampur"},1992:{sn:"Udhampur",ln:"Udhampur, Udhampur"},
1995:{sn:"Kishtwar",ln:"Kishtwar, Udhampur"},1996:{sn:"Doda",ln:"Doda, Udhampur"},1997:{sn:"Bedarwah",ln:"Bedarwah, Udhampur"},1998:{sn:"Ramban",ln:"Ramban, Udhampur"},1999:{sn:"Mahore",ln:"Mahore, Udhampur"},2111:{sn:"Indapur",ln:"Indapur, Pune"},2112:{sn:"Baramati",ln:"Baramati, Pune"},2113:{sn:"Bhor",ln:"Bhor, Pune"},2114:{sn:"Lonavala",ln:"Lonavala, Pune"},2115:{sn:"Saswad",ln:"Saswad, Pune"},2117:{sn:"Daund",ln:"Daund, Pune"},2118:{sn:"Walchandnagar",ln:"Walchandnagar, Pune"},2119:{sn:"Kedgaon",
ln:"Kedgaon, Pune"},2130:{sn:"Velhe",ln:"Velhe, Pune"},2132:{sn:"Junnar",ln:"Junnar, Pune"},2133:{sn:"Manchar",ln:"Manchar, Pune"},2135:{sn:"Rajgurunagar",ln:"Rajgurunagar, Pune"},2136:{sn:"Urlikanchan",ln:"Urlikanchan, Pune"},2137:{sn:"Nahavara",ln:"Nahavara, Pune"},2138:{sn:"Shirur",ln:"Shirur, Pune"},2139:{sn:"Pirangut",ln:"Pirangut, Pune"},2140:{sn:"Mangaon",ln:"Mangaon, Pen"},2141:{sn:"Alibagh",ln:"Alibagh, Pen"},2142:{sn:"Pali",ln:"Pali, Pen"},2143:{sn:"Pen",ln:"Pen, Pen"},2144:{sn:"Murud",
ln:"Murud, Pen"},2145:{sn:"Mahad",ln:"Mahad, Pen"},2147:{sn:"Shrivardhan",ln:"Shrivardhan, Pen"},2148:{sn:"Karjat",ln:"Karjat, Pen"},2149:{sn:"Mahasala",ln:"Mahasala, Pen"},2160:{sn:"Sakarwadi",ln:"Sakarwadi, Satara"},2161:{sn:"Vaduj",ln:"Vaduj, Satara"},2162:{sn:"Satara",ln:"Satara, Satara"},2163:{sn:"Koregaon",ln:"Koregaon, Satara"},2164:{sn:"Karad",ln:"Karad, Satara"},2165:{sn:"Dhiwadi",ln:"Dhiwadi, Satara"},2166:{sn:"Phaltan",ln:"Phaltan, Satara"},2167:{sn:"Wai",ln:"Wai, Satara"},2168:{sn:"Mahabaleswar",
ln:"Mahabaleswar, Satara"},2169:{sn:"Shirwal",ln:"Shirwal, Satara"},2181:{sn:"Akkalkot",ln:"Akkalkot, Sholapur"},2182:{sn:"Karmala",ln:"Karmala, Sholapur"},2183:{sn:"Madha",ln:"Madha, Sholapur"},2184:{sn:"Barsi",ln:"Barsi, Sholapur"},2185:{sn:"Malsuras",ln:"Malsuras, Sholapur"},2186:{sn:"Pandharpur",ln:"Pandharpur, Sholapur"},2187:{sn:"Sangola",ln:"Sangola, Sholapur"},2188:{sn:"Mangalwedha",ln:"Mangalwedha, Sholapur"},2189:{sn:"Mohol",ln:"Mohol, Sholapur"},2191:{sn:"Poladpur",ln:"Poladpur, Pen"},
2192:{sn:"Khopoli",ln:"Khopoli, Pen"},2194:{sn:"Roha",ln:"Roha, Pen"},2320:{sn:"Chandgad",ln:"Chandgad, Kolhapur"},2321:{sn:"Radhanagar",ln:"Radhanagar, Kolhapur"},2322:{sn:"Shirol",ln:"Shirol (Jalsingpur), Kolhapur"},2323:{sn:"Ajara",ln:"Ajara, Kolhapur"},2324:{sn:"Hatkangale",ln:"Hatkangale (Ichalkaranji), Kolhapur"},2325:{sn:"Kagal",ln:"Kagal (Murgud), Kolhapur"},2326:{sn:"Gaganbavada",ln:"Gaganbavada, Kolhapur"},2327:{sn:"Gadhinglaj",ln:"Gadhinglaj, Kolhapur"},2328:{sn:"Panhala",ln:"Panhala, Kolhapur"},
2329:{sn:"Shahuwadi",ln:"Shahuwadi (Malakapur), Kolhapur"},2341:{sn:"Kavathemankal",ln:"Kavathemankal, Sangli"},2342:{sn:"Islampur",ln:"Islampur, Sangli"},2343:{sn:"Atpadi",ln:"Atpadi, Sangli"},2344:{sn:"Jath",ln:"Jath, Sangli"},2345:{sn:"Shirala",ln:"Shirala, Sangli"},2346:{sn:"Tasgaon",ln:"Tasgaon, Sangli"},2347:{sn:"Vita",ln:"Vita, Sangli"},2350:{sn:"Madangad",ln:"Madangad, Ratnagiri"},2351:{sn:"Langa",ln:"Langa, Ratnagiri"},2352:{sn:"Ratnagiri",ln:"Ratnagiri, Ratnagiri"},2353:{sn:"Rajapur",ln:"Rajapur, Ratnagiri"},
2354:{sn:"Sanganeshwar",ln:"Sanganeshwar (Deorukh), Ratnagiri"},2355:{sn:"Chiplun",ln:"Chiplun, Ratnagiri"},2356:{sn:"Khed",ln:"Khed, Ratnagiri"},2357:{sn:"Malgund",ln:"Malgund, Ratnagiri"},2358:{sn:"Dapoli",ln:"Dapoli, Ratnagiri"},2359:{sn:"Guhagar",ln:"Guhagar, Ratnagiri"},2362:{sn:"Kudal",ln:"Kudal, Kudal"},2363:{sn:"Sawantwadi",ln:"Sawantwadi, Kudal"},2364:{sn:"Deogad",ln:"Deogad, Kudal"},2365:{sn:"Malwan",ln:"Malwan, Kudal"},2366:{sn:"Vengurla",ln:"Vengurla, Kudal"},2367:{sn:"Kankavali",ln:"Kankavali, Kudal"},
2371:{sn:"Wathar",ln:"Wathar, Satara"},2372:{sn:"Patan",ln:"Patan, Satara"},2373:{sn:"Mahaswad",ln:"Mahaswad, Satara"},2375:{sn:"Pusegaon",ln:"Pusegaon, Satara"},2378:{sn:"Medha",ln:"Medha, Satara"},2381:{sn:"Ahmedpur",ln:"Ahmedpur, Latur"},2382:{sn:"Latur",ln:"Latur, Latur"},2383:{sn:"Ausa",ln:"Ausa, Latur"},2384:{sn:"Nilanga",ln:"Nilanga, Latur"},2385:{sn:"Udgir",ln:"Udgir, Latur"},2421:{sn:"Jamkhed",ln:"Jamkhed, Ahmednagar"},2422:{sn:"Shri Rampur",ln:"Shri Rampur, Ahmednagar"},2423:{sn:"Koparagon",
ln:"Koparagon, Ahmednagar"},2424:{sn:"Akole",ln:"Akole, Ahmednagar"},2425:{sn:"Sangamner",ln:"Sangamner, Ahmednagar"},2426:{sn:"Rahuri",ln:"Rahuri, Ahmednagar"},2427:{sn:"Newasa",ln:"Newasa, Ahmednagar"},2428:{sn:"Pathardi",ln:"Pathardi, Ahmednagar"},2429:{sn:"Shevgaon",ln:"Shevgaon, Ahmednagar"},2430:{sn:"Sillod",ln:"Sillod, Aurangabad"},2431:{sn:"Paithan",ln:"Paithan, Aurangabad"},2432:{sn:"Aurangabad",ln:"Aurangabad, Aurangabad"},2433:{sn:"Gangapur",ln:"Gangapur, Aurangabad"},2435:{sn:"Kannad",
ln:"Kannad, Aurangabad"},2436:{sn:"Vijapur",ln:"Vijapur, Aurangabad"},2437:{sn:"Khultabad",ln:"Khultabad, Aurangabad"},2438:{sn:"Soyegaon",ln:"Soyegaon, Aurangabad"},2439:{sn:"Golegaon",ln:"Golegaon, Aurangabad"},2441:{sn:"Ashti",ln:"Ashti, Bhir"},2442:{sn:"Bhir",ln:"Bhir, Bhir"},2443:{sn:"Manjalegaon",ln:"Manjalegaon, Bhir"},2444:{sn:"Patoda",ln:"Patoda, Bhir"},2445:{sn:"Kaij",ln:"Kaij, Bhir"},2446:{sn:"Ambejogai",ln:"Ambejogai, Bhir"},2447:{sn:"Gevrai",ln:"Gevrai, Bhir"},2451:{sn:"Pathari",ln:"Pathari, Parbhani"},
2452:{sn:"Parbhani",ln:"Parbhani, Parbhani"},2453:{sn:"Gangakhed",ln:"Gangakhed, Parbhani"},2454:{sn:"Basmatnagar",ln:"Basmatnagar, Parbhani"},2455:{sn:"Kalamnuri",ln:"Kalamnuri, Parbhani"},2456:{sn:"Hingoli",ln:"Hingoli, Parbhani"},2457:{sn:"Jintdor",ln:"Jintdor, Parbhani"},2460:{sn:"Delhi Tanda",ln:"Delhi Tanda, Nanded"},2461:{sn:"Mukhed",ln:"Mukhed, Nanded"},2462:{sn:"Nanded",ln:"Nanded, Nanded"},2463:{sn:"Degloor",ln:"Degloor, Nanded"},2465:{sn:"Billoli",ln:"Billoli, Nanded"},2466:{sn:"Kandhar",
ln:"Kandhar, Nanded"},2467:{sn:"Bhokar",ln:"Bhokar, Nanded"},2468:{sn:"Hadgaon",ln:"Hadgaon, Nanded"},2469:{sn:"Kinwat",ln:"Kinwat, Nanded"},2471:{sn:"Tuljapur",ln:"Tuljapur, Osmanabad"},2472:{sn:"Osmanabad",ln:"Osmanabad, Osmanabad"},2473:{sn:"Kallam",ln:"Kallam, Osmanabad"},2475:{sn:"Omerga",ln:"Omerga, Osmanabad"},2477:{sn:"Paranda",ln:"Paranda, Osmanabad"},2478:{sn:"Bhoom",ln:"Bhoom, Osmanabad"},2481:{sn:"Ner",ln:"Ner, Jalna"},2482:{sn:"Jalna",ln:"Jalna, Jalna"},2483:{sn:"Ambad",ln:"Ambad, Jalna"},
2484:{sn:"Partur",ln:"Partur, Jalna"},2485:{sn:"Bhokardan",ln:"Bhokardan, Jalna"},2487:{sn:"Shrigonda",ln:"Shrigonda, Ahmednagar"},2488:{sn:"Parner",ln:"Parner, Ahmednagar"},2489:{sn:"Karjat",ln:"Karjat, Ahmednagar"},2520:{sn:"Jawahar",ln:"Jawahar, Kalyan"},2521:{sn:"Talasari",ln:"Talasari, Kalyan"},2522:{sn:"Bhiwandi",ln:"Bhiwandi, Kalyan"},2524:{sn:"Murbad",ln:"Murbad, Kalyan"},2525:{sn:"Palghar",ln:"Palghar, Kalyan"},2526:{sn:"Wada",ln:"Wada, Kalyan"},2527:{sn:"Shahapur",ln:"Shahapur, Kalyan"},
2528:{sn:"Dahanu",ln:"Dahanu, Kalyan"},2529:{sn:"Mokhada",ln:"Mokhada, Kalyan"},2550:{sn:"Niphad",ln:"Niphad, Nasik"},2551:{sn:"Sinnar",ln:"Sinnar, Nasik"},2552:{sn:"Nandgaon",ln:"Nandgaon, Nasik"},2553:{sn:"Igatpuri",ln:"Igatpuri, Nasik"},2554:{sn:"Malegaon",ln:"Malegaon, Nasik"},2555:{sn:"Satana",ln:"Satana, Nasik"},2556:{sn:"Chanwad",ln:"Chanwad, Nasik"},2557:{sn:"Dindori",ln:"Dindori, Nasik"},2558:{sn:"Peint",ln:"Peint, Nasik"},2559:{sn:"Yeola",ln:"Yeola, Nasik"},2560:{sn:"Kusumba",ln:"Kusumba, Dhulia"},
2561:{sn:"Pimpalner",ln:"Pimpalner, Dhulia"},2562:{sn:"Dhule",ln:"Dhule, Dhulia"},2563:{sn:"Shirpur",ln:"Shirpur, Dhulia"},2564:{sn:"Nandurbar",ln:"Nandurbar, Dhulia"},2565:{sn:"Shahada",ln:"Shahada, Dhulia"},2566:{sn:"Sindkheda",ln:"Sindkheda, Dhulia"},2567:{sn:"Taloda",ln:"Taloda, Dhulia"},2568:{sn:"Sakri",ln:"Sakri, Dhulia"},2569:{sn:"Navapur",ln:"Navapur, Dhulia"},2580:{sn:"Jamner",ln:"Jamner, Jalgaon"},2582:{sn:"Bhusawal",ln:"Bhusawal, Jalgaon"},2583:{sn:"Edalabad",ln:"Edalabad, Jalgaon"},2584:{sn:"Raver",
ln:"Raver, Jalgaon"},2585:{sn:"Yawal",ln:"Yawal, Jalgaon"},2586:{sn:"Chopda",ln:"Chopda, Jalgaon"},2587:{sn:"Amalner",ln:"Amalner, Jalgaon"},2588:{sn:"Erandul",ln:"Erandul, Jalgaon"},2589:{sn:"Chalisgaon",ln:"Chalisgaon, Jalgaon"},2591:{sn:"Manmad",ln:"Manmad, Nasik"},2592:{sn:"Kalwan",ln:"Kalwan, Nasik"},2593:{sn:"Surgena",ln:"Surgena, Nasik"},2594:{sn:"Trimbak",ln:"Trimbak, Nasik"},2595:{sn:"Dhadgaon",ln:"Dhadgaon, Dhulia"},2596:{sn:"Pachora",ln:"Pachora, Jalgaon"},2597:{sn:"Parola",ln:"Parola, Jalgaon"},
2598:{sn:"Umrane",ln:"Umrane, Nasik"},2599:{sn:"Bhudargad",ln:"Bhudargad (Gargoti), Kolhapur"},2621:{sn:"Sayan",ln:"Sayan, Surat"},2622:{sn:"Bardoli",ln:"Bardoli, Surat"},2623:{sn:"Mandvi",ln:"Mandvi, Surat"},2624:{sn:"Fortsongadh",ln:"Fortsongadh, Surat"},2625:{sn:"Valod",ln:"Valod, Surat"},2626:{sn:"Vyara",ln:"Vyara, Surat"},2628:{sn:"Nizar",ln:"Nizar, Surat"},2629:{sn:"M. M. Mangrol",ln:"M. M. Mangrol, Surat"},2630:{sn:"Bansada",ln:"Bansada, Valsad"},2631:{sn:"Ahwa",ln:"Ahwa, Valsad"},2632:{sn:"Valsad",
ln:"Valsad, Valsad"},2633:{sn:"Dharampur",ln:"Dharampur, Valsad"},2634:{sn:"Billimora",ln:"Billimora, Valsad"},2637:{sn:"Navsari",ln:"Navsari, Valsad"},2640:{sn:"Rajpipla",ln:"Rajpipla, Bharuch"},2641:{sn:"Amod",ln:"Amod, Bharuch"},2642:{sn:"Bharuch",ln:"Bharuch, Bharuch"},2643:{sn:"Valia",ln:"Valia, Bharuch"},2644:{sn:"Jambusar",ln:"Jambusar, Bharuch"},2645:{sn:"Jhagadia",ln:"Jhagadia, Bharuch"},2646:{sn:"Ankleshwar",ln:"Ankleshwar, Bharuch"},2649:{sn:"Dediapada",ln:"Dediapada, Bharuch"},2661:{sn:"Naswadi",
ln:"Naswadi, Vadodara"},2662:{sn:"Padra",ln:"Padra, Vadodara"},2663:{sn:"Dabhoi",ln:"Dabhoi, Vadodara"},2664:{sn:"Pavijetpur",ln:"Pavijetpur, Vadodara"},2665:{sn:"Sankheda",ln:"Sankheda, Vadodara"},2666:{sn:"Miyagam",ln:"Miyagam, Vadodara"},2667:{sn:"Savli",ln:"Savli, Vadodara"},2668:{sn:"Waghodia",ln:"Waghodia, Vadodara"},2669:{sn:"Chhota Udaipur",ln:"Chhota Udaipur, Vadodara"},2670:{sn:"Shehra",ln:"Shehra, Godhra"},2672:{sn:"Godhra",ln:"Godhra, Godhra"},2673:{sn:"Dahod",ln:"Dahod, Godhra"},2674:{sn:"Lunavada",
ln:"Lunavada, Godhra"},2675:{sn:"Santrampur",ln:"Santrampur, Godhra"},2676:{sn:"Halol",ln:"Halol, Godhra"},2677:{sn:"Limkheda",ln:"Limkheda, Godhra"},2678:{sn:"Devgadhbaria",ln:"Devgadhbaria, Godhra"},2679:{sn:"Jhalod",ln:"Jhalod, Godhra"},2690:{sn:"Balasinor",ln:"Balasinor, Nadiad"},2691:{sn:"Kapad Wanj",ln:"Kapad Wanj, Nadiad"},2692:{sn:"Anand",ln:"Anand, Nadiad"},2694:{sn:"Kheda",ln:"Kheda, Nadiad"},2696:{sn:"Borsad",ln:"Borsad, Nadiad"},2697:{sn:"Retlad",ln:"Retlad, Nadiad"},2698:{sn:"Khambat",
ln:"Khambat, Nadiad"},2699:{sn:"Thasra",ln:"Thasra, Nadiad"},2711:{sn:"Barwala",ln:"Barwala, Ahmedabad"},2712:{sn:"Gandhi Nagar",ln:"Gandhi Nagar, Ahmedabad"},2713:{sn:"Dhandhuka",ln:"Dhandhuka, Ahmedabad"},2714:{sn:"Dholka",ln:"Dholka, Ahmedabad"},2715:{sn:"Viramgam",ln:"Viramgam, Ahmedabad"},2716:{sn:"Dehgam",ln:"Dehgam, Ahmedabad"},2717:{sn:"Sanand",ln:"Sanand, Ahmedabad"},2718:{sn:"Bareja",ln:"Bareja, Ahmedabad"},2733:{sn:"Harij",ln:"Harij, Mehsana"},2734:{sn:"Chanasma",ln:"Chanasma, Mehsana"},
2735:{sn:"Deodar",ln:"Deodar, Palanpur"},2737:{sn:"Tharad",ln:"Tharad, Palanpur"},2738:{sn:"Santalpur",ln:"Santalpur, Palanpur"},2739:{sn:"Vadgam",ln:"Vadgam, Palanpur"},2740:{sn:"Vav",ln:"Vav, Palanpur"},2742:{sn:"Palanpur",ln:"Palanpur, Palanpur"},2744:{sn:"Deesa",ln:"Deesa, Palanpur"},2746:{sn:"Radhanpur",ln:"Radhanpur, Palanpur"},2747:{sn:"Thara",ln:"Thara, Palanpur"},2748:{sn:"Dhanera",ln:"Dhanera, Palanpur"},2749:{sn:"Danta",ln:"Danta, Palanpur"},2751:{sn:"Chotila",ln:"Chotila, Surendranagar"},
2752:{sn:"Surendranagar",ln:"Surendranagar, Surendranagar"},2753:{sn:"Limbdi",ln:"Limbdi, Surendranagar"},2754:{sn:"Dhrangadhra",ln:"Dhrangadhra, Surendranagar"},2755:{sn:"Sayla",ln:"Sayla, Surendranagar"},2756:{sn:"Muli",ln:"Muli, Surendranagar"},2757:{sn:"Dasada",ln:"Dasada, Surendranagar"},2758:{sn:"Halvad",ln:"Halvad, Surendranagar"},2759:{sn:"Lakhtar",ln:"Lakhtar, Surendranagar"},2761:{sn:"Kheralu",ln:"Kheralu, Mehsana"},2762:{sn:"Mehsana",ln:"Mehsana, Mehsana"},2763:{sn:"Vijapur",ln:"Vijapur, Mehsana"},
2764:{sn:"Kalol",ln:"Kalol, Mehsana"},2765:{sn:"Visnagar",ln:"Visnagar, Mehsana"},2766:{sn:"Patan",ln:"Patan, Mehsana"},2767:{sn:"Sidhpur",ln:"Sidhpur, Mehsana"},2770:{sn:"Prantij",ln:"Prantij, Himatnagar"},2771:{sn:"Bhiloda",ln:"Bhiloda, Himatnagar"},2772:{sn:"Himatnagar",ln:"Himatnagar, Himatnagar"},2773:{sn:"Malpur",ln:"Malpur, Himatnagar"},2774:{sn:"Modasa",ln:"Modasa, Himatnagar"},2775:{sn:"Khedbrahma",ln:"Khedbrahma, Himatnagar"},2778:{sn:"Idar",ln:"Idar, Himatnagar"},2779:{sn:"Bayad",ln:"Bayad, Himatnagar"},
2791:{sn:"Babra",ln:"Babra, Amreli"},2792:{sn:"Amreli",ln:"Amreli, Amreli"},2793:{sn:"Damnagar",ln:"Damnagar, Amreli"},2794:{sn:"Rajula",ln:"Rajula, Amreli"},2795:{sn:"Kodinar",ln:"Kodinar, Junagarh"},2796:{sn:"Kunkawav",ln:"Kunkawav, Amreli"},2797:{sn:"Dhari",ln:"Dhari, Amreli"},2801:{sn:"Ranavav",ln:"Ranavav, Junagarh"},2803:{sn:"Khavda",ln:"Khavda, Bhuj"},2804:{sn:"Kutiyana",ln:"Kutiyana, Junagarh"},2806:{sn:"Gogodar",ln:"Gogodar, Bhuj"},2808:{sn:"Sumrasar",ln:"Sumrasar, Bhuj"},2820:{sn:"Paddhari",
ln:"Paddhari, Rajkot"},2821:{sn:"Jasdan",ln:"Jasdan, Rajkot"},2822:{sn:"Morvi",ln:"Morvi, Rajkot"},2823:{sn:"Jetpur",ln:"Jetpur, Rajkot"},2824:{sn:"Dhoraji",ln:"Dhoraji, Rajkot"},2825:{sn:"Gondal",ln:"Gondal, Rajkot"},2826:{sn:"Upleta",ln:"Upleta, Rajkot"},2827:{sn:"Kotdasanghani",ln:"Kotdasanghani, Rajkot"},2828:{sn:"Wankaner",ln:"Wankaner, Rajkot"},2829:{sn:"Maliya Miyana",ln:"Maliya Miyana, Rajkot"},2830:{sn:"Rahpar",ln:"Rahpar, Bhuj"},2831:{sn:"Nalia",ln:"Nalia, Bhuj"},2832:{sn:"Bhuj",ln:"Bhuj, Bhuj"},
2833:{sn:"Khambhalia",ln:"Khambhalia, Jamnagar"},2834:{sn:"Kutchmandvi",ln:"Kutchmandvi, Bhuj"},2835:{sn:"Nakhatrana",ln:"Nakhatrana, Bhuj"},2836:{sn:"Anjar",ln:"Anjar (Gandhidham), Bhuj"},2837:{sn:"Bhachav",ln:"Bhachav, Bhuj"},2838:{sn:"Mundra",ln:"Mundra, Bhuj"},2839:{sn:"Lakhpat",ln:"Lakhpat, Bhuj"},2841:{sn:"Vallabhipur",ln:"Vallabhipur, Bhavnagar"},2842:{sn:"Talaja",ln:"Talaja, Bhavnagar"},2843:{sn:"Gariadhar",ln:"Gariadhar, Bhavnagar"},2844:{sn:"Mahuva",ln:"Mahuva, Bhavnagar"},2845:{sn:"Savarkundla",
ln:"Savarkundla, Amreli"},2846:{sn:"Sihor",ln:"Sihor, Bhavnagar"},2847:{sn:"Gadhada",ln:"Gadhada, Bhavnagar"},2848:{sn:"Palitana",ln:"Palitana, Bhavnagar"},2849:{sn:"Botad",ln:"Botad, Bhavnagar"},2870:{sn:"Malia-Hatina",ln:"Malia-Hatina, Junagarh"},2871:{sn:"Keshod",ln:"Keshod, Junagarh"},2872:{sn:"Vanthali",ln:"Vanthali, Junagarh"},2873:{sn:"Visavadar",ln:"Visavadar, Junagarh"},2874:{sn:"Manavadar",ln:"Manavadar, Junagarh"},2875:{sn:"Una-Diu",ln:"Una-Diu, Junagarh"},2876:{sn:"Veraval",ln:"Veraval, Junagarh"},
2877:{sn:"Talala",ln:"Talala, Junagarh"},2878:{sn:"Mangrol",ln:"Mangrol, Junagarh"},2891:{sn:"Jamkalyanpur",ln:"Jamkalyanpur, Jamnagar"},2892:{sn:"Okha",ln:"Okha, Jamnagar"},2893:{sn:"Jodia",ln:"Jodia, Jamnagar"},2894:{sn:"Kalawad",ln:"Kalawad, Jamnagar"},2895:{sn:"Lalpur",ln:"Lalpur, Jamnagar"},2896:{sn:"Bhanvad",ln:"Bhanvad, Jamnagar"},2897:{sn:"Dhrol",ln:"Dhrol, Jamnagar"},2898:{sn:"Jamjodhpur",ln:"Jamjodhpur, Jamnagar"},2900:{sn:"Siwana (E)",ln:"Siwana (E) (Samdari), Barmer"},2901:{sn:"Siwana (W)",
ln:"Siwana (W), Barmer"},2902:{sn:"Barmer (N)",ln:"Barmer (N) (Kanot), Barmer"},2903:{sn:"Chohtan (S)",ln:"Chohtan (S) (Gangasar), Barmer"},2904:{sn:"Deogarh",ln:"Deogarh, Udaipur"},2905:{sn:"Sarada",ln:"Sarada (Chawand), Udaipur"},2906:{sn:"Salumber",ln:"Salumber, Udaipur"},2907:{sn:"Kherwara",ln:"Kherwara, Udaipur"},2908:{sn:"Amet",ln:"Amet, Udaipur"},2909:{sn:"Bhim (S)",ln:"Bhim (S) (Dawer), Udaipur"},2920:{sn:"Bilara (N)",ln:"Bilara (N) (Bhopalgarh), Jodhpur"},2921:{sn:"Phalodi (N)",ln:"Phalodi (N) (Bap), Jodhpur"},
2922:{sn:"Osian (N)",ln:"Osian (N), Jodhpur"},2923:{sn:"Phalodi (E)",ln:"Phalodi (E) (Lohawat), Jodhpur"},2924:{sn:"Phalodi (W)",ln:"Phalodi (W) (Baroo), Jodhpur"},2925:{sn:"Phalodi (S)",ln:"Phalodi (S), Jodhpur"},2926:{sn:"Osian (S)",ln:"Osian (S) (Mathania), Jodhpur"},2927:{sn:"Osian (E)",ln:"Osian (E) (Dhanwara), Jodhpur"},2928:{sn:"Shergarh (N)",ln:"Shergarh (N) (Deechu), Jodhpur"},2929:{sn:"Shergarh (N)",ln:"Shergarh (N) (Balesar), Jodhpur"},2930:{sn:"Bilara (S)",ln:"Bilara (S) (Piparcity), Jodhpur"},
2931:{sn:"Jodhpur (W)",ln:"Jodhpur (W) (Jhanwar), Jodhpur"},2932:{sn:"Pali (S)",ln:"Pali (S), Pali (Marwar)"},2933:{sn:"Bali (N)",ln:"Bali (N) (Sumerpur), Pali (Marwar)"},2934:{sn:"Desuri",ln:"Desuri (Rani), Pali (Marwar)"},2935:{sn:"Marwar-JN",ln:"Marwar-JN, Pali (Marwar)"},2936:{sn:"Pali (N)",ln:"Pali (N) (Rohat), Pali (Marwar)"},2937:{sn:"Raipur",ln:"Raipur, Pali (Marwar)"},2938:{sn:"Bali (S)",ln:"Bali (S), Pali (Marwar)"},2939:{sn:"Jaitaran",ln:"Jaitaran, Pali (Marwar)"},2950:{sn:"Dhariawad",
ln:"Dhariawad, Udaipur"},2951:{sn:"Bhim (N)",ln:"Bhim (N), Udaipur"},2952:{sn:"Rajsamand",ln:"Rajsamand (Kankorli), Udaipur"},2953:{sn:"Nathdwara",ln:"Nathdwara, Udaipur"},2954:{sn:"Kumbalgarh",ln:"Kumbalgarh (Charbhujaji), Udaipur"},2955:{sn:"Malvi",ln:"Malvi (Fatehnagar), Udaipur"},2956:{sn:"Gogunda",ln:"Gogunda, Udaipur"},2957:{sn:"Vallabhnagar",ln:"Vallabhnagar, Udaipur"},2958:{sn:"Kotra",ln:"Kotra, Udaipur"},2959:{sn:"Jhadol",ln:"Jhadol, Udaipur"},2960:{sn:"Sojat",ln:"Sojat (Sojat-City), Pali (Marwar)"},
2961:{sn:"Ghatol",ln:"Ghatol, Banswara"},2962:{sn:"Banswara",ln:"Banswara, Banswara"},2963:{sn:"Gerhi",ln:"Gerhi (Partapur), Banswara"},2964:{sn:"Dungarpur",ln:"Dungarpur, Banswara"},2965:{sn:"Kushalgarh",ln:"Kushalgarh, Banswara"},2966:{sn:"Sagwara",ln:"Sagwara, Banswara"},2967:{sn:"Aspur",ln:"Aspur, Banswara"},2968:{sn:"Bagidora",ln:"Bagidora, Banswara"},2969:{sn:"Bhinmal (N)",ln:"Bhinmal (N), Sirohi (Abu-Road)"},2970:{sn:"Sanchore (W)",ln:"Sanchore (W) (Hadecha), Sirohi (Abu-Road)"},2971:{sn:"Pindwara",
ln:"Pindwara, Sirohi (Abu-Road)"},2972:{sn:"Sirohi",ln:"Sirohi, Sirohi (Abu-Road)"},2973:{sn:"Jalore",ln:"Jalore, Sirohi (Abu-Road)"},2974:{sn:"Abu Road",ln:"Abu Road, Sirohi (Abu-Road)"},2975:{sn:"Reodar",ln:"Reodar, Sirohi (Abu-Road)"},2976:{sn:"Sheoganj",ln:"Sheoganj (Posaliyan), Sirohi (Abu-Road)"},2977:{sn:"Jalore (W)",ln:"Jalore (W) (Sayla), Sirohi (Abu-Road)"},2978:{sn:"Ahore",ln:"Ahore, Sirohi (Abu-Road)"},2979:{sn:"Sanchore (E)",ln:"Sanchore (E), Sirohi (Abu-Road)"},2980:{sn:"Pachpadra (E)",
ln:"Pachpadra (E) (Korna), Barmer"},2981:{sn:"Sheo (W)",ln:"Sheo (W) (Harsani), Barmer"},2982:{sn:"Barmer (C)",ln:"Barmer (C), Barmer"},2983:{sn:"Barmer (E)",ln:"Barmer (E) (Gudda), Barmer"},2984:{sn:"Barmer (S)",ln:"Barmer (S) Sindari, Barmer"},2985:{sn:"Barmer (W)",ln:"Barmer (W) (Ramsar), Barmer"},2986:{sn:"Barmer (SW)",ln:"Barmer (SW) (Dhorimanna), Barmer"},2987:{sn:"Sheo (E)",ln:"Sheo (E), Barmer"},2988:{sn:"Pachpadra (W)",ln:"Pachpadra (W) (Balotra), Barmer"},2989:{sn:"Chohtan (N)",ln:"Chohtan (N), Barmer"},
2990:{sn:"Bhinmal (S)",ln:"Bhinmal (S) (Jasawantpura), Sirohi (Abu-Road)"},2991:{sn:"Jaisalmer",ln:"Jaisalmer-1 (Ramgarh), Jaisalmer"},2992:{sn:"Jaisalmer",ln:"Jaisalmer-11 (Jaisalmer), Jaisalmer"},2993:{sn:"Jaisalmer",ln:"Jaisalmer-12 (Devikot), Jaisalmer"},2994:{sn:"Pokran",ln:"Pokran-4 (Pokran), Jaisalmer"},2995:{sn:"Pokran",ln:"Pokran-1 (Nachna), Jaisalmer"},2996:{sn:"Pokran",ln:"Pokran-3 (Loharki), Jaisalmer"},2997:{sn:"Jaisalmer",ln:"Jaisalmer-7 (Mohargarh), Jaisalmer"},2998:{sn:"Jaisalmer",
ln:"Jaisalmer-5 (Khuiyals), Jaisalmer"},2999:{sn:"Jaisalmer",ln:"Jaisalmer-3 (Nehdai), Jaisalmer"},3010:{sn:"Jaisalmer",ln:"Jaisalmer-4 (Shahgarh), Jaisalmer"},3011:{sn:"Jaisalmer",ln:"Jaisalmer-6 (Pasewar), Jaisalmer"},3012:{sn:"Jaisalmer",ln:"Jaisalmer-8 (Mehsana), Jaisalmer"},3013:{sn:"Jaisalmer",ln:"Jaisalmer-9 (Dhanaua), Jaisalmer"},3014:{sn:"Jaisalmer",ln:"Jaisalmer-10 (Khuri), Jaisalmer"},3015:{sn:"Jaisalmer",ln:"Jaisalmer-13 (Myajlar), Jaisalmer"},3016:{sn:"Jaisalmer",ln:"Jaisalmer-14 (Jheenjaniyali), Jaisalmer"},
3017:{sn:"Pokran",ln:"Pokran-2 (Madasar), Jaisalmer"},3018:{sn:"Jaisalmer",ln:"Jaisalmer-2 (Sadhna), Jaisalmer"},3019:{sn:"Pokran",ln:"Pokran-5 (Phalsoond), Jaisalmer"},3174:{sn:"Diamond Harbour",ln:"Diamond Harbour, Kolkata"},3192:{sn:"Andaman Islands",ln:"Andaman Islands, Andaman & Nicobar Islands"},3193:{sn:"Nicobar Islands",ln:"Nicobar Islands, Andaman & Nicobar Islands"},3210:{sn:"Kakdwip",ln:"Kakdwip, Kolkata"},3211:{sn:"Arambag",ln:"Arambag, Kolkata"},3212:{sn:"Champadanga",ln:"Champadanga, Kolkata"},
3213:{sn:"Dhaniakhali",ln:"Dhaniakhali, Kolkata"},3214:{sn:"Jagatballavpur",ln:"Jagatballavpur, Kolkata"},3215:{sn:"Bongoan",ln:"Bongoan, Kolkata"},3216:{sn:"Habra",ln:"Habra, Kolkata"},3217:{sn:"Basirhat",ln:"Basirhat, Kolkata"},3218:{sn:"Canning",ln:"Canning, Kolkata"},3220:{sn:"Contai",ln:"Contai, Midnapur (Kharagpur)"},3221:{sn:"Jhargram",ln:"Jhargram, Midnapur (Kharagpur)"},3222:{sn:"Kharagpur",ln:"Kharagpur, Midnapur (Kharagpur)"},3223:{sn:"Nayagarh",ln:"Nayagarh (Kultikri), Midnapur (Kharagpur)"},
3224:{sn:"Haldia",ln:"Haldia, Midnapur (Kharagpur)"},3225:{sn:"Ghatal",ln:"Ghatal, Midnapur (Kharagpur)"},3227:{sn:"Amlagora",ln:"Amlagora, Midnapur (Kharagpur)"},3228:{sn:"Tamluk",ln:"Tamluk, Midnapur (Kharagpur)"},3229:{sn:"Dantan",ln:"Dantan, Midnapur (Kharagpur)"},3241:{sn:"Gangajalghati",ln:"Gangajalghati, Bankura"},3242:{sn:"Bankura",ln:"Bankura, Bankura"},3243:{sn:"Khatra",ln:"Khatra, Bankura"},3244:{sn:"Bishnupur",ln:"Bishnupur, Bankura"},3251:{sn:"Adra",ln:"Adra, Purulia"},3252:{sn:"Purulia",
ln:"Purulia, Purulia"},3253:{sn:"Manbazar",ln:"Manbazar, Purulia"},3254:{sn:"Jhalda",ln:"Jhalda, Purulia"},3451:{sn:"Seharabazar",ln:"Seharabazar, Asansol"},3452:{sn:"Guskara",ln:"Guskara, Asansol"},3453:{sn:"Katwa",ln:"Katwa, Asansol"},3454:{sn:"Kalna",ln:"Kalna, Asansol"},3461:{sn:"Rampur Hat",ln:"Rampur Hat, Suri"},3462:{sn:"Suri",ln:"Suri, Suri"},3463:{sn:"Bolpur",ln:"Bolpur, Suri"},3465:{sn:"Nalhati",ln:"Nalhati, Suri"},3471:{sn:"Karimpur",ln:"Karimpur, Krishnanagar"},3472:{sn:"Krishna Nagar",
ln:"Krishna Nagar, Krishnanagar"},3473:{sn:"Ranaghat",ln:"Ranaghat, Krishnanagar"},3474:{sn:"Bethuadahari",ln:"Bethuadahari, Krishnanagar"},3481:{sn:"Islampur (M)",ln:"Islampur (M), Berhampur"},3482:{sn:"Berhampur",ln:"Berhampur, Berhampur"},3483:{sn:"Murshidabad",ln:"Murshidabad (Jiaganj), Berhampur"},3484:{sn:"Kandi",ln:"Kandi, Berhampur"},3485:{sn:"Dhuliyan",ln:"Dhuliyan, Berhampur"},3511:{sn:"Bubulchandi",ln:"Bubulchandi, Malda"},3512:{sn:"Malda",ln:"Malda, Malda"},3513:{sn:"Harishchandrapur",
ln:"Harishchandrapur, Malda"},3521:{sn:"Gangarampur",ln:"Gangarampur, Balurghat (Raiganj)"},3522:{sn:"Balurghat",ln:"Balurghat, Balurghat (Raiganj)"},3523:{sn:"Raiganj",ln:"Raiganj, Balurghat (Raiganj)"},3524:{sn:"Harirampur",ln:"Harirampur, Balurghat (Raiganj)"},3525:{sn:"Dalkhola",ln:"Dalkhola, Balurghat (Raiganj)"},3526:{sn:"Islampur",ln:"Islampur (Nd), Balurghat (Raiganj)"},3552:{sn:"Kalimpong",ln:"Kalimpong, Darjeeling (Siliguri)"},3561:{sn:"Jalpaiguri",ln:"Jalpaiguri, Jalpaiguri"},3562:{sn:"Mal Bazar",
ln:"Mal Bazar, Jalpaiguri"},3563:{sn:"Birpara",ln:"Birpara, Jalpaiguri"},3564:{sn:"Alipurduar",ln:"Alipurduar, Jalpaiguri"},3565:{sn:"Nagarakata",ln:"Nagarakata, Jalpaiguri"},3566:{sn:"Kalchini",ln:"Kalchini, Jalpaiguri"},3581:{sn:"Dinhata",ln:"Dinhata, Coochbehar"},3582:{sn:"Coochbehar",ln:"Coochbehar, Coochbehar"},3583:{sn:"Mathabhanga",ln:"Mathabhanga, Coochbehar"},3584:{sn:"Mekhliganj",ln:"Mekhliganj, Coochbehar"},3592:{sn:"Gangtok",ln:"Gangtok, Gangtok"},3595:{sn:"Gauzing",ln:"Gauzing (Nayabazar), Gangtok"},
3621:{sn:"Boko",ln:"Boko, Guwahati"},3623:{sn:"Barama",ln:"Barama, Guwahati"},3624:{sn:"Nalbari",ln:"Nalbari, Guwahati"},3637:{sn:"Cherrapunjee",ln:"Cherrapunjee, Meghalaya (Shillong)"},3638:{sn:"Nongpoh",ln:"Nongpoh, Meghalaya (Shillong)"},3639:{sn:"Baghmara",ln:"Baghmara, Meghalaya (Shillong)"},3650:{sn:"Dadengiri",ln:"Dadengiri (Phulbari), Meghalaya (Shillong)"},3651:{sn:"Tura",ln:"Tura, Meghalaya (Shillong)"},3652:{sn:"Jowai",ln:"Jowai, Meghalaya (Shillong)"},3653:{sn:"Amlaren",ln:"Amlaren (Dawki), Meghalaya (Shillong)"},
3654:{sn:"Nongstoin",ln:"Nongstoin, Meghalaya (Shillong)"},3655:{sn:"Khliehriat",ln:"Khliehriat, Meghalaya (Shillong)"},3656:{sn:"Mawkyrwat",ln:"Mawkyrwat, Meghalaya (Shillong)"},3657:{sn:"Mairang",ln:"Mairang, Meghalaya (Shillong)"},3658:{sn:"Williamnagar",ln:"Williamnagar, Meghalaya (Shillong)"},3659:{sn:"Resubelpara",ln:"Resubelpara (Mendipathar), Meghalaya (Shillong)"},3661:{sn:"Kokrajhar",ln:"Kokrajhar, Bongaigaon (Kokrajhar)"},3662:{sn:"Dhubri",ln:"Dhubri, Bongaigaon (Kokrajhar)"},3663:{sn:"Goalpara",
ln:"Goalpara, Bongaigaon (Kokrajhar)"},3664:{sn:"Hajo",ln:"Hajo, Guwahati"},3665:{sn:"Tarabarihat",ln:"Tarabarihat, Guwahati"},3666:{sn:"Barpeta Road",ln:"Barpeta Road, Guwahati"},3667:{sn:"Bilasipara",ln:"Bilasipara, Bongaigaon (Kokrajhar)"},3668:{sn:"Bijni",ln:"Bijni, Bongaigaon (Kokrajhar)"},3669:{sn:"Abhayapuri",ln:"Abhayapuri, Bongaigaon (Kokrajhar)"},3670:{sn:"Maibong",ln:"Maibong, Nagaon"},3671:{sn:"Diphu",ln:"Diphu, Nagaon"},3672:{sn:"Nagaon",ln:"Nagaon, Nagaon"},3673:{sn:"Haflong",ln:"Haflong, Nagaon"},
3674:{sn:"Hojai",ln:"Hojai, Nagaon"},3675:{sn:"Bokajan",ln:"Bokajan, Nagaon"},3676:{sn:"Howraghat",ln:"Howraghat, Nagaon"},3677:{sn:"Baithalangshu",ln:"Baithalangshu, Nagaon"},3678:{sn:"Morigaon",ln:"Morigaon, Nagaon"},3711:{sn:"Udalguri",ln:"Udalguri, Tezpur"},3712:{sn:"Tezpur",ln:"Tezpur, Tezpur"},3713:{sn:"Mangaldoi",ln:"Mangaldoi, Tezpur"},3714:{sn:"Rangapara",ln:"Rangapara, Tezpur"},3715:{sn:"Gohpur",ln:"Gohpur, Tezpur"},3751:{sn:"Digboi",ln:"Digboi, Tinsukia (Dibrugarh)"},3752:{sn:"North Lakhimpur",
ln:"North Lakhimpur, Tinsukia (Dibrugarh)"},3753:{sn:"Dhemaji",ln:"Dhemaji, Tinsukia (Dibrugarh)"},3754:{sn:"Moranhat",ln:"Moranhat, Tinsukia (Dibrugarh)"},3756:{sn:"Sadiya",ln:"Sadiya, Tinsukia (Dibrugarh)"},3758:{sn:"Dhakuakhana",ln:"Dhakuakhana, Tinsukia (Dibrugarh)"},3759:{sn:"Bihupuria",ln:"Bihupuria, Tinsukia (Dibrugarh)"},3771:{sn:"Mariani",ln:"Mariani, Jorhat"},3772:{sn:"Sibsagar",ln:"Sibsagar, Jorhat"},3774:{sn:"Golaghat",ln:"Golaghat, Jorhat"},3775:{sn:"Majuli",ln:"Majuli, Jorhat"},3776:{sn:"Bokakhat",
ln:"Bokakhat, Jorhat"},3777:{sn:"Yangkiyang",ln:"Yangkiyang, Arunachal-Pradesh (Zero)"},3778:{sn:"Pakkekesang",ln:"Pakkekesang, Arunachal-Pradesh (Zero)"},3779:{sn:"Roing",ln:"Roing-III (Mariso), Arunachal-Pradesh (Zero)"},3780:{sn:"Dirang",ln:"Dirang, Arunachal-Pradesh (Zero)"},3782:{sn:"Kalaktung",ln:"Kalaktung (Bomdila), Arunachal-Pradesh (Zero)"},3783:{sn:"Along",ln:"Along, Arunachal-Pradesh (Zero)"},3784:{sn:"Nefra",ln:"Nefra, Arunachal-Pradesh (Zero)"},3785:{sn:"Bameng",ln:"Bameng, Arunachal-Pradesh (Zero)"},
3786:{sn:"Khonsa",ln:"Khonsa, Arunachal-Pradesh (Zero)"},3787:{sn:"Seppa",ln:"Seppa, Arunachal-Pradesh (Zero)"},3788:{sn:"Kolaring",ln:"Kolaring, Arunachal-Pradesh (Zero)"},3789:{sn:"Huri",ln:"Huri, Arunachal-Pradesh (Zero)"},3790:{sn:"Tali",ln:"Tali, Arunachal-Pradesh (Zero)"},3791:{sn:"Taliha",ln:"Taliha, Arunachal-Pradesh (Zero)"},3792:{sn:"Daporizo",ln:"Daporizo, Arunachal-Pradesh (Zero)"},3793:{sn:"Mechuka",ln:"Mechuka, Arunachal-Pradesh (Zero"},3794:{sn:"Tawang",ln:"Tawang, Arunachal-Pradesh (Zero)"},
3795:{sn:"Basar",ln:"Basar, Arunachal-Pradesh (Zero)"},3797:{sn:"Pangin",ln:"Pangin, Arunachal-Pradesh (Zero)"},3798:{sn:"Mariyang",ln:"Mariyang, Arunachal-Pradesh (Zero)"},3799:{sn:"Tuting",ln:"Tuting, Arunachal-Pradesh (Zero)"},3800:{sn:"Jairampur",ln:"Jairampur, Arunachal-Pradesh (Zero)"},3801:{sn:"Anini",ln:"Anini, Arunachal-Pradesh (Zero)"},3802:{sn:"Roing",ln:"Roing-II (Arda), Arunachal-Pradesh (Zero)"},3803:{sn:"Roing",ln:"Roing-I, Arunachal-Pradesh (Zero)"},3804:{sn:"Tezu",ln:"Tezu, Arunachal-Pradesh (Zero)"},
3805:{sn:"Hayuliang",ln:"Hayuliang, Arunachal-Pradesh (Zero)"},3806:{sn:"Chowkhem",ln:"Chowkhem, Arunachal-Pradesh (Zero)"},3807:{sn:"Miao",ln:"Miao, Arunachal-Pradesh (Zero)"},3808:{sn:"Changlang",ln:"Changlang, Arunachal-Pradesh (Zero)"},3809:{sn:"Sagalee",ln:"Sagalee, Arunachal-Pradesh (Zero)"},3821:{sn:"R. K. Pur",ln:"R. K. Pur, Tripura (Agartala)"},3822:{sn:"Dharam Nagar",ln:"Dharam Nagar, Tripura (Agartala)"},3823:{sn:"Belonia",ln:"Belonia, Tripura (Agartala)"},3824:{sn:"Kailsahar",ln:"Kailsahar, Tripura (Agartala)"},
3825:{sn:"Khowai",ln:"Khowai, Tripura (Agartala)"},3826:{sn:"Ambasa",ln:"Ambasa, Tripura (Agartala)"},3830:{sn:"Champai",ln:"Champai-II (Chiapui), Mizoram (Aizwal)"},3831:{sn:"Champa",ln:"Champa-I, Mizoram (Aizwal)"},3834:{sn:"Demagiri",ln:"Demagiri, Mizoram (Aizwal)"},3835:{sn:"Saiha",ln:"Saiha-I, Mizoram (Aizwal)"},3836:{sn:"Saiha",ln:"Saiha-II (Tuipang), Mizoram (Aizwal)"},3837:{sn:"Kolasib",ln:"Kolasib, Mizoram (Aizwal)"},3838:{sn:"Aizwal",ln:"Aizwal-II (Serchip), Mizoram (Aizwal)"},3839:{sn:"Jalukie",
ln:"Jalukie, Nagaland (Kohima)"},3841:{sn:"Vdarbondh",ln:"Vdarbondh, Silchar"},3842:{sn:"Silchar",ln:"Silchar, Silchar"},3843:{sn:"Karimganj",ln:"Karimganj, Silchar"},3844:{sn:"Hailakandi",ln:"Hailakandi, Silchar"},3845:{sn:"Ukhrul Central",ln:"Ukhrul Central, Manipur (Imphal)"},3848:{sn:"Thonbal",ln:"Thonbal, Manipur (Imphal)"},3860:{sn:"Wokha",ln:"Wokha, Nagaland (Kohima)"},3861:{sn:"Tuengsang",ln:"Tuengsang, Nagaland (Kohima)"},3862:{sn:"Dimapur",ln:"Dimapur, Nagaland (Kohima)"},3863:{sn:"Kiphire",
ln:"Kiphire, Nagaland (Kohima)"},3865:{sn:"Phek",ln:"Phek, Nagaland (Kohima)"},3867:{sn:"Zuenheboto",ln:"Zuenheboto, Nagaland (Kohima)"},3869:{sn:"Mon",ln:"Mon, Nagaland (Kohima)"},3870:{sn:"Ukhrursouth",ln:"Ukhrursouth (Kassemkhulen), Manipur (Imphal)"},3871:{sn:"Mao",ln:"Mao (Korang), Manipur (Imphal)"},3872:{sn:"Chandel",ln:"Chandel, Manipur (Imphal)"},3873:{sn:"Thinghat",ln:"Thinghat, Manipur (Imphal)"},3874:{sn:"Churchandpur",ln:"Churchandpur, Manipur (Imphal)"},3876:{sn:"Jiribam",ln:"Jiribam, Manipur (Imphal)"},
3877:{sn:"Tamenglong",ln:"Tamenglong, Manipur (Imphal)"},3878:{sn:"Chakpikarong",ln:"Chakpikarong, Manipur (Imphal)"},3879:{sn:"Bishenpur",ln:"Bishenpur, Manipur (Imphal)"},3880:{sn:"Sadarhills",ln:"Sadarhills (Kangpokai), Manipur (Imphal)"},4111:{sn:"Sriperumpudur",ln:"Sriperumpudur, Chengalpattu (Kancheepuram)"},4112:{sn:"Kancheepuram",ln:"Kancheepuram, Chengalpattu (Kancheepuram)"},4114:{sn:"Chengalpattu",ln:"Chengalpattu, Chengalpattu (Kancheepuram)"},4115:{sn:"Madurantagam",ln:"Madurantagam, Chengalpattu (Kancheepuram)"},
4116:{sn:"Tiruvellore",ln:"Tiruvellore, Chengalpattu (Kancheepuram)"},4118:{sn:"Tiruttani",ln:"Tiruttani, Chengalpattu (Kancheepuram)"},4119:{sn:"Ponneri",ln:"Ponneri, Chengalpattu (Kancheepuram)"},4142:{sn:"Cuddalore",ln:"Cuddalore, Cuddalore"},4143:{sn:"Virudhachalam",ln:"Virudhachalam, Cuddalore"},4144:{sn:"Chidambaram",ln:"Chidambaram, Cuddalore"},4145:{sn:"Gingee",ln:"Gingee, Cuddalore"},4146:{sn:"Villupuram",ln:"Villupuram, Cuddalore"},4147:{sn:"Tindivanam",ln:"Tindivanam, Cuddalore"},4149:{sn:"Ulundurpet",
ln:"Ulundurpet, Cuddalore"},4151:{sn:"Kallkurichi",ln:"Kallkurichi, Cuddalore"},4153:{sn:"Arakandanallur",ln:"Arakandanallur, Cuddalore"},4171:{sn:"Gudiyatham",ln:"Gudiyatham, Vellore"},4172:{sn:"Ranipet",ln:"Ranipet, Vellore"},4173:{sn:"Arni",ln:"Arni, Vellore"},4174:{sn:"Vaniyambadi",ln:"Vaniyambadi, Vellore"},4175:{sn:"Tiruvannamalai",ln:"Tiruvannamalai, Vellore"},4177:{sn:"Arkonam",ln:"Arkonam, Vellore"},4179:{sn:"Tirupattur",ln:"Tirupattur, Vellore"},4181:{sn:"Polur",ln:"Polur, Vellore"},4182:{sn:"Tiruvettipuram",
ln:"Tiruvettipuram, Vellore"},4183:{sn:"Wandiwash",ln:"Wandiwash, Vellore"},4188:{sn:"Chengam",ln:"Chengam, Vellore"},4202:{sn:"Mulanur",ln:"Mulanur, Erode"},4204:{sn:"Kodumudi",ln:"Kodumudi, Erode"},4252:{sn:"Udumalpet",ln:"Udumalpet, Coimbatore"},4253:{sn:"Anamalai",ln:"Anamalai, Coimbatore"},4254:{sn:"Mettupalayam",ln:"Mettupalayam, Coimbatore"},4255:{sn:"Palladum",ln:"Palladum, Coimbatore"},4256:{sn:"Bhavani",ln:"Bhavani, Erode"},4257:{sn:"Kangayam",ln:"Kangayam, Erode"},4258:{sn:"Dharampuram",
ln:"Dharampuram, Erode"},4259:{sn:"Pollachi",ln:"Pollachi, Coimbatore"},4262:{sn:"Gudalur",ln:"Gudalur, Ooty"},4266:{sn:"Kotagiri",ln:"Kotagiri, Ooty"},4268:{sn:"Velur",ln:"Velur, Salem"},4281:{sn:"Yercaud",ln:"Yercaud, Salem"},4282:{sn:"Attur",ln:"Attur, Salem"},4283:{sn:"Sankagiri",ln:"Sankagiri, Salem"},4285:{sn:"Gobichettipalayam",ln:"Gobichettipalayam, Erode"},4286:{sn:"Namakkal",ln:"Namakkal, Salem"},4287:{sn:"Rasipuram",ln:"Rasipuram, Salem"},4288:{sn:"Tiruchengode",ln:"Tiruchengode, Salem"},
4290:{sn:"Omalur",ln:"Omalur, Salem"},4292:{sn:"Valapady",ln:"Valapady, Salem"},4294:{sn:"Perundurai",ln:"Perundurai, Erode"},4295:{sn:"Sathiyamangalam",ln:"Sathiyamangalam, Erode"},4296:{sn:"Avanashi",ln:"Avanashi, Coimbatore"},4298:{sn:"Metturdam",ln:"Metturdam, Salem"},4320:{sn:"Aravakurichi",ln:"Aravakurichi, Trichy"},4322:{sn:"Pudukkottai",ln:"Pudukkottai, Trichy"},4323:{sn:"Kulithalai",ln:"Kulithalai, Trichy"},4324:{sn:"Karur",ln:"Karur, Trichy"},4326:{sn:"Musiri",ln:"Musiri, Trichy"},4327:{sn:"Thuraiyure",
ln:"Thuraiyure, Trichy"},4328:{sn:"Perambalur",ln:"Perambalur, Trichy"},4329:{sn:"Ariyalur",ln:"Ariyalur, Trichy"},4331:{sn:"Jayamkondan",ln:"Jayamkondan, Trichy"},4332:{sn:"Manaparai",ln:"Manaparai, Trichy"},4333:{sn:"Ponnamaravathi",ln:"Ponnamaravathi, Trichy"},4339:{sn:"Keeranur",ln:"Keeranur, Trichy"},4341:{sn:"Uthangarai",ln:"Uthangarai, Dharmapuri"},4342:{sn:"Dharmapuri",ln:"Dharmapuri, Dharmapuri"},4343:{sn:"Krishnagiri",ln:"Krishnagiri, Dharmapuri"},4344:{sn:"Hosur",ln:"Hosur, Dharmapuri"},
4346:{sn:"Harur",ln:"Harur, Dharmapuri"},4347:{sn:"Denkanikoitah",ln:"Denkanikoitah, Dharmapuri"},4348:{sn:"Palacode",ln:"Palacode, Dharmapuri"},4362:{sn:"Thanjavur",ln:"Thanjavur, Thanjavur"},4364:{sn:"Mayiladuthurai",ln:"Mayiladuthurai, Thanjavur"},4365:{sn:"Nagapattinam",ln:"Nagapattinam, Thanjavur"},4366:{sn:"Tiruvarur",ln:"Tiruvarur, Thanjavur"},4367:{sn:"Mannargudi",ln:"Mannargudi, Thanjavur"},4368:{sn:"Karaikal",ln:"Karaikal, Thanjavur"},4369:{sn:"Thiruraipoondi",ln:"Thiruraipoondi, Thanjavur"},
4371:{sn:"Arantangi",ln:"Arantangi, Trichy"},4372:{sn:"Orathanad",ln:"Orathanad, Thanjavur"},4373:{sn:"Pattukottai",ln:"Pattukottai, Thanjavur"},4374:{sn:"Papanasam",ln:"Papanasam, Thanjavur"},4542:{sn:"Kodaikanal",ln:"Kodaikanal, Madurai"},4543:{sn:"Batlagundu",ln:"Batlagundu, Madurai"},4544:{sn:"Natham",ln:"Natham, Madurai"},4545:{sn:"Palani",ln:"Palani, Madurai"},4546:{sn:"Theni",ln:"Theni, Madurai"},4549:{sn:"Thirumanglam",ln:"Thirumanglam, Madurai"},4551:{sn:"Vedasandur",ln:"Vedasandur, Madurai"},
4552:{sn:"Usiliampatti",ln:"Usiliampatti, Madurai"},4553:{sn:"Oddanchatram",ln:"Oddanchatram, Madurai"},4554:{sn:"Cumbum",ln:"Cumbum, Madurai"},4561:{sn:"Devakottai",ln:"Devakottai, Karaikudi"},4562:{sn:"Virudhunagar",ln:"Virudhunagar, Virudhunagar"},4563:{sn:"Rajapalayam",ln:"Rajapalayam, Virudhunagar"},4564:{sn:"Paramakudi",ln:"Paramakudi, Karaikudi"},4565:{sn:"Karaikudi",ln:"Karaikudi, Karaikudi"},4566:{sn:"Aruppukottai",ln:"Aruppukottai, Virudhunagar"},4567:{sn:"Ramanathpuram",ln:"Ramanathpuram, Karaikudi"},
4573:{sn:"Rameshwaram",ln:"Rameshwaram, Karaikudi"},4574:{sn:"Manamadurai",ln:"Manamadurai, Karaikudi"},4575:{sn:"Sivaganga",ln:"Sivaganga, Karaikudi"},4576:{sn:"Mudukulathur",ln:"Mudukulathur, Karaikudi"},4577:{sn:"Tirupathur",ln:"Tirupathur, Karaikudi"},4630:{sn:"Srivaikundam",ln:"Srivaikundam, Tuticorin"},4632:{sn:"Kovilpatti",ln:"Kovilpatti, Tuticorin"},4633:{sn:"Tenkasi",ln:"Tenkasi, Tirunelvelli"},4634:{sn:"Ambasamudram",ln:"Ambasamudram, Tirunelvelli"},4635:{sn:"Nanguneri",ln:"Nanguneri, Tirunelvelli"},
4636:{sn:"Sankaran Koil",ln:"Sankaran Koil, Tirunelvelli"},4637:{sn:"Valliyoor",ln:"Valliyoor, Tirunelvelli"},4638:{sn:"Vilathikulam",ln:"Vilathikulam, Tuticorin"},4639:{sn:"Tiruchendur",ln:"Tiruchendur, Tuticorin"},4651:{sn:"Kuzhithurai",ln:"Kuzhithurai, Nagarcoil"},4652:{sn:"Nagercoil",ln:"Nagercoil, Nagarcoil"},4728:{sn:"Nedumandad",ln:"Nedumandad, Thiruvananthapuram"},4733:{sn:"Pathanamthitta",ln:"Pathanamthitta, Tiruvalla"},4734:{sn:"Adoor",ln:"Adoor, Tiruvalla"},4735:{sn:"Ranni",ln:"Ranni, Tiruvalla"},
4822:{sn:"Palai",ln:"Palai, Kottayam"},4828:{sn:"Kanjirapally",ln:"Kanjirapally, Kottayam"},4829:{sn:"Vaikom",ln:"Vaikom, Kottayam"},4862:{sn:"Thodupuzha",ln:"Thodupuzha, Ernakulam"},4864:{sn:"Adimaly",ln:"Adimaly, Ernakulam"},4865:{sn:"Munnar",ln:"Munnar, Ernakulam"},4868:{sn:"Nedumgandam",ln:"Nedumgandam, Ernakulam"},4869:{sn:"Peermedu",ln:"Peermedu, Ernakulam"},4884:{sn:"Vadakkanchery",ln:"Vadakkanchery, Trichur"},4885:{sn:"Kunnamkulam",ln:"Kunnamkulam, Trichur"},4890:{sn:"Bitra",ln:"Bitra, Kavarathy"},
4891:{sn:"Amini",ln:"Amini, Kavarathy"},4892:{sn:"Minicoy",ln:"Minicoy, Kavarathy"},4893:{sn:"Androth",ln:"Androth, Kavarathy"},4894:{sn:"Agathy",ln:"Agathy, Kavarathy"},4895:{sn:"Kalpeni",ln:"Kalpeni, Kavarathy"},4896:{sn:"Kavarathy",ln:"Kavarathy, Kavarathy"},4897:{sn:"Kadamath",ln:"Kadamath, Kavarathy"},4898:{sn:"Kiltan",ln:"Kiltan, Kavarathy"},4899:{sn:"Chetlat",ln:"Chetlat, Kavarathy"},4922:{sn:"Alathur",ln:"Alathur, Palghat"},4923:{sn:"Koduvayur",ln:"Koduvayur, Palghat"},4924:{sn:"Mannarghat",
ln:"Mannarghat, Palghat"},4926:{sn:"Shoranur",ln:"Shoranur, Palghat"},4931:{sn:"Nilambur",ln:"Nilambur, Calicut (Kozhikode)"},4933:{sn:"Perinthalmanna",ln:"Perinthalmanna, Calicut (Kozhikode)"},4935:{sn:"Mananthody",ln:"Mananthody, Calicut (Kozhikode)"},4936:{sn:"Kalpetta",ln:"Kalpetta, Calicut (Kozhikode)"},4982:{sn:"Taliparamba",ln:"Taliparamba, Cannanore"},4985:{sn:"Payyanur",ln:"Payyanur, Cannanore"},4994:{sn:"Kasargode",ln:"Kasargode, Cannanore"},4997:{sn:"Kanhangad",ln:"Kanhangad, Cannanore"},
4998:{sn:"Uppala",ln:"Uppala, Cannanore"},5111:{sn:"Akbarpur",ln:"Akbarpur, Kanpur"},5112:{sn:"Bilhaur",ln:"Bilhaur, Kanpur"},5113:{sn:"Bhognipur",ln:"Bhognipur (Pakhrayan), Kanpur"},5114:{sn:"Derapur",ln:"Derapur (Jhinjak), Kanpur"},5115:{sn:"Ghatampur",ln:"Ghatampur, Kanpur"},5142:{sn:"Purwa",ln:"Purwa (Bighapur), Unnao"},5143:{sn:"Hasanganj",ln:"Hasanganj, Unnao"},5144:{sn:"Safipur",ln:"Safipur, Unnao"},5162:{sn:"Orai",ln:"Orai, Orai"},5164:{sn:"Kalpi",ln:"Kalpi, Orai"},5165:{sn:"Konch",ln:"Konch, Orai"},
5168:{sn:"Jalaun",ln:"Jalaun, Orai"},5170:{sn:"Chirgaon",ln:"Chirgaon (Moth), Jhansi"},5171:{sn:"Garauth",ln:"Garauth, Jhansi"},5172:{sn:"Mehraun",ln:"Mehraun, Jhansi"},5174:{sn:"Jhansi",ln:"Jhansi, Jhansi"},5175:{sn:"Lalitpur",ln:"Lalitpur-II (Talbehat), Jhansi"},5176:{sn:"Lalitpur",ln:"Lalitpur-I (Lalitpur), Jhansi"},5178:{sn:"Mauranipur",ln:"Mauranipur, Jhansi"},5180:{sn:"Fateh-Pur",ln:"Fateh-Pur-I (Fatehpur), Fatehpur"},5181:{sn:"Bindki",ln:"Bindki, Fatehpur"},5182:{sn:"Khaga",ln:"Khaga, Fatehpur"},
5183:{sn:"Fatehpur",ln:"Fatehpur-II (Gazipur), Fatehpur"},5190:{sn:"Baberu",ln:"Baberu, Banda"},5191:{sn:"Naraini",ln:"Naraini (Attarra), Banda"},5192:{sn:"Banda",ln:"Banda, Banda"},5194:{sn:"Karvi",ln:"Karvi-II (Manikpur), Banda"},5195:{sn:"Mau",ln:"Mau (Rajapur), Banda"},5198:{sn:"Karvi ",ln:"Karvi -I (Karvi), Banda"},5212:{sn:"Malihabad",ln:"Malihabad, Lucknow"},5240:{sn:"Fatehpur",ln:"Fatehpur, Barabanki"},5241:{sn:"Ramsanehi Ghat",ln:"Ramsanehi Ghat, Barabanki"},5244:{sn:"Haidergarh",ln:"Haidergarh, Barabanki"},
5248:{sn:"Barabanki",ln:"Barabanki, Barabanki"},5250:{sn:"Bahraich",ln:"Bahraich-II (Bhinga), Bahraich"},5251:{sn:"Kaisarganj",ln:"Kaisarganj-I (Kaiserganj), Bahraich"},5252:{sn:"Bahraich",ln:"Bahraich-I (Bahrailh), Bahraich"},5253:{sn:"Nanpara",ln:"Nanpara-I (Nanpara), Bahraich"},5254:{sn:"Nanparah",ln:"Nanparah-II (Mihinpurwa), Bahraich"},5255:{sn:"Kaisarganh",ln:"Kaisarganh-II (Mahasi), Bahraich"},5260:{sn:"Tarabganj",ln:"Tarabganj-I (Terabganj), Gonda"},5261:{sn:"Tarabganj",ln:"Tarabganj-II (Colonelganj), Gonda"},
5262:{sn:"Gonda",ln:"Gonda, Gonda"},5263:{sn:"Balarampur",ln:"Balarampur-I (Balrampur), Gonda"},5264:{sn:"Balarampur",ln:"Balarampur-II (Tulsipur), Gonda"},5265:{sn:"Utraula",ln:"Utraula, Gonda"},5270:{sn:"Bikapur",ln:"Bikapur, Faizabad"},5271:{sn:"Akbarpur",ln:"Akbarpur-I (Akbarpur), Faizabad"},5273:{sn:"Tandai",ln:"Tandai-I (Tanda), Faizabad"},5274:{sn:"Tanda",ln:"Tanda-II (Baskhari), Faizabad"},5275:{sn:"Akbarpur",ln:"Akbarpur-II (Jalalpur), Faizabad"},5278:{sn:"Faizabad",ln:"Faizabad, Faizabad"},
5280:{sn:"Rath",ln:"Rath, Hamirpur"},5281:{sn:"Mahoba",ln:"Mahoba, Hamirpur"},5282:{sn:"Hamirpur",ln:"Hamirpur, Hamirpur"},5283:{sn:"Charkhari",ln:"Charkhari, Hamirpur"},5284:{sn:"Maudaha",ln:"Maudaha, Hamirpur"},5311:{sn:"Salon ",ln:"Salon -I (Salon), Raibareilly"},5313:{sn:"Salon",ln:"Salon-II (Jais), Raibareilly"},5315:{sn:"Dalmau",ln:"Dalmau-II (Lalganj), Raibareilly"},5317:{sn:"Dalmau",ln:"Dalmau-I (Dalmau), Raibareilly"},5331:{sn:"Bharwari",ln:"Bharwari, Allahabad"},5332:{sn:"Phoolpur",ln:"Phoolpur, Allahabad"},
5333:{sn:"Karchhana",ln:"Karchhana (Shankergarh), Allahabad"},5334:{sn:"Meja",ln:"Meja (Sirsa), Allahabad"},5335:{sn:"Soraon",ln:"Soraon, Allahabad"},5341:{sn:"Kunda",ln:"Kunda, Pratapgarh"},5342:{sn:"Pratapgarh",ln:"Pratapgarh, Pratapgarh"},5343:{sn:"Patti",ln:"Patti, Pratapgarh"},5361:{sn:"Musafirkhana",ln:"Musafirkhana, Sultanpur"},5362:{sn:"Sultanpur",ln:"Sultanpur, Sultanpur"},5364:{sn:"Kadipur",ln:"Kadipur, Sultanpur"},5368:{sn:"Amethi",ln:"Amethi, Sultanpur"},5412:{sn:"Chandauli",ln:"Chandauli (Mugalsarai), Varansi"},
5413:{sn:"Chakia",ln:"Chakia, Varansi"},5414:{sn:"Bhadohi",ln:"Bhadohi, Varansi"},5440:{sn:"Mirzapur",ln:"Mirzapur-II (Hallia), Mirzapur"},5442:{sn:"Mirzapur",ln:"Mirzapur-I (Mirzapur), Mirzapur"},5443:{sn:"Chunur",ln:"Chunur, Mirzapur"},5444:{sn:"Robertsganj",ln:"Robertsganj-I, Mirzapur"},5445:{sn:"Robertsganj ",ln:"Robertsganj -II (Obra), Mirzapur"},5446:{sn:"Dudhi",ln:"Dudhi-II (Pipri), Mirzapur"},5447:{sn:"Dudhi",ln:"Dudhi-I (Dudhi), Mirzapur"},5450:{sn:"Kerakat",ln:"Kerakat, Jaunpur"},5451:{sn:"Mariyahu",
ln:"Mariyahu, Jaunpur"},5452:{sn:"Jaunpur",ln:"Jaunpur, Jaunpur"},5453:{sn:"Shahganj",ln:"Shahganj, Jaunpur"},5454:{sn:"Machlishahar",ln:"Machlishahar, Jaunpur"},5460:{sn:"Phulpur",ln:"Phulpur-I (Phulpur), Azamgarh"},5461:{sn:"Ghosi",ln:"Ghosi, Azamgarh"},5462:{sn:"Azamgarh",ln:"Azamgarh, Azamgarh"},5463:{sn:"Lalganj",ln:"Lalganj, Azamgarh"},5464:{sn:"Maunathbhanjan",ln:"Maunathbhanjan, Azamgarh"},5465:{sn:"Phulpur",ln:"Phulpur-II (Atrawlia), Azamgarh"},5466:{sn:"Sagri",ln:"Sagri, Azamgarh"},5491:{sn:"Rasara",
ln:"Rasara, Ballia"},5493:{sn:"Mohamdabad",ln:"Mohamdabad, Ghazipur"},5494:{sn:"Bansdeeh",ln:"Bansdeeh, Ballia"},5495:{sn:"Saidpur",ln:"Saidpur, Ghazipur"},5496:{sn:"Ballia",ln:"Ballia-II (Raniganj), Ballia"},5497:{sn:"Zamania",ln:"Zamania, Ghazipur"},5498:{sn:"Ballia",ln:"Ballia-I (Ballia), Ballia"},5521:{sn:"Bansgaon",ln:"Bansgaon-II (Barhal Ganj), Gorakhpur"},5522:{sn:"Pharenda",ln:"Pharenda-I (Compierganj), Gorakhpur"},5523:{sn:"Maharajganj",ln:"Maharajganj, Gorakhpur"},5524:{sn:"Pharenda",ln:"Pharenda-II (Anand Nagar), Gorakhpur"},
5525:{sn:"Bansgaon ",ln:"Bansgaon -I (Bansgaon), Gorakhpur"},5541:{sn:"Domariyaganj",ln:"Domariyaganj, Basti"},5542:{sn:"Basti",ln:"Basti, Basti"},5543:{sn:"Naugarh",ln:"Naugarh-II (Barhani), Basti"},5544:{sn:"Naugarh",ln:"Naugarh-I (Tetribazar), Basti"},5545:{sn:"Bansi",ln:"Bansi, Basti"},5546:{sn:"Harraiya",ln:"Harraiya, Basti"},5547:{sn:"Khalilabad ",ln:"Khalilabad -I, Basti"},5548:{sn:"Khalilabad",ln:"Khalilabad-II (Mehdawal), Basti"},5561:{sn:"Salempur",ln:"Salempur-II (Barhaj), Deoria"},5563:{sn:"Captanganj",
ln:"Captanganj (Khadda), Deoria"},5564:{sn:"Padrauna",ln:"Padrauna, Deoria"},5566:{sn:"Salempur",ln:"Salempur-I (Salempur), Deoria"},5567:{sn:"Captanganj",ln:"Captanganj-I (Captanganj), Deoria"},5568:{sn:"Deoria",ln:"Deoria, Deoria"},5612:{sn:"Ferozabad",ln:"Ferozabad, Agra"},5613:{sn:"Achhnera",ln:"Achhnera, Agra"},5614:{sn:"Jarar",ln:"Jarar, Agra"},5640:{sn:"Kaman",ln:"Kaman, Bharatpur"},5641:{sn:"Deeg",ln:"Deeg, Bharatpur"},5642:{sn:"Dholpur",ln:"Dholpur, Bharatpur"},5643:{sn:"Nadbai",ln:"Nadbai, Bharatpur"},
5644:{sn:"Bharatpur",ln:"Bharatpur, Bharatpur"},5645:{sn:"Rupbas",ln:"Rupbas, Bharatpur"},5646:{sn:"Baseri",ln:"Baseri, Bharatpur"},5647:{sn:"Bari",ln:"Bari, Bharatpur"},5648:{sn:"Bayana",ln:"Bayana, Bharatpur"},5661:{sn:"Sadabad",ln:"Sadabad, Mathura"},5662:{sn:"Chhata",ln:"Chhata (Kosikalan), Mathura"},5664:{sn:"Mant",ln:"Mant (Vrindavan), Mathura"},5671:{sn:"Jasrana",ln:"Jasrana, Mainpuri"},5672:{sn:"Mainpuri",ln:"Mainpuri, Mainpuri"},5673:{sn:"Bhogaon",ln:"Bhogaon, Mainpuri"},5676:{sn:"Shikohabad",
ln:"Shikohabad, Mainpuri"},5677:{sn:"Karhal",ln:"Karhal, Mainpuri"},5680:{sn:"Bharthana",ln:"Bharthana, Etawah"},5681:{sn:"Bidhuna",ln:"Bidhuna, Etawah"},5683:{sn:"Auraiya",ln:"Auraiya, Etawah"},5688:{sn:"Etawah",ln:"Etawah, Etawah"},5690:{sn:"Kaimganj",ln:"Kaimganj, Farrukhabad"},5691:{sn:"Chhibramau",ln:"Chhibramau, Farrukhabad"},5692:{sn:"Farrukhabad",ln:"Farrukhabad (Fategarh), Farrukhabad"},5694:{sn:"Kannauj",ln:"Kannauj, Farrukhabad"},5721:{sn:"Sikandra Rao",ln:"Sikandra Rao, Aligarh"},5722:{sn:"Hathras",
ln:"Hathras, Aligarh"},5723:{sn:"Atrauli",ln:"Atrauli, Aligarh"},5724:{sn:"Khair",ln:"Khair, Aligarh"},5731:{sn:"Garhmukteshwar",ln:"Garhmukteshwar, Ghaziabad"},5732:{sn:"Bulandshahr",ln:"Bulandshahr, Ghaziabad"},5733:{sn:"Pahasu",ln:"Pahasu, Ghaziabad"},5734:{sn:"Debai",ln:"Debai, Ghaziabad"},5735:{sn:"Sikandrabad",ln:"Sikandrabad, Ghaziabad"},5736:{sn:"Siyana",ln:"Siyana, Ghaziabad"},5738:{sn:"Khurja",ln:"Khurja, Ghaziabad"},5740:{sn:"Aliganj",ln:"Aliganj (Ganjdundwara), Etah"},5742:{sn:"Etah",
ln:"Etah, Etah"},5744:{sn:"Kasganj",ln:"Kasganj, Etah"},5745:{sn:"Jalesar",ln:"Jalesar, Etah"},5821:{sn:"Pitamberpur",ln:"Pitamberpur, Bareilly"},5822:{sn:"Baheri",ln:"Baheri, Bareilly"},5823:{sn:"Aonla ",ln:"Aonla -I, Bareilly"},5824:{sn:"Aonla",ln:"Aonla-II (Ramnagar), Bareilly"},5825:{sn:"Nawabganj",ln:"Nawabganj, Bareilly"},5831:{sn:"Dataganj",ln:"Dataganj, Badaun"},5832:{sn:"Badaun",ln:"Badaun, Badaun"},5833:{sn:"Sahaswan",ln:"Sahaswan, Badaun"},5834:{sn:"Bisauli",ln:"Bisauli, Badaun"},5836:{sn:"Gunnaur",
ln:"Gunnaur, Badaun"},5841:{sn:"Tilhar",ln:"Tilhar, Sahjahanpur"},5842:{sn:"Shahjahanpur",ln:"Shahjahanpur, Sahjahanpur"},5843:{sn:"Jalalabad",ln:"Jalalabad, Sahjahanpur"},5844:{sn:"Powayan",ln:"Powayan, Sahjahanpur"},5850:{sn:"Hardoi",ln:"Hardoi-II (Baghavli), Hardoi"},5851:{sn:"Bilgam",ln:"Bilgam-I (Madhoganj), Hardoi"},5852:{sn:"Hardoi",ln:"Hardoi-I (Hardoi), Hardoi"},5853:{sn:"Shahabad",ln:"Shahabad, Hardoi"},5854:{sn:"Sandila",ln:"Sandila, Hardoi"},5855:{sn:"Bilgram",ln:"Bilgram-II (Sandi), Hardoi"},
5861:{sn:"Misrikh",ln:"Misrikh-II (Aurangabad), Sitapur"},5862:{sn:"Sitapur",ln:"Sitapur, Sitapur"},5863:{sn:"Biswan",ln:"Biswan, Sitapur"},5864:{sn:"Sidhauli",ln:"Sidhauli (Mahmodabad), Sitapur"},5865:{sn:"Misrikh ",ln:"Misrikh -I (Misrikh), Sitapur"},5870:{sn:"Kheri",ln:"Kheri-II (Bhira), Lakhimpur-Kheri"},5871:{sn:"Nighasan",ln:"Nighasan-I (Palliakalan), Lakhimpur-Kheri"},5872:{sn:"Kheri",ln:"Kheri-I (Kheri), Lakhimpur-Kheri"},5873:{sn:"Nighasan",ln:"Nighasan-II (Tikonia), Lakhimpur-Kheri"},5874:{sn:"Nighasan",
ln:"Nighasan-III (Dhaurahra), Lakhimpur-Kheri"},5875:{sn:"Mohamdi",ln:"Mohamdi-II (Maigalganj), Lakhimpur-Kheri"},5876:{sn:"Mohamdi",ln:"Mohamdi-I (Mohamdi), Lakhimpur-Kheri"},5880:{sn:"Puranpur",ln:"Puranpur, Pilibhit"},5881:{sn:"Bisalpur",ln:"Bisalpur, Pilibhit"},5882:{sn:"Pilibhit",ln:"Pilibhit, Pilibhit"},5921:{sn:"Bilari",ln:"Bilari, Moradabad"},5922:{sn:"Amroha",ln:"Amroha, Moradabad"},5923:{sn:"Sambhal",ln:"Sambhal, Moradabad"},5924:{sn:"Hasanpur",ln:"Hasanpur, Moradabad"},5942:{sn:"Nainital",
ln:"Nainital, Nainital"},5943:{sn:"Khatima",ln:"Khatima, Nainital"},5944:{sn:"Kichha",ln:"Kichha-I (Rudrapur), Nainital"},5945:{sn:"Haldwani",ln:"Haldwani-II (Chorgalian), Nainital"},5946:{sn:"Haldwani",ln:"Haldwani-I, Nainital"},5947:{sn:"Kashipur",ln:"Kashipur, Nainital"},5948:{sn:"Khatima",ln:"Khatima-II (Sitarganj), Nainital"},5949:{sn:"Kichha",ln:"Kichha-II (Bazpur), Nainital"},5960:{sn:"Shahabad",ln:"Shahabad, Rampur"},5961:{sn:"Munsiari",ln:"Munsiari, Almora"},5962:{sn:"Almora",ln:"Almora, Almora"},
5963:{sn:"Bageshwar",ln:"Bageshwar, Almora"},5964:{sn:"Pithoragarh",ln:"Pithoragarh, Almora"},5965:{sn:"Champawat",ln:"Champawat, Almora"},5966:{sn:"Ranikhet",ln:"Ranikhet, Almora"},5967:{sn:"Dharchula",ln:"Dharchula, Almora"},6111:{sn:"Hilsa",ln:"Hilsa, Patna"},6112:{sn:"Biharsharif",ln:"Biharsharif, Patna"},6114:{sn:"Jahanabad",ln:"Jahanabad, Gaya"},6115:{sn:"Danapur",ln:"Danapur, Patna"},6132:{sn:"Barh",ln:"Barh, Patna"},6135:{sn:"Bikram",ln:"Bikram, Patna"},6150:{sn:"Hathua",ln:"Hathua, Chapra"},
6151:{sn:"Sidhawalia",ln:"Sidhawalia, Chapra"},6152:{sn:"Chapra",ln:"Chapra, Chapra"},6153:{sn:"Maharajganj",ln:"Maharajganj, Chapra"},6154:{sn:"Siwan",ln:"Siwan, Chapra"},6155:{sn:"Ekma",ln:"Ekma, Chapra"},6156:{sn:"Gopalganj",ln:"Gopalganj, Chapra"},6157:{sn:"Mairwa",ln:"Mairwa, Chapra"},6158:{sn:"Sonepur",ln:"Sonepur, Chapra"},6159:{sn:"Masrakh",ln:"Masrakh, Chapra"},6180:{sn:"Adhaura",ln:"Adhaura, Sasaram"},6181:{sn:"Piro",ln:"Piro, Arrah"},6182:{sn:"Arrah",ln:"Arrah, Arrah"},6183:{sn:"Buxar",
ln:"Buxar, Arrah"},6184:{sn:"Sasaram",ln:"Sasaram, Sasaram"},6185:{sn:"Bikramganj",ln:"Bikramganj, Sasaram"},6186:{sn:"Aurangabad",ln:"Aurangabad, Gaya"},6187:{sn:"Mohania",ln:"Mohania, Sasaram"},6188:{sn:"Rohtas",ln:"Rohtas, Sasaram"},6189:{sn:"Bhabhua",ln:"Bhabhua, Sasaram"},6222:{sn:"Sheohar",ln:"Sheohar, Muzaffarpur"},6223:{sn:"Motipur",ln:"Motipur, Muzaffarpur"},6224:{sn:"Hajipur",ln:"Hajipur, Muzaffarpur"},6226:{sn:"Sitamarhi",ln:"Sitamarhi, Muzaffarpur"},6227:{sn:"Mahua",ln:"Mahua, Muzaffarpur"},
6228:{sn:"Pupri",ln:"Pupri, Muzaffarpur"},6229:{sn:"Bidupur",ln:"Bidupur, Muzaffarpur"},6242:{sn:"Benipur",ln:"Benipur, Darbhanga"},6243:{sn:"Begusarai",ln:"Begusarai, Darbhanga"},6244:{sn:"Khagaria",ln:"Khagaria, Darbhanga"},6245:{sn:"Gogri",ln:"Gogri, Darbhanga"},6246:{sn:"Jainagar",ln:"Jainagar, Darbhanga"},6247:{sn:"Singhwara",ln:"Singhwara, Darbhanga"},6250:{sn:"Dhaka",ln:"Dhaka, Motihari"},6251:{sn:"Bagaha",ln:"Bagaha, Motihari"},6252:{sn:"Motihari",ln:"Motihari, Motihari"},6253:{sn:"Narkatiaganj",
ln:"Narkatiaganj, Motihari"},6254:{sn:"Bettiah",ln:"Bettiah, Motihari"},6255:{sn:"Raxaul",ln:"Raxaul, Motihari"},6256:{sn:"Ramnagar",ln:"Ramnagar, Motihari"},6257:{sn:"Barachakia",ln:"Barachakia, Motihari"},6258:{sn:"Areraj",ln:"Areraj, Motihari"},6259:{sn:"Pakridayal",ln:"Pakridayal, Motihari"},6271:{sn:"Benipatti",ln:"Benipatti, Darbhanga"},6272:{sn:"Darbhanga",ln:"Darbhanga, Darbhanga"},6273:{sn:"Jhajharpur",ln:"Jhajharpur, Darbhanga"},6274:{sn:"Samastipur",ln:"Samastipur, Darbhanga"},6275:{sn:"Rosera",
ln:"Rosera, Darbhanga"},6276:{sn:"Madhubani",ln:"Madhubani, Darbhanga"},6277:{sn:"Phulparas",ln:"Phulparas, Darbhanga"},6278:{sn:"Dalsinghsarai",ln:"Dalsinghsarai, Darbhanga"},6279:{sn:"Barauni",ln:"Barauni, Darbhanga"},6322:{sn:"Wazirganj",ln:"Wazirganj, Gaya"},6323:{sn:"Dumraon",ln:"Dumraon, Arrah"},6324:{sn:"Nawada",ln:"Nawada, Gaya"},6325:{sn:"Pakribarwan",ln:"Pakribarwan, Gaya"},6326:{sn:"Sherghati",ln:"Sherghati, Gaya"},6327:{sn:"Rafiganj",ln:"Rafiganj, Gaya"},6328:{sn:"Daudnagar",ln:"Daudnagar, Gaya"},
6331:{sn:"Imamganj",ln:"Imamganj, Gaya"},6332:{sn:"Nabinagar",ln:"Nabinagar, Gaya"},6336:{sn:"Rajauli",ln:"Rajauli, Gaya"},6337:{sn:"Arwal",ln:"Arwal, Gaya"},6341:{sn:"Seikhpura",ln:"Seikhpura, Monghyr"},6342:{sn:"H. Kharagpur",ln:"H. Kharagpur, Monghyr"},6344:{sn:"Monghyr",ln:"Monghyr, Monghyr"},6345:{sn:"Jamui",ln:"Jamui, Monghyr"},6346:{sn:"Lakhisarai",ln:"Lakhisarai, Monghyr"},6347:{sn:"Chakai",ln:"Chakai, Monghyr"},6348:{sn:"Mallehpur",ln:"Mallehpur, Monghyr"},6349:{sn:"Jhajha",ln:"Jhajha, Monghyr"},
6420:{sn:"Amarpur",ln:"Amarpur, Bhagalpur"},6421:{sn:"Naugachia",ln:"Naugachia, Bhagalpur"},6422:{sn:"Godda",ln:"Godda, Deoghar (Dumka)"},6423:{sn:"Maheshpur Raj",ln:"Maheshpur Raj, Deoghar (Dumka)"},6424:{sn:"Banka",ln:"Banka, Bhagalpur"},6425:{sn:"Katoria",ln:"Katoria, Bhagalpur"},6426:{sn:"Rajmahal",ln:"Rajmahal, Deoghar (Dumka)"},6427:{sn:"Kathikund",ln:"Kathikund, Deoghar (Dumka)"},6428:{sn:"Nala",ln:"Nala, Deoghar (Dumka)"},6429:{sn:"Kahalgaon",ln:"Kahalgaon, Bhagalpur"},6431:{sn:"Jharmundi",
ln:"Jharmundi, Deoghar (Dumka)"},6432:{sn:"Deoghar",ln:"Deoghar, Deoghar (Dumka)"},6433:{sn:"Jamtara",ln:"Jamtara, Deoghar (Dumka)"},6434:{sn:"Dumka",ln:"Dumka, Deoghar (Dumka)"},6435:{sn:"Pakur",ln:"Pakur, Deoghar (Dumka)"},6436:{sn:"Sahibganj",ln:"Sahibganj, Deoghar (Dumka)"},6437:{sn:"Mahagama",ln:"Mahagama, Deoghar (Dumka)"},6438:{sn:"Madhupur",ln:"Madhupur, Deoghar (Dumka)"},6451:{sn:"Barsoi",ln:"Barsoi, Katihar"},6452:{sn:"Katihar",ln:"Katihar, Katihar"},6453:{sn:"Araria",ln:"Araria, Katihar"},
6454:{sn:"Purnea",ln:"Purnea, Katihar"},6455:{sn:"Forbesganj",ln:"Forbesganj, Katihar"},6457:{sn:"Korha",ln:"Korha, Katihar"},6459:{sn:"Thakurganj",ln:"Thakurganj, Katihar"},6461:{sn:"Raniganj",ln:"Raniganj, Katihar"},6462:{sn:"Dhamdaha",ln:"Dhamdaha, Katihar"},6466:{sn:"Kishanganj",ln:"Kishanganj, Katihar"},6467:{sn:"Banmankhi",ln:"Banmankhi, Katihar"},6471:{sn:"Birpur",ln:"Birpur, Saharsa"},6473:{sn:"Supaul",ln:"Supaul, Saharsa"},6475:{sn:"S. Bakhtiarpur",ln:"S. Bakhtiarpur, Saharsa"},6476:{sn:"Madhepura",
ln:"Madhepura, Saharsa"},6477:{sn:"Triveniganj",ln:"Triveniganj, Saharsa"},6478:{sn:"Saharsa",ln:"Saharsa, Saharsa"},6479:{sn:"Udakishanganj",ln:"Udakishanganj, Saharsa"},6522:{sn:"Muri",ln:"Muri, Ranchi"},6523:{sn:"Ghaghra",ln:"Ghaghra, Ranchi"},6524:{sn:"Gumla",ln:"Gumla, Ranchi"},6525:{sn:"Simdega",ln:"Simdega, Ranchi"},6526:{sn:"Lohardaga",ln:"Lohardaga, Ranchi"},6527:{sn:"Kolebira",ln:"Kolebira, Ranchi"},6528:{sn:"Khunti",ln:"Khunti, Ranchi"},6529:{sn:"Itki",ln:"Itki, Ranchi"},6530:{sn:"Bundu",
ln:"Bundu, Ranchi"},6531:{sn:"Mandar",ln:"Mandar, Ranchi"},6532:{sn:"Giridih",ln:"Giridih, Hazaribagh"},6533:{sn:"Basia",ln:"Basia, Ranchi"},6534:{sn:"Jhumaritalaiya",ln:"Jhumaritalaiya, Hazaribagh"},6535:{sn:"Chainpur",ln:"Chainpur, Ranchi"},6536:{sn:"Palkot",ln:"Palkot, Ranchi"},6538:{sn:"Torpa",ln:"Torpa, Ranchi"},6539:{sn:"Bolwa",ln:"Bolwa, Ranchi"},6540:{sn:"Govindpur",ln:"Govindpur, Dhanbad"},6541:{sn:"Chatra",ln:"Chatra, Hazaribagh"},6542:{sn:"Bokaro",ln:"Bokaro, Dhanbad"},6543:{sn:"Barhi",
ln:"Barhi, Hazaribagh"},6544:{sn:"Gomia",ln:"Gomia, Dhanbad"},6545:{sn:"Mandu",ln:"Mandu, Hazaribagh"},6546:{sn:"Hazaribagh",ln:"Hazaribagh, Hazaribagh"},6547:{sn:"Chavparan",ln:"Chavparan, Hazaribagh"},6548:{sn:"Ichak",ln:"Ichak, Hazaribagh"},6549:{sn:"Bermo",ln:"Bermo, Dhanbad"},6550:{sn:"Hunterganj",ln:"Hunterganj, Hazaribagh"},6551:{sn:"Barkagaon",ln:"Barkagaon, Hazaribagh"},6553:{sn:"Ramgarh",ln:"Ramgarh, Hazaribagh"},6554:{sn:"Rajdhanwar",ln:"Rajdhanwar, Hazaribagh"},6556:{sn:"Tisri",ln:"Tisri, Hazaribagh"},
6557:{sn:"Bagodar",ln:"Bagodar, Hazaribagh"},6558:{sn:"Dumri",ln:"Dumri (Isribazar), Hazaribagh"},6559:{sn:"Simaria",ln:"Simaria, Hazaribagh"},6560:{sn:"Patan",ln:"Patan, Daltonganj"},6561:{sn:"Garhwa",ln:"Garhwa, Daltonganj"},6562:{sn:"Daltonganj",ln:"Daltonganj, Daltonganj"},6563:{sn:"Bhawanathpur",ln:"Bhawanathpur, Daltonganj"},6564:{sn:"Nagarutari",ln:"Nagarutari, Daltonganj"},6565:{sn:"Latehar",ln:"Latehar, Daltonganj"},6566:{sn:"Japla",ln:"Japla, Daltonganj"},6567:{sn:"Barwadih",ln:"Barwadih, Daltonganj"},
6568:{sn:"Balumath",ln:"Balumath, Daltonganj"},6569:{sn:"Garu",ln:"Garu, Daltonganj"},6581:{sn:"Bhandaria",ln:"Bhandaria, Daltonganj"},6582:{sn:"Chaibasa",ln:"Chaibasa, Jamshedpur"},6583:{sn:"Kharsawa",ln:"Kharsawa, Jamshedpur"},6584:{sn:"Bishrampur",ln:"Bishrampur, Daltonganj"},6585:{sn:"Ghatsila",ln:"Ghatsila, Jamshedpur"},6586:{sn:"Chainpur",ln:"Chainpur, Daltonganj"},6587:{sn:"Chakardharpur",ln:"Chakardharpur, Jamshedpur"},6588:{sn:"Jagarnathpur",ln:"Jagarnathpur, Jamshedpur"},6589:{sn:"Jhinkpani",
ln:"Jhinkpani, Jamshedpur"},6591:{sn:"Chandil",ln:"Chandil, Jamshedpur"},6593:{sn:"Manoharpur",ln:"Manoharpur, Jamshedpur"},6594:{sn:"Baharagora",ln:"Baharagora, Jamshedpur"},6596:{sn:"Noamundi",ln:"Noamundi, Jamshedpur"},6597:{sn:"Saraikela",ln:"Saraikela (Adstyapur), Jamshedpur"},6621:{sn:"Hemgiri",ln:"Hemgiri, Sundargarh (Rourkela)"},6622:{sn:"Sundargarh",ln:"Sundargarh, Sundargarh (Rourkela)"},6624:{sn:"Rajgangpur",ln:"Rajgangpur, Sundargarh (Rourkela)"},6625:{sn:"Lahunipara",ln:"Lahunipara, Sundargarh (Rourkela)"},
6626:{sn:"Banaigarh",ln:"Banaigarh, Sundargarh (Rourkela)"},6640:{sn:"Bagdihi",ln:"Bagdihi, Sambalpur"},6641:{sn:"Deodgarh",ln:"Deodgarh, Sambalpur"},6642:{sn:"Kuchinda",ln:"Kuchinda, Sambalpur"},6643:{sn:"Barkot",ln:"Barkot, Sambalpur"},6644:{sn:"Rairakhol",ln:"Rairakhol, Sambalpur"},6645:{sn:"Jharsuguda",ln:"Jharsuguda, Sambalpur"},6646:{sn:"Bargarh",ln:"Bargarh, Sambalpur"},6647:{sn:"Naktideul",ln:"Naktideul, Sambalpur"},6648:{sn:"Patnagarh",ln:"Patnagarh, Balangir"},6649:{sn:"Jamankira",ln:"Jamankira, Sambalpur"},
6651:{sn:"Birmaharajpur",ln:"Birmaharajpur, Balangir"},6652:{sn:"Balangir",ln:"Balangir, Balangir"},6653:{sn:"Dunguripali",ln:"Dunguripali, Balangir"},6654:{sn:"Sonapur",ln:"Sonapur, Balangir"},6655:{sn:"Titlagarh",ln:"Titlagarh, Balangir"},6657:{sn:"Kantabhanji",ln:"Kantabhanji, Balangir"},6670:{sn:"Bhawanipatna",ln:"Bhawanipatna, Bhawanipatna"},6671:{sn:"Rajkhariar",ln:"Rajkhariar, Bhawanipatna"},6672:{sn:"Dharamgarh",ln:"Dharamgarh, Bhawanipatna"},6673:{sn:"Jayapatna",ln:"Jayapatna, Bhawanipatna"},
6675:{sn:"T. Rampur",ln:"T. Rampur, Bhawanipatna"},6676:{sn:"M. Rampur",ln:"M. Rampur, Bhawanipatna"},6677:{sn:"Narlaroad",ln:"Narlaroad, Bhawanipatna"},6678:{sn:"Nowparatan",ln:"Nowparatan, Bhawanipatna"},6679:{sn:"Komana",ln:"Komana, Bhawanipatna"},6681:{sn:"Jujumura",ln:"Jujumura, Sambalpur"},6682:{sn:"Attabira",ln:"Attabira, Sambalpur"},6683:{sn:"Padmapur",ln:"Padmapur, Sambalpur"},6684:{sn:"Paikamal",ln:"Paikamal, Sambalpur"},6685:{sn:"Sohela",ln:"Sohela, Sambalpur"},6721:{sn:"Narsinghpur",ln:"Narsinghpur, Cuttack"},
6722:{sn:"Pardip",ln:"Pardip, Cuttack"},6723:{sn:"Athgarh",ln:"Athgarh, Cuttack"},6724:{sn:"Jagatsinghpur",ln:"Jagatsinghpur, Cuttack"},6725:{sn:"Dhanmandal",ln:"Dhanmandal, Cuttack"},6726:{sn:"Jajapur Road",ln:"Jajapur Road, Cuttack"},6727:{sn:"Kendrapara",ln:"Kendrapara, Cuttack"},6728:{sn:"Jajapur Town",ln:"Jajapur Town, Cuttack"},6729:{sn:"Pattamundai",ln:"Pattamundai, Cuttack"},6731:{sn:"Anandapur",ln:"Anandapur, Dhenkanal"},6732:{sn:"Hindol",ln:"Hindol, Dhenkanal"},6733:{sn:"Ghatgaon",ln:"Ghatgaon, Dhenkanal"},
6735:{sn:"Telkoi",ln:"Telkoi, Dhenkanal"},6752:{sn:"Puri",ln:"Puri, Bhubaneswar (Puri)"},6753:{sn:"Nayagarh",ln:"Nayagarh, Bhubaneswar (Puri)"},6755:{sn:"Khurda",ln:"Khurda, Bhubaneswar (Puri)"},6756:{sn:"Balugaon",ln:"Balugaon, Bhubaneswar (Puri)"},6757:{sn:"Daspalla",ln:"Daspalla, Bhubaneswar (Puri)"},6758:{sn:"Nimapara",ln:"Nimapara, Bhubaneswar (Puri)"},6760:{sn:"Talcher",ln:"Talcher, Dhenkanal"},6761:{sn:"Chhendipada",ln:"Chhendipada, Dhenkanal"},6762:{sn:"Dhenkanal",ln:"Dhenkanal, Dhenkanal"},
6763:{sn:"Athmallik",ln:"Athmallik, Dhenkanal"},6764:{sn:"Anugul",ln:"Anugul, Dhenkanal"},6765:{sn:"Palla Hara",ln:"Palla Hara, Dhenkanal"},6766:{sn:"Keonjhar",ln:"Keonjhar, Dhenkanal"},6767:{sn:"Barbil",ln:"Barbil, Dhenkanal"},6768:{sn:"Parajang",ln:"Parajang, Dhenkanal"},6769:{sn:"Kamakhyanagar",ln:"Kamakhyanagar, Dhenkanal"},6781:{sn:"Basta",ln:"Basta, Balasore"},6782:{sn:"Balasore",ln:"Balasore, Balasore"},6784:{sn:"Bhadrak",ln:"Bhadrak, Balasore"},6786:{sn:"Chandbali",ln:"Chandbali, Balasore"},
6788:{sn:"Soro",ln:"Soro, Balasore"},6791:{sn:"Bangiriposi",ln:"Bangiriposi, Baripada"},6792:{sn:"Baripada",ln:"Baripada, Baripada"},6793:{sn:"Betanati",ln:"Betanati, Baripada"},6794:{sn:"Rairangpur",ln:"Rairangpur, Baripada"},6795:{sn:"Udala",ln:"Udala, Baripada"},6796:{sn:"Karanjia",ln:"Karanjia, Baripada"},6797:{sn:"Jashipur",ln:"Jashipur, Baripada"},6810:{sn:"Khalikote",ln:"Khalikote, Berhampur"},6811:{sn:"Chhatrapur",ln:"Chhatrapur, Berhampur"},6814:{sn:"Digapahandi",ln:"Digapahandi, Berhampur"},
6815:{sn:"Parlakhemundi",ln:"Parlakhemundi, Berhampur"},6816:{sn:"Mohana",ln:"Mohana, Berhampur"},6817:{sn:"R. Udayigiri",ln:"R. Udayigiri, Berhampur"},6818:{sn:"Buguda",ln:"Buguda, Berhampur"},6819:{sn:"Surada",ln:"Surada, Berhampur"},6821:{sn:"Bhanjanagar",ln:"Bhanjanagar, Berhampur"},6822:{sn:"Aska",ln:"Aska, Berhampur"},6840:{sn:"Tumudibandha",ln:"Tumudibandha, Phulbani"},6841:{sn:"Boudh",ln:"Boudh, Phulbani"},6842:{sn:"Phulbani",ln:"Phulbani, Phulbani"},6843:{sn:"Puruna Katak",ln:"Puruna Katak, Phulbani"},
6844:{sn:"Kantamal",ln:"Kantamal, Phulbani"},6845:{sn:"Phiringia",ln:"Phiringia, Phulbani"},6846:{sn:"Baliguda",ln:"Baliguda, Phulbani"},6847:{sn:"G. Udayagiri",ln:"G. Udayagiri, Phulbani"},6848:{sn:"Kotagarh",ln:"Kotagarh, Phulbani"},6849:{sn:"Daringbadi",ln:"Daringbadi, Phulbani"},6850:{sn:"Kalimela",ln:"Kalimela, Koraput"},6852:{sn:"Koraput",ln:"Koraput, Koraput"},6853:{sn:"Sunabeda",ln:"Sunabeda, Koraput"},6854:{sn:"Jeypore",ln:"Jeypore, Koraput"},6855:{sn:"Laxmipur",ln:"Laxmipur, Koraput"},6856:{sn:"Rayagada",
ln:"Rayagada, Koraput"},6857:{sn:"Gunupur",ln:"Gunupur, Koraput"},6858:{sn:"Nowrangapur",ln:"Nowrangapur, Koraput"},6859:{sn:"Motu",ln:"Motu, Koraput"},6860:{sn:"Boriguma",ln:"Boriguma, Koraput"},6861:{sn:"Malkangiri",ln:"Malkangiri, Koraput"},6862:{sn:"Gudari",ln:"Gudari, Koraput"},6863:{sn:"Bisam Cuttack",ln:"Bisam Cuttack, Koraput"},6864:{sn:"Mathili",ln:"Mathili, Koraput"},6865:{sn:"Kashipur",ln:"Kashipur, Koraput"},6866:{sn:"Umerkote",ln:"Umerkote, Koraput"},6867:{sn:"Jharigan",ln:"Jharigan, Koraput"},
6868:{sn:"Nandapur",ln:"Nandapur, Koraput"},6869:{sn:"Papadhandi",ln:"Papadhandi, Koraput"},7100:{sn:"Kuhi",ln:"Kuhi, Nagpur"},7102:{sn:"Parseoni",ln:"Parseoni, Nagpur"},7103:{sn:"Butibori",ln:"Butibori, Nagpur"},7104:{sn:"Hingua",ln:"Hingua, Nagpur"},7105:{sn:"Narkhed",ln:"Narkhed, Nagpur"},7106:{sn:"Bhiwapur",ln:"Bhiwapur, Nagpur"},7109:{sn:"Kamptee",ln:"Kamptee, Nagpur"},7112:{sn:"Katol",ln:"Katol, Nagpur"},7113:{sn:"Saoner",ln:"Saoner, Nagpur"},7114:{sn:"Ramtek",ln:"Ramtek, Nagpur"},7115:{sn:"Mouda",
ln:"Mouda, Nagpur"},7116:{sn:"Umrer",ln:"Umrer, Nagpur"},7118:{sn:"Kalmeshwar",ln:"Kalmeshwar, Nagpur"},7131:{sn:"Sironcha",ln:"Sironcha, Gadchiroli"},7132:{sn:"Gadchiroli",ln:"Gadchiroli, Gadchiroli"},7133:{sn:"Aheri",ln:"Aheri, Gadchiroli"},7134:{sn:"Bhamregadh",ln:"Bhamregadh, Gadchiroli"},7135:{sn:"Chamorshi",ln:"Chamorshi, Gadchiroli"},7136:{sn:"Etapalli",ln:"Etapalli, Gadchiroli"},7137:{sn:"Desaiganj",ln:"Desaiganj, Gadchiroli"},7138:{sn:"Dhanora",ln:"Dhanora, Gadchiroli"},7139:{sn:"Kurkheda",
ln:"Kurkheda, Gadchiroli"},7141:{sn:"Betul",ln:"Betul, Betul"},7142:{sn:"Bhimpur",ln:"Bhimpur, Betul"},7143:{sn:"Bhainsdehi",ln:"Bhainsdehi, Betul"},7144:{sn:"Atner",ln:"Atner, Betul"},7145:{sn:"Chicholi",ln:"Chicholi, Betul"},7146:{sn:"Ghorandogri",ln:"Ghorandogri, Betul"},7147:{sn:"Multai",ln:"Multai, Betul"},7148:{sn:"Prabha Pattan",ln:"Prabha Pattan, Betul"},7149:{sn:"Tamia",ln:"Tamia, Chhindwara"},7151:{sn:"Samudrapur",ln:"Samudrapur, Wardha"},7152:{sn:"Wardha",ln:"Wardha, Wardha"},7153:{sn:"Hinganghat",
ln:"Hinganghat, Wardha"},7155:{sn:"Seloo",ln:"Seloo, Wardha"},7156:{sn:"Talegaokarangal",ln:"Talegaokarangal, Wardha"},7157:{sn:"Arvi",ln:"Arvi, Wardha"},7158:{sn:"Deoli",ln:"Deoli, Wardha"},7160:{sn:"Jamai",ln:"Jamai, Chhindwara"},7161:{sn:"Parasia",ln:"Parasia, Chhindwara"},7162:{sn:"Chhindwara",ln:"Chhindwara, Chhindwara"},7164:{sn:"Pandhurna",ln:"Pandhurna, Chhindwara"},7165:{sn:"Saunsar",ln:"Saunsar, Chhindwara"},7166:{sn:"Chaurai",ln:"Chaurai, Chhindwara"},7167:{sn:"Amarwada",ln:"Amarwada, Chhindwara"},
7168:{sn:"Harrai",ln:"Harrai, Chhindwara"},7169:{sn:"Batkakhapa",ln:"Batkakhapa, Chhindwara"},7170:{sn:"Chumur",ln:"Chumur, Chandrapur"},7171:{sn:"Gond Pipri",ln:"Gond Pipri, Chandrapur"},7172:{sn:"Chandrapur",ln:"Chandrapur, Chandrapur"},7173:{sn:"Rajura",ln:"Rajura, Chandrapur"},7174:{sn:"Mul",ln:"Mul, Chandrapur"},7175:{sn:"Bhadrawati",ln:"Bhadrawati, Chandrapur"},7176:{sn:"Warora",ln:"Warora, Chandrapur"},7177:{sn:"Brahmapuri",ln:"Brahmapuri, Chandrapur"},7178:{sn:"Sinderwahi",ln:"Sinderwahi, Chandrapur"},
7179:{sn:"Nagbhir",ln:"Nagbhir, Chandrapur"},7180:{sn:"Salekasa",ln:"Salekasa, Bhandara"},7181:{sn:"Lakhandur",ln:"Lakhandur, Bhandara"},7182:{sn:"Gondia",ln:"Gondia, Bhandara"},7183:{sn:"Tumsar",ln:"Tumsar, Bhandara"},7184:{sn:"Bhandara",ln:"Bhandara, Bhandara"},7185:{sn:"Pauni",ln:"Pauni, Bhandara"},7186:{sn:"Sakoli",ln:"Sakoli, Bhandara"},7187:{sn:"Goregaon",ln:"Goregaon, Bhandara"},7189:{sn:"Amagaon",ln:"Amagaon, Bhandara"},7196:{sn:"Arjuni-Merogaon",ln:"Arjuni-Merogaon, Bhandara"},7197:{sn:"Mohadi",
ln:"Mohadi, Bhandara"},7198:{sn:"Tirora",ln:"Tirora, Bhandara"},7199:{sn:"Deori",ln:"Deori, Bhandara"},7201:{sn:"Kalamb",ln:"Kalamb, Yeotmal"},7202:{sn:"Ralegaon",ln:"Ralegaon, Yeotmal"},7203:{sn:"Babhulgaon",ln:"Babhulgaon, Yeotmal"},7220:{sn:"Chhikaldara",ln:"Chhikaldara, Amravati"},7221:{sn:"Nandgaon",ln:"Nandgaon, Amravati"},7222:{sn:"Chandurrly",ln:"Chandurrly, Amravati"},7223:{sn:"Achalpur",ln:"Achalpur, Amravati"},7224:{sn:"Daryapur",ln:"Daryapur, Amravati"},7225:{sn:"Tiwasa",ln:"Tiwasa, Amravati"},
7226:{sn:"Dharani",ln:"Dharani, Amravati"},7227:{sn:"Chandurbazar",ln:"Chandurbazar, Amravati"},7228:{sn:"Morshi",ln:"Morshi, Amravati"},7229:{sn:"Warlydwarud",ln:"Warlydwarud, Amravati"},7230:{sn:"Ghatanji",ln:"Ghatanji, Yeotmal"},7231:{sn:"Umarkhed",ln:"Umarkhed, Yeotmal"},7232:{sn:"Yeotmal",ln:"Yeotmal, Yeotmal"},7233:{sn:"Pusad",ln:"Pusad, Yeotmal"},7234:{sn:"Digras",ln:"Digras, Yeotmal"},7235:{sn:"Pandharkawada",ln:"Pandharkawada, Yeotmal"},7236:{sn:"Maregaon",ln:"Maregaon, Yeotmal"},7237:{sn:"Marigaon",
ln:"Marigaon, Yeotmal"},7238:{sn:"Darwaha",ln:"Darwaha, Yeotmal"},7239:{sn:"Wani",ln:"Wani, Yeotmal"},7251:{sn:"Risod",ln:"Risod, Akola"},7252:{sn:"Washim",ln:"Washim, Akola"},7253:{sn:"Mangrulpur",ln:"Mangrulpur, Akola"},7254:{sn:"Malgaon",ln:"Malgaon, Akola"},7255:{sn:"Barshi Takli",ln:"Barshi Takli, Akola"},7256:{sn:"Murtizapur",ln:"Murtizapur, Akola"},7257:{sn:"Balapur",ln:"Balapur, Akola"},7258:{sn:"Akot",ln:"Akot, Akola"},7260:{sn:"Lonar",ln:"Lonar, Buldhana"},7261:{sn:"Deolgaonraja",ln:"Deolgaonraja, Buldhana"},
7262:{sn:"Buldhana",ln:"Buldhana, Buldhana"},7263:{sn:"Khamgaon",ln:"Khamgaon, Buldhana"},7264:{sn:"Chikhali",ln:"Chikhali, Buldhana"},7266:{sn:"Jalgaonjamod",ln:"Jalgaonjamod, Buldhana"},7267:{sn:"Malkapur",ln:"Malkapur, Buldhana"},7268:{sn:"Mekhar",ln:"Mekhar, Buldhana"},7269:{sn:"Sindkhedaraja",ln:"Sindkhedaraja, Buldhana"},7270:{sn:"Sonkatch",ln:"Sonkatch, Dewas"},7271:{sn:"Bagli",ln:"Bagli, Dewas"},7272:{sn:"Dewas",ln:"Dewas, Dewas"},7273:{sn:"Kannod",ln:"Kannod, Dewas"},7274:{sn:"Khategaon",
ln:"Khategaon, Dewas"},7279:{sn:"Nandnva",ln:"Nandnva, Buldhana"},7280:{sn:"Barwaha",ln:"Barwaha, Khargone"},7281:{sn:"Sendhwa",ln:"Sendhwa, Khargone"},7282:{sn:"Khargone",ln:"Khargone, Khargone"},7283:{sn:"Maheshwar",ln:"Maheshwar, Khargone"},7284:{sn:"Rajpur",ln:"Rajpur, Khargone"},7285:{sn:"Kasrawad",ln:"Kasrawad, Khargone"},7286:{sn:"Khetia",ln:"Khetia, Khargone"},7287:{sn:"Gogaon",ln:"Gogaon, Khargone"},7288:{sn:"Bhikangaon",ln:"Bhikangaon, Khargone"},7289:{sn:"Zhirnia",ln:"Zhirnia, Khargone"},
7290:{sn:"Badwani",ln:"Badwani, Khargone"},7291:{sn:"Manawar",ln:"Manawar, Dhar"},7292:{sn:"Dhar",ln:"Dhar, Dhar"},7294:{sn:"Dharampuri",ln:"Dharampuri, Dhar"},7295:{sn:"Badnawar",ln:"Badnawar, Dhar"},7296:{sn:"Sardarpur",ln:"Sardarpur, Dhar"},7297:{sn:"Kukshi",ln:"Kukshi, Dhar"},7320:{sn:"Pandhana",ln:"Pandhana, Khandwa"},7321:{sn:"Sanwer",ln:"Sanwer, Indore"},7322:{sn:"Depalpur",ln:"Depalpur, Indore"},7323:{sn:"Punasa",ln:"Punasa, Khandwa"},7324:{sn:"Mhow",ln:"Mhow, Indore"},7325:{sn:"Burhanpur",
ln:"Burhanpur, Khandwa"},7326:{sn:"Baldi",ln:"Baldi, Khandwa"},7327:{sn:"Harsud",ln:"Harsud, Khandwa"},7328:{sn:"Khalwa",ln:"Khalwa, Khandwa"},7329:{sn:"Khakner",ln:"Khakner, Khandwa"},7360:{sn:"Shujalpur",ln:"Shujalpur, Shajapur"},7361:{sn:"Susner",ln:"Susner, Shajapur"},7362:{sn:"Agar",ln:"Agar, Shajapur"},7363:{sn:"Berchha",ln:"Berchha, Shajapur"},7364:{sn:"Shajapur",ln:"Shajapur, Shajapur"},7365:{sn:"Mahidpurcity",ln:"Mahidpurcity, Ujjain"},7366:{sn:"Khachrod",ln:"Khachrod, Ujjain"},7367:{sn:"Badnagar",
ln:"Badnagar, Ujjain"},7368:{sn:"Ghatia",ln:"Ghatia, Ujjain"},7369:{sn:"Tarana",ln:"Tarana, Ujjain"},7370:{sn:"Khilchipur",ln:"Khilchipur, Rajgarh"},7371:{sn:"Sarangpur",ln:"Sarangpur, Rajgarh"},7372:{sn:"Rajgarh",ln:"Rajgarh, Rajgarh"},7374:{sn:"Biaora",ln:"Biaora, Rajgarh"},7375:{sn:"Narsingharh",ln:"Narsingharh, Rajgarh"},7390:{sn:"Thandla",ln:"Thandla, Jhabua"},7391:{sn:"Petlawad",ln:"Petlawad, Jhabua"},7392:{sn:"Jhabua",ln:"Jhabua, Jhabua"},7393:{sn:"Jobat",ln:"Jobat, Jhabua"},7394:{sn:"Alirajpur",
ln:"Alirajpur, Jhabua"},7395:{sn:"Sondhwa",ln:"Sondhwa, Jhabua"},7410:{sn:"Alot",ln:"Alot, Ratlam"},7412:{sn:"Ratlam",ln:"Ratlam, Ratlam"},7413:{sn:"Sailana",ln:"Sailana, Ratlam"},7414:{sn:"Jaora",ln:"Jaora, Ratlam"},7420:{sn:"Jawad",ln:"Jawad, Mandsaur"},7421:{sn:"Manasa",ln:"Manasa, Mandsaur"},7422:{sn:"Mandsaur",ln:"Mandsaur, Mandsaur"},7423:{sn:"Neemuch",ln:"Neemuch, Mandsaur"},7424:{sn:"Malhargarh",ln:"Malhargarh, Mandsaur"},7425:{sn:"Garoth",ln:"Garoth, Mandsaur"},7426:{sn:"Sitamau",ln:"Sitamau, Mandsaur"},
7427:{sn:"Bhanpura",ln:"Bhanpura, Mandsaur"},7430:{sn:"Khanpur",ln:"Khanpur, Jhalawar"},7431:{sn:"Aklera",ln:"Aklera, Jhalawar"},7432:{sn:"Jhalawar",ln:"Jhalawar, Jhalawar"},7433:{sn:"Pachpahar",ln:"Pachpahar (Bhawanimandi), Jhalawar"},7434:{sn:"Pirawa",ln:"Pirawa (Raipur), Jhalawar"},7435:{sn:"Gangdhar",ln:"Gangdhar, Jhalawar"},7436:{sn:"Hindoli",ln:"Hindoli, Bundi"},7437:{sn:"Nainwa",ln:"Nainwa, Bundi"},7438:{sn:"Keshoraipatan",ln:"Keshoraipatan (Patan), Bundi"},7450:{sn:"Sangod",ln:"Sangod, Kota"},
7451:{sn:"Atru",ln:"Atru, Kota"},7452:{sn:"Chhabra",ln:"Chhabra, Kota"},7453:{sn:"Baran",ln:"Baran, Kota"},7454:{sn:"Chhipaborad",ln:"Chhipaborad, Kota"},7455:{sn:"Digod",ln:"Digod (Sultanpur), Kota"},7456:{sn:"Kishanganj",ln:"Kishanganj (Bhanwargarh), Kota"},7457:{sn:"Mangrol",ln:"Mangrol, Kota"},7458:{sn:"Pipalda",ln:"Pipalda (Sumerganj Mandi), Kota"},7459:{sn:"Ramganj Mandi",ln:"Ramganj Mandi, Kota"},7460:{sn:"Sahabad",ln:"Sahabad, Kota"},7461:{sn:"Mahuwa",ln:"Mahuwa, Sawaimadhopur"},7462:{sn:"Sawaimadhopur",
ln:"Sawaimadhopur, Sawaimadhopur"},7463:{sn:"Gangapur",ln:"Gangapur, Sawaimadhopur"},7464:{sn:"Karauli",ln:"Karauli, Sawaimadhopur"},7465:{sn:"Sapotra",ln:"Sapotra, Sawaimadhopur"},7466:{sn:"Bonli",ln:"Bonli, Sawaimadhopur"},7467:{sn:"Bamanwas",ln:"Bamanwas, Sawaimadhopur"},7468:{sn:"Khandar",ln:"Khandar, Sawaimadhopur"},7469:{sn:"Hindaun",ln:"Hindaun, Sawaimadhopur"},7480:{sn:"Goharganj",ln:"Goharganj, Raisen"},7481:{sn:"Gairatganj",ln:"Gairatganj, Raisen"},7482:{sn:"Raisen",ln:"Raisen, Raisen"},
7484:{sn:"Silwani",ln:"Silwani, Raisen"},7485:{sn:"Udaipura",ln:"Udaipura, Raisen"},7486:{sn:"Bareli",ln:"Bareli, Raisen"},7487:{sn:"Begamganj",ln:"Begamganj, Raisen"},7490:{sn:"Pohari",ln:"Pohari, Shivpuri"},7491:{sn:"Narwar",ln:"Narwar, Shivpuri"},7492:{sn:"Shivpuri",ln:"Shivpuri, Shivpuri"},7493:{sn:"Karera",ln:"Karera, Shivpuri"},7494:{sn:"Kolaras",ln:"Kolaras, Shivpuri"},7495:{sn:"Badarwas",ln:"Badarwas, Shivpuri"},7496:{sn:"Pichhore",ln:"Pichhore, Shivpuri"},7497:{sn:"Khaniadhana",ln:"Khaniadhana, Shivpuri"},
7521:{sn:"Seondha",ln:"Seondha, Gwalior"},7522:{sn:"Datia",ln:"Datia, Gwalior"},7523:{sn:"Bhander",ln:"Bhander, Gwalior"},7524:{sn:"Dabra",ln:"Dabra, Gwalior"},7525:{sn:"Bhitarwar",ln:"Bhitarwar, Gwalior"},7526:{sn:"Ghatigaon",ln:"Ghatigaon, Gwalior"},7527:{sn:"Mehgaon",ln:"Mehgaon, Morena"},7528:{sn:"Bijaypur",ln:"Bijaypur, Morena"},7529:{sn:"Laher",ln:"Laher, Morena"},7530:{sn:"Sheopurkalan",ln:"Sheopurkalan, Morena"},7531:{sn:"Baroda",ln:"Baroda, Morena"},7532:{sn:"Morena",ln:"Morena, Morena"},
7533:{sn:"Karhal",ln:"Karhal, Morena"},7534:{sn:"Bhind",ln:"Bhind, Morena"},7535:{sn:"Raghunathpur",ln:"Raghunathpur, Morena"},7536:{sn:"Sabalgarh",ln:"Sabalgarh, Morena"},7537:{sn:"Jora",ln:"Jora, Morena"},7538:{sn:"Ambah",ln:"Ambah, Morena"},7539:{sn:"Gohad",ln:"Gohad, Morena"},7540:{sn:"Bamori",ln:"Bamori, Guna"},7541:{sn:"Isagarh",ln:"Isagarh, Guna"},7542:{sn:"Guna",ln:"Guna, Guna"},7543:{sn:"Ashoknagar",ln:"Ashoknagar, Guna"},7544:{sn:"Raghogarh",ln:"Raghogarh, Guna"},7545:{sn:"Arone",ln:"Arone, Guna"},
7546:{sn:"Chachaura",ln:"Chachaura, Guna"},7547:{sn:"Chanderi",ln:"Chanderi, Guna"},7548:{sn:"Mungaoli",ln:"Mungaoli, Guna"},7560:{sn:"Ashta",ln:"Ashta, Bhopal"},7561:{sn:"Ichhawar",ln:"Ichhawar, Bhopal"},7562:{sn:"Sehore",ln:"Sehore, Bhopal"},7563:{sn:"Nasrullaganj",ln:"Nasrullaganj, Bhopal"},7564:{sn:"Budhni",ln:"Budhni, Bhopal"},7565:{sn:"Berasia",ln:"Berasia, Bhopal"},7570:{sn:"Seonimalwa",ln:"Seonimalwa, Itarsi"},7571:{sn:"Khirkiya",ln:"Khirkiya, Itarsi"},7572:{sn:"Itarsi",ln:"Itarsi, Itarsi"},
7573:{sn:"Timarani",ln:"Timarani, Itarsi"},7574:{sn:"Hoshangabad",ln:"Hoshangabad, Itarsi"},7575:{sn:"Sohagpur",ln:"Sohagpur, Itarsi"},7576:{sn:"Piparia",ln:"Piparia, Itarsi"},7577:{sn:"Harda",ln:"Harda, Itarsi"},7578:{sn:"Pachmarhi",ln:"Pachmarhi, Itarsi"},7580:{sn:"Bina",ln:"Bina, Sagar"},7581:{sn:"Khurai",ln:"Khurai, Sagar"},7582:{sn:"Sagar",ln:"Sagar, Sagar"},7583:{sn:"Banda",ln:"Banda, Sagar"},7584:{sn:"Rahatgarh",ln:"Rahatgarh, Sagar"},7585:{sn:"Rehli",ln:"Rehli, Sagar"},7586:{sn:"Deori",ln:"Deori, Sagar"},
7590:{sn:"Lateri",ln:"Lateri, Vidisha"},7591:{sn:"Sironj",ln:"Sironj, Vidisha"},7592:{sn:"Vidisha",ln:"Vidisha, Vidisha"},7593:{sn:"Kurwai",ln:"Kurwai, Vidisha"},7594:{sn:"Ganjbasoda",ln:"Ganjbasoda, Vidisha"},7595:{sn:"Nateran",ln:"Nateran, Vidisha"},7596:{sn:"Gyraspur",ln:"Gyraspur, Vidisha"},7601:{sn:"Patharia",ln:"Patharia, Damoh"},7603:{sn:"Tendukheda",ln:"Tendukheda, Damoh"},7604:{sn:"Hatta",ln:"Hatta, Damoh"},7605:{sn:"Patera",ln:"Patera, Damoh"},7606:{sn:"Jabera",ln:"Jabera, Damoh"},7608:{sn:"Bijawar",
ln:"Bijawar, Chhatarpur"},7609:{sn:"Buxwaha",ln:"Buxwaha, Chhatarpur"},7621:{sn:"Patan",ln:"Patan, Jabalpur"},7622:{sn:"Katni",ln:"Katni, Jabalpur"},7623:{sn:"Kundam",ln:"Kundam, Jabalpur"},7624:{sn:"Sihora",ln:"Sihora, Jabalpur"},7625:{sn:"Umariapan",ln:"Umariapan, Jabalpur"},7626:{sn:"Vijayraghogarh",ln:"Vijayraghogarh, Jabalpur"},7627:{sn:"Manpur",ln:"Manpur, Shahdol"},7628:{sn:"Karpa",ln:"Karpa, Shahdol"},7629:{sn:"Pushprajgarh",ln:"Pushprajgarh, Shahdol"},7630:{sn:"Katangi",ln:"Katangi, Balaghat"},
7632:{sn:"Balaghat",ln:"Balaghat, Balaghat"},7633:{sn:"Waraseoni",ln:"Waraseoni, Balaghat"},7634:{sn:"Lamta",ln:"Lamta, Balaghat"},7635:{sn:"Lanji",ln:"Lanji, Balaghat"},7636:{sn:"Baihar",ln:"Baihar, Balaghat"},7637:{sn:"Birsa",ln:"Birsa, Balaghat"},7638:{sn:"Damoh",ln:"Damoh, Balaghat"},7640:{sn:"Shahpur",ln:"Shahpur, Mandla"},7641:{sn:"Niwas",ln:"Niwas, Mandla"},7642:{sn:"Mandla",ln:"Mandla, Mandla"},7643:{sn:"Bijadandi",ln:"Bijadandi, Mandla"},7644:{sn:"Dindori",ln:"Dindori, Mandla"},7645:{sn:"Karanjia",
ln:"Karanjia, Mandla"},7646:{sn:"Nainpur",ln:"Nainpur, Mandla"},7647:{sn:"Ghughari",ln:"Ghughari, Mandla"},7648:{sn:"Mawai",ln:"Mawai, Mandla"},7649:{sn:"Kakaiya",ln:"Kakaiya, Mandla"},7650:{sn:"Beohari",ln:"Beohari, Shahdol"},7651:{sn:"Jaisinghnagar",ln:"Jaisinghnagar, Shahdol"},7652:{sn:"Shahdol",ln:"Shahdol, Shahdol"},7653:{sn:"Bandhavgarh",ln:"Bandhavgarh, Shahdol"},7655:{sn:"Birsinghpur",ln:"Birsinghpur, Shahdol"},7656:{sn:"Kannodi",ln:"Kannodi, Shahdol"},7657:{sn:"Jaitpur",ln:"Jaitpur, Shahdol"},
7658:{sn:"Kotma",ln:"Kotma, Shahdol"},7659:{sn:"Jaithari",ln:"Jaithari, Shahdol"},7660:{sn:"Sirmour",ln:"Sirmour, Rewa"},7661:{sn:"Teonthar",ln:"Teonthar, Rewa"},7662:{sn:"Rewa",ln:"Rewa, Rewa"},7663:{sn:"Mauganj",ln:"Mauganj, Rewa"},7664:{sn:"Hanumana",ln:"Hanumana, Rewa"},7670:{sn:"Majhagwan",ln:"Majhagwan, Satna"},7671:{sn:"Jaitwara",ln:"Jaitwara, Satna"},7672:{sn:"Satna",ln:"Satna, Satna"},7673:{sn:"Nagod",ln:"Nagod, Satna"},7674:{sn:"Maihar",ln:"Maihar, Satna"},7675:{sn:"Amarpatan",ln:"Amarpatan, Satna"},
7680:{sn:"Niwari",ln:"Niwari, Chhatarpur"},7681:{sn:"Jatara",ln:"Jatara, Chhatarpur"},7682:{sn:"Chhatarpur",ln:"Chhatarpur, Chhatarpur"},7683:{sn:"Tikamgarh",ln:"Tikamgarh, Chhatarpur"},7684:{sn:"Baldeogarh",ln:"Baldeogarh, Chhatarpur"},7685:{sn:"Nowgaon",ln:"Nowgaon, Chhatarpur"},7686:{sn:"Khajuraho",ln:"Khajuraho, Chhatarpur"},7687:{sn:"Laundi",ln:"Laundi, Chhatarpur"},7688:{sn:"Gourihar",ln:"Gourihar, Chhatarpur"},7689:{sn:"Badamalhera",ln:"Badamalhera, Chhatarpur"},7690:{sn:"Lakhnadon",ln:"Lakhnadon, Seoni"},
7691:{sn:"Chhapara",ln:"Chhapara, Seoni"},7692:{sn:"Seoni",ln:"Seoni, Seoni"},7693:{sn:"Ghansour",ln:"Ghansour, Seoni"},7694:{sn:"Keolari",ln:"Keolari, Seoni"},7695:{sn:"Gopalganj",ln:"Gopalganj, Seoni"},7700:{sn:"Nagri",ln:"Nagri, Raipur"},7701:{sn:"Pingeshwar",ln:"Pingeshwar, Raipur"},7703:{sn:"Manpur",ln:"Manpur, Raipur"},7704:{sn:"Deobhog",ln:"Deobhog, Raipur"},7705:{sn:"Kurud",ln:"Kurud, Raipur"},7706:{sn:"Gariaband",ln:"Gariaband, Raipur"},7707:{sn:"Bagbahera",ln:"Bagbahera, Raipur"},7720:{sn:"Arang",
ln:"Arang, Raipur"},7721:{sn:"Neora",ln:"Neora, Raipur"},7722:{sn:"Dhamtari",ln:"Dhamtari, Raipur"},7723:{sn:"Mahasamund",ln:"Mahasamund, Raipur"},7724:{sn:"Basana",ln:"Basana, Raipur"},7725:{sn:"Saraipali",ln:"Saraipali, Raipur"},7726:{sn:"Bhatapara",ln:"Bhatapara, Raipur"},7727:{sn:"Balodabazar",ln:"Balodabazar, Raipur"},7728:{sn:"Kasdol",ln:"Kasdol, Raipur"},7729:{sn:"Bhilaigarh",ln:"Bhilaigarh, Raipur"},7730:{sn:"Ajaigarh",ln:"Ajaigarh, Panna"},7731:{sn:"Gunnore",ln:"Gunnore, Panna"},7732:{sn:"Panna",
ln:"Panna, Panna"},7733:{sn:"Pawai",ln:"Pawai, Panna"},7734:{sn:"Shahnagar",ln:"Shahnagar, Panna"},7740:{sn:"Bodla",ln:"Bodla, Durg"},7741:{sn:"Kawardha",ln:"Kawardha, Durg"},7743:{sn:"Chuikhadan",ln:"Chuikhadan, Durg"},7744:{sn:"Rajandgaon",ln:"Rajandgaon, Durg"},7745:{sn:"Chhuriakala",ln:"Chhuriakala, Durg"},7746:{sn:"Manpur",ln:"Manpur, Durg"},7747:{sn:"Mohla",ln:"Mohla, Durg"},7748:{sn:"Dallirajhara",ln:"Dallirajhara, Durg"},7749:{sn:"Balod",ln:"Balod, Durg"},7750:{sn:"Marwahi",ln:"Marwahi, Bilaspur"},
7751:{sn:"Pendra",ln:"Pendra, Bilaspur"},7752:{sn:"Bilaspur",ln:"Bilaspur, Bilaspur"},7753:{sn:"Kota",ln:"Kota, Bilaspur"},7754:{sn:"Pandaria",ln:"Pandaria, Bilaspur"},7755:{sn:"Mungeli",ln:"Mungeli, Bilaspur"},7756:{sn:"Lormi",ln:"Lormi, Bilaspur"},7757:{sn:"Shakti",ln:"Shakti, Bilaspur"},7758:{sn:"Dabhara",ln:"Dabhara, Bilaspur"},7759:{sn:"Korba",ln:"Korba, Bilaspur"},7761:{sn:"Tapkara",ln:"Tapkara, Raigarh"},7762:{sn:"Raigarh",ln:"Raigarh, Raigarh"},7763:{sn:"Jashpurnagar",ln:"Jashpurnagar, Raigarh"},
7764:{sn:"Kunkuri",ln:"Kunkuri, Raigarh"},7765:{sn:"Pathalgaon",ln:"Pathalgaon, Raigarh"},7766:{sn:"Dharamjaigarh",ln:"Dharamjaigarh, Raigarh"},7767:{sn:"Gharghoda",ln:"Gharghoda, Raigarh"},7768:{sn:"Saranggarh",ln:"Saranggarh, Raigarh"},7769:{sn:"Bagicha",ln:"Bagicha, Raigarh"},7770:{sn:"Kathdol",ln:"Kathdol, Sarguja (Ambikapur)"},7771:{sn:"Manendragarh",ln:"Manendragarh, Sarguja (Ambikapur)"},7772:{sn:"Wadrainagar",ln:"Wadrainagar, Sarguja (Ambikapur)"},7773:{sn:"Odgi",ln:"Odgi, Sarguja (Ambikapur)"},
7774:{sn:"Ambikapur",ln:"Ambikapur, Sarguja (Ambikapur)"},7775:{sn:"Surajpur",ln:"Surajpur, Sarguja (Ambikapur)"},7776:{sn:"Premnagar",ln:"Premnagar, Sarguja (Ambikapur)"},7777:{sn:"Pratappur",ln:"Pratappur, Sarguja (Ambikapur)"},7778:{sn:"Semaria",ln:"Semaria, Sarguja (Ambikapur)"},7779:{sn:"Ramchandrapur",ln:"Ramchandrapur, Sarguja (Ambikapur)"},7781:{sn:"Narainpur",ln:"Narainpur, Jagdalpur"},7782:{sn:"Jagdalpur",ln:"Jagdalpur, Jagdalpur"},7783:{sn:"Padamkot",ln:"Padamkot, Jagdalpur"},7784:{sn:"Parasgaon",
ln:"Parasgaon, Jagdalpur"},7785:{sn:"Makodi",ln:"Makodi, Jagdalpur"},7786:{sn:"Kondagaon",ln:"Kondagaon, Jagdalpur"},7787:{sn:"Jarwa",ln:"Jarwa, Jagdalpur"},7788:{sn:"Luckwada",ln:"Luckwada, Jagdalpur"},7789:{sn:"Bhairongarh",ln:"Bhairongarh, Jagdalpur"},7790:{sn:"Babaichichli",ln:"Babaichichli, Narsinghpur"},7791:{sn:"Gadarwara",ln:"Gadarwara, Narsinghpur"},7792:{sn:"Narsinghpur",ln:"Narsinghpur, Narsinghpur"},7793:{sn:"Kareli",ln:"Kareli, Narsinghpur"},7794:{sn:"Gotegaon",ln:"Gotegaon, Narsinghpur"},
7801:{sn:"Deosar",ln:"Deosar, Sidhi"},7802:{sn:"Churhat",ln:"Churhat, Sidhi"},7803:{sn:"Majholi",ln:"Majholi, Sidhi"},7804:{sn:"Kusmi",ln:"Kusmi, Sidhi"},7805:{sn:"Singrauli",ln:"Singrauli, Sidhi"},7806:{sn:"Chitrangi",ln:"Chitrangi, Sidhi"},7810:{sn:"Uproda",ln:"Uproda, Bilaspur"},7811:{sn:"Pasan",ln:"Pasan, Bilaspur"},7812:{sn:"Damoh",ln:"Damoh, Damoh"},7813:{sn:"Barpalli",ln:"Barpalli, Bilaspur"},7815:{sn:"Kathghora",ln:"Kathghora, Bilaspur"},7816:{sn:"Pali",ln:"Pali, Bilaspur"},7817:{sn:"Janjgir",
ln:"Janjgir, Bilaspur"},7818:{sn:"Chandipara",ln:"Chandipara, Bilaspur"},7819:{sn:"Pandishankar",ln:"Pandishankar, Bilaspur"},7820:{sn:"Khairagarh",ln:"Khairagarh, Durg"},7821:{sn:"Dhamda",ln:"Dhamda, Durg"},7822:{sn:"Sidhi",ln:"Sidhi, Sidhi"},7823:{sn:"Dongargarh",ln:"Dongargarh, Durg"},7824:{sn:"Bemetara",ln:"Bemetara, Durg"},7825:{sn:"Berla",ln:"Berla, Durg"},7826:{sn:"Patan",ln:"Patan, Durg"},7831:{sn:"Balrampur",ln:"Balrampur, Sarguja (Ambikapur)"},7832:{sn:"Rajpur",ln:"Rajpur, Sarguja (Ambikapur)"},
7833:{sn:"Udaipur",ln:"Udaipur, Sarguja (Ambikapur)"},7834:{sn:"Sitapur",ln:"Sitapur, Sarguja (Ambikapur)"},7835:{sn:"Bharathpur",ln:"Bharathpur, Sarguja (Ambikapur)"},7836:{sn:"Baikunthpur",ln:"Baikunthpur, Sarguja (Ambikapur)"},7840:{sn:"Koyelibeda",ln:"Koyelibeda, Jagdalpur"},7841:{sn:"Sarona",ln:"Sarona, Jagdalpur"},7843:{sn:"Durgakondal",ln:"Durgakondal, Jagdalpur"},7844:{sn:"Pakhanjur",ln:"Pakhanjur, Jagdalpur"},7846:{sn:"Garpa",ln:"Garpa, Jagdalpur"},7847:{sn:"Antagarh",ln:"Antagarh, Jagdalpur"},
7848:{sn:"Keskal",ln:"Keskal, Jagdalpur"},7849:{sn:"Baderajpur",ln:"Baderajpur, Jagdalpur"},7850:{sn:"Bhanupratappur",ln:"Bhanupratappur, Jagdalpur"},7851:{sn:"Bhopalpatnam",ln:"Bhopalpatnam, Jagdalpur"},7852:{sn:"Toynar",ln:"Toynar, Jagdalpur"},7853:{sn:"Bijapur",ln:"Bijapur, Jagdalpur"},7854:{sn:"Ilamidi",ln:"Ilamidi, Jagdalpur"},7855:{sn:"Chingmut",ln:"Chingmut, Jagdalpur"},7856:{sn:"Dantewada",ln:"Dantewada, Jagdalpur"},7857:{sn:"Bacheli",ln:"Bacheli, Jagdalpur"},7858:{sn:"Kuakunda",ln:"Kuakunda, Jagdalpur"},
7859:{sn:"Lohadigundah",ln:"Lohadigundah, Jagdalpur"},7861:{sn:"Netanar",ln:"Netanar, Jagdalpur"},7862:{sn:"Bastanar",ln:"Bastanar, Jagdalpur"},7863:{sn:"Chingamut",ln:"Chingamut, Jagdalpur"},7864:{sn:"Sukma",ln:"Sukma, Jagdalpur"},7865:{sn:"Gogunda",ln:"Gogunda, Jagdalpur"},7866:{sn:"Konta",ln:"Konta, Jagdalpur"},7867:{sn:"Bokaband",ln:"Bokaband, Jagdalpur"},7868:{sn:"Kanker",ln:"Kanker, Jagdalpur"},8110:{sn:"Anekal",ln:"Anekal, Bangalore"},8111:{sn:"Hosakote",ln:"Hosakote, Bangalore"},8113:{sn:"Channapatna",
ln:"Channapatna, Bangalore"},8117:{sn:"Kanakapura",ln:"Kanakapura, Bangalore"},8118:{sn:"Nelamangala",ln:"Nelamangala, Bangalore"},8119:{sn:"Doddaballapur",ln:"Doddaballapur, Bangalore"},8131:{sn:"Gubbi",ln:"Gubbi, Tumkur"},8132:{sn:"Kunigal",ln:"Kunigal, Tumkur"},8133:{sn:"Chikkanayakanahalli",ln:"Chikkanayakanahalli, Tumkur"},8134:{sn:"Tiptur",ln:"Tiptur, Tumkur"},8135:{sn:"Sira",ln:"Sira, Tumkur"},8136:{sn:"Pavagada",ln:"Pavagada, Tumkur"},8137:{sn:"Madugiri",ln:"Madugiri, Tumkur"},8138:{sn:"Koratageri",
ln:"Koratageri, Tumkur"},8139:{sn:"Turuvekere",ln:"Turuvekere, Tumkur"},8150:{sn:"Bagepalli",ln:"Bagepalli, Kolar"},8151:{sn:"Malur",ln:"Malur, Kolar"},8152:{sn:"Kolar",ln:"Kolar, Kolar"},8153:{sn:"Bangarpet",ln:"Bangarpet, Kolar"},8154:{sn:"Chintamani",ln:"Chintamani, Kolar"},8155:{sn:"Gowribidanur",ln:"Gowribidanur, Kolar"},8156:{sn:"Chikkaballapur",ln:"Chikkaballapur, Kolar"},8157:{sn:"Srinivasapur",ln:"Srinivasapur, Kolar"},8158:{sn:"Sidlaghatta",ln:"Sidlaghatta, Kolar"},8159:{sn:"Mulbagal",ln:"Mulbagal, Kolar"},
8170:{sn:"Alur",ln:"Alur, Hassan"},8172:{sn:"Hassan",ln:"Hassan, Hassan"},8173:{sn:"Sakleshpur",ln:"Sakleshpur, Hassan"},8174:{sn:"Arsikere",ln:"Arsikere, Hassan"},8175:{sn:"Holenarasipur",ln:"Holenarasipur, Hassan"},8176:{sn:"Cannarayapatna",ln:"Cannarayapatna, Hassan"},8177:{sn:"Belur",ln:"Belur, Hassan"},8180:{sn:"Basavapatna",ln:"Basavapatna, Shimoga"},8181:{sn:"Thirthahalli",ln:"Thirthahalli, Shimoga"},8182:{sn:"Shimoga",ln:"Shimoga, Shimoga"},8183:{sn:"Sagar",ln:"Sagar, Shimoga"},8184:{sn:"Sorab",
ln:"Sorab, Shimoga"},8185:{sn:"Hosanagara",ln:"Hosanagara, Shimoga"},8186:{sn:"Kargal",ln:"Kargal, Shimoga"},8187:{sn:"Shikaripura",ln:"Shikaripura, Shimoga"},8188:{sn:"Honnali",ln:"Honnali, Shimoga"},8189:{sn:"Channagiri",ln:"Channagiri, Shimoga"},8190:{sn:"Tallak",ln:"Tallak, Devangere"},8191:{sn:"Holalkere",ln:"Holalkere, Devangere"},8192:{sn:"Davangere",ln:"Davangere, Devangere"},8193:{sn:"Hiriyur",ln:"Hiriyur, Devangere"},8194:{sn:"Chitradurga",ln:"Chitradurga, Devangere"},8195:{sn:"Challakere",
ln:"Challakere, Devangere"},8196:{sn:"Jagalur",ln:"Jagalur, Devangere"},8198:{sn:"Molkalmuru",ln:"Molkalmuru, Devangere"},8199:{sn:"Hosadurga",ln:"Hosadurga, Devangere"},8221:{sn:"Nanjangud",ln:"Nanjangud, Mysore"},8222:{sn:"Hunsur",ln:"Hunsur, Mysore"},8223:{sn:"K. R. Nagar",ln:"K. R. Nagar, Mysore"},8224:{sn:"Kollegal",ln:"Kollegal, Mysore"},8225:{sn:"Cowdahalli",ln:"Cowdahalli, Mysore"},8226:{sn:"Chamrajnagar",ln:"Chamrajnagar, Mysore"},8227:{sn:"T. Narsipur",ln:"T. Narsipur, Mysore"},8228:{sn:"H. D. Kote",
ln:"H. D. Kote, Mysore"},8229:{sn:"Gundlupet",ln:"Gundlupet, Mysore"},8230:{sn:"Krishnarajapet",ln:"Krishnarajapet, Mandya"},8231:{sn:"Malavalli",ln:"Malavalli, Mandya"},8232:{sn:"Mandya",ln:"Mandya, Mandya"},8234:{sn:"Nagamangala",ln:"Nagamangala, Mandya"},8236:{sn:"Pandavpura",ln:"Pandavpura, Mandya"},8251:{sn:"Puttur",ln:"Puttur, Dakshin-Kanada (Mangalore)"},8253:{sn:"Hebri",ln:"Hebri, Dakshin-Kanada (Mangalore)"},8254:{sn:"Kundapur",ln:"Kundapur, Dakshin-Kanada (Mangalore)"},8255:{sn:"Bantwal",
ln:"Bantwal, Dakshin-Kanada (Mangalore)"},8256:{sn:"Belthangady",ln:"Belthangady, Dakshin-Kanada (Mangalore)"},8257:{sn:"Sullia",ln:"Sullia, Dakshin-Kanada (Mangalore)"},8258:{sn:"Karkala",ln:"Karkala, Dakshin-Kanada (Mangalore)"},8259:{sn:"Shankarnarayana",ln:"Shankarnarayana, Dakshin-Kanada (Mangalore)"},8261:{sn:"Tarikere",ln:"Tarikere, Chikmagalur"},8262:{sn:"Chikmagalur",ln:"Chikmagalur, Chikmagalur"},8263:{sn:"Mudigere",ln:"Mudigere, Chikmagalur"},8265:{sn:"Koppa",ln:"Koppa, Chikmagalur"},8266:{sn:"Narsimharajapur",
ln:"Narsimharajapur, Chikmagalur"},8267:{sn:"Kadur",ln:"Kadur, Chikmagalur"},8272:{sn:"Madikeri",ln:"Madikeri, Kodagu (Madikera)"},8274:{sn:"Virajpet",ln:"Virajpet, Kodagu (Madikera)"},8276:{sn:"Somwarpet",ln:"Somwarpet, Kodagu (Madikera)"},8282:{sn:"Bhadravati",ln:"Bhadravati, Shimoga"},8283:{sn:"Salkani",ln:"Salkani, Uttar-Kanada (Karwar)"},8284:{sn:"Haliyal",ln:"Haliyal, Uttar-Kanada (Karwar)"},8288:{sn:"Bailhongal",ln:"Bailhongal, Belgaum"},8289:{sn:"Athani",ln:"Athani, Belgaum"},8301:{sn:"Mundagod",
ln:"Mundagod, Uttar-Kanada (Karwar)"},8304:{sn:"Kundgol",ln:"Kundgol, Hubli"},8330:{sn:"Saundatti",ln:"Saundatti, Belgaum"},8331:{sn:"Raibag",ln:"Raibag (Kudchi), Belgaum"},8332:{sn:"Gokak",ln:"Gokak, Belgaum"},8333:{sn:"Hukkeri",ln:"Hukkeri (Sankeshwar), Belgaum"},8334:{sn:"Mudalgi",ln:"Mudalgi, Belgaum"},8335:{sn:"Ramdurg",ln:"Ramdurg, Belgaum"},8336:{sn:"Khanapur",ln:"Khanapur, Belgaum"},8337:{sn:"Murugod",ln:"Murugod, Belgaum"},8338:{sn:"Chikkodi",ln:"Chikkodi, Belgaum"},8339:{sn:"Ainapur",ln:"Ainapur, Belgaum"},
8342:{sn:"Margao",ln:"Margao, Panji"},8343:{sn:"Ponda",ln:"Ponda, Panji"},8345:{sn:"Sanguem",ln:"Sanguem, Panji"},8346:{sn:"Canacona",ln:"Canacona (Quepem), Panji"},8350:{sn:"Mudhol",ln:"Mudhol, Bijapur"},8351:{sn:"Hungund",ln:"Hungund, Bijapur"},8352:{sn:"Bijapur",ln:"Bijapur, Bijapur"},8353:{sn:"Jamkhandi",ln:"Jamkhandi, Bijapur"},8354:{sn:"Bagalkot",ln:"Bagalkot, Bijapur"},8355:{sn:"Bableshwar",ln:"Bableshwar, Bijapur"},8356:{sn:"Muddebihal",ln:"Muddebihal, Bijapur"},8357:{sn:"Badami",ln:"Badami, Bijapur"},
8358:{sn:"Basavanabagewadi",ln:"Basavanabagewadi, Bijapur"},8359:{sn:"Indi",ln:"Indi, Bijapur"},8370:{sn:"Kalghatagi",ln:"Kalghatagi, Hubli"},8371:{sn:"Mundargi",ln:"Mundargi, Hubli"},8372:{sn:"Gadag",ln:"Gadag, Hubli"},8373:{sn:"Ranebennur",ln:"Ranebennur, Hubli"},8375:{sn:"Haveri",ln:"Haveri, Hubli"},8376:{sn:"Hirekerur",ln:"Hirekerur, Hubli"},8377:{sn:"Nargund",ln:"Nargund, Hubli"},8378:{sn:"Savanur",ln:"Savanur, Hubli"},8379:{sn:"Hangal",ln:"Hangal, Hubli"},8380:{sn:"Navalgund",ln:"Navalgund, Hubli"},
8381:{sn:"Ron",ln:"Ron, Hubli"},8382:{sn:"Karwar",ln:"Karwar, Uttar-Kanada (Karwar)"},8383:{sn:"Joida",ln:"Joida, Uttar-Kanada (Karwar)"},8384:{sn:"Sirsi",ln:"Sirsi, Uttar-Kanada (Karwar)"},8385:{sn:"Bhatkal",ln:"Bhatkal, Uttar-Kanada (Karwar)"},8386:{sn:"Kumta",ln:"Kumta, Uttar-Kanada (Karwar)"},8387:{sn:"Honnavar",ln:"Honnavar, Uttar-Kanada (Karwar)"},8388:{sn:"Ankola",ln:"Ankola, Uttar-Kanada (Karwar)"},8389:{sn:"Siddapur",ln:"Siddapur, Uttar-Kanada (Karwar)"},8391:{sn:"Kudligi",ln:"Kudligi, Bellary"},
8392:{sn:"Bellary",ln:"Bellary, Bellary"},8393:{sn:"Kurugodu",ln:"Kurugodu, Bellary"},8394:{sn:"Hospet",ln:"Hospet, Bellary"},8395:{sn:"Sandur",ln:"Sandur, Bellary"},8396:{sn:"Siruguppa",ln:"Siruguppa, Bellary"},8397:{sn:"H. B. Halli",ln:"H. B. Halli, Bellary"},8398:{sn:"Harapanahalli",ln:"Harapanahalli, Bellary"},8399:{sn:"Huvinahadagali",ln:"Huvinahadagali, Bellary"},8402:{sn:"Kanigiri",ln:"Kanigiri, Ongole"},8403:{sn:"Yerragondapalem",ln:"Yerragondapalem, Ongole"},8404:{sn:"Marturu",ln:"Marturu, Ongole"},
8405:{sn:"Giddalur",ln:"Giddalur, Ongole"},8406:{sn:"Cumbum",ln:"Cumbum, Ongole"},8407:{sn:"Darsi",ln:"Darsi, Ongole"},8408:{sn:"Donakonda",ln:"Donakonda, Ongole"},8411:{sn:"Tanduru",ln:"Tanduru, Hyderabad"},8412:{sn:"Pargi",ln:"Pargi, Hyderabad"},8413:{sn:"Hyderabad",ln:"Hyderabad West (Shamshabad), Hyderabad"},8414:{sn:"Ibrahimpatnam",ln:"Ibrahimpatnam, Hyderabad"},8415:{sn:"Hyderabad",ln:"Hyderabad East (Ghatkeswar), Hyderabad"},8416:{sn:"Vikrabad",ln:"Vikrabad, Hyderabad"},8417:{sn:"Chevella",
ln:"Chevella, Hyderabad"},8418:{sn:"Medchal",ln:"Medchal, Hyderabad"},8419:{sn:"Yellapur",ln:"Yellapur, Uttar-Kanada (Karwar)"},8422:{sn:"Chadchan",ln:"Chadchan, Bijapur"},8424:{sn:"Devarahippargi",ln:"Devarahippargi, Bijapur"},8425:{sn:"Biligi",ln:"Biligi, Bijapur"},8426:{sn:"Telgi",ln:"Telgi, Bijapur"},8440:{sn:"Nimburga",ln:"Nimburga, Gulbarga"},8441:{sn:"Sedam",ln:"Sedam, Gulbarga"},8442:{sn:"Jewargi",ln:"Jewargi, Gulbarga"},8443:{sn:"Shorapur",ln:"Shorapur, Gulbarga"},8444:{sn:"Hunsagi",ln:"Hunsagi, Gulbarga"},
8450:{sn:"Andole",ln:"Andole (Jogipet), Sangareddy"},8451:{sn:"Zahirabad",ln:"Zahirabad, Sangareddy"},8452:{sn:"Medak",ln:"Medak, Sangareddy"},8454:{sn:"Gajwel",ln:"Gajwel, Sangareddy"},8455:{sn:"Sangareddy",ln:"Sangareddy, Sangareddy"},8456:{sn:"Narayankhed",ln:"Narayankhed, Sangareddy"},8457:{sn:"Siddipet",ln:"Siddipet, Sangareddy"},8458:{sn:"Narsapur",ln:"Narsapur, Sangareddy"},8461:{sn:"Dichpalli",ln:"Dichpalli, Nizamabad"},8462:{sn:"Nizamabad",ln:"Nizamabad, Nizamabad"},8463:{sn:"Armoor",ln:"Armoor, Nizamabad"},
8464:{sn:"Madnur",ln:"Madnur, Nizamabad"},8465:{sn:"Yellareddy",ln:"Yellareddy, Nizamabad"},8466:{sn:"Banswada",ln:"Banswada, Nizamabad"},8467:{sn:"Bodhan",ln:"Bodhan, Nizamabad"},8468:{sn:"Kamareddy",ln:"Kamareddy, Nizamabad"},8470:{sn:"Afzalpur",ln:"Afzalpur, Gulbarga"},8471:{sn:"Mashal",ln:"Mashal, Gulbarga"},8472:{sn:"Gulbarga",ln:"Gulbarga, Gulbarga"},8473:{sn:"Yadgiri",ln:"Yadgiri, Gulbarga"},8474:{sn:"Chittapur",ln:"Chittapur, Gulbarga"},8475:{sn:"Chincholi",ln:"Chincholi, Gulbarga"},8476:{sn:"Wadi",
ln:"Wadi, Gulbarga"},8477:{sn:"Aland",ln:"Aland, Gulbarga"},8478:{sn:"Kamalapur",ln:"Kamalapur, Gulbarga"},8479:{sn:"Shahapur",ln:"Shahapur, Gulbarga"},8481:{sn:"Basavakalyan",ln:"Basavakalyan, Bidar"},8482:{sn:"Bidar",ln:"Bidar, Bidar"},8483:{sn:"Humnabad",ln:"Humnabad, Bidar"},8484:{sn:"Bhalki",ln:"Bhalki, Bidar"},8485:{sn:"Aurad",ln:"Aurad, Bidar"},8487:{sn:"Shirahatti",ln:"Shirahatti, Hubli"},8488:{sn:"Sindagi",ln:"Sindagi, Bijapur"},8490:{sn:"Pamuru",ln:"Pamuru, Ongole"},8491:{sn:"Kanaganapalle",
ln:"Kanaganapalle, Anantpur (Guntakal)"},8492:{sn:"Kambadur",ln:"Kambadur, Anantpur (Guntakal)"},8493:{sn:"Madakasira",ln:"Madakasira, Anantpur (Guntakal)"},8494:{sn:"Kadiri",ln:"Kadiri, Anantpur (Guntakal)"},8495:{sn:"Rayadurg",ln:"Rayadurg, Anantpur (Guntakal)"},8496:{sn:"Uravakonda",ln:"Uravakonda, Anantpur (Guntakal)"},8497:{sn:"Kalyandurg",ln:"Kalyandurg, Anantpur (Guntakal)"},8498:{sn:"Nallacheruvu",ln:"Nallacheruvu (Tanakallu), Anantpur (Guntakal)"},8499:{sn:"Podili",ln:"Podili, Ongole"},8501:{sn:"Kollapur",
ln:"Kollapur, Mahabubnagar"},8502:{sn:"Alampur",ln:"Alampur, Mahabubnagar"},8503:{sn:"Makthal",ln:"Makthal, Mahabubnagar"},8504:{sn:"Atmakur",ln:"Atmakur, Mahabubnagar"},8505:{sn:"Kodangal",ln:"Kodangal, Mahabubnagar"},8506:{sn:"Narayanpet",ln:"Narayanpet, Mahabubnagar"},8510:{sn:"Koilkuntla",ln:"Koilkuntla, Kurnool"},8512:{sn:"Adoni",ln:"Adoni, Kurnool"},8513:{sn:"Nandikotkur",ln:"Nandikotkur, Kurnool"},8514:{sn:"Nandyal",ln:"Nandyal, Kurnool"},8515:{sn:"Banaganapalle",ln:"Banaganapalle, Kurnool"},
8516:{sn:"Dronachalam",ln:"Dronachalam, Kurnool"},8517:{sn:"Atmakur",ln:"Atmakur, Kurnool"},8518:{sn:"Kurnool",ln:"Kurnool, Kurnool"},8519:{sn:"Allagadda",ln:"Allagadda, Kurnool"},8520:{sn:"Pattikonda",ln:"Pattikonda, Kurnool"},8522:{sn:"Peapalle",ln:"Peapalle, Kurnool"},8523:{sn:"Alur",ln:"Alur, Kurnool"},8524:{sn:"Srisailam",ln:"Srisailam, Kurnool"},8525:{sn:"Gudur",ln:"Gudur (Kodumur), Kurnool"},8531:{sn:"Deodurga",ln:"Deodurga, Raichur"},8532:{sn:"Raichur",ln:"Raichur, Raichur"},8533:{sn:"Gangavathi",
ln:"Gangavathi, Raichur"},8534:{sn:"Yelburga",ln:"Yelburga, Raichur"},8535:{sn:"Sindhanur",ln:"Sindhanur, Raichur"},8536:{sn:"Kustagi",ln:"Kustagi, Raichur"},8537:{sn:"Lingsugur",ln:"Lingsugur, Raichur"},8538:{sn:"Manvi",ln:"Manvi, Raichur"},8539:{sn:"Koppal",ln:"Koppal, Raichur"},8540:{sn:"Nagarkurnool",ln:"Nagarkurnool, Mahabubnagar"},8541:{sn:"Achampet",ln:"Achampet, Mahabubnagar"},8542:{sn:"Mahabubnagar",ln:"Mahabubnagar, Mahabubnagar"},8543:{sn:"Wanaparthy",ln:"Wanaparthy, Mahabubnagar"},8545:{sn:"Amangallu",
ln:"Amangallu, Mahabubnagar"},8546:{sn:"Gadwal",ln:"Gadwal, Mahabubnagar"},8548:{sn:"Shadnagar",ln:"Shadnagar, Mahabubnagar"},8549:{sn:"Kalwakurthy",ln:"Kalwakurthy, Mahabubnagar"},8550:{sn:"Yellanuru",ln:"Yellanuru, Anantpur (Guntakal)"},8551:{sn:"Garladinne",ln:"Garladinne, Anantpur (Guntakal)"},8552:{sn:"Gooty",ln:"Gooty (Guntakal), Anantpur (Guntakal)"},8554:{sn:"Anantapur",ln:"Anantapur, Anantpur (Guntakal)"},8556:{sn:"Hindupur",ln:"Hindupur, Anantpur (Guntakal)"},8557:{sn:"Penukonda",ln:"Penukonda, Anantpur (Guntakal)"},
8558:{sn:"Tadipatri",ln:"Tadipatri, Anantpur (Guntakal)"},8559:{sn:"Dharmavaram",ln:"Dharmavaram, Anantpur (Guntakal)"},8560:{sn:"Jammalamadugu",ln:"Jammalamadugu, Cuddapah"},8561:{sn:"Rayachoti",ln:"Rayachoti, Cuddapah"},8562:{sn:"Cuddapah",ln:"Cuddapah, Cuddapah"},8563:{sn:"Kamalapuram",ln:"Kamalapuram (Yerraguntala), Cuddapah"},8564:{sn:"Proddatur",ln:"Proddatur, Cuddapah"},8565:{sn:"Rajampeta",ln:"Rajampeta, Cuddapah"},8566:{sn:"Koduru",ln:"Koduru, Cuddapah"},8567:{sn:"Lakkireddipalli",ln:"Lakkireddipalli, Cuddapah"},
8568:{sn:"Pulivendla",ln:"Pulivendla, Cuddapah"},8569:{sn:"Badvel",ln:"Badvel, Cuddapah"},8570:{sn:"Kuppam",ln:"Kuppam, Chittoor"},8571:{sn:"Madanapalli",ln:"Madanapalli, Chittoor"},8572:{sn:"Chittoor",ln:"Chittoor, Chittoor"},8573:{sn:"Bangarupalem",ln:"Bangarupalem, Chittoor"},8576:{sn:"Satyavedu",ln:"Satyavedu, Chittoor"},8577:{sn:"Putturu",ln:"Putturu, Chittoor"},8578:{sn:"Srikalahasthi",ln:"Srikalahasthi, Chittoor"},8579:{sn:"Palmaneru",ln:"Palmaneru, Chittoor"},8581:{sn:"Punganur",ln:"Punganur, Chittoor"},
8582:{sn:"B. Kothakota",ln:"B. Kothakota, Chittoor"},8583:{sn:"Sodam",ln:"Sodam, Chittoor"},8584:{sn:"Piler",ln:"Piler, Chittoor"},8585:{sn:"Pakala",ln:"Pakala, Chittoor"},8586:{sn:"Vayalpad",ln:"Vayalpad, Chittoor"},8587:{sn:"Venkatgirikota",ln:"Venkatgirikota, Chittoor"},8588:{sn:"Vaimpalli",ln:"Vaimpalli, Cuddapah"},8589:{sn:"Siddavattam",ln:"Siddavattam, Cuddapah"},8592:{sn:"Ongole",ln:"Ongole, Ongole"},8593:{sn:"Medarmetla",ln:"Medarmetla, Ongole"},8594:{sn:"Chirala",ln:"Chirala, Ongole"},8596:{sn:"Markapur",
ln:"Markapur, Ongole"},8598:{sn:"Kandukuru",ln:"Kandukuru, Ongole"},8599:{sn:"Ulvapadu",ln:"Ulvapadu, Ongole"},8620:{sn:"Udaygiri",ln:"Udaygiri, Nellore"},8621:{sn:"Rapur",ln:"Rapur (Podalakur), Nellore"},8622:{sn:"Kovvur",ln:"Kovvur, Nellore"},8623:{sn:"Sullurpet",ln:"Sullurpet, Nellore"},8624:{sn:"Gudur",ln:"Gudur, Nellore"},8625:{sn:"Venkatgiri",ln:"Venkatgiri, Nellore"},8626:{sn:"Kavali",ln:"Kavali, Nellore"},8627:{sn:"Atmakur",ln:"Atmakur, Nellore"},8628:{sn:"Chejerla",ln:"Chejerla, Nellore"},
8629:{sn:"Vinjamuru",ln:"Vinjamuru, Nellore"},8640:{sn:"Krosuru",ln:"Krosuru, Guntur"},8641:{sn:"Sattenapalli",ln:"Sattenapalli, Guntur"},8642:{sn:"Palnad",ln:"Palnad (Macherala), Guntur"},8643:{sn:"Bapatla",ln:"Bapatla, Guntur"},8644:{sn:"Tenali",ln:"Tenali, Guntur"},8645:{sn:"Mangalagiri",ln:"Mangalagiri, Guntur"},8646:{sn:"Vinukonda",ln:"Vinukonda, Guntur"},8647:{sn:"Narsaraopet",ln:"Narsaraopet, Guntur"},8648:{sn:"Repalle",ln:"Repalle, Guntur"},8649:{sn:"Piduguralla",ln:"Piduguralla, Guntur"},
8654:{sn:"Jaggayyapet",ln:"Jaggayyapet, Vijayawada"},8656:{sn:"Nuzvidu",ln:"Nuzvidu, Vijayawada"},8659:{sn:"Mylavaram",ln:"Mylavaram, Vijayawada"},8671:{sn:"Divi",ln:"Divi (Challapalli), Vijayawada"},8672:{sn:"Bandar",ln:"Bandar (Machilipatnam), Vijayawada"},8673:{sn:"Tirivuru",ln:"Tirivuru, Vijayawada"},8674:{sn:"Gudivada",ln:"Gudivada, Vijayawada"},8676:{sn:"Vuyyuru",ln:"Vuyyuru, Vijayawada"},8677:{sn:"Kaikaluru",ln:"Kaikaluru, Vijayawada"},8678:{sn:"Nandigama",ln:"Nandigama, Vijayawada"},8680:{sn:"Nidamanur",
ln:"Nidamanur (Hillcolony), Nalgonda"},8681:{sn:"Chandoor",ln:"Chandoor, Nalgonda"},8682:{sn:"Nalgonda",ln:"Nalgonda, Nalgonda"},8683:{sn:"Hazurnagar",ln:"Hazurnagar, Nalgonda"},8684:{sn:"Suryapet",ln:"Suryapet, Nalgonda"},8685:{sn:"Bhongir",ln:"Bhongir, Nalgonda"},8689:{sn:"Miryalguda",ln:"Miryalguda, Nalgonda"},8691:{sn:"Devarakonda",ln:"Devarakonda, Nalgonda"},8692:{sn:"Nampalle",ln:"Nampalle, Nalgonda"},8693:{sn:"Thungaturthy",ln:"Thungaturthy, Nalgonda"},8694:{sn:"Ramannapet",ln:"Ramannapet, Nalgonda"},
8710:{sn:"Cherial",ln:"Cherial, Warangal"},8711:{sn:"Wardhannapet",ln:"Wardhannapet (Ghanapur), Warangal"},8713:{sn:"Parkal",ln:"Parkal, Warangal"},8715:{sn:"Mulug",ln:"Mulug, Warangal"},8716:{sn:"Jangaon",ln:"Jangaon, Warangal"},8717:{sn:"Eturnagaram",ln:"Eturnagaram, Warangal"},8718:{sn:"Narasampet",ln:"Narasampet, Warangal"},8719:{sn:"Mahabubbad",ln:"Mahabubbad, Warangal"},8720:{sn:"Mahadevapur",ln:"Mahadevapur, Karimnagar"},8721:{sn:"Husnabad",ln:"Husnabad, Karimnagar"},8723:{sn:"Sircilla",ln:"Sircilla, Karimnagar"},
8724:{sn:"Jagtial",ln:"Jagtial, Karimnagar"},8725:{sn:"Metpalli",ln:"Metpalli, Karimnagar"},8727:{sn:"Huzurabad",ln:"Huzurabad, Karimnagar"},8728:{sn:"Peddapalli",ln:"Peddapalli, Karimnagar"},8729:{sn:"Manthani",ln:"Manthani, Karimnagar"},8730:{sn:"Khanapur",ln:"Khanapur (Ap), Adilabad"},8731:{sn:"Utnor",ln:"Utnor, Adilabad"},8732:{sn:"Adilabad",ln:"Adilabad, Adilabad"},8733:{sn:"Asifabad",ln:"Asifabad, Adilabad"},8734:{sn:"Nirmal",ln:"Nirmal, Adilabad"},8735:{sn:"Bellampalli",ln:"Bellampalli, Adilabad"},
8736:{sn:"Mancherial",ln:"Mancherial, Adilabad"},8737:{sn:"Chinnor",ln:"Chinnor, Adilabad"},8738:{sn:"Sirpurkagaznagar",ln:"Sirpurkagaznagar, Adilabad"},8739:{sn:"Jannaram",ln:"Jannaram (Luxittipet), Adilabad"},8740:{sn:"Aswaraopet",ln:"Aswaraopet, Khammam"},8741:{sn:"Sudhimalla",ln:"Sudhimalla (Tekulapalli), Khammam"},8742:{sn:"Khammam",ln:"Khammam, Khammam"},8743:{sn:"Bhadrachalam",ln:"Bhadrachalam, Khammam"},8744:{sn:"Kothagudem",ln:"Kothagudem, Khammam"},8745:{sn:"Yellandu",ln:"Yellandu, Khammam"},
8746:{sn:"Bhooragamphad",ln:"Bhooragamphad (Manuguru), Khammam"},8747:{sn:"Nuguru",ln:"Nuguru (Cherla), Khammam"},8748:{sn:"V. R. Puram",ln:"V. R. Puram, Khammam"},8749:{sn:"Madhira",ln:"Madhira, Khammam"},8751:{sn:"Boath",ln:"Boath (Echoda), Adilabad"},8752:{sn:"Bhainsa",ln:"Bhainsa, Adilabad"},8753:{sn:"Outsarangapalle",ln:"Outsarangapalle, Adilabad"},8761:{sn:"Sathupalli",ln:"Sathupalli, Khammam"},8811:{sn:"Polavaram",ln:"Polavaram, Eluru"},8812:{sn:"Eluru",ln:"Eluru, Eluru"},8813:{sn:"Kovvur",
ln:"Kovvur (Nidadavolu), Eluru"},8814:{sn:"Narsapur",ln:"Narsapur (Palakole), Eluru"},8816:{sn:"Bhimavaram",ln:"Bhimavaram, Eluru"},8818:{sn:"Tadepalligudem",ln:"Tadepalligudem, Eluru"},8819:{sn:"Tanuku",ln:"Tanuku, Eluru"},8821:{sn:"Jangareddygudem",ln:"Jangareddygudem, Eluru"},8823:{sn:"Chintalapudi",ln:"Chintalapudi, Eluru"},8829:{sn:"Bhimadole",ln:"Bhimadole, Eluru"},8852:{sn:"Peddapuram",ln:"Peddapuram, Rajahmundri"},8854:{sn:"Tuni",ln:"Tuni, Rajahmundri"},8855:{sn:"Mandapeta",ln:"Mandapeta (Ravulapalem), Rajahmundri"},
8856:{sn:"Amalapuram",ln:"Amalapuram, Rajahmundri"},8857:{sn:"Ramachandrapuram",ln:"Ramachandrapuram, Rajahmundri"},8862:{sn:"Razole",ln:"Razole, Rajahmundri"},8863:{sn:"Chavitidibbalu",ln:"Chavitidibbalu, Rajahmundri"},8864:{sn:"Rampachodavaram",ln:"Rampachodavaram, Rajahmundri"},8865:{sn:"Yelavaram",ln:"Yelavaram, Rajahmundri"},8868:{sn:"Yeleswaram",ln:"Yeleswaram, Rajahmundri"},8869:{sn:"Pithapuram",ln:"Pithapuram, Rajahmundri"},8922:{sn:"Vizayanagaram",ln:"Vizayanagaram, Vizayanagaram"},8924:{sn:"Anakapalle",
ln:"Anakapalle, Visakhapatnam"},8931:{sn:"Yelamanchili",ln:"Yelamanchili, Visakhapatnam"},8932:{sn:"Narsipatnam",ln:"Narsipatnam, Visakhapatnam"},8933:{sn:"Bheemunipatnam",ln:"Bheemunipatnam, Visakhapatnam"},8934:{sn:"Chodavaram",ln:"Chodavaram, Visakhapatnam"},8935:{sn:"Paderu",ln:"Paderu, Visakhapatnam"},8936:{sn:"Araku",ln:"Araku, Visakhapatnam"},8937:{sn:"Chintapalle",ln:"Chintapalle, Visakhapatnam"},8938:{sn:"Sileru",ln:"Sileru, Visakhapatnam"},8941:{sn:"Palakonda",ln:"Palakonda (Rajam), Srikakulam"},
8942:{sn:"Srikakulam",ln:"Srikakulam, Srikakulam"},8944:{sn:"Bobbili",ln:"Bobbili, Vizayanagaram"},8945:{sn:"Tekkali",ln:"Tekkali (Palasa), Srikakulam"},8946:{sn:"Pathapatnam",ln:"Pathapatnam (Hiramandalam), Srikakulam"},8947:{sn:"Sompeta",ln:"Sompeta, Srikakulam"},8952:{sn:"Chepurupalli",ln:"Chepurupalli (Garividi), Vizayanagaram"},8963:{sn:"Parvathipuram",ln:"Parvathipuram, Vizayanagaram"},8964:{sn:"Saluru",ln:"Saluru, Vizayanagaram"},8965:{sn:"Gajapathinagaram",ln:"Gajapathinagaram, Vizayanagaram"},
8966:{sn:"Srungavarapukota",ln:"Srungavarapukota (Kothvls), Vizayanagaram"}};
ilib.data.area_US={201:{sn:"New Jersey",ln:"New Jersey: Hackensack, Jersey City, Hoboken, Bayonne, Ridgewood, Union City, Teaneck, New Milford, and northeast New Jersey"},202:{sn:"Washington",ln:"Washington D.C."},203:{sn:"Connecticut",ln:"Connecticut: Bridgeport, Danbury, New Haven, Waterbury, Southwestern Connecticut"},204:{sn:"Manitoba",ln:"Manitoba, Canada"},205:{sn:"Alabama",ln:"Alabama: Birmingham; Tuscaloosa; western and central Alabama"},206:{sn:"Washington",ln:"Washington: Seattle"},207:{sn:"Maine",
ln:"Maine"},208:{sn:"Idaho",ln:"Idaho"},209:{sn:"California",ln:"California: Stockton, Modesto, Merced, Tracy, San Andreas and central California"},210:{sn:"Texas",ln:"Texas: San Antonio area"},212:{sn:"New York",ln:"New York: Manhattan except for Marble Hill"},213:{sn:"S California",ln:"Southern California: Central Los Angeles"},214:{sn:"Texas",ln:"Texas: Dallas area"},215:{sn:"Pennsylvania",ln:"Pennsylvania: Philadelphia"},216:{sn:"Ohio",ln:"Ohio: Cleveland"},217:{sn:"Illinois",ln:"Central Illinois: Springfield, Champaign Decatur, Urbana, Lincoln"},
218:{sn:"N Minnesota",ln:"Northern Minnesota: Duluth, Thief River Falls, Brainerd, International Falls"},219:{sn:"NW Indiana",ln:"Northwest Indiana: Gary, Chesterton, Crown Point, East Chicago, Hammond, Hobart, Merrillville, Michigan City, Portage, Valparaiso"},220:{},221:{},222:{},223:{},224:{sn:"Illinois",ln:"Illinois"},225:{sn:"E Louisiana",ln:"Central Eastern Louisiana: Baton Rouge, Donaldsonville, New Roads, White Castle"},226:{sn:"Ontario",ln:"Ontario, Canada"},227:{sn:"Maryland",ln:"Maryland"},
228:{sn:"S Mississippi",ln:"Southern Mississippi: Gulfport, Biloxi, Pascagoula, Bay St Louis"},229:{sn:"SW Georgia",ln:"Southwestern Georgia: Albany, Valdosta, Bainbridge, Americus, Fitzgerald"},230:{},231:{sn:"NW Michigan",ln:"Northwestern Michigan: Muskegon, Traverse City, Ludington, Petoskey"},232:{},233:{},234:{sn:"Ohio",ln:"Ohio"},235:{},236:{sn:"British Columbia",ln:"British Columbia, Canada"},237:{},238:{},239:{sn:"SW Florida",ln:"Southwestern Florida: Lee, Collier, and Monroe Counties; Cape Coral, Fort Myers, Naples, Everglades"},
240:{sn:"Maryland",ln:"Maryland"},241:{},242:{sn:"Bahamas",ln:"The Bahamas"},243:{},244:{},245:{},246:{sn:"Barbados",ln:"Barbados"},247:{},248:{sn:"Michigan",ln:"Michigan: Oakland County"},249:{sn:"Ontario",ln:"Ontario, Canada"},250:{sn:"British Columbia",ln:"British Columbia: Victoria, Prince George, Prince Rupert, Kelowna; also Hyder, Alaska."},251:{sn:"SW Alabama",ln:"Southwestern Alabama: Mobile, Jackson, Brewton"},252:{sn:"NE North Carolina",ln:"Northeastern North Carolina: Greenville, Kitty Hawk, Rocky Mount"},
253:{sn:"Washington",ln:"Washington: Tacoma, Lakewood, Auburn, Puyallup, Enumclaw, Spanaway and south Seattle suburbs"},254:{sn:"Texas",ln:"Texas: Waco, Killeen, Temple, Belton, and Stephenville"},255:{},256:{sn:"NE Alabama",ln:"Northern and Eastern Alabama: Huntsville, Decatur, Cullman, Gadsden, Florence, Anniston"},257:{},258:{},259:{},260:{sn:"NE Indiana",ln:"Northeastern Indiana: Fort Wayne, New Haven, Decatur, Angola, Huntington, Wabash"},261:{},262:{sn:"SE Wisconsin",ln:"Southeastern Wisconsin: Racine, Kenosha, Menomonee Falls, Waukesha"},
263:{},264:{sn:"Anguilla",ln:"Anguilla"},265:{},266:{},267:{sn:"Pennsylvania",ln:"Pennsylvania"},268:{sn:"Antigua/Barbuda",ln:"Antigua and Barbuda"},269:{sn:"SW Michigan",ln:"Southwestern Michigan: Battle Creek, Kalamazoo, Benton Harbor, Allegan, Hastings, St Joseph"},270:{sn:"W Kentucky",ln:"Western Kentucky: Owensboro, Paducah, Bowling Green, Hopkinsville, Henderson, Elizabethtown"},271:{},272:{},273:{},274:{sn:"Wisconsin",ln:"Wisconsin"},275:{},276:{sn:"SW Virginia",ln:"Southwestern Virginia: Bristol, Abingdon, Wytheville, Martinsville, Bluefield"},
277:{},278:{},279:{},280:{},281:{sn:"Texas",ln:"Texas: Houston"},282:{},283:{sn:"SW Ohio",ln:"Southwestern Ohio"},284:{sn:"BVIs",ln:"The British Virgin Islands"},285:{},286:{},287:{},288:{},289:{sn:"Ontario",ln:"Ontario, Canada"},290:{},291:{},292:{},293:{},294:{},295:{},296:{},297:{},298:{},299:{},300:{},301:{sn:"W Maryland",ln:"Western Maryland: Silver Spring, DC suburbs, Hagerstown, Frederick, Rockville, Cumberland"},302:{sn:"Delaware",ln:"Delaware"},303:{sn:"Colorado",ln:"Central Colorado: Denver, Boulder, Longmont, Aurora"},
304:{sn:"West Virginia",ln:"West Virginia"},305:{sn:"S Florida",ln:"Southern Florida: Miami-Dade, Florida Keys, Miami, Homestead, Coral Gables, Key West"},306:{sn:"Saskatchewan",ln:"Saskatchewan, Canada"},307:{sn:"Wyoming",ln:"Wyoming"},308:{sn:"W Nebraska",ln:"Western Nebraska: North Platte, Scottsbluff, McCook, Kearney, Grand Island"},309:{sn:"W Illinois",ln:"Central Western Illinois: Peoria, Bloomington-Normal, Moline, Rock Island, Galesburg"},310:{sn:"S California",ln:"Southern California: Santa Monica, Malibu, Torrance, South Bay, Beverly Hills, Catalina Island, the Los Angeles Westside"},
312:{sn:"Illinois",ln:"Illinois: Chicago"},313:{sn:"Michigan",ln:"Michigan: Dearborn, Detroit, Hamtramck, Highland Park"},314:{sn:"Missouri",ln:"Missouri: St. Louis, Florissant, Crestwood, Affton"},315:{sn:"New York",ln:"North Central New York: Syracuse, New York, Utica, Watertown"},316:{sn:"Kansas",ln:"Kansas: Wichita, Augusta, El Dorado, Mulvane"},317:{sn:"Indiana",ln:"Central Indiana: Indianapolis, Carmel, Fishers, Noblesville, Greenwood, Mooresville, Beech Grove"},318:{sn:"N Louisiana",ln:"Northern Louisiana: Shreveport, Monroe, Alexandria, Fisher, Tallulah"},
319:{sn:"E Iowa",ln:"Eastern Iowa: Cedar Rapids, Waterloo, Burlington, Iowa City"},320:{sn:"Minnesota",ln:"Central Minnesota: St. Cloud, Alexandria, Morris, Hutchinson, Sandstone, Appleton"},321:{sn:"E Florida",ln:"Central Eastern Florida: Orlando, Cocoa Beach, St Cloud"},322:{},323:{sn:"S California",ln:"Southern California: Los Angeles, West LA, San Fernando Valley, Florence, Montebello"},324:{},325:{sn:"Texas",ln:"Texas: Abilene, San Angelo, Sweetwater, Snyder"},326:{},327:{sn:"E Arkansas",ln:"Eastern Arkansas: Texarkana, Jonesboro, Pine Bluff"},
328:{},329:{},330:{sn:"NE Ohio",ln:"Northeastern Ohio: Akron, Canton, Youngstown, Warren"},331:{sn:"Illinois",ln:"Illinois: Aurora, Naperville, western Chicago"},332:{},333:{},334:{sn:"SE Alabama",ln:"Southeastern Alabama: Montgomery, Auburn, Opelika, Dothan, Selma"},335:{},336:{sn:"North Carolina",ln:"North Carolina: Greensboro, Winston-Salem, Wilkesboro, Roxboro, and northwest North Carolina"},337:{sn:"SW Louisiana",ln:"Southwestern Louisiana: Lafayette, Lake Charles, Leesville, New Iberia, Opelousas, De Ridder"},
338:{},339:{sn:"Massachusetts",ln:"Massachusetts"},340:{sn:"U.S. Virgins",ln:"The U.S. Virgin Islands"},341:{sn:"California",ln:"California: East Bay Area, Oakland, Berkeley, Alameda"},342:{},343:{sn:"E Ontario",ln:"Eastern Ontario, Canada: Ottawa"},344:{},345:{sn:"Caymans",ln:"The Cayman Islands"},346:{},347:{sn:"New York",ln:'New York: The "Outer Boroughs"'},348:{},349:{},350:{},351:{sn:"Massachusetts",ln:"Massachusetts"},352:{sn:"Florida",ln:"Central Florida: Gainesville, Ocala, Inverness, Dunnellon"},
353:{},354:{},355:{},356:{},357:{},358:{},359:{},360:{sn:"W Washington",ln:"Western Washington: Olympia, Vancouver, Bellingham, Bremerton, Port Angeles, Aberdeen"},361:{sn:"SW Texas",ln:"Western and Southern Texas: Corpus Christi, Victoria, George"},362:{},363:{},364:{sn:"Kentucky",ln:"Kentucky: west of the Pennyrile Parkway, including Fort Campbell, Henderson, Hopkinsville, Madisonville, Murray, and Paducah"},365:{},366:{},367:{},368:{},369:{sn:"NW California",ln:"Northwest California"},370:{},371:{},
372:{},373:{},374:{},375:{},376:{},377:{},378:{},379:{},380:{sn:"Ohio",ln:"Ohio"},381:{},382:{},383:{},384:{},385:{sn:"Utah",ln:"Utah"},386:{sn:"NE Florida",ln:"Northern and Eastern Florida: Daytona Beach, Lake City, Live Oak, Crescent City"},387:{},388:{},389:{},390:{},391:{},392:{},393:{},394:{},395:{},396:{},397:{},398:{},399:{},400:{},401:{sn:"Rhode Island",ln:"Rhode Island"},402:{sn:"E Nebraska",ln:"Eastern Nebraska: Omaha, Lincoln, Norfolk, Superior"},403:{sn:"S Alberta",ln:"Southern Alberta, Canada: Calgary, Banff, Red Deer, Medicine Hat, Lethbridge, Brooks"},
404:{sn:"Georgia",ln:"Georgia: Atlanta"},405:{sn:"Oklahoma",ln:"Central Oklahoma: Oklahoma City, Stillwater, Edmond, Norman, Shawnee, Chickasha"},406:{sn:"Montana",ln:"Montana"},407:{sn:"E Florida",ln:"Central Eastern Florida: Orlando, Florida, St. Cloud"},408:{sn:"California",ln:"Central California: San Jose, Los Gatos, Milpitas, Sunnyvale, Cupertino, Gilroy"},409:{sn:"SE Texas",ln:"Southeastern Texas: Beaumont, Galveston, Port Arthur, Jasper"},410:{sn:"E Maryland",ln:"Eastern Maryland: Baltimore, Annapolis, Salisbury"},
412:{sn:"W Pennsylvania",ln:"Western Pennsylvania: Pittsburgh area, McKeesport, Braddock, Duquesne"},413:{sn:"W Massachusetts",ln:"Western Massachusetts: Springfield, Pittsfield, Holyoke, Greenfield"},414:{sn:"Wisconsin",ln:"Wisconsin: Milwaukee"},415:{sn:"California",ln:"Central California: San Francisco, Marin County"},416:{sn:"Ontario",ln:"Ontario: Toronto"},417:{sn:"SW Missouri",ln:"Southwestern Missouri: Springfield, Joplin, Branson, West Plains, Lamar, Lebanon"},418:{sn:"Quebec",ln:"Quebec, Canada: Quebec City, Saguenay, Gasp\u00e9 Peninsula, C\u00f4te-Nord, Chibougamau, St-Georges"},
419:{sn:"NW Ohio",ln:"Northwestern Ohio: Toledo, Sylvania, Mansfield, Lima, Findlay, Bryan, Sandusky, Bowling Green"},420:{},421:{},422:{},423:{sn:"E Tennessee",ln:"Eastern Tennessee: Bristol, Johnson City, Kingsport; Chattanooga, Cleveland"},424:{sn:"California",ln:"California"},425:{sn:"Washington",ln:"Washington: Seattle suburbs, Bellevue, Everett, Redmond, Renton, Kirkland, Bothell, Sammamish, Issaquah, Edmonds, Lynnwood and Mountlake Terrace"},426:{},427:{},428:{},429:{},430:{sn:"Texas",ln:"Texas"},
431:{},432:{sn:"W Texas",ln:"West Texas: Midland, Odessa, Big Spring, Alpine"},433:{},434:{sn:"S Virginia",ln:"Southern Virginia: Charlottesville, Lynchburg, Danville, Farmville, South Hill"},435:{sn:"Utah",ln:"Utah: Cedar City, Logan, Moab, Park City, St. George, Moab"},436:{},437:{},438:{sn:"Quebec",ln:"Quebec, Canada"},439:{},440:{sn:"N Ohio",ln:"Northern Ohio: Cleveland suburbs, Elyria, Lorain, Oberlin, Ashtabula"},441:{sn:"Bermuda",ln:"Bermuda"},442:{sn:"California",ln:"California"},443:{sn:"Maryland",
ln:"Maryland"},444:{},445:{},446:{},447:{sn:"Illinois",ln:"Illinois"},448:{},449:{},450:{sn:"S Quebec",ln:"Central Southern Quebec, Canada: Laval, Montreal suburbs"},451:{},452:{},453:{},454:{},455:{},456:{sn:"Inbound Intl.",ln:"Inbound international calls for carrier-specific services"},457:{},458:{sn:"Oregon",ln:"Oregon: Eugene, Medford, Bend, Pendleton, Corvallis, Ontario, Burns"},459:{},460:{},461:{},462:{},463:{},464:{sn:"Illinois",ln:"Illinois"},465:{},466:{},467:{},468:{},469:{sn:"Texas",ln:"Texas"},
470:{sn:"Georgia",ln:"Georgia"},471:{},472:{},473:{sn:"Grenada",ln:"Grenada"},474:{},475:{sn:"Connecticut",ln:"Connecticut"},476:{},477:{},478:{sn:"Georgia",ln:"Central Georgia: Macon, Warner Robins, Swainsboro, Wadley, Milledgeville, Perry"},479:{sn:"NW Arkansas",ln:"Northwestern Arkansas: Fort Smith, Fayetteville"},480:{sn:"Arizona",ln:"Arizona: Mesa, Scottsdale, Chandler, Gilbert, Tempe, Queen Creek, eastern Phoenix suburbs"},481:{},482:{},483:{},484:{sn:"Pennsylvania",ln:"Pennsylvania"},485:{},
486:{},487:{},488:{},489:{},490:{},491:{},492:{},493:{},494:{},495:{},496:{},497:{},498:{},499:{},500:{sn:"Personal Comm.",ln:"Personal Communications Services"},501:{sn:"Arkansas",ln:"Central Arkansas: Little Rock, Hot Springs"},502:{sn:"N Kentucky",ln:"Northern Kentucky: Louisville, Frankfort, Shelbyville, Bardstown"},503:{sn:"NW Oregon",ln:"Northwestern Oregon: Portland, Salem, Hillsboro, St. Helens, Tillamook, Astoria"},504:{sn:"Louisiana",ln:"Louisiana: New Orleans, Metairie, Kenner"},505:{sn:"NW New Mexico",
ln:"Northwestern New Mexico: Albuquerque, Santa Fe, Farmington, Gallup"},506:{sn:"New Brunswick",ln:"New Brunswick, Canada"},507:{sn:"S Minnesota",ln:"Southern Minnesota: Rochester, Mankato, Worthington, Marshall"},508:{sn:"SE Massachusetts",ln:"Southeastern Massachusetts: Worcester, New Bedford"},509:{sn:"E Washington",ln:"Eastern Washington: Spokane, the Tri-Cities, Yakima, Wenatchee, Walla Walla, Pullman, Ellensburg"},510:{sn:"California",ln:"Central California: Oakland, Fremont, Hayward, Castro Valley, Alameda, Berkeley, Richmond"},
512:{sn:"Texas",ln:"Central Texas: Austin, San Marcos, Lampasas, Bastrop, Milam"},513:{sn:"SW Ohio",ln:"Southwestern Ohio: Cincinnati, Middletown, Hamilton, Norwood, Lebanon"},514:{sn:"Quebec",ln:"Quebec, Canada: Montreal, \u00cele Perrot,  \u00cele Bizard"},515:{sn:"Iowa",ln:"North Central Iowa: Des Moines, Ames, Fort Dodge, Jefferson, Algona, Indianola"},516:{sn:"New York",ln:"New York: Nassau County, Hempstead, Elmont"},517:{sn:"Michigan",ln:"South Central Michigan: Lansing, Jackson, Charlotte, Coldwater, Howell, Deerfield, Addison"},
518:{sn:"NE New York",ln:"Northeastern New York: Albany, Schenectady, Plattsburgh, Saranac Lake"},519:{sn:"SW Ontario",ln:"Southwestern Ontario, Canada: London, Windsor, Kitchener-Waterloo, Cambridge"},520:{sn:"SE Arizona",ln:"Southeastern Arizona: Tucson, Nogales"},521:{},522:{sn:"Personal Comm.",ln:"Personal Communications Services"},523:{},524:{},525:{},526:{},527:{},528:{},529:{},530:{sn:"NE California",ln:"Northerneastern California: Redding, Chico, Davis, Placerville, Lake Tahoe, Susanville, Alturas, Truckee"},
531:{sn:"Nebraska",ln:"Nebraska"},532:{},533:{sn:"Personal Comm.",ln:"Personal Communications Services"},534:{sn:"Wisconsin",ln:"Wisconsin"},535:{},536:{},537:{},538:{},539:{sn:"Oklahoma",ln:"Oklahoma"},540:{sn:"Virginia",ln:"North Central Virginia: Roanoke, Fredericksburg, Blacksburg, Harrisonburg, Winchester"},541:{sn:"Oregon",ln:"Oregon: Eugene, Medford, Bend, Pendleton, Corvallis, Ontario, Burns"},542:{},543:{},544:{sn:"Personal Comm.",ln:"Personal Communications Services"},545:{},546:{},547:{},
548:{},549:{},550:{},551:{sn:"New Jersey",ln:"New Jersey"},552:{},553:{},554:{},555:{sn:"Dir. Assistance",ln:"Directory Assistance Applications"},556:{},557:{sn:"Missouri",ln:"Missouri"},558:{},559:{sn:"California",ln:"Central California: Fresno, Visalia, Madera, Hanford, Tulare"},560:{},561:{sn:"Florida",ln:"Florida: Palm Beach, West Palm Beach, Boca Raton, Boynton Beach, Delray Beach, Belle Glade"},562:{sn:"S California",ln:"Southern California: Long Beach, Whittier, Norwalk, La Habra Lakewood, Bellflower"},
563:{sn:"E Iowa",ln:"Eastern Iowa: Davenport, Dubuque, Bettendorf, Decorah, Clinton"},564:{sn:"Washington",ln:"Washington: Western Washington"},565:{},566:{sn:"Personal Comm.",ln:"Personal Communications Services"},567:{sn:"Ohio",ln:"Ohio"},568:{},569:{},570:{sn:"NE Pennsylvania",ln:"Northeastern Pennsylvania: Scranton, Williamsport, Wilkes-Barre, Nanticoke, Hazleton, Pottsville, Sunbury, Danville, Bloomsburg, Stroudsburg"},571:{sn:"Virginia",ln:"Virginia"},572:{},573:{sn:"Missouri",ln:"Missouri: Columbia, Jefferson City, Hannibal, Cape Girardeau, Poplar Bluff, Farmington, Park Hills, Lake Ozark and eastern Missouri excluding St. Louis"},
574:{sn:"Indiana",ln:"North Central Indiana: South Bend, Logansport, Elkhart, Warsaw, Nappanee"},575:{sn:"New Mexico",ln:"New Mexico: Las Cruces, Roswell, Carlsbad, Taos"},576:{},577:{sn:"Personal Comm. Services",ln:"Personal Communications Services"},578:{},579:{sn:"Quebec",ln:"Quebec, Canada"},580:{sn:"SW Oklahoma",ln:"Southern and Western Oklahoma: Enid, Lawton, Ponca City, Guymon, Ardmore, Sayre, Elk City"},581:{sn:"Quebec",ln:"Quebec, Canada"},582:{},583:{},584:{},585:{sn:"W New York",ln:"Western New York: Rochester, Wellsville, Batavia"},
586:{sn:"Michigan",ln:"Michigan: Warren, Sterling Heights, Macomb County"},587:{sn:"Alberta",ln:"Alberta, Canada"},588:{sn:"Personal Comm.",ln:"Personal Communications Services"},589:{},590:{},591:{},592:{},593:{},594:{},595:{},596:{},597:{},598:{},599:{},600:{sn:"Special Telecom.",ln:"Special Telecommunications Needs in Canada"},601:{sn:"Mississippi",ln:"Central Mississippi: Jackson, Meridian, Natchez, McComb, Hattiesburg"},602:{sn:"Arizona",ln:"Arizona: Phoenix"},603:{sn:"New Hampshire",ln:"New Hampshire"},
604:{sn:"British Columbia",ln:"British Columbia: Vancouver, Abbotsford, Whistler, Chilliwack"},605:{sn:"South Dakota",ln:"South Dakota"},606:{sn:"E Kentucky",ln:"Eastern Kentucky: Ashland, Hazard, Somerset, London, Corbin, Pikeville, Maysville"},607:{sn:"New York",ln:"New York: Binghamton, Elmira, Bath, Norwich, Oneonta, Ithaca"},608:{sn:"SW Wisconsin",ln:"Southwestern Wisconsin: Madison, La Crosse, Platteville, Beloit"},609:{sn:"SE New Jersey",ln:"Central and Southeastern New Jersey: Atlantic City, Trenton"},
610:{sn:"SE Pennsylvania",ln:"Southeastern Pennsylvania: Allentown, Reading, Norristown, Chester"},612:{sn:"Minnesota",ln:"Minnesota: Minneapolis, Fort Snelling, St Anthony, Richfield"},613:{sn:"E Ontario",ln:"Eastern Ontario, Canada: Ottawa, Kingston"},614:{sn:"Ohio",ln:"Ohio: Columbus"},615:{sn:"Tennessee",ln:"North Central Tennessee: Nashville, Murfreesboro, Springfield, Lebanon, Dickson"},616:{sn:"SW Michigan",ln:"Southwestern Michigan: Grand Rapids, Holland, Greenville, Grand Haven, Zeeland, Ionia"},
617:{sn:"E Massachusetts",ln:"Eastern Massachusetts: Boston, Cambridge"},618:{sn:"S Illinois",ln:"Southern Illinois: Alton, Belleville, Carbondale, Centralia, East Saint Louis, Mount Vernon"},619:{sn:"S California",ln:"Southern California: San Diego, Chula Vista"},620:{sn:"S Kansas",ln:"Southern Kansas: Dodge City, Emporia, Geat Bend, Parsons, Liberal"},621:{},622:{},623:{sn:"Arizona",ln:"Arizona: Glendale, Sun City, Buckeye, Peoria, western Phoenix suburbs"},624:{},625:{},626:{sn:"S California",
ln:"Southern California: Pasadena, West Covina, El Monte, La Puente, Arcadia, San Gabriel Valley, eastern Los Angeles suburbs"},627:{sn:"N California",ln:"Northern California coast"},628:{sn:"California",ln:"Central California: San Francisco"},629:{},630:{sn:"Illinois",ln:"Illinois: Aurora, Naperville, western Chicago suburbs"},631:{sn:"New York",ln:"New York: Suffolk County"},632:{},633:{},634:{},635:{},636:{sn:"Missouri",ln:"East Central Missouri: St. Charles, Chesterfield, Union, De Soto, Troy"},
637:{},638:{},639:{},640:{},641:{sn:"Iowa",ln:"Central Iowa: Mason City, Oskaloosa, Creston, Pella, Ottumwa, Britt, Clear Lake, Fairfield"},642:{},643:{},644:{},645:{},646:{sn:"New York",ln:"New York: Manhattan"},647:{sn:"Ontario",ln:"Ontario, Canada"},648:{},649:{sn:"Turks/Caicos",ln:"The Turks and Caicos Islands"},650:{sn:"California",ln:"Central California: San Mateo, Palo Alto, Redwood City, Menlo Park, Mountain View, southern San Francisco suburbs"},651:{sn:"Minnesota",ln:"East Central Minnesota: St Paul, Lindstrom, Red Wing, Hastings"},
652:{},653:{},654:{},655:{},656:{},657:{sn:"California",ln:"California"},658:{},659:{sn:"Alabama",ln:"Alabama"},660:{sn:"Missouri",ln:"North Central Missouri: Sedalia, Kirksville, Macon, Marshall, Trenton, Maryville, Bethany"},661:{sn:"S California",ln:"South Central California: Bakersfield, Lancaster, Santa Clarita, Palmdale, Mojave"},662:{sn:"N Mississippi",ln:"Northern Mississippi: Greenville, Tupelo, Winona, Columbus, Holly Springs"},663:{},664:{sn:"Montserrat",ln:"Montserrat"},665:{},666:{},
667:{sn:"Maryland",ln:"Maryland"},668:{},669:{sn:"California",ln:"Central California: San Jose"},670:{sn:"Marianas",ln:"Northern Mariana Islands"},671:{sn:"Guam",ln:"Guam"},672:{},673:{},674:{},675:{},676:{},677:{},678:{sn:"Georgia",ln:"Georgia"},679:{sn:"Michigan",ln:"Michigan"},680:{},681:{sn:"West Virginia",ln:"West Virginia"},682:{sn:"Texas",ln:"Texas"},683:{},684:{sn:"Amer. Samoa",ln:"American Samoa"},685:{},686:{},687:{},688:{},689:{sn:"Florida",ln:"Florida"},690:{},691:{},692:{},693:{},694:{},
695:{},696:{},697:{},698:{},699:{},700:{sn:"LD Carrier",ln:"Long Distance Carrier Use"},701:{sn:"North Dakota",ln:"North Dakota"},702:{sn:"Nevada",ln:"Nevada: Clark County, Las Vegas, Henderson, Boulder City"},703:{sn:"N Virginia",ln:"Northern Virginia: Alexandria, Arlington, Fairfax, Prince William, eastern Loudoun counties"},704:{sn:"North Carolina",ln:"South Central North Carolina: Charlotte, Gastonia, Concord, Salisbury"},705:{sn:"Ontario",ln:"Central Ontario, Canada: Sudbury, Sault Ste. Marie, North Bay, Timmins, Barrie"},
706:{sn:"Georgia",ln:"West Central Georgia: Augusta, Lincolnton, Columbus, LaGrange, Rome, Dalton, Thomaston"},707:{sn:"NW California",ln:"Northwestern California: Napa, Vallejo, Santa Rosa, Ukiah, Crescent City, Eureka, Ukiah"},708:{sn:"Illinois",ln:"Illinois: Chicago Heights, Evergreen Park, Tinley Park, Elmwood Park, Cicero, Oak Forest, Oak Park, Berwyn, western Chicago suburbs"},709:{sn:"Newfoundland",ln:"Newfoundland and Labrador, Canada: St. John's"},710:{sn:"U.S. Government",ln:"U.S. Government Special Services"},
712:{sn:"W Iowa",ln:"Western Iowa: Sioux City, Council Bluffs, Sheldon, Denison, Estherville"},713:{sn:"Texas",ln:"Texas: Houston"},714:{sn:"S California",ln:"Southern California: Anaheim, Santa Ana, Huntington Beach, Orange, Garden Grove, Fullerton, Orange County"},715:{sn:"N Wisconsin",ln:"Northern Wisconsin: Wausau, Eau Claire, Rice Lake, Rhinelander, Ashland"},716:{sn:"W New York",ln:"Western New York: Buffalo, Jamestown, Niagara Falls, Tonawanda, Olean"},717:{sn:"Pennsylvania",ln:"South Central Pennsylvania: Harrisburg, Gettysburg, Lancaster, York"},
718:{sn:"New York",ln:"New York: New York City, Marble Hill"},719:{sn:"SE Colorado",ln:"Southeastern Colorado: Colorado Springs, Pueblo, Leadville, Trinidad, Rocky Ford, La Junta"},720:{sn:"Colorado",ln:"Colorado"},721:{sn:"Sint Maarten",ln:"Sint Maarten"},722:{},723:{},724:{sn:"SW Pennsylvania",ln:"Southwestern Pennsylvania: New Castle, Washington, Indiana, Uniontown"},725:{},726:{},727:{sn:"Florida",ln:"Central Florida: St Petersburg, Dunedin"},728:{},729:{},730:{sn:"Illinois",ln:"Illinois"},731:{sn:"W Tennessee",
ln:"Western Tennessee: Union City, Jackson, Dyersburg, Martin, Brownsville, Paris, Bolivar"},732:{sn:"New Jersey",ln:"East Central New Jersey: New Brunswick, Neptune, Freehold, Lakewood"},733:{},734:{sn:"SW Michigan",ln:"Southwestern Michigan: Ann Arbor, Canton, Plymouth, Monroe, Wayne, Ypsilanti, Romulus, Detroit suburbs"},735:{},736:{},737:{sn:"Texas",ln:"Texas"},738:{},739:{},740:{sn:"SE Ohio",ln:"Central and Southeastern Ohio: Columbus, Newark, Lancaster, Delaware, Mt. Vernon, Marion, Washington C.H., Marietta, Portsmouth, Cambridge, Zanesville, Coshocton, Stuebenville, Athens"},
741:{},742:{},743:{},744:{},745:{},746:{},747:{sn:"S California",ln:"Southern California: San Fernando Valley"},748:{},749:{},750:{},751:{},752:{},753:{},754:{sn:"Florida",ln:"Florida"},755:{},756:{},757:{sn:"Virginia",ln:"Virginia: Hampton Roads, Eastern Shore"},758:{sn:"St. Lucia",ln:"Saint Lucia"},759:{},760:{sn:"SE California",ln:"Southeastern California: Bishop, Ridgecrest, Barstow, Palm Springs, Indio, Imperial County"},761:{},762:{sn:"Georgia",ln:"Georgia"},763:{sn:"Minnesota",ln:"Minnesota: Maple Grove, Monticello, Elk River, Fridley, Blaine, northwest Minneapolis"},
764:{sn:"California",ln:"Central California: Oakland, Berkeley, Alameda"},765:{sn:"Indiana",ln:"Central Indiana: Lafayette, Marion, Muncie, Richmond"},766:{},767:{sn:"Dominica",ln:"Commonwealth of Dominica"},768:{},769:{sn:"Mississippi",ln:"Mississippi"},770:{sn:"N Georgia",ln:"Central North Georgia: Marietta, Cedartown, Gainesville, Atlanta suburbs"},771:{},772:{sn:"E Florida",ln:"Central Eastern Florida: Vero Beach, Port Saint Lucie, Fort Pierce, Sebastian, Stuart"},773:{sn:"Illinois",ln:"Illinois: Chicago"},
774:{sn:"Massachusetts",ln:"Massachusetts"},775:{sn:"Nevada",ln:"Nevada: Reno, Elko, Ely"},776:{},777:{},778:{sn:"British Columbia",ln:"British Columbia"},779:{sn:"Illinois",ln:"Illinois"},780:{sn:"N Alberta",ln:"Northern Alberta, Canada: Edmonton, Jasper, Grande Prairie, Peace River"},781:{sn:"E Massachusetts",ln:"Eastern Massachusetts: Saugus, Norwood, Waltham, Woburn, Boston suburbs"},782:{},783:{},784:{sn:"St. Vincent/Grenadines",ln:"Saint Vincent and the Grenadines"},785:{sn:"N Kansas",ln:"Northern Kansas: Colby, Topeka, Salina, Manhattan, Lawrence"},
786:{sn:"Florida",ln:"Florida: Miami-Dade County, Florida Keys"},787:{sn:"Puerto Rico",ln:"Puerto Rico"},788:{},789:{},790:{},791:{},792:{},793:{},794:{},795:{},796:{},797:{},798:{},799:{},800:{sn:"Toll-free",ln:"Toll-free Telephone Service"},801:{sn:"Utah",ln:"Utah: Wasatch Front"},802:{sn:"Vermont",ln:"Vermont"},803:{sn:"South Carolina",ln:"Central South Carolina: Columbia, Rock Hill, Sumter, Aiken"},804:{sn:"Virginia",ln:"Virginia: Richmond, Petersburg"},805:{sn:"California",ln:"Central Coastal California: Ventura, San Luis Obispo, Santa Barbara, Oxnard, Simi Valley"},
806:{sn:"Texas",ln:"Texas: Amarillo, Lubbock, Canadian, Perryton, Shamrock, Dalhart, Texas Panhandle"},807:{sn:"NW Ontario",ln:"Northwestern Ontario, Canada: Thunder Bay, Kenora, Dryden, Greenstone"},808:{sn:"Hawaii",ln:"Hawaii"},809:{sn:"D.R.",ln:"Dominican Republic"},810:{sn:"Michigan",ln:'Michigan: Port Huron, Flint, Lapeer, and Michigan "Thumb"'},812:{sn:"Indiana",ln:"Indiana: Southern Indiana, including Bloomington, Evansville, Jeffersonville, New Albany, and Terre Haute)."},813:{sn:"Florida",
ln:"Central Florida: Tampa, Temple Terrace, Plant City, Pasco County, Oldsmar"},814:{sn:"NW Pennsylvania",ln:"Northwestern and Central Pennsylvania: Erie, Warren, State College, Altoona, Johnstown, Meyersdale, Johnsonburg, St. Marys, Ridgway, DuBois, Emporium"},815:{sn:"N Illinois",ln:"Northern Illinois: Rockford, La Salle, De Kalb, Freeport, Joliet, Plainfield, Crystal Lake"},816:{sn:"Missouri",ln:"West Central Missouri: Kansas City, St Joseph, Independence, Harrisonville"},817:{sn:"Texas",ln:"Texas: Fort Worth, Arlington, Grandview, Weatherford, Rhome"},
818:{sn:"S California",ln:"Southern California: San Fernando Valley, including Glendale, San Fernando, Northridge, Burbank, Los Angeles suburbs"},819:{sn:"Quebec",ln:"Quebec, Canada: Sherbrooke, Trois-Rivieres, Abitibi-T\u00e9miscamingue, Mauricie, Outaouais, Estrie"},820:{},821:{},822:{},823:{},824:{},825:{sn:"Alberta",ln:"Alberta, Canada"},826:{},827:{},828:{sn:"W North Carolina",ln:"Western North Carolina: Hickory, Asheville, Waynesville, Franklin, Murphy"},829:{sn:"D.R.",ln:"The Dominican Republic"},
830:{sn:"SW Texas",ln:"Southwestern Texas: Del Rio, Uvalde, New Braunfels, Kerrville, Eagle Pass"},831:{sn:"California",ln:"Central California: Salinas, Hollister, Monterey, Carmel, Santa Cruz"},832:{sn:"Texas",ln:"Texas"},833:{},834:{},835:{},836:{},837:{},838:{},839:{},840:{},841:{},842:{},843:{sn:"E South Carolina",ln:"Eastern South Carolina: Florence, Myrtle Beach, Charleston, Isle of Palms, Hilton Head Island"},844:{},845:{sn:"SE New York",ln:"Southeastern New York: Rockland, Poughkeepsie, Middletown, West Point, Newburgh, Catskills, Margaretville"},
846:{},847:{sn:"NE Illinois",ln:"Northeastern Illinois: Arlington Heights, Buffalo Grove, Wauconda, Waukegan, Des Plaines, Chicago suburbs"},848:{sn:"New Jersey",ln:"New Jersey"},849:{sn:"D.R.",ln:"The Dominican Republic"},850:{sn:"NW Florida",ln:"Northwestern Florida: Pensacola, Tallahassee, Panama City, the Florida panhandle"},851:{},852:{},853:{},854:{},855:{},856:{sn:"SW New Jersey",ln:"Southwestern New Jersey: Vineland, Cherry Hill, Camden, Millville"},857:{sn:"Massachusetts",ln:"Massachusetts"},
858:{sn:"S California",ln:"Southern California: Del Mar, La Jolla, San Diego"},859:{sn:"Kentucky",ln:"North Central Kentucky: Lexington, Richmond, Danville, Covington, Florence, Mount Sterling"},860:{sn:"Connecticut",ln:"Connecticut: Bristol, Hartford, Norwich and northern and eastern Connecticut"},861:{},862:{sn:"New Jersey",ln:"New Jersey"},863:{sn:"Florida",ln:"South Central Florida: Auburndale, Lakeland, Avon Park, Clewiston, Bartow, Sebring, Winter Haven"},864:{sn:"South Carolina",ln:"South Carolina: Greenville, Spartanburg, Anderson, Upstate South Carolina"},
865:{sn:"E Tennessee",ln:"Central Eastern Tennessee: Knoxville, Gatlinburg, Newport, Jefferson City, Oak Ridge, Rockwood"},866:{},867:{sn:"Yukon",ln:"Yukon, Northwest Territories, and Nunavut, Canada"},868:{sn:"Trinidad/Tobago",ln:"Trinidad and Tobago"},869:{sn:"St. Kitts/Nevis",ln:"Saint Kitts and Nevis"},870:{sn:"S Arkansas",ln:"Southern and Eastern Arkansas: Texarkana, Jonesboro, Pine Bluff"},871:{},872:{sn:"Illinois",ln:"Illinois"},873:{sn:"Quebec",ln:"Quebec, Canada"},874:{},875:{},876:{sn:"Jamaica",
ln:"Jamaica"},877:{},878:{sn:"Pennsylvania",ln:"Pennsylvania"},879:{},880:{},881:{},882:{},883:{},884:{},885:{},886:{},887:{},888:{sn:"Toll-free",ln:"Toll-free Telephone Service"},889:{},890:{},891:{},892:{},893:{},894:{},895:{},896:{},897:{},898:{},899:{},900:{sn:"Premium-rate",ln:"Premium-rate Telephone Service"},901:{sn:"SW Tennessee",ln:"Southwestern Tennessee: Memphis, Covington, Somerville"},902:{sn:"Nova Scotia/PEI",ln:"Nova Scotia and Prince Edward Island, Canada"},903:{sn:"NE Texas",ln:"Northeastern Texas: Tyler, Sherman, Longview, Marshall, Palestine, Jacksonville, Carthage"},
904:{sn:"NE Florida",ln:"Northeastern Florida: Jacksonville, St. Augustine, Starke, Green Cove Springs"},905:{sn:"SW Ontario",ln:"Southwestern Ontario, Canada: Niagara Region, Hamilton, Toronto suburbs"},906:{sn:"N Michigan",ln:"Northern Michigan: Escanaba, Houghton, Iron Mountain, Marquette, Menominee, Sault Ste. Marie, Upper Peninsula"},907:{sn:"Alaska",ln:"Alaska: Anchorage, Juneau, Fairbanks"},908:{sn:"New Jersey",ln:"West Central New Jersey: Alpha, Washington, Elizabeth, Warren, Plainfield"},
909:{sn:"S California",ln:"Southern California: Colton, Grand Terrace, Ontario, Claremont, Pomona, Chino, Redlands, Fontana"},910:{sn:"SE North Carolina",ln:"Southeastern North Carolina: Fayetteville, Wilmington, Jacksonville, Lumberton"},912:{sn:"SE Georgia",ln:"Southeastern Georgia: Savannah, Statesboro, Vidalia, Waycross, Brunswick, Douglas"},913:{sn:"E Kansas",ln:"Eastern Kansas: Kansas City, Overland Park, Paola, Leavenworth"},914:{sn:"New York",ln:"New York: Westchester County"},915:{sn:"Texas",
ln:"Texas: El Paso County, Hudspeth County"},916:{sn:"California",ln:"Central California: Sacramento, Davis, Roseville"},917:{sn:"New York",ln:"New York: New York City"},918:{sn:"NE Oklahoma",ln:"Northeastern Oklahoma: Tulsa, Bartlesville, McAlester, Muskogee, Henryetta"},919:{sn:"North Carolina",ln:"North Central North Carolina: Raleigh, Durham, Chapel Hill, Oxford, Goldsboro"},920:{sn:"E Wisconsin",ln:"Eastern Wisconsin: Appleton, Sheboygan, Oshkosh, Green Bay, Manitowoc, Fond du Lac"},921:{},922:{},
923:{},924:{},925:{sn:"California",ln:"Central California: Concord, Pleasant Hill, Walnut Creek, Martinez, Livermore, Pleasanton, Dublin"},926:{},927:{},928:{sn:"NW Arizona",ln:"Northern and Western Arizona: Flagstaff, Kingman, Prescott, Yuma"},929:{sn:"New York",ln:"New York"},930:{},931:{sn:"Tennessee",ln:"Tennessee: Clarksville, Columbia, Manchester, Cookeville"},932:{},933:{},934:{},935:{sn:"S California",ln:"Southern California: San Diego"},936:{sn:"SE Texas",ln:"Central and Southeastern Texas: Nacogdoches, Lufkin, Conroe, Huntsville"},
937:{sn:"SW Ohio",ln:"Southwestern Ohio: Marysville, Springfield, Dayton, Hillsboro"},938:{sn:"Alabama",ln:"Alabama: Huntsville"},939:{sn:"Puerto Rico",ln:"Puerto Rico"},940:{sn:"N Texas",ln:"Northern Texas: Vernon, Wichita Falls, Denton, Gainesville, Decatur"},941:{sn:"SW Florida",ln:"Southwestern Florida: Tampa Bay,Manatee County, Sarasota County, Charlotte County; Bradenton, Port Charlotte, Sarasota, Punta Gorda"},942:{},943:{},944:{},945:{},946:{},947:{sn:"Michigan",ln:"Michigan"},948:{},949:{sn:"S California",
ln:"Southern California: Laguna Niguel, Irvine, Lake Forest, Newport Beach, Corona Del Mar"},950:{sn:"Carrier Access",ln:"Carrier Access"},951:{sn:"S California",ln:"Southern California: Corona, Riverside, Temescal Canyon, Lake Elsinore, Mira Loma, Moreno Valley, Perris, Sun City, Murrieta, Temecula, Hemet, Winchester, Lakeview, Nuevo, Beaumont, Banning, Idyllwild"},952:{sn:"Minnesota",ln:"Minnesota: Bloomington, Minnetonka, Chaska, Minneapolis"},953:{},954:{sn:"S Florida",ln:"Southern Florida: Fort Lauderdale, Hollywood, Coral Springs"},
955:{},956:{sn:"S Texas",ln:"Southern Texas: Laredo, Brownsville, McAllen, Harlingen"},957:{},958:{},959:{sn:"Connecticut",ln:"Connecticut"},960:{},961:{},962:{},963:{},964:{},965:{},966:{},967:{},968:{},969:{},970:{sn:"NW Colorado",ln:"Northern and Western Colorado: Aspen, Durango, Grand Junction, Fort Collins"},971:{sn:"NW Oregon",ln:"Northwestern Oregon: Portland, Salem, Hillsboro, Beaverton"},972:{sn:"Texas",ln:"Texas"},973:{sn:"NW New Jersey",ln:"Northwestern New Jersey: Newark, Paterson"},974:{},
975:{sn:"Missouri",ln:"Missouri"},976:{},977:{},978:{sn:"NE Massachusetts",ln:"Northeastern Massachusetts: Fitchburg, Peabody"},979:{sn:"SE Texas",ln:"Southeastern Texas: Wharton, Bryan, Bay City, College Station, Lake Jackson, La Grange"},980:{sn:"North Carolina",ln:"North Carolina"},981:{},982:{},983:{},984:{sn:"North Carolina",ln:"North Carolina"},985:{sn:"SE Louisiana",ln:"Southeastern Louisiana: Houma, Slidell"},986:{},987:{},988:{},989:{sn:"Michigan",ln:"Central Michigan: Alpena, Mt. Pleasant, Bay City, Saginaw, Midland, Owosso"},
990:{},991:{},992:{},993:{},994:{},995:{},996:{},997:{},998:{},999:{},"#^12..":{},"#^13..":{},"#^14..":{},"#^15..":{},"#^16..":{},"#^17..":{},"#^18..":{},"#^19..":{},"2..":{},"3..":{},"4..":{},"5..":{},"6..":{},"7..":{},"8..":{},"9..":{}};
ilib.data.area_DE={30:{sn:"Berlin",ln:"Berlin"},40:{sn:"Hamburg",ln:"Hamburg, Norderstedt, Neu Wulmstorf"},69:{sn:"Frankfurt",ln:"Frankfurt am Main, Offenbach am Main"},89:{sn:"Munich",ln:"Munich"},201:{sn:"Essen",ln:"Essen"},202:{sn:"Wuppertal",ln:"Wuppertal"},203:{sn:"Duisburg",ln:"Duisburg"},208:{sn:"M\u00fclheim",ln:"M\u00fclheim an der Ruhr/Oberhausen"},209:{sn:"Gelsenkirchen",ln:"Gelsenkirchen"},211:{sn:"D\u00fcsseldorf",ln:"D\u00fcsseldorf"},212:{sn:"Solingen",ln:"Solingen"},214:{sn:"Leverkusen",
ln:"Leverkusen"},221:{sn:"Cologne",ln:"Cologne"},228:{sn:"Bonn",ln:"Bonn, Niederkassel-Mondorf"},231:{sn:"Dortmund",ln:"Dortmund/L\u00fcnen-Brambauer"},234:{sn:"Bochum",ln:"Bochum"},241:{sn:"Aachen",ln:"Aachen"},251:{sn:"M\u00fcnster",ln:"M\u00fcnster"},261:{sn:"Koblenz",ln:"Koblenz"},271:{sn:"Siegen",ln:"Siegen"},281:{sn:"Wesel",ln:"Wesel"},291:{sn:"Meschede",ln:"Meschede"},331:{sn:"Potsdam",ln:"Potsdam"},335:{sn:"Frankfurt",ln:"Frankfurt (Oder)"},340:{sn:"Dessau",ln:"Dessau"},341:{sn:"Leipzig",
ln:"Leipzig"},345:{sn:"Halle",ln:"Halle (Saale)"},351:{sn:"Dresden",ln:"Dresden"},355:{sn:"Cottbus",ln:"Cottbus"},361:{sn:"Erfurt",ln:"Erfurt"},365:{sn:"Gera",ln:"Gera"},371:{sn:"Chemnitz",ln:"Chemnitz"},375:{sn:"Zwickau",ln:"Zwickau"},381:{sn:"Rostock",ln:"Rostock"},385:{sn:"Schwerin",ln:"Schwerin"},391:{sn:"Magdeburg",ln:"Magdeburg"},395:{sn:"Neubrandenburg",ln:"Neubrandenburg"},421:{sn:"Bremen",ln:"Bremen"},431:{sn:"Kiel",ln:"Kiel"},441:{sn:"Oldenburg",ln:"Oldenburg (Oldb.)"},461:{sn:"Flensburg",
ln:"Flensburg"},471:{sn:"Bremerhaven",ln:"Bremerhaven"},481:{sn:"Heide",ln:"Heide"},491:{sn:"Leer",ln:"Leer"},511:{sn:"Hannover",ln:"Hannover"},521:{sn:"Bielefeld",ln:"Bielefeld"},531:{sn:"Braunschweig",ln:"Braunschweig"},541:{sn:"Osnabr\u00fcck",ln:"Osnabr\u00fcck"},551:{sn:"G\u00f6ttingen",ln:"G\u00f6ttingen"},561:{sn:"Kassel",ln:"Kassel"},571:{sn:"Minden",ln:"Minden"},581:{sn:"Uelzen",ln:"Uelzen"},591:{sn:"Lingen",ln:"Lingen (Ems)"},611:{sn:"Wiesbaden",ln:"Wiesbaden"},621:{sn:"Mannheim",ln:"Mannheim, Ilvesheim, Neu-Edingen, Ludwigshafen am Rhein"},
631:{sn:"Kaiserslautern",ln:"Kaiserslautern"},641:{sn:"Gie\u00dfen",ln:"Gie\u00dfen, Heuchelheim (Hessen)"},651:{sn:"Trier",ln:"Trier"},661:{sn:"Fulda",ln:"Fulda, K\u00fcnzell, Petersberg"},671:{sn:"Bad Kreuznach",ln:"Bad Kreuznach"},681:{sn:"Saarbr\u00fccken",ln:"Saarbr\u00fccken"},711:{sn:"Stuttgart",ln:"Stuttgart, Aichwald, Denkendorf, Esslingen am Neckar, Fellbach, Filderstadt-Bernhausen, Filderstadt-Bonlanden, Filderstadt-Plattenhardt, Korntal, Leinfelden-Echterdingen, Ostfildern-Kemnat, Ostfildern-Nellingen, Ostfildern-Ruit"},
721:{sn:"Karlsruhe",ln:"Karlsruhe, Eggenstein-Leopoldshafen, Pfinztal-Berghausen (Baden), Rheinstetten, Stutensee,"},731:{sn:"Ulm",ln:"Ulm, Blaustein, Elchingen, Neu-Ulm"},741:{sn:"Rottweil",ln:"Rottweil, Dei\u00dflingen, Dietingen, Villingendorf, Zimmern ob Rottweil"},751:{sn:"Ravensburg",ln:"Ravensburg, Baienfurt, Baindt, Berg (Schussental), Gr\u00fcnkraut, Schlier, Weingarten (W\u00fcrttemberg)"},761:{sn:"Freiburg",ln:"Freiburg im Breisgau, Au, Gundelfingen, Horben, Kirchzarten, Merzhausen, S\u00f6lden, Wittnau"},
771:{sn:"Donaueschingen",ln:"Donaueschingen, Br\u00e4unlingen, H\u00fcfingen"},781:{sn:"Offenburg",ln:"Offenburg, Durbach, Ortenberg, Schutterwald"},791:{sn:"Schw\u00e4bisch Hall",ln:"Schw\u00e4bisch Hall, Braunsbach, Michelbach an der Bilz, Michelfeld, Rosengarten, Unterm\u00fcnkheim"},811:{sn:"Hallbergmoos",ln:"Hallbergmoos"},821:{sn:"Augsburg",ln:"Augsburg"},831:{sn:"Kempten",ln:"Kempten Allg\u00e4u"},841:{sn:"Ingolstadt",ln:"Ingolstadt"},851:{sn:"Passau",ln:"Passau"},861:{sn:"Traunstein",ln:"Traunstein"},
871:{sn:"Landshut",ln:"Landshut"},881:{sn:"Weilheim",ln:"Weilheim in Oberbayern"},906:{sn:"Donauw\u00f6rth",ln:"Donauw\u00f6rth"},911:{sn:"N\u00fcrnberg",ln:"N\u00fcrnberg/F\u00fcrth"},921:{sn:"Bayreuth",ln:"Bayreuth"},931:{sn:"W\u00fcrzburg",ln:"W\u00fcrzburg"},941:{sn:"Regensburg",ln:"Regensburg"},951:{sn:"Bamberg",ln:"Bamberg"},961:{sn:"Weiden",ln:"Weiden (Oberpfalz)"},971:{sn:"Bad Kissingen",ln:"Bad Kissingen"},981:{sn:"Ansbach",ln:"Ansbach"},991:{sn:"Deggendorf",ln:"Deggendorf"},2041:{sn:"Bottrop",
ln:"Bottrop"},2043:{sn:"Gladbeck",ln:"Gladbeck"},2045:{sn:"Bottrop-Kirchhellen",ln:"Bottrop-Kirchhellen"},2051:{sn:"Velbert",ln:"Velbert"},2052:{sn:"Velbert-Langenberg",ln:"Velbert-Langenberg (Rheinland)"},2053:{sn:"Velbert-Neviges",ln:"Velbert-Neviges"},2054:{sn:"Essen-Kettwig",ln:"Essen-Kettwig, M\u00fclheim an der Ruhr-Mintard"},2056:{sn:"Heiligenhaus",ln:"Heiligenhaus"},2058:{sn:"W\u00fclfrath",ln:"W\u00fclfrath"},2064:{sn:"Dinslaken",ln:"Dinslaken"},2065:{sn:"Duisburg-Rheinhausen",ln:"Duisburg-Rheinhausen"},
2066:{sn:"Duisburg-Homberg",ln:"Duisburg-Homberg (Rheinland)"},2102:{sn:"Ratingen",ln:"Ratingen"},2103:{sn:"Hilden",ln:"Hilden"},2104:{sn:"Mettmann",ln:"Mettmann"},2131:{sn:"Neuss",ln:"Neuss, Kaarst"},2132:{sn:"Meerbusch-B\u00fcderich",ln:"Meerbusch-B\u00fcderich (D\u00fcsseldorf)"},2133:{sn:"Dormagen",ln:"Dormagen"},2137:{sn:"Neuss-Norf",ln:"Neuss-Norf"},2150:{sn:"Meerbusch-Lank-Latum",ln:"Meerbusch-Lank-Latum"},2151:{sn:"Krefeld",ln:"Krefeld"},2152:{sn:"Kempen",ln:"Kempen"},2153:{sn:"Nettetal-Lobberich",
ln:"Nettetal-Lobberich"},2154:{sn:"Willich",ln:"Willich"},2156:{sn:"Willich-Anrath",ln:"Willich-Anrath"},2157:{sn:"Nettetal-Kaldenkirchen",ln:"Nettetal-Kaldenkirchen/Br\u00fcggen"},2159:{sn:"Meerbusch-Osterath",ln:"Meerbusch-Osterath"},2161:{sn:"M\u00f6nchengladbach",ln:"M\u00f6nchengladbach"},2162:{sn:"Viersen",ln:"Viersen"},2163:{sn:"Schwalmtal",ln:"Schwalmtal"},2164:{sn:"J\u00fcchen-Otzenrath",ln:"J\u00fcchen-Otzenrath"},2165:{sn:"J\u00fcchen",ln:"J\u00fcchen"},2166:{sn:"Rheydt",ln:"Rheydt"},2171:{sn:"Leverkusen-Opladen",
ln:"Leverkusen-Opladen"},2173:{sn:"Langenfeld",ln:"Langenfeld (Rheinland), Leverkusen-Hitdorf"},2174:{sn:"Burscheid",ln:"Burscheid (Rheinland), Leichlingen-Witzhelden"},2175:{sn:"Leichlingen",ln:"Leichlingen"},2181:{sn:"Grevenbroich",ln:"Grevenbroich"},2182:{sn:"Grevenbroich-Kapellen",ln:"Grevenbroich-Kapellen"},2183:{sn:"Rommerskirchen",ln:"Rommerskirchen"},2191:{sn:"Remscheid",ln:"Remscheid"},2192:{sn:"H\u00fcckeswagen",ln:"H\u00fcckeswagen"},2193:{sn:"Wermelskirchen-Dabringhausen",ln:"Wermelskirchen-Dabringhausen"},
2195:{sn:"Radevormwald",ln:"Radevormwald"},2196:{sn:"Wermelskirchen",ln:"Wermelskirchen"},2202:{sn:"Bergisch Gladbach",ln:"Bergisch Gladbach"},2203:{sn:"Cologne-Porz",ln:"Cologne-Porz"},2204:{sn:"Bergisch Gladbach",ln:"Bergisch Gladbach-Bensberg, OT Untereschbach von Overath"},2205:{sn:"R\u00f6srath",ln:"R\u00f6srath"},2206:{sn:"Overath",ln:"Overath, Lohmar"},2207:{sn:"D\u00fcrscheid",ln:"D\u00fcrscheid, Overath"},2208:{sn:"Niederkassel",ln:"Niederkassel"},2222:{sn:"Bornheim",ln:"Bornheim, Roisdorf"},
2223:{sn:"K\u00f6nigswinter",ln:"K\u00f6nigswinter"},2224:{sn:"Bad Honnef",ln:"Bad Honnef"},2225:{sn:"Meckenheim",ln:"Meckenheim (Rheinland), Wachtberg"},2226:{sn:"Rheinbach",ln:"Rheinbach"},2227:{sn:"Merten",ln:"Merten, Walberberg, Sechtem"},2228:{sn:"Rolandseck",ln:"Rolandseck"},2232:{sn:"Br\u00fchl",ln:"Br\u00fchl (Rheinland), Berzdorf von Wesseling, Cologne-Meschenich"},2233:{sn:"H\u00fcrth",ln:"H\u00fcrth (Rheinland), Cologne-Rondorf"},2234:{sn:"Frechen",ln:"Frechen, L\u00f6venich, Cologne-Marsdorf, Cologne-Weiden"},
2235:{sn:"Erftstadt",ln:"Erftstadt"},2236:{sn:"Wesseling",ln:"Wesseling (Rheinland), Cologne-Godorf, Cologne-Hahnwald, Cologne-Immendorf, Cologne-Rodenkirchen, Cologne-S\u00fcrth, Cologne-Wei\u00df"},2237:{sn:"Kerpen",ln:"Kerpen (Rheinland)"},2238:{sn:"Pulheim",ln:"Pulheim"},2241:{sn:"Siegburg",ln:"Siegburg/Sankt Augustin/Troisdorf"},2242:{sn:"Hennef",ln:"Hennef (Sieg)"},2243:{sn:"Eitorf",ln:"Eitorf"},2244:{sn:"Oberpleis",ln:"Oberpleis"},2245:{sn:"Much",ln:"Much"},2246:{sn:"Lohmar",ln:"Lohmar"},2247:{sn:"Neunkirchen-Seelscheid",
ln:"Neunkirchen-Seelscheid"},2248:{sn:"Uckerath",ln:"Uckerath"},2251:{sn:"Euskirchen",ln:"Euskirchen"},2252:{sn:"Z\u00fclpich",ln:"Z\u00fclpich"},2253:{sn:"Bad M\u00fcnstereifel",ln:"Bad M\u00fcnstereifel"},2254:{sn:"Weilerswist",ln:"Weilerswist"},2255:{sn:"Euskirchen-Flamersheim",ln:"Euskirchen-Flamersheim"},2256:{sn:"Mechernich-Satzvey",ln:"Mechernich-Satzvey"},2257:{sn:"Reckerscheid",ln:"Reckerscheid"},2261:{sn:"Gummersbach",ln:"Gummersbach"},2262:{sn:"Wiehl",ln:"Wiehl"},2263:{sn:"Engelskirchen",
ln:"Engelskirchen"},2264:{sn:"Marienheide",ln:"Marienheide"},2265:{sn:"Eckenhagen",ln:"Eckenhagen"},2266:{sn:"Lindlar",ln:"Lindlar"},2267:{sn:"Wipperf\u00fcrth",ln:"Wipperf\u00fcrth"},2268:{sn:"K\u00fcrten",ln:"K\u00fcrten"},2269:{sn:"R\u00f6nsahl",ln:"R\u00f6nsahl"},2271:{sn:"Bergheim",ln:"Bergheim"},2272:{sn:"Bedburg",ln:"Bedburg"},2273:{sn:"Kerpen-Horrem",ln:"Kerpen-Horrem"},2274:{sn:"Elsdorf",ln:"Elsdorf (Rheinland)"},2275:{sn:"Kerpen-Buir",ln:"Kerpen-Buir"},2291:{sn:"Waldbr\u00f6l",ln:"Waldbr\u00f6l"},
2292:{sn:"Windeck",ln:"Windeck (Sieg)"},2293:{sn:"N\u00fcmbrecht",ln:"N\u00fcmbrecht"},2294:{sn:"Morsbach",ln:"Morsbach (Sieg)"},2295:{sn:"Ruppichteroth",ln:"Ruppichteroth"},2296:{sn:"Br\u00fccherm\u00fchle",ln:"Br\u00fccherm\u00fchle"},2297:{sn:"Wildbergerh\u00fctte",ln:"Wildbergerh\u00fctte"},2301:{sn:"Holzwickede",ln:"Holzwickede"},2302:{sn:"Witten",ln:"Witten"},2303:{sn:"Unna",ln:"Unna"},2304:{sn:"Schwerte",ln:"Schwerte"},2305:{sn:"Castrop-Rauxel",ln:"Castrop-Rauxel"},2306:{sn:"L\u00fcnen",ln:"L\u00fcnen"},
2307:{sn:"Kamen",ln:"Kamen/Bergkamen"},2308:{sn:"Unna-Hemmerde",ln:"Unna-Hemmerde"},2309:{sn:"Waltrop",ln:"Waltrop"},2323:{sn:"Herne",ln:"Herne"},2324:{sn:"Hattingen",ln:"Hattingen"},2325:{sn:"Herne-Wanne-Eickel",ln:"Herne-Wanne-Eickel"},2327:{sn:"Bochum-Wattenscheid",ln:"Bochum-Wattenscheid"},2330:{sn:"Herdecke",ln:"Herdecke"},2331:{sn:"Hagen",ln:"Hagen"},2332:{sn:"Gevelsberg",ln:"Gevelsberg"},2333:{sn:"Ennepetal",ln:"Ennepetal"},2334:{sn:"Hagen-Hohenlimburg",ln:"Hagen-Hohenlimburg"},2335:{sn:"Wetter",
ln:"Wetter"},2336:{sn:"Schwelm",ln:"Schwelm"},2337:{sn:"Hagen-Dahl",ln:"Hagen-Dahl"},2338:{sn:"Breckerfeld",ln:"Breckerfeld"},2339:{sn:"Sprockh\u00f6vel",ln:"Sprockh\u00f6vel"},2351:{sn:"L\u00fcdenscheid",ln:"L\u00fcdenscheid"},2352:{sn:"Altena",ln:"Altena"},2353:{sn:"Halver",ln:"Halver"},2354:{sn:"Meinerzhagen",ln:"Meinerzhagen"},2355:{sn:"Schalksm\u00fchle",ln:"Schalksm\u00fchle"},2357:{sn:"Herscheid",ln:"Herscheid"},2358:{sn:"Valbert",ln:"Valbert"},2359:{sn:"Kierspe",ln:"Kierspe"},2360:{sn:"Lippramsdorf",
ln:"Lippramsdorf"},2361:{sn:"Recklinghausen",ln:"Recklinghausen"},2362:{sn:"Dorsten",ln:"Dorsten"},2363:{sn:"Datteln",ln:"Datteln"},2364:{sn:"Haltern",ln:"Haltern"},2365:{sn:"Marl",ln:"Marl"},2366:{sn:"Herten",ln:"Herten/Rhade"},2367:{sn:"Castrop-Rauxel-Henrichenburg",ln:"Castrop-Rauxel-Henrichenburg"},2368:{sn:"Oer-Erkenschwick",ln:"Oer-Erkenschwick"},2369:{sn:"Dorsten-Wulfen",ln:"Dorsten-Wulfen/Dorsten-Lembeck"},2371:{sn:"Iserlohn",ln:"Iserlohn"},2372:{sn:"Hemer",ln:"Hemer"},2373:{sn:"Menden",ln:"Menden/Fr\u00f6ndenberg"},
2374:{sn:"Iserlohn-Letmathe",ln:"Iserlohn-Letmathe"},2375:{sn:"Balve",ln:"Balve"},2377:{sn:"Wickede",ln:"Wickede (Ruhr)"},2378:{sn:"Fr\u00f6ndenberg-Langschede",ln:"Fr\u00f6ndenberg-Langschede"},2379:{sn:"Menden-Asbeck",ln:"Menden-Asbeck"},2381:{sn:"Hamm",ln:"Hamm"},2382:{sn:"Ahlen",ln:"Ahlen (Westf.)"},2383:{sn:"B\u00f6nen",ln:"B\u00f6nen"},2384:{sn:"Welver",ln:"Welver"},2385:{sn:"Hamm-Rhynern",ln:"Hamm-Rhynern"},2387:{sn:"Walstedde",ln:"Walstedde"},2388:{sn:"Hamm-Uentrop",ln:"Hamm-Uentrop"},2389:{sn:"Werne",
ln:"Werne"},2391:{sn:"Plettenberg",ln:"Plettenberg"},2392:{sn:"Werdohl",ln:"Werdohl/Neuenrade"},2393:{sn:"Allendorf",ln:"Allendorf"},2394:{sn:"Affeln",ln:"Affeln"},2395:{sn:"R\u00f6nkhausen",ln:"R\u00f6nkhausen"},2401:{sn:"Baesweiler",ln:"Baesweiler"},2402:{sn:"Stolberg",ln:"Stolberg (Rheinland)"},2403:{sn:"Eschweiler",ln:"Eschweiler"},2404:{sn:"Alsdorf",ln:"Alsdorf"},2405:{sn:"W\u00fcrselen",ln:"W\u00fcrselen"},2406:{sn:"Herzogenrath",ln:"Herzogenrath"},2407:{sn:"Herzogenrath-Kohlscheid",ln:"Herzogenrath-Kohlscheid"},
2408:{sn:"Aachen-Kornelim\u00fcnster",ln:"Aachen-Kornelim\u00fcnster"},2409:{sn:"Gressenich",ln:"Gressenich"},2421:{sn:"D\u00fcren",ln:"D\u00fcren"},2422:{sn:"Kreuzau",ln:"Kreuzau"},2423:{sn:"Langerwehe",ln:"Langerwehe"},2424:{sn:"Vettwei\u00df",ln:"Vettwei\u00df"},2425:{sn:"Embken",ln:"Embken"},2426:{sn:"N\u00f6rvenich",ln:"N\u00f6rvenich"},2427:{sn:"Nideggen",ln:"Nideggen"},2428:{sn:"Niederzier",ln:"Niederzier"},2429:{sn:"H\u00fcrtgenwald",ln:"H\u00fcrtgenwald"},2431:{sn:"Erkelenz",ln:"Erkelenz"},
2432:{sn:"Wassenberg",ln:"Wassenberg"},2433:{sn:"H\u00fcckelhoven",ln:"H\u00fcckelhoven"},2434:{sn:"Wegberg",ln:"Wegberg"},2435:{sn:"L\u00f6venich",ln:"L\u00f6venich"},2436:{sn:"Roedgen",ln:"Roedgen"},2440:{sn:"Nettersheim-Tondorf",ln:"Nettersheim-Tondorf"},2441:{sn:"Kall",ln:"Kall"},2443:{sn:"Mechernich",ln:"Mechernich"},2444:{sn:"Gem\u00fcnd",ln:"Gem\u00fcnd"},2445:{sn:"Schleiden",ln:"Schleiden"},2446:{sn:"Heimbach",ln:"Heimbach (Eifel)"},2447:{sn:"Dahlem",ln:"Dahlem"},2448:{sn:"Rescheid",ln:"Rescheid"},
2449:{sn:"Blankenheim",ln:"Blankenheim"},2451:{sn:"Geilenkirchen",ln:"Geilenkirchen/\u00dcbach-Palenberg"},2452:{sn:"Heinsberg",ln:"Heinsberg"},2453:{sn:"Randerath",ln:"Randerath"},2454:{sn:"Gangelt",ln:"Gangelt"},2455:{sn:"Waldfeucht",ln:"Waldfeucht"},2456:{sn:"Selfkant",ln:"Selfkant"},2461:{sn:"J\u00fclich",ln:"J\u00fclich"},2462:{sn:"Linnich",ln:"Linnich"},2463:{sn:"Titz",ln:"Titz"},2464:{sn:"Aldenhoven",ln:"Aldenhoven"},2465:{sn:"Inden",ln:"Inden"},2471:{sn:"Roetgen",ln:"Roetgen"},2472:{sn:"Monschau",
ln:"Monschau"},2473:{sn:"Simmerath",ln:"Simmerath"},2474:{sn:"Schmidt",ln:"Schmidt"},2482:{sn:"Hellenthal",ln:"Hellenthal"},2484:{sn:"Eiserfey",ln:"Eiserfey"},2485:{sn:"Dreiborn",ln:"Dreiborn"},2486:{sn:"Nettersheim",ln:"Nettersheim"},2501:{sn:"M\u00fcnster-Hiltrup",ln:"M\u00fcnster-Hiltrup, M\u00fcnster-Amelsb\u00fcren"},2502:{sn:"Nottuln",ln:"Nottuln"},2504:{sn:"Telgte",ln:"Telgte"},2505:{sn:"Altenberge",ln:"Altenberge (Westf.)"},2506:{sn:"M\u00fcnster-Wolbeck",ln:"M\u00fcnster-Wolbeck"},2507:{sn:"Havixbeck",
ln:"Havixbeck"},2508:{sn:"Drensteinfurt",ln:"Drensteinfurt"},2509:{sn:"Nottuln-Appelh\u00fclsen",ln:"Nottuln-Appelh\u00fclsen"},2518:{sn:"Grefrath",ln:"Grefrath/Nettetal"},2520:{sn:"Wadersloh-Diestedde",ln:"Wadersloh-Diestedde"},2521:{sn:"Beckum",ln:"Beckum"},2522:{sn:"Oelde",ln:"Oelde"},2523:{sn:"Wadersloh",ln:"Wadersloh"},2524:{sn:"Ennigerloh",ln:"Ennigerloh"},2525:{sn:"Neubeckum",ln:"Neubeckum"},2526:{sn:"Sendenhorst",ln:"Sendenhorst"},2527:{sn:"Lippetal",ln:"Lippetal"},2528:{sn:"Enniger",ln:"Enniger"},
2529:{sn:"Stromberg",ln:"Stromberg, Oelde"},2532:{sn:"Ostbevern",ln:"Ostbevern"},2533:{sn:"M\u00fcnster-Nienberge",ln:"M\u00fcnster-Nienberge"},2534:{sn:"M\u00fcnster-Roxel",ln:"M\u00fcnster-Roxel"},2535:{sn:"Albersloh",ln:"Albersloh"},2536:{sn:"M\u00fcnster-Albachten",ln:"M\u00fcnster-Albachten"},2538:{sn:"Drensteinfurt-Rinkerode",ln:"Drensteinfurt-Rinkerode"},2541:{sn:"Coesfeld",ln:"Coesfeld"},2542:{sn:"Gescher",ln:"Gescher"},2543:{sn:"Billerbeck",ln:"Billerbeck"},2545:{sn:"Rosendahl",ln:"Rosendahl"},
2546:{sn:"Lette",ln:"Lette, Coesfeld"},2547:{sn:"Osterwick",ln:"Osterwick"},2548:{sn:"Rorup",ln:"Rorup"},2551:{sn:"Steinfurt-Burgsteinfurt",ln:"Steinfurt-Burgsteinfurt"},2552:{sn:"Steinfurt-Borghorst",ln:"Steinfurt-Borghorst"},2553:{sn:"Ochtrup",ln:"Ochtrup"},2554:{sn:"Laer",ln:"Laer (ST)"},2555:{sn:"Sch\u00f6ppingen",ln:"Sch\u00f6ppingen"},2556:{sn:"Metelen",ln:"Metelen"},2557:{sn:"Wettringen",ln:"Wettringen (ST)"},2558:{sn:"Horstmar",ln:"Horstmar"},2561:{sn:"Ahaus",ln:"Ahaus"},2562:{sn:"Gronau",
ln:"Gronau (Westf.)"},2563:{sn:"Stadtlohn",ln:"Stadtlohn"},2564:{sn:"Vreden",ln:"Vreden"},2565:{sn:"Epe",ln:"Epe"},2566:{sn:"Legden",ln:"Legden"},2567:{sn:"Ahaus-Alst\u00e4tte",ln:"Ahaus-Alst\u00e4tte"},2568:{sn:"Heek",ln:"Heek"},2571:{sn:"Greven",ln:"Greven"},2572:{sn:"Emsdetten",ln:"Emsdetten"},2573:{sn:"Nordwalde",ln:"Nordwalde"},2574:{sn:"Saerbeck",ln:"Saerbeck"},2575:{sn:"Reckenfeld",ln:"Reckenfeld"},2581:{sn:"Warendorf",ln:"Warendorf"},2582:{sn:"Everswinkel",ln:"Everswinkel"},2583:{sn:"Sassenberg",
ln:"Sassenberg"},2584:{sn:"Milte",ln:"Milte"},2585:{sn:"Hoetmar",ln:"Hoetmar"},2586:{sn:"Beelen",ln:"Beelen"},2587:{sn:"Westkirchen",ln:"Westkirchen (Westf)"},2588:{sn:"Greffen",ln:"Greffen"},2590:{sn:"D\u00fclmen-Buldern",ln:"D\u00fclmen-Buldern"},2591:{sn:"L\u00fcdinghausen",ln:"L\u00fcdinghausen"},2592:{sn:"Selm",ln:"Selm"},2593:{sn:"Ascheberg",ln:"Ascheberg"},2594:{sn:"D\u00fclmen",ln:"D\u00fclmen"},2595:{sn:"Olfen",ln:"Olfen"},2596:{sn:"Nordkirchen",ln:"Nordkirchen"},2597:{sn:"Senden",ln:"Senden"},
2598:{sn:"Ottmarsbocholt",ln:"Ottmarsbocholt"},2599:{sn:"Herbern",ln:"Herbern"},2601:{sn:"Nauort",ln:"Nauort"},2602:{sn:"Montabaur",ln:"Montabaur"},2603:{sn:"Bad Ems",ln:"Bad Ems"},2604:{sn:"Nassau",ln:"Nassau (Lahn)"},2605:{sn:"L\u00f6f",ln:"L\u00f6f"},2606:{sn:"Winningen",ln:"Winningen"},2607:{sn:"Kobern-Gondorf",ln:"Kobern-Gondorf"},2608:{sn:"Welschneudorf",ln:"Welschneudorf"},2620:{sn:"Neuh\u00e4usel",ln:"Neuh\u00e4usel (WW)"},2621:{sn:"Lahnstein",ln:"Lahnstein"},2622:{sn:"Bendorf",ln:"Bendorf"},
2623:{sn:"Ransbach-Baumbach",ln:"Ransbach-Baumbach"},2624:{sn:"H\u00f6hr-Grenzhausen",ln:"H\u00f6hr-Grenzhausen"},2625:{sn:"Ochtendung",ln:"Ochtendung"},2626:{sn:"Selters",ln:"Selters (Westerwald)"},2627:{sn:"Braubach",ln:"Braubach"},2628:{sn:"Rhens",ln:"Rhens"},2630:{sn:"M\u00fclheim-K\u00e4rlich",ln:"M\u00fclheim-K\u00e4rlich"},2631:{sn:"Neuwied",ln:"Neuwied"},2632:{sn:"Andernach",ln:"Andernach"},2633:{sn:"Brohl-L\u00fctzing",ln:"Brohl-L\u00fctzing"},2634:{sn:"Rengsdorf",ln:"Rengsdorf"},2635:{sn:"Rheinbrohl",
ln:"Rheinbrohl"},2636:{sn:"Burgbrohl",ln:"Burgbrohl"},2637:{sn:"Weissenthurm",ln:"Weissenthurm"},2638:{sn:"Waldbreitbach",ln:"Waldbreitbach"},2639:{sn:"Anhausen",ln:"Anhausen (Neuwied)"},2641:{sn:"Bad Neuenahr-Ahrweiler",ln:"Bad Neuenahr-Ahrweiler"},2642:{sn:"Remagen",ln:"Remagen"},2643:{sn:"Altenahr",ln:"Altenahr"},2644:{sn:"Linz",ln:"Linz am Rhein"},2645:{sn:"Vettelschoss",ln:"Vettelschoss"},2646:{sn:"K\u00f6nigsfeld",ln:"K\u00f6nigsfeld (Eifel)"},2647:{sn:"Kesseling",ln:"Kesseling"},2651:{sn:"Mayen",
ln:"Mayen"},2652:{sn:"Mendig",ln:"Mendig"},2653:{sn:"Kaisersesch",ln:"Kaisersesch"},2654:{sn:"Polch",ln:"Polch"},2655:{sn:"Weibern",ln:"Weibern"},2656:{sn:"Virneburg",ln:"Virneburg"},2657:{sn:"Uersfeld",ln:"Uersfeld"},2661:{sn:"Bad Marienberg",ln:"Bad Marienberg (WW)"},2662:{sn:"Hachenburg",ln:"Hachenburg"},2663:{sn:"Westerburg",ln:"Westerburg"},2664:{sn:"Rennerod",ln:"Rennerod"},2666:{sn:"Freilingen",ln:"Freilingen (WW)"},2667:{sn:"Stein-Neukirch",ln:"Stein-Neukirch"},2671:{sn:"Cochem",ln:"Cochem"},
2672:{sn:"Treis-Karden",ln:"Treis-Karden"},2673:{sn:"Poltersdorf",ln:"Poltersdorf"},2674:{sn:"Bad Bertrich",ln:"Bad Bertrich"},2675:{sn:"Ediger-Eller",ln:"Ediger-Eller"},2676:{sn:"Ulmen",ln:"Ulmen"},2677:{sn:"Lutzerath",ln:"Lutzerath"},2678:{sn:"Buechel",ln:"Buechel (COC)"},2680:{sn:"M\u00fcndersbach",ln:"M\u00fcndersbach"},2681:{sn:"Altenkirchen",ln:"Altenkirchen (Westerwald)"},2682:{sn:"Hamm",ln:"Hamm (Sieg)"},2683:{sn:"Asbach",ln:"Asbach (Westerwald)"},2684:{sn:"Puderbach",ln:"Puderbach (WW)"},
2685:{sn:"Flammersfeld",ln:"Flammersfeld"},2686:{sn:"Weyerbusch",ln:"Weyerbusch"},2687:{sn:"Horhausen",ln:"Horhausen (Westerwald)"},2688:{sn:"Kroppach",ln:"Kroppach"},2689:{sn:"Dierdorf",ln:"Dierdorf"},2691:{sn:"Adenau",ln:"Adenau"},2692:{sn:"Kelberg",ln:"Kelberg"},2693:{sn:"Antweiler",ln:"Antweiler"},2694:{sn:"Wershofen",ln:"Wershofen"},2695:{sn:"Insul",ln:"Insul"},2696:{sn:"Nohn",ln:"Nohn (Eifel)"},2697:{sn:"Ahrh\u00fctte",ln:"Ahrh\u00fctte (Blankenheim)"},2721:{sn:"Lennestadt",ln:"Lennestadt"},
2722:{sn:"Attendorn",ln:"Attendorn"},2723:{sn:"Kirchhundem",ln:"Kirchhundem"},2724:{sn:"Serkenrode",ln:"Serkenrode"},2725:{sn:"Oedingen",ln:"Oedingen"},2732:{sn:"Kreuztal",ln:"Kreuztal"},2733:{sn:"Hilchenbach",ln:"Hilchenbach"},2734:{sn:"Freudenberg",ln:"Freudenberg"},2735:{sn:"Neunkirchen",ln:"Neunkirchen"},2736:{sn:"Burbach",ln:"Burbach"},2737:{sn:"Deuz",ln:"Deuz"},2738:{sn:"Netphen",ln:"Netphen"},2739:{sn:"Wilnsdorf",ln:"Wilnsdorf"},2741:{sn:"Betzdorf",ln:"Betzdorf"},2742:{sn:"Wissen",ln:"Wissen"},
2743:{sn:"Daaden",ln:"Daaden"},2744:{sn:"Herdorf",ln:"Herdorf"},2745:{sn:"Brachbach",ln:"Brachbach"},2747:{sn:"Molzhain",ln:"Molzhain"},2750:{sn:"Diedenshausen",ln:"Diedenshausen"},2751:{sn:"Bad Berleburg",ln:"Bad Berleburg"},2752:{sn:"Bad Laasphe",ln:"Bad Laasphe"},2753:{sn:"Erndtebr\u00fcck",ln:"Erndtebr\u00fcck"},2754:{sn:"Feudingen",ln:"Feudingen"},2755:{sn:"Schwarzenau",ln:"Schwarzenau"},2758:{sn:"Girkhausen",ln:"Girkhausen"},2759:{sn:"Aue",ln:"Aue"},2761:{sn:"Olpe",ln:"Olpe"},2762:{sn:"Wenden",
ln:"Wenden"},2763:{sn:"Bleche",ln:"Bleche"},2764:{sn:"Welschen",ln:"Welschen Ennest"},2770:{sn:"Eschenburg",ln:"Eschenburg"},2771:{sn:"Dillenburg",ln:"Dillenburg"},2772:{sn:"Herborn",ln:"Herborn"},2773:{sn:"Haiger",ln:"Haiger"},2774:{sn:"Dietzh\u00f6lztal",ln:"Dietzh\u00f6lztal"},2775:{sn:"Driedorf",ln:"Driedorf"},2776:{sn:"Bad Endbach-Hartenrod",ln:"Bad Endbach-Hartenrod"},2777:{sn:"Breitscheid",ln:"Breitscheid (Hess)"},2778:{sn:"Siegbach",ln:"Siegbach"},2779:{sn:"Greifenstein-Beilstein",ln:"Greifenstein-Beilstein"},
2801:{sn:"Xanten",ln:"Xanten"},2802:{sn:"Alpen",ln:"Alpen"},2803:{sn:"B\u00fcderich",ln:"B\u00fcderich (Wesel)"},2804:{sn:"Marienbaum",ln:"Marienbaum"},2821:{sn:"Kleve",ln:"Kleve"},2822:{sn:"Emmerich",ln:"Emmerich am Rhein"},2823:{sn:"Goch",ln:"Goch"},2824:{sn:"Kalkar",ln:"Kalkar"},2825:{sn:"Uedem",ln:"Uedem"},2826:{sn:"Kranenburg",ln:"Kranenburg"},2827:{sn:"Hassum",ln:"Hassum"},2828:{sn:"Elten",ln:"Elten (zu Emmerich am Rhein)"},2831:{sn:"Geldern",ln:"Geldern"},2832:{sn:"Kevelaer",ln:"Kevelaer"},
2833:{sn:"Kerken",ln:"Kerken"},2834:{sn:"Straelen",ln:"Straelen"},2835:{sn:"Issum",ln:"Issum"},2836:{sn:"Wachtendonk",ln:"Wachtendonk"},2837:{sn:"Weeze",ln:"Weeze"},2838:{sn:"Sonsbeck",ln:"Sonsbeck"},2839:{sn:"Herongen",ln:"Herongen"},2841:{sn:"Moers",ln:"Moers"},2842:{sn:"Kamp-Lintfort",ln:"Kamp-Lintfort"},2843:{sn:"Rheinberg",ln:"Rheinberg"},2844:{sn:"Orsoy",ln:"Orsoy"},2845:{sn:"Neukirchen-Vluyn",ln:"Neukirchen-Vluyn"},2850:{sn:"Haldern",ln:"Haldern"},2851:{sn:"Rees",ln:"Rees"},2852:{sn:"Hamminkeln",
ln:"Hamminkeln"},2853:{sn:"Schermbeck",ln:"Schermbeck"},2855:{sn:"Voerde",ln:"Voerde (Rheinland)"},2856:{sn:"Br\u00fcnen",ln:"Br\u00fcnen"},2857:{sn:"Mehr",ln:"Mehr"},2858:{sn:"H\u00fcnxe",ln:"H\u00fcnxe"},2859:{sn:"Bislich",ln:"Bislich"},2861:{sn:"Borken",ln:"Borken"},2862:{sn:"S\u00fcdlohn",ln:"S\u00fcdlohn"},2863:{sn:"Velen",ln:"Velen"},2864:{sn:"Reken",ln:"Reken"},2865:{sn:"Raesfeld",ln:"Raesfeld"},2866:{sn:"Dorsten",ln:"Dorsten"},2867:{sn:"Heiden",ln:"Heiden (BOR)"},2871:{sn:"Bocholt",ln:"Bocholt"},
2872:{sn:"Rhede",ln:"Rhede (Westf)"},2873:{sn:"Werth",ln:"Werth"},2874:{sn:"Isselburg",ln:"Isselburg/Bocholt \u2013 Suderwick"},2902:{sn:"Warstein",ln:"Warstein"},2903:{sn:"Freienohl",ln:"Freienohl"},2904:{sn:"Bestwig",ln:"Bestwig"},2905:{sn:"Ramsbeck",ln:"Ramsbeck"},2921:{sn:"Soest",ln:"Soest"},2922:{sn:"Werl",ln:"Werl"},2923:{sn:"Herzfeld",ln:"Herzfeld (Lippetal)"},2924:{sn:"M\u00f6hnesee",ln:"M\u00f6hnesee"},2925:{sn:"Allagen",ln:"Allagen"},2927:{sn:"Bad Sassendorf",ln:"Bad Sassendorf/Lippborg"},
2928:{sn:"Ost\u00f6nnen",ln:"Ost\u00f6nnen"},2931:{sn:"Arnsberg",ln:"Arnsberg"},2932:{sn:"Neheim-H\u00fcsten",ln:"Neheim-H\u00fcsten"},2933:{sn:"Sundern",ln:"Sundern"},2934:{sn:"Althellefeld",ln:"Althellefeld"},2935:{sn:"Hachen",ln:"Hachen"},2937:{sn:"Oeventrop",ln:"Oeventrop"},2938:{sn:"Ense",ln:"Ense"},2941:{sn:"Lippstadt",ln:"Lippstadt"},2942:{sn:"Geseke",ln:"Geseke"},2943:{sn:"Erwitte",ln:"Erwitte"},2944:{sn:"Rietberg-Mastholte",ln:"Rietberg-Mastholte"},2945:{sn:"Benninghausen",ln:"Benninghausen"},
2947:{sn:"Anr\u00f6chte",ln:"Anr\u00f6chte"},2948:{sn:"Rebbeke",ln:"Rebbeke"},2951:{sn:"B\u00fcren",ln:"B\u00fcren"},2952:{sn:"R\u00fcthen",ln:"R\u00fcthen"},2953:{sn:"W\u00fcnnenberg",ln:"W\u00fcnnenberg"},2954:{sn:"Oestereiden",ln:"Oestereiden"},2955:{sn:"Wewelsburg",ln:"Wewelsburg"},2957:{sn:"Haaren",ln:"Haaren"},2958:{sn:"Harth",ln:"Harth"},2961:{sn:"Brilon",ln:"Brilon"},2962:{sn:"Olsberg",ln:"Olsberg"},2963:{sn:"Messinghausen",ln:"Messinghausen"},2964:{sn:"Alme",ln:"Alme (Brilon)"},2970:{sn:"Cobbenrode",
ln:"Cobbenrode"},2971:{sn:"Dorlar",ln:"Dorlar"},2972:{sn:"Schmallenberg",ln:"Schmallenberg"},2973:{sn:"Eslohe",ln:"Eslohe (Sauerland)"},2974:{sn:"Bad Fredeburg",ln:"Bad Fredeburg"},2975:{sn:"Oberkirchen",ln:"Oberkirchen"},2977:{sn:"B\u00f6defeld",ln:"B\u00f6defeld"},2978:{sn:"Reiste",ln:"Reiste"},2979:{sn:"Kirchrarbach",ln:"Kirchrarbach"},2981:{sn:"Winterberg",ln:"Winterberg (Sauerld.)"},2982:{sn:"Medebach",ln:"Medebach"},2983:{sn:"Siedlinghausen",ln:"Siedlinghausen"},2984:{sn:"Hallenberg",ln:"Hallenberg"},
2985:{sn:"Niedersfeld",ln:"Niedersfeld"},2991:{sn:"Bredelar",ln:"Bredelar"},2992:{sn:"Marsberg",ln:"Marsberg"},2993:{sn:"Canstein",ln:"Canstein"},2994:{sn:"Westheim",ln:"Westheim"},3301:{sn:"Oranienburg",ln:"Oranienburg"},3302:{sn:"Hennigsdorf",ln:"Hennigsdorf"},3303:{sn:"Birkenwerder",ln:"Birkenwerder"},3304:{sn:"Velten",ln:"Velten"},3306:{sn:"Gransee",ln:"Gransee"},3307:{sn:"Zehdenick",ln:"Zehdenick"},3321:{sn:"Nauen",ln:"Nauen"},3322:{sn:"Falkensee",ln:"Falkensee"},3327:{sn:"Werder",ln:"Werder (Havel)"},
3328:{sn:"Teltow",ln:"Teltow"},3329:{sn:"Stahnsdorf",ln:"Stahnsdorf"},3331:{sn:"Angerm\u00fcnde",ln:"Angerm\u00fcnde"},3332:{sn:"Schwedt",ln:"Schwedt"},3334:{sn:"Eberswalde",ln:"Eberswalde"},3335:{sn:"Finowfurt",ln:"Finowfurt"},3337:{sn:"Biesenthal",ln:"Biesenthal"},3338:{sn:"Bernau",ln:"Bernau"},3341:{sn:"Strausberg",ln:"Strausberg"},3342:{sn:"Neuenhagen",ln:"Neuenhagen"},3344:{sn:"Bad Freienwalde",ln:"Bad Freienwalde"},3346:{sn:"Seelow",ln:"Seelow"},3361:{sn:"F\u00fcrstenwalde",ln:"F\u00fcrstenwalde/Spree"},
3362:{sn:"Erkner",ln:"Erkner"},3364:{sn:"Eisenh\u00fcttenstadt",ln:"Eisenh\u00fcttenstadt"},3366:{sn:"Beeskow",ln:"Beeskow"},3371:{sn:"Luckenwalde",ln:"Luckenwalde"},3372:{sn:"J\u00fcterbog",ln:"J\u00fcterbog"},3375:{sn:"K\u00f6nigs",ln:"K\u00f6nigs Wusterhausen"},3377:{sn:"Zossen",ln:"Zossen"},3378:{sn:"Ludwigsfelde",ln:"Ludwigsfelde"},3379:{sn:"Mahlow",ln:"Mahlow"},3381:{sn:"Brandenburg",ln:"Brandenburg an der Havel"},3382:{sn:"Lehnin",ln:"Lehnin"},3385:{sn:"Rathenow",ln:"Rathenow"},3386:{sn:"Premnitz",
ln:"Premnitz"},3391:{sn:"Neuruppin",ln:"Neuruppin"},3394:{sn:"Wittstock",ln:"Wittstock/Dosse"},3395:{sn:"Pritzwalk",ln:"Pritzwalk"},3421:{sn:"Torgau",ln:"Torgau"},3423:{sn:"Eilenburg",ln:"Eilenburg"},3425:{sn:"Wurzen",ln:"Wurzen"},3431:{sn:"D\u00f6beln",ln:"D\u00f6beln"},3433:{sn:"Borna",ln:"Borna"},3435:{sn:"Oschatz",ln:"Oschatz"},3437:{sn:"Grimma",ln:"Grimma"},3441:{sn:"Zeitz",ln:"Zeitz"},3443:{sn:"Wei\u00dfenfels",ln:"Wei\u00dfenfels"},3445:{sn:"Naumburg",ln:"Naumburg"},3447:{sn:"Altenburg",ln:"Altenburg"},
3448:{sn:"Meuselwitz",ln:"Meuselwitz"},3461:{sn:"Merseburg",ln:"Merseburg"},3462:{sn:"Bad D\u00fcrrenberg",ln:"Bad D\u00fcrrenberg"},3464:{sn:"Sangerhausen",ln:"Sangerhausen"},3466:{sn:"Artern",ln:"Artern"},3471:{sn:"Bernburg",ln:"Bernburg"},3473:{sn:"Aschersleben",ln:"Aschersleben"},3475:{sn:"Lutherstadt",ln:"Lutherstadt Eisleben"},3476:{sn:"Hettstedt",ln:"Hettstedt"},3491:{sn:"Lutherstadt",ln:"Lutherstadt Wittenberg"},3493:{sn:"Bitterfeld",ln:"Bitterfeld"},3494:{sn:"Wolfen",ln:"Wolfen"},3496:{sn:"K\u00f6then",
ln:"K\u00f6then (Anhalt)"},3501:{sn:"Pirna",ln:"Pirna"},3504:{sn:"Dippoldiswalde",ln:"Dippoldiswalde"},3521:{sn:"Mei\u00dfen",ln:"Mei\u00dfen"},3522:{sn:"Gro\u00dfenhain",ln:"Gro\u00dfenhain"},3523:{sn:"Coswig",ln:"Coswig"},3525:{sn:"Riesa",ln:"Riesa"},3528:{sn:"Radeberg",ln:"Radeberg"},3529:{sn:"Heidenau",ln:"Heidenau"},3531:{sn:"Finsterwalde",ln:"Finsterwalde"},3533:{sn:"Elsterwerda",ln:"Elsterwerda"},3535:{sn:"Herzberg",ln:"Herzberg (Elster)"},3537:{sn:"Jessen",ln:"Jessen (Elster)"},3541:{sn:"Calau",
ln:"Calau"},3542:{sn:"L\u00fcbbenau",ln:"L\u00fcbbenau"},3544:{sn:"Luckau",ln:"Luckau"},3546:{sn:"L\u00fcbben",ln:"L\u00fcbben (Spreewald)"},3561:{sn:"Guben",ln:"Guben"},3562:{sn:"Forst",ln:"Forst (Lausitz)"},3563:{sn:"Spremberg",ln:"Spremberg"},3564:{sn:"Schwarze",ln:"Schwarze Pumpe"},3571:{sn:"Hoyerswerda",ln:"Hoyerswerda"},3573:{sn:"Senftenberg",ln:"Senftenberg"},3574:{sn:"Lauchhammer",ln:"Lauchhammer"},3576:{sn:"Wei\u00dfwasser",ln:"Wei\u00dfwasser"},3578:{sn:"Kamenz",ln:"Kamenz"},3581:{sn:"G\u00f6rlitz",
ln:"G\u00f6rlitz"},3583:{sn:"Zittau",ln:"Zittau"},3585:{sn:"L\u00f6bau",ln:"L\u00f6bau"},3586:{sn:"Ebersbach",ln:"Ebersbach/Sa., Neugersdorf (Sachsen)"},3588:{sn:"Niesky",ln:"Niesky"},3591:{sn:"Bautzen",ln:"Bautzen"},3592:{sn:"Kirschau",ln:"Kirschau"},3594:{sn:"Bischofswerda",ln:"Bischofswerda"},3596:{sn:"Neustadt",ln:"Neustadt(Sachsen)"},3601:{sn:"M\u00fchlhausen",ln:"M\u00fchlhausen/Th\u00fcr."},3603:{sn:"Bad Langensalza",ln:"Bad Langensalza"},3605:{sn:"Leinefelde",ln:"Leinefelde"},3606:{sn:"Heilbad",
ln:"Heilbad Heiligenstadt"},3621:{sn:"Gotha",ln:"Gotha"},3622:{sn:"Waltershausen",ln:"Waltershausen"},3623:{sn:"Friedrichroda",ln:"Friedrichroda"},3624:{sn:"Ohrdruf",ln:"Ohrdruf"},3628:{sn:"Arnstadt",ln:"Arnstadt"},3629:{sn:"Stadtilm",ln:"Stadtilm"},3631:{sn:"Nordhausen",ln:"Nordhausen"},3632:{sn:"Sondershausen",ln:"Sondershausen"},3634:{sn:"S\u00f6mmerda",ln:"S\u00f6mmerda"},3635:{sn:"K\u00f6lleda",ln:"K\u00f6lleda"},3636:{sn:"Greu\u00dfen",ln:"Greu\u00dfen"},3641:{sn:"Jena",ln:"Jena"},3643:{sn:"Weimar",
ln:"Weimar"},3644:{sn:"Apolda",ln:"Apolda"},3647:{sn:"P\u00f6\u00dfneck",ln:"P\u00f6\u00dfneck"},3661:{sn:"Greiz",ln:"Greiz"},3663:{sn:"Schleiz",ln:"Schleiz"},3671:{sn:"Saalfeld",ln:"Saalfeld/Saale"},3672:{sn:"Rudolstadt",ln:"Rudolstadt"},3675:{sn:"Sonneberg",ln:"Sonneberg"},3677:{sn:"Ilmenau",ln:"Ilmenau"},3679:{sn:"Neuhaus",ln:"Neuhaus am Rennweg"},3681:{sn:"Suhl",ln:"Suhl"},3682:{sn:"Zella-Mehlis",ln:"Zella-Mehlis"},3683:{sn:"Schmalkalden",ln:"Schmalkalden"},3685:{sn:"Hildburghausen",ln:"Hildburghausen"},
3686:{sn:"Eisfeld",ln:"Eisfeld"},3691:{sn:"Eisenach",ln:"Eisenach"},3693:{sn:"Meiningen",ln:"Meiningen"},3695:{sn:"Bad Salzungen",ln:"Bad Salzungen"},3721:{sn:"Meinersdorf",ln:"Meinersdorf"},3722:{sn:"Limbach-Oberfrohna",ln:"Limbach-Oberfrohna"},3723:{sn:"Hohenstein-Ernstthal",ln:"Hohenstein-Ernstthal"},3724:{sn:"Burgst\u00e4dt",ln:"Burgst\u00e4dt"},3725:{sn:"Zschopau",ln:"Zschopau"},3726:{sn:"Fl\u00f6ha",ln:"Fl\u00f6ha"},3727:{sn:"Mittweida",ln:"Mittweida"},3731:{sn:"Freiberg",ln:"Freiberg (Sachsen)"},
3733:{sn:"Annaberg-Buchholz",ln:"Annaberg-Buchholz"},3735:{sn:"Marienberg",ln:"Marienberg"},3737:{sn:"Rochlitz",ln:"Rochlitz"},3741:{sn:"Plauen",ln:"Plauen"},3744:{sn:"Auerbach",ln:"Auerbach/Vogtl."},3745:{sn:"Falkenstein",ln:"Falkenstein"},3761:{sn:"Werdau",ln:"Werdau (Sachsen)"},3762:{sn:"Crimmitschau",ln:"Crimmitschau"},3763:{sn:"Glauchau",ln:"Glauchau"},3764:{sn:"Meerane",ln:"Meerane"},3765:{sn:"Reichenbach",ln:"Reichenbach im Vogtland"},3771:{sn:"Aue",ln:"Aue (Sachsen)"},3772:{sn:"Schneeberg",
ln:"Schneeberg (Erzgebirge)"},3773:{sn:"Johanngeorgenstadt",ln:"Johanngeorgenstadt"},3774:{sn:"Schwarzenberg",ln:"Schwarzenberg/Erzgeb."},3821:{sn:"Ribnitz-Damgarten",ln:"Ribnitz-Damgarten, Ahrenshagen-Daskow"},3831:{sn:"Stralsund",ln:"Stralsund, Kramerhof-Gro\u00df Kedingshagen, -Klein Kedingshagen, -Parow, -Vogelsang, L\u00fcssow, Wendorf-Gro\u00df L\u00fcdershagen, -Neu L\u00fcdershagen, -Teschenhagen, -Zitterpenningshagen"},3834:{sn:"Greifswald",ln:"Greifswald"},3836:{sn:"Wolgast",ln:"Wolgast"},
3838:{sn:"Bergen",ln:"Bergen auf R\u00fcgen, Buschvitz, Parchtitz, Patzig, Ralswiek, Rappin, Sehlen"},3841:{sn:"Wismar",ln:"Wismar"},3843:{sn:"G\u00fcstrow",ln:"G\u00fcstrow"},3844:{sn:"Schwaan",ln:"Schwaan"},3847:{sn:"Sternberg",ln:"Sternberg"},3860:{sn:"Raben",ln:"Raben Steinfeld"},3861:{sn:"Plate",ln:"Plate"},3863:{sn:"Crivitz",ln:"Crivitz"},3865:{sn:"Holthusen",ln:"Holthusen"},3866:{sn:"Cambs",ln:"Cambs"},3867:{sn:"L\u00fcbstorf",ln:"L\u00fcbstorf"},3868:{sn:"Rastow",ln:"Rastow"},3869:{sn:"D\u00fcmmer",
ln:"D\u00fcmmer"},3871:{sn:"Parchim",ln:"Parchim"},3874:{sn:"Ludwigslust",ln:"Ludwigslust"},3876:{sn:"Perleberg",ln:"Perleberg"},3877:{sn:"Wittenberge",ln:"Wittenberge"},3881:{sn:"Grevesm\u00fchlen",ln:"Grevesm\u00fchlen"},3883:{sn:"Hagenow",ln:"Hagenow"},3886:{sn:"Gadebusch",ln:"Gadebusch"},3901:{sn:"Salzwedel",ln:"Salzwedel"},3921:{sn:"Burg bei Magdeburg",ln:"Burg bei Magdeburg"},3923:{sn:"Zerbst",ln:"Zerbst/Anhalt"},3925:{sn:"Sta\u00dffurt",ln:"Sta\u00dffurt"},3928:{sn:"Sch\u00f6nebeck",ln:"Sch\u00f6nebeck (Elbe)"},
3931:{sn:"Stendal",ln:"Stendal"},3933:{sn:"Genthin",ln:"Genthin"},3935:{sn:"Tangerh\u00fctte",ln:"Tangerh\u00fctte"},3937:{sn:"Osterburg",ln:"Osterburg"},3941:{sn:"Halberstadt",ln:"Halberstadt"},3943:{sn:"Wernigerode",ln:"Wernigerode"},3944:{sn:"Blankenburg",ln:"Blankenburg (Harz)"},3946:{sn:"Quedlinburg",ln:"Quedlinburg"},3947:{sn:"Thale",ln:"Thale"},3949:{sn:"Oschersleben",ln:"Oschersleben (Bode)"},3961:{sn:"Altentreptow",ln:"Altentreptow"},3962:{sn:"Penzlin",ln:"Penzlin"},3963:{sn:"Woldegk",ln:"Woldegk"},
3964:{sn:"Bredenfelde",ln:"Bredenfelde"},3965:{sn:"Burow",ln:"Burow"},3966:{sn:"C\u00f6lpin",ln:"C\u00f6lpin"},3967:{sn:"Oertzenhof",ln:"Oertzenhof (Mecklenburg-Strelitz)"},3968:{sn:"Sch\u00f6nbeck",ln:"Sch\u00f6nbeck"},3969:{sn:"Siedenbollentin",ln:"Siedenbollentin"},3971:{sn:"Anklam",ln:"Anklam"},3973:{sn:"Pasewalk",ln:"Pasewalk"},3976:{sn:"Torgelow",ln:"Torgelow"},3981:{sn:"Neustrelitz",ln:"Neustrelitz"},3984:{sn:"Prenzlau",ln:"Prenzlau"},3991:{sn:"Waren",ln:"Waren (M\u00fcritz)"},3994:{sn:"Malchin",
ln:"Malchin"},3996:{sn:"Teterow",ln:"Teterow"},3998:{sn:"Demmin",ln:"Demmin"},4101:{sn:"Pinneberg",ln:"Pinneberg"},4102:{sn:"Ahrensburg",ln:"Ahrensburg"},4103:{sn:"Wedel",ln:"Wedel"},4104:{sn:"Aum\u00fchle",ln:"Aum\u00fchle"},4105:{sn:"Seevetal",ln:"Seevetal"},4106:{sn:"Quickborn",ln:"Quickborn"},4107:{sn:"Siek",ln:"Siek"},4108:{sn:"Rosengarten",ln:"Rosengarten"},4109:{sn:"Tangstedt",ln:"Tangstedt"},4120:{sn:"Ellerhoop",ln:"Ellerhoop"},4121:{sn:"Elmshorn",ln:"Elmshorn"},4122:{sn:"Tornesch",ln:"Tornesch, Uetersen, Moorrege, Heist, Heidgraben, Gro\u00df Nordende"},
4123:{sn:"Barmstedt",ln:"Barmstedt"},4124:{sn:"Gl\u00fcckstadt",ln:"Gl\u00fcckstadt"},4125:{sn:"Seesterm\u00fche",ln:"Seesterm\u00fche"},4126:{sn:"Horst",ln:"Horst"},4127:{sn:"Brande-H\u00f6rnerkirchen",ln:"Brande-H\u00f6rnerkirchen, Westerhorn"},4128:{sn:"Kollmar",ln:"Kollmar"},4129:{sn:"Haseldorf",ln:"Haseldorf"},4131:{sn:"L\u00fcneburg",ln:"L\u00fcneburg"},4132:{sn:"Amelinghausen",ln:"Amelinghausen"},4133:{sn:"Handorf",ln:"Handorf, Wittorf"},4134:{sn:"Embsen",ln:"Embsen"},4135:{sn:"Kirchgellersen",
ln:"Kirchgellersen"},4136:{sn:"Scharnebeck",ln:"Scharnebeck"},4137:{sn:"Barendorf",ln:"Barendorf"},4138:{sn:"Betzendorf",ln:"Betzendorf"},4139:{sn:"Hohnstorf",ln:"Hohnstorf"},4140:{sn:"Estorf",ln:"Estorf"},4141:{sn:"Stade",ln:"Stade"},4142:{sn:"Steinkirchen",ln:"Steinkirchen"},4143:{sn:"Drochtersen",ln:"Drochtersen"},4144:{sn:"Himmelpforten",ln:"Himmelpforten"},4146:{sn:"Stade-B\u00fctzfleth",ln:"Stade-B\u00fctzfleth"},4148:{sn:"Drochtersen-Assel",ln:"Drochtersen-Assel"},4149:{sn:"Fredenbeck",ln:"Fredenbeck"},
4151:{sn:"Schwarzenbek",ln:"Schwarzenbek"},4152:{sn:"Geesthacht",ln:"Geesthacht"},4153:{sn:"Lauenburg",ln:"Lauenburg"},4154:{sn:"Trittau",ln:"Trittau"},4155:{sn:"B\u00fcchen",ln:"B\u00fcchen"},4156:{sn:"Talkau",ln:"Talkau"},4158:{sn:"Roseburg",ln:"Roseburg"},4159:{sn:"Basthorst",ln:"Basthorst"},4161:{sn:"Buxtehude",ln:"Buxtehude"},4162:{sn:"Jork",ln:"Jork"},4163:{sn:"Horneburg",ln:"Horneburg"},4164:{sn:"Harsefeld",ln:"Harsefeld"},4165:{sn:"Hollenstedt",ln:"Hollenstedt"},4166:{sn:"Ahlerstedt",ln:"Ahlerstedt"},
4167:{sn:"Apensen",ln:"Apensen"},4168:{sn:"Neu",ln:"Neu Wulmstorf-Elstorf"},4169:{sn:"Sauensiek",ln:"Sauensiek"},4171:{sn:"Winsen",ln:"Winsen (Luhe)"},4172:{sn:"Salzhausen",ln:"Salzhausen"},4173:{sn:"Wulfsen",ln:"Wulfsen"},4174:{sn:"Stelle",ln:"Stelle (Landkreis Harburg)"},4175:{sn:"Egestorf",ln:"Egestorf"},4176:{sn:"Marschacht",ln:"Marschacht"},4177:{sn:"Drage",ln:"Drage"},4178:{sn:"Radbruch",ln:"Radbruch"},4179:{sn:"Winsen-T\u00f6nnhausen",ln:"Winsen-T\u00f6nnhausen"},4180:{sn:"K\u00f6nigsmoor",
ln:"K\u00f6nigsmoor"},4181:{sn:"Buchholz",ln:"Buchholz in der Nordheide"},4182:{sn:"Tostedt",ln:"Tostedt"},4183:{sn:"Jesteburg",ln:"Jesteburg"},4184:{sn:"Hanstedt",ln:"Hanstedt"},4185:{sn:"Marxen",ln:"Marxen"},4186:{sn:"Buchholz-Trelde",ln:"Buchholz-Trelde, Buchholz-Spr\u00f6tze"},4187:{sn:"Holm-Seppensen",ln:"Holm-Seppensen"},4188:{sn:"Welle",ln:"Welle"},4189:{sn:"Undeloh",ln:"Undeloh"},4191:{sn:"Kaltenkirchen",ln:"Kaltenkirchen"},4192:{sn:"Bad Bramstedt",ln:"Bad Bramstedt"},4193:{sn:"Henstedt-Ulzburg",
ln:"Henstedt-Ulzburg"},4194:{sn:"Sieversh\u00fctten",ln:"Sieversh\u00fctten"},4195:{sn:"Hartenholm",ln:"Hartenholm"},4202:{sn:"Achim",ln:"Achim"},4203:{sn:"Weyhe",ln:"Weyhe"},4204:{sn:"Thedinghausen",ln:"Thedinghausen"},4205:{sn:"Ottersberg",ln:"Ottersberg"},4206:{sn:"Stuhr-Heiligenrode",ln:"Stuhr-Heiligenrode"},4207:{sn:"Oyten",ln:"Oyten"},4208:{sn:"Grasberg",ln:"Grasberg"},4209:{sn:"Schwanewede",ln:"Schwanewede"},4221:{sn:"Delmenhorst",ln:"Delmenhorst"},4222:{sn:"Ganderkesee",ln:"Ganderkesee"},
4223:{sn:"Ganderkesee-Bookholzberg",ln:"Ganderkesee-Bookholzberg"},4224:{sn:"Gro\u00df Ippener",ln:"Gro\u00df Ippener"},4230:{sn:"Verden",ln:"Verden (Aller)-Walle"},4231:{sn:"Verden",ln:"Verden (Aller)"},4232:{sn:"Langwedel",ln:"Langwedel (Kreis Verden (Aller))"},4233:{sn:"Blender",ln:"Blender"},4234:{sn:"D\u00f6rverden",ln:"D\u00f6rverden"},4235:{sn:"Langwedel",ln:"Langwedel (Kreis Verden (Aller))"},4236:{sn:"Kirchlinteln",ln:"Kirchlinteln"},4237:{sn:"Kirchlinteln-Bendingbostel",ln:"Kirchlinteln-Bendingbostel"},
4238:{sn:"Kirchlinteln-Neddenaverbergen",ln:"Kirchlinteln-Neddenaverbergen"},4239:{sn:"D\u00f6rverden-Westen",ln:"D\u00f6rverden-Westen"},4241:{sn:"Bassum",ln:"Bassum"},4242:{sn:"Syke",ln:"Syke"},4243:{sn:"Twistringen",ln:"Twistringen"},4244:{sn:"Harpstedt",ln:"Harpstedt"},4245:{sn:"Scholen",ln:"Scholen"},4246:{sn:"Drentwede",ln:"Drentwede"},4247:{sn:"Sudwalde",ln:"Sudwalde/Affinghausen"},4249:{sn:"Nordwohlde",ln:"Nordwohlde"},4251:{sn:"Hoya",ln:"Hoya"},4252:{sn:"Bruchhausen-Vilsen",ln:"Bruchhausen-Vilsen"},
4253:{sn:"Asendorf",ln:"Asendorf (Samtgemeinde Bruchhausen-Vilsen)"},4254:{sn:"Eystrup",ln:"Eystrup"},4255:{sn:"Martfeld",ln:"Martfeld (Samtgemeinde Bruchhausen-Vilsen)"},4256:{sn:"Hilgermissen",ln:"Hilgermissen"},4257:{sn:"Schweringen",ln:"Schweringen"},4258:{sn:"Schwarme",ln:"Schwarme (Samtgemeinde Bruchhausen-Vilsen)"},4260:{sn:"Visselh\u00f6vede-Wittorf",ln:"Visselh\u00f6vede-Wittorf"},4261:{sn:"Rotenburg",ln:"Rotenburg (W\u00fcmme)"},4262:{sn:"Visselh\u00f6vede",ln:"Visselh\u00f6vede"},4263:{sn:"Schee\u00dfel",
ln:"Schee\u00dfel"},4264:{sn:"Sottrum",ln:"Sottrum (Kreis Rotenburg (W\u00fcmme)"},4265:{sn:"Fintel",ln:"Fintel"},4266:{sn:"Brockel",ln:"Brockel (Samtgemeinde Bothel)"},4267:{sn:"Lauenbr\u00fcck",ln:"Lauenbr\u00fcck (Samtgemeinde Fintel)"},4268:{sn:"B\u00f6tersen",ln:"B\u00f6tersen (Samtgemeinde Sottrum)"},4269:{sn:"Ahausen-Kirchwalsede",ln:"Ahausen-Kirchwalsede (Samtgemeinden Bothel, Sottrum)"},4271:{sn:"Sulingen",ln:"Sulingen"},4272:{sn:"Siedenburg",ln:"Siedenburg"},4273:{sn:"Kirchdorf",ln:"Kirchdorf"},
4274:{sn:"Varrel",ln:"Varrel (Samtgemeinde Kirchdorf)"},4275:{sn:"Ehrenburg",ln:"Ehrenburg (Samtgemeinde Schwaf\u00f6rden)"},4276:{sn:"Borstel",ln:"Borstel (Samtgemeinde Siedenburg)"},4277:{sn:"Schwaf\u00f6rden",ln:"Schwaf\u00f6rden"},4281:{sn:"Zeven",ln:"Zeven"},4282:{sn:"Sittensen",ln:"Sittensen"},4283:{sn:"Tarmstedt",ln:"Tarmstedt"},4284:{sn:"Selsingen",ln:"Selsingen"},4285:{sn:"Rhade",ln:"Rhade (Samtgemeinde Selsingen)"},4286:{sn:"Gyhum",ln:"Gyhum (Samtgemeinde Zeven)"},4287:{sn:"Heeslingen-Boitzen",
ln:"Heeslingen-Boitzen (Samtgemeinde Zeven)"},4288:{sn:"Horstedt",ln:"Horstedt (Samtgemeinde Sottrum)"},4289:{sn:"Kirchtimke",ln:"Kirchtimke (Samtgemeinde Tarmstedt)"},4292:{sn:"Ritterhude",ln:"Ritterhude"},4293:{sn:"Ottersberg-Fischerhude",ln:"Ottersberg-Fischerhude"},4294:{sn:"Riede",ln:"Riede (Samtgemeinde Thedinghausen)"},4295:{sn:"Emtinghausen",ln:"Emtinghausen (Samtgemeinde Thedinghausen)"},4296:{sn:"Schwanewede-Aschwarden",ln:"Schwanewede-Aschwarden"},4297:{sn:"Ottersberg-Posthausen",ln:"Ottersberg-Posthausen"},
4298:{sn:"Lilienthal",ln:"Lilienthal"},4302:{sn:"Kirchbarkau",ln:"Kirchbarkau"},4303:{sn:"Schlesen",ln:"Schlesen"},4305:{sn:"Westensee",ln:"Westensee"},4307:{sn:"Raisdorf",ln:"Raisdorf"},4308:{sn:"Schwedeneck",ln:"Schwedeneck"},4320:{sn:"Heidm\u00fchlen",ln:"Heidm\u00fchlen"},4321:{sn:"Neum\u00fcnster",ln:"Neum\u00fcnster"},4322:{sn:"Bordesholm",ln:"Bordesholm"},4323:{sn:"Bornh\u00f6ved",ln:"Bornh\u00f6ved"},4324:{sn:"Brokstedt",ln:"Brokstedt"},4326:{sn:"Wankendorf",ln:"Wankendorf"},4327:{sn:"Gro\u00dfenaspe",
ln:"Gro\u00dfenaspe"},4328:{sn:"Rickling",ln:"Rickling"},4329:{sn:"Langwedel",ln:"Langwedel"},4330:{sn:"Emkendorf",ln:"Emkendorf"},4331:{sn:"Rendsburg",ln:"Rendsburg"},4332:{sn:"Hamdorf",ln:"Hamdorf"},4333:{sn:"Erfde",ln:"Erfde"},4334:{sn:"Bredenbek",ln:"Bredenbek"},4335:{sn:"Hohn",ln:"Hohn"},4336:{sn:"Owschlag",ln:"Owschlag"},4337:{sn:"Jevenstedt",ln:"Jevenstedt"},4338:{sn:"Alt",ln:"Alt Duvenstedt"},4339:{sn:"Christiansholm",ln:"Christiansholm"},4340:{sn:"Achterwehr",ln:"Achterwehr"},4342:{sn:"K\u00fchren",
ln:"K\u00fchren, Lehmkuhlen, Preetz"},4343:{sn:"Laboe",ln:"Laboe"},4344:{sn:"Sch\u00f6nberg",ln:"Sch\u00f6nberg"},4346:{sn:"Gettorf",ln:"Gettorf"},4347:{sn:"Flintbek",ln:"Flintbek"},4348:{sn:"Sch\u00f6nkirchen",ln:"Sch\u00f6nkirchen"},4349:{sn:"D\u00e4nischenhagen",ln:"D\u00e4nischenhagen"},4351:{sn:"Eckernf\u00f6rde",ln:"Eckernf\u00f6rde"},4352:{sn:"Damp",ln:"Damp"},4353:{sn:"Ascheffel",ln:"Ascheffel"},4354:{sn:"Fleckeby",ln:"Fleckeby"},4355:{sn:"Rieseby",ln:"Rieseby"},4356:{sn:"Gro\u00df Wittensee",
ln:"Gro\u00df Wittensee"},4357:{sn:"Sehestedt",ln:"Sehestedt"},4358:{sn:"Loose",ln:"Loose"},4361:{sn:"Oldenburg",ln:"Oldenburg"},4362:{sn:"Heiligenhafen",ln:"Heiligenhafen"},4363:{sn:"Lensahn",ln:"Lensahn"},4364:{sn:"Dahme",ln:"Dahme"},4365:{sn:"Heringsdorf",ln:"Heringsdorf"},4366:{sn:"Gr\u00f6mitz-Cismar",ln:"Gr\u00f6mitz-Cismar"},4367:{sn:"Gro\u00dfenbrode",ln:"Gro\u00dfenbrode"},4371:{sn:"Burg auf Fehmarn",ln:"Burg auf Fehmarn"},4372:{sn:"Fehmarn",ln:"Fehmarn"},4381:{sn:"L\u00fctjenburg",ln:"L\u00fctjenburg"},
4382:{sn:"Wangels",ln:"Wangels"},4383:{sn:"Grebin",ln:"Grebin"},4384:{sn:"Selent",ln:"Selent"},4385:{sn:"Hohenfelde",ln:"Hohenfelde"},4392:{sn:"Nortorf",ln:"Nortorf"},4393:{sn:"Boostedt",ln:"Boostedt"},4394:{sn:"Bokhorst",ln:"Bokhorst"},4401:{sn:"Brake",ln:"Brake/Unterweser"},4402:{sn:"Rastede",ln:"Rastede/Wiefelstede"},4404:{sn:"Elsfleth",ln:"Elsfleth"},4405:{sn:"Edewecht",ln:"Edewecht"},4406:{sn:"Berne",ln:"Berne"},4407:{sn:"Wardenburg",ln:"Wardenburg"},4408:{sn:"Hude",ln:"Hude"},4421:{sn:"Wilhelmshaven",
ln:"Wilhelmshaven"},4422:{sn:"Sande",ln:"Sande (Friesland) Kr.Friesl"},4423:{sn:"Fedderwarden",ln:"Fedderwarden (Wilhelmshaven)"},4425:{sn:"Wangerland-Hooksiel",ln:"Wangerland-Hooksiel"},4426:{sn:"Wangerland-Horumersiel",ln:"Wangerland-Horumersiel"},4431:{sn:"Wildeshausen",ln:"Wildeshausen"},4432:{sn:"Doetlingen-Brettorf",ln:"Doetlingen-Brettorf"},4433:{sn:"Doetlingen",ln:"Doetlingen"},4434:{sn:"Colnrade",ln:"Colnrade"},4435:{sn:"Gro\u00dfenkneten",ln:"Gro\u00dfenkneten"},4441:{sn:"Vechta",ln:"Vechta"},
4442:{sn:"Lohne",ln:"Lohne Oldb."},4443:{sn:"Dinklage",ln:"Dinklage"},4444:{sn:"Goldenstedt",ln:"Goldenstedt"},4445:{sn:"Visbek",ln:"Visbek Kr.Vechta"},4446:{sn:"Bakum",ln:"Bakum Kr.Vechta"},4447:{sn:"Vechta-Langf\u00f6rden",ln:"Vechta-Langf\u00f6rden"},4451:{sn:"Varel",ln:"Varel Jadebusen"},4452:{sn:"Zetel-Neuenburg",ln:"Zetel-Neuenburg"},4453:{sn:"Zetel",ln:"Zetel"},4454:{sn:"Jade",ln:"Jade"},4455:{sn:"Jade-Schweiburg",ln:"Jade-Schweiburg"},4456:{sn:"Varel-Altj\u00fchrden",ln:"Varel-Altj\u00fchrden"},
4458:{sn:"Wiefelstede-Spohle",ln:"Wiefelstede-Spohle"},4461:{sn:"Jever",ln:"Jever"},4462:{sn:"Wittmund",ln:"Wittmund"},4463:{sn:"Wangerland",ln:"Wangerland"},4464:{sn:"Wittmund-Carolinensiel",ln:"Wittmund-Carolinensiel"},4465:{sn:"Friedeburg",ln:"Friedeburg Ostfriesland"},4466:{sn:"Wittmund-Ardorf",ln:"Wittmund-Ardorf"},4467:{sn:"Wittmund-Funnix",ln:"Wittmund-Funnix"},4468:{sn:"Friedeburg-Reepsholt",ln:"Friedeburg-Reepsholt"},4469:{sn:"Wangerooge",ln:"Wangerooge"},4471:{sn:"Cloppenburg",ln:"Cloppenburg"},
4472:{sn:"Lastrup",ln:"Lastrup"},4473:{sn:"Emstek",ln:"Emstek"},4474:{sn:"Garrel",ln:"Garrel"},4475:{sn:"Molbergen",ln:"Molbergen"},4477:{sn:"Lastrup-Hemmelte",ln:"Lastrup-Hemmelte"},4478:{sn:"Cappeln",ln:"Cappeln Oldb."},4479:{sn:"Molbergen-Peheim",ln:"Molbergen-Peheim"},4480:{sn:"Ovelgoenne-Str\u00fcckhausen",ln:"Ovelgoenne-Str\u00fcckhausen"},4481:{sn:"Hatten-Sandkrug",ln:"Hatten-Sandkrug"},4482:{sn:"Hatten",ln:"Hatten"},4483:{sn:"Ovelgoenne-Grossenmeer",ln:"Ovelgoenne-Grossenmeer"},4484:{sn:"Hude-W\u00fcsting",
ln:"Hude-W\u00fcsting"},4485:{sn:"Elsfleth-Huntorf",ln:"Elsfleth-Huntorf"},4486:{sn:"Edewecht-Friedrichsfehn",ln:"Edewecht-Friedrichsfehn"},4487:{sn:"Grossenkneten-Huntlosen",ln:"Grossenkneten-Huntlosen"},4488:{sn:"Westerstede",ln:"Westerstede"},4489:{sn:"Apen",ln:"Apen"},4491:{sn:"Friesoythe",ln:"Friesoythe"},4492:{sn:"Saterland",ln:"Saterland"},4493:{sn:"Friesoythe-Gehlenberg",ln:"Friesoythe-Gehlenberg"},4494:{sn:"B\u00f6sel",ln:"B\u00f6sel b.Friesoythe"},4495:{sn:"Friesoythe-Thuele",ln:"Friesoythe-Thuele"},
4496:{sn:"Friesoythe-Markhausen",ln:"Friesoythe-Markhausen"},4497:{sn:"Bar\u00dfel-Harkebr\u00fcgge",ln:"Bar\u00dfel-Harkebr\u00fcgge"},4498:{sn:"Saterland-Ramsloh",ln:"Saterland-Ramsloh"},4499:{sn:"Bar\u00dfel",ln:"Bar\u00dfel"},4501:{sn:"Kastorf",ln:"Kastorf"},4502:{sn:"L\u00fcbeck-Travem\u00fcnde",ln:"L\u00fcbeck-Travem\u00fcnde"},4503:{sn:"Timmendorfer",ln:"Timmendorfer Strand"},4504:{sn:"Ratekau",ln:"Ratekau"},4505:{sn:"Stockelsdorf-Curau",ln:"Stockelsdorf-Curau"},4506:{sn:"Heilshoop",ln:"Heilshoop"},
4508:{sn:"Krummesse",ln:"Krummesse"},4509:{sn:"Gro\u00df Gr\u00f6nau",ln:"Gro\u00df Gr\u00f6nau"},4511:{sn:"L\u00fcbeck",ln:"L\u00fcbeck, Bad Schwartau, Stockelsdorf"},4512:{sn:"Bad Schwartau",ln:"Bad Schwartau"},4513:{sn:"St. Gertrud",ln:"St. Gertrud (Nord), Schlutup, K\u00fccknitz"},4514:{sn:"St. Lorenz",ln:"St. Lorenz-Nord, Stockelsdorf"},4515:{sn:"St. J\u00fcrgen",ln:"St. J\u00fcrgen (S\u00fcd)"},4516:{sn:"St. Gertrud",ln:"St. Gertrud (S\u00fcd)"},4517:{sn:"Innenstadt",ln:"Innenstadt, St. J\u00fcrgen (Nord)"},
4518:{sn:"St. Lorenz",ln:"St. Lorenz-S\u00fcd, Buntekuh, Moisling"},4521:{sn:"Eutin",ln:"Eutin"},4522:{sn:"Pl\u00f6n",ln:"Pl\u00f6n"},4523:{sn:"Bad Malente-Gremsm\u00fchlen",ln:"Bad Malente-Gremsm\u00fchlen"},4524:{sn:"S\u00fcsel",ln:"S\u00fcsel"},4525:{sn:"Ahrensb\u00f6k",ln:"Ahrensb\u00f6k"},4526:{sn:"Ascheberg",ln:"Ascheberg"},4527:{sn:"Bosau",ln:"Bosau"},4528:{sn:"Sch\u00f6nwalde",ln:"Sch\u00f6nwalde am Bungsberg"},4531:{sn:"Bad Oldesloe",ln:"Bad Oldesloe"},4532:{sn:"Bargteheide",ln:"Bargteheide"},
4533:{sn:"Reinfeld",ln:"Reinfeld in Holstein"},4534:{sn:"Sch\u00f6nberg",ln:"Sch\u00f6nberg, Kreis Herzogtum Lauenburg"},4535:{sn:"Kayhude",ln:"Kayhude"},4536:{sn:"Sandesneben",ln:"Sandesneben"},4537:{sn:"Grabau",ln:"Grabau"},4539:{sn:"Rethwisch",ln:"Rethwisch"},4541:{sn:"Ratzeburg",ln:"Ratzeburg"},4542:{sn:"M\u00f6lln",ln:"M\u00f6lln"},4543:{sn:"Nusse",ln:"Nusse"},4544:{sn:"Berkenthin",ln:"Berkenthin"},4545:{sn:"Salem",ln:"Salem"},4546:{sn:"Mustin",ln:"Mustin"},4547:{sn:"Gudow",ln:"Gudow in Lauenburg"},
4551:{sn:"Bad Segeberg",ln:"Bad Segeberg"},4552:{sn:"Bebensee",ln:"Bebensee"},4553:{sn:"Geschendorf",ln:"Geschendorf"},4554:{sn:"Wahlstedt",ln:"Wahlstedt"},4555:{sn:"Seedorf",ln:"Seedorf bei Bad Segeberg"},4556:{sn:"Travenhorst",ln:"Travenhorst"},4557:{sn:"Tensfeld",ln:"Tensfeld"},4558:{sn:"Fredesdorf",ln:"Fredesdorf"},4559:{sn:"Wensin",ln:"Wensin"},4561:{sn:"Neustadt",ln:"Neustadt in Holstein"},4562:{sn:"Gr\u00f6mitz",ln:"Gr\u00f6mitz"},4563:{sn:"Sierksdorf",ln:"Sierksdorf"},4564:{sn:"Schashagen",
ln:"Schashagen"},4621:{sn:"Schleswig",ln:"Schleswig"},4622:{sn:"Taarstedt",ln:"Taarstedt"},4623:{sn:"B\u00f6klund",ln:"B\u00f6klund"},4624:{sn:"Kropp",ln:"Kropp"},4625:{sn:"J\u00fcbek",ln:"J\u00fcbek"},4626:{sn:"Treia",ln:"Treia"},4627:{sn:"D\u00f6rpstedt",ln:"D\u00f6rpstedt"},4630:{sn:"Barderup",ln:"Barderup"},4631:{sn:"Gl\u00fccksburg",ln:"Gl\u00fccksburg (Ostsee)"},4632:{sn:"Steinbergkirche",ln:"Steinbergkirche"},4633:{sn:"Satrup",ln:"Satrup"},4634:{sn:"Husby",ln:"Husby"},4635:{sn:"S\u00f6rup",
ln:"S\u00f6rup"},4636:{sn:"Langballig",ln:"Langballig"},4637:{sn:"Sterup",ln:"Sterup"},4638:{sn:"Tarp",ln:"Tarp"},4639:{sn:"Schafflund",ln:"Schafflund"},4641:{sn:"S\u00fcderbrarup",ln:"S\u00fcderbrarup"},4642:{sn:"Kappeln",ln:"Kappeln an der Schlei"},4643:{sn:"Gelting",ln:"Gelting (Angeln)"},4644:{sn:"Karby",ln:"Karby Schwansen"},4646:{sn:"Mohrkirch",ln:"Mohrkirch"},4651:{sn:"Sylt",ln:"Sylt"},4661:{sn:"Nieb\u00fcll",ln:"Nieb\u00fcll"},4662:{sn:"Leck",ln:"Leck"},4663:{sn:"S\u00fcderl\u00fcgum",ln:"S\u00fcderl\u00fcgum"},
4664:{sn:"Neukirchen",ln:"Neukirchen bei Nieb\u00fcll"},4665:{sn:"Emmelsb\u00fcll-Horsb\u00fcll",ln:"Emmelsb\u00fcll-Horsb\u00fcll"},4666:{sn:"Ladelund",ln:"Ladelund"},4667:{sn:"Dageb\u00fcll",ln:"Dageb\u00fcll"},4668:{sn:"Klanxb\u00fcll",ln:"Klanxb\u00fcll"},4671:{sn:"Bredstedt",ln:"Bredstedt"},4672:{sn:"Langenhorn",ln:"Langenhorn"},4673:{sn:"Joldelund",ln:"Joldelund"},4674:{sn:"Ockholm",ln:"Ockholm"},4681:{sn:"Wyk",ln:"Wyk auf F\u00f6hr"},4682:{sn:"Amrum",ln:"Amrum"},4683:{sn:"Oldsum",ln:"Oldsum"},
4684:{sn:"Langene\u00df",ln:"Langene\u00df (Hallig)"},4702:{sn:"Sandstedt",ln:"Sandstedt"},4703:{sn:"Loxstedt-Donnern",ln:"Loxstedt-Donnern"},4704:{sn:"Drangstedt",ln:"Drangstedt"},4705:{sn:"Wremen",ln:"Wremen"},4706:{sn:"Schiffdorf",ln:"Schiffdorf"},4707:{sn:"Langen-Neuenwalde",ln:"Langen-Neuenwalde"},4708:{sn:"Ringstedt",ln:"Ringstedt"},4721:{sn:"Cuxhaven",ln:"Cuxhaven"},4722:{sn:"Cuxhaven-Altenbruch",ln:"Cuxhaven-Altenbruch"},4723:{sn:"Cuxhaven-Altenwalde",ln:"Cuxhaven-Altenwalde"},4724:{sn:"Cuxhaven-L\u00fcdingworth",
ln:"Cuxhaven-L\u00fcdingworth"},4725:{sn:"Helgoland",ln:"Helgoland"},4731:{sn:"Nordenham",ln:"Nordenham"},4732:{sn:"Stadland-Rodenkirchen",ln:"Stadland-Rodenkirchen"},4733:{sn:"Butjadingen-Burhave",ln:"Butjadingen-Burhave"},4734:{sn:"Stadland-Seefeld",ln:"Stadland-Seefeld"},4735:{sn:"Butjadingen-Stollhamm",ln:"Butjadingen-Stollhamm"},4736:{sn:"Butjadingen-Tossens",ln:"Butjadingen-Tossens"},4737:{sn:"Stadland-Schwei",ln:"Stadland-Schwei"},4740:{sn:"Loxstedt-Dedesdorf",ln:"Loxstedt-Dedesdorf"},4741:{sn:"Nordholz",
ln:"Nordholz b.Bremerhaven"},4742:{sn:"Dorum",ln:"Dorum"},4743:{sn:"Langen",ln:"Langen b.Bremerhaven"},4744:{sn:"Loxstedt",ln:"Loxstedt"},4745:{sn:"Bederkesa",ln:"Bederkesa"},4746:{sn:"Hagen",ln:"Hagen b.Bremerhaven"},4747:{sn:"Beverstedt",ln:"Beverstedt"},4748:{sn:"Stubben",ln:"Stubben b.Bremerhaven"},4749:{sn:"Schiffdorf-Geestenseth",ln:"Schiffdorf-Geestenseth"},4751:{sn:"Otterndorf",ln:"Otterndorf"},4752:{sn:"Neuhaus",ln:"Neuhaus (Oste)"},4753:{sn:"Balje",ln:"Balje"},4754:{sn:"B\u00fclkau",ln:"B\u00fclkau"},
4755:{sn:"Ihlienworth",ln:"Ihlienworth"},4756:{sn:"Odisheim",ln:"Odisheim"},4757:{sn:"Wanna",ln:"Wanna"},4758:{sn:"Nordleda",ln:"Nordleda"},4761:{sn:"Bremerv\u00f6rde",ln:"Bremerv\u00f6rde"},4762:{sn:"Kutenholz",ln:"Kutenholz"},4763:{sn:"Gnarrenburg",ln:"Gnarrenburg"},4764:{sn:"Gnarrenburg-Klenkendorf",ln:"Gnarrenburg-Klenkendorf"},4765:{sn:"Ebersdorf",ln:"Ebersdorf b.Bremerv\u00f6rde"},4766:{sn:"Basdahl",ln:"Basdahl"},4767:{sn:"Bremerv\u00f6rde-Bevern",ln:"Bremerv\u00f6rde-Bevern"},4768:{sn:"Hipstedt",
ln:"Hipstedt"},4769:{sn:"Bremerv\u00f6rde-Iselersheim",ln:"Bremerv\u00f6rde-Iselersheim"},4770:{sn:"Wischhafen",ln:"Wischhafen"},4771:{sn:"Hemmoor",ln:"Hemmoor"},4772:{sn:"Oberndorf",ln:"Oberndorf Oste"},4773:{sn:"Lamstedt",ln:"Lamstedt"},4774:{sn:"Hechthausen",ln:"Hechthausen"},4775:{sn:"Grossenw\u00f6rden",ln:"Grossenw\u00f6rden"},4776:{sn:"Osten-Altendorf",ln:"Osten-Altendorf"},4777:{sn:"Cadenberge",ln:"Cadenberge"},4778:{sn:"Wingst",ln:"Wingst"},4779:{sn:"Freiburg",ln:"Freiburg an der Elbe"},
4791:{sn:"Osterholz-Scharmbeck",ln:"Osterholz-Scharmbeck"},4792:{sn:"Worpswede",ln:"Worpswede (Landkreis Osterholz)"},4793:{sn:"Hambergen",ln:"Hambergen"},4794:{sn:"Worpswede-Ostersode",ln:"Worpswede-Ostersode"},4795:{sn:"Garlstedt",ln:"Garlstedt"},4796:{sn:"Teufelsmoor",ln:"Teufelsmoor"},4802:{sn:"Dellstedt",ln:"Dellstedt, Wrohm"},4803:{sn:"Delve",ln:"Delve, Pahlen"},4804:{sn:"Nordhastedt",ln:"Nordhastedt"},4805:{sn:"Schafstedt",ln:"Schafstedt"},4806:{sn:"Bargenstedt",ln:"Bargenstedt, Odderade, Sarzb\u00fcttel"},
4821:{sn:"Itzehoe",ln:"Itzehoe"},4822:{sn:"Kellinghusen",ln:"Kellinghusen"},4823:{sn:"Wilster",ln:"Wilster"},4824:{sn:"Krempe",ln:"Krempe"},4825:{sn:"Burg",ln:"Burg"},4826:{sn:"Hohenlockstedt",ln:"Hohenlockstedt"},4827:{sn:"Wacken",ln:"Wacken"},4828:{sn:"L\u00e4gerdorf",ln:"L\u00e4gerdorf"},4829:{sn:"Brokdorf",ln:"Brokdorf"},4832:{sn:"Meldorf",ln:"Meldorf"},4837:{sn:"Neuenkirchen",ln:"Neuenkirchen"},4841:{sn:"Husum",ln:"Husum"},4845:{sn:"Ostenfeld",ln:"Ostenfeld"},4851:{sn:"Marne",ln:"Marne"},4852:{sn:"Brunsb\u00fcttel",
ln:"Brunsb\u00fcttel"},4854:{sn:"Friedrichskoog",ln:"Friedrichskoog"},4861:{sn:"T\u00f6nning",ln:"T\u00f6nning"},4862:{sn:"Garding",ln:"Garding"},4863:{sn:"Sankt",ln:"Sankt Peter-Ording"},4864:{sn:"Oldenswort",ln:"Oldenswort"},4865:{sn:"Osterhever",ln:"Osterhever"},4881:{sn:"Friedrichstadt",ln:"Friedrichstadt"},4882:{sn:"Lunden",ln:"Lunden"},4902:{sn:"Jemgum-Ditzum",ln:"Jemgum-Ditzum"},4903:{sn:"Wymeer",ln:"Wymeer"},4920:{sn:"Wirdum",ln:"Wirdum"},4921:{sn:"Emden",ln:"Emden"},4922:{sn:"Borkum",ln:"Borkum"},
4923:{sn:"Krummh\u00f6rn-Pewsum",ln:"Krummh\u00f6rn-Pewsum"},4924:{sn:"Moormerland-Oldersum",ln:"Moormerland-Oldersum"},4925:{sn:"Hinte",ln:"Hinte"},4926:{sn:"Krummh\u00f6rn-Greetsiel",ln:"Krummh\u00f6rn-Greetsiel"},4927:{sn:"Krummh\u00f6rn-Loquard",ln:"Krummh\u00f6rn-Loquard"},4928:{sn:"Ihlow-Riepe",ln:"Ihlow-Riepe"},4929:{sn:"Ihlow",ln:"Ihlow"},4931:{sn:"Norden",ln:"Norden"},4932:{sn:"Norderney",ln:"Norderney"},4933:{sn:"Dornum",ln:"Dornum Ostfriesland"},4934:{sn:"Marienhafe",ln:"Marienhafe"},4935:{sn:"Juist",
ln:"Juist"},4936:{sn:"Grossheide",ln:"Grossheide"},4938:{sn:"Hagermarsch",ln:"Hagermarsch"},4939:{sn:"Baltrum",ln:"Baltrum"},4941:{sn:"Aurich",ln:"Aurich"},4942:{sn:"S\u00fcdbrookmerland",ln:"S\u00fcdbrookmerland"},4943:{sn:"Gro\u00dfefehn",ln:"Gro\u00dfefehn"},4944:{sn:"Wiesmoor",ln:"Wiesmoor"},4945:{sn:"Gro\u00dfefehn-Timmel",ln:"Gro\u00dfefehn-Timmel"},4946:{sn:"Gro\u00dfefehn-Bagband",ln:"Gro\u00dfefehn-Bagband"},4947:{sn:"Aurich-Ogenbargen",ln:"Aurich-Ogenbargen"},4948:{sn:"Wiesmoor-Marcardsmoor",
ln:"Wiesmoor-Marcardsmoor"},4950:{sn:"Holtland",ln:"Holtland"},4951:{sn:"Weener",ln:"Weener"},4952:{sn:"Rhauderfehn",ln:"Rhauderfehn"},4953:{sn:"Bunde",ln:"Bunde"},4954:{sn:"Moormerland",ln:"Moormerland"},4955:{sn:"Westoverledingen",ln:"Westoverledingen"},4956:{sn:"Uplengen",ln:"Uplengen"},4957:{sn:"Detern",ln:"Detern"},4958:{sn:"Jemgum",ln:"Jemgum"},4959:{sn:"Dollart",ln:"Dollart"},4961:{sn:"Papenburg",ln:"Papenburg"},4962:{sn:"Aschendorf",ln:"Aschendorf"},4963:{sn:"D\u00f6rpen",ln:"D\u00f6rpen"},
4964:{sn:"Rhede",ln:"Rhede (Ems)"},4965:{sn:"Surwold",ln:"Surwold"},4966:{sn:"Neub\u00f6rger",ln:"Neub\u00f6rger"},4967:{sn:"Rhauderfehn-Burlage",ln:"Rhauderfehn-Burlage"},4968:{sn:"Neulehe",ln:"Neulehe"},4971:{sn:"Esens",ln:"Esens"},4972:{sn:"Langeoog",ln:"Langeoog"},4973:{sn:"Wittmund-Burhafe",ln:"Wittmund-Burhafe"},4974:{sn:"Neuharlingersiel",ln:"Neuharlingersiel"},4975:{sn:"Westerholt",ln:"Westerholt"},4976:{sn:"Spiekeroog",ln:"Spiekeroog"},4977:{sn:"Blomberg",ln:"Blomberg"},5021:{sn:"Nienburg",
ln:"Nienburg (Weser)"},5022:{sn:"Wietzen",ln:"Wietzen"},5023:{sn:"Liebenau",ln:"Liebenau (bei Nienburg)"},5024:{sn:"Rohrsen",ln:"Rohrsen"},5025:{sn:"Estorf",ln:"Estorf (Weser)"},5026:{sn:"Steimbke",ln:"Steimbke"},5027:{sn:"Linsburg",ln:"Linsburg"},5028:{sn:"Pennigsehl",ln:"Pennigsehl"},5031:{sn:"Wunstorf",ln:"Wunstorf"},5032:{sn:"Neustadt",ln:"Neustadt am R\u00fcbenberge"},5033:{sn:"Gro\u00dfenheidorn",ln:"Gro\u00dfenheidorn, Steinhude, Altenhagen/Hagenburg"},5034:{sn:"Hagen",ln:"Hagen (bei Neustadt am R\u00fcbenberge)"},
5036:{sn:"Schneeren",ln:"Schneeren"},5037:{sn:"Bad Rehburg",ln:"Bad Rehburg"},5041:{sn:"Springe",ln:"Springe (Deister)"},5042:{sn:"Bad M\u00fcnder",ln:"Bad M\u00fcnder am Deister"},5043:{sn:"Lauenau",ln:"Lauenau"},5044:{sn:"Eldagsen",ln:"Eldagsen"},5045:{sn:"Bennigsen",ln:"Bennigsen"},5051:{sn:"Bergen",ln:"Bergen, Lower Saxony (bei Celle)"},5052:{sn:"Hermannsburg",ln:"Hermannsburg"},5053:{sn:"M\u00fcden",ln:"M\u00fcden (Aller)"},5054:{sn:"S\u00fclze",ln:"S\u00fclze"},5055:{sn:"Fassberg",ln:"Fassberg"},
5056:{sn:"Meissendorf",ln:"Meissendorf"},5060:{sn:"Bodenburg",ln:"Bodenburg"},5062:{sn:"Holle",ln:"Holle (bei Hildesheim)"},5063:{sn:"Bad Salzdetfurth",ln:"Bad Salzdetfurth"},5064:{sn:"Gro\u00df D\u00fcngen",ln:"Gro\u00df D\u00fcngen"},5065:{sn:"Sibbesse",ln:"Sibbesse"},5066:{sn:"Sarstedt",ln:"Sarstedt"},5067:{sn:"Bockenem",ln:"Bockenem"},5068:{sn:"Elze",ln:"Elze (Leine)"},5069:{sn:"Nordstemmen",ln:"Nordstemmen"},5071:{sn:"Schwarmstedt",ln:"Schwarmstedt"},5072:{sn:"Mandelsloh",ln:"Mandelsloh"},5073:{sn:"Esperke",
ln:"Esperke"},5074:{sn:"Rodewald",ln:"Rodewald"},5082:{sn:"Langlingen",ln:"Langlingen"},5083:{sn:"Hohne",ln:"Hohne (bei Celle)"},5084:{sn:"Hamb\u00fchren",ln:"Hamb\u00fchren"},5085:{sn:"Ehlershausen",ln:"Ehlershausen"},5086:{sn:"Scheuen",ln:"Scheuen"},5101:{sn:"Pattensen",ln:"Pattensen"},5102:{sn:"Laatzen",ln:"Laatzen"},5103:{sn:"Wennigsen",ln:"Wennigsen (Deister)"},5105:{sn:"Barsinghausen",ln:"Barsinghausen"},5108:{sn:"Gehrden",ln:"Gehrden"},5109:{sn:"Ronnenberg",ln:"Ronnenberg"},5121:{sn:"Hildesheim",
ln:"Hildesheim"},5123:{sn:"Schellerten",ln:"Schellerten"},5126:{sn:"Algermissen",ln:"Algermissen"},5127:{sn:"Harsum",ln:"Harsum"},5128:{sn:"Hohenhameln",ln:"Hohenhameln"},5129:{sn:"S\u00f6hlde",ln:"S\u00f6hlde"},5130:{sn:"Wedemark",ln:"Wedemark"},5131:{sn:"Garbsen",ln:"Garbsen"},5132:{sn:"Lehrte",ln:"Lehrte"},5135:{sn:"Fuhrberg",ln:"Fuhrberg"},5136:{sn:"Burgdorf",ln:"Burgdorf (Hannover)"},5137:{sn:"Seelze",ln:"Seelze"},5138:{sn:"Sehnde",ln:"Sehnde"},5139:{sn:"Burgwedel",ln:"Burgwedel"},5141:{sn:"Celle",
ln:"Celle"},5142:{sn:"Eschede",ln:"Eschede"},5143:{sn:"Winsen",ln:"Winsen (Aller)"},5144:{sn:"Wathlingen",ln:"Wathlingen"},5145:{sn:"Beedenbostel",ln:"Beedenbostel"},5147:{sn:"H\u00e4ningsen",ln:"H\u00e4ningsen"},5148:{sn:"Steinhorst",ln:"Steinhorst (Nieders.)"},5149:{sn:"Wienhausen",ln:"Wienhausen"},5151:{sn:"Hameln",ln:"Hameln"},5152:{sn:"Hessisch Oldendorf",ln:"Hessisch Oldendorf"},5153:{sn:"Salzhemmendorf",ln:"Salzhemmendorf"},5154:{sn:"Aerzen",ln:"Aerzen"},5155:{sn:"Emmerthal",ln:"Emmerthal"},
5156:{sn:"Coppenbr\u00fcgge",ln:"Coppenbr\u00fcgge"},5157:{sn:"B\u00f6rry",ln:"B\u00f6rry"},5158:{sn:"Hemeringen",ln:"Hemeringen"},5159:{sn:"Bisperode",ln:"Bisperode"},5161:{sn:"Walsrode",ln:"Walsrode"},5162:{sn:"Bad Fallingbostel",ln:"Bad Fallingbostel"},5163:{sn:"Dorfmark",ln:"Dorfmark"},5164:{sn:"Hodenhagen",ln:"Hodenhagen"},5165:{sn:"Rethem",ln:"Rethem (Aller)"},5166:{sn:"Kirchboitzen",ln:"Kirchboitzen"},5167:{sn:"Westenholz",ln:"Westenholz"},5168:{sn:"Stellichte",ln:"Stellichte"},5171:{sn:"Peine",
ln:"Peine"},5172:{sn:"Ilsede",ln:"Ilsede"},5173:{sn:"Uetze",ln:"Uetze"},5174:{sn:"Lahstedt",ln:"Lahstedt"},5175:{sn:"Arpke",ln:"Arpke"},5176:{sn:"Edemissen",ln:"Edemissen"},5177:{sn:"Abbensen",ln:"Abbensen"},5181:{sn:"Alfeld",ln:"Alfeld (Leine)"},5182:{sn:"Gronau",ln:"Gronau (Leine)"},5183:{sn:"Lamspringe",ln:"Lamspringe"},5184:{sn:"Freden",ln:"Freden (Leine)"},5185:{sn:"Duingen",ln:"Duingen"},5186:{sn:"Wallensen",ln:"Wallensen"},5187:{sn:"Delligsen",ln:"Delligsen"},5190:{sn:"Emmingen",ln:"Emmingen"},
5191:{sn:"Soltau",ln:"Soltau"},5192:{sn:"Munster",ln:"Munster"},5193:{sn:"Schneverdingen",ln:"Schneverdingen"},5194:{sn:"Bispingen",ln:"Bispingen"},5196:{sn:"Wietzendorf",ln:"Wietzendorf"},5197:{sn:"Frielingen",ln:"Frielingen"},5198:{sn:"Wintermoor",ln:"Wintermoor"},5199:{sn:"Heber",ln:"Heber"},5201:{sn:"Halle",ln:"Halle (Westf.)"},5202:{sn:"Oerlinghausen",ln:"Oerlinghausen"},5203:{sn:"Werther",ln:"Werther (Westfalen)"},5204:{sn:"Steinhagen",ln:"Steinhagen (Westfalen)"},5205:{sn:"Sennestadt",ln:"Sennestadt (Stadt Bielefeld)"},
5206:{sn:"J\u00f6llenbeck",ln:"J\u00f6llenbeck, Theesen (Stadt Bielefeld)"},5207:{sn:"Schlo\u00df Holte-Stukenbrock",ln:"Schlo\u00df Holte-Stukenbrock"},5208:{sn:"Leopoldsh\u00f6he",ln:"Leopoldsh\u00f6he"},5209:{sn:"Friedrichsdorf",ln:"Friedrichsdorf (Stadt G\u00fctersloh)"},5221:{sn:"Herford",ln:"Herford"},5222:{sn:"Bad Salzuflen",ln:"Bad Salzuflen"},5223:{sn:"B\u00fcnde",ln:"B\u00fcnde"},5224:{sn:"Enger",ln:"Enger (Westfalen)"},5225:{sn:"Spenge",ln:"Spenge"},5226:{sn:"Bruchm\u00fchlen",ln:"Bruchm\u00fchlen (Westfalen, Gemeinde R\u00f6dinghausen/Nordrhein-Westfalen bzw. Stadt Melle/Niedersachsen)"},
5228:{sn:"Vlotho",ln:"Vlotho/Exter (Stadt Vlotho)"},5231:{sn:"Detmold",ln:"Detmold"},5232:{sn:"Lage",ln:"Lage"},5233:{sn:"Steinheim",ln:"Steinheim (Westfalen)"},5234:{sn:"Horn-Bad Meinberg",ln:"Horn-Bad Meinberg"},5235:{sn:"Blomberg",ln:"Blomberg (Lippe)"},5236:{sn:"Gro\u00dfenmarpe",ln:"Gro\u00dfenmarpe (Gemeinde Blomberg (Lippe)"},5237:{sn:"Augustdorf",ln:"Augustdorf"},5238:{sn:"Himmighausen",ln:"Himmighausen (Gemeinde Nieheim)"},5241:{sn:"G\u00fctersloh",ln:"G\u00fctersloh"},5242:{sn:"Rheda-Wiedenbr\u00fcck",
ln:"Rheda-Wiedenbr\u00fcck"},5244:{sn:"Rietberg",ln:"Rietberg"},5245:{sn:"Herzebrock-Clarholz",ln:"Herzebrock-Clarholz"},5246:{sn:"Verl",ln:"Verl"},5247:{sn:"Harsewinkel",ln:"Harsewinkel"},5248:{sn:"Langenberg",ln:"Langenberg"},5250:{sn:"Delbr\u00fcck",ln:"Delbr\u00fcck (Westfalen)"},5251:{sn:"Paderborn",ln:"Paderborn"},5252:{sn:"Bad Lippspringe",ln:"Bad Lippspringe"},5253:{sn:"Bad Driburg",ln:"Bad Driburg"},5254:{sn:"Schlo\u00df Neuhaus",ln:"Schlo\u00df Neuhaus (Stadt Paderborn)"},5255:{sn:"Altenbeken",
ln:"Altenbeken"},5257:{sn:"H\u00f6velhof",ln:"H\u00f6velhof"},5258:{sn:"Salzkotten",ln:"Salzkotten"},5259:{sn:"Neuenheerse",ln:"Neuenheerse (Stadt Bad Driburg)"},5261:{sn:"Lemgo",ln:"Lemgo"},5262:{sn:"Extertal",ln:"Extertal"},5263:{sn:"Barntrup",ln:"Barntrup"},5264:{sn:"Kalletal",ln:"Kalletal"},5265:{sn:"D\u00f6rentrup",ln:"D\u00f6rentrup"},5266:{sn:"Kirchheide",ln:"Kirchheide (Stadt Lemgo)"},5271:{sn:"H\u00f6xter",ln:"H\u00f6xter, Boffzen, F\u00fcrstenberg"},5272:{sn:"Brakel",ln:"Brakel (Westfalen)"},
5273:{sn:"Beverungen",ln:"Beverungen, Lauenf\u00f6rde, Derental"},5274:{sn:"Nieheim",ln:"Nieheim"},5275:{sn:"Ottbergen",ln:"Ottbergen (Stadt H\u00f6xter)"},5276:{sn:"Marienm\u00fcnster",ln:"Marienm\u00fcnster"},5277:{sn:"F\u00fcrstenau",ln:"F\u00fcrstenau (Stadt H\u00f6xter)"},5278:{sn:"Ovenhausen",ln:"Ovenhausen (Stadt H\u00f6xter)"},5281:{sn:"Bad Pyrmont",ln:"Bad Pyrmont"},5282:{sn:"Schieder-Schwalenberg",ln:"Schieder-Schwalenberg"},5283:{sn:"L\u00fcgde",ln:"L\u00fcgde -Rischenau"},5284:{sn:"Schwalenberg",
ln:"Schwalenberg (Gemeinde Schieder-Schwalenberg)"},5285:{sn:"Kleinenberg",ln:"Kleinenberg"},5286:{sn:"Ottenstein",ln:"Ottenstein"},5292:{sn:"Atteln",ln:"Atteln (Stadt Lichtenau)"},5293:{sn:"Dahl",ln:"Dahl (Stadt Paderborn)"},5294:{sn:"Espeln",ln:"Espeln (Gemeinde H\u00f6velhof)"},5295:{sn:"Lichtenau",ln:"Lichtenau"},5300:{sn:"\u00dcfingen",ln:"\u00dcfingen"},5301:{sn:"Lehre-Essenrode",ln:"Lehre-Essenrode"},5302:{sn:"Vechelde",ln:"Vechelde"},5303:{sn:"Wendeburg",ln:"Wendeburg"},5304:{sn:"Meine",ln:"Meine"},
5305:{sn:"Sickte",ln:"Sickte"},5306:{sn:"Cremlingen",ln:"Cremlingen"},5307:{sn:"Braunschweig-Wenden",ln:"Braunschweig-Wenden"},5308:{sn:"Lehre",ln:"Lehre"},5309:{sn:"Lehre-Wendhausen",ln:"Lehre-Wendhausen"},5320:{sn:"Torfhaus",ln:"Torfhaus"},5321:{sn:"Goslar",ln:"Goslar"},5322:{sn:"Bad Harzburg",ln:"Bad Harzburg"},5323:{sn:"Clausthal-Zellerfeld",ln:"Clausthal-Zellerfeld"},5324:{sn:"Vienenburg",ln:"Vienenburg"},5325:{sn:"Hahnenklee",ln:"Hahnenklee"},5326:{sn:"Langelsheim",ln:"Langelsheim"},5327:{sn:"Bad Grund",
ln:"Bad Grund (Harz)"},5328:{sn:"Altenau",ln:"Altenau (Harz)"},5329:{sn:"Schulenberg",ln:"Schulenberg (Oberharz)"},5331:{sn:"Wolfenb\u00fcttel",ln:"Wolfenb\u00fcttel"},5332:{sn:"Sch\u00f6ppenstedt",ln:"Sch\u00f6ppenstedt"},5333:{sn:"Dettum",ln:"Dettum"},5334:{sn:"Hornburg",ln:"Hornburg (bei Wolfenb\u00fcttel)"},5335:{sn:"Schladen",ln:"Schladen"},5336:{sn:"Semmenstedt",ln:"Semmenstedt"},5337:{sn:"Kissenbr\u00fcck",ln:"Kissenbr\u00fcck"},5339:{sn:"Gielde",ln:"Gielde"},5341:{sn:"Salzgitter",ln:"Salzgitter"},
5344:{sn:"Lengede",ln:"Lengede"},5345:{sn:"Baddeckenstedt",ln:"Baddeckenstedt"},5346:{sn:"Liebenburg",ln:"Liebenburg"},5347:{sn:"Burgdorf",ln:"Burgdorf (bei Salzgitter)"},5351:{sn:"Helmstedt",ln:"Helmstedt"},5352:{sn:"Sch\u00f6ningen",ln:"Sch\u00f6ningen"},5353:{sn:"K\u00f6nigslutter",ln:"K\u00f6nigslutter"},5354:{sn:"Jerxheim",ln:"Jerxheim"},5355:{sn:"Frellstedt",ln:"Frellstedt"},5356:{sn:"Helmstedt-Barmke",ln:"Helmstedt-Barmke"},5357:{sn:"Grasleben",ln:"Grasleben"},5358:{sn:"Bahrdorf-Mackendorf",
ln:"Bahrdorf-Mackendorf"},5361:{sn:"Wolfsburg",ln:"Wolfsburg"},5362:{sn:"Wolfsburg-Fallersleben",ln:"Wolfsburg-Fallersleben"},5363:{sn:"Wolfsburg-Vorsfelde",ln:"Wolfsburg-Vorsfelde"},5364:{sn:"Velpke",ln:"Velpke"},5365:{sn:"Wolfsburg-Neindorf",ln:"Wolfsburg-Neindorf"},5366:{sn:"Jembke",ln:"Jembke"},5367:{sn:"R\u00fchen",ln:"R\u00fchen"},5371:{sn:"Gifhorn",ln:"Gifhorn"},5372:{sn:"Meinersen",ln:"Meinersen"},5373:{sn:"Hillerse",ln:"Hillerse"},5374:{sn:"Isenb\u00fcttel",ln:"Isenb\u00fcttel"},5375:{sn:"M\u00fcden",
ln:"M\u00fcden (Aller)"},5376:{sn:"Wesendorf",ln:"Wesendorf"},5378:{sn:"Sassenburg-Platendorf",ln:"Sassenburg-Platendorf"},5379:{sn:"Sassenburg-Grussendorf",ln:"Sassenburg-Grussendorf"},5381:{sn:"Seesen",ln:"Seesen"},5382:{sn:"Bad Gandersheim",ln:"Bad Gandersheim"},5383:{sn:"Lutter",ln:"Lutter am Barenberge"},5384:{sn:"Gro\u00df Rh\u00fcden",ln:"Gro\u00df Rh\u00fcden"},5401:{sn:"Georgsmarienh\u00fctte",ln:"Georgsmarienh\u00fctte"},5402:{sn:"Bissendorf",ln:"Bissendorf"},5403:{sn:"Bad Iburg",ln:"Bad Iburg"},
5404:{sn:"Westerkappeln",ln:"Westerkappeln"},5405:{sn:"Hasbergen",ln:"Hasbergen (Osnabr\u00fcck)"},5406:{sn:"Belm",ln:"Belm"},5407:{sn:"Wallenhorst",ln:"Wallenhorst"},5409:{sn:"Hilter",ln:"Hilter am Teutoburger Wald"},5421:{sn:"Dissen",ln:"Dissen am Teutoburger Wald"},5422:{sn:"Melle",ln:"Melle"},5423:{sn:"Versmold",ln:"Versmold"},5424:{sn:"Bad Rothenfelde",ln:"Bad Rothenfelde, Bad Laer, Hilter"},5425:{sn:"Borgholzhausen",ln:"Borgholzhausen"},5426:{sn:"Glandorf",ln:"Glandorf"},5427:{sn:"Buer",ln:"Buer (Stadt Melle)"},
5428:{sn:"Neuenkirchen",ln:"Neuenkirchen (Stadt Melle)"},5429:{sn:"Wellingholzhausen",ln:"Wellingholzhausen (Stadt Melle)"},5432:{sn:"L\u00f6ningen",ln:"L\u00f6ningen"},5433:{sn:"Badbergen",ln:"Badbergen"},5434:{sn:"Essen",ln:"Essen (Oldenburg)"},5435:{sn:"Berge",ln:"Berge (bei Quakenbr\u00fcck)"},5436:{sn:"Nortrup",ln:"Nortrup"},5437:{sn:"Menslage",ln:"Menslage"},5438:{sn:"L\u00fcsche",ln:"L\u00fcsche"},5439:{sn:"Bersenbr\u00fcck",ln:"Bersenbr\u00fcck"},5441:{sn:"Diepholz",ln:"Diepholz"},5442:{sn:"Barnstorf",
ln:"Barnstorf"},5443:{sn:"Lemf\u00f6rde",ln:"Lemf\u00f6rde"},5444:{sn:"Wagenfeld",ln:"Wagenfeld"},5445:{sn:"Drebber",ln:"Drebber"},5446:{sn:"Rehden",ln:"Rehden"},5447:{sn:"Lembruch",ln:"Lembruch"},5448:{sn:"Barver",ln:"Barver"},5451:{sn:"Ibbenb\u00fcren",ln:"Ibbenb\u00fcren"},5452:{sn:"Mettingen",ln:"Mettingen (Westfalen)"},5453:{sn:"Recke",ln:"Recke"},5454:{sn:"Riesenbeck",ln:"Riesenbeck"},5455:{sn:"Brochterbeck",ln:"Brochterbeck"},5456:{sn:"Velpe",ln:"Velpe"},5457:{sn:"Schale",ln:"Schale"},5458:{sn:"Hopsten",
ln:"Hopsten"},5459:{sn:"H\u00f6rstel",ln:"H\u00f6rstel"},5461:{sn:"Bramsche",ln:"Bramsche"},5462:{sn:"Ankum",ln:"Ankum"},5464:{sn:"Alfhausen",ln:"Alfhausen"},5465:{sn:"Neuenkirchen",ln:"Neuenkirchen (bei Bramsche)"},5466:{sn:"Merzen",ln:"Merzen"},5468:{sn:"Engter",ln:"Engter"},5471:{sn:"Bohmte",ln:"Bohmte"},5472:{sn:"Bad Essen",ln:"Bad Essen"},5473:{sn:"Ostercappeln",ln:"Ostercappeln"},5474:{sn:"Stemwede-Dielingen",ln:"Stemwede-Dielingen (Gemeinde Stemwede)"},5475:{sn:"Hunteburg",ln:"Hunteburg"},
5476:{sn:"Venne",ln:"Venne"},5481:{sn:"Lengerich",ln:"Lengerich (Westfalen)"},5482:{sn:"Tecklenburg",ln:"Tecklenburg"},5483:{sn:"Lienen",ln:"Lienen"},5484:{sn:"Kattenvenne",ln:"Kattenvenne"},5485:{sn:"Ladbergen",ln:"Ladbergen"},5491:{sn:"Damme",ln:"Damme (D\u00fcmmer)"},5492:{sn:"Steinfeld",ln:"Steinfeld (Oldenburg)"},5493:{sn:"Neuenkirchen",ln:"Neuenkirchen (Old.)"},5494:{sn:"Holdorf",ln:"Holdorf (Nieders.)"},5495:{sn:"V\u00f6rden",ln:"V\u00f6rden"},5502:{sn:"Dransfeld",ln:"Dransfeld"},5503:{sn:"N\u00f6rten-Hardenberg",
ln:"N\u00f6rten-Hardenberg"},5504:{sn:"Friedland",ln:"Friedland (bei G\u00f6ttingen)"},5505:{sn:"Hardegsen",ln:"Hardegsen"},5506:{sn:"Adelebsen",ln:"Adelebsen"},5507:{sn:"Eberg\u00f6tzen",ln:"Eberg\u00f6tzen"},5508:{sn:"Rittmarshausen",ln:"Rittmarshausen"},5509:{sn:"Rosdorf",ln:"Rosdorf"},5520:{sn:"Braunlage",ln:"Braunlage"},5521:{sn:"Herzberg",ln:"Herzberg am Harz"},5522:{sn:"Osterode",ln:"Osterode (Harz)"},5523:{sn:"Bad Sachsa",ln:"Bad Sachsa"},5524:{sn:"Bad Lauterberg",ln:"Bad Lauterberg (Harz)"},
5525:{sn:"Walkenried",ln:"Walkenried"},5527:{sn:"Duderstadt",ln:"Duderstadt"},5528:{sn:"Gieboldehausen",ln:"Gieboldehausen"},5529:{sn:"Rhumspringe",ln:"Rhumspringe"},5531:{sn:"Holzminden",ln:"Holzminden"},5532:{sn:"Stadtoldendorf",ln:"Stadtoldendorf"},5533:{sn:"Bodenwerder",ln:"Bodenwerder"},5534:{sn:"Eschershausen",ln:"Eschershausen (an der Lenne) (Niedersachsen)"},5535:{sn:"Polle",ln:"Polle"},5536:{sn:"Neuhaus",ln:"Neuhaus (bei Holzminden)"},5541:{sn:"Hann",ln:"Hann. M\u00fcnden"},5542:{sn:"Witzenhausen",
ln:"Witzenhausen"},5543:{sn:"Staufenberg",ln:"Staufenberg (Niedersachsen)"},5544:{sn:"Reinhardshagen",ln:"Reinhardshagen"},5545:{sn:"Hedem\u00fcnden",ln:"Hedem\u00fcnden"},5546:{sn:"Scheden",ln:"Scheden"},5551:{sn:"Northeim",ln:"Northeim"},5552:{sn:"Katlenburg",ln:"Katlenburg"},5553:{sn:"Kalefeld",ln:"Kalefeld"},5554:{sn:"Moringen",ln:"Moringen"},5555:{sn:"Fredelsloh",ln:"Fredelsloh"},5556:{sn:"Lindau",ln:"Lindau (Harz)"},5561:{sn:"Einbeck",ln:"Einbeck"},5562:{sn:"Markoldendorf",ln:"Markoldendorf"},
5563:{sn:"Kreiensen",ln:"Kreiensen"},5564:{sn:"Dassel",ln:"Dassel"},5565:{sn:"Wenzen",ln:"Wenzen"},5571:{sn:"Uslar",ln:"Uslar"},5572:{sn:"Bodenfelde",ln:"Bodenfelde"},5573:{sn:"Volpriehausen",ln:"Volpriehausen"},5574:{sn:"Oberweser",ln:"Oberweser"},5582:{sn:"Sankt",ln:"Sankt Andreasberg"},5583:{sn:"Hohegei\u00df",ln:"Hohegei\u00df"},5584:{sn:"Hattorf",ln:"Hattorf"},5585:{sn:"Sieber",ln:"Sieber"},5592:{sn:"Gleichen-Bremke",ln:"Gleichen-Bremke"},5593:{sn:"Lenglern",ln:"Lenglern (bei Bovenden)"},5594:{sn:"Reyershausen",
ln:"Reyershausen"},5601:{sn:"Schauenburg",ln:"Schauenburg"},5602:{sn:"Hessisch Lichtenau",ln:"Hessisch Lichtenau, Eschenstruth"},5603:{sn:"Gudensberg",ln:"Gudensberg"},5604:{sn:"Gro\u00dfalmerode",ln:"Gro\u00dfalmerode"},5605:{sn:"Kaufungen",ln:"Kaufungen"},5606:{sn:"Zierenberg",ln:"Zierenberg"},5607:{sn:"Fuldatal",ln:"Fuldatal"},5608:{sn:"S\u00f6hrewald",ln:"S\u00f6hrewald"},5609:{sn:"Ahnatal",ln:"Ahnatal"},5621:{sn:"Bad Wildungen",ln:"Bad Wildungen"},5622:{sn:"Fritzlar",ln:"Fritzlar"},5623:{sn:"Edertal",
ln:"Edertal"},5624:{sn:"Emstal",ln:"Emstal"},5625:{sn:"Naumburg",ln:"Naumburg (Hessen)"},5626:{sn:"Zwesten",ln:"Zwesten"},5631:{sn:"Korbach",ln:"Korbach"},5632:{sn:"Willingen",ln:"Willingen (Upland)"},5633:{sn:"Diemelsee",ln:"Diemelsee"},5634:{sn:"Waldeck",ln:"Waldeck"},5635:{sn:"Voehl",ln:"Voehl"},5636:{sn:"Lichtenfels-Goddelsheim",ln:"Lichtenfels-Goddelsheim"},5641:{sn:"Warburg",ln:"Warburg"},5642:{sn:"Scherfede",ln:"Scherfede"},5643:{sn:"Borgentreich",ln:"Borgentreich"},5644:{sn:"Peckelsheim",
ln:"Peckelsheim"},5645:{sn:"Borgholz",ln:"Borgholz (bei Borgentreich)"},5646:{sn:"Willebadessen",ln:"Willebadessen"},5647:{sn:"Kleinenberg",ln:"Kleinenberg"},5648:{sn:"Gehrden",ln:"Gehrden"},5650:{sn:"Cornberg",ln:"Cornberg"},5651:{sn:"Eschwege",ln:"Eschwege"},5652:{sn:"Bad Sooden-Allendorf",ln:"Bad Sooden-Allendorf"},5653:{sn:"Sontra",ln:"Sontra"},5654:{sn:"Herleshausen",ln:"Herleshausen"},5655:{sn:"Wanfried",ln:"Wanfried"},5656:{sn:"Waldkappel",ln:"Waldkappel"},5657:{sn:"Mei\u00dfner",ln:"Mei\u00dfner"},
5658:{sn:"Wehretal",ln:"Wehretal"},5659:{sn:"Ringgau",ln:"Ringgau"},5661:{sn:"Melsungen",ln:"Melsungen"},5662:{sn:"Felsberg",ln:"Felsberg (Hessen)"},5663:{sn:"Spangenberg",ln:"Spangenberg"},5664:{sn:"Morschen",ln:"Morschen"},5665:{sn:"Guxhagen",ln:"Guxhagen"},5671:{sn:"Hofgeismar",ln:"Hofgeismar"},5672:{sn:"Bad Karlshafen",ln:"Bad Karlshafen"},5673:{sn:"Immenhausen",ln:"Immenhausen (Hessen)"},5674:{sn:"Grebenstein",ln:"Grebenstein"},5675:{sn:"Trendelburg",ln:"Trendelburg"},5676:{sn:"Liebenau",ln:"Liebenau (Hessen)"},
5677:{sn:"Calden-Westuffeln",ln:"Calden-Westuffeln"},5681:{sn:"Homberg",ln:"Homberg (Efze)"},5682:{sn:"Borken",ln:"Borken (Hessen)"},5683:{sn:"Wabern",ln:"Wabern (Hessen)"},5684:{sn:"Frielendorf",ln:"Frielendorf"},5685:{sn:"Kn\u00fcllwald",ln:"Kn\u00fcllwald"},5686:{sn:"Schwarzenborn",ln:"Schwarzenborn"},5691:{sn:"Bad Arolsen",ln:"Bad Arolsen"},5692:{sn:"Wolfhagen",ln:"Wolfhagen"},5693:{sn:"Volkmarsen",ln:"Volkmarsen"},5694:{sn:"Diemelstadt",ln:"Diemelstadt"},5695:{sn:"Twistetal",ln:"Twistetal"},
5696:{sn:"Landau",ln:"Landau (bei Arolsen)"},5702:{sn:"Lahde",ln:"Lahde (Stadt Petershagen)"},5703:{sn:"Hille",ln:"Hille"},5704:{sn:"Friedewalde",ln:"Friedewalde (Stadt Petershagen)"},5705:{sn:"Windheim",ln:"Windheim (Stadt Petershagen)"},5706:{sn:"Porta",ln:"Porta Westfalica"},5707:{sn:"Petershagen",ln:"Petershagen"},5721:{sn:"Stadthagen",ln:"Stadthagen"},5722:{sn:"B\u00fcckeburg",ln:"B\u00fcckeburg"},5723:{sn:"Bad Nenndorf",ln:"Bad Nenndorf"},5724:{sn:"Obernkirchen",ln:"Obernkirchen"},5725:{sn:"Lindhorst",
ln:"Lindhorst (bei Stadthagen)"},5726:{sn:"Wiedensahl",ln:"Wiedensahl"},5731:{sn:"Bad Oeynhausen",ln:"Bad Oeynhausen"},5732:{sn:"L\u00f6hne",ln:"L\u00f6hne"},5733:{sn:"Vlotho",ln:"Vlotho"},5734:{sn:"Bergkirchen",ln:"Bergkirchen (Westfalen) (Stadt Bad Oeynhausen)"},5741:{sn:"L\u00fcbbecke",ln:"L\u00fcbbecke"},5742:{sn:"Preu\u00dfisch Oldendorf",ln:"Preu\u00dfisch Oldendorf"},5743:{sn:"Gestringen",ln:"Gestringen (Stadt Espelkamp)"},5744:{sn:"H\u00fcllhorst",ln:"H\u00fcllhorst"},5745:{sn:"Levern",ln:"Levern (Gemeinde Stemwede)"},
5746:{sn:"R\u00f6dinghausen",ln:"R\u00f6dinghausen"},5751:{sn:"Rinteln",ln:"Rinteln"},5752:{sn:"Hattendorf",ln:"Hattendorf"},5753:{sn:"Bernsen",ln:"Bernsen"},5754:{sn:"Bremke",ln:"Bremke (Gemeinde Extertal)"},5755:{sn:"Varenholz",ln:"Varenholz (Gemeinde Kalletal)"},5761:{sn:"Stolzenau",ln:"Stolzenau"},5764:{sn:"Steyerberg",ln:"Steyerberg"},5765:{sn:"Raddestorf",ln:"Raddestorf"},5766:{sn:"Loccum",ln:"Loccum"},5767:{sn:"Warmsen",ln:"Warmsen"},5768:{sn:"Heimsen",ln:"Heimsen (Stadt Petershagen)"},5769:{sn:"Voigtei",
ln:"Voigtei"},5771:{sn:"Rahden",ln:"Rahden (Westfalen)"},5772:{sn:"Espelkamp",ln:"Espelkamp"},5773:{sn:"Wehdem",ln:"Wehdem (Gemeinde Stemwede)"},5774:{sn:"Str\u00f6hen",ln:"Str\u00f6hen"},5775:{sn:"Diepenau",ln:"Diepenau"},5776:{sn:"Preu\u00dfisch Str\u00f6hen",ln:"Preu\u00dfisch Str\u00f6hen (Stadt Rahden)"},5777:{sn:"Essern",ln:"Essern"},5802:{sn:"Wrestedt",ln:"Wrestedt"},5803:{sn:"Rosche",ln:"Rosche"},5804:{sn:"R\u00e4tzlingen",ln:"R\u00e4tzlingen"},5805:{sn:"Oetzen",ln:"Oetzen"},5806:{sn:"Barum",
ln:"Barum"},5807:{sn:"Altenmedingen",ln:"Altenmedingen"},5820:{sn:"Suhlendorf",ln:"Suhlendorf"},5821:{sn:"Bad Bevensen",ln:"Bad Bevensen"},5822:{sn:"Ebstorf",ln:"Ebstorf"},5823:{sn:"Bienenb\u00fcttel",ln:"Bienenb\u00fcttel"},5824:{sn:"Bad Bodenteich",ln:"Bad Bodenteich"},5825:{sn:"Wieren",ln:"Wieren"},5826:{sn:"Suderburg",ln:"Suderburg"},5827:{sn:"Unterl\u00fc\u00df",ln:"Unterl\u00fc\u00df"},5828:{sn:"Himbergen",ln:"Himbergen"},5829:{sn:"Wriedel",ln:"Wriedel"},5831:{sn:"Wittingen",ln:"Wittingen"},
5832:{sn:"Hankensb\u00fcttel",ln:"Hankensb\u00fcttel"},5833:{sn:"Brome",ln:"Brome"},5834:{sn:"Knesebeck",ln:"Knesebeck"},5835:{sn:"Wahrenholz",ln:"Wahrenholz"},5836:{sn:"Radenbeck",ln:"Radenbeck"},5837:{sn:"Sprakensehl",ln:"Sprakensehl"},5838:{sn:"Gro\u00df Oesingen",ln:"Gro\u00df Oesingen"},5839:{sn:"Ohrdorf",ln:"Ohrdorf"},5840:{sn:"Schnackenburg",ln:"Schnackenburg"},5841:{sn:"L\u00fcchow",ln:"L\u00fcchow"},5842:{sn:"Schnega",ln:"Schnega"},5843:{sn:"Wustrow",ln:"Wustrow (Wendland)"},5844:{sn:"Clenze",
ln:"Clenze"},5845:{sn:"Bergen",ln:"Bergen an der Dumme"},5846:{sn:"Gartow",ln:"Gartow"},5848:{sn:"Trebel",ln:"Trebel"},5849:{sn:"Waddeweitz",ln:"Waddeweitz"},5850:{sn:"Neetze",ln:"Neetze"},5851:{sn:"Dahlenburg",ln:"Dahlenburg"},5852:{sn:"Bleckede",ln:"Bleckede"},5853:{sn:"Neu",ln:"Neu Darchau"},5854:{sn:"Barskamp",ln:"Barskamp"},5855:{sn:"Nahrendorf",ln:"Nahrendorf"},5857:{sn:"Brackede",ln:"Brackede"},5858:{sn:"Wietzetze",ln:"Wietzetze"},5859:{sn:"Thomasburg",ln:"Thomasburg"},5861:{sn:"Dannenberg",
ln:"Dannenberg (Elbe)"},5862:{sn:"Hitzacker",ln:"Hitzacker"},5863:{sn:"Zernien",ln:"Zernien"},5864:{sn:"Jameln",ln:"Jameln"},5865:{sn:"Gusborn",ln:"Gusborn"},5872:{sn:"St\u00f6tze",ln:"St\u00f6tze"},5874:{sn:"Soltendieck",ln:"Soltendieck"},5875:{sn:"Emmendorf",ln:"Emmendorf"},5882:{sn:"Gorleben",ln:"Gorleben"},5883:{sn:"Lemgow",ln:"Lemgow"},5901:{sn:"F\u00fcrstenau",ln:"F\u00fcrstenau"},5902:{sn:"Freren",ln:"Freren"},5903:{sn:"Emsb\u00fcren",ln:"Emsb\u00fcren"},5904:{sn:"Lengerich",ln:"Lengerich (Emsland)"},
5905:{sn:"Beesten",ln:"Beesten"},5906:{sn:"L\u00fcnne",ln:"L\u00fcnne"},5907:{sn:"Geeste",ln:"Geeste"},5908:{sn:"Lohne",ln:"Lohne (Kreis Nordhorn)"},5909:{sn:"Wettrup",ln:"Wettrup"},5921:{sn:"Nordhorn",ln:"Nordhorn"},5922:{sn:"Bad Bentheim",ln:"Bad Bentheim"},5923:{sn:"Sch\u00fcttorf",ln:"Sch\u00fcttorf"},5924:{sn:"Gildehaus",ln:"Gildehaus"},5925:{sn:"Wietmarschen",ln:"Wietmarschen"},5926:{sn:"Engden",ln:"Engden"},5931:{sn:"Meppen",ln:"Meppen"},5932:{sn:"Haren",ln:"Haren (Ems)"},5933:{sn:"Lathen",
ln:"Lathen"},5934:{sn:"R\u00fctenbrock",ln:"R\u00fctenbrock"},5935:{sn:"Sch\u00f6ninghsdorf",ln:"Sch\u00f6ninghsdorf"},5936:{sn:"Twist",ln:"Twist"},5937:{sn:"Gro\u00df Hesepe",ln:"Gro\u00df Hesepe"},5939:{sn:"Sustrum",ln:"Sustrum"},5941:{sn:"Neuenhaus",ln:"Neuenhaus (Dinkel)"},5942:{sn:"Uelsen",ln:"Uelsen"},5943:{sn:"Emlichheim",ln:"Emlichheim"},5944:{sn:"Hoogstede",ln:"Hoogstede"},5946:{sn:"Georgsdorf",ln:"Georgsdorf"},5947:{sn:"Laar",ln:"Laar (Vechte)"},5948:{sn:"Itterbeck",ln:"Itterbeck"},5951:{sn:"Werlte",
ln:"Werlte"},5952:{sn:"S\u00f6gel",ln:"S\u00f6gel"},5954:{sn:"Lorup",ln:"Lorup"},5955:{sn:"Esterwegen",ln:"Esterwegen"},5956:{sn:"Rastdorf",ln:"Rastdorf"},5957:{sn:"Lindern",ln:"Lindern (Old.)"},5961:{sn:"Hasel\u00fcnne",ln:"Hasel\u00fcnne"},5962:{sn:"Herzlake",ln:"Herzlake"},5963:{sn:"Bawinkel",ln:"Bawinkel"},5964:{sn:"L\u00e4hden",ln:"L\u00e4hden"},5965:{sn:"Klein Ber\u00dfen",ln:"Klein Ber\u00dfen"},5966:{sn:"Apeldorn",ln:"Apeldorn"},5971:{sn:"Rheine",ln:"Rheine"},5973:{sn:"Neuenkirchen",ln:"Neuenkirchen (Kreis Steinfurt)"},
5975:{sn:"Mesum",ln:"Mesum"},5976:{sn:"Salzbergen",ln:"Salzbergen"},5977:{sn:"Spelle",ln:"Spelle"},5978:{sn:"Dreierwalde",ln:"Dreierwalde"},6002:{sn:"Ober-M\u00f6rlen",ln:"Ober-M\u00f6rlen"},6003:{sn:"Rosbach",ln:"Rosbach v.d. H\u00f6he"},6004:{sn:"Lich-Eberstadt",ln:"Lich-Eberstadt"},6007:{sn:"Rosbach-Rodheim",ln:"Rosbach-Rodheim, Friedrichsdorf-Burgholzhausen"},6008:{sn:"Echzell",ln:"Echzell"},6020:{sn:"Heigenbr\u00fccken",ln:"Heigenbr\u00fccken"},6021:{sn:"Aschaffenburg",ln:"Aschaffenburg"},6022:{sn:"Obernburg",
ln:"Obernburg"},6023:{sn:"Alzenau",ln:"Alzenau"},6024:{sn:"Sch\u00f6llkrippen",ln:"Sch\u00f6llkrippen, Kahlgrund"},6026:{sn:"Gro\u00dfostheim",ln:"Gro\u00dfostheim"},6027:{sn:"Stockstadt",ln:"Stockstadt, Kleinostheim"},6028:{sn:"Niedernberg",ln:"Niedernberg, Sulzbach"},6029:{sn:"M\u00f6mbris",ln:"M\u00f6mbris, Johannesberg"},6031:{sn:"Friedberg",ln:"Friedberg (Hessen)"},6032:{sn:"Bad Nauheim",ln:"Bad Nauheim"},6033:{sn:"Butzbach",ln:"Butzbach"},6034:{sn:"W\u00f6llstadt",ln:"W\u00f6llstadt, Niddatal, Karben-Burg-Gr\u00e4fenrode"},
6035:{sn:"Florstadt",ln:"Florstadt, Reichelsheim (Wetterau)"},6036:{sn:"W\u00f6lfersheim",ln:"W\u00f6lfersheim"},6039:{sn:"Karben",ln:"Karben"},6041:{sn:"Glauburg",ln:"Glauburg"},6042:{sn:"B\u00fcdingen",ln:"B\u00fcdingen"},6043:{sn:"Nidda",ln:"Nidda"},6044:{sn:"Schotten",ln:"Schotten"},6045:{sn:"Gedern",ln:"Gedern"},6046:{sn:"Ortenberg",ln:"Ortenberg"},6047:{sn:"Altenstadt",ln:"Altenstadt (Hessen)"},6048:{sn:"B\u00fcdingen-Eckartshausen",ln:"B\u00fcdingen-Eckartshausen"},6049:{sn:"Kefenrod",ln:"Kefenrod"},
6050:{sn:"Biebergem\u00fcnd",ln:"Biebergem\u00fcnd"},6051:{sn:"Gelnhausen",ln:"Gelnhausen, Linsengericht"},6052:{sn:"Bad Orb",ln:"Bad Orb"},6053:{sn:"W\u00e4chtersbach",ln:"W\u00e4chtersbach"},6054:{sn:"Birstein",ln:"Birstein, Brachttal"},6055:{sn:"Freigericht",ln:"Freigericht, Hasselroth"},6056:{sn:"Bad Soden-Salm\u00fcnster",ln:"Bad Soden-Salm\u00fcnster"},6057:{sn:"Fl\u00f6rsbachtal",ln:"Fl\u00f6rsbachtal"},6058:{sn:"Gr\u00fcndau",ln:"Gr\u00fcndau"},6059:{sn:"Jossgrund",ln:"Jossgrund"},6061:{sn:"Michelstadt",
ln:"Michelstadt"},6062:{sn:"Erbach",ln:"Erbach (Odenwald)"},6063:{sn:"Bad K\u00f6nig",ln:"Bad K\u00f6nig"},6066:{sn:"Michelstadt-Vielbrunn",ln:"Michelstadt-Vielbrunn"},6068:{sn:"Beerfelden",ln:"Beerfelden"},6071:{sn:"Dieburg",ln:"Dieburg"},6073:{sn:"Babenhausen",ln:"Babenhausen"},6074:{sn:"R\u00f6dermark",ln:"R\u00f6dermark, Dietzenbach"},6078:{sn:"Gro\u00df-Umstadt",ln:"Gro\u00df-Umstadt"},6081:{sn:"Usingen",ln:"Usingen, Neu-Anspach, Wehrheim"},6082:{sn:"Niederreifenberg",ln:"Niederreifenberg"},
6083:{sn:"Weilrod",ln:"Weilrod"},6084:{sn:"Schmitten",ln:"Schmitten"},6085:{sn:"Waldsolms",ln:"Waldsolms"},6086:{sn:"Gr\u00e4venwiesbach",ln:"Gr\u00e4venwiesbach"},6087:{sn:"Waldems",ln:"Waldems"},6092:{sn:"Heimbuchenthal",ln:"Heimbuchenthal"},6093:{sn:"Laufach",ln:"Laufach"},6094:{sn:"Weibersbrunn",ln:"Weibersbrunn"},6095:{sn:"Bessenbach",ln:"Bessenbach"},6096:{sn:"Wiesen",ln:"Wiesen (Unterfranken)"},6101:{sn:"Bad Vilbel",ln:"Bad Vilbel, Niederdorfelden, Frankfurt-Nieder-Erlenbach, Frankfurt-Harheim"},
6102:{sn:"Neu-Isenburg",ln:"Neu-Isenburg"},6103:{sn:"Langen",ln:"Langen, Egelsbach"},6104:{sn:"Heusenstamm",ln:"Heusenstamm, Obertshausen"},6105:{sn:"M\u00f6rfelden-Walldorf",ln:"M\u00f6rfelden-Walldorf"},6106:{sn:"Rodgau",ln:"Rodgau, Heusenstamm"},6107:{sn:"Kelsterbach",ln:"Kelsterbach"},6108:{sn:"M\u00fchlheim",ln:"M\u00fchlheim am Main"},6109:{sn:"Frankfurt-Bergen-Enkheim",ln:"Frankfurt-Bergen-Enkheim"},6120:{sn:"Aarbergen",ln:"Aarbergen"},6122:{sn:"Hofheim-Wallau",ln:"Hofheim-Wallau"},6123:{sn:"Eltville",
ln:"Eltville, Walluf"},6124:{sn:"Bad Schwalbach",ln:"Bad Schwalbach"},6126:{sn:"Idstein",ln:"Idstein"},6127:{sn:"Niedernhausen",ln:"Niedernhausen"},6128:{sn:"Taunusstein",ln:"Taunusstein"},6129:{sn:"Schlangenbad",ln:"Schlangenbad"},6130:{sn:"Schwabenheim",ln:"Schwabenheim an der Selz"},6131:{sn:"Mainz",ln:"Mainz"},6132:{sn:"Ingelheim",ln:"Ingelheim am Rhein"},6133:{sn:"Nierstein",ln:"Nierstein, Oppenheim"},6134:{sn:"Mainz-Kastel",ln:"Mainz-Kastel"},6135:{sn:"Bodenheim",ln:"Bodenheim"},6136:{sn:"Nieder-Olm",
ln:"Nieder-Olm"},6138:{sn:"Mommenheim",ln:"Mommenheim"},6139:{sn:"Budenheim",ln:"Budenheim"},6142:{sn:"R\u00fcsselsheim",ln:"R\u00fcsselsheim, Raunheim"},6144:{sn:"Bischofsheim",ln:"Bischofsheim (Mainspitze)"},6145:{sn:"Fl\u00f6rsheim",ln:"Fl\u00f6rsheim am Main"},6146:{sn:"Hochheim",ln:"Hochheim am Main"},6147:{sn:"Trebur",ln:"Trebur"},6150:{sn:"Weiterstadt",ln:"Weiterstadt, Erzhausen, Darmstadt-Wixhausen"},6151:{sn:"Darmstadt",ln:"Darmstadt"},6152:{sn:"Gro\u00df-Gerau",ln:"Gro\u00df-Gerau, B\u00fcttelborn"},
6154:{sn:"Ober-Ramstadt",ln:"Ober-Ramstadt"},6155:{sn:"Griesheim",ln:"Griesheim (Hessen)"},6157:{sn:"Pfungstadt",ln:"Pfungstadt"},6158:{sn:"Riedstadt",ln:"Riedstadt"},6159:{sn:"Messel",ln:"Messel"},6161:{sn:"Brensbach",ln:"Brensbach"},6162:{sn:"Gro\u00df-Bieberau",ln:"Gro\u00df-Bieberau, Reinheim"},6163:{sn:"H\u00f6chst",ln:"H\u00f6chst im Odenwald"},6164:{sn:"Reichelsheim",ln:"Reichelsheim (Odenwald)"},6165:{sn:"Breuberg",ln:"Breuberg"},6166:{sn:"Fischbachtal",ln:"Fischbachtal"},6167:{sn:"Modautal",
ln:"Modautal"},6171:{sn:"Oberursel",ln:"Oberursel"},6172:{sn:"Bad Homburg",ln:"Bad Homburg"},6173:{sn:"Kronberg",ln:"Kronberg im Taunus"},6174:{sn:"K\u00f6nigstein",ln:"K\u00f6nigstein im Taunus"},6175:{sn:"Friedrichsdorf",ln:"Friedrichsdorf (Taunus)"},6181:{sn:"Hanau",ln:"Hanau"},6182:{sn:"Seligenstadt",ln:"Seligenstadt"},6183:{sn:"Erlensee",ln:"Erlensee"},6184:{sn:"Langenselbold",ln:"Langenselbold, Rodenbach (bei Hanau)"},6185:{sn:"Hammersbach",ln:"Hammersbach (Hessen)"},6186:{sn:"Gro\u00dfkrotzenburg",
ln:"Gro\u00dfkrotzenburg"},6187:{sn:"Nidderau",ln:"Nidderau, Sch\u00f6neck (Hessen)"},6190:{sn:"Hattersheim",ln:"Hattersheim am Main"},6192:{sn:"Hofheim",ln:"Hofheim am Taunus, Kriftel"},6195:{sn:"Kelkheim",ln:"Kelkheim"},6196:{sn:"Bad Soden",ln:"Bad Soden am Taunus, Eschborn, Liederbach am Taunus, Schwalbach am Taunus, Sulzbach"},6198:{sn:"Eppstein",ln:"Eppstein"},6201:{sn:"Birkenau",ln:"Birkenau, Gorxheimertal, Hemsbach, Hirschberg an der Bergstra\u00dfe, Laudenbach, Weinheim"},6202:{sn:"Br\u00fchl",
ln:"Br\u00fchl, Ketsch, Oftersheim, Plankstadt, Schwetzingen"},6203:{sn:"Edingen-Neckarhausen",ln:"Edingen-Neckarhausen, Heddesheim, Ladenburg, Schriesheim"},6204:{sn:"Viernheim",ln:"Viernheim"},6205:{sn:"Altlu\u00dfheim",ln:"Altlu\u00dfheim, Hockenheim, Neulu\u00dfheim, Reilingen"},6206:{sn:"B\u00fcrstadt",ln:"B\u00fcrstadt, Lampertheim"},6207:{sn:"Wald-Michelbach",ln:"Wald-Michelbach"},6209:{sn:"M\u00f6rlenbach",ln:"M\u00f6rlenbach"},6220:{sn:"Heiligkreuzsteinach",ln:"Heiligkreuzsteinach, Wilhelmsfeld"},
6221:{sn:"Heidelberg",ln:"Heidelberg, Dossenheim, Eppelheim"},6222:{sn:"Dielheim",ln:"Dielheim, M\u00fchlhausen, Rauenberg, Wiesloch"},6223:{sn:"Bammental",ln:"Bammental, Gaiberg, Neckargem\u00fcnd, Wiesenbach"},6224:{sn:"Leimen",ln:"Leimen, Nu\u00dfloch, Sandhausen"},6226:{sn:"Eschelbronn",ln:"Eschelbronn, Lobbach, Mauer, Meckesheim, Spechbach, Zuzenhausen"},6227:{sn:"St. Leon-Rot",ln:"St. Leon-Rot, Walldorf"},6228:{sn:"Sch\u00f6nau",ln:"Sch\u00f6nau"},6229:{sn:"Neckarsteinach",ln:"Neckarsteinach"},
6231:{sn:"Hochdorf-Assenheim",ln:"Hochdorf-Assenheim"},6232:{sn:"Speyer",ln:"Speyer"},6233:{sn:"Frankenthal",ln:"Frankenthal"},6234:{sn:"Mutterstadt",ln:"Mutterstadt"},6235:{sn:"Schifferstadt",ln:"Schifferstadt"},6236:{sn:"Limburgerhof",ln:"Limburgerhof, Neuhofen"},6237:{sn:"Ludwigshafen-Ruchheim",ln:"Ludwigshafen-Ruchheim, Maxdorf"},6238:{sn:"Gerolsheim",ln:"Gerolsheim"},6239:{sn:"Bobenheim-Roxheim",ln:"Bobenheim-Roxheim"},6241:{sn:"Worms",ln:"Worms"},6242:{sn:"Worms-Abenheim",ln:"Worms-Abenheim"},
6245:{sn:"Biblis",ln:"Biblis"},6247:{sn:"Worms-Pfeddersheim",ln:"Worms-Pfeddersheim"},6251:{sn:"Bensheim",ln:"Bensheim"},6252:{sn:"Heppenheim",ln:"Heppenheim"},6253:{sn:"F\u00fcrth",ln:"F\u00fcrth"},6254:{sn:"Lautertal",ln:"Lautertal"},6255:{sn:"Lindenfels",ln:"Lindenfels"},6256:{sn:"Lampertheim-H\u00fcttenfeld",ln:"Lampertheim-H\u00fcttenfeld"},6257:{sn:"Seeheim-Jugenheim",ln:"Seeheim-Jugenheim"},6258:{sn:"Gernsheim",ln:"Gernsheim"},6261:{sn:"Elztal",ln:"Elztal, Mosbach, Neckarzimmern, Obrigheim"},
6262:{sn:"Aglasterhausen",ln:"Aglasterhausen, Neunkirchen, Reichartshausen, Sch\u00f6nbrunn, Schwarzach"},6263:{sn:"Neckargerach",ln:"Neckargerach, Binau"},6264:{sn:"Neudenau",ln:"Neudenau"},6265:{sn:"Billigheim",ln:"Billigheim"},6266:{sn:"Ha\u00dfmersheim",ln:"Ha\u00dfmersheim"},6267:{sn:"Fahrenbach",ln:"Fahrenbach"},6268:{sn:"H\u00fcffenhardt",ln:"H\u00fcffenhardt"},6271:{sn:"Eberbach",ln:"Eberbach"},6272:{sn:"Hirschhorn",ln:"Hirschhorn (Neckar)"},6274:{sn:"Waldbrunn",ln:"Waldbrunn"},6275:{sn:"Rothenberg",
ln:"Rothenberg"},6276:{sn:"Hesseneck",ln:"Hesseneck"},6281:{sn:"Buchen",ln:"Buchen (Odenwald)"},6282:{sn:"Walld\u00fcrn",ln:"Walld\u00fcrn"},6283:{sn:"Hardheim",ln:"Hardheim, H\u00f6pfingen"},6284:{sn:"Mudau",ln:"Mudau"},6285:{sn:"Walld\u00fcrn-Altheim",ln:"Walld\u00fcrn-Altheim"},6286:{sn:"Walld\u00fcrn-Rippberg",ln:"Walld\u00fcrn-Rippberg"},6287:{sn:"Limbach",ln:"Limbach"},6291:{sn:"Adelsheim",ln:"Adelsheim, Osterburken"},6292:{sn:"Seckach",ln:"Seckach"},6293:{sn:"Schefflenz",ln:"Schefflenz"},6295:{sn:"Rosenberg",
ln:"Rosenberg"},6297:{sn:"Ravenstein",ln:"Ravenstein"},6298:{sn:"M\u00f6ckm\u00fchl",ln:"M\u00f6ckm\u00fchl"},6301:{sn:"Otterbach",ln:"Otterbach"},6302:{sn:"Winnweiler",ln:"Winnweiler"},6303:{sn:"Enkenbach-Alsenborn",ln:"Enkenbach-Alsenborn, Mehlingen"},6307:{sn:"Geiselberg",ln:"Geiselberg, Krickenbach, Linden, Schmalenberg, Schopp"},6321:{sn:"Neustadt",ln:"Neustadt an der Weinstra\u00dfe"},6322:{sn:"Bad D\u00fcrkheim",ln:"Bad D\u00fcrkheim"},6323:{sn:"Edenkoben",ln:"Edenkoben, Edesheim, Flemlingen, Gro\u00dffischlingen, Hainfeld (Pfalz), Rhodt unter Rietburg, Roschbach, Sankt Martin (Pfalz), Venningen, Weyher in der Pfalz"},
6327:{sn:"Lachen-Speyerdorf",ln:"Lachen-Speyerdorf"},6331:{sn:"H\u00f6heischweiler",ln:"H\u00f6heischweiler, Pirmasens"},6333:{sn:"Clausen",ln:"Clausen, Donsieders, Heltersberg, Hermersberg, H\u00f6hein\u00f6d, Horbach, Steinalben, Waldfischbach-Burgalben, Weselberg"},6334:{sn:"H\u00f6hfr\u00f6schen",ln:"H\u00f6hfr\u00f6schen, Ma\u00dfweiler, Petersberg, Thaleischweiler-Fr\u00f6schen"},6336:{sn:"N\u00fcnschweiler",ln:"N\u00fcnschweiler, Rieschweiler-M\u00fchlbach"},6340:{sn:"Dierbach",ln:"Dierbach, Freckenfeld, Kapsweyer, Niederotterbach, Steinfeld (Pfalz), Vollmersweiler, W\u00f6rth-Schaidt"},
6341:{sn:"Landau",ln:"Landau in der Pfalz"},6342:{sn:"Schweigen-Rechtenbach",ln:"Schweigen-Rechtenbach"},6343:{sn:"Bad Bergzabern",ln:"Bad Bergzabern"},6344:{sn:"Schwegenheim",ln:"Schwegenheim"},6345:{sn:"Albersweiler",ln:"Albersweiler"},6346:{sn:"Annweiler",ln:"Annweiler am Trifels"},6347:{sn:"Hochstadt",ln:"Hochstadt (Pfalz)"},6348:{sn:"Offenbach",ln:"Offenbach an der Queich"},6349:{sn:"Billigheim-Ingenheim",ln:"Billigheim-Ingenheim"},6351:{sn:"Eisenberg",ln:"Eisenberg, G\u00f6llheim"},6352:{sn:"Kirchheimbolanden",
ln:"Kirchheimbolanden"},6353:{sn:"Freinsheim",ln:"Freinsheim, Weisenheim am Sand, Dackenheim, Bobenheim am Berg, Erpolzheim, Herxheim am Berg, Weisenheim am Berg"},6359:{sn:"Gr\u00fcnstadt",ln:"Gr\u00fcnstadt"},6371:{sn:"Landstuhl",ln:"Landstuhl, Obernheim-Kirchenarnbach"},6372:{sn:"Bruchm\u00fchlbach-Miesau",ln:"Bruchm\u00fchlbach-Miesau"},6373:{sn:"Waldmohr",ln:"Waldmohr, Sch\u00f6nenberg-K\u00fcbelberg"},6374:{sn:"Weilerbach",ln:"Weilerbach"},6375:{sn:"Biedershausen",ln:"Biedershausen, Herschberg, Hettenhausen, Knopp-Labach, Reifenberg, Saalstadt, Schauerberg, Schmitshausen, Wallhalben"},
6385:{sn:"Reichenbach-Steegen",ln:"Reichenbach-Steegen, Albersbach"},6400:{sn:"M\u00fccke",ln:"M\u00fccke"},6401:{sn:"Gr\u00fcnberg",ln:"Gr\u00fcnberg"},6403:{sn:"Langg\u00f6ns",ln:"Langg\u00f6ns, Linden"},6404:{sn:"Fernwald",ln:"Fernwald, Lich"},6405:{sn:"Laubach",ln:"Laubach"},6406:{sn:"Lollar",ln:"Lollar, Staufenberg"},6407:{sn:"Rabenau",ln:"Rabenau"},6408:{sn:"Buseck",ln:"Buseck, Reiskirchen"},6409:{sn:"Biebertal",ln:"Biebertal"},6420:{sn:"Lahntal",ln:"Lahntal (teilw.)"},6421:{sn:"Marburg",ln:"Marburg, Weimar (Lahn) (teilw.), C\u00f6lbe (teilw.)"},
6422:{sn:"Kirchhain",ln:"Kirchhain, Am\u00f6neburg"},6423:{sn:"Wetter",ln:"Wetter, Lahntal (teilw.), M\u00fcnchhausen (teilw.)"},6424:{sn:"Ebsdorfergrund",ln:"Ebsdorfergrund"},6425:{sn:"Rauschenberg",ln:"Rauschenberg"},6426:{sn:"Weimar",ln:"Weimar (Lahn) (teilw.), Fronhausen"},6427:{sn:"C\u00f6lbe",ln:"C\u00f6lbe (teilw.)"},6428:{sn:"Stadtallendorf",ln:"Stadtallendorf (teilw.)"},6429:{sn:"Stadtallendorf",ln:"Stadtallendorf (teilw.)"},6431:{sn:"Limburg",ln:"Limburg an der Lahn, Runkel"},6432:{sn:"Diez",
ln:"Diez"},6433:{sn:"Hadamar",ln:"Hadamar"},6434:{sn:"Bad Camberg",ln:"Bad Camberg"},6435:{sn:"Wallmerod",ln:"Wallmerod"},6436:{sn:"Dornburg",ln:"Dornburg (Hessen)"},6438:{sn:"H\u00fcnfelden",ln:"H\u00fcnfelden"},6439:{sn:"Holzappel",ln:"Holzappel"},6441:{sn:"Wetzlar",ln:"Wetzlar"},6442:{sn:"Braunfels",ln:"Braunfels"},6443:{sn:"Ehringshausen",ln:"Ehringshausen"},6444:{sn:"Bischoffen",ln:"Bischoffen"},6445:{sn:"Sch\u00f6ffengrund",ln:"Sch\u00f6ffengrund"},6446:{sn:"Hohenahr",ln:"Hohenahr"},6447:{sn:"Langg\u00f6ns-Niederkleen",
ln:"Langg\u00f6ns-Niederkleen"},6449:{sn:"Ehringshausen-Katzenfurt",ln:"Ehringshausen-Katzenfurt"},6451:{sn:"Frankenberg",ln:"Frankenberg (Eder)"},6452:{sn:"Battenberg",ln:"Battenberg"},6454:{sn:"Wohratal",ln:"Wohratal"},6457:{sn:"Burgwald",ln:"Burgwald, M\u00fcnchhausen (teilw.)"},6461:{sn:"Biedenkopf",ln:"Biedenkopf"},6462:{sn:"Gladenbach",ln:"Gladenbach, Lohra"},6464:{sn:"Angelburg",ln:"Angelburg, Steffenberg"},6465:{sn:"Breidenbach",ln:"Breidenbach"},6466:{sn:"Dautphetal",ln:"Dautphetal (teilw.)"},
6467:{sn:"Hatzfeld",ln:"Hatzfeld (Eder)"},6468:{sn:"Dautphetal",ln:"Dautphetal (teilw.)"},6471:{sn:"Weilburg",ln:"Weilburg an der Lahn"},6472:{sn:"Weilm\u00fcnster",ln:"Weilm\u00fcnster"},6473:{sn:"Leun",ln:"Leun"},6474:{sn:"Villmar",ln:"Villmar"},6476:{sn:"Mengerskirchen",ln:"Mengerskirchen"},6477:{sn:"Greifenstein-Nenderoth",ln:"Greifenstein-Nenderoth"},6478:{sn:"Greifenstein-Ulm",ln:"Greifenstein-Ulm"},6479:{sn:"Waldbrunn",ln:"Waldbrunn (Westerwald)"},6482:{sn:"Runkel",ln:"Runkel"},6483:{sn:"Selters",
ln:"Selters (Taunus)"},6484:{sn:"Beselich",ln:"Beselich"},6485:{sn:"Nentershausen",ln:"Nentershausen (Westerwald)"},6486:{sn:"Katzenelnbogen",ln:"Katzenelnbogen"},6501:{sn:"Konz",ln:"Konz"},6502:{sn:"Schweich",ln:"Schweich"},6531:{sn:"Bernkastel-Kues",ln:"Bernkastel-Kues"},6533:{sn:"Morbach",ln:"Morbach"},6535:{sn:"Maring-Noviand",ln:"Maring-Noviand, Osann-Monzel"},6541:{sn:"Traben-Trarbach",ln:"Traben-Trarbach"},6544:{sn:"Rhaunen",ln:"Rhaunen"},6551:{sn:"Pr\u00fcm",ln:"Pr\u00fcm"},6561:{sn:"Bitburg",
ln:"Bitburg"},6571:{sn:"Wittlich",ln:"Wittlich"},6581:{sn:"Saarburg",ln:"Saarburg"},6588:{sn:"Pluwig",ln:"Pluwig"},6591:{sn:"Gerolstein",ln:"Gerolstein"},6592:{sn:"Daun",ln:"Daun"},6622:{sn:"Bebra",ln:"Bebra"},6641:{sn:"Lauterbach",ln:"Lauterbach (Hessen)"},6642:{sn:"Schlitz",ln:"Schlitz"},6643:{sn:"Herbstein",ln:"Herbstein, Lautertal"},6644:{sn:"Grebenhain",ln:"Grebenhain"},6645:{sn:"Ulrichstein",ln:"Ulrichstein"},6647:{sn:"Herbstein-Stockhausen",ln:"Herbstein-Stockhausen"},6648:{sn:"Bad Salzschlirf",
ln:"Bad Salzschlirf, Gro\u00dfenl\u00fcder"},6656:{sn:"Ebersburg",ln:"Ebersburg"},6657:{sn:"Hofbieber",ln:"Hofbieber"},6658:{sn:"Poppenhausen",ln:"Poppenhausen (Wasserkuppe)"},6661:{sn:"Schl\u00fcchtern",ln:"Schl\u00fcchtern"},6692:{sn:"Neustadt",ln:"Neustadt"},6721:{sn:"Bingen",ln:"Bingen"},6722:{sn:"R\u00fcdesheim",ln:"R\u00fcdesheim, Geisenheim, Johannisberg, Marienthal, Stephanshausen, Aulhausen, Assmannshausen"},6723:{sn:"Oestrich-Winkel",ln:"Oestrich-Winkel, Mittelheim"},6724:{sn:"Stromberg",
ln:"Stromberg Hunsr\u00fcck"},6725:{sn:"Gau-Algesheim",ln:"Gau-Algesheim"},6726:{sn:"Lorch",ln:"Lorch (Rheingau)"},6727:{sn:"Gensingen",ln:"Gensingen"},6728:{sn:"Ober-Hilbersheim",ln:"Ober-Hilbersheim"},6731:{sn:"Alzey",ln:"Alzey"},6732:{sn:"Udenheim",ln:"Udenheim"},6733:{sn:"Gau-Odernheim",ln:"Gau-Odernheim"},6746:{sn:"Pfalzfeld",ln:"Pfalzfeld"},6747:{sn:"Emmelshausen",ln:"Emmelshausen"},6751:{sn:"Bad Sobernheim",ln:"Bad Sobernheim"},6752:{sn:"Kirn",ln:"Kirn"},6753:{sn:"Odenbach",ln:"Odenbach, Meisenheim"},
6754:{sn:"Martinstein",ln:"Martinstein"},6755:{sn:"Odernheim",ln:"Odernheim am Glan"},6756:{sn:"Winterbach",ln:"Winterbach (Soonwald)"},6757:{sn:"Becherbach",ln:"Becherbach"},6758:{sn:"Waldb\u00f6ckelheim",ln:"Waldb\u00f6ckelheim"},6761:{sn:"Simmern",ln:"Simmern (Hunsr\u00fcck)"},6781:{sn:"Idar-Oberstein",ln:"Idar-Oberstein"},6784:{sn:"Idar-Oberstein",ln:"Idar-Oberstein (East)"},6821:{sn:"Neunkirchen",ln:"Neunkirchen (Saar)"},6824:{sn:"Ottweiler",ln:"Ottweiler"},6825:{sn:"Illingen",ln:"Illingen (Saar)"},
6826:{sn:"Bexbach",ln:"Bexbach"},6831:{sn:"Saarlouis",ln:"Saarlouis, Dillingen"},6832:{sn:"Beckingen-Reimsbach",ln:"Beckingen-Reimsbach"},6833:{sn:"Rehlingen-Siersburg",ln:"Rehlingen-Siersburg"},6834:{sn:"Wadgassen",ln:"Wadgassen"},6835:{sn:"Beckingen",ln:"Beckingen"},6836:{sn:"\u00dcberherrn",ln:"\u00dcberherrn"},6837:{sn:"Wallerfangen",ln:"Wallerfangen"},6838:{sn:"Saarwellingen",ln:"Saarwellingen"},6841:{sn:"Homburg",ln:"Homburg (Saar)"},6842:{sn:"Blieskastel",ln:"Blieskastel"},6849:{sn:"Kirkel",
ln:"Kirkel"},6851:{sn:"St. Wendel",ln:"St. Wendel"},6853:{sn:"Marpingen",ln:"Marpingen"},6855:{sn:"Freisen",ln:"Freisen"},6857:{sn:"Namborn",ln:"Namborn"},6861:{sn:"Merzig",ln:"Merzig"},6864:{sn:"Mettlach",ln:"Mettlach"},6871:{sn:"Wadern",ln:"Wadern"},6872:{sn:"Losheim",ln:"Losheim am See"},6876:{sn:"Weiskirchen",ln:"Weiskirchen"},6881:{sn:"Lebach",ln:"Lebach, Eppelborn"},6887:{sn:"Schmelz",ln:"Schmelz (Saar)"},6894:{sn:"St. Ingbert",ln:"St. Ingbert"},6897:{sn:"Dudweiler",ln:"Dudweiler, Sulzbach"},
6898:{sn:"V\u00f6lklingen",ln:"V\u00f6lklingen"},7021:{sn:"Kirchheim",ln:"Kirchheim unter Teck, Dettingen unter Teck, Notzingen, Owen, Schlierbach"},7022:{sn:"N\u00fcrtingen",ln:"N\u00fcrtingen, Frickenhausen, Gro\u00dfbettlingen, Oberboihingen, Unterensingen, Wolfschlugen"},7023:{sn:"Weilheim",ln:"Weilheim an der Teck, Bissingen an der Teck, Holzmaden, Neidlingen, Ohmden"},7024:{sn:"Wendlingen",ln:"Wendlingen am Neckar, K\u00f6ngen"},7025:{sn:"Neuffen",ln:"Neuffen, Beuren, Frickenhausen-Linsenhofen, Kohlberg"},
7026:{sn:"Lenningen",ln:"Lenningen, Erkenbrechtsweiler"},7031:{sn:"B\u00f6blingen",ln:"B\u00f6blingen, Altdorf, Holzgerlingen, Sch\u00f6naich, Sindelfingen"},7032:{sn:"Herrenberg",ln:"Herrenberg, Ammerbuch, G\u00e4ufelden, Jettingen, Nufringen"},7033:{sn:"Weil",ln:"Weil der Stadt, Grafenau, Heimsheim, Ostelsheim, Simmozheim"},7034:{sn:"Ehningen",ln:"Ehningen, Aidlingen, G\u00e4rtringen, Hildrizhausen"},7041:{sn:"M\u00fchlacker",ln:"M\u00fchlacker, \u00d6tisheim, Wiernsheim"},7042:{sn:"Vaihingen",
ln:"Vaihingen an der Enz, Eberdingen, Illingen, M\u00fchlacker, Oberriexingen, Sersheim"},7043:{sn:"Maulbronn",ln:"Maulbronn, Illingen, Knittlingen, \u00d6lbronn-D\u00fcrrn, Sternenfels"},7044:{sn:"M\u00f6nsheim",ln:"M\u00f6nsheim, Friolzheim, Heimsheim, Weissach, Wiernsheim, Wimsheim, Wurmberg"},7045:{sn:"Oberderdingen",ln:"Oberderdingen, Sternenfels"},7046:{sn:"Zaberfeld",ln:"Zaberfeld, Pfaffenhofen, Sachsenheim"},7051:{sn:"Calw",ln:"Calw, Althengstett, Bad Teinach-Zavelstein, Oberreichenbach"},
7052:{sn:"Bad Liebenzell",ln:"Bad Liebenzell"},7053:{sn:"Bad Teinach-Zavelstein",ln:"Bad Teinach-Zavelstein, Calw, Neubulach, Oberreichenbach"},7054:{sn:"Wildberg",ln:"Wildberg, Ebhausen"},7055:{sn:"Neuweiler",ln:"Neuweiler, Bad Wildbad, Neubulach"},7056:{sn:"Gechingen",ln:"Gechingen, Aidlingen, Deckenpfronn, Wildberg"},7062:{sn:"Beilstein",ln:"Beilstein, Abstatt, Ilsfeld, Neckarwestheim, Oberstenfeld"},7063:{sn:"Bad Wimpfen",ln:"Bad Wimpfen"},7066:{sn:"Bad Rappenau",ln:"Bad Rappenau, Heilbronn"},
7071:{sn:"T\u00fcbingen",ln:"T\u00fcbingen, Kusterdingen"},7072:{sn:"Gomaringen",ln:"Gomaringen, Du\u00dflingen, Kusterdingen-Immenhausen, Reutlingen-Bronnweiler, Reutlingen-G\u00f6nningen"},7073:{sn:"Ammerbuch",ln:"Ammerbuch, Rottenburg am Neckar, T\u00fcbingen-Unterjesingen"},7081:{sn:"Bad Wildbad",ln:"Bad Wildbad, Dobel, H\u00f6fen an der Enz"},7082:{sn:"Neuenb\u00fcrg",ln:"Neuenb\u00fcrg, Birkenfeld, Engelsbrand, Keltern, Straubenhardt"},7083:{sn:"Bad Herrenalb",ln:"Bad Herrenalb, Dobel, Loffenau"},
7084:{sn:"Sch\u00f6mberg",ln:"Sch\u00f6mberg im Schwarzwald, Bad Liebenzell, Oberreichenbach"},7085:{sn:"Enzkl\u00f6sterle",ln:"Enzkl\u00f6sterle, Bad Wildbad"},7121:{sn:"Reutlingen",ln:"Reutlingen, Eningen unter Achalm, Kirchentellinsfurt, Pfullingen, Wannweil"},7122:{sn:"St. Johann",ln:"St. Johann, Lichtenstein"},7123:{sn:"Metzingen",ln:"Metzingen, Bempflingen, Dettingen an der Erms, Frickenhausen-Tischardt, Grafenberg, Neuffen-Kappish\u00e4usern, Riederich"},7124:{sn:"Trochtelfingen",ln:"Trochtelfingen, Burladingen-H\u00f6rschwag, Gammertingen"},
7125:{sn:"Bad Urach",ln:"Bad Urach, H\u00fclben"},7126:{sn:"Burladingen-Melchingen",ln:"Burladingen-Melchingen, Burladingen-Salmendingen, Burladingen-Stetten"},7127:{sn:"Neckartenzlingen",ln:"Neckartenzlingen, Aichtal, Altdorf, Altenriet, Neckartailfingen, Pliezhausen, Reutlingen-Mittelstadt, Schlaitdorf, Walddorfh\u00e4slach"},7128:{sn:"Sonnenb\u00fchl",ln:"Sonnenb\u00fchl"},7129:{sn:"Lichtenstein",ln:"Lichtenstein, Engstingen"},7130:{sn:"L\u00f6wenstein",ln:"L\u00f6wenstein, Beilstein, Obersulm, Untergruppenbach, W\u00fcstenrot"},
7131:{sn:"Heilbronn",ln:"Heilbronn, Flein, Leingarten, Untergruppenbach"},7132:{sn:"Neckarsulm",ln:"Neckarsulm, Erlenbach, Oedheim, Untereisesheim"},7133:{sn:"Lauffen",ln:"Lauffen am Neckar, Ilsfeld, Neckarwestheim, Nordheim, Talheim"},7134:{sn:"Weinsberg",ln:"Weinsberg, Eberstadt, Ellhofen, Lehrensteinsfeld, Obersulm"},7135:{sn:"Brackenheim",ln:"Brackenheim, Cleebronn, G\u00fcglingen, Nordheim"},7136:{sn:"Bad Friedrichshall",ln:"Bad Friedrichshall, Gundelsheim, Oedheim, Offenau"},7138:{sn:"Schwaigern",
ln:"Schwaigern, Eppingen, Massenbachhausen"},7139:{sn:"Hardthausen",ln:"Hardthausen am Kocher, Langenbrettach, Neuenstadt am Kocher, Oedheim"},7141:{sn:"Ludwigsburg",ln:"Ludwigsburg, Asperg, Freiberg am Neckar, Kornwestheim, M\u00f6glingen, Remseck am Neckar, Tamm"},7142:{sn:"Bietigheim-Bissingen",ln:"Bietigheim-Bissingen, Ingersheim"},7143:{sn:"Besigheim",ln:"Besigheim, B\u00f6nnigheim, Erligheim, Freudental, Gemmrigheim, Hessigheim, Kirchheim am Neckar, L\u00f6chgau, Mundelsheim, Walheim"},7144:{sn:"Marbach",
ln:"Marbach am Neckar, Affalterbach, Benningen am Neckar, Erdmannhausen, Kirchberg an der Murr, Ludwigsburg, Murr, Pleidelsheim, Steinheim an der Murr"},7145:{sn:"Markgr\u00f6ningen",ln:"Markgr\u00f6ningen"},7146:{sn:"Remseck",ln:"Remseck am Neckar, Waiblingen"},7147:{sn:"Sachsenheim",ln:"Sachsenheim, Bietigheim-Bissingen, Markgr\u00f6ningen"},7148:{sn:"Gro\u00dfbottwar",ln:"Gro\u00dfbottwar, Aspach, Steinheim an der Murr"},7150:{sn:"M\u00fcnchingen",ln:"M\u00fcnchingen, Hemmingen, Schwieberdingen"},
7151:{sn:"Waiblingen",ln:"Waiblingen, Kernen im Remstal, Korb, Remshalden, Weinstadt"},7152:{sn:"Leonberg",ln:"Leonberg, Ditzingen, Rutesheim"},7153:{sn:"Plochingen",ln:"Plochingen, Altbach, Baltmannsweiler, Deizisau, Hochdorf, Lichtenwald, Reichenbach an der Fils, Wernau"},7154:{sn:"Kornwestheim",ln:"Kornwestheim"},7156:{sn:"Ditzingen",ln:"Ditzingen, Gerlingen"},7157:{sn:"Waldenbuch",ln:"Waldenbuch, Dettenhausen, Steinenbronn, Weil im Sch\u00f6nbuch"},7158:{sn:"Neuhausen",ln:"Neuhausen auf den Fildern, Filderstadt-Harthausen, Filderstadt-Sielmingen, Ostfildern-Scharnhausen"},
7159:{sn:"Renningen",ln:"Renningen, Magstadt"},7161:{sn:"G\u00f6ppingen",ln:"G\u00f6ppingen, Albershausen, Birenbach, B\u00f6rtlingen, Eislingen/Fils, Eschenbach, Heiningen, Rechberghausen, Schlat, Uhingen, Wangen"},7162:{sn:"S\u00fc\u00dfen",ln:"S\u00fc\u00dfen, Donzdorf, Gingen an der Fils, Salach, Waldstetten"},7163:{sn:"Ebersbach",ln:"Ebersbach an der Fils, Uhingen"},7164:{sn:"Boll",ln:"Boll, Aichelberg, D\u00fcrnau, Gammelshausen, Hattenhofen, Zell unter Aichelberg"},7165:{sn:"G\u00f6ppingen-Hohenstaufen",
ln:"G\u00f6ppingen-Hohenstaufen, Eislingen/Fils, G\u00f6ppingen-Hohrein, Ottenbach"},7166:{sn:"Adelberg",ln:"Adelberg"},7171:{sn:"Schw\u00e4bisch Gm\u00fcnd",ln:"Schw\u00e4bisch Gm\u00fcnd, Alfdorf-Adelstetten, Mutlangen, Waldstetten"},7172:{sn:"Lorch",ln:"Lorch, Adelberg, Alfdorf, B\u00f6rtlingen, W\u00e4schenbeuren"},7173:{sn:"Heubach",ln:"Heubach, Bartholom\u00e4, B\u00f6bingen an der Rems, Schw\u00e4bisch Gm\u00fcnd-Bargau"},7174:{sn:"M\u00f6gglingen",ln:"M\u00f6gglingen, Heuchlingen"},7175:{sn:"Leinzell",
ln:"Leinzell, Eschach, G\u00f6ggingen, Iggingen, Schechingen, T\u00e4ferrot"},7176:{sn:"Spraitbach",ln:"Spraitbach, Alfdorf, Durlangen, Ruppertshofen, T\u00e4ferrot"},7181:{sn:"Schorndorf",ln:"Schorndorf, Berglen, Pl\u00fcderhausen, Remshalden, Urbach, Winterbach"},7182:{sn:"Welzheim",ln:"Welzheim, Alfdorf, Kaisersbach, Pl\u00fcderhausen"},7183:{sn:"Rudersberg",ln:"Rudersberg, Alth\u00fctte"},7184:{sn:"Kaisersbach",ln:"Kaisersbach, Murrhardt"},7191:{sn:"Backnang",ln:"Backnang, Allmersbach im Tal, Aspach, Auenwald, Burgstetten, Oppenweiler, Weissach im Tal"},
7192:{sn:"Murrhardt",ln:"Murrhardt, Alth\u00fctte, Auenwald, Gro\u00dferlach"},7193:{sn:"Sulzbach",ln:"Sulzbach an der Murr, Gro\u00dferlach, Oppenweiler"},7194:{sn:"Spiegelberg",ln:"Spiegelberg, Oberstenfeld, W\u00fcstenrot"},7195:{sn:"Winnenden",ln:"Winnenden, Berglen, Leutenbach, Schwaikheim"},7202:{sn:"Karlsbad",ln:"Karlsbad"},7203:{sn:"Walzbachtal",ln:"Walzbachtal"},7204:{sn:"Malsch-V\u00f6lkersbach",ln:"Malsch-V\u00f6lkersbach, Gaggenau, Malsch"},7220:{sn:"Forbach",ln:"Forbach, Ottersweier"},
7221:{sn:"Baden-Baden",ln:"Baden-Baden, Sinzheim"},7222:{sn:"Rastatt",ln:"Rastatt, Bischweier, Gaggenau, Kuppenheim, Muggensturm, \u00d6tigheim, Steinmauern"},7223:{sn:"B\u00fchl",ln:"B\u00fchl, Baden-Baden, B\u00fchlertal, Ottersweier, Sinzheim"},7224:{sn:"Gernsbach",ln:"Gernsbach, Gaggenau, Weisenbach"},7225:{sn:"Gaggenau",ln:"Gaggenau, Kuppenheim"},7226:{sn:"B\u00fchl",ln:"B\u00fchl, B\u00fchlertal, Forbach, Ottersweier, Sasbach"},7227:{sn:"Lichtenau",ln:"Lichtenau (Baden), B\u00fchl, Rheinau, Rheinm\u00fcnster"},
7228:{sn:"Forbach",ln:"Forbach"},7229:{sn:"Iffezheim",ln:"Iffezheim, H\u00fcgelsheim, Rastatt"},7231:{sn:"Pforzheim",ln:"Pforzheim, Birkenfeld, Ispringen, K\u00e4mpfelbach, Kieselbronn"},7232:{sn:"K\u00f6nigsbach-Stein",ln:"K\u00f6nigsbach-Stein, Eisingen, K\u00e4mpfelbach, Remchingen"},7233:{sn:"Niefern-\u00d6schelbronn",ln:"Niefern-\u00d6schelbronn"},7234:{sn:"Tiefenbronn",ln:"Tiefenbronn, Neuhausen, Pforzheim"},7235:{sn:"Unterreichenbach",ln:"Unterreichenbach, Engelsbrand, Sch\u00f6mberg im Schwarzwald"},
7236:{sn:"Keltern",ln:"Keltern"},7237:{sn:"Neulingen",ln:"Neulingen, \u00d6lbronn-D\u00fcrrn"},7240:{sn:"Pfinztal",ln:"Pfinztal nur S\u00f6llingen, Kleinsteinbach, W\u00f6schbach"},7242:{sn:"Rheinstetten",ln:"Rheinstetten"},7243:{sn:"Ettlingen",ln:"Ettlingen, Waldbronn"},7244:{sn:"Weingarten",ln:"Weingarten (Baden), Stutensee"},7245:{sn:"Durmersheim",ln:"Durmersheim, Au am Rhein, Bietigheim, Elchesheim-Illingen"},7246:{sn:"Malsch",ln:"Malsch"},7247:{sn:"Linkenheim-Hochstetten",ln:"Linkenheim-Hochstetten, Dettenheim, Eggenstein-Leopoldshafen"},
7248:{sn:"Marxzell",ln:"Marxzell, Karlsbad-Ittersbach, Straubenhardt"},7249:{sn:"Stutensee",ln:"Stutensee"},7250:{sn:"Kraichtal",ln:"Kraichtal"},7251:{sn:"Bruchsal",ln:"Bruchsal, Forst, Karlsdorf-Neuthard, Kraichtal, Ubstadt-Weiher"},7252:{sn:"Bretten",ln:"Bretten, Gondelsheim"},7253:{sn:"Bad Sch\u00f6nborn",ln:"Bad Sch\u00f6nborn, Kronau, Malsch, M\u00fchlhausen, \u00d6stringen, Rauenberg, Ubstadt-Weiher"},7254:{sn:"Wagh\u00e4usel",ln:"Wagh\u00e4usel, Oberhausen-Rheinhausen"},7255:{sn:"Graben-Neudorf",
ln:"Graben-Neudorf, Dettenheim, Hambr\u00fccken"},7256:{sn:"Philippsburg",ln:"Philippsburg"},7257:{sn:"Bruchsal-Untergrombach",ln:"Bruchsal-Untergrombach, Bruchsal"},7258:{sn:"Oberderdingen-Flehingen",ln:"Oberderdingen-Flehingen, Bretten, Kraichtal, K\u00fcrnbach, Oberderdingen, Zaisenhausen"},7259:{sn:"\u00d6stringen-Odenheim",ln:"\u00d6stringen-Odenheim, Kraichtal, \u00d6stringen"},7260:{sn:"Eppingen",ln:"Eppingen, Sinsheim"},7261:{sn:"Sinsheim",ln:"Sinsheim, Waibstadt"},7262:{sn:"Eppingen",ln:"Eppingen"},
7263:{sn:"Waibstadt",ln:"Waibstadt, Epfenbach, Helmstadt-Bargen, Neckarbischofsheim, Neidenstein"},7264:{sn:"Bad Rappenau",ln:"Bad Rappenau, Siegelsbach"},7265:{sn:"Angelbachtal",ln:"Angelbachtal, Sinsheim"},7266:{sn:"Kirchardt",ln:"Kirchardt, Bad Rappenau, Ittlingen, Sinsheim"},7267:{sn:"Gemmingen",ln:"Gemmingen"},7268:{sn:"Bad Rappenau",ln:"Bad Rappenau, Neckarbischofsheim, Sinsheim"},7269:{sn:"Sulzfeld",ln:"Sulzfeld"},7271:{sn:"W\u00f6rth",ln:"W\u00f6rth am Rhein, Jockgrim"},7272:{sn:"R\u00fclzheim",
ln:"R\u00fclzheim, Bellheim, H\u00f6rdt, Kuhardt, Leimersheim, Neupotz, Rheinzabern"},7273:{sn:"Hagenbach",ln:"Hagenbach, Berg, Neuburg am Rhein"},7274:{sn:"Germersheim",ln:"Germersheim"},7275:{sn:"Kandel",ln:"Kandel, Erlenbach bei Kandel, Hatzenb\u00fchl, Minfeld"},7276:{sn:"Herxheim",ln:"Herxheim bei Landau/Pfalz, Herxheimweyher"},7277:{sn:"W\u00f6rth-B\u00fcchelberg",ln:"W\u00f6rth-B\u00fcchelberg, Scheibenhardt, W\u00f6rth am Rhein"},7300:{sn:"Roggenburg",ln:"Roggenburg (Bayern)"},7302:{sn:"Pfaffenhofen",
ln:"Pfaffenhofen an der Roth, Holzheim"},7303:{sn:"Illertissen",ln:"Illertissen"},7304:{sn:"Blaustein",ln:"Blaustein, Dornstadt, Ulm"},7305:{sn:"Erbach",ln:"Erbach, H\u00fcttisheim, Oberdischingen, Ulm"},7306:{sn:"V\u00f6hringen",ln:"V\u00f6hringen, Bellenberg, Illerrieden, Wei\u00dfenhorn"},7307:{sn:"Senden",ln:"Senden, Neu-Ulm, V\u00f6hringen"},7308:{sn:"Nersingen",ln:"Nersingen, Elchingen, Neu-Ulm"},7309:{sn:"Wei\u00dfenhorn",ln:"Wei\u00dfenhorn, Senden"},7321:{sn:"Heidenheim",ln:"Heidenheim an der Brenz, Nattheim"},
7322:{sn:"Giengen",ln:"Giengen an der Brenz, Hermaringen"},7323:{sn:"Gerstetten",ln:"Gerstetten, Amstetten-Br\u00e4unisheim, Steinheim-S\u00f6hnstetten"},7324:{sn:"Herbrechtingen",ln:"Herbrechtingen, Gerstetten-Dettingen, Giengen-H\u00fcrben, Niederstotzingen-Lontal"},7325:{sn:"Sontheim",ln:"Sontheim an der Brenz, B\u00e4chingen an der Brenz, Niederstotzingen"},7326:{sn:"Neresheim",ln:"Neresheim, Dischingen-Frickingen, Nattheim-Auernheim"},7327:{sn:"Dischingen",ln:"Dischingen, Nattheim-Fleinheim"},
7328:{sn:"K\u00f6nigsbronn",ln:"K\u00f6nigsbronn"},7329:{sn:"Steinheim",ln:"Steinheim am Albuch"},7331:{sn:"Geislingen",ln:"Geislingen an der Steige, Amstetten, Bad \u00dcberkingen, Kuchen"},7332:{sn:"Lauterstein",ln:"Lauterstein, B\u00f6hmenkirch, Schw\u00e4bisch Gm\u00fcnd-Degenfeld"},7333:{sn:"Laichingen",ln:"Laichingen, Westerheim"},7334:{sn:"Deggingen",ln:"Deggingen, Bad Ditzenbach, Bad \u00dcberkingen-Hausen, Bad \u00dcberkingen-Unterb\u00f6hringen, Geislingen an der Steige-Aufhausen"},7335:{sn:"Wiesensteig",
ln:"Wiesensteig, Bad Ditzenbach-Gosbach, Drackenstein, Gruibingen, Hohenstadt, M\u00fchlhausen im T\u00e4le"},7336:{sn:"Lonsee",ln:"Lonsee, Amstetten \u2013 Hofstett-Emerbuch, Amstetten \u2013 Reutti, Dornstadt-Scharenstetten, Westerstetten-Hinterdenkental"},7337:{sn:"Nellingen",ln:"Nellingen, Geislingen an der Steige-Aufhausen (Wannenh\u00f6fe), Merklingen"},7340:{sn:"Neenstetten",ln:"Neenstetten, Altheim (Alb), Ballendorf, B\u00f6rslingen, Breitingen, Holzkirch, Weidenstetten"},7343:{sn:"Buch",
ln:"Buch, Unterroth"},7344:{sn:"Blaubeuren",ln:"Blaubeuren, Bergh\u00fclen, Erbach"},7345:{sn:"Langenau",ln:"Langenau, Asselfingen, Nerenstetten, \u00d6llingen, Rammingen, Setzingen"},7346:{sn:"Illerkirchberg",ln:"Illerkirchberg, Schn\u00fcrpflingen, Staig, Ulm"},7347:{sn:"Dietenheim",ln:"Dietenheim, Balzheim, Schwendi"},7348:{sn:"Beimerstetten",ln:"Beimerstetten, Bernstadt, Dornstadt, Langenau, Ulm, Westerstetten"},7351:{sn:"Biberach",ln:"Biberach an der Ri\u00df, Maselheim, Mittelbiberach, Ummendorf, Warthausen"},
7352:{sn:"Ochsenhausen",ln:"Ochsenhausen, Biberach an der Ri\u00df, Erlenmoos, Gutenzell-H\u00fcrbel, Maselheim, Steinhausen an der Rottum"},7353:{sn:"Schwendi",ln:"Schwendi, Gutenzell-H\u00fcrbel, Maselheim, Mietingen, Wain"},7354:{sn:"Erolzheim",ln:"Erolzheim, Berkheim, Dettingen an der Iller, Gutenzell-H\u00fcrbel, Kirchberg an der Iller, Kirchdorf an der Iller"},7355:{sn:"Hochdorf",ln:"Hochdorf, Eberhardzell, Ingoldingen, Ummendorf"},7356:{sn:"Schemmerhofen",ln:"Schemmerhofen, Maselheim, Mietingen, Warthausen"},
7357:{sn:"Attenweiler",ln:"Attenweiler, Biberach an der Ri\u00df, Grundsheim, Oberstadion, Oggelshausen, Schemmerhofen, Uttenweiler, Warthausen"},7358:{sn:"Eberhardzell",ln:"Eberhardzell, Bad Wurzach, Ochsenhausen, Rot an der Rot, Steinhausen an der Rottum"},7361:{sn:"Aalen",ln:"Aalen, H\u00fcttlingen, Rainau"},7362:{sn:"Bopfingen",ln:"Bopfingen, Kirchheim am Ries, Neresheim, Riesb\u00fcrg"},7363:{sn:"Lauchheim",ln:"Lauchheim, Westhausen"},7364:{sn:"Oberkochen",ln:"Oberkochen"},7365:{sn:"Essingen",
ln:"Essingen"},7366:{sn:"Abtsgm\u00fcnd",ln:"Abtsgm\u00fcnd, Aalen-Dewangen, Aalen-Fachsenfeld, H\u00fcttlingen, Neuler, Schechingen-Leinweiler"},7367:{sn:"Aalen-Ebnat",ln:"Aalen-Ebnat, Aalen-Waldhausen, Heidenheim-Gro\u00dfkuchen, Neresheim-Elchingen"},7371:{sn:"Riedlingen",ln:"Riedlingen, Altheim (bei Riedlingen), Betzenweiler, D\u00fcrmentingen, Ertingen, Langenenslingen, Unlingen"},7373:{sn:"Zwiefalten",ln:"Zwiefalten, Emeringen, Pfronstetten, Riedlingen"},7374:{sn:"Uttenweiler",ln:"Uttenweiler, Alleshausen, Betzenweiler, Emerkingen, Seekirch, Unlingen"},
7375:{sn:"Obermarchtal",ln:"Obermarchtal, Ehingen (Donau), Lauterach, Rechtenstein"},7376:{sn:"Langenenslingen",ln:"Langenenslingen"},7381:{sn:"M\u00fcnsingen",ln:"M\u00fcnsingen, Bad Urach, Gutsbezirk M\u00fcnsingen, Mehrstetten"},7382:{sn:"R\u00f6merstein",ln:"R\u00f6merstein, Grabenstetten"},7383:{sn:"M\u00fcnsingen-Buttenhausen",ln:"M\u00fcnsingen-Buttenhausen, Hayingen, Hohenstein"},7384:{sn:"Allmendingen",ln:"Allmendingen, Ehingen (Donau), M\u00fcnsingen, Schelklingen"},7385:{sn:"Gomadingen",
ln:"Gomadingen, Engstingen"},7386:{sn:"Hayingen",ln:"Hayingen, Ehingen (Donau)"},7387:{sn:"Hohenstein",ln:"Hohenstein"},7388:{sn:"Pfronstetten",ln:"Pfronstetten, Trochtelfingen"},7389:{sn:"Heroldstatt",ln:"Heroldstatt, Gutsbezirk M\u00fcnsingen"},7391:{sn:"Ehingen",ln:"Ehingen (Donau), Allmendingen, Altheim (bei Ehingen), Griesingen, \u00d6pfingen"},7392:{sn:"Laupheim",ln:"Laupheim, Achstetten, Burgrieden, Ehingen (Donau), Mietingen"},7393:{sn:"Munderkingen",ln:"Munderkingen, Ehingen (Donau), Emerkingen, Hausen am Bussen, Oberstadion, Rottenacker, Untermarchtal, Unterstadion, Unterwachingen"},
7394:{sn:"Schelklingen",ln:"Schelklingen, Allmendingen, Blaubeuren, Erbach"},7395:{sn:"Ehingen-D\u00e4chingen",ln:"Ehingen-D\u00e4chingen, Ehingen (Donau)"},7402:{sn:"Fluorn-Winzeln",ln:"Fluorn-Winzeln, Dunningen, Schramberg"},7403:{sn:"Dunningen",ln:"Dunningen, Eschbronn, Zimmern ob Rottweil"},7404:{sn:"Epfendorf",ln:"Epfendorf, B\u00f6singen, Dietingen"},7420:{sn:"Dei\u00dflingen",ln:"Dei\u00dflingen"},7422:{sn:"Schramberg",ln:"Schramberg, Aichhalden, Hardt, Lauterbach"},7423:{sn:"Oberndorf",ln:"Oberndorf am Neckar, Dornhan"},
7424:{sn:"Spaichingen",ln:"Spaichingen, Aldingen, Balgheim, Denkingen, D\u00fcrbheim, Gunningen, Hausen ob Verena, Rietheim-Weilheim"},7425:{sn:"Trossingen",ln:"Trossingen, Dei\u00dflingen, Villingen-Schwenningen"},7426:{sn:"Gosheim",ln:"Gosheim, Deilingen, Frittlingen, Wehingen, Wellendingen"},7427:{sn:"Sch\u00f6mberg",ln:"Sch\u00f6mberg (bei Balingen), Dautmergen, Dietingen, Dormettingen, Dotternhausen, Ratshausen, Rosenfeld, Rottweil, Weilen unter den Rinnen, Zimmern unter der Burg"},7428:{sn:"Rosenfeld",
ln:"Rosenfeld, Dietingen, Geislingen"},7429:{sn:"Egesheim",ln:"Egesheim, B\u00f6ttingen, Bubsheim, K\u00f6nigsheim, Mahlstetten, Nusplingen, Reichenbach am Heuberg, Renquishausen"},7431:{sn:"Albstadt",ln:"Albstadt, Bitz, Me\u00dfstetten"},7432:{sn:"Albstadt",ln:"Albstadt"},7433:{sn:"Balingen",ln:"Balingen, Geislingen"},7434:{sn:"Winterlingen",ln:"Winterlingen, Stra\u00dfberg"},7435:{sn:"Albstadt",ln:"Albstadt, Balingen"},7436:{sn:"Hausen",ln:"Hausen am Tann, Me\u00dfstetten, Obernheim"},7440:{sn:"Bad Rippoldsau-Schapbach",
ln:"Bad Rippoldsau-Schapbach"},7441:{sn:"Freudenstadt",ln:"Freudenstadt"},7442:{sn:"Baiersbronn",ln:"Baiersbronn, Freudenstadt"},7443:{sn:"Dornstetten",ln:"Dornstetten, Freudenstadt, Glatten, Schopfloch, Waldachtal"},7444:{sn:"Alpirsbach",ln:"Alpirsbach, Aichhalden, Lo\u00dfburg"},7445:{sn:"Pfalzgrafenweiler",ln:"Pfalzgrafenweiler, Waldachtal"},7446:{sn:"Lo\u00dfburg",ln:"Lo\u00dfburg"},7447:{sn:"Baiersbronn-Schwarzenberg",ln:"Baiersbronn-Schwarzenberg, Baiersbronn, Seewald"},7448:{sn:"Seewald",ln:"Seewald"},
7449:{sn:"Baiersbronn-Obertal",ln:"Baiersbronn-Obertal, Baiersbronn"},7451:{sn:"Horb",ln:"Horb am Neckar"},7452:{sn:"Nagold",ln:"Nagold, Jettingen, M\u00f6tzingen, Rohrdorf"},7453:{sn:"Altensteig",ln:"Altensteig, Egenhausen, Gr\u00f6mbach, Simmersfeld, W\u00f6rnersberg"},7454:{sn:"Sulz",ln:"Sulz am Neckar, V\u00f6hringen"},7455:{sn:"Dornhan",ln:"Dornhan, Betzweiler-W\u00e4lde"},7456:{sn:"Haiterbach",ln:"Haiterbach"},7457:{sn:"Rottenburg-Ergenzingen",ln:"Rottenburg-Ergenzingen, Bondorf, Eutingen im G\u00e4u, Neustetten, Rottenburg am Neckar, Starzach"},
7458:{sn:"Ebhausen",ln:"Ebhausen, Altensteig"},7459:{sn:"Nagold-Hochdorf",ln:"Nagold-Hochdorf, Eutingen im G\u00e4u, Nagold"},7461:{sn:"Tuttlingen",ln:"Tuttlingen, Rietheim-Weilheim, Wurmlingen"},7462:{sn:"Immendingen",ln:"Immendingen, Tuttlingen"},7463:{sn:"M\u00fchlheim",ln:"M\u00fchlheim an der Donau, Fridingen an der Donau, Kolbingen"},7464:{sn:"Talheim",ln:"Talheim, Tuttlingen, Durchhausen, Seitingen-Oberflacht, Tuningen, Tuttlingen"},7465:{sn:"Emmingen-Liptingen",ln:"Emmingen-Liptingen, Eigeltingen"},
7466:{sn:"Beuron",ln:"Beuron, B\u00e4renthal, Irndorf, Leibertingen"},7467:{sn:"Neuhausen",ln:"Neuhausen ob Eck"},7471:{sn:"Hechingen",ln:"Hechingen, Bisingen, Bodelshausen, Rangendingen"},7472:{sn:"Rottenburg",ln:"Rottenburg am Neckar, Neustetten, Starzach, T\u00fcbingen"},7473:{sn:"M\u00f6ssingen",ln:"M\u00f6ssingen, Nehren, Ofterdingen"},7474:{sn:"Haigerloch",ln:"Haigerloch"},7475:{sn:"Burladingen",ln:"Burladingen"},7476:{sn:"Bisingen",ln:"Bisingen, Grosselfingen"},7477:{sn:"Jungingen",ln:"Jungingen, Burladingen, Hechingen"},
7478:{sn:"Hirrlingen",ln:"Hirrlingen, Rangendingen, Rottenburg am Neckar, Starzach"},7482:{sn:"Horb-Dettingen",ln:"Horb-Dettingen, Sulz am Neckar"},7483:{sn:"Empfingen",ln:"Empfingen, Eutingen im G\u00e4u, Horb am Neckar, Starzach"},7484:{sn:"Simmersfeld",ln:"Simmersfeld"},7485:{sn:"Empfingen",ln:"Empfingen"},7486:{sn:"Horb",ln:"Horb am Neckar, Waldachtal"},7502:{sn:"Wolpertswende",ln:"Wolpertswende, Baindt, Fronreute"},7503:{sn:"Wilhelmsdorf",ln:"Wilhelmsdorf, Guggenhausen, Horgenzell"},7504:{sn:"Horgenzell",
ln:"Horgenzell, Berg (Schussental), Ravensburg, Wilhelmsdorf"},7505:{sn:"Fronreute",ln:"Fronreute, Berg (Schussental), Fleischwangen, Guggenhausen, Unterwaldhausen, Wilhelmsdorf"},7506:{sn:"Wangen",ln:"Wangen, Amtzell, Ki\u00dflegg, Vogt"},7520:{sn:"Bodnegg",ln:"Bodnegg, Amtzell, Gr\u00fcnkraut, Ravensburg"},7522:{sn:"Wangen",ln:"Wangen im Allg\u00e4u, Amtzell, Argenb\u00fchl, Hergatz, Ki\u00dflegg"},7524:{sn:"Bad Waldsee",ln:"Bad Waldsee, Bad Wurzach, Eberhardzell"},7525:{sn:"Aulendorf",ln:"Aulendorf, Altshausen, Bad Schussenried, Bad Waldsee, Ebersbach-Musbach, Wolpertswende"},
7527:{sn:"Wolfegg",ln:"Wolfegg, Bad Wurzach, Bergatreute, Vogt im Allg\u00e4u"},7528:{sn:"Neukirch",ln:"Neukirch, Amtzell, Tettnang, Wangen im Allg\u00e4u"},7529:{sn:"Waldburg",ln:"Waldburg, Amtzell, Schlier, Vogt im Allg\u00e4u, Wangen im Allg\u00e4u"},7531:{sn:"Konstanz",ln:"Konstanz, Reichenau"},7532:{sn:"Meersburg",ln:"Meersburg, Daisendorf, Hagnau am Bodensee, Immenstaad am Bodensee, Stetten"},7533:{sn:"Allensbach",ln:"Allensbach, Konstanz-OT: Dettingen-Wallhausen, Dingelsdorf"},7534:{sn:"Reichenau",
ln:"Reichenau"},7541:{sn:"Friedrichshafen",ln:"Friedrichshafen, Eriskirch"},7542:{sn:"Tettnang",ln:"Tettnang, Meckenbeuren"},7543:{sn:"Kressbronn",ln:"Kressbronn, Langenargen"},7544:{sn:"Markdorf",ln:"Markdorf, Bermatingen, Friedrichshafen-OT: Kluftern"},7545:{sn:"Immenstaad",ln:"Immenstaad"},7546:{sn:"Oberteuringen",ln:"Oberteuringen"},7551:{sn:"\u00dcberlingen",ln:"\u00dcberlingen, Owingen, Sipplingen"},7552:{sn:"Pfullendorf",ln:"Pfullendorf, Heiligenberg, Herdwangen-Sch\u00f6nach, Ostrach"},7553:{sn:"Salem",
ln:"Salem, Deggenhausertal, \u00dcberlingen"},7554:{sn:"Heiligenberg",ln:"Heiligenberg, Frickingen, Salem, \u00dcberlingen"},7555:{sn:"Deggenhausertal",ln:"Deggenhausertal, Illmensee, Salem"},7556:{sn:"Uhldingen-M\u00fchlhofen",ln:"Uhldingen-M\u00fchlhofen, Salem"},7557:{sn:"Herdwangen-Sch\u00f6nach",ln:"Herdwangen-Sch\u00f6nach, Hohenfels, Owingen"},7558:{sn:"Illmensee",ln:"Illmensee, Ostrach, Pfullendorf"},7561:{sn:"Leutkirch",ln:"Leutkirch im Allg\u00e4u, Aichstetten, Bad Wurzach"},7562:{sn:"Isny",
ln:"Isny im Allg\u00e4u, Argenb\u00fchl, Maierh\u00f6fen"},7563:{sn:"Ki\u00dflegg",ln:"Ki\u00dflegg, Argenb\u00fchl, Leutkirch im Allg\u00e4u"},7564:{sn:"Bad Wurzach",ln:"Bad Wurzach, Leutkirch im Allg\u00e4u"},7565:{sn:"Aichstetten",ln:"Aichstetten, Aitrach, Bad Wurzach, Leutkirch im Allg\u00e4u"},7566:{sn:"Argenb\u00fchl",ln:"Argenb\u00fchl, Heimenkirch, Isny im Allg\u00e4u, Leutkirch im Allg\u00e4u"},7567:{sn:"Leutkirch",ln:"Leutkirch, Argenb\u00fchl, Isny im Allg\u00e4u"},7568:{sn:"Bad Wurzach-Hauerz",
ln:"Bad Wurzach-Hauerz, Aitrach, Bad Wurzach, Rot an der Rot, Steinhausen an der Rottum"},7569:{sn:"Isny",ln:"Isny im Allg\u00e4u-Eisenbach, Buchenberg, Isny im Allg\u00e4u"},7570:{sn:"Sigmaringen-Gutenstein",ln:"Sigmaringen-Gutenstein, Beuron, Leibertingen, Me\u00dfkirch, Sigmaringen"},7571:{sn:"Sigmaringen",ln:"Sigmaringen, Bingen, Inzigkofen, Sigmaringendorf, Stetten am kalten Markt"},7572:{sn:"Mengen",ln:"Mengen, Altheim bei Riedlingen, Hohentengen, Scheer, Sigmaringendorf"},7573:{sn:"Stetten",
ln:"Stetten am kalten Markt, Sigmaringen"},7574:{sn:"Gammertingen",ln:"Gammertingen, Hettingen, Langenenslingen, Neufra"},7575:{sn:"Me\u00dfkirch",ln:"Me\u00dfkirch, Inzigkofen, Leibertingen, Sauldorf"},7576:{sn:"Krauchenwies",ln:"Krauchenwies, Mengen"},7577:{sn:"Veringenstadt",ln:"Veringenstadt, Hettingen, Sigmaringen, Winterlingen"},7578:{sn:"Wald",ln:"Wald, Me\u00dfkirch, Sauldorf"},7579:{sn:"Schwenningen",ln:"Schwenningen, Beuron, Me\u00dfstetten"},7581:{sn:"Bad Saulgau",ln:"Bad Saulgau, Boms, Ebersbach-Musbach, Eichstegen"},
7582:{sn:"Bad Buchau",ln:"Bad Buchau, Alleshausen, Allmannsweiler, Biberach an der Ri\u00df, D\u00fcrnau, Kanzach, Moosburg, Oggelshausen, Seekirch, Tiefenbach"},7583:{sn:"Bad Schussenried",ln:"Bad Schussenried, Ebersbach-Musbach, Ingoldingen, Bad Saulgau"},7584:{sn:"Altshausen",ln:"Altshausen, Boms, Ebenweiler, Ebersbach-Musbach, Eichstegen, Fronreute, Guggenhausen"},7585:{sn:"Ostrach",ln:"Ostrach, Hohentengen"},7586:{sn:"Herbertingen",ln:"Herbertingen, Ertingen, Hohentengen"},7587:{sn:"Ho\u00dfkirch",
ln:"Ho\u00dfkirch, Guggenhausen, K\u00f6nigseggwald, Ostrach, Riedhausen, Unterwaldhausen"},7602:{sn:"Oberried",ln:"Oberried, Bollschweil, M\u00fcnstertal/Schwarzwald"},7620:{sn:"Schopfheim",ln:"Schopfheim"},7621:{sn:"L\u00f6rrach",ln:"L\u00f6rrach, Binzen, Eimeldingen, Inzlingen, R\u00fcmmingen, Schallbach, Weil am Rhein, Wittlingen"},7622:{sn:"Schopfheim",ln:"Schopfheim, Hausen im Wiesental, Maulburg, Rheinfelden-Nordschwaben, Wieslet"},7623:{sn:"Rheinfelden",ln:"Rheinfelden (Baden), Schw\u00f6rstadt"},
7624:{sn:"Grenzach-Wyhlen",ln:"Grenzach-Wyhlen"},7625:{sn:"Zell",ln:"Zell im Wiesental, H\u00e4g-Ehrsberg"},7626:{sn:"Kandern",ln:"Kandern, Malsburg-Marzell, Schliengen"},7627:{sn:"Steinen",ln:"Steinen, Rheinfeden-Adelhausen"},7628:{sn:"Efringen-Kirchen",ln:"Efringen-Kirchen, Fischingen"},7629:{sn:"Tegernau",ln:"Tegernau, B\u00fcrchau, Elbenschwand, Raich, Sallneck, Steinen-Endenburg, Wies"},7631:{sn:"M\u00fcllheim",ln:"M\u00fcllheim, Auggen, Buggingen, Neuenburg"},7632:{sn:"Badenweiler",ln:"Badenweiler"},
7633:{sn:"Staufen",ln:"Staufen im Breisgau, Bad Krozingen, Bollschweil, Ehrenkirchen, Hartheim, Heitersheim"},7634:{sn:"Sulzburg",ln:"Sulzburg, Ballrechten-Dottingen, Buggingen, Eschbach, Heitersheim, Neuenburg am Rhein"},7635:{sn:"Schliengen",ln:"Schliengen, Bad Bellingen, Neuenburg am Rhein"},7636:{sn:"M\u00fcnstertal",ln:"M\u00fcnstertal/Schwarzwald, Staufen im Breisgau"},7641:{sn:"Emmendingen",ln:"Emmendingen, Freiamt, Reute, Sexau, Teningen"},7642:{sn:"Endingen",ln:"Endingen am Kaiserstuhl, Forchheim, Riegel am Kaiserstuhl, Sasbach am Kaiserstuhl, Wyhl am Kaiserstuhl"},
7643:{sn:"Herbolzheim",ln:"Herbolzheim, Rheinhausen"},7644:{sn:"Kenzingen",ln:"Kenzingen, Malterdingen"},7645:{sn:"Freiamt",ln:"Freiamt, Gutach im Breisgau, Sexau"},7646:{sn:"Weisweil",ln:"Weisweil"},7651:{sn:"Titisee-Neustadt",ln:"Titisee-Neustadt, Breitnau, Friedenweiler"},7652:{sn:"Breitnau",ln:"Breitnau, Hinterzarten, Titisee-Neustadt"},7653:{sn:"Lenzkirch",ln:"Lenzkirch, Bonndorf im Schwarzwald"},7654:{sn:"L\u00f6ffingen",ln:"L\u00f6ffingen, Br\u00e4unlingen-Unterbrend, Friedenweiler"},7655:{sn:"Feldberg",
ln:"Feldberg, Baden-W\u00fcrttemberg"},7656:{sn:"Schluchsee",ln:"Schluchsee"},7657:{sn:"Eisenbach",ln:"Eisenbach (Hochschwarzwald), Titisee-Neustadt, V\u00f6hrenbach"},7660:{sn:"St. Peter",ln:"St. Peter, Simonswald, Stegen"},7661:{sn:"Kirchzarten",ln:"Kirchzarten, Buchenbach, Oberried, Stegen"},7662:{sn:"Vogtsburg",ln:"Vogtsburg im Kaiserstuhl, Sasbach am Kaiserstuhl"},7663:{sn:"Eichstetten",ln:"Eichstetten am Kaiserstuhl, Bahlingen am Kaiserstuhl, B\u00f6tzingen, Teningen"},7664:{sn:"Freiburg-Tiengen",
ln:"Freiburg-Tiengen, Breisach-Rimsingen, Ebringen, Ehrenkirchen, Freiburg-Munzingen, Pfaffenweiler, Schallstadt"},7665:{sn:"March",ln:"March, Gottenheim, Umkirch, Freiburg-Hochdorf"},7666:{sn:"Denzlingen",ln:"Denzlingen, Heuweiler, V\u00f6rstetten"},7667:{sn:"Breisach",ln:"Breisach am Rhein"},7668:{sn:"Ihringen",ln:"Ihringen, Breisach am Rhein, Merdingen"},7669:{sn:"St. M\u00e4rgen",ln:"St. M\u00e4rgen, Titisee-Neustadt-Waldau"},7671:{sn:"Todtnau",ln:"Todtnau"},7672:{sn:"St. Blasien",ln:"St. Blasien, Dachsberg, H\u00e4usern, H\u00f6chenschwand, Ibach"},
7673:{sn:"Sch\u00f6nau",ln:"Sch\u00f6nau im Schwarzwald, Aitern, B\u00f6llen, Fr\u00f6hnd, Neuenweg, Sch\u00f6nenberg, Tunau, Utzenfeld, Wembach, Wieden"},7674:{sn:"Todtmoos",ln:"Todtmoos, Ibach, Todtnau"},7675:{sn:"Bernau",ln:"Bernau, St. Blasien"},7676:{sn:"Feldberg",ln:"Feldberg, Baden-W\u00fcrttemberg, Todtnau"},7681:{sn:"Waldkirch",ln:"Waldkirch, Gutach im Breisgau"},7682:{sn:"Elzach",ln:"Elzach, Biederbach, Winden im Elztal"},7683:{sn:"Simonswald",ln:"Simonswald"},7684:{sn:"Glottertal",ln:"Glottertal"},
7685:{sn:"Gutach",ln:"Gutach im Breisgau, Winden im Elztal"},7702:{sn:"Blumberg",ln:"Blumberg"},7703:{sn:"Bonndorf",ln:"Bonndorf im Schwarzwald, St\u00fchlingen"},7704:{sn:"Geisingen",ln:"Geisingen"},7705:{sn:"Br\u00e4unlingen-Mistelbrunn",ln:"Br\u00e4unlingen-Mistelbrunn, Donaueschingen-OT: Hubertshofen, Wolterdingen, Villingen-Schwenningen-Tannheim"},7706:{sn:"Bad D\u00fcrrheim-OT",ln:"Bad D\u00fcrrheim-OT: Biesingen, Sunthausen, Oberbaldingen, Unterbaldingen, \u00d6fingen, Immendingen"},7707:{sn:"Br\u00e4unlingen-D\u00f6ggingen",
ln:"Br\u00e4unlingen-D\u00f6ggingen, H\u00fcfingen-Hausen vor Wald, -Mundelfingen, L\u00f6ffingen"},7708:{sn:"Geisingen",ln:"Geisingen"},7709:{sn:"Wutach",ln:"Wutach, St\u00fchlingen"},7720:{sn:"Villingen-Schwenningen-OT",ln:"Villingen-Schwenningen-OT: Schwenningen, M\u00fchlhausen, Dauchingen"},7721:{sn:"Villingen-Schwenningen-OT",ln:"Villingen-Schwenningen-OT: Villingen, Pfaffenweiler, Obereschach, Herzogenweiler, Weilersbach, Brigachtal, M\u00f6nchweiler, Unterkirnach"},7722:{sn:"Triberg",ln:"Triberg im Schwarzwald, Furtwangen, Hornberg, Schonach im Schwarzwald, Sch\u00f6nwald im Schwarzwald"},
7723:{sn:"Furtwangen",ln:"Furtwangen, G\u00fctenbach"},7724:{sn:"St. Georgen im Schwarzwald",ln:"St. Georgen im Schwarzwald, Unterkirnach"},7725:{sn:"K\u00f6nigsfeld",ln:"K\u00f6nigsfeld im Schwarzwald, Hardt, M\u00f6nchweiler, Niedereschach, St. Georgen im Schwarzwald, Unterkirnach, Villingen-Schwenningen"},7726:{sn:"Bad D\u00fcrrheim",ln:"Bad D\u00fcrrheim, Brigachtal"},7727:{sn:"V\u00f6hrenbach",ln:"V\u00f6hrenbach, Unterkirnach, Villingen-Schwenningen"},7728:{sn:"Niedereschach",ln:"Niedereschach, Dauchingen, Villingen-Schwenningen"},
7729:{sn:"Schramberg",ln:"Schramberg: OT Tennenbronn, Villingendorf"},7731:{sn:"Singen",ln:"Singen (Hohentwiel), Gottmadingen, Hilzingen, M\u00fchlhausen-Ehingen, Rielasingen-Worblingen"},7732:{sn:"Radolfzell",ln:"Radolfzell am Bodensee, Gaienhofen, Moos"},7733:{sn:"Engen",ln:"Engen, Immendingen, M\u00fchlhausen-Ehingen, Tengen"},7734:{sn:"Gailingen",ln:"Gailingen am Hochrhein, B\u00fcsingen am Hochrhein, Gottmadingen"},7735:{sn:"\u00d6hningen",ln:"\u00d6hningen, Gaienhofen"},7736:{sn:"Tengen",ln:"Tengen, Blumberg"},
7738:{sn:"Stei\u00dflingen",ln:"Stei\u00dflingen, Radolfzell am Bodensee, Singen (Hohentwiel)"},7739:{sn:"Hilzingen",ln:"Hilzingen, Gottmadingen"},7741:{sn:"Waldshut-Tiengen-OT",ln:"Waldshut-Tiengen-OT: Tiengen, Aichen Gutenburg, Breitenfeld, Detzeln, Gurtweil, Indlekofen, Krenkingen, Oberalpfen, K\u00fcssaberg, Lauchringen, \u00dchlingen-Birkendorf, Weilheim"},7742:{sn:"Klettgau",ln:"Klettgau, Dettighofen, Hohentengen am Hochrhein, K\u00fcssaberg, Lauchringen"},7743:{sn:"\u00dchlingen-Birkendorf",
ln:"\u00dchlingen-Birkendorf, Grafenhausen, St\u00fchlingen, Waldshut-Tiengen"},7744:{sn:"St\u00fchlingen",ln:"St\u00fchlingen"},7745:{sn:"Jestetten",ln:"Jestetten, Dettighofen, Lottstetten"},7746:{sn:"Eggingen",ln:"Eggingen, Wut\u00f6schingen"},7747:{sn:"Grafenhausen",ln:"Grafenhausen, Schluchsee, \u00dchlingen-Birkendorf, Waldshut-Tiengen, Weilheim"},7748:{sn:"Grafenhausen",ln:"Grafenhausen"},7751:{sn:"Waldshut-Tiengen",ln:"Waldshut-Tiengen, Dogern"},7753:{sn:"Albbruck",ln:"Albbruck, Laufenburg (Baden)"},
7754:{sn:"G\u00f6rwihl",ln:"G\u00f6rwihl, Albbruck"},7755:{sn:"Weilheim",ln:"Weilheim (Baden), Albbruck, Dachsberg (S\u00fcdschwarzwald), H\u00f6chenschwand, St. Blasien, Waldshut-Tiengen"},7761:{sn:"Bad S\u00e4ckingen",ln:"Bad S\u00e4ckingen, Rickenbach (Hotzenwald), Wehr (Baden)"},7762:{sn:"Wehr",ln:"Wehr (Baden), Hasel, Schw\u00f6rstadt"},7763:{sn:"Murg",ln:"Murg, Bad S\u00e4ckingen, Laufenburg (Baden)"},7764:{sn:"Herrischried",ln:"Herrischried, G\u00f6rwihl"},7765:{sn:"Rickenbach",ln:"Rickenbach"},
7771:{sn:"Stockach",ln:"Stockach, Bodman-Ludwigshafen, Eigeltingen, Hohenfels, Orsingen-Nenzingen"},7773:{sn:"Bodman-Ludwigshafen",ln:"Bodman-Ludwigshafen, Stockach, \u00dcberlingen"},7774:{sn:"Eigeltingen",ln:"Eigeltingen, Aach, Orsingen-Nenzingen, Volkertshausen"},7775:{sn:"M\u00fchlingen",ln:"M\u00fchlingen, Eigeltingen, Hohenfels, Stockach"},7777:{sn:"Sauldorf",ln:"Sauldorf, Buchheim, Leibertingen, Neuhausen ob Eck"},7802:{sn:"Oberkirch",ln:"Oberkirch, Lautenbach"},7803:{sn:"Gengenbach",ln:"Gengenbach, Berghaupten, Ohlsbach"},
7804:{sn:"Oppenau",ln:"Oppenau"},7805:{sn:"Appenweier",ln:"Appenweier, Oberkirch-Nu\u00dfbach, -Zusenhofen"},7806:{sn:"Bad Peterstal-Griesbach",ln:"Bad Peterstal-Griesbach, Oppenau"},7807:{sn:"Neuried",ln:"Neuried (Rhein)"},7808:{sn:"Hohberg",ln:"Hohberg, Friesenheim-Oberschopfheim, Neuried-Schutterzell"},7821:{sn:"Lahr",ln:"Lahr/Schwarzwald, Friesenheim"},7822:{sn:"Ettenheim",ln:"Ettenheim, Kappel-Grafenhausen, Mahlberg-Orschweier, Ringsheim, Rust"},7823:{sn:"Seelbach",ln:"Seelbach, Schuttertal"},
7824:{sn:"Schwanau",ln:"Schwanau, Mei\u00dfenheim"},7825:{sn:"Kippenheim",ln:"Kippenheim, Lahr/Schwarzwald, Mahlberg"},7826:{sn:"Schuttertal",ln:"Schuttertal, Biederbach, Ettenheim, Hofstetten"},7831:{sn:"Hausach",ln:"Hausach, Gutach (Schwarzwaldbahn)"},7832:{sn:"Haslach",ln:"Haslach im Kinzigtal, Fischerbach, Hofstetten, M\u00fchlenbach, Steinach"},7833:{sn:"Hornberg",ln:"Hornberg, Gutach (Schwarzwaldbahn)"},7834:{sn:"Wolfach",ln:"Wolfach, Hausach, Oberwolfach, Schiltach"},7835:{sn:"Zell",ln:"Zell am Harmersbach, Biberach (Baden)"},
7836:{sn:"Schiltach",ln:"Schiltach, Schenkenzell, Wolfach"},7837:{sn:"Oberharmersbach",ln:"Oberharmersbach, Zell am Harmersbach"},7838:{sn:"Nordrach",ln:"Nordrach"},7839:{sn:"Schapbach",ln:"Schapbach, Oberwolfach"},7841:{sn:"Achern",ln:"Achern, Lauf, Sasbach, Sasbachwalden"},7842:{sn:"Kappelrodeck",ln:"Kappelrodeck, Ottenh\u00f6fen im Schwarzwald, Seebach"},7843:{sn:"Renchen",ln:"Renchen, Achern-Wagshurst"},7844:{sn:"Rheinau",ln:"Rheinau, Renchen"},7851:{sn:"Kehl",ln:"Kehl"},7852:{sn:"Willst\u00e4tt",
ln:"Willst\u00e4tt, Kehl-Odelshofen"},7853:{sn:"Kehl-Bodersweier",ln:"Kehl-Bodersweier, -Querbach, -Zierolshofen, -Leutesheim, Rheinau-Linx"},7854:{sn:"Kehl-Goldscheuer",ln:"Kehl-Goldscheuer, -Marlen, -Kittersburg, -Hohnhurst, Willst\u00e4tt-Eckartsweier"},7903:{sn:"Mainhardt",ln:"Mainhardt, Gro\u00dferlach, Michelfeld, W\u00fcstenrot"},7904:{sn:"Ilshofen",ln:"Ilshofen, Braunsbach, Crailsheim, Kirchberg an der Jagst, Langenburg, Schw\u00e4bisch Hall, Vellberg, Wolpertshausen"},7905:{sn:"Langenburg",
ln:"Langenburg, Braunsbach, Gerabronn, Ilshofen, K\u00fcnzelsau"},7906:{sn:"Braunsbach",ln:"Braunsbach, Ilshofen, Langenburg, Schw\u00e4bisch Hall, Unterm\u00fcnkheim, Wolpertshausen"},7907:{sn:"Schw\u00e4bisch Hall",ln:"Schw\u00e4bisch Hall-Sulzdorf, Ilshofen, Schw\u00e4bisch Hall, Vellberg, Wolpertshausen"},7930:{sn:"Boxberg",ln:"Boxberg, Ahorn, Bad Mergentheim"},7931:{sn:"Bad Mergentheim",ln:"Bad Mergentheim, Boxberg, D\u00f6rzbach, Igersheim, Mulfingen, Niederstetten"},7932:{sn:"Niederstetten",
ln:"Niederstetten, Bad Mergentheim, Creglingen, Schrozberg, Weikersheim"},7933:{sn:"Creglingen",ln:"Creglingen, Niederstetten, Schrozberg"},7934:{sn:"Weikersheim",ln:"Weikersheim, Niederstetten"},7935:{sn:"Schrozberg",ln:"Schrozberg, Niederstetten"},7936:{sn:"Schrozberg-Bartenstein",ln:"Schrozberg-Bartenstein, Blaufelden, Mulfingen, Schrozberg"},7937:{sn:"D\u00f6rzbach",ln:"D\u00f6rzbach, Bad Mergentheim, Krautheim, Mulfingen"},7938:{sn:"Mulfingen",ln:"Mulfingen, Bad Mergentheim, D\u00f6rzbach, Ingelfingen, Schrozberg"},
7939:{sn:"Schrozberg-Spielbach",ln:"Schrozberg-Spielbach, Creglingen, Niederstetten, Schrozberg"},7940:{sn:"K\u00fcnzelsau",ln:"K\u00fcnzelsau, Ingelfingen, Kupferzell, Langenburg, Niedernhall"},7941:{sn:"\u00d6hringen",ln:"\u00d6hringen, Neuenstein, Pfedelbach, Zweiflingen"},7942:{sn:"Neuenstein",ln:"Neuenstein, \u00d6hringen, Waldenburg"},7943:{sn:"Forchtenberg",ln:"Forchtenberg, Jagsthausen, Sch\u00f6ntal, Widdern"},7944:{sn:"Kupferzell",ln:"Kupferzell, K\u00fcnzelsau, Unterm\u00fcnkheim"},7945:{sn:"W\u00fcstenrot",
ln:"W\u00fcstenrot, Bretzfeld, Mainhardt"},7946:{sn:"Bretzfeld",ln:"Bretzfeld, Langenbrettach, Obersulm, Pfedelbach, W\u00fcstenrot"},7947:{sn:"Forchtenberg",ln:"Forchtenberg, \u00d6hringen, Sch\u00f6ntal, Wei\u00dfbach, Zweiflingen"},7948:{sn:"\u00d6hringen-Ohrnberg",ln:"\u00d6hringen-Ohrnberg, Forchtenberg, \u00d6hringen, Zweiflingen"},7949:{sn:"Pfedelbach-Untersteinbach",ln:"Pfedelbach-Untersteinbach, Bretzfeld, Michelfeld, \u00d6hringen, Pfedelbach, Waldenburg"},7950:{sn:"Schnelldorf",ln:"Schnelldorf, Feuchtwangen, Kre\u00dfberg, Satteldorf, W\u00f6rnitz"},
7951:{sn:"Crailsheim",ln:"Crailsheim, Ilshofen, Kirchberg an der Jagst, Kre\u00dfberg, Satteldorf"},7952:{sn:"Gerabronn",ln:"Gerabronn, Blaufelden, Langenburg, Rot am See"},7953:{sn:"Blaufelden",ln:"Blaufelden, Gerabronn, Rot am See, Schrozberg"},7954:{sn:"Kirchberg",ln:"Kirchberg an der Jagst, Crailsheim, Ilshofen, Rot am See"},7955:{sn:"Wallhausen",ln:"Wallhausen, Rot am See, Satteldorf"},7957:{sn:"Kre\u00dfberg",ln:"Kre\u00dfberg, Crailsheim, Schnelldorf, Stimpfach"},7958:{sn:"Rot",ln:"Rot am See-Brettheim, Blaufelden, Gerabronn, Kirchberg an der Jagst, Rot am See, Wallhausen"},
7959:{sn:"Frankenhardt",ln:"Frankenhardt, Jagstzell, Rosenberg"},7961:{sn:"Ellwangen",ln:"Ellwangen (Jagst), Ellenberg, H\u00fcttlingen, Jagstzell, Neuler, Rainau, St\u00f6dtlen, Unterschneidheim"},7962:{sn:"Fichtenau",ln:"Fichtenau, Ellenberg, Jagstzell, Stimpfach, W\u00f6rt"},7963:{sn:"Adelmannsfelden",ln:"Adelmannsfelden, Abtsgm\u00fcnd, B\u00fchlerzell, Neuler, Rosenberg"},7964:{sn:"St\u00f6dtlen",ln:"St\u00f6dtlen, Ellenberg, Ellwangen (Jagst), Tannhausen, W\u00f6rt"},7965:{sn:"Ellwangen-R\u00f6hlingen",
ln:"Ellwangen-R\u00f6hlingen, Ellenberg, Ellwangen (Jagst), Rainau, Westhausen"},7966:{sn:"Unterschneidheim",ln:"Unterschneidheim, Ellwangen (Jagst), Tannhausen"},7967:{sn:"Jagstzell",ln:"Jagstzell, Ellwangen (Jagst), Fichtenau, Frankenhardt, Rosenberg, Stimpfach"},7971:{sn:"Gaildorf",ln:"Gaildorf, Fichtenberg"},7972:{sn:"Gschwend",ln:"Gschwend, Alfdorf, Fichtenberg"},7973:{sn:"Obersontheim",ln:"Obersontheim, B\u00fchlertann"},7974:{sn:"B\u00fchlerzell",ln:"B\u00fchlerzell, Adelmannsfelden, B\u00fchlertann"},
7975:{sn:"Abtsgm\u00fcnd-Untergr\u00f6ningen",ln:"Abtsgm\u00fcnd-Untergr\u00f6ningen, Abtsgm\u00fcnd, Adelmannsfelden, Obergr\u00f6ningen"},7976:{sn:"Sulzbach-Laufen",ln:"Sulzbach-Laufen, Abtsgm\u00fcnd"},7977:{sn:"Oberrot",ln:"Oberrot, Fichtenberg, Schw\u00e4bisch Hall"},8021:{sn:"Waakirchen",ln:"Waakirchen"},8022:{sn:"Tegernsee",ln:"Tegernsee"},8023:{sn:"Bayrischzell",ln:"Bayrischzell"},8024:{sn:"Holzkirchen",ln:"Holzkirchen"},8025:{sn:"Miesbach",ln:"Miesbach"},8026:{sn:"Hausham",ln:"Hausham"},
8027:{sn:"Dietramszell",ln:"Dietramszell"},8028:{sn:"Fischbachau",ln:"Fischbachau"},8029:{sn:"Kreuth",ln:"Kreuth bei Tegernsee"},8031:{sn:"Rosenheim",ln:"Rosenheim"},8032:{sn:"Rohrdorf",ln:"Rohrdorf"},8033:{sn:"Oberaudorf",ln:"Oberaudorf"},8034:{sn:"Brannenburg",ln:"Brannenburg"},8035:{sn:"Raubling",ln:"Raubling"},8036:{sn:"Stephanskirchen",ln:"Stephanskirchen Simssee"},8038:{sn:"Vogtareuth",ln:"Vogtareuth"},8039:{sn:"Rott",ln:"Rott a.Inn"},8041:{sn:"Bad T\u00f6lz",ln:"Bad T\u00f6lz"},8042:{sn:"Lenggries",
ln:"Lenggries"},8043:{sn:"Jachenau",ln:"Jachenau"},8045:{sn:"Lenggries-Fall",ln:"Lenggries-Fall"},8046:{sn:"Bad Heilbrunn",ln:"Bad Heilbrunn"},8051:{sn:"Prien",ln:"Prien a.Chiemsee"},8052:{sn:"Aschau",ln:"Aschau i.Chiemgau"},8053:{sn:"Bad Endorf",ln:"Bad Endorf"},8054:{sn:"Breitbrunn",ln:"Breitbrunn a.Chiemsee"},8055:{sn:"Halfing",ln:"Halfing"},8056:{sn:"Eggst\u00e4tt",ln:"Eggst\u00e4tt"},8057:{sn:"Aschau-Sachrang",ln:"Aschau-Sachrang"},8061:{sn:"Bad Aibling",ln:"Bad Aibling"},8062:{sn:"Bruckm\u00fchl",
ln:"Bruckm\u00fchl, Vagen"},8063:{sn:"Feldkirchen-Westerham",ln:"Feldkirchen-Westerham"},8064:{sn:"Au",ln:"Au bei Bad Aibling"},8065:{sn:"Tuntenhausen-Sch\u00f6nau",ln:"Tuntenhausen-Sch\u00f6nau"},8066:{sn:"Bad Feilnbach",ln:"Bad Feilnbach"},8067:{sn:"Tuntenhausen",ln:"Tuntenhausen"},8071:{sn:"Wasserburg",ln:"Wasserburg am Inn"},8072:{sn:"Haag",ln:"Haag in Oberbayern"},8073:{sn:"Gars",ln:"Gars am Inn"},8074:{sn:"Schnaitsee",ln:"Schnaitsee"},8075:{sn:"Amerang",ln:"Amerang"},8076:{sn:"Pfaffing",ln:"Pfaffing"},
8081:{sn:"Dorfen",ln:"Dorfen"},8082:{sn:"Schwindegg",ln:"Schwindegg"},8083:{sn:"Isen",ln:"Isen"},8084:{sn:"Taufkirchen",ln:"Taufkirchen Vils"},8085:{sn:"Sankt",ln:"Sankt Wolfgang Kr.Erding"},8086:{sn:"Buchbach",ln:"Buchbach"},8091:{sn:"Kirchseon",ln:"Kirchseon"},8092:{sn:"Grafing",ln:"Grafing bei M\u00fcnchen"},8093:{sn:"Glonn",ln:"Glonn i. Kreis Ebersberg"},8094:{sn:"Steinh\u00f6ring",ln:"Steinh\u00f6ring"},8095:{sn:"Aying",ln:"Aying"},8102:{sn:"H\u00f6henkirchen-Siegertsbrunn",ln:"H\u00f6henkirchen-Siegertsbrunn"},
8104:{sn:"Sauerlach",ln:"Sauerlach"},8105:{sn:"Gilching",ln:"Gilching"},8106:{sn:"Vaterstetten",ln:"Vaterstetten"},8121:{sn:"Markt Schwaben",ln:"Markt Schwaben"},8122:{sn:"Erding",ln:"Erding"},8123:{sn:"Moosinning",ln:"Moosinning"},8124:{sn:"Forstern",ln:"Forstern in Oberbayern"},8131:{sn:"Dachau",ln:"Dachau"},8133:{sn:"Haimhausen",ln:"Haimhausen"},8134:{sn:"Odelzhausen",ln:"Odelzhausen"},8135:{sn:"Sulzemoos",ln:"Sulzemoos"},8136:{sn:"Markt Indersdorf",ln:"Markt Indersdorf"},8137:{sn:"Petershausen",
ln:"Petershausen"},8138:{sn:"Schwabhausen",ln:"Schwabhausen bei Dachau"},8141:{sn:"F\u00fcrstenfeldbruck",ln:"F\u00fcrstenfeldbruck"},8142:{sn:"Olching",ln:"Olching"},8143:{sn:"Inning",ln:"Inning am Ammersee"},8144:{sn:"Grafrath",ln:"Grafrath"},8145:{sn:"Mammendorf",ln:"Mammendorf"},8146:{sn:"Moorenweis",ln:"Moorenweis"},8151:{sn:"Starnberg",ln:"Starnberg, Berg am Starnberger See"},8152:{sn:"Herrsching",ln:"Herrsching am Ammersee, Seefeld"},8153:{sn:"We\u00dfling",ln:"We\u00dfling"},8157:{sn:"Feldafing",
ln:"Feldafing"},8158:{sn:"Tutzing",ln:"Tutzing"},8161:{sn:"Freising",ln:"Freising"},8165:{sn:"Neufahrn",ln:"Neufahrn bei Freising"},8166:{sn:"Allershausen",ln:"Allershausen"},8167:{sn:"Zolling",ln:"Zolling"},8168:{sn:"Attenkirchen",ln:"Attenkirchen"},8170:{sn:"Stra\u00dflach-Dingharting",ln:"Stra\u00dflach-Dingharting"},8171:{sn:"Wolfratshausen",ln:"Wolfratshausen"},8176:{sn:"Egling",ln:"Egling bei Wolfratshausen"},8177:{sn:"M\u00fcnsing",ln:"M\u00fcnsing"},8178:{sn:"Icking",ln:"Icking"},8179:{sn:"Eurasburg",
ln:"Eurasburg an der Loisach"},8206:{sn:"Prittriching",ln:"Prittriching"},8221:{sn:"G\u00fcnzburg",ln:"G\u00fcnzburg"},8222:{sn:"Burgau",ln:"Burgau"},8223:{sn:"Ichenhausen",ln:"Ichenhausen"},8224:{sn:"Offingen",ln:"Offingen"},8225:{sn:"Jettingen-Scheppach",ln:"Jettingen-Scheppach"},8226:{sn:"Bibertal",ln:"Bibertal"},8230:{sn:"Gablingen",ln:"Gablingen"},8231:{sn:"K\u00f6nigsbrunn",ln:"K\u00f6nigsbrunn"},8232:{sn:"Schwabm\u00fcnchen",ln:"Schwabm\u00fcnchen"},8233:{sn:"Kissing",ln:"Kissing"},8234:{sn:"Bobingen",
ln:"Bobingen"},8236:{sn:"Fischach",ln:"Fischach"},8237:{sn:"Aindling",ln:"Aindling"},8238:{sn:"Gessertshausen",ln:"Gessertshausen"},8239:{sn:"Langenneufnach",ln:"Langenneufnach"},8241:{sn:"Buchloe",ln:"Buchloe"},8243:{sn:"Fuchstal",ln:"Fuchstal"},8245:{sn:"T\u00fcrkheim",ln:"T\u00fcrkheim"},8246:{sn:"Waal",ln:"Waal"},8247:{sn:"Bad W\u00f6rishofen",ln:"Bad W\u00f6rishofen"},8248:{sn:"Lamerdingen",ln:"Lamerdingen"},8249:{sn:"Ettringen",ln:"Ettringen"},8250:{sn:"Hilgertshausen-Tandern",ln:"Hilgertshausen-Tandern"},
8251:{sn:"Aichach",ln:"Aichach"},8252:{sn:"Schrobenhausen",ln:"Schrobenhausen"},8253:{sn:"P\u00f6ttmes",ln:"P\u00f6ttmes"},8254:{sn:"Altom\u00fcnster",ln:"Altom\u00fcnster"},8257:{sn:"Inchenhofen",ln:"Inchenhofen"},8258:{sn:"Sielenbach",ln:"Sielenbach"},8259:{sn:"Schiltberg",ln:"Schiltberg"},8261:{sn:"Mindelheim",ln:"Mindelheim"},8262:{sn:"Mittelneufnach",ln:"Mittelneufnach"},8263:{sn:"Breitenbrunn",ln:"Breitenbrunn"},8265:{sn:"Pfaffenhausen",ln:"Pfaffenhausen"},8266:{sn:"Kirchheim",ln:"Kirchheim in Schwaben"},
8267:{sn:"Dirlewang",ln:"Dirlewang"},8268:{sn:"Tussenhausen",ln:"Tussenhausen"},8269:{sn:"Unteregg",ln:"Unteregg"},8271:{sn:"Meitingen",ln:"Meitingen, Thierhaupten"},8272:{sn:"Wertingen",ln:"Wertingen"},8273:{sn:"Nordendorf",ln:"Nordendorf"},8274:{sn:"Buttenwiesen",ln:"Buttenwiesen"},8276:{sn:"Baar",ln:"Baar, Thierhaupten"},8281:{sn:"Thannhausen",ln:"Thannhausen"},8282:{sn:"Krumbach",ln:"Krumbach"},8283:{sn:"Neuburg",ln:"Neuburg an der Kammel"},8284:{sn:"Ziemetshausen",ln:"Ziemetshausen"},8285:{sn:"Burtenbach",
ln:"Burtenbach"},8291:{sn:"Zusmarshausen",ln:"Zusmarshausen"},8292:{sn:"Dinkelscherben",ln:"Dinkelscherben"},8293:{sn:"Welden",ln:"Welden"},8294:{sn:"Horgau",ln:"Horgau"},8295:{sn:"Altenm\u00fcnster",ln:"Altenm\u00fcnster"},8296:{sn:"Villenbach",ln:"Villenbach"},8302:{sn:"G\u00f6risried",ln:"G\u00f6risried"},8303:{sn:"Waltenhofen",ln:"Waltenhofen"},8304:{sn:"Wildpoldsried",ln:"Wildpoldsried"},8306:{sn:"Ronsberg",ln:"Ronsberg"},8320:{sn:"Missen-Wilhams",ln:"Missen-Wilhams"},8321:{sn:"Sonthofen",ln:"Sonthofen"},
8322:{sn:"Oberstdorf",ln:"Oberstdorf"},8323:{sn:"Immenstadt",ln:"Immenstadt i.Allg\u00e4u"},8324:{sn:"Bad Hindelang",ln:"Bad Hindelang"},8325:{sn:"Oberstaufen-Thalkirchdorf",ln:"Oberstaufen-Thalkirchdorf"},8326:{sn:"Fischen",ln:"Fischen im Allg\u00e4u"},8327:{sn:"Rettenberg",ln:"Rettenberg"},8328:{sn:"Balderschwang",ln:"Balderschwang"},8330:{sn:"Legau",ln:"Legau"},8331:{sn:"Memmingen",ln:"Memmingen"},8332:{sn:"Ottobeuren",ln:"Ottobeuren"},8333:{sn:"Babenhausen",ln:"Babenhausen(Schwab)"},8334:{sn:"Bad Gr\u00f6nenbach",
ln:"Bad Gr\u00f6nenbach"},8335:{sn:"Fellheim",ln:"Fellheim"},8336:{sn:"Erkheim",ln:"Erkheim"},8337:{sn:"Altenstadt",ln:"Altenstadt(Iller)"},8338:{sn:"B\u00f6hen",ln:"B\u00f6hen"},8340:{sn:"Baisweil",ln:"Baisweil"},8341:{sn:"Kaufbeuren",ln:"Kaufbeuren"},8342:{sn:"Marktoberdorf",ln:"Marktoberdorf"},8343:{sn:"Aitrang",ln:"Aitrang"},8344:{sn:"Westendorf",ln:"Westendorf b.Kaufb"},8345:{sn:"St\u00f6ttwang",ln:"St\u00f6ttwang"},8346:{sn:"Pforzen",ln:"Pforzen"},8347:{sn:"Friesenried",ln:"Friesenried"},8348:{sn:"Bidingen",
ln:"Bidingen"},8349:{sn:"St\u00f6tten",ln:"St\u00f6tten a.Auerberg"},8361:{sn:"Nesselwang",ln:"Nesselwang"},8362:{sn:"F\u00fcssen",ln:"F\u00fcssen"},8363:{sn:"Pfronten",ln:"Pfronten"},8364:{sn:"Seeg",ln:"Seeg"},8365:{sn:"Wertach",ln:"Wertach"},8366:{sn:"Oy-Mittelberg",ln:"Oy-Mittelberg"},8367:{sn:"Ro\u00dfhaupten",ln:"Ro\u00dfhaupten (Forggensee)"},8368:{sn:"Halblech",ln:"Halblech"},8369:{sn:"R\u00fcckholz",ln:"R\u00fcckholz"},8370:{sn:"Wiggensbach",ln:"Wiggensbach"},8372:{sn:"G\u00fcnzach",ln:"G\u00fcnzach"},
8373:{sn:"Altusried",ln:"Altusried"},8374:{sn:"Dietmannsried",ln:"Dietmannsried"},8375:{sn:"Weitnau",ln:"Weitnau"},8376:{sn:"Sulzberg",ln:"Sulzberg(Allg\u00e4u)"},8377:{sn:"Unterthingau",ln:"Unterthingau"},8378:{sn:"Buchenberg",ln:"Buchenberg b. Kempten"},8379:{sn:"Waltenhofen-Martinszell-Oberdorf",ln:"Waltenhofen-Martinszell-Oberdorf"},8380:{sn:"Lindau-Achberg",ln:"Lindau-Achberg"},8381:{sn:"Lindenberg",ln:"Lindenberg im Allg\u00e4u"},8382:{sn:"Lindau",ln:"Lindau"},8383:{sn:"Gr\u00fcnenbach",ln:"Gr\u00fcnenbach(Allg\u00e4u)"},
8384:{sn:"R\u00f6thenbach",ln:"R\u00f6thenbach(Allg\u00e4u)"},8385:{sn:"Hergatz",ln:"Hergatz"},8386:{sn:"Oberstaufen",ln:"Oberstaufen"},8387:{sn:"Weiler-Simmerberg",ln:"Weiler-Simmerberg"},8388:{sn:"Hergesnweiler",ln:"Hergesnweiler"},8389:{sn:"Wei\u00dfensberg",ln:"Wei\u00dfensberg"},8392:{sn:"Markt Rettenbach",ln:"Markt Rettenbach"},8393:{sn:"Holzg\u00fcnz",ln:"Holzg\u00fcnz"},8394:{sn:"Lautrach",ln:"Lautrach"},8395:{sn:"Tannheim",ln:"Tannheim(W\u00fcrtt.)"},8402:{sn:"M\u00fcnchsm\u00fcnster",ln:"M\u00fcnchsm\u00fcnster"},
8403:{sn:"Pf\u00f6rring",ln:"Pf\u00f6rring"},8404:{sn:"Oberdolling",ln:"Oberdolling"},8405:{sn:"Stammham",ln:"Stammham b.Ingolstadt"},8406:{sn:"B\u00f6hmfeld",ln:"B\u00f6hmfeld"},8407:{sn:"Grossmehring",ln:"Grossmehring"},8421:{sn:"Eichst\u00e4tt",ln:"Eichst\u00e4tt"},8422:{sn:"Dollnstein",ln:"Dollnstein"},8423:{sn:"Titting",ln:"Titting"},8424:{sn:"Nassenfels",ln:"Nassenfels"},8426:{sn:"Walting",ln:"Walting Kr.Eichst\u00e4tt"},8427:{sn:"Wellheim",ln:"Wellheim"},8431:{sn:"Neuburg",ln:"Neuburg a.d.Donau"},
8432:{sn:"Burgheim",ln:"Burgheim"},8433:{sn:"K\u00f6nigsmoos",ln:"K\u00f6nigsmoos"},8434:{sn:"Rennertshofen",ln:"Rennertshofen"},8441:{sn:"Pfaffenhofen",ln:"Pfaffenhofen a.d.Ilm"},8442:{sn:"Wolnzach",ln:"Wolnzach"},8443:{sn:"Hohenwart",ln:"Hohenwart Paar"},8444:{sn:"Schweitenkirchen",ln:"Schweitenkirchen"},8445:{sn:"Gerolsbach",ln:"Gerolsbach"},8446:{sn:"P\u00f6rnbach",ln:"P\u00f6rnbach"},8450:{sn:"Ingolstadt-Zuchering",ln:"Ingolstadt-Zuchering"},8452:{sn:"Geisenfeld",ln:"Geisenfeld"},8453:{sn:"Reichertshofen",
ln:"Reichertshofen Oberbay."},8454:{sn:"Karlshuld",ln:"Karlshuld"},8456:{sn:"Lenting",ln:"Lenting"},8457:{sn:"Vohburg",ln:"Vohburg a.d.Donau"},8458:{sn:"Gaimersheim",ln:"Gaimersheim"},8459:{sn:"Manching",ln:"Manching"},8460:{sn:"Berching-Holnstein",ln:"Berching-Holnstein"},8461:{sn:"Beilngries",ln:"Beilngries"},8462:{sn:"Berching",ln:"Berching"},8463:{sn:"Greding",ln:"Greding"},8464:{sn:"Dietfurt",ln:"Dietfurt a.d.Altm\u00fchl"},8465:{sn:"Kipfenberg",ln:"Kipfenberg"},8466:{sn:"Denkendorf",ln:"Denkendorf Oberbay."},
8467:{sn:"Kinding",ln:"Kinding"},8468:{sn:"Altmannstein-Pondorf",ln:"Altmannstein-Pondorf"},8469:{sn:"Freystadt-Burggriesbach",ln:"Freystadt-Burggriesbach"},8501:{sn:"Thyrnau",ln:"Thyrnau"},8502:{sn:"F\u00fcrstenzell",ln:"F\u00fcrstenzell"},8503:{sn:"Neuhaus",ln:"Neuhaus a.Inn"},8504:{sn:"Tittling",ln:"Tittling"},8505:{sn:"Hutthurm",ln:"Hutthurm"},8506:{sn:"Bad H\u00f6henstadt",ln:"Bad H\u00f6henstadt"},8507:{sn:"Neuburg",ln:"Neuburg am Inn"},8509:{sn:"Ruderting",ln:"Ruderting"},8531:{sn:"Pocking",
ln:"Pocking"},8532:{sn:"Bad Griesbach",ln:"Bad Griesbach im Rottal"},8533:{sn:"Rotthalm\u00fcnster",ln:"Rotthalm\u00fcnster"},8534:{sn:"Tettenweis",ln:"Tettenweis"},8535:{sn:"Haarbach",ln:"Haarbach"},8536:{sn:"K\u00f6\u00dflarn",ln:"K\u00f6\u00dflarn"},8537:{sn:"Bad F\u00fcssing-Aigen",ln:"Bad F\u00fcssing-Aigen"},8538:{sn:"Pocking-Hartkirchen",ln:"Pocking-Hartkirchen"},8541:{sn:"Vilshofen",ln:"Vilshofen Niederbay."},8542:{sn:"Ortenburg",ln:"Ortenburg"},8543:{sn:"Aidenbach",ln:"Aidenbach"},8544:{sn:"Eging",
ln:"Eging am See"},8545:{sn:"Hofkirchen",ln:"Hofkirchen (Bavaria)"},8546:{sn:"Windorf-Otterskirchen",ln:"Windorf-Otterskirchen"},8547:{sn:"Osterhofen-Gergweis",ln:"Osterhofen-Gergweis"},8548:{sn:"Vilshofen-Sandbach",ln:"Vilshofen-Sandbach"},8549:{sn:"Vilshofen-Pleinting",ln:"Vilshofen-Pleinting"},8550:{sn:"Philippsreut",ln:"Philippsreut"},8551:{sn:"Freyung",ln:"Freyung"},8552:{sn:"Grafenau",ln:"Grafenau Niederbay."},8553:{sn:"Spiegelau",ln:"Spiegelau"},8554:{sn:"Sch\u00f6nberg",ln:"Sch\u00f6nberg (Niederbayern)"},
8555:{sn:"Perlesreut",ln:"Perlesreut"},8556:{sn:"Haidm\u00fchle",ln:"Haidm\u00fchle"},8557:{sn:"Mauth",ln:"Mauth"},8558:{sn:"Hohenau",ln:"Hohenau (Niederbayern)"},8561:{sn:"Pfarrkirchen",ln:"Pfarrkirchen Niederbay."},8562:{sn:"Triftern",ln:"Triftern"},8563:{sn:"Bad Birnbach",ln:"Bad Birnbach Rottal"},8564:{sn:"Johanniskirchen",ln:"Johanniskirchen"},8565:{sn:"Dietersburg-Baumgarten",ln:"Dietersburg-Baumgarten"},8571:{sn:"Simbach",ln:"Simbach am Inn"},8572:{sn:"Tann",ln:"Tann Niederbay."},8573:{sn:"Ering",
ln:"Ering"},8574:{sn:"Wittibreut",ln:"Wittibreut"},8581:{sn:"Waldkirchen",ln:"Waldkirchen Niederbay."},8582:{sn:"R\u00f6hrnbach",ln:"R\u00f6hrnbach"},8583:{sn:"Neureichenau",ln:"Neureichenau"},8584:{sn:"Breitenberg",ln:"Breitenberg (Niederbayern)"},8585:{sn:"Grainet",ln:"Grainet"},8586:{sn:"Hauzenberg",ln:"Hauzenberg"},8591:{sn:"Obernzell",ln:"Obernzell"},8592:{sn:"Wegscheid",ln:"Wegscheid Niederbay."},8593:{sn:"Untergriesbach",ln:"Untergriesbach"},8621:{sn:"Trostberg",ln:"Trostberg"},8622:{sn:"Tacherting",
ln:"Tacherting"},8623:{sn:"Kirchweidach",ln:"Kirchweidach"},8624:{sn:"Obing",ln:"Obing"},8628:{sn:"Kienberg",ln:"Kienberg"},8629:{sn:"Palling",ln:"Palling"},8630:{sn:"Kraiburg",ln:"Kraiburg"},8631:{sn:"M\u00fchldorf",ln:"M\u00fchldorf"},8633:{sn:"T\u00fc\u00dfling",ln:"T\u00fc\u00dfling/Polling"},8634:{sn:"Garching",ln:"Garching"},8636:{sn:"Ampfing",ln:"Ampfing"},8638:{sn:"Waldkraiburg",ln:"Waldkraiburg"},8650:{sn:"Marktschellenberg",ln:"Marktschellenberg"},8651:{sn:"Bad Reichenhall",ln:"Bad Reichenhall"},
8652:{sn:"Berchtesgaden",ln:"Berchtesgaden"},8654:{sn:"Freilassing",ln:"Freilassing"},8656:{sn:"Anger",ln:"Anger"},8657:{sn:"Ramsau",ln:"Ramsau"},8661:{sn:"Grabenst\u00e4tt",ln:"Grabenst\u00e4tt"},8662:{sn:"Siegsdorf",ln:"Siegsdorf"},8663:{sn:"Ruhpolding",ln:"Ruhpolding"},8664:{sn:"Chieming",ln:"Chieming"},8665:{sn:"Inzell",ln:"Inzell"},8666:{sn:"Teisendorf",ln:"Teisendorf"},8667:{sn:"Seebruck",ln:"Seebruck"},8669:{sn:"Traunreut",ln:"Traunreut"},8670:{sn:"Reischach",ln:"Reischach"},8677:{sn:"Burghausen",
ln:"Burghausen"},8679:{sn:"Burgkirchen",ln:"Burgkirchen an der Alz"},8682:{sn:"Laufen",ln:"Laufen (Salzach)"},8705:{sn:"Altfraunhofen",ln:"Altfraunhofen"},8731:{sn:"Dingolfing",ln:"Dingolfing"},8732:{sn:"Frontenhausen",ln:"Frontenhausen"},8741:{sn:"Vilsbiburg",ln:"Vilsbiburg"},8743:{sn:"Geisenhausen",ln:"Geisenhausen"},8745:{sn:"Bodenkirchen",ln:"Bodenkirchen"},8761:{sn:"Moosburg",ln:"Moosburg an der Isar"},8765:{sn:"Tondorf",ln:"Tondorf"},8781:{sn:"Rottenburg",ln:"Rottenburg an der Laaber"},8801:{sn:"Seeshaupt",
ln:"Seeshaupt"},8802:{sn:"Huglfing",ln:"Huglfing"},8803:{sn:"Pei\u00dfenberg",ln:"Pei\u00dfenberg"},8805:{sn:"Hohenpei\u00dfenberg",ln:"Hohenpei\u00dfenberg"},8806:{sn:"Utting",ln:"Utting am Ammersee"},8807:{sn:"Die\u00dfen",ln:"Die\u00dfen am Ammersee"},8808:{sn:"P\u00e4hl",ln:"P\u00e4hl"},8809:{sn:"Wessobrunn",ln:"Wessobrunn"},8821:{sn:"Garmisch-Partenkirchen",ln:"Garmisch-Partenkirchen"},8823:{sn:"Mittenwald",ln:"Mittenwald"},8824:{sn:"Oberau",ln:"Oberau"},8825:{sn:"Kr\u00fcn",ln:"Kr\u00fcn"},
8841:{sn:"Murnau",ln:"Murnau"},8851:{sn:"Kochel",ln:"Kochel am See"},8856:{sn:"Penzberg",ln:"Penzberg"},8857:{sn:"Benediktbeuern",ln:"Benediktbeuern"},8858:{sn:"Walchensee",ln:"Walchensee"},8860:{sn:"Bernbeuren",ln:"Bernbeuren"},8861:{sn:"Schongau",ln:"Schongau"},8862:{sn:"Steingaden",ln:"Steingaden (Obb)"},8867:{sn:"Rottenbuch",ln:"Rottenbuch (Obb)"},8868:{sn:"Schwabsoien",ln:"Schwabsoien"},8869:{sn:"Kinsau",ln:"Kinsau"},9070:{sn:"Tapfheim",ln:"Tapfheim"},9071:{sn:"Dillingen",ln:"Dillingen"},9072:{sn:"Lauingen",
ln:"Lauingen"},9073:{sn:"Gundelfingen",ln:"Gundelfingen"},9074:{sn:"H\u00f6chst\u00e4dt",ln:"H\u00f6chst\u00e4dt"},9075:{sn:"Gl\u00f6tt",ln:"Gl\u00f6tt"},9076:{sn:"Wittislingen",ln:"Wittislingen"},9077:{sn:"Bachhagel",ln:"Bachhagel"},9078:{sn:"Mertingen",ln:"Mertingen"},9080:{sn:"Harburg",ln:"Harburg"},9081:{sn:"N\u00f6rdlingen",ln:"N\u00f6rdlingen"},9082:{sn:"Oettingen",ln:"Oettingen"},9083:{sn:"M\u00f6ttingen",ln:"M\u00f6ttingen"},9084:{sn:"Bissingen",ln:"Bissingen"},9085:{sn:"Alerheim",ln:"Alerheim"},
9086:{sn:"Fremdingen",ln:"Fremdingen"},9087:{sn:"Marktoffingen",ln:"Marktoffingen"},9088:{sn:"M\u00f6nchsdeggingen",ln:"M\u00f6nchsdeggingen"},9089:{sn:"Bissingen-Unterringingen",ln:"Bissingen-Unterringingen"},9090:{sn:"Rain",ln:"Rain"},9091:{sn:"Monheim",ln:"Monheim"},9092:{sn:"Wemding",ln:"Wemding"},9093:{sn:"Polsingen",ln:"Polsingen"},9094:{sn:"Tagmersheim",ln:"Tagmersheim"},9097:{sn:"Marxheim",ln:"Marxheim"},9099:{sn:"Kaisheim",ln:"Kaisheim"},9101:{sn:"Langenzenn",ln:"Langenzenn"},9102:{sn:"Wilhermsdorf",
ln:"Wilhermsdorf"},9103:{sn:"Cadolzburg",ln:"Cadolzburg"},9104:{sn:"Emskirchen",ln:"Emskirchen"},9105:{sn:"Gro\u00dfhabersdorf",ln:"Gro\u00dfhabersdorf"},9106:{sn:"Markt Erlbach",ln:"Markt Erlbach"},9107:{sn:"Trautskirchen",ln:"Trautskirchen"},9122:{sn:"Schwabach",ln:"Schwabach"},9123:{sn:"Lauf",ln:"Lauf an der Pegnitz"},9126:{sn:"Eckental",ln:"Eckental"},9127:{sn:"Ro\u00dftal",ln:"Ro\u00dftal"},9128:{sn:"Feucht",ln:"Feucht"},9129:{sn:"Wendelstein",ln:"Wendelstein (Mittelfranken)"},9131:{sn:"Erlangen",
ln:"Erlangen"},9132:{sn:"Herzogenaurach",ln:"Herzogenaurach"},9133:{sn:"Baiersdorf",ln:"Baiersdorf"},9134:{sn:"Neunkirchen",ln:"Neunkirchen am Brand"},9135:{sn:"He\u00dfdorf",ln:"He\u00dfdorf"},9141:{sn:"Wei\u00dfenburg",ln:"Wei\u00dfenburg in Bayern"},9142:{sn:"Treuchtlingen",ln:"Treuchtlingen"},9143:{sn:"Pappenheim",ln:"Pappenheim"},9144:{sn:"Pleinfeld",ln:"Pleinfeld"},9145:{sn:"Solnhofen",ln:"Solnhofen"},9146:{sn:"Markt Berolzheim",ln:"Markt Berolzheim"},9147:{sn:"Nennslingen",ln:"Nennslingen"},
9148:{sn:"Ettenstatt",ln:"Ettenstatt"},9149:{sn:"Wei\u00dfenburg-Suffersheim",ln:"Wei\u00dfenburg-Suffersheim"},9151:{sn:"Hersbruck",ln:"Hersbruck"},9152:{sn:"Hartenstein",ln:"Hartenstein"},9153:{sn:"Schnaittach",ln:"Schnaittach"},9154:{sn:"Pommelsbrunn",ln:"Pommelsbrunn"},9155:{sn:"Simmelsdorf",ln:"Simmelsdorf"},9156:{sn:"Neuhaus",ln:"Neuhaus an der Pegnitz"},9157:{sn:"Alfeld",ln:"Alfeld (Mittelfranken)"},9158:{sn:"Offenhausen",ln:"Offenhausen (Mittelfranken)"},9161:{sn:"Neustadt",ln:"Neustadt an der Aisch"},
9162:{sn:"Scheinfeld",ln:"Scheinfeld"},9163:{sn:"Dachsbach",ln:"Dachsbach"},9164:{sn:"Langenfeld",ln:"Langenfeld"},9165:{sn:"Sugenheim",ln:"Sugenheim"},9166:{sn:"M\u00fcnchsteinach",ln:"M\u00fcnchsteinach"},9167:{sn:"Oberscheinfeld",ln:"Oberscheinfeld"},9170:{sn:"Schwanstetten",ln:"Schwanstetten"},9171:{sn:"Roth",ln:"Roth"},9172:{sn:"Georgensgm\u00fcnd",ln:"Georgensgm\u00fcnd"},9173:{sn:"Thalm\u00e4ssing",ln:"Thalm\u00e4ssing"},9174:{sn:"Hilpoltstein",ln:"Hilpoltstein"},9175:{sn:"Spalt",ln:"Spalt"},
9176:{sn:"Allersberg",ln:"Allersberg"},9177:{sn:"Heideck",ln:"Heideck"},9178:{sn:"Abenberg",ln:"Abenberg"},9179:{sn:"Freystadt",ln:"Freystadt"},9180:{sn:"Seligenporten",ln:"Seligenporten bei Pyrbaum (Oberpfalz)"},9181:{sn:"Neumarkt",ln:"Neumarkt in der Oberpfalz"},9182:{sn:"Velburg",ln:"Velburg"},9183:{sn:"Burgthann",ln:"Burgthann"},9184:{sn:"Deining",ln:"Deining (Oberpfalz)"},9185:{sn:"M\u00fchlhausen",ln:"M\u00fchlhausen (Oberpfalz)"},9186:{sn:"Lauterhofen",ln:"Lauterhofen (Oberpfalz)"},9187:{sn:"Altdorf",
ln:"Altdorf bei N\u00fcrnberg"},9188:{sn:"Postbauer-Heng",ln:"Postbauer-Heng"},9189:{sn:"Berg",ln:"Berg bei Neumarkt in der Oberpfalz"},9191:{sn:"Forchheim",ln:"Forchheim"},9192:{sn:"Gr\u00e4fenberg",ln:"Gr\u00e4fenberg"},9193:{sn:"H\u00f6chstadt",ln:"H\u00f6chstadt"},9194:{sn:"Ebermannstadt",ln:"Ebermannstadt"},9195:{sn:"Adelsdorf",ln:"Adelsdorf"},9196:{sn:"Wiesenttal",ln:"Wiesenttal"},9198:{sn:"Heiligenstadt",ln:"Heiligenstadt in Oberfranken"},9201:{sn:"Gesees",ln:"Gesees"},9202:{sn:"Waischenfeld",
ln:"Waischenfeld"},9203:{sn:"Neudrossenfeld",ln:"Neudrossenfeld"},9204:{sn:"Plankenfels",ln:"Plankenfels"},9205:{sn:"Vorbach",ln:"Vorbach"},9206:{sn:"Obernsees",ln:"Obernsees"},9207:{sn:"K\u00f6nigsfeld",ln:"K\u00f6nigsfeld (Oberfranken)"},9208:{sn:"Bindlach",ln:"Bindlach"},9220:{sn:"Azendorf",ln:"Azendorf"},9221:{sn:"Kulmbach",ln:"Kulmbach"},9222:{sn:"Presseck",ln:"Presseck"},9223:{sn:"Rugendorf",ln:"Rugendorf"},9225:{sn:"Stadtsteinach",ln:"Stadtsteinach"},9227:{sn:"Neuenmarkt",ln:"Neuenmarkt"},
9228:{sn:"Thurnau",ln:"Thurnau"},9229:{sn:"Mainleus",ln:"Mainleus"},9231:{sn:"Marktredwitz",ln:"Marktredwitz"},9232:{sn:"Wunsiedel",ln:"Wunsiedel im Fichtelgebirge"},9233:{sn:"Arzberg",ln:"Arzberg (Oberfranken)"},9234:{sn:"Neusorg",ln:"Neusorg"},9235:{sn:"Thierstein",ln:"Thierstein"},9236:{sn:"Nagel",ln:"Nagel"},9238:{sn:"R\u00f6slau",ln:"R\u00f6slau"},9241:{sn:"Pegnitz",ln:"Pegnitz"},9242:{sn:"G\u00f6\u00dfweinstein",ln:"G\u00f6\u00dfweinstein"},9243:{sn:"Pottenstein",ln:"Pottenstein (Oberfranken)"},
9244:{sn:"Betzenstein",ln:"Betzenstein"},9245:{sn:"Obertrubach",ln:"Obertrubach"},9246:{sn:"Trockau",ln:"Trockau"},9251:{sn:"M\u00fcnchberg",ln:"M\u00fcnchberg"},9252:{sn:"Helmbrechts",ln:"Helmbrechts"},9253:{sn:"Wei\u00dfenstadt",ln:"Wei\u00dfenstadt"},9254:{sn:"Gefrees",ln:"Gefrees"},9255:{sn:"Marktleugast",ln:"Marktleugast"},9256:{sn:"Stammbach",ln:"Stammbach"},9257:{sn:"Zell",ln:"Zell (Oberfranken)"},9260:{sn:"Wilhelmsthal",ln:"Wilhelmsthal (Oberfranken)"},9261:{sn:"Kronach",ln:"Kronach"},9262:{sn:"Wallenfels",
ln:"Wallenfels"},9263:{sn:"Ludwigsstadt",ln:"Ludwigsstadt"},9264:{sn:"K\u00fcps",ln:"K\u00fcps"},9265:{sn:"Pressig",ln:"Pressig"},9266:{sn:"Mitwitz",ln:"Mitwitz"},9267:{sn:"Nordhalben",ln:"Nordhalben"},9268:{sn:"Teuschnitz",ln:"Teuschnitz"},9269:{sn:"Tettau",ln:"Tettau (Oberfranken)"},9270:{sn:"Creu\u00dfen",ln:"Creu\u00dfen"},9271:{sn:"Alladorf",ln:"Alladorf"},9272:{sn:"Fichtelberg",ln:"Fichtelberg"},9273:{sn:"Bad Berneck",ln:"Bad Berneck im Fichtelgebirge"},9274:{sn:"Hollfeld",ln:"Hollfeld"},9275:{sn:"Speichersdorf",
ln:"Speichersdorf"},9276:{sn:"Bischofsgr\u00fcn",ln:"Bischofsgr\u00fcn"},9277:{sn:"Warmensteinach",ln:"Warmensteinach"},9278:{sn:"Weidenberg",ln:"Weidenberg"},9279:{sn:"Mistelgau",ln:"Mistelgau"},9280:{sn:"Selbitz",ln:"Selbitz (Oberfranken)"},9281:{sn:"Hof",ln:"Hof (Saale)"},9282:{sn:"Naila",ln:"Naila"},9283:{sn:"Rehau",ln:"Rehau"},9284:{sn:"Schwarzenbach",ln:"Schwarzenbach an der Saale"},9285:{sn:"Kirchenlamitz",ln:"Kirchenlamitz"},9286:{sn:"Oberkotzau",ln:"Oberkotzau"},9287:{sn:"Selb",ln:"Selb"},
9288:{sn:"Bad Steben",ln:"Bad Steben"},9289:{sn:"Schwarzenbach",ln:"Schwarzenbach am Wald"},9292:{sn:"Konradsreuth",ln:"Konradsreuth"},9293:{sn:"Berg",ln:"Berg (Oberfranken)"},9294:{sn:"Regnitzlosau",ln:"Regnitzlosau"},9295:{sn:"T\u00f6pen",ln:"T\u00f6pen"},9302:{sn:"Rottendorf",ln:"Rottendorf (Unterfranken)"},9303:{sn:"Eibelstadt",ln:"Eibelstadt"},9305:{sn:"Estenfeld",ln:"Estenfeld"},9306:{sn:"Kist",ln:"Kist"},9307:{sn:"Altertheim",ln:"Altertheim"},9321:{sn:"Kitzingen",ln:"Kitzingen"},9323:{sn:"Iphofen",
ln:"Iphofen"},9324:{sn:"Dettelbach",ln:"Dettelbach"},9325:{sn:"Kleinlangheim",ln:"Kleinlangheim"},9326:{sn:"Markt Einersheim",ln:"Markt Einersheim"},9331:{sn:"Ochsenfurt",ln:"Ochsenfurt"},9332:{sn:"Marktbreit",ln:"Marktbreit"},9333:{sn:"Sommerhausen",ln:"Sommerhausen"},9334:{sn:"Giebelstadt",ln:"Giebelstadt"},9335:{sn:"Aub",ln:"Aub (Kreis W\u00fcrzburg)"},9336:{sn:"B\u00fctthard",ln:"B\u00fctthard"},9337:{sn:"Gauk\u00f6nigshofen",ln:"Gauk\u00f6nigshofen"},9338:{sn:"R\u00f6ttingen",ln:"R\u00f6ttingen (Unterfranken)"},
9339:{sn:"Ippesheim",ln:"Ippesheim"},9340:{sn:"K\u00f6nigheim-Brehmen",ln:"K\u00f6nigheim-Brehmen"},9341:{sn:"Tauberbischofsheim",ln:"Tauberbischofsheim"},9342:{sn:"Wertheim",ln:"Wertheim"},9343:{sn:"Lauda-K\u00f6nigshofen",ln:"Lauda-K\u00f6nigshofen"},9344:{sn:"Gro\u00dfrinderfeld-Gerchsheim",ln:"Gro\u00dfrinderfeld-Gerchsheim"},9345:{sn:"K\u00fclsheim",ln:"K\u00fclsheim (Baden)"},9346:{sn:"Gr\u00fcnsfeld",ln:"Gr\u00fcnsfeld"},9347:{sn:"Wittighausen",ln:"Wittighausen"},9348:{sn:"Werbach-Gamburg",
ln:"Werbach-Gamburg"},9349:{sn:"Werbach-Wenkheim",ln:"Werbach-Wenkheim"},9350:{sn:"Hundsbach",ln:"Hundsbach (Unterfranken)"},9351:{sn:"Gem\u00fcnden",ln:"Gem\u00fcnden am Main"},9352:{sn:"Lohr",ln:"Lohr am Main"},9353:{sn:"Karlstadt",ln:"Karlstadt"},9354:{sn:"Rieneck",ln:"Rieneck"},9355:{sn:"Frammersbach",ln:"Frammersbach"},9356:{sn:"Burgsinn",ln:"Burgsinn"},9357:{sn:"Gr\u00e4fendorf",ln:"Gr\u00e4fendorf (Unterfranken)"},9358:{sn:"G\u00f6ssenheim",ln:"G\u00f6ssenheim"},9359:{sn:"Wiesenfeld",ln:"Wiesenfeld (Unterfranken)"},
9360:{sn:"Th\u00fcngen",ln:"Th\u00fcngen (Bayern)"},9363:{sn:"Arnstein",ln:"Arnstein (Unterfranken)"},9364:{sn:"Zellingen",ln:"Zellingen"},9365:{sn:"Rimpar",ln:"Rimpar"},9366:{sn:"Geroldshausen",ln:"Geroldshausen"},9367:{sn:"Unterpleichfeld",ln:"Unterpleichfeld"},9369:{sn:"Uettingen",ln:"Uettingen"},9371:{sn:"Miltenberg",ln:"Miltenberg"},9372:{sn:"Klingenberg",ln:"Klingenberg am Main"},9373:{sn:"Amorbach",ln:"Amorbach"},9374:{sn:"Eschau",ln:"Eschau (Unterfranken)"},9375:{sn:"Freudenberg",ln:"Freudenberg"},
9376:{sn:"Collenberg",ln:"Collenberg"},9377:{sn:"Freudenberg-Boxtal",ln:"Freudenberg-Boxtal"},9378:{sn:"Riedern",ln:"Riedern (Unterfranken)"},9381:{sn:"Volkach",ln:"Volkach"},9382:{sn:"Gerolzhofen",ln:"Gerolzhofen"},9383:{sn:"Wiesentheid",ln:"Wiesentheid"},9384:{sn:"Schwanfeld",ln:"Schwanfeld"},9385:{sn:"Kolitzheim",ln:"Kolitzheim"},9386:{sn:"Prosselsheim",ln:"Prosselsheim"},9391:{sn:"Marktheidenfeld",ln:"Marktheidenfeld"},9392:{sn:"Faulbach",ln:"Faulbach (Unterfranken)"},9393:{sn:"Rothenfels",ln:"Rothenfels (Unterfranken)"},
9394:{sn:"Oberndorf",ln:"Oberndorf bei Marktheidenfeld"},9395:{sn:"Homburg",ln:"Homburg am Main"},9396:{sn:"Urspringen",ln:"Urspringen bei Lohr am Main"},9397:{sn:"Wertheim-Dertingen",ln:"Wertheim-Dertingen"},9398:{sn:"Birkenfeld",ln:"Birkenfeld bei W\u00fcrzburg"},9401:{sn:"Neutraubling",ln:"Neutraubling"},9402:{sn:"Regenstauf",ln:"Regenstauf"},9403:{sn:"Donaustauf",ln:"Donaustauf"},9404:{sn:"Nittendorf",ln:"Nittendorf"},9405:{sn:"Bad Abbach",ln:"Bad Abbach"},9406:{sn:"Mintraching",ln:"Mintraching"},
9407:{sn:"Wenzenbach",ln:"Wenzenbach"},9408:{sn:"Altenthann",ln:"Altenthann"},9409:{sn:"Pielenhofen",ln:"Pielenhofen"},9420:{sn:"Gundh\u00f6ring",ln:"Gundh\u00f6ring"},9421:{sn:"Straubing",ln:"Straubing"},9422:{sn:"Bogen",ln:"Bogen (Niederbayern)"},9423:{sn:"Geiselh\u00f6ring",ln:"Geiselh\u00f6ring"},9424:{sn:"Stra\u00dfkirchen",ln:"Stra\u00dfkirchen bei Straubing"},9426:{sn:"Oberschneiding",ln:"Oberschneiding"},9427:{sn:"Leiblfing",ln:"Leiblfing"},9428:{sn:"Kirchroth",ln:"Kirchroth"},9429:{sn:"Rain",
ln:"Rain (Niederbayern)"},9431:{sn:"Schwandorf",ln:"Schwandorf"},9433:{sn:"Nabburg",ln:"Nabburg"},9434:{sn:"Bodenw\u00f6hr",ln:"Bodenw\u00f6hr"},9435:{sn:"Schwarzenfeld",ln:"Schwarzenfeld"},9436:{sn:"Nittenau",ln:"Nittenau"},9438:{sn:"Freih\u00f6ls",ln:"Freih\u00f6ls"},9439:{sn:"Kemnath",ln:"Kemnath bei Fuhrn"},9441:{sn:"Kelheim",ln:"Kelheim"},9442:{sn:"Riedenburg",ln:"Riedenburg"},9443:{sn:"Abensberg",ln:"Abensberg"},9444:{sn:"Siegenburg",ln:"Siegenburg"},9445:{sn:"Neustadt",ln:"Neustadt an der Donau"},
9446:{sn:"Altmannstein",ln:"Altmannstein"},9447:{sn:"Essing",ln:"Essing"},9448:{sn:"Herrnwahlthann",ln:"Herrnwahlthann"},9451:{sn:"Eggm\u00fchl",ln:"Eggm\u00fchl"},9452:{sn:"Langquaid",ln:"Langquaid"},9453:{sn:"Thalmassing",ln:"Thalmassing (Oberpfalz)"},9454:{sn:"Aufhausen",ln:"Aufhausen (Oberpfalz)"},9461:{sn:"Roding",ln:"Roding"},9462:{sn:"Falkenstein",ln:"Falkenstein (Oberpfalz)"},9463:{sn:"Wald",ln:"Wald (Oberpfalz)"},9464:{sn:"Walderbach",ln:"Walderbach, Reichenbach"},9465:{sn:"Neukirchen-Balbini",
ln:"Neukirchen-Balbini"},9466:{sn:"Stamsried",ln:"Stamsried"},9467:{sn:"Michelsneukirchen",ln:"Michelsneukirchen"},9468:{sn:"Zell",ln:"Zell (Landkreis Cham)"},9469:{sn:"Neub\u00e4u",ln:"Neub\u00e4u (Oberpfalz)"},9471:{sn:"Burglengenfeld",ln:"Burglengenfeld"},9472:{sn:"Hohenfels",ln:"Hohenfels (Oberpfalz)"},9473:{sn:"Kallm\u00fcnz",ln:"Kallm\u00fcnz"},9474:{sn:"Schmidm\u00fchlen",ln:"Schmidm\u00fchlen"},9480:{sn:"S\u00fcnching",ln:"S\u00fcnching"},9481:{sn:"Pfatter",ln:"Pfatter"},9482:{sn:"W\u00f6rth",
ln:"W\u00f6rth an der Donau"},9484:{sn:"Brennberg",ln:"Brennberg"},9491:{sn:"Hemau",ln:"Hemau"},9492:{sn:"Parsberg",ln:"Parsberg"},9493:{sn:"Beratzhausen",ln:"Beratzhausen"},9495:{sn:"Breitenbrunn",ln:"Breitenbrunn (Oberpfalz)"},9497:{sn:"Seubersdorf",ln:"Seubersdorf (Oberpfalz)"},9498:{sn:"Laaber",ln:"Laaber bei Hemau"},9499:{sn:"Painten",ln:"Painten"},9502:{sn:"Frensdorf",ln:"Frensdorf"},9503:{sn:"Oberhaid",ln:"Oberhaid (Oberfranken)"},9504:{sn:"Stadelhofen",ln:"Stadelhofen"},9505:{sn:"Litzendorf",
ln:"Litzendorf"},9521:{sn:"Ha\u00dffurt",ln:"Ha\u00dffurt"},9523:{sn:"Hofheim",ln:"Hofheim in Unterfranken"},9524:{sn:"Zeil",ln:"Zeil am Main, Sand am Main"},9525:{sn:"K\u00f6nigsberg",ln:"K\u00f6nigsberg in Bayern"},9527:{sn:"Knetzgau",ln:"Knetzgau"},9528:{sn:"Donnersdorf",ln:"Donnersdorf"},9529:{sn:"Oberaurach",ln:"Oberaurach"},9531:{sn:"Ebern",ln:"Ebern"},9532:{sn:"Maroldsweisach",ln:"Maroldsweisach"},9533:{sn:"Untermerzbach",ln:"Untermerzbach"},9534:{sn:"Burgpreppach",ln:"Burgpreppach"},9535:{sn:"Pfarrweisach",
ln:"Pfarrweisach"},9536:{sn:"Kirchlauter",ln:"Kirchlauter"},9542:{sn:"Schesslitz",ln:"Schesslitz"},9543:{sn:"Hirschaid",ln:"Hirschaid"},9544:{sn:"Baunach",ln:"Baunach"},9545:{sn:"Buttenheim",ln:"Buttenheim"},9546:{sn:"Burgebrach",ln:"Burgebrach"},9547:{sn:"Zapfendorf",ln:"Zapfendorf"},9548:{sn:"M\u00fchlhausen",ln:"M\u00fchlhausen Mittelfr."},9549:{sn:"Lisberg",ln:"Lisberg"},9551:{sn:"Burgwindheim",ln:"Burgwindheim"},9552:{sn:"Burghaslach",ln:"Burghaslach"},9553:{sn:"Ebrach",ln:"Ebrach Oberfr."},
9554:{sn:"Untersteinbach",ln:"Untersteinbach Unterfr."},9555:{sn:"Schl\u00fcsselfeld-Aschbach",ln:"Schl\u00fcsselfeld-Aschbach"},9556:{sn:"Geiselwind",ln:"Geiselwind"},9560:{sn:"Grub",ln:"Grub a.Forst"},9561:{sn:"Coburg",ln:"Coburg"},9562:{sn:"Sonnefeld",ln:"Sonnefeld"},9563:{sn:"R\u00f6dental",ln:"R\u00f6dental"},9564:{sn:"Rodach",ln:"Rodach"},9565:{sn:"Untersiemau",ln:"Untersiemau"},9566:{sn:"Meeder",ln:"Meeder"},9567:{sn:"Sesslach-Gem\u00fcnda",ln:"Sesslach-Gem\u00fcnda"},9568:{sn:"Neustadt",ln:"Neustadt b.Coburg"},
9569:{sn:"Sesslach",ln:"Sesslach"},9571:{sn:"Lichtenfels",ln:"Lichtenfels (Bavaria)"},9572:{sn:"Burgkunstadt",ln:"Burgkunstadt"},9573:{sn:"Staffelstein",ln:"Staffelstein Oberfr."},9574:{sn:"Marktzeuln",ln:"Marktzeuln"},9575:{sn:"Weismain",ln:"Weismain"},9576:{sn:"Lichtenfels-Isling",ln:"Lichtenfels-Isling"},9602:{sn:"Neustadt",ln:"Neustadt an der Waldnaab"},9603:{sn:"Flo\u00df",ln:"Flo\u00df"},9604:{sn:"Wernberg-K\u00f6blitz",ln:"Wernberg-K\u00f6blitz"},9605:{sn:"Weiherhammer",ln:"Weiherhammer"},
9606:{sn:"Pfreimd",ln:"Pfreimd"},9607:{sn:"Luhe-Wildenau",ln:"Luhe-Wildenau"},9608:{sn:"Kohlberg",ln:"Kohlberg"},9621:{sn:"Amberg",ln:"Amberg (Oberpfalz)"},9622:{sn:"Hirschau",ln:"Hirschau"},9624:{sn:"Ensdorf",ln:"Ensdorf (Oberpfalz)"},9625:{sn:"Kastl",ln:"Kastl bei Amberg (Oberpfalz)"},9626:{sn:"Hohenburg",ln:"Hohenburg"},9627:{sn:"Freudenberg",ln:"Freudenberg (Oberpfalz)"},9628:{sn:"Ursensollen",ln:"Ursensollen"},9631:{sn:"Tirschenreuth",ln:"Tirschenreuth"},9632:{sn:"Waldsassen",ln:"Waldsassen"},
9633:{sn:"Mitterteich",ln:"Mitterteich"},9634:{sn:"Wiesau",ln:"Wiesau"},9635:{sn:"B\u00e4rnau",ln:"B\u00e4rnau"},9636:{sn:"Pl\u00f6\u00dfberg",ln:"Pl\u00f6\u00dfberg"},9637:{sn:"Falkenberg",ln:"Falkenberg (Oberpfalz)"},9638:{sn:"Neualbenreuth",ln:"Neualbenreuth"},9639:{sn:"M\u00e4hring",ln:"M\u00e4hring"},9641:{sn:"Grafenw\u00f6hr",ln:"Grafenw\u00f6hr"},9642:{sn:"Kemnath-Stadt",ln:"Kemnath-Stadt"},9643:{sn:"Auerbach",ln:"Auerbach (Oberpfalz)"},9644:{sn:"Pressath",ln:"Pressath"},9645:{sn:"Eschenbach",
ln:"Eschenbach (Oberpfalz)"},9646:{sn:"Freihung",ln:"Freihung"},9647:{sn:"Kirchenthumbach",ln:"Kirchenthumbach"},9648:{sn:"Neustadt",ln:"Neustadt am Kulm"},9651:{sn:"Vohenstrau\u00df",ln:"Vohenstrau\u00df"},9652:{sn:"Waidhaus",ln:"Waidhaus"},9653:{sn:"Eslarn",ln:"Eslarn"},9654:{sn:"Pleystein",ln:"Pleystein"},9655:{sn:"T\u00e4nnesberg",ln:"T\u00e4nnesberg"},9656:{sn:"Moosbach",ln:"Moosbach (Oberpfalz)"},9657:{sn:"Waldthurn",ln:"Waldthurn"},9658:{sn:"Georgenberg",ln:"Georgenberg (Oberpfalz)"},9659:{sn:"Leuchtenberg",
ln:"Leuchtenberg"},9661:{sn:"Sulzbach-Rosenberg",ln:"Sulzbach-Rosenberg"},9662:{sn:"Vilseck",ln:"Vilseck"},9663:{sn:"Neukirchen",ln:"Neukirchen bei Sulzbach-Rosenberg"},9664:{sn:"Hahnbach",ln:"Hahnbach"},9665:{sn:"K\u00f6nigstein",ln:"K\u00f6nigstein (Oberpfalz)"},9666:{sn:"Illschwang",ln:"Illschwang"},9671:{sn:"Oberviechtach",ln:"Oberviechtach"},9672:{sn:"Neunburg",ln:"Neunburg vorm Wald"},9673:{sn:"Tiefenbach",ln:"Tiefenbach (Oberpfalz)"},9674:{sn:"Sch\u00f6nsee",ln:"Sch\u00f6nsee"},9675:{sn:"Altendorf",
ln:"Altendorf (Oberpfalz)"},9676:{sn:"Winklarn",ln:"Winklarn (Oberpfalz)"},9677:{sn:"Oberviechtach-Pullenried",ln:"Oberviechtach-Pullenried"},9681:{sn:"Windischeschenbach",ln:"Windischeschenbach"},9682:{sn:"Erbendorf",ln:"Erbendorf"},9683:{sn:"Friedenfels",ln:"Friedenfels"},9701:{sn:"Sandberg",ln:"Sandberg Unterfr."},9704:{sn:"Euerdorf",ln:"Euerdorf"},9708:{sn:"Bad Bocklet",ln:"Bad Bocklet"},9720:{sn:"\u00dcchtelhausen",ln:"\u00dcchtelhausen"},9721:{sn:"Schweinfurt",ln:"Schweinfurt"},9722:{sn:"Werneck",
ln:"Werneck"},9723:{sn:"R\u00f6thlein",ln:"R\u00f6thlein"},9724:{sn:"Stadtlauringen",ln:"Stadtlauringen"},9725:{sn:"Poppenhausen",ln:"Poppenhausen Unterfr."},9726:{sn:"Euerbach",ln:"Euerbach"},9727:{sn:"Schonungen-Marktsteinach",ln:"Schonungen-Marktsteinach"},9728:{sn:"W\u00fclfershausen",ln:"W\u00fclfershausen Unterfr."},9729:{sn:"Grettstadt",ln:"Grettstadt"},9732:{sn:"Hammelburg",ln:"Hammelburg"},9733:{sn:"M\u00fcnnerstadt",ln:"M\u00fcnnerstadt"},9734:{sn:"Burkardroth",ln:"Burkardroth"},9735:{sn:"Massbach",
ln:"Massbach"},9736:{sn:"Oberthulba",ln:"Oberthulba"},9737:{sn:"Wartmannsroth",ln:"Wartmannsroth"},9738:{sn:"Rottershausen",ln:"Rottershausen"},9741:{sn:"Bad Br\u00fcckenau",ln:"Bad Br\u00fcckenau"},9742:{sn:"Kalbach",ln:"Kalbach Rh\u00f6n"},9744:{sn:"Zeitlofs-Detter",ln:"Zeitlofs-Detter"},9745:{sn:"Wildflecken",ln:"Wildflecken"},9746:{sn:"Zeitlofs",ln:"Zeitlofs"},9747:{sn:"Geroda",ln:"Geroda"},9748:{sn:"Motten",ln:"Motten"},9749:{sn:"Oberbach",ln:"Oberbach Unterfr."},9761:{sn:"Bad K\u00f6nigshofen",
ln:"Bad K\u00f6nigshofen"},9762:{sn:"Saal",ln:"Saal a.d.Saale"},9763:{sn:"Sulzdorf",ln:"Sulzdorf a.d.Lederhecke"},9764:{sn:"H\u00f6chheim",ln:"H\u00f6chheim"},9765:{sn:"Trappstadt",ln:"Trappstadt"},9766:{sn:"Grosswenkheim",ln:"Grosswenkheim"},9771:{sn:"Bad Neustadt",ln:"Bad Neustadt"},9772:{sn:"Bischofsheim",ln:"Bischofsheim an der Rh\u00f6n"},9773:{sn:"Unsleben",ln:"Unsleben"},9774:{sn:"Oberelsbach",ln:"Oberelsbach"},9775:{sn:"Sch\u00f6nau",ln:"Sch\u00f6nau an der Brend"},9776:{sn:"Mellrichstadt",
ln:"Mellrichstadt"},9777:{sn:"Ostheim",ln:"Ostheim vor der Rh\u00f6n"},9778:{sn:"Fladungen",ln:"Fladungen"},9779:{sn:"Nordheim",ln:"Nordheim vor der Rh\u00f6n"},9802:{sn:"Ansbach-Katterbach",ln:"Ansbach-Katterbach"},9803:{sn:"Colmberg",ln:"Colmberg"},9804:{sn:"Aurach",ln:"Aurach"},9805:{sn:"Burgoberbach",ln:"Burgoberbach"},9820:{sn:"Lehrberg",ln:"Lehrberg"},9822:{sn:"Bechhofen",ln:"Bechhofen a. d. Heide"},9823:{sn:"Leutershausen",ln:"Leutershausen"},9824:{sn:"Dietenhofen",ln:"Dietenhofen"},9825:{sn:"Herrieden",
ln:"Herrieden"},9826:{sn:"Weidenbach",ln:"Weidenbach Mittelfr."},9827:{sn:"Lichtenau",ln:"Lichtenau Mittelfr."},9828:{sn:"R\u00fcgland",ln:"R\u00fcgland"},9829:{sn:"Flachslanden",ln:"Flachslanden"},9831:{sn:"Gunzenhausen",ln:"Gunzenhausen"},9832:{sn:"Wassertr\u00fcdingen",ln:"Wassertr\u00fcdingen"},9833:{sn:"Heidenheim",ln:"Heidenheim Mittelfr."},9834:{sn:"Theilenhofen",ln:"Theilenhofen"},9836:{sn:"Gunzenhausen-Cronheim",ln:"Gunzenhausen-Cronheim"},9837:{sn:"Haundorf",ln:"Haundorf"},9841:{sn:"Bad Windsheim",
ln:"Bad Windsheim"},9842:{sn:"Uffenheim",ln:"Uffenheim"},9843:{sn:"Burgbernheim",ln:"Burgbernheim"},9844:{sn:"Obernzenn",ln:"Obernzenn"},9845:{sn:"Oberdachstetten",ln:"Oberdachstetten"},9846:{sn:"Ipsheim",ln:"Ipsheim"},9847:{sn:"Ergersheim",ln:"Ergersheim"},9848:{sn:"Simmershofen",ln:"Simmershofen"},9851:{sn:"Dinkelsb\u00fchl",ln:"Dinkelsb\u00fchl"},9852:{sn:"Feuchtwangen",ln:"Feuchtwangen"},9853:{sn:"Wilburgstetten",ln:"Wilburgstetten"},9854:{sn:"Wittelshofen",ln:"Wittelshofen"},9855:{sn:"Dentlein",
ln:"Dentlein am Forst"},9856:{sn:"D\u00fcrrwangen",ln:"D\u00fcrrwangen"},9857:{sn:"Schopfloch",ln:"Schopfloch Mittelfr."},9861:{sn:"Rothenburg",ln:"Rothenburg ob der Tauber"},9865:{sn:"Adelshofen",ln:"Adelshofen"},9867:{sn:"Geslau",ln:"Geslau"},9868:{sn:"Schillingsf\u00fcrst",ln:"Schillingsf\u00fcrst"},9869:{sn:"Wettringen",ln:"Wettringen Mittelfr."},9871:{sn:"Windsbach",ln:"Windsbach"},9872:{sn:"Heilsbronn",ln:"Heilsbronn"},9873:{sn:"Abenberg-Wassermungenau",ln:"Abenberg-Wassermungenau"},9874:{sn:"Neuendettelsau",
ln:"Neuendettelsau"},9875:{sn:"Wolframs-Eschenbach",ln:"Wolframs-Eschenbach"},9876:{sn:"Rohr",ln:"Rohr Mittelfr."},9901:{sn:"Hengersberg",ln:"Hengersberg"},9903:{sn:"Sch\u00f6llnach",ln:"Sch\u00f6llnach"},9904:{sn:"Lalling",ln:"Lalling"},9905:{sn:"Bernried",ln:"Bernried Niederbayern"},9906:{sn:"Mariaposching",ln:"Mariaposching"},9907:{sn:"Zenting",ln:"Zenting"},9908:{sn:"Sch\u00f6fweg",ln:"Sch\u00f6fweg"},9920:{sn:"Bischofsmais",ln:"Bischofsmais"},9921:{sn:"Regen",ln:"Regen"},9922:{sn:"Zwiesel",ln:"Zwiesel"},
9923:{sn:"Teisnach",ln:"Teisnach"},9924:{sn:"Bodenmais",ln:"Bodenmais"},9925:{sn:"Bayerisch Eisenstein",ln:"Bayerisch Eisenstein"},9926:{sn:"Frauenau",ln:"Frauenau"},9927:{sn:"Kirchberg",ln:"Kirchberg im Wald"},9928:{sn:"Kirchdorf",ln:"Kirchdorf im Wald"},9929:{sn:"Ruhmannsfelden",ln:"Ruhmannsfelden"},9931:{sn:"Plattling",ln:"Plattling"},9932:{sn:"Osterhofen",ln:"Osterhofen"},9933:{sn:"Wallersdorf",ln:"Wallersdorf"},9935:{sn:"Stephansposching",ln:"Stephansposching"},9936:{sn:"Wallerfing",ln:"Wallerfing"},
9937:{sn:"Oberp\u00f6ring",ln:"Oberp\u00f6ring"},9938:{sn:"Moos",ln:"Moos Niederbayern"},9941:{sn:"Bad K\u00f6tzting",ln:"Bad K\u00f6tzting"},9942:{sn:"Viechtach",ln:"Viechtach"},9943:{sn:"Lam",ln:"Lam Oberpf."},9944:{sn:"Miltach",ln:"Miltach"},9945:{sn:"Arnbruck",ln:"Arnbruck"},9946:{sn:"Hohenwarth",ln:"Hohenwarth bei K\u00f6tzting"},9947:{sn:"Neukirchen",ln:"Neukirchen beim Heiligen Blut"},9948:{sn:"Eschlkam",ln:"Eschlkam"},9951:{sn:"Landau",ln:"Landau an der Isar"},9952:{sn:"Eichendorf",ln:"Eichendorf"},
9953:{sn:"Pilsting",ln:"Pilsting"},9954:{sn:"Simbach",ln:"Simbach Niederbayern"},9955:{sn:"Mamming",ln:"Mamming"},9961:{sn:"Mitterfels",ln:"Mitterfels"},9962:{sn:"Schwarzach",ln:"Schwarzach (Niederbayern)."},9963:{sn:"Konzell",ln:"Konzell"},9964:{sn:"Stallwang",ln:"Stallwang"},9965:{sn:"Sankt",ln:"Sankt Englmar"},9966:{sn:"Wiesenfelden",ln:"Wiesenfelden"},9971:{sn:"Cham",ln:"Cham"},9972:{sn:"Waldm\u00fcnchen",ln:"Waldm\u00fcnchen"},9973:{sn:"Furth",ln:"Furth im Wald"},9974:{sn:"Traitsching",ln:"Traitsching"},
9975:{sn:"Waldm\u00fcnchen-Geigant",ln:"Waldm\u00fcnchen-Geigant"},9976:{sn:"R\u00f6tz",ln:"R\u00f6tz"},9977:{sn:"Arnschwang",ln:"Arnschwang"},9978:{sn:"Sch\u00f6nthal",ln:"Sch\u00f6nthal (Oberpfalz)"},33051:{sn:"Nassenheide",ln:"Nassenheide"},33053:{sn:"Zehlendorf",ln:"Zehlendorf"},33054:{sn:"Liebenwalde",ln:"Liebenwalde"},33055:{sn:"Kremmen",ln:"Kremmen"},33056:{sn:"M\u00fchlenbeck",ln:"M\u00fchlenbeck"},33080:{sn:"Marienthal",ln:"Marienthal"},33082:{sn:"Menz",ln:"Menz"},33083:{sn:"Schulzendorf",
ln:"Schulzendorf"},33084:{sn:"Gutengermendorf",ln:"Gutengermendorf"},33085:{sn:"Seilershof",ln:"Seilershof"},33086:{sn:"Grieben",ln:"Grieben"},33087:{sn:"Bredereiche",ln:"Bredereiche"},33088:{sn:"Falkenthal",ln:"Falkenthal"},33089:{sn:"Himmelpfort",ln:"Himmelpfort"},33093:{sn:"F\u00fcrstenberg",ln:"F\u00fcrstenberg (Havel)"},33094:{sn:"L\u00f6wenberger",ln:"L\u00f6wenberger Land"},33200:{sn:"Bergholz-Rehbr\u00fccke",ln:"Bergholz-Rehbr\u00fccke"},33201:{sn:"Gro\u00df Glienicke",ln:"Gro\u00df Glienicke"},
33202:{sn:"T\u00f6plitz",ln:"T\u00f6plitz"},33203:{sn:"Kleinmachnow",ln:"Kleinmachnow"},33204:{sn:"Beelitz",ln:"Beelitz"},33205:{sn:"Michendorf",ln:"Michendorf"},33206:{sn:"Fichtenwalde",ln:"Fichtenwalde"},33207:{sn:"Gro\u00df Kreutz",ln:"Gro\u00df Kreutz"},33208:{sn:"Fahrland",ln:"Fahrland"},33209:{sn:"Caputh",ln:"Caputh"},33230:{sn:"B\u00f6rnicke",ln:"B\u00f6rnicke"},33231:{sn:"Pausin",ln:"Pausin"},33232:{sn:"Brieselang",ln:"Brieselang"},33233:{sn:"Ketzin",ln:"Ketzin"},33234:{sn:"Wustermark",ln:"Wustermark"},
33235:{sn:"Friesack",ln:"Friesack"},33237:{sn:"Paulinenaue",ln:"Paulinenaue"},33238:{sn:"Senzke",ln:"Senzke"},33239:{sn:"Gro\u00df Behnitz",ln:"Gro\u00df Behnitz"},33331:{sn:"Casekow",ln:"Casekow"},33332:{sn:"Gartz",ln:"Gartz (Oder)"},33333:{sn:"Tantow",ln:"Tantow"},33334:{sn:"Greiffenberg",ln:"Greiffenberg"},33335:{sn:"Pinnow",ln:"Pinnow"},33336:{sn:"Passow",ln:"Passow"},33337:{sn:"Altk\u00fcnkendorf",ln:"Altk\u00fcnkendorf"},33338:{sn:"Stolpe",ln:"Stolpe/Oder"},33361:{sn:"Joachimsthal",ln:"Joachimsthal"},
33362:{sn:"Liepe",ln:"Liepe"},33363:{sn:"Altenhof",ln:"Altenhof"},33364:{sn:"Gro\u00df Ziethen",ln:"Gro\u00df Ziethen"},33365:{sn:"L\u00fcdersdorf",ln:"L\u00fcdersdorf"},33366:{sn:"Chorin",ln:"Chorin"},33367:{sn:"Friedrichswalde",ln:"Friedrichswalde"},33368:{sn:"Hohensaaten",ln:"Hohensaaten"},33369:{sn:"Oderberg",ln:"Oderberg"},33393:{sn:"Gro\u00df Sch\u00f6nebeck",ln:"Gro\u00df Sch\u00f6nebeck"},33394:{sn:"Blumberg",ln:"Blumberg"},33395:{sn:"Zerpenschleuse",ln:"Zerpenschleuse"},33396:{sn:"Klosterfelde",
ln:"Klosterfelde"},33397:{sn:"Wandlitz",ln:"Wandlitz"},33398:{sn:"Werneuchen",ln:"Werneuchen"},33432:{sn:"M\u00fcncheberg",ln:"M\u00fcncheberg"},33433:{sn:"Buckow",ln:"Buckow"},33434:{sn:"Herzfelde",ln:"Herzfelde bei Strausberg"},33435:{sn:"Rehfelde",ln:"Rehfelde"},33436:{sn:"Pr\u00f6tzel",ln:"Pr\u00f6tzel"},33437:{sn:"Reichenberg",ln:"Reichenberg bei Strausberg"},33438:{sn:"Altlandsberg",ln:"Altlandsberg"},33439:{sn:"Fredersdorf-Vogelsdorf",ln:"Fredersdorf-Vogelsdorf"},33451:{sn:"Heckelberg",ln:"Heckelberg"},
33452:{sn:"Neulewin",ln:"Neulewin"},33454:{sn:"W\u00f6lsickendorf",ln:"W\u00f6lsickendorf/Wollenber"},33456:{sn:"Wriezen",ln:"Wriezen"},33457:{sn:"Altreetz",ln:"Altreetz"},33458:{sn:"Falkenberg",ln:"Falkenberg (Mark)"},33470:{sn:"Lietzen",ln:"Lietzen"},33472:{sn:"Golzow",ln:"Golzow bei Seelow"},33473:{sn:"Zechin",ln:"Zechin"},33474:{sn:"Neutrebbin",ln:"Neutrebbin"},33475:{sn:"Letschin",ln:"Letschin"},33476:{sn:"Neuhardenberg",ln:"Neuhardenberg"},33477:{sn:"Trebnitz",ln:"Trebnitz bei M\u00fcncheberg"},
33478:{sn:"Gro\u00df Neuendorf",ln:"Gro\u00df Neuendorf"},33479:{sn:"K\u00fcstrin-Kietz",ln:"K\u00fcstrin-Kietz"},33601:{sn:"Podelzig",ln:"Podelzig"},33602:{sn:"Alt",ln:"Alt Zeschdorf"},33603:{sn:"Falkenhagen",ln:"Falkenhagen (Mark)"},33604:{sn:"Lebus",ln:"Lebus"},33605:{sn:"Boossen",ln:"Boossen"},33606:{sn:"M\u00fcllrose",ln:"M\u00fcllrose"},33607:{sn:"Briesen",ln:"Briesen (Mark)"},33608:{sn:"Jacobsdorf",ln:"Jacobsdorf"},33609:{sn:"Brieskow-Finkenheerd",ln:"Brieskow-Finkenheerd"},33631:{sn:"Bad Saarow",
ln:"Bad Saarow"},33632:{sn:"Hangelsberg",ln:"Hangelsberg"},33633:{sn:"Spreenhagen",ln:"Spreenhagen"},33634:{sn:"Berkenbr\u00fcck",ln:"Berkenbr\u00fcck"},33635:{sn:"Arensdorf",ln:"Arensdorf"},33636:{sn:"Steinh\u00f6fel",ln:"Steinh\u00f6fel"},33637:{sn:"Beerfelde",ln:"Beerfelde"},33638:{sn:"R\u00fcdersdorf",ln:"R\u00fcdersdorf bei Berlin"},33652:{sn:"Neuzelle",ln:"Neuzelle"},33653:{sn:"Ziltendorf",ln:"Ziltendorf"},33654:{sn:"F\u00fcnfeichen",ln:"F\u00fcnfeichen"},33655:{sn:"Grunow",ln:"Grunow"},33656:{sn:"Bahro",
ln:"Bahro"},33657:{sn:"Steinsdorf",ln:"Steinsdorf"},33671:{sn:"Lieberose",ln:"Lieberose"},33672:{sn:"Pfaffendorf",ln:"Pfaffendorf bei Beeskow"},33673:{sn:"Weichensdorf",ln:"Weichensdorf"},33674:{sn:"Trebatsch",ln:"Trebatsch"},33675:{sn:"Tauche",ln:"Tauche"},33676:{sn:"Friedland",ln:"Friedland (Niederlausitz)"},33677:{sn:"Glienicke",ln:"Glienicke bei Beeskow"},33678:{sn:"Storkow",ln:"Storkow (Mark)"},33679:{sn:"Wendisch Rietz",ln:"Wendisch Rietz"},33701:{sn:"Gro\u00dfbeeren",ln:"Gro\u00dfbeeren"},
33702:{sn:"W\u00fcnsdorf",ln:"W\u00fcnsdorf"},33703:{sn:"Am",ln:"Am Mellensee"},33704:{sn:"Baruth",ln:"Baruth/Mark"},33708:{sn:"Rangsdorf",ln:"Rangsdorf"},33731:{sn:"Trebbin",ln:"Trebbin"},33732:{sn:"Hennickendorf",ln:"Hennickendorf"},33733:{sn:"St\u00fclpe",ln:"St\u00fclpe"},33734:{sn:"Felgentreu",ln:"Felgentreu"},33741:{sn:"Niederg\u00f6rsdorf",ln:"Niederg\u00f6rsdorf"},33742:{sn:"Oehna",ln:"Oehna"},33743:{sn:"Bl\u00f6nsdorf",ln:"Bl\u00f6nsdorf"},33744:{sn:"Hohenseefeld",ln:"Hohenseefeld"},33745:{sn:"Petkus",
ln:"Petkus"},33746:{sn:"Werbig",ln:"Werbig bei J\u00fcterbog"},33747:{sn:"Marzahna",ln:"Marzahna"},33748:{sn:"Treuenbrietzen",ln:"Treuenbrietzen"},33760:{sn:"M\u00fcnchehofe",ln:"M\u00fcnchehofe"},33762:{sn:"Zeuthen",ln:"Zeuthen"},33763:{sn:"Bestensee",ln:"Bestensee"},33764:{sn:"Mittenwalde",ln:"Mittenwalde (Mark)"},33765:{sn:"M\u00e4rkisch Buchholz",ln:"M\u00e4rkisch Buchholz"},33766:{sn:"Teupitz",ln:"Teupitz"},33767:{sn:"Friedersdorf",ln:"Friedersdorf bei Berlin"},33768:{sn:"Prieros",ln:"Prieros"},
33769:{sn:"T\u00f6pchin",ln:"T\u00f6pchin"},33830:{sn:"Ziesar",ln:"Ziesar"},33831:{sn:"Weseram",ln:"Weseram"},33832:{sn:"Rog\u00e4sen",ln:"Rog\u00e4sen"},33833:{sn:"Wollin",ln:"Wollin"},33834:{sn:"Pritzerbe",ln:"Pritzerbe"},33835:{sn:"Golzow",ln:"Golzow"},33836:{sn:"Butzow",ln:"Butzow"},33837:{sn:"Brielow",ln:"Brielow"},33838:{sn:"P\u00e4wesin",ln:"P\u00e4wesin"},33839:{sn:"Wusterwitz",ln:"Wusterwitz"},33841:{sn:"Belzig",ln:"Belzig"},33843:{sn:"Niemegk",ln:"Niemegk"},33844:{sn:"Br\u00fcck",ln:"Br\u00fcck"},
33845:{sn:"Borkheide",ln:"Borkheide"},33846:{sn:"Dippmannsdorf",ln:"Dippmannsdorf"},33847:{sn:"G\u00f6rzke",ln:"G\u00f6rzke"},33848:{sn:"Raben",ln:"Raben"},33849:{sn:"Wiesenburg",ln:"Wiesenburg/Mark"},33870:{sn:"Zollchow",ln:"Zollchow bei Rathenow"},33872:{sn:"Hohennauen",ln:"Hohennauen"},33873:{sn:"Gro\u00dfwudicke",ln:"Gro\u00dfwudicke"},33874:{sn:"Stechow",ln:"Stechow"},33875:{sn:"Rhinow",ln:"Rhinow"},33876:{sn:"Buschow",ln:"Buschow"},33877:{sn:"Nitzahn",ln:"Nitzahn"},33878:{sn:"Nennhausen",ln:"Nennhausen"},
33920:{sn:"Walsleben",ln:"Walsleben bei Neuruppin"},33921:{sn:"Zechlinerh\u00fctte",ln:"Zechlinerh\u00fctte"},33922:{sn:"Karwesee",ln:"Karwesee"},33923:{sn:"Flecken",ln:"Flecken Zechlin"},33924:{sn:"R\u00e4gelin",ln:"R\u00e4gelin"},33925:{sn:"Wustrau-Altfriesack",ln:"Wustrau-Altfriesack"},33926:{sn:"Herzberg",ln:"Herzberg (Mark)"},33928:{sn:"Wildberg",ln:"Wildberg"},33929:{sn:"G\u00fchlen-Glienicke",ln:"G\u00fchlen-Glienicke"},33931:{sn:"Rheinsberg",ln:"Rheinsberg"},33932:{sn:"Fehrbellin",ln:"Fehrbellin"},
33933:{sn:"Lindow",ln:"Lindow (Mark)"},33962:{sn:"Heiligengrabe",ln:"Heiligengrabe"},33963:{sn:"Wulfersdorf",ln:"Wulfersdorf bei Wittstock"},33964:{sn:"Fretzdorf",ln:"Fretzdorf"},33965:{sn:"Herzsprung",ln:"Herzsprung bei Wittstock"},33966:{sn:"Dranse",ln:"Dranse"},33967:{sn:"Freyenstein",ln:"Freyenstein"},33968:{sn:"Meyenburg",ln:"Meyenburg"},33969:{sn:"Stepenitz",ln:"Stepenitz"},33970:{sn:"Neustadt",ln:"Neustadt (Dosse)"},33971:{sn:"Kyritz",ln:"Kyritz"},33972:{sn:"Breddin",ln:"Breddin"},33973:{sn:"Zernitz",
ln:"Zernitz bei Neustadt"},33974:{sn:"Dessow",ln:"Dessow"},33975:{sn:"Dannenwalde",ln:"Dannenwalde"},33976:{sn:"Wutike",ln:"Wutike"},33977:{sn:"Gumtow",ln:"Gumtow"},33978:{sn:"Segeletz",ln:"Segeletz"},33979:{sn:"Wusterhausen",ln:"Wusterhausen/Dosse"},33981:{sn:"Putlitz",ln:"Putlitz"},33982:{sn:"Hoppenrade",ln:"Hoppenrade"},33983:{sn:"Gro\u00df Pankow",ln:"Gro\u00df Pankow"},33984:{sn:"Blumenthal",ln:"Blumenthal bei Pritzwalk"},33986:{sn:"Falkenhagen",ln:"Falkenhagen"},33989:{sn:"Sadenbeck",ln:"Sadenbeck"},
34202:{sn:"Delitzsch",ln:"Delitzsch"},34203:{sn:"Zwenkau",ln:"Zwenkau"},34204:{sn:"Schkeuditz",ln:"Schkeuditz"},34205:{sn:"Markranst\u00e4dt",ln:"Markranst\u00e4dt"},34206:{sn:"R\u00f6tha",ln:"R\u00f6tha"},34207:{sn:"Zwochau",ln:"Zwochau"},34208:{sn:"L\u00f6bnitz",ln:"L\u00f6bnitz"},34221:{sn:"Schildau",ln:"Schildau"},34222:{sn:"Arzberg",ln:"Arzberg"},34223:{sn:"Dommitzsch",ln:"Dommitzsch"},34224:{sn:"Belgern",ln:"Belgern"},34241:{sn:"Jesewitz",ln:"Jesewitz"},34242:{sn:"Hohenprie\u00dfnitz",ln:"Hohenprie\u00dfnitz"},
34243:{sn:"Bad D\u00fcben",ln:"Bad D\u00fcben"},34244:{sn:"Mockrehna",ln:"Mockrehna"},34261:{sn:"K\u00fchren",ln:"K\u00fchren"},34262:{sn:"Falkenhain",ln:"Falkenhain"},34263:{sn:"Gro\u00dfzschepa",ln:"Gro\u00dfzschepa"},34291:{sn:"Borsdorf",ln:"Borsdorf"},34292:{sn:"Brandis",ln:"Brandis"},34293:{sn:"Naunhof",ln:"Naunhof"},34294:{sn:"Rackwitz",ln:"Rackwitz"},34295:{sn:"Krensitz",ln:"Krensitz"},34296:{sn:"Groitzsch",ln:"Groitzsch"},34297:{sn:"Liebertwolkwitz",ln:"Liebertwolkwitz"},34298:{sn:"Taucha",
ln:"Taucha"},34299:{sn:"Gaschwitz",ln:"Gaschwitz"},34321:{sn:"Leisnig",ln:"Leisnig"},34322:{sn:"Ro\u00dfwein",ln:"Ro\u00dfwein"},34324:{sn:"Ostrau",ln:"Ostrau (Sachsen)"},34325:{sn:"L\u00fcttewitz",ln:"L\u00fcttewitz Ortsteil von Zschaitz-Ottewig"},34327:{sn:"Waldheim",ln:"Waldheim"},34328:{sn:"Hartha",ln:"Hartha"},34341:{sn:"Geithain",ln:"Geithain"},34342:{sn:"Neukieritzsch",ln:"Neukieritzsch"},34343:{sn:"Regis-Breitingen",ln:"Regis-Breitingen"},34344:{sn:"Kohren-Sahlis",ln:"Kohren-Sahlis"},34345:{sn:"Bad Lausick",
ln:"Bad Lausick"},34346:{sn:"Langensteinbach",ln:"Langensteinbach"},34347:{sn:"Espenhain",ln:"Espenhain"},34348:{sn:"Frohburg",ln:"Frohburg"},34361:{sn:"Dahlen",ln:"Dahlen (Sachsen)"},34362:{sn:"M\u00fcgeln",ln:"M\u00fcgeln"},34363:{sn:"Cavertitz",ln:"Cavertitz"},34364:{sn:"Wermsdorf",ln:"Wermsdorf"},34381:{sn:"Colditz",ln:"Colditz"},34382:{sn:"Nerchau",ln:"Nerchau"},34383:{sn:"Trebsen",ln:"Trebsen"},34384:{sn:"Gro\u00dfbothen",ln:"Gro\u00dfbothen"},34385:{sn:"Mutzschen",ln:"Mutzschen"},34386:{sn:"D\u00fcrrweitzschen",
ln:"D\u00fcrrweitzschen"},34463:{sn:"Prie\u00dfnitz",ln:"Prie\u00dfnitz"},34721:{sn:"Nienburg",ln:"Nienburg"},34722:{sn:"Preu\u00dflitz",ln:"Preu\u00dflitz"},34741:{sn:"Frose",ln:"Frose"},34742:{sn:"Sylda",ln:"Sylda"},34743:{sn:"Ermsleben",ln:"Ermsleben"},34745:{sn:"Winningen",ln:"Winningen"},34746:{sn:"Giersleben",ln:"Giersleben"},34771:{sn:"Querfurt",ln:"Querfurt"},34772:{sn:"Helbra",ln:"Helbra"},34773:{sn:"Schwittersdorf",ln:"Schwittersdorf"},34774:{sn:"R\u00f6blingen",ln:"R\u00f6blingen a. See"},
34775:{sn:"Wippra",ln:"Wippra"},34776:{sn:"Rothenschirmbach",ln:"Rothenschirmbach"},34779:{sn:"Abberode",ln:"Abberode"},34901:{sn:"Rosslau",ln:"Rosslau"},34903:{sn:"Coswig",ln:"Coswig (Anhalt)"},34904:{sn:"Oranienbaum",ln:"Oranienbaum"},34905:{sn:"W\u00f6rlitz",ln:"W\u00f6rlitz"},34906:{sn:"Raguhn",ln:"Raguhn"},34907:{sn:"Jeber-Bergfrieden",ln:"Jeber-Bergfrieden"},34909:{sn:"Aken",ln:"Aken"},34920:{sn:"Kropst\u00e4dt",ln:"Kropst\u00e4dt"},34921:{sn:"Kemberg",ln:"Kemberg"},34922:{sn:"M\u00fchlanger",
ln:"M\u00fchlanger"},34923:{sn:"Cobbelsdorf",ln:"Cobbelsdorf"},34924:{sn:"Zahna",ln:"Zahna"},34925:{sn:"Bad Schmiedeberg",ln:"Bad Schmiedeberg"},34926:{sn:"Pretzsch",ln:"Pretzsch (Elbe)"},34927:{sn:"Globig",ln:"Globig"},34928:{sn:"Seegrehna",ln:"Seegrehna"},34929:{sn:"Straach",ln:"Straach"},34953:{sn:"Gr\u00e4fenhainichen",ln:"Gr\u00e4fenhainichen"},34954:{sn:"Roitzsch",ln:"Roitzsch"},34955:{sn:"Gossa",ln:"Gossa"},34956:{sn:"Z\u00f6rbig",ln:"Z\u00f6rbig"},34973:{sn:"Osternienburg",ln:"Osternienburg"},
34975:{sn:"G\u00f6rzig",ln:"G\u00f6rzig"},34976:{sn:"Gr\u00f6bzig",ln:"Gr\u00f6bzig"},34977:{sn:"Quellendorf",ln:"Quellendorf"},34978:{sn:"Radegast",ln:"Radegast"},34979:{sn:"Wulfen",ln:"Wulfen"},35020:{sn:"Struppen",ln:"Struppen"},35021:{sn:"K\u00f6nigstein",ln:"K\u00f6nigstein"},35022:{sn:"Bad Schandau",ln:"Bad Schandau"},35023:{sn:"Bad Gottleuba",ln:"Bad Gottleuba"},35024:{sn:"Stadt",ln:"Stadt Wehlen"},35025:{sn:"Liebstadt",ln:"Liebstadt"},35026:{sn:"D\u00fcrrr\u00f6hrsdorf",ln:"D\u00fcrrr\u00f6hrsdorf"},
35027:{sn:"Weesenstein",ln:"Weesenstein"},35028:{sn:"Krippen",ln:"Krippen"},35032:{sn:"Langenhennersdorf",ln:"Langenhennersdorf"},35033:{sn:"Rosenthal",ln:"Rosenthal"},35052:{sn:"Kipsdorf",ln:"Kipsdorf"},35053:{sn:"Glash\u00fctte",ln:"Glash\u00fctte"},35054:{sn:"Lauenstein",ln:"Lauenstein"},35055:{sn:"H\u00f6ckendorf",ln:"H\u00f6ckendorf"},35056:{sn:"Altenberg",ln:"Altenberg"},35057:{sn:"Hermsdorf",ln:"Hermsdorf"},35058:{sn:"Pretzschendorf",ln:"Pretzschendorf"},35200:{sn:"Arnsdorf",ln:"Arnsdorf"},
35201:{sn:"Langebr\u00fcck",ln:"Langebr\u00fcck"},35202:{sn:"Klingenberg",ln:"Klingenberg"},35203:{sn:"Tharandt",ln:"Tharandt"},35204:{sn:"Wilsdruff",ln:"Wilsdruff"},35205:{sn:"Ottendorf-Okrilla",ln:"Ottendorf-Okrilla"},35206:{sn:"Kreischa",ln:"Kreischa"},35207:{sn:"Moritzburg",ln:"Moritzburg"},35208:{sn:"Radeburg",ln:"Radeburg"},35209:{sn:"Mohorn",ln:"Mohorn"},35240:{sn:"Tauscha",ln:"Tauscha"},35241:{sn:"Lommatzsch",ln:"Lommatzsch"},35242:{sn:"Nossen",ln:"Nossen"},35243:{sn:"Weinb\u00f6hla",ln:"Weinb\u00f6hla"},
35244:{sn:"Kr\u00f6gis",ln:"Kr\u00f6gis"},35245:{sn:"Burkhardswalde",ln:"Burkhardswalde"},35246:{sn:"Ziegenhain",ln:"Ziegenhain"},35247:{sn:"Zehren",ln:"Zehren"},35248:{sn:"Sch\u00f6nfeld",ln:"Sch\u00f6nfeld"},35249:{sn:"Basslitz",ln:"Basslitz"},35263:{sn:"Gr\u00f6ditz",ln:"Gr\u00f6ditz"},35264:{sn:"Strehla",ln:"Strehla"},35265:{sn:"Glaubitz",ln:"Glaubitz"},35266:{sn:"Heyda",ln:"Heyda"},35267:{sn:"Diesbar-Seu\u00dflitz",ln:"Diesbar-Seu\u00dflitz"},35268:{sn:"Stauchitz",ln:"Stauchitz"},35322:{sn:"Doberlug-Kirchhain",
ln:"Doberlug-Kirchhain"},35323:{sn:"Sonnewalde",ln:"Sonnewalde"},35324:{sn:"Crinitz",ln:"Crinitz"},35325:{sn:"R\u00fcckersdorf",ln:"R\u00fcckersdorf"},35326:{sn:"Sch\u00f6nborn",ln:"Sch\u00f6nborn"},35327:{sn:"Prie\u00dfen",ln:"Prie\u00dfen"},35329:{sn:"Dollenchen",ln:"Dollenchen"},35341:{sn:"Bad Liebenwerda",ln:"Bad Liebenwerda"},35342:{sn:"M\u00fchlberg",ln:"M\u00fchlberg (Elbe)"},35343:{sn:"Hirschfeld",ln:"Hirschfeld"},35361:{sn:"Schlieben",ln:"Schlieben"},35362:{sn:"Sch\u00f6newalde",ln:"Sch\u00f6newalde"},
35363:{sn:"Fermerswalde",ln:"Fermerswalde"},35364:{sn:"Lebusa",ln:"Lebusa"},35365:{sn:"Falkenberg",ln:"Falkenberg (Elster)"},35383:{sn:"Elster",ln:"Elster (Elbe)"},35384:{sn:"Steinsdorf",ln:"Steinsdorf"},35385:{sn:"Annaburg",ln:"Annaburg"},35386:{sn:"Prettin",ln:"Prettin"},35387:{sn:"Seyda",ln:"Seyda"},35388:{sn:"Kl\u00f6den",ln:"Kl\u00f6den"},35389:{sn:"Holzdorf",ln:"Holzdorf"},35433:{sn:"Vetschau",ln:"Vetschau/Spreewald"},35434:{sn:"Altd\u00f6bern",ln:"Altd\u00f6bern"},35435:{sn:"Gollmitz",ln:"Gollmitz"},
35436:{sn:"Laasow",ln:"Laasow"},35439:{sn:"Zinnitz",ln:"Zinnitz"},35451:{sn:"Dahme",ln:"Dahme"},35452:{sn:"Gol\u00dfen",ln:"Gol\u00dfen"},35453:{sn:"Drahnsdorf",ln:"Drahnsdorf"},35454:{sn:"Uckro",ln:"Uckro"},35455:{sn:"Walddrehna",ln:"Walddrehna"},35456:{sn:"Terpt",ln:"Terpt"},35471:{sn:"Birkenhainchen",ln:"Birkenhainchen"},35472:{sn:"Schlepzig",ln:"Schlepzig"},35473:{sn:"Neu",ln:"Neu L\u00fcbbenau"},35474:{sn:"Sch\u00f6nwald",ln:"Sch\u00f6nwald (Brandenburg)"},35475:{sn:"Straupitz",ln:"Straupitz"},
35476:{sn:"Wittmannsdorf",ln:"Wittmannsdorf"},35477:{sn:"Rietz",ln:"Rietz Neuendorf"},35478:{sn:"Goyatz",ln:"Goyatz"},35600:{sn:"D\u00f6bern",ln:"D\u00f6bern"},35601:{sn:"Peitz",ln:"Peitz"},35602:{sn:"Drebkau",ln:"Drebkau"},35603:{sn:"Burg",ln:"Burg (Spreewald)"},35604:{sn:"Krieschow",ln:"Krieschow"},35605:{sn:"Komptendorf",ln:"Komptendorf"},35606:{sn:"Briesen",ln:"Briesen"},35607:{sn:"J\u00e4nschwalde",ln:"J\u00e4nschwalde"},35608:{sn:"Gro\u00df O\u00dfnig",ln:"Gro\u00df O\u00dfnig"},35609:{sn:"Drachhausen",
ln:"Drachhausen"},35691:{sn:"B\u00e4renklau",ln:"B\u00e4renklau"},35692:{sn:"Kerkwitz",ln:"Kerkwitz"},35693:{sn:"Lausch\u00fctz",ln:"Lausch\u00fctz"},35694:{sn:"Gosda",ln:"Gosda"},35695:{sn:"Simmersdorf",ln:"Simmersdorf"},35696:{sn:"Briesnig",ln:"Briesnig"},35697:{sn:"Bagenz",ln:"Bagenz"},35698:{sn:"Hornow",ln:"Hornow"},35722:{sn:"Lauta",ln:"Lauta"},35723:{sn:"Bernsdorf",ln:"Bernsdorf"},35724:{sn:"Lohsa",ln:"Lohsa"},35725:{sn:"Wittichenau",ln:"Wittichenau"},35726:{sn:"Gro\u00df S\u00e4rchen",ln:"Gro\u00df S\u00e4rchen"},
35727:{sn:"Burghammer",ln:"Burghammer"},35728:{sn:"Uhyst",ln:"Uhyst"},35751:{sn:"Welzow",ln:"Welzow"},35752:{sn:"Ruhland",ln:"Ruhland"},35753:{sn:"Gro\u00dfr\u00e4schen",ln:"Gro\u00dfr\u00e4schen"},35754:{sn:"Klettwitz",ln:"Klettwitz"},35755:{sn:"Ortrand",ln:"Ortrand"},35756:{sn:"Hosena",ln:"Hosena"},35771:{sn:"Bad Muskau",ln:"Bad Muskau"},35772:{sn:"Rietschen",ln:"Rietschen"},35773:{sn:"Schleife",ln:"Schleife (Sachsen)"},35774:{sn:"Boxberg",ln:"Boxberg (Oberlausitz)"},35775:{sn:"Pechern",ln:"Pechern"},
35792:{sn:"O\u00dfling",ln:"O\u00dfling"},35793:{sn:"Elstra",ln:"Elstra"},35795:{sn:"K\u00f6nigsbr\u00fcck",ln:"K\u00f6nigsbr\u00fcck"},35796:{sn:"Panschwitz-Kuckau",ln:"Panschwitz-Kuckau"},35797:{sn:"Schwepnitz",ln:"Schwepnitz"},35820:{sn:"Zodel",ln:"Zodel"},35822:{sn:"Hagenwerder",ln:"Hagenwerder"},35823:{sn:"Ostritz",ln:"Ostritz"},35825:{sn:"Kodersdorf",ln:"Kodersdorf"},35826:{sn:"K\u00f6nigshain",ln:"K\u00f6nigshain"},35827:{sn:"Nieder",ln:"Nieder Seifersdorf"},35828:{sn:"Reichenbach",ln:"Reichenbach (Oberlausitz)"},
35829:{sn:"Gersdorf",ln:"Gersdorf"},35841:{sn:"Gro\u00dfsch\u00f6nau",ln:"Gro\u00dfsch\u00f6nau"},35842:{sn:"Niederoderwitz",ln:"Niederoderwitz"},35843:{sn:"Hirschfelde",ln:"Hirschfelde"},35844:{sn:"Oybin",ln:"Oybin"},35872:{sn:"Neusalza-Spremberg",ln:"Neusalza-Spremberg"},35873:{sn:"Herrnhut",ln:"Herrnhut"},35874:{sn:"Bernstadt",ln:"Bernstadt a. d. Eigen"},35875:{sn:"Obercunnersdorf",ln:"Obercunnersdorf"},35876:{sn:"Wei\u00dfenberg",ln:"Wei\u00dfenberg"},35877:{sn:"Cunewalde",ln:"Cunewalde"},35891:{sn:"Rothenburg",
ln:"Rothenburg (Oberlausitz)"},35892:{sn:"Horka",ln:"Horka"},35893:{sn:"M\u00fccka",ln:"M\u00fccka"},35894:{sn:"H\u00e4hnichen",ln:"H\u00e4hnichen"},35895:{sn:"Klitten",ln:"Klitten"},35930:{sn:"Seitschen",ln:"Seitschen"},35931:{sn:"K\u00f6nigswartha",ln:"K\u00f6nigswartha"},35932:{sn:"Guttau",ln:"Guttau"},35933:{sn:"Neschwitz",ln:"Neschwitz"},35934:{sn:"Gro\u00dfdubrau",ln:"Gro\u00dfdubrau"},35935:{sn:"Kleinwelka",ln:"Kleinwelka"},35936:{sn:"Sohland",ln:"Sohland an der Spree"},35937:{sn:"Prischwitz",
ln:"Prischwitz"},35938:{sn:"Gro\u00dfpostwitz",ln:"Gro\u00dfpostwitz"},35939:{sn:"Pommritz",ln:"Pommritz"},35951:{sn:"Neukirch",ln:"Neukirch/Lausitz"},35952:{sn:"Gro\u00dfr\u00f6hrsdorf",ln:"Gro\u00dfr\u00f6hrsdorf"},35953:{sn:"Burkau",ln:"Burkau"},35954:{sn:"Gro\u00dfharthau",ln:"Gro\u00dfharthau"},35955:{sn:"Pulsnitz",ln:"Pulsnitz"},35957:{sn:"Neukirch",ln:"Neukirch (Landkreis Kamenz)"},35971:{sn:"Sebnitz",ln:"Sebnitz"},35973:{sn:"Stolpen",ln:"Stolpen"},35974:{sn:"Hinterhermsdorf",ln:"Hinterhermsdorf"},
35975:{sn:"Hohnstein",ln:"Hohnstein"},36020:{sn:"Ebeleben",ln:"Ebeleben"},36021:{sn:"Schlotheim",ln:"Schlotheim"},36022:{sn:"Gro\u00dfengottern",ln:"Gro\u00dfengottern"},36023:{sn:"Horsmar",ln:"Horsmar"},36024:{sn:"Diedorf",ln:"Diedorf"},36025:{sn:"K\u00f6rner",ln:"K\u00f6rner"},36026:{sn:"Rodeberg",ln:"Rodeberg (Struth)"},36027:{sn:"Lengenfeld",ln:"Lengenfeld unterm Stein"},36028:{sn:"Kammerforst",ln:"Kammerforst"},36029:{sn:"Menteroda",ln:"Menteroda"},36041:{sn:"Bad Tennstedt",ln:"Bad Tennstedt"},
36042:{sn:"Gr\u00e4fentonna",ln:"Gr\u00e4fentonna"},36043:{sn:"Kirchheilingen",ln:"Kirchheilingen"},36071:{sn:"Teistungen",ln:"Teistungen"},36072:{sn:"Wei\u00dfenborn-L\u00fcderode",ln:"Wei\u00dfenborn-L\u00fcderode"},36074:{sn:"Worbis",ln:"Worbis"},36075:{sn:"Dingelst\u00e4dt",ln:"Dingelst\u00e4dt"},36076:{sn:"Niederorschel",ln:"Niederorschel"},36077:{sn:"Gro\u00dfbodungen",ln:"Gro\u00dfbodungen"},36081:{sn:"Arenshausen",ln:"Arenshausen"},36082:{sn:"Ershausen",ln:"Ershausen"},36083:{sn:"Uder",ln:"Uder"},
36084:{sn:"Heuthen",ln:"Heuthen"},36085:{sn:"Reinholterode",ln:"Reinholterode"},36087:{sn:"W\u00fcstheuterode",ln:"W\u00fcstheuterode"},36200:{sn:"Elxleben",ln:"Elxleben"},36201:{sn:"Walschleben",ln:"Walschleben"},36202:{sn:"Neudietendorf",ln:"Neudietendorf"},36203:{sn:"Vieselbach",ln:"Vieselbach"},36204:{sn:"Stotternheim",ln:"Stotternheim"},36205:{sn:"Gr\u00e4fenroda",ln:"Gr\u00e4fenroda"},36206:{sn:"Gro\u00dffahner",ln:"Gro\u00dffahner"},36207:{sn:"Plaue",ln:"Plaue"},36208:{sn:"Ermstedt",ln:"Ermstedt"},
36209:{sn:"Klettbach",ln:"Klettbach"},36252:{sn:"Tambach-Dietharz",ln:"Tambach-Dietharz/Th\u00fcr. Wald"},36253:{sn:"Georgenthal",ln:"Georgenthal (Th\u00fcringen)"},36254:{sn:"Friedrichswerth",ln:"Friedrichswerth"},36255:{sn:"Goldbach",ln:"Goldbach"},36256:{sn:"Wechmar",ln:"Wechmar"},36257:{sn:"Luisenthal",ln:"Luisenthal"},36258:{sn:"Friemar",ln:"Friemar"},36259:{sn:"Tabarz",ln:"Tabarz"},36330:{sn:"Gro\u00dfberndten",ln:"Gro\u00dfberndten"},36331:{sn:"Ilfeld",ln:"Ilfeld"},36332:{sn:"Ellrich",ln:"Ellrich"},
36333:{sn:"Heringen",ln:"Heringen/Helme"},36334:{sn:"Wolkramshausen",ln:"Wolkramshausen"},36335:{sn:"Gro\u00dfwechsungen",ln:"Gro\u00dfwechsungen"},36336:{sn:"Klettenberg",ln:"Klettenberg"},36337:{sn:"Schiedungen",ln:"Schiedungen"},36338:{sn:"Bleicherode",ln:"Bleicherode"},36370:{sn:"Gro\u00dfenehrich",ln:"Gro\u00dfenehrich"},36371:{sn:"Schlo\u00dfvippach",ln:"Schlo\u00dfvippach"},36372:{sn:"Kleinneuhausen",ln:"Kleinneuhausen"},36373:{sn:"Buttst\u00e4dt",ln:"Buttst\u00e4dt"},36374:{sn:"Wei\u00dfensee",
ln:"Wei\u00dfensee"},36375:{sn:"Kindelbr\u00fcck",ln:"Kindelbr\u00fcck"},36376:{sn:"Strau\u00dffurt",ln:"Strau\u00dffurt"},36377:{sn:"Rastenberg",ln:"Rastenberg"},36378:{sn:"Ostramondra",ln:"Ostramondra"},36379:{sn:"Holzengel",ln:"Holzengel"},36421:{sn:"Camburg",ln:"Camburg"},36422:{sn:"Reinst\u00e4dt",ln:"Reinst\u00e4dt"},36423:{sn:"Orlam\u00fcnde",ln:"Orlam\u00fcnde"},36424:{sn:"Kahla",ln:"Kahla"},36425:{sn:"Isserstedt",ln:"Isserstedt"},36426:{sn:"Ottendorf",ln:"Ottendorf"},36427:{sn:"Dornburg",
ln:"Dornburg (Saale)"},36428:{sn:"Stadtroda",ln:"Stadtroda"},36450:{sn:"Kranichfeld",ln:"Kranichfeld"},36451:{sn:"Buttelstedt",ln:"Buttelstedt"},36452:{sn:"Berlstedt",ln:"Berlstedt"},36453:{sn:"Mellingen",ln:"Mellingen"},36454:{sn:"Magdala",ln:"Magdala"},36458:{sn:"Bad Berka",ln:"Bad Berka"},36459:{sn:"Blankenhain",ln:"Blankenhain"},36461:{sn:"Bad Sulza",ln:"Bad Sulza"},36462:{sn:"O\u00dfmannstedt",ln:"O\u00dfmannstedt"},36463:{sn:"Gebstedt",ln:"Gebstedt"},36464:{sn:"Wormstedt",ln:"Wormstedt"},36465:{sn:"Oberndorf",
ln:"Oberndorf"},36481:{sn:"Neustadt",ln:"Neustadt (Orla)"},36482:{sn:"Triptis",ln:"Triptis"},36483:{sn:"Ziegenr\u00fcck",ln:"Ziegenr\u00fcck"},36484:{sn:"Knau",ln:"Knau"},36601:{sn:"Hermsdorf",ln:"Hermsdorf"},36602:{sn:"Ronneburg",ln:"Ronneburg"},36603:{sn:"Weida",ln:"Weida"},36604:{sn:"M\u00fcnchenbernsdorf",ln:"M\u00fcnchenbernsdorf"},36605:{sn:"Bad K\u00f6stritz",ln:"Bad K\u00f6stritz"},36606:{sn:"Kraftsdorf",ln:"Kraftsdorf"},36607:{sn:"Niederp\u00f6llnitz",ln:"Niederp\u00f6llnitz"},36608:{sn:"Seelingst\u00e4dt",
ln:"Seelingst\u00e4dt"},36621:{sn:"Elsterberg",ln:"Elsterberg"},36622:{sn:"Triebes",ln:"Triebes"},36623:{sn:"Berga",ln:"Berga/Elster"},36624:{sn:"Teichwolframsdorf",ln:"Teichwolframsdorf"},36625:{sn:"Langenwetzendorf",ln:"Langenwetzendorf"},36626:{sn:"Auma",ln:"Auma"},36628:{sn:"Zeulenroda",ln:"Zeulenroda"},36640:{sn:"Remptendorf",ln:"Remptendorf"},36642:{sn:"Harra",ln:"Harra"},36643:{sn:"Thimmendorf",ln:"Thimmendorf"},36644:{sn:"Hirschberg",ln:"Hirschberg (Saale)"},36645:{sn:"M\u00fchltroff",ln:"M\u00fchltroff"},
36646:{sn:"Tanna",ln:"Tanna"},36647:{sn:"Saalburg",ln:"Saalburg"},36648:{sn:"Dittersdorf",ln:"Dittersdorf"},36649:{sn:"Gefell",ln:"Gefell"},36651:{sn:"Bad Lobenstein",ln:"Bad Lobenstein"},36652:{sn:"Wurzbach",ln:"Wurzbach"},36653:{sn:"Lehesten",ln:"Lehesten"},36691:{sn:"Eisenberg",ln:"Eisenberg (Th\u00fcringen)"},36692:{sn:"B\u00fcrgel",ln:"B\u00fcrgel"},36693:{sn:"Crossen",ln:"Crossen"},36694:{sn:"Schk\u00f6len",ln:"Schk\u00f6len"},36701:{sn:"Lichte",ln:"Lichte"},36702:{sn:"Lauscha",ln:"Lauscha"},
36703:{sn:"Gr\u00e4fenthal",ln:"Gr\u00e4fenthal"},36704:{sn:"Steinheid",ln:"Steinheid"},36705:{sn:"Oberwei\u00dfbach",ln:"Oberwei\u00dfbach"},36730:{sn:"Sitzendorf",ln:"Sitzendorf"},36731:{sn:"Unterloquitz",ln:"Unterloquitz"},36732:{sn:"K\u00f6nitz",ln:"K\u00f6nitz"},36733:{sn:"Kaulsdorf",ln:"Kaulsdorf (Saale)"},36734:{sn:"Leutenberg",ln:"Leutenberg"},36735:{sn:"Probstzella",ln:"Probstzella"},36736:{sn:"Arnsgereuth",ln:"Arnsgereuth"},36737:{sn:"Drognitz",ln:"Drognitz"},36738:{sn:"K\u00f6nigsee",ln:"K\u00f6nigsee"},
36739:{sn:"Rottenbach",ln:"Rottenbach"},36741:{sn:"Bad Blankenburg",ln:"Bad Blankenburg"},36742:{sn:"Uhlst\u00e4dt",ln:"Uhlst\u00e4dt"},36743:{sn:"Teichel",ln:"Teichel"},36744:{sn:"Remda",ln:"Remda"},36761:{sn:"Heubisch",ln:"Heubisch"},36762:{sn:"Steinach",ln:"Steinach"},36764:{sn:"Neuhaus-Schierschnitz",ln:"Neuhaus-Schierschnitz"},36766:{sn:"Schalkau",ln:"Schalkau"},36781:{sn:"Gro\u00dfbreitenbach",ln:"Gro\u00dfbreitenbach, Goldisthal, Katzh\u00fctte"},36782:{sn:"Schmiedefeld",ln:"Schmiedefeld am Rennsteig"},
36783:{sn:"Gehren",ln:"Gehren"},36784:{sn:"St\u00fctzerbach",ln:"St\u00fctzerbach"},36785:{sn:"Gr\u00e4finau-Angstedt",ln:"Gr\u00e4finau-Angstedt"},36840:{sn:"Trusetal",ln:"Trusetal"},36841:{sn:"Schleusingen",ln:"Schleusingen"},36842:{sn:"Oberhof",ln:"Oberhof"},36843:{sn:"Benshausen",ln:"Benshausen"},36844:{sn:"Rohr",ln:"Rohr (Th\u00fcringen)"},36845:{sn:"Gehlberg",ln:"Gehlberg"},36846:{sn:"Dietzhausen",ln:"Dietzhausen"},36847:{sn:"Steinbach-Hallenberg",ln:"Steinbach-Hallenberg"},36848:{sn:"Wernshausen",
ln:"Wernshausen"},36849:{sn:"Kleinschmalkalden",ln:"Kleinschmalkalden"},36870:{sn:"Masserberg",ln:"Masserberg"},36871:{sn:"Heldburg",ln:"Heldburg"},36873:{sn:"Themar",ln:"Themar"},36874:{sn:"Sch\u00f6nbrunn",ln:"Sch\u00f6nbrunn (Th\u00fcringen)"},36875:{sn:"Streufdorf",ln:"Streufdorf"},36878:{sn:"Brattendorf",ln:"Brattendorf"},36920:{sn:"Gro\u00dfenlupnitz",ln:"Gro\u00dfenlupnitz"},36921:{sn:"Wutha-Farnroda",ln:"Wutha-Farnroda"},36922:{sn:"Gerstungen",ln:"Gerstungen"},36923:{sn:"Treffurt",ln:"Treffurt"},
36924:{sn:"Mihla",ln:"Mihla"},36925:{sn:"Marksuhl",ln:"Marksuhl"},36926:{sn:"Creuzburg",ln:"Creuzburg"},36927:{sn:"Unterellen",ln:"Unterellen"},36928:{sn:"Neuenhof",ln:"Neuenhof"},36929:{sn:"Ruhla",ln:"Ruhla"},36940:{sn:"Oepfershausen",ln:"Oepfershausen"},36941:{sn:"Wasungen",ln:"Wasungen"},36943:{sn:"Bettenhausen",ln:"Bettenhausen"},36944:{sn:"Rentwertshausen",ln:"Rentwertshausen"},36945:{sn:"Henneberg",ln:"Henneberg"},36946:{sn:"Reichenhausen",ln:"Reichenhausen"},36947:{sn:"J\u00fcchsen",ln:"J\u00fcchsen"},
36948:{sn:"R\u00f6mhild",ln:"R\u00f6mhild"},36949:{sn:"Oberma\u00dffeld",ln:"Oberma\u00dffeld"},36961:{sn:"Bad Liebenstein",ln:"Bad Liebenstein"},36962:{sn:"Vacha",ln:"Vacha"},36963:{sn:"Dorndorf",ln:"Dorndorf"},36964:{sn:"Dermbach",ln:"Dermbach"},36965:{sn:"Stadtlengsfeld",ln:"Stadtlengsfeld"},36966:{sn:"Kaltennordheim",ln:"Kaltennordheim"},36967:{sn:"Geisa",ln:"Geisa"},36968:{sn:"Ro\u00dfdorf",ln:"Ro\u00dfdorf (Rh\u00f6n)"},36969:{sn:"Merkers",ln:"Merkers"},37200:{sn:"Wittgensdorf",ln:"Wittgensdorf"},
37202:{sn:"Clau\u00dfnitz",ln:"Clau\u00dfnitz"},37203:{sn:"Gersdorf",ln:"Gersdorf"},37204:{sn:"Lichtenstein",ln:"Lichtenstein"},37206:{sn:"Frankenberg",ln:"Frankenberg"},37207:{sn:"Hainichen",ln:"Hainichen"},37208:{sn:"Oberlichtenau",ln:"Oberlichtenau"},37209:{sn:"Einsiedel",ln:"Einsiedel"},37291:{sn:"Augustusburg",ln:"Augustusburg"},37292:{sn:"Oederan",ln:"Oederan"},37293:{sn:"Eppendorf",ln:"Eppendorf"},37294:{sn:"Gr\u00fcnhainichen",ln:"Gr\u00fcnhainichen"},37295:{sn:"Lugau",ln:"Lugau/Erzgeb."},
37296:{sn:"Stollberg",ln:"Stollberg/Erzgeb."},37297:{sn:"Thum",ln:"Thum"},37298:{sn:"Oelsnitz",ln:"Oelsnitz (Erzgebirge)"},37320:{sn:"Mulda",ln:"Mulda/Sa."},37321:{sn:"Frankenstein",ln:"Frankenstein"},37322:{sn:"Brand-Erbisdorf",ln:"Brand-Erbisdorf"},37323:{sn:"Lichtenberg",ln:"Lichtenberg"},37324:{sn:"Reinsberg",ln:"Reinsberg"},37325:{sn:"Niederbobritzsch",ln:"Niederbobritzsch"},37326:{sn:"Frauenstein",ln:"Frauenstein"},37327:{sn:"Rechenberg-Bienenm\u00fchle",ln:"Rechenberg-Bienenm\u00fchle"},37328:{sn:"Gro\u00dfschirma",
ln:"Gro\u00dfschirma"},37329:{sn:"Gro\u00dfhartmannsdorf",ln:"Gro\u00dfhartmannsdorf"},37341:{sn:"Ehrenfriedersdorf",ln:"Ehrenfriedersdorf"},37342:{sn:"Cranzahl",ln:"Cranzahl"},37343:{sn:"J\u00f6hstadt",ln:"J\u00f6hstadt"},37344:{sn:"Crottendorf",ln:"Crottendorf"},37346:{sn:"Geyer",ln:"Geyer"},37347:{sn:"B\u00e4renstein",ln:"B\u00e4renstein"},37348:{sn:"Oberwiesenthal",ln:"Oberwiesenthal"},37349:{sn:"Scheibenberg",ln:"Scheibenberg"},37360:{sn:"Olbernhau",ln:"Olbernhau"},37361:{sn:"Neuhausen",ln:"Neuhausen/Erzgeb."},
37362:{sn:"Seiffen",ln:"Seiffen/Erzgeb."},37363:{sn:"Z\u00f6blitz",ln:"Z\u00f6blitz"},37364:{sn:"Reitzenhain",ln:"Reitzenhain"},37365:{sn:"Sayda",ln:"Sayda"},37366:{sn:"R\u00fcbenau",ln:"R\u00fcbenau"},37367:{sn:"Lengefeld",ln:"Lengefeld"},37368:{sn:"Deutschneudorf",ln:"Deutschneudorf"},37369:{sn:"Wolkenstein",ln:"Wolkenstein"},37381:{sn:"Penig",ln:"Penig"},37382:{sn:"Geringswalde",ln:"Geringswalde"},37383:{sn:"Lunzenau",ln:"Lunzenau"},37384:{sn:"Wechselburg",ln:"Wechselburg"},37421:{sn:"Oelsnitz",
ln:"Oelsnitz (Vogtland)"},37422:{sn:"Markneukirchen",ln:"Markneukirchen"},37423:{sn:"Adorf",ln:"Adorf (Vogtland)"},37430:{sn:"Eichigt",ln:"Eichigt"},37431:{sn:"Mehltheuer",ln:"Mehltheuer (Vogtl.)"},37432:{sn:"Pausa",ln:"Pausa/Vogtl."},37433:{sn:"Gutenf\u00fcrst",ln:"Gutenf\u00fcrst"},37434:{sn:"Bobenneukirchen",ln:"Bobenneukirchen"},37435:{sn:"Reuth",ln:"Reuth"},37436:{sn:"Weischlitz",ln:"Weischlitz"},37437:{sn:"Bad Elster",ln:"Bad Elster"},37438:{sn:"Bad Brambach",ln:"Bad Brambach"},37439:{sn:"Jocketa",
ln:"Jocketa"},37462:{sn:"Rothenkirchen",ln:"Rothenkirchen (Vogtland)"},37463:{sn:"Bergen",ln:"Bergen, Vogtlandkreis"},37464:{sn:"Sch\u00f6neck",ln:"Sch\u00f6neck/Vogtl."},37465:{sn:"Tannenbergsthal",ln:"Tannenbergsthal"},37467:{sn:"Klingenthal",ln:"Klingenthal"},37468:{sn:"Treuen",ln:"Treuen"},37600:{sn:"Neumark",ln:"Neumark (Sachsen)"},37601:{sn:"M\u00fclsen",ln:"M\u00fclsen St. Jacob"},37602:{sn:"Kirchberg",ln:"Kirchberg (Sachsen)"},37603:{sn:"Wildenfels",ln:"Wildenfels"},37604:{sn:"Mosel",ln:"Mosel (Sachsen)"},
37605:{sn:"Hartenstein",ln:"Hartenstein"},37606:{sn:"Lengenfeld",ln:"Lengenfeld (Vogtland)"},37607:{sn:"Ebersbrunn",ln:"Ebersbrunn"},37608:{sn:"Waldenburg",ln:"Waldenburg"},37609:{sn:"Wolkenburg",ln:"Wolkenburg"},37752:{sn:"Eibenstock",ln:"Eibenstock"},37754:{sn:"Zw\u00f6nitz",ln:"Zw\u00f6nitz"},37755:{sn:"Sch\u00f6nheide",ln:"Sch\u00f6nheide (Erzgebirge)"},37756:{sn:"Breitenbrunn",ln:"Breitenbrunn"},37757:{sn:"Rittersgr\u00fcn",ln:"Rittersgr\u00fcn"},38201:{sn:"Gelbensande",ln:"Gelbensande"},38203:{sn:"Bad Doberan",
ln:"Bad Doberan"},38204:{sn:"Broderstorf",ln:"Broderstorf"},38205:{sn:"Tessin",ln:"Tessin"},38206:{sn:"Graal-M\u00fcritz",ln:"Graal-M\u00fcritz"},38207:{sn:"Kritzmow",ln:"Kritzmow"},38208:{sn:"Dummerstorf",ln:"Dummerstorf"},38209:{sn:"Sanitz",ln:"Sanitz"},38220:{sn:"Ahrenshoop",ln:"Ahrenshoop, Wustrow"},38221:{sn:"Marlow",ln:"Marlow"},38222:{sn:"Ahrenshagen-Daskow-Gruel",ln:"Ahrenshagen-Daskow-Gruel, -Tribohm, Semlow"},38223:{sn:"Ribnitz-Damgarten-Beiershagen",ln:"Ribnitz-Damgarten-Beiershagen, -Dechowshof, -Langendamm, Saal"},
38224:{sn:"Marlow-div",ln:"Marlow-div. Ortsteile"},38225:{sn:"Ahrenshagen-Daskow-Prusdorf",ln:"Ahrenshagen-Daskow-Prusdorf, -Todenhagen, Schlemmin, Trinwillershagen"},38226:{sn:"Dierhagen",ln:"Dierhagen"},38227:{sn:"Bartelshagen",ln:"Bartelshagen II, Spoldershagen, L\u00fcdershagen, Saal-Hessenburg"},38231:{sn:"Barth",ln:"Barth, Divitz, Fuhlendorf, Kenz-K\u00fcstrow, L\u00f6bnitz-Saatel, Pruchten, Gro\u00df Kordshagen"},38232:{sn:"Seeheilbad",ln:"Seeheilbad Zingst"},38233:{sn:"Prerow",ln:"Prerow, Wieck"},
38234:{sn:"Born",ln:"Born"},38292:{sn:"Kr\u00f6pelin",ln:"Kr\u00f6pelin"},38293:{sn:"K\u00fchlungsborn",ln:"K\u00fchlungsborn"},38294:{sn:"Neubukow",ln:"Neubukow"},38295:{sn:"Satow",ln:"Satow"},38300:{sn:"Hiddensee",ln:"Hiddensee"},38301:{sn:"Putbus",ln:"Putbus"},38302:{sn:"Sagard",ln:"Sagard, Lietzow, Glowe, Lohme"},38303:{sn:"Baabe",ln:"Baabe, Sellin"},38304:{sn:"Garz",ln:"Garz/R\u00fcgen, Karnitz, Zudar"},38305:{sn:"Gingst",ln:"Gingst"},38306:{sn:"Samtens",ln:"Samtens, Rambin, Dreschvitz, Altef\u00e4hr"},
38307:{sn:"Poseritz",ln:"Poseritz, Gustow"},38308:{sn:"Ostseebad",ln:"Ostseebad G\u00f6hren, Gager, Middelhagen, Thiessow"},38309:{sn:"Trent",ln:"Trent, Schaprode"},38320:{sn:"Gremersdorf-Buchholz",ln:"Gremersdorf-Buchholz, Tribsees"},38321:{sn:"Kummerow",ln:"Kummerow, Neu Bartelshagen, Niepars, Pantelitz"},38322:{sn:"Franzburg",ln:"Franzburg, Gremersdorf-Buchholz-Grenzin, -Hohenbarnekow, -Neum\u00fchl, -Wolfsdorf, Millienhagen-Oebelitz, Richtenberg, Weitenhagen"},38323:{sn:"Altenpleen",ln:"Altenpleen, Gro\u00df Mohrdorf, Klausdorf, Kramerhof, Preetz, Prohn"},
38324:{sn:"Karnin",ln:"Karnin, L\u00f6bnitz, Velgast"},38325:{sn:"Gremersdorf-Buchholz-Buchholz",ln:"Gremersdorf-Buchholz-Buchholz, -Eichholz, Papenhagen, Splietsdorf"},38326:{sn:"Grimmen",ln:"Grimmen, S\u00fcderholz-Barkow, -Bartmannshagen, -Boltenhagen, -Kandelin, -Kaschow, -Willerswalde, -Zarnewanz, Splietsdorf-M\u00fcggenwalde, Wendisch Baggendorf"},38327:{sn:"Elmenhorst",ln:"Elmenhorst, Wittenhagen, Jakobsdorf, Steinhagen, Wendorf, Zarrendorf"},38328:{sn:"Behnkendorf",ln:"Behnkendorf, Brandshagen, Miltzow, Reinberg"},
38331:{sn:"S\u00fcderholz-Bretwisch",ln:"S\u00fcderholz-Bretwisch, -D\u00f6nnie, -Grabow, -Grischow, -G\u00f6lzow-Dorf, -Poggendorf, -Rakow, -W\u00fcstenbilow"},38332:{sn:"S\u00fcderholz-Griebenow",ln:"S\u00fcderholz-Griebenow, -Gro\u00df Bisdorf, -Klein Bisdorf, -Klevenow, -Kreutzmannshagen, -L\u00fcssow, -Neuendorf, -Pr\u00fctzmannshagen, -Schmietkow, -Willershusen, -W\u00fcst Eldena, -W\u00fcsteney"},38333:{sn:"Horst",ln:"Horst, Wilmshagen"},38334:{sn:"Glewitz",ln:"Glewitz"},38351:{sn:"Kirchdorf",
ln:"Kirchdorf"},38370:{sn:"Kr\u00f6slin",ln:"Kr\u00f6slin, Freest"},38371:{sn:"Trassenheide",ln:"Trassenheide, Karlshagen, Peenem\u00fcnde"},38372:{sn:"Usedom",ln:"Usedom"},38375:{sn:"\u00dcckeritz",ln:"\u00dcckeritz"},38376:{sn:"Zirchow",ln:"Zirchow"},38377:{sn:"Zinnowitz",ln:"Zinnowitz"},38378:{sn:"Heringsdorf",ln:"Heringsdorf, Seebad Ahlbeck, Bansin"},38391:{sn:"Altenkirchen",ln:"Altenkirchen"},38392:{sn:"Sassnitz",ln:"Sassnitz"},38393:{sn:"Binz",ln:"Binz, Zirkow"},38422:{sn:"Neukloster",ln:"Neukloster"},
38423:{sn:"Bad Kleinen",ln:"Bad Kleinen"},38424:{sn:"Bobitz",ln:"Bobitz"},38425:{sn:"Kirchdorf",ln:"Kirchdorf (Poel)"},38426:{sn:"Neuburg",ln:"Neuburg"},38427:{sn:"Blowatz",ln:"Blowatz"},38428:{sn:"Hohenkirchen",ln:"Hohenkirchen"},38429:{sn:"Glasin",ln:"Glasin"},38450:{sn:"Tarnow",ln:"Tarnow"},38451:{sn:"Hoppenrade",ln:"Hoppenrade"},38452:{sn:"Lalendorf",ln:"Lalendorf"},38453:{sn:"Mistorf",ln:"Mistorf"},38454:{sn:"Kritzkow",ln:"Kritzkow"},38455:{sn:"Plaaz",ln:"Plaaz"},38456:{sn:"Langhagen",ln:"Langhagen"},
38457:{sn:"Krakow",ln:"Krakow am See"},38458:{sn:"Zehna",ln:"Zehna"},38459:{sn:"Laage",ln:"Laage"},38461:{sn:"B\u00fctzow",ln:"B\u00fctzow"},38462:{sn:"Baumgarten",ln:"Baumgarten"},38464:{sn:"Bernitt",ln:"Bernitt"},38466:{sn:"J\u00fcrgenshagen",ln:"J\u00fcrgenshagen"},38481:{sn:"Witzin",ln:"Witzin"},38482:{sn:"Warin",ln:"Warin"},38483:{sn:"Br\u00fcel",ln:"Br\u00fcel"},38484:{sn:"Ventschow",ln:"Ventschow"},38485:{sn:"Dabel",ln:"Dabel"},38486:{sn:"Gust\u00e4vel",ln:"Gust\u00e4vel"},38488:{sn:"Demen",
ln:"Demen"},38720:{sn:"Grebbin",ln:"Grebbin"},38721:{sn:"Ziegendorf",ln:"Ziegendorf"},38722:{sn:"Raduhn",ln:"Raduhn"},38723:{sn:"Kladrum",ln:"Kladrum"},38724:{sn:"Siggelkow",ln:"Siggelkow"},38725:{sn:"Gro\u00df Godems",ln:"Gro\u00df Godems"},38726:{sn:"Spornitz",ln:"Spornitz"},38727:{sn:"Mestlin",ln:"Mestlin"},38728:{sn:"Doms\u00fchl",ln:"Doms\u00fchl"},38729:{sn:"Marnitz",ln:"Marnitz"},38731:{sn:"L\u00fcbz",ln:"L\u00fcbz"},38732:{sn:"Gallin",ln:"Gallin"},38733:{sn:"Karbow",ln:"Karbow"},38735:{sn:"Plau",
ln:"Plau"},38736:{sn:"Goldberg",ln:"Goldberg (Mecklenburg)"},38737:{sn:"Ganzlin",ln:"Ganzlin"},38738:{sn:"Karow",ln:"Karow (Mecklenburg)"},38750:{sn:"Malliss",ln:"Malliss"},38751:{sn:"Picher",ln:"Picher"},38752:{sn:"Zierzow",ln:"Zierzow"},38753:{sn:"W\u00f6bbelin",ln:"W\u00f6bbelin"},38754:{sn:"Leussow",ln:"Leussow"},38755:{sn:"Eldena",ln:"Eldena"},38756:{sn:"Grabow",ln:"Grabow (Mecklenburg)"},38757:{sn:"Neustadt-Glewe",ln:"Neustadt-Glewe"},38758:{sn:"D\u00f6mitz",ln:"D\u00f6mitz"},38759:{sn:"Tewswoos",
ln:"Tewswoos"},38780:{sn:"Lanz",ln:"Lanz"},38781:{sn:"Mellen",ln:"Mellen"},38782:{sn:"Reetz",ln:"Reetz"},38783:{sn:"Dallmin",ln:"Dallmin"},38784:{sn:"Kleinow",ln:"Kleinow"},38785:{sn:"Berge",ln:"Berge"},38787:{sn:"Gl\u00f6wen",ln:"Gl\u00f6wen"},38788:{sn:"Gro\u00df Warnow",ln:"Gro\u00df Warnow"},38789:{sn:"Wolfshagen",ln:"Wolfshagen"},38791:{sn:"Bad Wilsnack",ln:"Bad Wilsnack"},38792:{sn:"Lenzen",ln:"Lenzen (Elbe)"},38793:{sn:"Dergenthin",ln:"Dergenthin"},38794:{sn:"Cumlosen",ln:"Cumlosen"},38796:{sn:"Viesecke",
ln:"Viesecke"},38797:{sn:"Karst\u00e4dt",ln:"Karst\u00e4dt"},38821:{sn:"L\u00fcdersdorf",ln:"L\u00fcdersdorf"},38822:{sn:"R\u00fcting",ln:"R\u00fcting OT Diedrichshagen"},38823:{sn:"Selmsdorf",ln:"Selmsdorf"},38824:{sn:"Mallentin",ln:"Mallentin"},38825:{sn:"Kl\u00fctz",ln:"Kl\u00fctz"},38826:{sn:"Dassow",ln:"Dassow"},38827:{sn:"Kalkhorst",ln:"Kalkhorst"},38828:{sn:"Sch\u00f6nberg",ln:"Sch\u00f6nberg"},38841:{sn:"Amt",ln:"Amt Neuhaus"},38842:{sn:"Greven",ln:"Greven OT L\u00fcttenmark"},38843:{sn:"Vellahn",
ln:"Vellahn OT Bennin"},38844:{sn:"Neu",ln:"Neu G\u00fclze"},38845:{sn:"Amt",ln:"Amt Neuhaus OT Kaar\u00dfen"},38847:{sn:"Boizenburg",ln:"Boizenburg/Elbe"},38848:{sn:"Vellahn",ln:"Vellahn"},38850:{sn:"Gammelin",ln:"Gammelin"},38851:{sn:"Zarrentin",ln:"Zarrentin am Schaalsee"},38852:{sn:"Wittenburg",ln:"Wittenburg"},38853:{sn:"Wittend\u00f6rp",ln:"Wittend\u00f6rp OT Dr\u00f6nnewitz"},38854:{sn:"Redefin",ln:"Redefin"},38855:{sn:"L\u00fcbtheen",ln:"L\u00fcbtheen"},38856:{sn:"Pritzier",ln:"Pritzier"},
38858:{sn:"Zarrentin",ln:"Zarrentin am Schaalsee OT Lassahn"},38859:{sn:"Alt",ln:"Alt Zachun"},38871:{sn:"M\u00fchlen",ln:"M\u00fchlen Eichsen"},38872:{sn:"Rehna",ln:"Rehna"},38873:{sn:"Carlow",ln:"Carlow"},38874:{sn:"L\u00fctzow",ln:"L\u00fctzow"},38875:{sn:"Schlagsdorf",ln:"Schlagsdorf"},38876:{sn:"Roggendorf",ln:"Roggendorf"},39200:{sn:"Gommern",ln:"Gommern"},39201:{sn:"Wolmirstedt",ln:"Wolmirstedt"},39202:{sn:"Gro\u00df Ammensleben",ln:"Gro\u00df Ammensleben"},39203:{sn:"Barleben",ln:"Barleben"},
39204:{sn:"Niederndodeleben",ln:"Niederndodeleben"},39205:{sn:"Langenweddingen",ln:"Langenweddingen"},39206:{sn:"Eichenbarleben",ln:"Eichenbarleben"},39207:{sn:"Colbitz",ln:"Colbitz"},39208:{sn:"Loitsche",ln:"Loitsche"},39209:{sn:"Wanzleben",ln:"Wanzleben"},39221:{sn:"M\u00f6ckern",ln:"M\u00f6ckern"},39222:{sn:"M\u00f6ser",ln:"M\u00f6ser"},39223:{sn:"Theessen",ln:"Theessen"},39224:{sn:"B\u00fcden",ln:"B\u00fcden"},39225:{sn:"Altengrabow",ln:"Altengrabow"},39226:{sn:"Hohenziatz",ln:"Hohenziatz"},39241:{sn:"Leitzkau",
ln:"Leitzkau"},39242:{sn:"Pr\u00f6del",ln:"Pr\u00f6del"},39243:{sn:"Nedlitz",ln:"Nedlitz (Jerichower Land)"},39244:{sn:"Steutz",ln:"Steutz"},39245:{sn:"Loburg",ln:"Loburg"},39246:{sn:"Lindau",ln:"Lindau (Anhalt)"},39247:{sn:"G\u00fctergl\u00fcck",ln:"G\u00fctergl\u00fcck"},39248:{sn:"Dobritz",ln:"Dobritz"},39262:{sn:"G\u00fcsten",ln:"G\u00fcsten"},39263:{sn:"Unseburg",ln:"Unseburg"},39264:{sn:"Kroppenstedt",ln:"Kroppenstedt"},39265:{sn:"L\u00f6derburg",ln:"L\u00f6derburg"},39266:{sn:"F\u00f6rderstedt",
ln:"F\u00f6rderstedt"},39267:{sn:"Schneidlingen",ln:"Schneidlingen"},39268:{sn:"Egeln",ln:"Egeln"},39291:{sn:"Calbe",ln:"Calbe (Saale)"},39292:{sn:"Biederitz",ln:"Biederitz"},39293:{sn:"Dreileben",ln:"Dreileben"},39294:{sn:"Gro\u00df Rosenburg",ln:"Gro\u00df Rosenburg"},39295:{sn:"Zuchau",ln:"Zuchau"},39296:{sn:"Welsleben",ln:"Welsleben"},39297:{sn:"Eickendorf",ln:"Eickendorf"},39298:{sn:"Barby",ln:"Barby"},39320:{sn:"Schinne",ln:"Schinne"},39321:{sn:"Arneburg",ln:"Arneburg"},39322:{sn:"Tangerm\u00fcnde",
ln:"Tangerm\u00fcnde"},39323:{sn:"Sch\u00f6nhausen",ln:"Sch\u00f6nhausen (Elbe)"},39324:{sn:"Kl\u00e4den",ln:"Kl\u00e4den"},39325:{sn:"Vinzelberg",ln:"Vinzelberg"},39327:{sn:"Klietz",ln:"Klietz"},39328:{sn:"Rochau",ln:"Rochau"},39329:{sn:"M\u00f6ringen",ln:"M\u00f6ringen"},39341:{sn:"Redekin",ln:"Redekin"},39342:{sn:"Gladau",ln:"Gladau"},39343:{sn:"Jerichow",ln:"Jerichow"},39344:{sn:"G\u00fcsen",ln:"G\u00fcsen"},39345:{sn:"Parchen",ln:"Parchen"},39346:{sn:"Tucheim",ln:"Tucheim"},39347:{sn:"Kade",
ln:"Kade"},39348:{sn:"Klitsche",ln:"Klitsche"},39349:{sn:"Parey",ln:"Parey (Elbe)"},39361:{sn:"L\u00fcderitz",ln:"L\u00fcderitz (bei Stendal)"},39362:{sn:"Grieben",ln:"Grieben (Sachsen-Anhalt)"},39363:{sn:"Angern",ln:"Angern"},39364:{sn:"Dolle",ln:"Dolle"},39365:{sn:"Bellingen",ln:"Bellingen"},39366:{sn:"Kehnert",ln:"Kehnert"},39382:{sn:"Kamern",ln:"Kamern"},39383:{sn:"Sandau",ln:"Sandau"},39384:{sn:"Arendsee",ln:"Arendsee (Altmark)"},39386:{sn:"Seehausen",ln:"Seehausen (Altmark)"},39387:{sn:"Havelberg",
ln:"Havelberg"},39388:{sn:"Goldbeck",ln:"Goldbeck (Altmark)"},39390:{sn:"Iden",ln:"Iden"},39391:{sn:"L\u00fcckstedt",ln:"L\u00fcckstedt"},39392:{sn:"R\u00f6nnebeck",ln:"R\u00f6nnebeck"},39393:{sn:"Werben",ln:"Werben (Elbe)"},39394:{sn:"Hohenberg-Krusemark",ln:"Hohenberg-Krusemark"},39395:{sn:"Wanzer",ln:"Wanzer"},39396:{sn:"Neukirchen",ln:"Neukirchen (Altmark)"},39397:{sn:"Geestgottberg",ln:"Geestgottberg"},39398:{sn:"Gro\u00df Garz",ln:"Gro\u00df Garz"},39399:{sn:"Kleinau",ln:"Kleinau"},39400:{sn:"Wefensleben",
ln:"Wefensleben"},39401:{sn:"Neuwegersleben",ln:"Neuwegersleben"},39402:{sn:"V\u00f6lpke",ln:"V\u00f6lpke"},39403:{sn:"Gr\u00f6ningen",ln:"Gr\u00f6ningen"},39404:{sn:"Ausleben",ln:"Ausleben"},39405:{sn:"H\u00f6tensleben",ln:"H\u00f6tensleben"},39406:{sn:"Harbke",ln:"Harbke"},39407:{sn:"Seehausen",ln:"Seehausen (B\u00f6rde)"},39408:{sn:"Hadmersleben",ln:"Hadmersleben"},39409:{sn:"Eilsleben",ln:"Eilsleben"},39421:{sn:"Osterwieck",ln:"Osterwieck"},39422:{sn:"Badersleben",ln:"Badersleben"},39423:{sn:"Wegeleben",
ln:"Wegeleben"},39424:{sn:"Schwanebeck",ln:"Schwanebeck"},39425:{sn:"Dingelstedt",ln:"Dingelstedt"},39426:{sn:"Hessen",ln:"Hessen am Fallstein"},39427:{sn:"Schachdorf",ln:"Schachdorf Str\u00f6beck"},39428:{sn:"Pabstorf",ln:"Pabstorf"},39451:{sn:"Wasserleben",ln:"Wasserleben"},39452:{sn:"Ilsenburg",ln:"Ilsenburg"},39453:{sn:"Derenburg",ln:"Derenburg"},39454:{sn:"Elbingerode",ln:"Elbingerode"},39455:{sn:"Schierke",ln:"Schierke"},39456:{sn:"Altenbrak",ln:"Altenbrak"},39457:{sn:"Benneckenstein",ln:"Benneckenstein"},
39458:{sn:"Heudeber",ln:"Heudeber"},39459:{sn:"Hasselfelde",ln:"Hasselfelde"},39481:{sn:"Hedersleben",ln:"Hedersleben"},39482:{sn:"Gatersleben",ln:"Gatersleben"},39483:{sn:"Ballenstedt",ln:"Ballenstedt"},39484:{sn:"Harzgerode",ln:"Harzgerode"},39485:{sn:"Gernrode",ln:"Gernrode"},39487:{sn:"Friedrichsbrunn",ln:"Friedrichsbrunn"},39488:{sn:"G\u00fcntersberge",ln:"G\u00fcntersberge"},39489:{sn:"Stra\u00dfberg",ln:"Stra\u00dfberg"},39600:{sn:"Zwiedorf",ln:"Zwiedorf"},39601:{sn:"Friedland",ln:"Friedland, Mecklenburg-Vorpommern"},
39602:{sn:"Kleeth",ln:"Kleeth"},39603:{sn:"Burg Stargard",ln:"Burg Stargard"},39604:{sn:"Wildberg",ln:"Wildberg"},39605:{sn:"Gro\u00df Nemerow",ln:"Gro\u00df Nemerow"},39606:{sn:"Glienke",ln:"Glienke"},39607:{sn:"Kotelow",ln:"Kotelow"},39608:{sn:"Staven",ln:"Staven"},39721:{sn:"Liepen",ln:"Liepen"},39722:{sn:"Sarnow",ln:"Sarnow"},39723:{sn:"Krien",ln:"Krien"},39724:{sn:"Klein B\u00fcnzow",ln:"Klein B\u00fcnzow"},39726:{sn:"Ducherow",ln:"Ducherow"},39727:{sn:"Spantekow",ln:"Spantekow"},39728:{sn:"Medow",
ln:"Medow"},39740:{sn:"Nechlin",ln:"Nechlin"},39741:{sn:"Jatznick",ln:"Jatznick"},39742:{sn:"Br\u00fcssow",ln:"Br\u00fcssow"},39743:{sn:"Zerrenthin",ln:"Zerrenthin"},39744:{sn:"Rothenklempenow",ln:"Rothenklempenow"},39745:{sn:"Hetzdorf",ln:"Hetzdorf (Uckermark)"},39746:{sn:"Krackow",ln:"Krackow"},39747:{sn:"Z\u00fcsedom",ln:"Z\u00fcsedom"},39748:{sn:"Viereck",ln:"Viereck"},39749:{sn:"Grambow",ln:"Grambow"},39751:{sn:"Penkun",ln:"Penkun"},39752:{sn:"Blumenhagen",ln:"Blumenhagen"},39753:{sn:"Strasburg",
ln:"Strasburg"},39754:{sn:"L\u00f6cknitz",ln:"L\u00f6cknitz"},39771:{sn:"Ueckerm\u00fcnde",ln:"Ueckerm\u00fcnde"},39772:{sn:"Rothem\u00fchl",ln:"Rothem\u00fchl"},39773:{sn:"Altwarp",ln:"Altwarp"},39774:{sn:"M\u00f6nkebude",ln:"M\u00f6nkebude"},39775:{sn:"Ahlbeck",ln:"Ahlbeck (Uecker-Randow)"},39776:{sn:"Hintersee",ln:"Hintersee"},39777:{sn:"Borkenfriede",ln:"Borkenfriede"},39778:{sn:"Ferdinandshof",ln:"Ferdinandshof"},39779:{sn:"Eggesin",ln:"Eggesin"},39820:{sn:"Triepkendorf",ln:"Triepkendorf"},39821:{sn:"Carpin",
ln:"Carpin"},39822:{sn:"Kratzeburg",ln:"Kratzeburg"},39823:{sn:"Rechlin",ln:"Rechlin"},39824:{sn:"Hohenzieritz",ln:"Hohenzieritz"},39825:{sn:"Wokuhl-Dabelow",ln:"Wokuhl-Dabelow"},39826:{sn:"Blankensee",ln:"Blankensee"},39827:{sn:"Schwarz",ln:"Schwarz"},39828:{sn:"Wustrow",ln:"Wustrow"},39829:{sn:"Blankenf\u00f6rde",ln:"Blankenf\u00f6rde"},39831:{sn:"Feldberg",ln:"Feldberg"},39832:{sn:"Wesenberg",ln:"Wesenberg"},39833:{sn:"Mirow",ln:"Mirow"},39851:{sn:"G\u00f6ritz",ln:"G\u00f6ritz"},39852:{sn:"Sch\u00f6nermark",
ln:"Sch\u00f6nermark"},39853:{sn:"Holzendorf",ln:"Holzendorf"},39854:{sn:"Kleptow",ln:"Kleptow"},39855:{sn:"Weggun",ln:"Weggun"},39856:{sn:"Beenz",ln:"Beenz"},39857:{sn:"Drense",ln:"Drense"},39858:{sn:"Bietikow",ln:"Bietikow"},39859:{sn:"F\u00fcrstenwerder",ln:"F\u00fcrstenwerder"},39861:{sn:"Gramzow",ln:"Gramzow"},39862:{sn:"Schm\u00f6lln",ln:"Schm\u00f6lln"},39863:{sn:"Seehausen",ln:"Seehausen (Uckermark)"},39881:{sn:"Ringenwalde",ln:"Ringenwalde"},39882:{sn:"Gollin",ln:"Gollin"},39883:{sn:"Gro\u00df D\u00f6lln",
ln:"Gro\u00df D\u00f6lln"},39884:{sn:"Ha\u00dfleben",ln:"Ha\u00dfleben"},39885:{sn:"Jakobshagen",ln:"Jakobshagen"},39886:{sn:"Milmersdorf",ln:"Milmersdorf"},39887:{sn:"Gerswalde",ln:"Gerswalde"},39888:{sn:"Lychen",ln:"Lychen"},39889:{sn:"Boitzenburg",ln:"Boitzenburg"},39921:{sn:"Ankershagen",ln:"Ankershagen"},39922:{sn:"Dambeck",ln:"Dambeck"},39923:{sn:"Priborn",ln:"Priborn"},39924:{sn:"Stuer",ln:"Stuer"},39925:{sn:"Wredenhagen",ln:"Wredenhagen"},39926:{sn:"Grabowh\u00f6fe",ln:"Grabowh\u00f6fe"},
39927:{sn:"Nossentiner",ln:"Nossentiner H\u00fctte"},39928:{sn:"M\u00f6llenhagen",ln:"M\u00f6llenhagen"},39929:{sn:"Jabel",ln:"Jabel"},39931:{sn:"R\u00f6bel",ln:"R\u00f6bel/M\u00fcritz"},39932:{sn:"Malchow",ln:"Malchow"},39933:{sn:"Vollrathsruhe",ln:"Vollrathsruhe"},39934:{sn:"Klein Plasten",ln:"Klein Plasten"},39951:{sn:"Faulenrost",ln:"Faulenrost"},39952:{sn:"Grammentin",ln:"Grammentin"},39953:{sn:"Schwinkendorf",ln:"Schwinkendorf"},39954:{sn:"Stavenhagen",ln:"Stavenhagen"},39955:{sn:"J\u00fcrgenstorf",
ln:"J\u00fcrgenstorf"},39956:{sn:"Neukalen",ln:"Neukalen"},39957:{sn:"Gielow",ln:"Gielow"},39959:{sn:"Dargun",ln:"Dargun"},39971:{sn:"Gnoien",ln:"Gnoien"},39972:{sn:"Walkendorf",ln:"Walkendorf"},39973:{sn:"Altkalen",ln:"Altkalen"},39975:{sn:"Th\u00fcrkow",ln:"Th\u00fcrkow"},39976:{sn:"Gro\u00df B\u00fctzin",ln:"Gro\u00df B\u00fctzin"},39977:{sn:"J\u00f6rdenstorf",ln:"J\u00f6rdenstorf"},39978:{sn:"Gro\u00df Roge",ln:"Gro\u00df Roge"},39991:{sn:"Daberkow",ln:"Daberkow"},39992:{sn:"G\u00f6rmin",ln:"G\u00f6rmin"},
39993:{sn:"Hohenmocker",ln:"Hohenmocker"},39994:{sn:"Metschow",ln:"Metschow"},39995:{sn:"Nossendorf",ln:"Nossendorf"},39996:{sn:"T\u00f6rpin",ln:"T\u00f6rpin"},39997:{sn:"Jarmen",ln:"Jarmen"},39998:{sn:"Loitz",ln:"Loitz"},39999:{sn:"Tutow",ln:"Tutow"}};ilib.data.area_FR={1:{sn:"Paris",ln:"Paris (Ile-de-France area)"},2:{sn:"Northwest France",ln:"Northwest France"},3:{sn:"Northeast France",ln:"Northeast France"},4:{sn:"Southeast France",ln:"Southeast France"},5:{sn:"Southwest France",ln:"Southwest France"}};
ilib.data.area_ES={2:{},3:{},4:{},822:{sn:"Santa Cruz de Tenerife",ln:"Granadilla de Abona, Guimar, Icod de los Vinos, Isla de la Palma, La Orotava, San Sebastian de la Gomera, Santa Cruz de Tenerife, Valverde"},824:{sn:"Badajoz",ln:"Alburquerque, Alconchel, Almendralejo, Azuaga, Badajoz, Cabeza del Buey, Castuera, Don Benito, Fregenal de la Sierra, Fuente de Cantos, Guare\u00f1a, Jerez de los Caballeros, Llerena, Merida, Villafranca de los Barros, Zafra"},828:{sn:"Las Palmas",ln:"Arrecife, Galdar, Isla de Fuerteventura, Las Palmas, Vecindario"},
843:{sn:"Guipuzcoa",ln:"Azpeitia, Beasain, Bergara, deba, Donostia-San Sebastian, Eibar, Guipuzcoa"},848:{sn:"Navarra",ln:"Alsasua, Los Arcos, Burguete, Elizondo, Estella, Ezcaroz, Irurzun, Leiza, Pamplona, San Adrian, Sanguesa, Tafalla, Tudela, Vera de Bidasoa, Navarra"},856:{sn:"C\u00e1diz",ln:"Algeciras, Arcos de la Frontera, Barbate de Franco, Cadiz, Ceuta, Gibraltar, Jerez de la Frontera, Medina-Sidonia, Olvera, Sanlucar de Barrameda, C\u00e1diz"},858:{sn:"Granada",ln:"Alhama de Granada, Baza, Cadiar, Cullar, Granada, Guadix, Iznalloz, Lanjaron, Loja, Motril"},
868:{sn:"Murcia",ln:"Alhama de Murcia, Archena, Caravaca, Cartagena, Cieza, Jumilla, Lorca, Murcia"},871:{sn:"Baleares",ln:"Campos, Eivissa, Inca, Manacor, Mao, Palma, Pollen\u00e7a, Sineu, Soller, Baleares"},872:{sn:"Gerona",ln:"Blanes, Camprodon, Figueres, Girona, Llan\u00e7a, Olot, Palafrugell, Puigcerda, Ripoll, Roses, Sant Feliu de Guixols, Santa Coloma de Farners, Torroella de Montgri, Gerona"},873:{sn:"Lerida",ln:"Artesa de Segre, Balaguer, Bellver de Cerdanya, Cervera, Lleida, Mollerussa, El Pont de Suert, Ponts, La Seu D'Urgell, Solsona, Sort, Tarrega, Tremp, Vielha, Lerida"},
876:{sn:"Zaragoza",ln:"Alagon, Alhama de Aragon, La Almunia de Do\u00f1a Godina, Belchite, Calatayud, Cari\u00f1ena, Caspe, Daroca, Ejea de los Caballeros, Escatron, Fuentes de Ebro, Illueca, Mallen, Muel, Tarazona, Zaragoza, Zuera"},877:{sn:"Tarragona",ln:"Amposta, Falset, Gandesa, Montblanc, Mora D'Ebre, Reus, Santa Coloma de Queralt, Tarragona, Tortosa, El Vendrell"},881:{sn:"Coru\u00f1a",ln:"Betanzos, Carballo, A Coru\u00f1a, Ferrol, Noia, Ordenes, Ortigueira, Santiago"},886:{sn:"Pontevedra",
ln:"A Estrada, Lalin, Ponte-Caldelas, Ponteareas, Pontevedra, Tui, Vigo, Vilagarcia de Arousa"},910:{sn:"Madrid",ln:"Alcala de Henares, Arganda, Collado Villalba, Madrid"},911:{sn:"Madrid",ln:"Alcala de Henares, Aranjuez, Arganda, Buitrago del Lozoya, Collado Villalba, El Escorial, Madrid, El Molar, Navalcarnero, San Martin de Valdeiglesias"},912:{sn:"Madrid",ln:"Alcala de Henares, Aranjuez, Arganda, Buitrago del Lozoya, Collado Villalba, El Escorial, Madrid, El Molar, Navalcarnero, San Martin de Valdeiglesias"},
913:{sn:"Madrid",ln:"Madrid"},914:{sn:"Madrid",ln:"Alcala de Henares, Aranjuez, Arganda, Buitrago del Lozoya, Collado Villalba, El Escorial, Madrid, El Molar, Navalcarnero, San Martin de Valdeiglesias"},915:{sn:"Madrid",ln:"Madrid"},916:{sn:"Madrid",ln:"Madrid, El Molar"},917:{sn:"Madrid",ln:"Aranjuez, Arganda, El Escorial, Madrid, El Molar, Navalcarnero, San Martin de Valdeiglesias"},918:{sn:"Madrid",ln:"Alcala de Henares, Aranjuez, Arganda, Buitrago del Lozoya, Collado Villalba, El Escorial, Madrid, El Molar, Navalcarnero, San Martin de Valdeiglesias"},
920:{sn:"\u00c1vila",ln:"Arenas de San Pedro, Arevalo, Avila, El Barco de Avila, Navalmoral, Piedrahita, San Pedro del Arroyo, \u00c1vila"},921:{sn:"Seville",ln:"Cantalejo, Carbonero El Mayor, Cuellar, Nava de la Asuncion, Riaza, San Rafael, Segovia, Turegano, Osuna, Seville"},922:{sn:"Santa Cruz de Tenerife",ln:"Granadilla de Abona, Guimar, Icod de los Vinos, Isla de la Palma, La Orotava, San Sebastian de la Gomera, Santa Cruz de Tenerife, Valverde"},923:{sn:"Salamanca",ln:"Bejar, Cantalapiedra, Ciudad Rodrigo, La Fuente de San Esteban, Guijuelo, Ledesma, Pe\u00f1aranda de Bracamonte, Salamanca, Las Veguillas, Vitigudino"},
924:{sn:"Badajoz",ln:"Alburquerque, Alconchel, Almendralejo, Azuaga, Badajoz, Cabeza del Buey, Castuera, Don Benito, Fregenal de la Sierra, Fuente de Cantos, Guare\u00f1a, Jerez de los Caballeros, Llerena, Merida, Villafranca de los Barros, Zafra"},925:{sn:"Toledo",ln:"Galvez, Illescas, Madridejos, Mora, Oca\u00f1a, Oropesa, La Pueblanueva, Quintanar de la Orden, Talavera de la Reina, Toledo, Torrijos"},926:{sn:"Ciudad Real",ln:"Alcazar de San Juan, Almaden, Ciudad Real, Daimiel, Malagon, Manzanares, Piedrabuena, Puertollano, Tomelloso, Valdepe\u00f1as, Villanueva de los Infantes"},
927:{sn:"Caceres",ln:"Alcantara, Caceres, Ca\u00f1averal, Coria, Jaraiz de la Vera, Logrosan, Montanchez, Montehermoso, Navalmoral de la Mata, Plasencia, Trujillo, Valencia de Alcantara, Zorita"},928:{sn:"Las Palmas",ln:"Arrecife, Galdar, Isla de Fuerteventura, Las Palmas, Vecindario"},930:{sn:"Barcelona",ln:"Barcelona, Granollers, Mataro, Sabadell-Terrassa"},931:{sn:"Barcelona",ln:"Barcelona, Berga, Caldes de Montbui, Calella, Cardona, Granollers, Igualada, Manlleu, Manresa, Martorell, Mataro, Sabadell-Terrassa, Sallent, Sant Celoni, Vic, Vilafranca del Penedes, Vilanova i la Geltru"},
932:{sn:"Barcelona",ln:"Barcelona, Berga, Granollers, Igualada, Manresa, Martorell, Mataro, Sabadell-Terrassa, Sant Celoni, Vilafranca del Penedes, Vilanova i la Geltru"},933:{sn:"Barcelona",ln:"Barcelona, Caldes de Montbui, Granollers, Igualada, Manresa, Martorell, Mataro, Sabadell-Terrassa, Vic, Vilafranca del Penedes, Vilanova i la Geltru"},934:{sn:"Barcelona",ln:"Barcelona"},935:{sn:"Barcelona",ln:"Barcelona, Berga, Caldes de Montbui, Calella, Cardona, Granollers, Igualada, Manlleu, Manresa, Martorell, Mataro, Sabadell-Terrassa, Sallent, Sant Celoni, Vic, Vilafranca del Penedes, Vilanova i la Geltru"},
936:{sn:"Barcelona",ln:"Barcelona, Berga, Caldes de Montbui, Calella, Cardona, Granollers, Igualada, Manlleu, Manresa, Martorell, Mataro, Sabadell-Terrassa, Sallent, Sant Celoni, Vic, Vilafranca del Penedes, Vilanova i la Geltru"},937:{sn:"Barcelona",ln:"Barcelona, Berga, Caldes de Montbui, Calella, Cardona, Granollers, Igualada, Manlleu, Manresa, Martorell, Mataro, Sabadell-Terrassa, Sallent, Sant Celoni, Vic, Vilafranca del Penedes, Vilanova i la Geltru"},938:{sn:"Barcelona",ln:"Barcelona, Berga, Caldes de Montbui, Calella, Cardona, Granollers, Igualada, Manlleu, Manresa, Martorell, Mataro, Sabadell-Terrassa, Sallent, Sant Celoni, Vic, Vilafranca del Penedes, Vilanova i la Geltru"},
941:{sn:"La Rioja",ln:"Alfaro, Arnedo, Calahorra, Haro, Logro\u00f1o, Najera, Santo Domingo de la Calzada, Torrecilla en Cameros, La Rioja"},942:{sn:"Cantabria",ln:"Cabezon de la Sal, Castro-Urdiales, Laredo, Potes, Reinosa, San Vicente de la Barquera, Santander, Torrelavega, Villacarriedo, Cantabria"},943:{sn:"Guipuzcoa",ln:"Don Benito, Azpeitia, Beasain, Bergara, deba, Donostia-San Sebastian, Eibar, Guipuzcoa"},944:{sn:"Vizcaya",ln:"Balmaseda, Bermeo, Bilbao, Durango, Gernika, Ondarroa, Vizcaya"},
945:{sn:"Alava",ln:"Amurrio, Vitoria-Gasteiz, Alava"},946:{sn:"Vizcaya",ln:"Balmaseda, Bermeo, Bilbao, Durango, Gernika, Ondarroa, Vizcaya"},947:{sn:"Burgos",ln:"Aranda de Duero, Belorado, Briviesca, Burgos, Lerma, Medina de Pomar, Miranda de Ebro, O\u00f1a, Pampliega, Salas de los Infantes, Sasamon, Sedano, Villadiego, Villarcayo"},948:{sn:"Navarra",ln:"Alsasua, Los Arcos, Burguete, Elizondo, Estella, Ezcaroz, Irurzun, Leiza, Pamplona, San Adrian, Sanguesa, Tafalla, Tudela, Vera de Bidasoa, Navarra"},
949:{sn:"Guadalajara",ln:"Brihuega, Cifuentes, Guadalajara, Humanes, Jadraque, Molina, Pastrana, Sacedon, Siguenza"},950:{sn:"Almer\u00eda",ln:"Abla, Adra, Albox, Almeria, Canjayar, Nijar, Tijola, Velez Rubio, Vera, Almer\u00eda"},951:{sn:"Malaga",ln:"Antequera, Coin, Cortes de la Frontera, Malaga, Marbella, Melilla, Ronda, Velez-Malaga"},952:{sn:"Malaga",ln:"Antequera, Coin, Cortes de la Frontera, Malaga, Marbella, Melilla, Ronda, Velez-Malaga"},953:{sn:"Jaen",ln:"Alcala la Real, Andujar, Castellar de Santisteban, Cazorla, Jaen, Linares, Orcera, Ubeda, Villanueva del Arzobispo"},
954:{sn:"Seville",ln:"El Arahal, Cantillana, Carmona, Constantina, Ecija, Lora del Rio, Moron de la Frontera, Osuna, Pilas, Seville, Utrera"},955:{sn:"Seville",ln:"Granada, El Arahal, Cantillana, Carmona, Constantina, Ecija, Lora del Rio, Moron de la Frontera, Osuna, Pilas, Seville, Utrera"},956:{sn:"C\u00e1diz",ln:"Algeciras, Arcos de la Frontera, Barbate de Franco, Cadiz, Ceuta, Jerez de la Frontera, Medina-Sidonia, Olvera, Sanlucar de Barrameda, C\u00e1diz"},957:{sn:"Cordoba",ln:"La Carlota, Castro del Rio, Cordoba, Hinojosa del Duque, Lucena, Montilla, Montoro, Pe\u00f1arroya-Pueblonuevo, Posadas, Pozoblanco, Priego de Cordoba, Puente Genil, Villaviciosa de Cordoba"},
958:{sn:"Granada",ln:"Alhama de Granada, Baza, Cadiar, Cullar"},959:{sn:"Murcia",ln:"Aracena, Ayamonte, Cortegana, Huelva, Lepe, Nerva, La Palma del Condado, Santa Olalla del Cala, Valverde del Camino, Cartagena, Murcia"},960:{sn:"Valencia",ln:"Alzira, Ayora, Betera, Bu\u00f1ol, Carlet, Chelva, Gandia, Ll\u00edria, Ontinyent, Requena, Sagunt, Sueca, Utiel, Valencia, Xativa"},961:{sn:"Valencia",ln:"Alzira, Ayora, Betera, Bu\u00f1ol, Carlet, Chelva, Gandia, Ll\u00edria, Ontinyent, Requena, Sagunt, Sueca, Utiel, Valencia, Xativa"},
962:{sn:"Valencia",ln:"Alzira, Ayora, Betera, Bu\u00f1ol, Carlet, Chelva, Gandia, Ll\u00edria, Ontinyent, Requena, Sagunt, Sueca, Utiel, Valencia, Xativa"},963:{sn:"Valencia",ln:"Alzira, Ayora, Betera, Bu\u00f1ol, Chelva, Gandia, Ll\u00edria, Ontinyent, Requena, Sagunt, Sueca, Utiel, Valencia, Xativa"},964:{sn:"Castell\u00f3n de la Plana",ln:"Alcala de Chivert, Benasal, Morella, Segorbe, Vinaros, Castell\u00f3n de la Plana"},965:{sn:"Alicante",ln:"Alcoy-Plaza, Alicante-Avenida, Almoradi, Benidorm, Benissa, denia, Elche-Vinalopo, Jijona, Orihuela, Pego, Petrer, Villena, Alicante"},
966:{sn:"Alicante",ln:"Alcoy-Plaza, Alicante-Avenida, Almoradi, Benidorm, Benissa, denia, Elche-Vinalopo, Jijona, Orihuela, Pego, Petrer, Villena, Alicante"},967:{sn:"Albacete",ln:"Albacete, Alcaraz, Almansa, Balazote, Bogarra, El Bonillo, Casas-Iba\u00f1ez, Elche de la Sierra, Hellin, Petrola, La Roda, Tarazona de la Mancha, Valdeganga, Villarrobledo, Yeste"},968:{sn:"Murcia",ln:"Alhama de Murcia, Archena, Caravaca, Cartagena, Cieza, Jumilla, Lorca, Murcia"},969:{sn:"Cuenca",ln:"La Almarcha, Carboneras de Guadazaon, Cuenca, Huete, Landete, Motilla del Palancar, Priego, San Clemente, Tarancon, Valverde de Jucar"},
971:{sn:"Baleares",ln:"Campos, Eivissa, Inca, Manacor, Mao, Palma, Pollen\u00e7a, Sineu, Soller, Baleares"},972:{sn:"Gerona",ln:"Blanes, Camprodon, Figueres, Girona, Llan\u00e7a, Olot, Palafrugell, Puigcerda, Ripoll, Roses, Sant Feliu de Guixols, Santa Coloma de Farners, Torroella de Montgri, Gerona"},973:{sn:"Lerida",ln:"Artesa de Segre, Balaguer, Bellver de Cerdanya, Cervera, Lleida, Mollerussa, El Pont de Suert, Ponts, La Seu D'Urgell, Solsona, Sort, Tarrega, Tremp, Vielha, Lerida"},974:{sn:"Huesca",
ln:"Ainsa, Ayerbe, Barbastro, Campo, Fraga, Graus, Gra\u00f1en, Huesca, Jaca, Monzon, Sabi\u00f1anigo, Sari\u00f1ena, Tamarite de Litera"},975:{sn:"Soria",ln:"Almazan, Arcos de Jalon, El Burgo de Osma, Covaleda, Gomara, San Esteban de Gormaz, Soria"},976:{sn:"Zaragoza",ln:"Alagon, Alhama de Aragon, La Almunia de Do\u00f1a Godina, Belchite, Calatayud, Cari\u00f1ena, Caspe, Daroca, Ejea de los Caballeros, Escatron, Fuentes de Ebro, Illueca, Mallen, Muel, Tarazona, Zaragoza, Zuera"},977:{sn:"Tarragona",
ln:"Amposta, Falset, Gandesa, Montblanc, Mora D'Ebre, Reus, Santa Coloma de Queralt, Tarragona, Tortosa, El Vendrell"},978:{sn:"Teruel",ln:"Albarracin, Alca\u00f1iz, Alcorisa, Alfambra, Calamocha, Hijar, Mora de Rubielos, Muniesa, Santa Eulalia, Sarrion, Teruel, Utrillas, Valderrobres"},979:{sn:"Palencia",ln:"Aguilar de Campoo, Baltanas, Carrion de los Condes, Cervera de Pisuerga, Fromista, Guardo, Herrera de Pisuerga, Palencia, Paredes de Nava, Salda\u00f1a"},980:{sn:"Zamora",ln:"Alca\u00f1ices, Benavente, Bermillo de Sayago, Fuentesauco, Puebla de Sanabria, Tabara, Toro, Villalpando, Zamora"},
981:{sn:"Coru\u00f1a",ln:"Betanzos, Carballo, Coru\u00f1a, Ferrol, Noia, Ordenes, Ortigueira, Santiago"},982:{sn:"Lugo",ln:"Becerrea, Chantada, Guitiriz, Lugo, Meira, Monforte de Lemos, Ribadeo, Sarria, Villalba, Viveiro"},983:{sn:"Valladolid",ln:"Medina de Rioseco, Medina del Campo, Olmedo, Pe\u00f1afiel, Quintanilla de Onesimo, Tordesillas, Valladolid, Villalon de Campos"},984:{sn:"Asturias",ln:"Aviles, Cangas de Narcea, Cangas de Onis, Gijon, Infiesto, Llanes, Luarca, Moreda, Oviedo, Pola de Laviana, Ribadesella, Tineo, Asturias"},
985:{sn:"Asturias",ln:"Aviles, Cangas de Narcea, Cangas de Onis, Gijon, Infiesto, Llanes, Luarca, Moreda, Oviedo, Pola de Laviana, Ribadesella, Tineo, Asturias"},986:{sn:"Pontevedra",ln:"A Estrada, Lalin, Ponte-Caldelas, Ponteareas, Pontevedra, Tui, Vigo, Vilagarcia de Arousa"},987:{sn:"Le\u00f3n",ln:"Astorga, La Ba\u00f1eza, Bembibre, Cistierna, Leon, Ponferrada, Quintana de Rueda, Ria\u00f1o, La Robla, Sahagun, Valencia de Don Juan, Veguellina de Orbigo, Villablino, Villafranca del Bierzo, Le\u00f3n"},
988:{sn:"Orense",ln:"Allariz, Ourense, Ribadavia, La Rua, Verin, Orense"}};
ilib.data.area_MX={33:{sn:"Jalisco",ln:"Guadalajara, Jalisco"},55:{sn:"Mexico City",ln:"Mexico City, Federal District"},81:{sn:"Nuevo Le\u00f3n",ln:"Monterrey, Nuevo Le\u00f3n"},222:{sn:"Puebla",ln:"Amozoc, Puebla, San Andres Calpan, San Miguel Canoa, Puebla"},223:{sn:"Puebla",ln:"Magdalena Tetela, San Pablo Zitlaltepec, Tepatlaxco de Hidalgo, Tepeaca, Puebla"},224:{sn:"Puebla",ln:"Atoyatempan, San Juan Ixcaquixtla, Tecali de Herrera, Tochtepec, Puebla"},225:{sn:"Veracruz",ln:"Tlapacoyan, Veracruz"},
226:{sn:"Veracruz",ln:"Altotonga, Jalacingo, Veracruz"},227:{sn:"Puebla",ln:"Huejotzingo, San Buenaventura Nealtican, Puebla"},228:{sn:"Veracruz",ln:"Jalapa, Tuzamapan, Veracruz"},229:{sn:"Veracruz",ln:"Veracruz, Veracruz"},231:{sn:"Puebla",ln:"Teteles, Teziutlan, Puebla"},232:{sn:"Veracruz",ln:"La Vigueta, Martinez de la Torre, Veracruz"},233:{sn:"Puebla",ln:"Cuetzalan, Tlatlauquitepec, Zacapoaxtla, Zaragoza, Puebla"},235:{sn:"Veracruz",ln:"Misantla, Nautla, San Rafael, Vega de Alatorre, Veracruz"},
236:{sn:"Oaxaca",ln:"Ajalpan, Calipan, Cuicatlan, Huautla de Jimenez, Teotitlan del Camino, Oaxaca"},237:{sn:"Puebla",ln:"San Gabriel Chilac, San Simon Yehualtepec, Tlacotepec, Puebla"},238:{sn:"Puebla",ln:"Santiago Miahuatlan, Tehuacan, Puebla"},241:{sn:"Tlaxcala",ln:"Apizaco, Hueyotlipan, San Martin Xaltocan, San Salvador Tzonpantepec, Tlaxco, Tlaxcala"},243:{sn:"Puebla",ln:"Atencingo, Izucar de Matamoros, San Felipe Ayutla, Puebla"},244:{sn:"Puebla",ln:"Atlixco, La Venta Cacaloxuchil, Tochimilco, Puebla"},
245:{sn:"Puebla",ln:"Ciudad Serdan, Esperanza, Tlachichuca, Puebla"},246:{sn:"Tlaxcala",ln:"Santa Ana Nopalucan, Santa Maria Nativitas, Tlaxcala, Zacatelco, Tlaxcala"},247:{sn:"Tlaxcala",ln:"Huamantla, San Cosme Xalostoc, Tlaxcala"},248:{sn:"Puebla",ln:"San Felipe Ixtacuixtla, San Felipe Teotlalcingo, San Lorenzo Chiautzingo, San Lucas el Grande, San Martin Texmelucan, San Mateo Tepetitla, San Salvador el Verde, Santa Rita Tlahuapan, Puebla"},249:{sn:"Puebla",ln:"Acatzingo, Ca\u00f1ada Morelos, Los Reyes de Juarez, Palmar de Bravo, Palmarito Tochapan, San Hipolito Zoltepec, San Pablo de Las Tunas, San Salvador el Seco, Tecamachalco, Puebla"},
271:{sn:"Veracruz",ln:"Amatlan, Cordoba, Potrero, Veracruz"},272:{sn:"Veracruz",ln:"Maltrata, Orizaba, Veracruz"},273:{sn:"Veracruz",ln:"Chocaman, Coscomatepec, Huatusco, Ixhuatlan del Cafe, Paso del Macho, Villa Tejeda (Camaron), Veracruz"},274:{sn:"Oaxaca",ln:"Acatlan de Perez Figueroa, Temascal, Tierra Blanca, Vicente Camalote, Oaxaca"},275:{sn:"Puebla",ln:"Chiautla de Tapia, Chinantla-Piaxtla, Huehuetlan el Chico, Tecomatlan, Tehuitzingo, Tulcingo del Valle, Puebla"},276:{sn:"Puebla",ln:"Libres, Oriental, San Lorenzo Cuapiaxtla, Villa Rafael Lara Grajales, Puebla"},
278:{sn:"Veracruz",ln:"Omealca, San Juan de la Punta, Tezonapa, Yanga, Zongolica, Veracruz"},279:{sn:"Veracruz",ln:"Actopan, Alto Lucero, Cosautlan de Carvajal, Estanzuela, Juchique de Ferrer, Naolinco de Victoria, Rinconada, Teocelo, Villa Emiliano Zapata, Veracruz"},281:{sn:"Oaxaca",ln:"Loma Bonita, Oaxaca"},282:{sn:"Veracruz",ln:"Alchichica, Guadalupe Victoria, Perote, Profesor Rafael Ramirez, Veracruz"},283:{sn:"Veracruz",ln:"Isla, Playa Vicente, Rodriguez Clara, San Juan Bautista Valle Nacional, Villa Azueta, Veracruz"},
284:{sn:"Veracruz",ln:"Angel Rosario Cabada, Lerdo de Tejada, Veracruz"},285:{sn:"Veracruz",ln:"Ignacio de la Llave, Jamapa, Manlio Fabio Altamirano, Medellin de Bravo, Paso de Ovejas, Piedras Negras, Soledad de Doblado, Veracruz"},287:{sn:"Oaxaca",ln:"Otatitlan, Papaloapan, San Felipe Jalapa de Diaz, San Lucas Ojitlan, Tuxtepec, Oaxaca"},288:{sn:"Veracruz",ln:"Chacaltianguis, Cosamaloapan, Tlacojalpan, Tlacotalpan, Tres Valles, Veracruz"},294:{sn:"Veracruz",ln:"Catemaco, Juan Diaz Covarrubias, San Andres Tuxtla, Santiago Tuxtla, Veracruz"},
296:{sn:"Veracruz",ln:"Campamento Farallon, La Antigua, Villa Cardel, Zempoala, Veracruz"},297:{sn:"Veracruz",ln:"Alvarado, Veracruz"},311:{sn:"Nayarit",ln:"Bellavista, Francisco I. Madero, Tepic, Nayarit"},312:{sn:"Colima",ln:"Colima, Los Tepames, Colima"},313:{sn:"Colima",ln:"Armeria, Cerro de Ortega, Coahuayana de Hidalgo, Coquimatlan, Cuyutlan, Madrid, Tecoman, Colima"},314:{sn:"Colima",ln:"Manzanillo, Pe\u00f1a Colorada, Colima"},315:{sn:"Jalisco",ln:"Careyes, Cihuatlan, La Manzanilla, San Patricio Melaque, Jalisco"},
316:{sn:"Jalisco",ln:"Ayutla, Cuautla, San Clemente, Union de Tula, Jalisco"},317:{sn:"Jalisco",ln:"Autlan, El Chante, Jalisco"},318:{sn:"Jalisco",ln:"Cofradia de Suchitlan, Cuauhtemoc, La Higuera, Pihuamo, Queseria, Tonila, Jalisco"},319:{sn:"Nayarit",ln:"Chilapa, Palma Grande, Rosa Morada, Ruiz, Tuxpan, Nayarit"},321:{sn:"Jalisco",ln:"El Grullo, El Limon, Jalisco"},322:{sn:"Jalisco",ln:"Campamento Sarh, Ixtapa, Jose Maria Morelos, Nuevo Vallarta, Puerto Vallarta, Tomatlan, Jalisco"},323:{sn:"Nayarit",
ln:"Estacion Yago, Guadalupe Victoria, La Presa, La Trozada (Villa Juarez), Pozo de Ibarra, San Blas, Santiago Ixcuintla, Sentispac, Villa Hidalgo, Nayarit"},324:{sn:"Nayarit",ln:"Ahuacatlan, Amatlan de Ca\u00f1as, Ixtlan del Rio, Jala, Nayarit"},325:{sn:"Nayarit",ln:"Acaponeta, Nayarit"},326:{sn:"Jalisco",ln:"Andres Figueroa, Atemajac de Brizuela, Zacoalco, Jalisco"},327:{sn:"Nayarit",ln:"Compostela, Jalcocotan, Las Varas, Mecatan, Rincon de Guayabitos, San Pedro Lagunillas, Santa Maria del Oro, Zacoalpan, Nayarit"},
328:{sn:"Michoac\u00e1n",ln:"Churintzio, Ecuandureo, Ixtlan de Los Hervores, La Luz, Vista Hermosa, Michoac\u00e1n"},329:{sn:"Nayarit",ln:"Bucerias, San Jose del Valle, San Juan de Abajo, Valle de Banderas, Nayarit"},341:{sn:"Jalisco",ln:"Ciudad Guzman, Jalisco"},342:{sn:"Jalisco",ln:"Gomez Farias, Sayula, Jalisco"},343:{sn:"Jalisco",ln:"Ejutla, Tapalpa, Toliman, Tonaya, Venustiano Carranza, Jalisco"},344:{sn:"Jalisco",ln:"Mexticacan, Yahualica, Jalisco"},345:{sn:"Jalisco",ln:"Ayotlan, Betania, Degollado, La Concepcion, Jalisco"},
346:{sn:"Jalisco",ln:"Nochistlan, Teocaltiche, Jalisco"},347:{sn:"Jalisco",ln:"San Julian, San Miguel el Alto, Valle de Guadalupe, Jalisco"},348:{sn:"Jalisco",ln:"Arandas, Jesus Maria, Josefino de Allende, San Ignacio Cerro Gordo, Santa Maria del Valle, Santiaguito de Velazquez, Jalisco"},349:{sn:"Jalisco",ln:"Atengo, Juchitlan, Quila, Tecolotlan, Tenamaxtlan, Jalisco"},351:{sn:"Michoac\u00e1n",ln:"Ario de Rayon, Zamora, Michoac\u00e1n"},352:{sn:"Michoac\u00e1n",ln:"La Piedad, Michoac\u00e1n"},353:{sn:"Michoac\u00e1n",
ln:"La Palma, Pajacuaran, Sahuayo, Venustiano Carranza, Michoac\u00e1n"},354:{sn:"Michoac\u00e1n",ln:"Los Reyes, Periban de Ramos, Tinguindin, Tocumbo, Michoac\u00e1n"},355:{sn:"Michoac\u00e1n",ln:"Chilchota, San Antonio Ocampo, Tangancicuaro, Michoac\u00e1n"},356:{sn:"Michoac\u00e1n",ln:"Tanhuato, Yurecuaro, Michoac\u00e1n"},357:{sn:"Jalisco",ln:"Casimiro Castillo, La Huerta, Lo Arado, Los Tecomates, Tequesquitlan, Villa Purificacion, Jalisco"},358:{sn:"Jalisco",ln:"Tamazula, Zapoltitic, Jalisco"},
371:{sn:"Jalisco",ln:"Atenquique, Tecalitlan, Tuxpan, Jalisco"},372:{sn:"Jalisco",ln:"Amacueca, Cofradia, Concepcion de Buenos Aires, La Manzanilla de la Paz, Teocuitatlan de Corona, Jalisco"},373:{sn:"Jalisco",ln:"Cuquio, Ixtlahuacan del Rio, Zapotlanejo, Jalisco"},374:{sn:"Jalisco",ln:"Amatitan, El Arenal, Tequila, Jalisco"},375:{sn:"Jalisco",ln:"Ameca, Jalisco"},376:{sn:"Jalisco",ln:"Atequiza, Chapala, Ixtlahuacan de Los Membrillos, Mezcala, San Juan Tecomatlan, San Luis Soyotlan, Tizapan el Alto, Jalisco"},
377:{sn:"Jalisco",ln:"Cocula, Estipac, Jalisco"},378:{sn:"Jalisco",ln:"Acatic, Capilla de Guadalupe, Capilla de Milpillas, Pegueros, Tepatitlan, Jalisco"},379:{sn:"Michoac\u00e1n",ln:"Numaran, Penjamillo, San Miguel Cuyutlan, Santa Cruz de Las Flores, Tlajomulco, Zinaparo, Michoac\u00e1n"},381:{sn:"Michoac\u00e1n",ln:"Cojumatlan, San Jose de Gracia, Michoac\u00e1n"},382:{sn:"Jalisco",ln:"Mazamitla, Quitupan, Valle de Juarez, Jalisco"},383:{sn:"Michoac\u00e1n",ln:"Chavinda, Santiago Tangamandapio, Villamar, Michoac\u00e1n"},
384:{sn:"Jalisco",ln:"Tala, Teuchitlan, Jalisco"},385:{sn:"Jalisco",ln:"Chiquilistlan, San Martin Hidalgo, Tamazulita, Jalisco"},386:{sn:"Jalisco",ln:"Ahualulco, Antonio Escobedo, Etzatlan, Hostotipaquillo, Magdalena, San Marcos, Jalisco"},387:{sn:"Jalisco",ln:"Acatlan de Juarez, Jocotepec, San Juan Cosala, Villa Corona, Zapotitlan, Jalisco"},388:{sn:"Jalisco",ln:"Mascota, Mixtlan, Talpa de Allende, Jalisco"},389:{sn:"Nayarit",ln:"Quimichis, San Felipe Aztatan, Tecuala, Nayarit"},391:{sn:"Jalisco",
ln:"Atotonilco el Alto, Las Margaritas, Poncitlan, San Antonio Fernandez, San Jose de Gracia, Tototlan, Jalisco"},392:{sn:"Jalisco",ln:"Jamay, Ocotlan, Jalisco"},393:{sn:"Jalisco",ln:"La Barca, San Jose Casas Caidas, San Ramon, Jalisco"},394:{sn:"Michoac\u00e1n",ln:"Cotija de la Paz, Michoac\u00e1n"},395:{sn:"Jalisco",ln:"San Diego de Alejandria, San Juan de Los Lagos, Tlacuitapan, Union de San Antonio, Jalisco"},411:{sn:"Guanajuato",ln:"Ca\u00f1ada de Caracheo, Cortazar, Jaral del Progreso, San Pablo Casacuaran, Yuriria, Guanajuato"},
412:{sn:"Guanajuato",ln:"Comonfort, Empalme Escobedo, Juventino Rosas, Sarabia, Villagran, Guanajuato"},413:{sn:"Guanajuato",ln:"Apaseo el Alto, Apaseo el Grande, Guanajuato"},414:{sn:"Quintana Roo",ln:"Tequisquiapan, Quintana Roo"},415:{sn:"Guanajuato",ln:"San Miguel Allende, Guanajuato"},417:{sn:"Guanajuato",ln:"Acambaro, Iramuco, Nuevo Chupicuaro, Paracuaro, Guanajuato"},418:{sn:"Guanajuato",ln:"Dolores Hidalgo, San Diego de la Union, Guanajuato"},419:{sn:"Guanajuato",ln:"Colon, Doctor Mora, San Jose Iturbide, Guanajuato"},
421:{sn:"Guanajuato",ln:"Coroneo, Jerecuaro, Tarandacuao, Guanajuato"},422:{sn:"Michoac\u00e1n",ln:"Ario de Rosales, Gabriel Zamora, Taretan, Michoac\u00e1n"},423:{sn:"Michoac\u00e1n",ln:"Cheran, Paracho, Tingambato, Ziracuaretiro, Michoac\u00e1n"},424:{sn:"Michoac\u00e1n",ln:"Coalcoman, El Ahuaje, Tepalcatepec, Michoac\u00e1n"},425:{sn:"Michoac\u00e1n",ln:"Antunez, La Huacana, Nueva Italia, Tancitaro, Michoac\u00e1n"},426:{sn:"Michoac\u00e1n",ln:"Aguililla, Buenavista, Felipe Carrillo Puerto, Michoac\u00e1n"},
427:{sn:"Quintana Roo",ln:"Polotitlan, San Juan del Rio, Quintana Roo"},428:{sn:"Guanajuato",ln:"Ocampo, San Felipe, Guanajuato"},429:{sn:"Guanajuato",ln:"Abasolo, Cueramaro, Huanimaro, Pueblo Nuevo, Guanajuato"},431:{sn:"Jalisco",ln:"Jalostotitlan, Villa Obregon, Jalisco"},432:{sn:"Guanajuato",ln:"Ciudad Manuel Doblado, Romita, Guanajuato"},433:{sn:"Zacatecas",ln:"Gonzalez Ortega, Miguel Auza, Sombrerete, Zacatecas"},434:{sn:"Michoac\u00e1n",ln:"Acuitzio del Canje, Erongaricuaro, Patzcuaro, Villa Escalante (S.c.del Cobre), Michoac\u00e1n"},
435:{sn:"Michoac\u00e1n",ln:"Huetamo, San Lucas, Michoac\u00e1n"},436:{sn:"Michoac\u00e1n",ln:"Zacapu, Michoac\u00e1n"},437:{sn:"Jalisco",ln:"Chimaltitan, Momax, Tepechitlan, Tlaltenango, Totatiche, Villa Guerrero, Jalisco"},438:{sn:"Michoac\u00e1n",ln:"Cerano, Pastor Ortiz, Puruandiro, Villa Morelos, Michoac\u00e1n"},441:{sn:"Quintana Roo",ln:"Cadereyta, Ezequiel Montes, Jalpan de Serra, Pinal de Amoles, Quintana Roo"},442:{sn:"Quintana Roo",ln:"Bernardo Quintana, Juriquilla, La Cruz, Queretaro, Santa Rosa de Jauregui, Tlacote el Bajo, Quintana Roo"},
443:{sn:"Michoac\u00e1n",ln:"Morelia, Tarimbaro, Michoac\u00e1n"},444:{sn:"San Luis Potos\u00ed",ln:"San Luis Potosi, San Luis Potos\u00ed"},445:{sn:"Guanajuato",ln:"Moroleon, Guanajuato"},447:{sn:"Michoac\u00e1n",ln:"Contepec, Maravatio, Michoac\u00e1n"},448:{sn:"Quintana Roo",ln:"Amealco, Huimilpan, Pedro Escobedo, Quintana Roo"},449:{sn:"Aguascalientes",ln:"Aguascalientes, Jesus Maria, Aguascalientes"},451:{sn:"Michoac\u00e1n",ln:"Charo, Indaparapeo, Querendaro, Valle de Juarez, Zinapecuaro, Michoac\u00e1n"},
452:{sn:"Michoac\u00e1n",ln:"Nuevo San Juan Parangaricutiro, Uruapan, Michoac\u00e1n"},453:{sn:"Michoac\u00e1n",ln:"Apatzingan, Michoac\u00e1n"},454:{sn:"Michoac\u00e1n",ln:"Angamacutiro, Coeneo de la Libertad, Copandaro, Huaniqueo de Morales, Panindicuaro, Quiroga, Villa Jimenez, Michoac\u00e1n"},455:{sn:"Michoac\u00e1n",ln:"Alvaro Obregon, Cuitzeo del Porvenir, Huandacareo, Santa Ana Maya, Michoac\u00e1n"},456:{sn:"Guanajuato",ln:"Valle de Santiago, Guanajuato"},457:{sn:"Zacatecas",ln:"Chalchiuites, Huejucar, Huejuquilla el Alto, Mezquitic, Monte Escobedo, Valparaiso, Zacatecas"},
458:{sn:"Zacatecas",ln:"Ciudad Cuauhtemoc, Felipe Pescador, Luis Moya, Ojo Caliente, Villa de Cos, Zacatecas"},459:{sn:"Michoac\u00e1n",ln:"Caracuaro, Pedernales, Puruaran, Tacambaro, Tiquicheo, Michoac\u00e1n"},461:{sn:"Guanajuato",ln:"Celaya, Rincon de Tamayo, San Juan de la Vega, Guanajuato"},462:{sn:"Guanajuato",ln:"Irapuato, Guanajuato"},463:{sn:"Zacatecas",ln:"Jalpa, Tabasco, Zacatecas"},464:{sn:"Guanajuato",ln:"Salamanca, Guanajuato"},465:{sn:"Aguascalientes",ln:"Pabellon de Arteaga, Rincon de Romos, San Francisco de Los Romos, Aguascalientes"},
466:{sn:"Guanajuato",ln:"El Sabino, Salvatierra, San Nicolas de Los Agustinos, San Pedro de Los Naranjos, Santiago Maravatio, Tarimoro, Guanajuato"},467:{sn:"Zacatecas",ln:"Juchipila, Moyahua, Teul de Gonzalez Ortega, Zacatecas"},468:{sn:"Guanajuato",ln:"San Luis de la Paz, Guanajuato"},469:{sn:"Guanajuato",ln:"Buenavista de Cortez, Penjamo, Guanajuato"},471:{sn:"Michoac\u00e1n",ln:"Purepero, Tlazazalca, Michoac\u00e1n"},472:{sn:"Guanajuato",ln:"Silao, Guanajuato"},473:{sn:"Guanajuato",ln:"Guanajuato, Guanajuato"},
474:{sn:"Jalisco",ln:"Lagos de Moreno, Paso de Cuarenta, Jalisco"},475:{sn:"Jalisco",ln:"Bajio de San Jose, Encarnacion de Diaz, Jalisco"},476:{sn:"Guanajuato",ln:"San Francisco del Rincon, Guanajuato"},477:{sn:"Guanajuato",ln:"Leon, Guanajuato"},478:{sn:"Zacatecas",ln:"Calera Victor Rosales, Zacatecas"},481:{sn:"San Luis Potos\u00ed",ln:"Ciudad Valles, San Luis Potos\u00ed"},482:{sn:"San Luis Potos\u00ed",ln:"Aquismon, Ciudad del Maiz, El Naranjo, Tamasopo, Tambaca, Tancanhuitz, San Luis Potos\u00ed"},
483:{sn:"San Luis Potos\u00ed",ln:"Matlapa, San Felipe Orizatlan, Tamazunchale, San Luis Potos\u00ed"},485:{sn:"San Luis Potos\u00ed",ln:"San Ciro de Acosta, Santa Maria del Rio, Tierra Nueva, Villa de Arriaga, Villa de Reyes, San Luis Potos\u00ed"},486:{sn:"San Luis Potos\u00ed",ln:"Cerritos, Charcas, Venado, Villa de Arista, Villa Juarez, San Luis Potos\u00ed"},487:{sn:"San Luis Potos\u00ed",ln:"Cardenas, Rayon, Rio Verde, San Luis Potos\u00ed"},488:{sn:"San Luis Potos\u00ed",ln:"Cedral, Doctor Arroyo, Matehuala, San Luis Potos\u00ed"},
489:{sn:"San Luis Potos\u00ed",ln:"Axtla de Terrazas, El Higo, San Vicente Tancuayalab, Tamuin, Tanquian de Escobedo, Xilitla, San Luis Potos\u00ed"},492:{sn:"Zacatecas",ln:"Morelos, Tacoaleche, Trancoso, Zacatecas, Zacatecas"},493:{sn:"Zacatecas",ln:"Fresnillo, Zacatecas"},494:{sn:"Zacatecas",ln:"Jerez de Garcia Salinas, Zacatecas"},495:{sn:"Jalisco",ln:"Calvillo, Villa Hidalgo, Jalisco"},496:{sn:"Zacatecas",ln:"Loreto, Ojuelos, Pinos, Salinas de Hidalgo, Villa Gonzalez Ortega, Villa Hidalgo, Zacatecas"},
498:{sn:"Zacatecas",ln:"Juan Aldama, Nieves, Rio Grande, Sain el Alto, Zacatecas"},499:{sn:"Zacatecas",ln:"Colotlan, Villanueva, Zacatecas"},586:{sn:"M\u00e9xico",ln:"Tlalmanalco, M\u00e9xico"},587:{sn:"M\u00e9xico",ln:"Amecameca, M\u00e9xico"},588:{sn:"M\u00e9xico",ln:"Dongu, Santa Maria Magdalena Cahuacan, Transfiguracion, Villa del Carbon, M\u00e9xico"},589:{sn:"M\u00e9xico",ln:"Juchitepec, Ozumba, M\u00e9xico"},591:{sn:"M\u00e9xico",ln:"San Bartolo Cuautlalpan, Santa Maria Cuevas, Tequixquiac, Zumpango, M\u00e9xico"},
592:{sn:"M\u00e9xico",ln:"Jaltepec, Nopaltepec, Otumba, M\u00e9xico"},593:{sn:"M\u00e9xico",ln:"Coyotepec, Huehuetoca, Teoloyucan, M\u00e9xico"},594:{sn:"M\u00e9xico",ln:"San Juan Teotihuacan, Tepexpan, Tezoyuca, Xometla, M\u00e9xico"},595:{sn:"M\u00e9xico",ln:"Cuautlalpan, La Purificacion, San Vicente Chicoloapan, Tepetlaoxtoc, Texcoco, M\u00e9xico"},596:{sn:"M\u00e9xico",ln:"Los Reyes Acozac, San Luis Tecuautitlan, Temascalapa, M\u00e9xico"},599:{sn:"M\u00e9xico",ln:"Apaxco, San Francisco Zacacalco, Santa Maria Ajoloapan, Tlapanaloya, M\u00e9xico"},
612:{sn:"Baja California Sur",ln:"La Paz, Todos Santos, Baja California Sur"},613:{sn:"Baja California Sur",ln:"Ciudad Constitucion, Loreto, Puerto Adolfo Lopez Mateos, Puerto San Carlos, Villa Insurgentes, Baja California Sur"},614:{sn:"Chihuahua",ln:"Chihuahua, General Trias, Villa Aldama, Chihuahua"},615:{sn:"Baja California Sur",ln:"Bahia de Tortugas, Guerrero Negro, Mulege, San Ignacio, Santa Rosalia, Baja California Sur"},616:{sn:"Baja California",ln:"Col. Vicente Guerrero, Isla de Cedros, San Quintin, Baja California"},
618:{sn:"Durango",ln:"Colonia Hidalgo, Durango, Durango"},621:{sn:"Chihuahua",ln:"Julimes, Las Varas, Naica, Saucillo, Chihuahua"},622:{sn:"Sonora",ln:"Guaymas, San Carlos (Nuevo Guaymas), Sonora"},623:{sn:"Sonora",ln:"Aconchi, Banamichi, Baviacora, Carbo, Huepac, Ures, Sonora"},624:{sn:"Baja California Sur",ln:"Buenavista, Cabo del Sol, Cabo San Lucas, San Jose del Cabo, Baja California Sur"},625:{sn:"Chihuahua",ln:"Ciudad Cuauhtemoc, Colonia Alvaro Obregon, Colonia Anahuac, Chihuahua"},626:{sn:"Chihuahua",
ln:"Ojinaga, Chihuahua"},627:{sn:"Chihuahua",ln:"Parral, Chihuahua"},628:{sn:"Chihuahua",ln:"Pueblito Allende, San Francisco del Oro, Santa Barbara, Valle de Allende, Villa Matamoros, Chihuahua"},629:{sn:"Chihuahua",ln:"Ceballos, Ciudad Jimenez, Villa Lopez, Chihuahua"},631:{sn:"Sonora",ln:"Nogales, Sonora"},632:{sn:"Sonora",ln:"Imuris, Magdalena, Sonora"},633:{sn:"Sonora",ln:"Agua Prieta, Esqueda, Fronteras, Naco, Sonora"},634:{sn:"Sonora",ln:"Arizpe, Cumpas, Huachinera, Huasabas, Moctezuma, Nacozari, Sahuaripa, Tepache, Villa Hidalgo, Sonora"},
635:{sn:"Chihuahua",ln:"Ciudad Guerrero, Creel, La Junta, San Juanito, Chihuahua"},636:{sn:"Chihuahua",ln:"Buenaventura, Colonia Juarez, Colonia Lebaron, Ejido Benito Juarez, Ignacio Zaragoza, Janos, La Ascencion, Nuevo Casas Grandes, Ricardo Flores Magon, Chihuahua"},637:{sn:"Sonora",ln:"Altar, Caborca, Sonora"},638:{sn:"Sonora",ln:"Puerto Pe\u00f1asco, Sonora"},639:{sn:"Chihuahua",ln:"Ciudad delicias, Lazaro Cardenas, Rosales, Chihuahua"},641:{sn:"Sonora",ln:"Benjamin Hill, Santa Ana, Sonora"},
642:{sn:"Sonora",ln:"Navojoa, Pueblo Mayo, Sonora"},643:{sn:"Sonora",ln:"Altos de Jecopaco, Buaysiacobe, Colonia Irrigacion (Villa Juarez), Ejido 31 de Octubre, Ejido Francisco Javier Mina, Potam, Pueblo Yaqui, Quetchehueca, San Ignacio Rio Muerto, San Jose de Bacum, Vicam, Sonora"},644:{sn:"Sonora",ln:"Bacum, Ciudad Obregon, Ejido Cuauhtemoc, Marte R. Gomez (El Tobarito), Sonora"},645:{sn:"Sonora",ln:"Cananea, Sonora"},646:{sn:"Baja California",ln:"Ejido Esteban Cantu, Ensenada, La Mision, Maneadero, Baja California"},
647:{sn:"Sonora",ln:"Alamos, Bacame Nuevo, Bacobampo, Etchojoa, Huatabampo, Yavaros, Sonora"},648:{sn:"Chihuahua",ln:"Boquilla, Ciudad Camargo, Chihuahua"},649:{sn:"Durango",ln:"Guachochi, Guadalupe Y Calvo, Las Nieves, San Pablo Balleza, Santa Maria del Oro, Valle de Zaragoza, Villa Ocampo, Durango"},651:{sn:"Sonora",ln:"Sonoita, Sonora"},652:{sn:"Chihuahua",ln:"Ciudad Madera, Ejido el Largo, Gomez Farias, Nicolas Bravo, Chihuahua"},653:{sn:"Sonora",ln:"Luis B. Sanchez, San Luis Rio Colorado, Sonora"},
656:{sn:"Chihuahua",ln:"Ciudad Juarez, Doctor Porfirio Parra, El Porvenir, General Rodrigo M. de Quevedo, Guadalupe Distrito de Bravos, Praxedis Guerrero, Villa Ahumada, Chihuahua"},658:{sn:"Baja California",ln:"Benito Juarez, Ciudad Morelos, Guadalupe Victoria, Hermosillo, Queretaro, Saltillo, Baja California"},659:{sn:"Chihuahua",ln:"Bachiniva, El Molino, Matachic, Oscar Soto Maynes, Temosachic, Chihuahua"},661:{sn:"Baja California",ln:"Primo Tapia, Rosarito, Baja California"},662:{sn:"Sonora",
ln:"Bahia Kino, Distrito Miguel Aleman, Hermosillo, San Pedro el Saucito, Sonora"},665:{sn:"Baja California",ln:"Tecate, Baja California"},666:{sn:"Baja California",ln:"Tijuana, Baja California"},667:{sn:"Sinaloa",ln:"Costa Rica, Culiacan, Culiacancito, El Dorado, El Salado (Culiacan), Pueblos Unidos, Quila, Villa Adolfo Lopez Mateos, Sinaloa"},668:{sn:"Sinaloa",ln:"Ahome, Alfonso G. Calderon, Campo Numero 35 (Cerillos), Chihuahuita, Emiliano Zapata (Bagojo) I, General Chavez Talamantes, Higuera de Zaragoza, Los Mochis, Poblado No 5, San Miguel Zapotitlan, Topolobampo, Villa Gustavo Diaz Ordaz, Sinaloa"},
669:{sn:"Sinaloa",ln:"El Roble, Mazatlan, Villa Union, Sinaloa"},671:{sn:"Coahuila",ln:"Cuencame de Ceniceros, Nazas, Paso Nacional, San Juan de Guadalupe, San Luis del Cordero, Viesca, Coahuila"},672:{sn:"Sinaloa",ln:"Navolato, Villa Angel Flores, Villa Juarez, Sinaloa"},673:{sn:"Sinaloa",ln:"Guamuchil, Mocorito, Villa Benito Juarez, Sinaloa"},674:{sn:"Durango",ln:"Guanacevi, Santiago Papasquiaro, Tepehuanes, Durango"},675:{sn:"Durango",ln:"El Salto, La Ciudad, Nombre de Dios, Suchil, Vicente Guerrero, Villa Union, Durango"},
676:{sn:"Durango",ln:"Guadalupe Victoria, Ignacio Allende, Pe\u00f1on Blanco, Durango"},677:{sn:"Durango",ln:"Canatlan, Francisco I. Madero, Nuevo Ideal, Rodeo, San Juan del Rio, Durango"},686:{sn:"Baja California",ln:"La Rumorosa, Mexicali, Michoacan de Ocampo, Nuevo Leon, San Felipe, Sinaloa, Baja California"},687:{sn:"Sinaloa",ln:"Adolfo Ruiz Cortinez, Bachoco Pueblo, Cerro Cabezon, Corerepe, Cubilete, El Burrion, El Huitussi, El Mezquite, Estacion Bamoa, Estacion Naranjo, Gabriel Leyva, Genaro Estrada, Guasave, Juan Jose Rios, La Trinidad, Leon Fonseca (Verdura), Nio, Sinaloa de Leyva, Tamazula, Sinaloa"},
694:{sn:"Sinaloa",ln:"Agua Caliente de Garate, Agua Verde, Concordia, El Apoderado, Rosario, Sinaloa"},695:{sn:"Sinaloa",ln:"Escuinapa, Ojo de Agua Palmilla, Teacapan, Sinaloa"},696:{sn:"Sinaloa",ln:"Cosala, Coyotitan, Dimas, La Cruz, San Ignacio, Sinaloa"},697:{sn:"Sinaloa",ln:"Angostura, Badiraguato, Caimanero, Colonia Agricola Independencia, Colonia Agricola Mexico, La Reforma, Pericos, Sinaloa"},698:{sn:"Sinaloa",ln:"Charay, Choix, El Fuerte, El Jahuara, Mochicahui (Constancia), San Blas, Sinaloa"},
711:{sn:"Michoac\u00e1n",ln:"El Oro, Tlalpujahua, Michoac\u00e1n"},712:{sn:"M\u00e9xico",ln:"Atlacomulco, Ixtlahuaca, Jiquipilco, Jocotitlan, San Felipe del Progreso, San Pedro de Los Ba\u00f1os, Santiago Yeche, M\u00e9xico"},713:{sn:"M\u00e9xico",ln:"Santiago Tianguistenco, M\u00e9xico"},714:{sn:"M\u00e9xico",ln:"Chalma, Malinalco, Tenancingo, Villa Guerrero, M\u00e9xico"},715:{sn:"Michoac\u00e1n",ln:"Angangueo, Jungapeo, Ocampo, Zitacuaro, Michoac\u00e1n"},716:{sn:"M\u00e9xico",ln:"Almoloya de Alquisiras, Amatepec, Sultepec, Temascaltepec, Texcaltitlan, M\u00e9xico"},
717:{sn:"M\u00e9xico",ln:"Atlatlahuaca, San Antonio la Isla, Tenango del Valle, M\u00e9xico"},718:{sn:"M\u00e9xico",ln:"Acambay, Aculco, San Francisco Tepeolulco, Temascalcingo, M\u00e9xico"},719:{sn:"M\u00e9xico",ln:"San Francisco Xonacatlan, Temoaya, M\u00e9xico"},721:{sn:"M\u00e9xico",ln:"Ixtapan de la Sal, M\u00e9xico"},722:{sn:"M\u00e9xico",ln:"Calimaya de Diaz, Mexicaltzingo, San Pablo Autopan, Santa Maria Nativitas, Toluca, M\u00e9xico"},723:{sn:"M\u00e9xico",ln:"Coatepec Harinas, M\u00e9xico"},
724:{sn:"M\u00e9xico",ln:"Luvianos, Tejupilco de Hidalgo, M\u00e9xico"},725:{sn:"M\u00e9xico",ln:"Almoloya de Juarez, Santa Maria del Monte, M\u00e9xico"},726:{sn:"M\u00e9xico",ln:"Amanalco de Becerra, Colorines, Valle de Bravo, Villa Victoria, M\u00e9xico"},727:{sn:"Guerrero",ln:"Atenango del Rio, Buenavista de Cuellar, Huitzuco, San Vicente Palapa, Tepecoacuilco de Trujano, Guerrero"},728:{sn:"M\u00e9xico",ln:"Lerma, Santa Maria Atarasquillo, M\u00e9xico"},729:{sn:"M\u00e9xico",ln:"Huixquilucan, Magdalena Chichicaspa, Salazar, San Francisco Chimalpa, M\u00e9xico"},
731:{sn:"Morelos",ln:"Amayuca, Tetela del Volcan, Yecapixtla, Zacualpan de Amilpas, Morelos"},732:{sn:"Guerrero",ln:"Ajuchitlan de Progreso, Arcelia, Cutzamala de Pinzon, Tlapehuala, Guerrero"},733:{sn:"Guerrero",ln:"Iguala, Guerrero"},734:{sn:"Morelos",ln:"Jojutla, Tequesquitengo, Zacatepec, Morelos"},735:{sn:"Morelos",ln:"Cuautla, Jonacatepec, Morelos"},736:{sn:"Guerrero",ln:"Apaxtla de Castrejon, Cocula, Teloloapan, Tlacotepec, Guerrero"},737:{sn:"Morelos",ln:"Miacatlan, Ticuman, Tlaltizapan, Xoxocotla, Morelos"},
738:{sn:"Hidalgo",ln:"Mixquiahuala, Tepatepec, Hidalgo"},739:{sn:"Morelos",ln:"Huitzilac, Tepoztlan, Morelos"},741:{sn:"Guerrero",ln:"Copala, Cuajinicuilapa, Marquelia, Ometepec, San Luis Acatlan, Guerrero"},742:{sn:"Guerrero",ln:"Atoyac de Alvarez, Papanoa, San Luis de la Loma, Tecpan de Galeana, Guerrero"},743:{sn:"Hidalgo",ln:"San Agustin Tlaxiaca, Villa Tezontepec, Zapotlan de Juarez, Zempoala, Hidalgo"},744:{sn:"Guerrero",ln:"Acapulco, Xaltianguis, Guerrero"},745:{sn:"Guerrero",ln:"Ayutla de Los Libres, Cruz Grande, El Ocotito, San Marcos, Tierra Colorada, Guerrero"},
746:{sn:"Puebla",ln:"Castillo de Teayo, Chicontepec, Estacion San Diego, Metlaltoyuca, Tihuatlan, Venustiano Carranza, Puebla"},747:{sn:"Guerrero",ln:"Chihualco, Chilpancingo, Mazatlan, Zumpango del Rio, Guerrero"},748:{sn:"Tlaxcala",ln:"Apam, Emiliano Zapata, Nanacamilpa, Tlaxcala"},749:{sn:"Tlaxcala",ln:"Calpulalpan, Tlaxcala"},751:{sn:"Morelos",ln:"Amacuzac, Coatlan del Rio, Puente de Ixtla, Tehuixtla, Tilzapotla, Morelos"},752:{sn:"Morelos",ln:"Atlatlahucan, Oacalco, Oaxtepec, Tlayacapan, Yautepec, Morelos"},
753:{sn:"Michoac\u00e1n",ln:"Arteaga, Ciudad Lazaro Cardenas, La Mira, Las Guacamayas, Playa Azul, Michoac\u00e1n"},754:{sn:"Guerrero",ln:"Atliaca, Mochitlan, Tixtla, Guerrero"},755:{sn:"Guerrero",ln:"Ixtapa, Zihuatanejo, Guerrero"},756:{sn:"Guerrero",ln:"Chilapa, Olinala, Guerrero"},757:{sn:"Guerrero",ln:"Huamuxtitlan, Tlapa de Comonfort, Guerrero"},758:{sn:"Guerrero",ln:"Petatlan, San Jeronimito, Guerrero"},759:{sn:"Hidalgo",ln:"Ixmiquilpan, Tasquillo, Zimapan, Hidalgo"},761:{sn:"Hidalgo",ln:"Huichapan, Jilotepec, Tecozautla, Hidalgo"},
762:{sn:"Guerrero",ln:"Taxco, Guerrero"},763:{sn:"Hidalgo",ln:"Tezontepec de Aldama, Tlahuelilpan, Hidalgo"},764:{sn:"Puebla",ln:"Necaxa, Villa Avila Camacho, Xicotepec de Juarez, Puebla"},765:{sn:"Veracruz",ln:"Alamo Temapache, Alazan Potrero del Llano, Veracruz"},766:{sn:"Veracruz",ln:"Gutierrez Zamora, Tecolutla, Veracruz"},767:{sn:"Guerrero",ln:"Ciudad Altamirano, Paso de Arena, Zirandaro, Guerrero"},768:{sn:"Veracruz",ln:"Naranjos, Tamalin, Tamiahua, Veracruz"},769:{sn:"Morelos",ln:"Axochiapan, Tenextepango, Tepalcingo, Morelos"},
771:{sn:"Hidalgo",ln:"Pachuca, Real del Monte, Hidalgo"},772:{sn:"Hidalgo",ln:"Actopan, Hidalgo"},773:{sn:"Hidalgo",ln:"Cruz Azul (San Miguel Vindho), Parque Ind. Tepeji del Rio, Tepeji del Rio, Tula, Hidalgo"},774:{sn:"Hidalgo",ln:"Atotonilco el Grande, Calnali, Huayacocotla, Molango, Tianguistengo, Tlanchinol, Zacualtipan, Hidalgo"},775:{sn:"Hidalgo",ln:"Tulancingo, Hidalgo"},776:{sn:"Puebla",ln:"Acaxochitlan, Ahuazotepec, Huauchinango, Puebla"},777:{sn:"Morelos",ln:"Cuernavaca, Santa Fe, Vigilante (Emiliano Zapata), Xochitepec, Morelos"},
778:{sn:"Hidalgo",ln:"Ajacuba, Atotonilco de Tula, Tlaxcoapan, Hidalgo"},779:{sn:"Hidalgo",ln:"Tizayuca, Hidalgo"},781:{sn:"Guerrero",ln:"Coyuca de Benitez, San Jeronimo de Juarez, Guerrero"},782:{sn:"Veracruz",ln:"Poza Rica, Veracruz"},783:{sn:"Veracruz",ln:"Tuxpan, Veracruz"},784:{sn:"Veracruz",ln:"Agua Dulce Papantla, Cazones de Herrera, Coyutla, Entabladero, Papantla, Veracruz"},785:{sn:"Veracruz",ln:"Cerro Azul, Citlaltepec, Tepetzintla, Veracruz"},786:{sn:"Michoac\u00e1n",ln:"Ciudad Hidalgo, Tuxpan, Michoac\u00e1n"},
789:{sn:"Veracruz",ln:"Huejutla de Reyes, Platon Sanchez, Tantoyuca, Tempoal, Veracruz"},791:{sn:"Hidalgo",ln:"Ciudad Sahagun, Hidalgo"},797:{sn:"Puebla",ln:"Chignahuapan, Tetela de Ocampo, Zacatlan, Puebla"},821:{sn:"Nuevo Le\u00f3n",ln:"Hualahuises, Linares, Nuevo Le\u00f3n"},823:{sn:"Nuevo Le\u00f3n",ln:"China, General Bravo, Los Herreras, Los Ramones, Nuevo Le\u00f3n"},824:{sn:"Nuevo Le\u00f3n",ln:"Sabinas Hidalgo, Nuevo Le\u00f3n"},825:{sn:"Nuevo Le\u00f3n",ln:"Cienega de Flores, Doctor Gonzalez, General Zuazua, Marin, Pesqueria, Nuevo Le\u00f3n"},
826:{sn:"Nuevo Le\u00f3n",ln:"Allende, Galeana, General Teran, Montemorelos, Nuevo Le\u00f3n"},827:{sn:"Nuevo Le\u00f3n",ln:"Santiago (El Cercado), Nuevo Le\u00f3n"},828:{sn:"Nuevo Le\u00f3n",ln:"Cadereyta, Nuevo Le\u00f3n"},829:{sn:"Nuevo Le\u00f3n",ln:"Bustamante, Hidalgo, Mina, Villa Aldama, Nuevo Le\u00f3n"},831:{sn:"Tamaulipas",ln:"Ciudad Mante, Los Aztecas, Tamaulipas"},832:{sn:"Tamaulipas",ln:"Antiguo Morelos, Jaumave, Llera de Canales, Ocampo, Tula, Xicotencatl, Tamaulipas"},833:{sn:"Tamaulipas",
ln:"Tampico, Tamaulipas"},834:{sn:"Tamaulipas",ln:"Ciudad Victoria, Tamaulipas"},835:{sn:"Tamaulipas",ln:"Abasolo, El Barretal, Estacion Santa Engracia, Hidalgo, Nuevo Padilla, Santander de Jimenez, Soto la Marina, Villagran, Tamaulipas"},836:{sn:"Tamaulipas",ln:"Estacion Cuauhtemoc, Gonzalez, Manuel, Villa Aldama, Tamaulipas"},841:{sn:"Tamaulipas",ln:"Francisco Gonzalez Villarreal, San Fernando, Tamaulipas"},842:{sn:"Coahuila",ln:"Concepcion del Oro, General Cepeda, Parras de la Fuente, Coahuila"},
844:{sn:"Coahuila",ln:"Saltillo, Coahuila"},845:{sn:"San Luis Potos\u00ed",ln:"Ebano, Ponciano Arriaga, San Luis Potos\u00ed"},846:{sn:"Veracruz",ln:"Ozuluama, Panuco, Tamos Perseverancia, Villa Cacalilao, Veracruz"},861:{sn:"Coahuila",ln:"Nueva Rosita, Sabinas, Coahuila"},862:{sn:"Coahuila",ln:"Allende, Morelos, Nava, Villa Union, Zaragoza, Coahuila"},864:{sn:"Coahuila",ln:"Las Esperanzas, Minas de Barroteran, Muzquiz, Palau, Coahuila"},866:{sn:"Coahuila",ln:"Casta\u00f1os, Monclova, Coahuila"},
867:{sn:"Tamaulipas",ln:"Colombia, Nuevo Laredo, Tamaulipas"},868:{sn:"Tamaulipas",ln:"Anahuac, Control, Empalme, Matamoros, Tamaulipas"},869:{sn:"Coahuila",ln:"Cuatro Cienegas, San Buenaventura, Coahuila"},871:{sn:"Durango",ln:"El Coyote, La Goma, La Partida, Matamoros, Torreon, Villa Juarez, Durango"},872:{sn:"Durango",ln:"Bermejillo, Concordia, Francisco I. Madero, Laguna del Rey, Mapimi, San Pedro de Las Colonias, Tlahualilo de Zaragoza, Durango"},873:{sn:"Nuevo Le\u00f3n",ln:"Candela, Ciudad Anahuac, Lampazos, Nuevo Le\u00f3n"},
877:{sn:"Coahuila",ln:"Ciudad Acu\u00f1a, Coahuila"},878:{sn:"Coahuila",ln:"Piedras Negras, Coahuila"},891:{sn:"Tamaulipas",ln:"Ciudad Camargo, Ciudad Gustavo Diaz Ordaz, Los Comales, Valadeces, Tamaulipas"},892:{sn:"Nuevo Le\u00f3n",ln:"Agualeguas, Cerralvo, General Trevi\u00f1o, Los Aldamas, Melchor Ocampo, Villa de Paras, Nuevo Le\u00f3n"},894:{sn:"Tamaulipas",ln:"Santa Apolonia, Valle Hermoso, Tamaulipas"},897:{sn:"Tamaulipas",ln:"Ciudad Mier, Ciudad Miguel Aleman, Nueva Ciudad Guerrero, Tamaulipas"},
899:{sn:"Tamaulipas",ln:"Nuevo Progreso, Reynosa, Rio Bravo, Tamaulipas"},913:{sn:"Tabasco",ln:"Frontera, Jonuta, Palizada, Vicente Guerrero, Tabasco"},914:{sn:"Tabasco",ln:"Cunduacan, Jalpa de Mendez, Nacajuca, Once de Febrero, Tabasco"},916:{sn:"Chiapas",ln:"Catazaja, Palenque, Salto del Agua, Chiapas"},917:{sn:"Chiapas",ln:"Estacion Chontalpa, Huimanguillo, Reforma, Chiapas"},918:{sn:"Chiapas",ln:"Acacoyagua, Acapetahua, Escuintla, Mapastepec, Pijijiapan, Pueblo Nuevo Comaltitlan, Chiapas"},919:{sn:"Chiapas",
ln:"Altamirano, Bochil, Chilon, Ococingo, Oxchuc, Pantelho, Petalcingo, Pueblo Nuevo Solistahuacan, Simojovel, Tapilula, Yajalon, Chiapas"},921:{sn:"Veracruz",ln:"Coatzacoalcos, Ixhuatlan del Sureste, Veracruz"},922:{sn:"Veracruz",ln:"Chinameca, Cosoleacaque, El Naranjito, Jaltipan, Minatitlan, Veracruz"},923:{sn:"Tabasco",ln:"Agua Dulce, Campo Cuichapa, La Venta, Las Choapas, Pueblo Sanchez Magallanes, Tabasco"},924:{sn:"Veracruz",ln:"Acayucan, Jesus Carranza, Juanita, San Juan Evengelista, Sayula de Aleman, Texistepec, Veracruz"},
932:{sn:"Tabasco",ln:"Jalapa, Juarez, Pichucalco, Tacotalpa, Teapa, Tabasco"},933:{sn:"Tabasco",ln:"Comalcalco, Paraiso, Tecolutilla, Tabasco"},934:{sn:"Tabasco",ln:"Balancan, El Triunfo, Emiliano Zapata, Tenosique, Tabasco"},936:{sn:"Tabasco",ln:"Ciudad Pemex, Macuspana, Villa Benito Juarez, Tabasco"},937:{sn:"Tabasco",ln:"Cardenas, Tabasco"},938:{sn:"Campeche",ln:"Ciudad del Carmen, Campeche"},951:{sn:"Oaxaca",ln:"Ejutla, Etla, Ixtlan de Juarez, Miahuatlan, Mitla, Nochistlan, Oaxaca, Ocotlan de Morelos, San Agustin Etla, San Dionisio Ocotepec, San Jeronimo Tlacochahuaya, San Pablo Huitzo, Santa Cruz Papalutla, Santa Maria Ayoquesco de Aldama, Soledad Etla, Tamazulapan, Teotitlan del Valle, Tlacolula, Zaachila, Zimatlan de Alvarez, Oaxaca"},
953:{sn:"Oaxaca",ln:"Acatlan de Osorio, Huajuapan de Leon, Putla de Guerrero, Santiago Juxtlahuaca, Santo Domingo Tonala, Silacayoapan, Tlaxiaco, Oaxaca"},954:{sn:"Oaxaca",ln:"Pinotepa de Don Luis I, Pinotepa Nacional, Puerto Escondido, Rio Grande, San Juan Cacahuatepec, San Pedro Tututepec, Santa Catarina Juquila, Santiago Jamiltepec, Oaxaca"},958:{sn:"Oaxaca",ln:"Bahia de Huatulco, Bahia de Tangolunda, San Pedro Pochutla, Santa Maria Huatulco, Oaxaca"},961:{sn:"Chiapas",ln:"Berriozabal, San Fernando, Suchiapa, Tuxtla Gutierrez, Veinte de Noviembre, Villa de Acala, Chiapas"},
962:{sn:"Chiapas",ln:"Cacahoatan, Ciudad Hidalgo, Motozintla, Puerto Madero, Tapachula, Tuxtla Chico, Union Juarez, Chiapas"},963:{sn:"Chiapas",ln:"Chicomuselo, Comitan, Frontera Comalapa, La Trinitaria, Las Margaritas, Chiapas"},964:{sn:"Chiapas",ln:"Huehuetan, Huixtla, Mazatan, Chiapas"},965:{sn:"Chiapas",ln:"Cristobal Obregon, El Parral, Jesus Maria Garza, Revolucion Mexicana, San Pedro Buenavista, Villa Corzo, Villa Flores, Chiapas"},966:{sn:"Chiapas",ln:"Arriaga, Tonala, Chiapas"},967:{sn:"Chiapas",
ln:"San Cristobal de Las Casas, Chiapas"},968:{sn:"Chiapas",ln:"Cintalapa, Copainala, Jiquipilas, Ocozocuautla, Raudales de Malpaso, Tecpatan, Chiapas"},969:{sn:"Yucat\u00e1n",ln:"Flamboyanes, Yucalpeten, Yucat\u00e1n"},971:{sn:"Oaxaca",ln:"Espinal, Ixtepec, Juchitan, Salina Cruz, Tehuantepec, Union Hidalgo, Oaxaca"},972:{sn:"Oaxaca",ln:"Barrio de la Soledad, Lagunas, Matias Romero, Oaxaca"},981:{sn:"Campeche",ln:"Campeche, Campeche"},982:{sn:"Campeche",ln:"Candelaria, Champoton, Escarcega, Sabancuy, Seyba Playa, Campeche"},
983:{sn:"Quintana Roo",ln:"Bacalar, Chetumal, Felipe Carrillo Puerto, Quintana Roo"},984:{sn:"Quintana Roo",ln:"Chemuyil, Holbox, Kantunilkin, Playa del Carmen, Puerto Aventuras, Tulum, Xcaret, Quintana Roo"},985:{sn:"Yucat\u00e1n",ln:"Chemax, Piste, Valladolid, Yucat\u00e1n"},986:{sn:"Yucat\u00e1n",ln:"Colonia Yucatan, Espita, Panaba, Tizimin, Yucat\u00e1n"},987:{sn:"Quintana Roo",ln:"Cozumel, Quintana Roo"},988:{sn:"Yucat\u00e1n",ln:"Acanceh, Celestun, Chochola, Hoctun, Hunucma, Izamal, Seye, Sotuta, Tecoh, Uman, Yucat\u00e1n"},
991:{sn:"Yucat\u00e1n",ln:"Baca, Buctzotz, Cacalchen, Cansahcab, Dzidzantum, Dzilam Gonzalez, Motul, Telchac Puerto, Temax, Tixcocob, Yucat\u00e1n"},992:{sn:"Chiapas",ln:"Jaltenango de la Paz, Nueva Concordia, Soyatitan, Teopisca, Venustiano Carranza, Villa Las Rosas, Chiapas"},993:{sn:"Tabasco",ln:"Macultepec, Playas del Rosario, Tamulte de la Sabana, Villahermosa, Tabasco"},994:{sn:"Chiapas",ln:"Chahuites, Paredon, San Francisco Ixhuatan, San Pedro Tapanatepec, Santiago Niltepec, Santo Domingo Ingenio, Santo Domingo Zanatepec, Tres Picos, Chiapas"},
995:{sn:"Oaxaca",ln:"Magdalena Tequisistlan, Santa Maria Jalapa del Marquez, Oaxaca"},996:{sn:"Campeche",ln:"Becal, Calkini, Dzitbalche, Hecelchacan, Hopelchen, Pomuch, Tenabo, Campeche"},997:{sn:"Yucat\u00e1n",ln:"Akil, Dziuche, Halacho, Jose Maria Morelos, Maxcanu, Muna, Oxkutzcab, Peto, Tekax, Tekit, Ticul, Tzucacab, Yucat\u00e1n"},998:{sn:"Quintana Roo",ln:"Cancun, Isla Mujeres, Puerto Morelos, Quintana Roo"},999:{sn:"Yucat\u00e1n",ln:"Conkal, Merida, Yucat\u00e1n"}};
ilib.data.area_IT={2:{sn:"Milan",ln:"Milan, Rho, Saronno"},6:{sn:"Rome",ln:"Rome, Vatican City"},10:{sn:"Genoa",ln:"Genoa, Moncalieri"},11:{sn:"Turin",ln:"Turin"},15:{sn:"Biella",ln:"Biella"},19:{sn:"Savona",ln:"Savona"},30:{sn:"Brescia",ln:"Brescia"},31:{sn:"Como",ln:"Como"},35:{sn:"Bergamo",ln:"Bergamo"},39:{sn:"Monza",ln:"Monza"},40:{sn:"Trieste",ln:"Trieste"},41:{sn:"Venice",ln:"Venice"},45:{sn:"Verona",ln:"Verona"},49:{sn:"Padua",ln:"Padua"},50:{sn:"Pisa",ln:"Pisa"},51:{sn:"Bologna",ln:"Bologna"},
55:{sn:"Florence",ln:"Florence, Sesto Fiorentino"},59:{sn:"M\u00f3dena ",ln:"M\u00f3dena, Carpi"},70:{sn:"Cagliari",ln:"Cagliari"},71:{sn:"Ancona",ln:"Ancona"},75:{sn:"Perugia",ln:"Perugia"},79:{sn:"Sassari",ln:"Sassari"},80:{sn:"Bari",ln:"Bari, Altamura, Bisceglie, Bitonto, Corato, Molfetta"},81:{sn:"Naples ",ln:"Naples, Capri, Aversa, Castellamare Di Stabia, Nocera Inferiore, Pompei, Pozzuoli, Sorrento, Torre Annunziata, Torre Dei Greco"},85:{sn:"Pescara",ln:"Pescara"},89:{sn:"Salerno",ln:"Salerno, Cava Dei Tirreni"},
90:{sn:"Messina",ln:"Messina, Barcellona Pozzo Digotto"},91:{sn:"Palermo",ln:"Palermo"},95:{sn:"Catania",ln:"Catania, Acireale, Adrano, Lentini, Paterno"},99:{sn:"Taranto",ln:"Taranto"},121:{sn:"Pinerolo",ln:"Pinerolo"},122:{sn:"Susa",ln:"Susa"},123:{sn:"Lanzo Torinese",ln:"Lanzo Torinese"},124:{sn:"Rivarolo Canavese",ln:"Rivarolo Canavese"},125:{sn:"Ivrea",ln:"Ivrea"},131:{sn:"Alessandria",ln:"Alessandria"},141:{sn:"Asti",ln:"Asti"},142:{sn:"Casale Monferrato",ln:"Casale Monferrato"},143:{sn:"Novi Ligure",
ln:"Novi Ligure"},144:{sn:"Acqui Terme",ln:"Acqui Terme"},161:{sn:"Vercelli",ln:"Vercelli"},163:{sn:"Borgosesia",ln:"Borgosesia"},165:{sn:"Aosta",ln:"Aosta"},166:{sn:"Saint Vincent ",ln:"Saint Vincent"},171:{sn:"Cuneo",ln:"Cuneo"},172:{sn:"Savigliano",ln:"Savigliano"},173:{sn:"Alba",ln:"Alba"},174:{sn:"Mondov\u00ec",ln:"Mondov\u00ec"},175:{sn:"Saluzzo",ln:"Saluzzo"},182:{sn:"Albenga",ln:"Albenga"},183:{sn:"Imperia",ln:"Imperia"},184:{sn:"San Remo",ln:"San Remo"},185:{sn:"Rapallo",ln:"Rapallo & Portofino"},
187:{sn:"La Spezia",ln:"La Spezia"},321:{sn:"Novara",ln:"Novara"},322:{sn:"Arona",ln:"Arona"},323:{sn:"Baveno",ln:"Baveno"},324:{sn:"Domodossola",ln:"Domodossola"},331:{sn:"Busto Arsizio",ln:"Busto Arsizio"},332:{sn:"Varese",ln:"Varese"},341:{sn:"Lecco",ln:"Lecco"},342:{sn:"Sondrio",ln:"Sondrio"},343:{sn:"Chiavenna",ln:"Chiavenna"},344:{sn:"Menaggio",ln:"Menaggio"},345:{sn:"S. Pellegrino Terme",ln:"San Pellegrino Terme"},346:{sn:"Clusone",ln:"Clusone"},362:{sn:"Seregno",ln:"Seregno"},363:{sn:"Treviglio",
ln:"Treviglio"},364:{sn:"Breno",ln:"Breno"},365:{sn:"Sal\u00f2",ln:"Sal\u00f2"},371:{sn:"Lodi",ln:"Lodi"},372:{sn:"Cremona",ln:"Cremona"},373:{sn:"Crema",ln:"Crema"},374:{sn:"Soresina",ln:"Soresina"},375:{sn:"Casalmaggiore",ln:"Casalmaggiore"},376:{sn:"Mantova",ln:"Mantova"},377:{sn:"Codogno",ln:"Codogno"},381:{sn:"Vigevano",ln:"Vigevano"},382:{sn:"Pavia",ln:"Pavia"},383:{sn:"Voghera",ln:"Voghera"},384:{sn:"Mortara",ln:"Mortara"},385:{sn:"Stradella",ln:"Stradella"},386:{sn:"Ostiglia",ln:"Ostiglia"},
421:{sn:"S. Don\u00e0 di Piave",ln:"San Don\u00e0 di Piave"},422:{sn:"Treviso",ln:"Treviso"},423:{sn:"Montebelluna",ln:"Montebelluna"},424:{sn:"Bassano Del Grappa",ln:"Bassano Del Grappa"},425:{sn:"Rovigo",ln:"Rovigo"},426:{sn:"Adria",ln:"Adria"},427:{sn:"Spilimbergo",ln:"Spilimbergo"},428:{sn:"Tarvisio",ln:"Tarvisio"},429:{sn:"Este",ln:"Este"},431:{sn:"Cervinagno Del Friuli",ln:"Cervinagno Del Friuli"},432:{sn:"Udine",ln:"Udine"},433:{sn:"Tolmezzo",ln:"Tolmezzo"},434:{sn:"Pordenone",ln:"Pordenone"},
435:{sn:"Pieve di Cadore",ln:"Pieve di Cadore"},436:{sn:"Cortina d'Ampezzo",ln:"Cortina d'Ampezzo"},437:{sn:"Belluno",ln:"Belluno"},438:{sn:"Conegliano",ln:"Conegliano"},439:{sn:"Feltre",ln:"Feltre"},442:{sn:"Legnano",ln:"Legnano"},444:{sn:"Vicenza",ln:"Vicenza"},445:{sn:"Schio",ln:"Schio"},461:{sn:"Trento",ln:"Trento"},462:{sn:"Cavalese",ln:"Cavalese"},463:{sn:"Cles",ln:"Cles"},464:{sn:"Rovereto",ln:"Rovereto"},465:{sn:"Madonna de Campiglio",ln:"Madonna de Campiglio, Tione Di Trento"},471:{sn:"Bolzano",
ln:"Bolzano"},472:{sn:"Bressanone",ln:"Bressanone"},473:{sn:"Merano",ln:"Merano"},474:{sn:"Brunico",ln:"Brunico"},481:{sn:"Gorizia",ln:"Gorizia"},521:{sn:"Parma",ln:"Parma"},522:{sn:"Reggio Emilia",ln:"Reggio Emilia"},523:{sn:"Piacenza",ln:"Piacenza"},524:{sn:"Fidenza",ln:"Fidenza"},525:{sn:"Fornovo Di Taro",ln:"Fornovo Di Taro"},532:{sn:"Ferrara",ln:"Ferrara"},533:{sn:"Comacchio",ln:"Comacchio"},534:{sn:"Porretta Terme",ln:"Porretta Terme"},535:{sn:"Mirandola",ln:"Mirandola"},536:{sn:"Pavullo Nel Frignano",
ln:"Pavullo Nel Frignano, Sassuolo"},541:{sn:"R\u00edmini ",ln:"R\u00edmini"},542:{sn:"Imola",ln:"Imola"},543:{sn:"Forl\u00ec",ln:"Forl\u00ec"},544:{sn:"Ravenna",ln:"Ravenna"},545:{sn:"Lugo",ln:"Lugo, Lungro"},546:{sn:"Faenza",ln:"Faenza"},547:{sn:"Cesena",ln:"Cesena"},549:{sn:"S. Marino",ln:"San Marino"},564:{sn:"Grosseto",ln:"Grosseto"},565:{sn:"Piombino",ln:"Piombino"},566:{sn:"Follonica",ln:"Follonica"},571:{sn:"Empoli",ln:"Empoli"},572:{sn:"Montecatini Terme",ln:"Montecatini Terme"},573:{sn:"Pistoia",
ln:"Pistoia"},574:{sn:"Prato",ln:"Prato"},575:{sn:"Arezzo",ln:"Arezzo"},577:{sn:"Siena",ln:"Siena"},578:{sn:"Chianciano Terme",ln:"Chianciano Terme"},583:{sn:"Lucca",ln:"Lucca"},584:{sn:"Viareggio",ln:"Viareggio"},585:{sn:"Carrara",ln:"Carrara, Massa"},586:{sn:"Livorno",ln:"Livorno"},587:{sn:"Pontedera",ln:"Pontedera"},588:{sn:"Volterra",ln:"Volterra"},721:{sn:"Pesaro",ln:"Pesaro"},722:{sn:"Urbino",ln:"Urbino"},731:{sn:"Jesi",ln:"Jesi"},732:{sn:"Fabriano",ln:"Fabriano"},733:{sn:"Macerata",ln:"Macerata"},
734:{sn:"Fermo",ln:"Fermo"},735:{sn:"S. Benedetto Del Tronto",ln:"San Benedetto Del Tronto"},736:{sn:"Ascoli Piceno",ln:"Ascoli Piceno"},737:{sn:"Camerino",ln:"Camerino"},742:{sn:"Foligno",ln:"Foligno"},743:{sn:"Spoleto",ln:"Spoleto"},744:{sn:"Terni",ln:"Terni"},746:{sn:"Rieti",ln:"Rieti"},761:{sn:"Viterbo",ln:"Viterbo"},763:{sn:"Orvieto",ln:"Orvieto"},765:{sn:"Poggio Mirteto",ln:"Poggio Mirteto, Poggio San Lorenzo"},766:{sn:"Civitavecchia",ln:"Civitavecchia"},771:{sn:"Formia",ln:"Formia"},773:{sn:"Latina",
ln:"Latina"},774:{sn:"T\u00edvoli ",ln:"T\u00edvoli"},775:{sn:"Frosinone",ln:"Frosinone"},776:{sn:"Cassino",ln:"Cassino"},781:{sn:"Iglesias",ln:"Iglesias"},782:{sn:"Lanusei",ln:"Lanusei"},783:{sn:"Oristano",ln:"Oristano"},784:{sn:"Nuoro",ln:"Nuoro"},785:{sn:"Macomer",ln:"Macomer"},789:{sn:"Olbia",ln:"Olbia"},823:{sn:"Caserta",ln:"Caserta"},824:{sn:"Benevento",ln:"Benevento"},825:{sn:"Avellino",ln:"Avellino"},827:{sn:"S. Angelo Del Lombardi",ln:"Sant'Angelo Del Lombardi"},828:{sn:"Battipaglia",ln:"Battipaglia"},
831:{sn:"Brindisi",ln:"Brindisi"},832:{sn:"Lecce",ln:"Lecce"},833:{sn:"Gallipoli",ln:"Gallipoli"},835:{sn:"Matera",ln:"Matera"},836:{sn:"Maglie",ln:"Maglie"},861:{sn:"Teramo",ln:"Teramo"},862:{sn:"L'Aquila ",ln:"L'Aquila"},863:{sn:"Avezzano",ln:"Avezzano"},864:{sn:"Sulmona",ln:"Sulmona"},865:{sn:"Isernia",ln:"Isernia"},871:{sn:"Chieti",ln:"Chieti"},872:{sn:"Lanciano",ln:"Lanciano"},873:{sn:"Vasto",ln:"Vasto"},874:{sn:"Campobasso",ln:"Campobasso, Ilsi"},875:{sn:"Termoli",ln:"Termoli"},881:{sn:"Foggia",
ln:"Foggia"},882:{sn:"S. Severo",ln:"San Severo"},883:{sn:"Andria",ln:"Andria, Barletta, Trani"},884:{sn:"Manfredonia",ln:"Manfredonia"},885:{sn:"Cerignola",ln:"Cerignola"},921:{sn:"Cefal\u00f9",ln:"Cefal\u00f9"},922:{sn:"Agrigento",ln:"Agrigento, Licata"},923:{sn:"Trapani",ln:"Trapani, Marsala, Mazara Del Vallo, Pantelleria"},924:{sn:"Alcamo",ln:"Alcamo"},925:{sn:"Sciacca",ln:"Sciacca"},931:{sn:"Siracusa",ln:"Siracusa, Augusta"},932:{sn:"Vittoria",ln:"Vittoria, Ragusa"},933:{sn:"Caltagirone",ln:"Caltagirone, Gela"},
934:{sn:"Caltanissetta",ln:"Caltanissetta"},935:{sn:"Enna",ln:"Enna"},941:{sn:"Patti",ln:"Patti"},942:{sn:"Taormina",ln:"Taormina"},958:{sn:"Lamezia Terme",ln:"Lamezia Terme"},961:{sn:"Catanzaro",ln:"Catanzaro"},962:{sn:"Crotone",ln:"Crotone"},963:{sn:"Vibo Valentia",ln:"Vibo Valentia"},964:{sn:"Locri",ln:"Locri"},965:{sn:"Reggio Calabria",ln:"Reggio Calabria"},966:{sn:"Palmi",ln:"Palmi"},967:{sn:"Soverato",ln:"Soverato"},968:{sn:"Lamezia Terme",ln:"Lamezia Terme"},971:{sn:"Potenza",ln:"Potenza"},
972:{sn:"Melfi",ln:"Melfi"},973:{sn:"Lagonegro",ln:"Lagonegro"},974:{sn:"Vallo Della Lucania ",ln:"Vallo Della Lucania"},975:{sn:"Sala Consilina",ln:"Sala Consilina"},976:{sn:"Muro Lucano",ln:"Muro Lucano"},981:{sn:"Castrovillari",ln:"Castrovillari"},982:{sn:"Paola",ln:"Paola"},983:{sn:"Rossano",ln:"Rossano"},984:{sn:"Cosenza",ln:"Cosenza"},985:{sn:"Scalea",ln:"Scalea"}};
ilib.data.area_JP={3:{sn:"Tokyo",ln:"Tokyo"},4:{sn:"Tokorozawa and Kashiwa and Kamogawa"},6:{sn:"Osaka"},11:{sn:"Sappro"},15:{sn:"Teshikaga and Tokachiikeda"},17:{sn:"Aomori"},18:{sn:"Akita"},19:{sn:"Morioka"},22:{sn:"Sendai"},23:{sn:"Yamagata"},24:{sn:"Fukushima and Koriyama"},25:{sn:"Niigata and joetsu and Itoigawa and Yasuzuka and Tokamachi and Muikamachi and Koide"},26:{sn:"Nagano"},27:{sn:"Maebashi and Takasaki"},28:{sn:"Utsunomiya"},29:{sn:"Mito and Tsuchiura"},42:{sn:"Kokubunji and Musashinomitaka and Tachikawa and Hachioji and Sagamihara and Hanno"},
43:{sn:"Chiba"},44:{sn:"Kawasaki"},45:{sn:"Yokohama"},46:{sn:"Atsugi and Yokosuka"},47:{sn:"Ichikawa and Funabashi"},48:{sn:"Urawa and Kawaguchi and Kumagaya and Soka"},49:{sn:"Kawagoe"},52:{sn:"Nagoya"},53:{sn:"Hamamatsu"},54:{sn:"Shizuoka"},55:{sn:"Kofu and Numazu"},56:{sn:"Seto"},58:{sn:"Gifu"},59:{sn:"Tsu and Yokkaichi"},72:{sn:"Neyagawa and Sakai and Kishiwadakaizuka and Ibaraki and Ikeda and Yao"},73:{sn:"Wakayama"},75:{sn:"Kyoto"},76:{sn:"Kanazawa and Toyama"},77:{sn:"Otsu"},78:{sn:"Kobe"},
79:{sn:"Himeji and Kakogawa and Mita and Yoka"},82:{sn:"Hiroshima and Higashihiroshima"},83:{sn:"Shimonoseki and Yamaguchi"},84:{sn:"Onomichi and Fukuyama"},86:{sn:"Akaiwa and Kurashiki and Okayama"},87:{sn:"Takamatsu"},88:{sn:"Tokushima and Kochi"},89:{sn:"Matsuyama"},92:{sn:"Maebaru and Fukuoka"},93:{sn:"Kitakyushu"},95:{sn:"Nagasaki"},96:{sn:"Kumamoto"},97:{sn:"Oita"},98:{sn:"Naha"},99:{sn:"Kagoshima and Shibushi"},123:{sn:"Chitose, and Yubari and Kuriyama"},124:{sn:"Ashibetsu"},125:{sn:"Takigawa"},
126:{sn:"Iwamizawa"},133:{sn:"Ishikari and Tobetsu"},134:{sn:"Otaru"},135:{sn:"Yoichi and Iwanai"},136:{sn:"Kutchan and Suttsu"},137:{sn:"Yakumo and Imakane"},138:{sn:"Hakodate"},139:{sn:"Matsumae and Esashi"},142:{sn:"Date"},143:{sn:"Muroran"},144:{sn:"Tomakomai"},145:{sn:"Hayakita and Mukawa"},146:{sn:"Urakawa and Shizunai"},152:{sn:"Abashiri and Shari and Bihoro"},153:{sn:"Akkeshi and Nemuro and Nakashibetsu and Nemuroshibetsu"},154:{sn:"Kushiro"},155:{sn:"Obihiro"},156:{sn:"Honbetsu and Tokachishimizu"},
157:{sn:"Kitami"},158:{sn:"Monbetsu and Engaru and Okoppe"},162:{sn:"Wakkanai"},163:{sn:"Kitamiesashi and Rishirirebun"},164:{sn:"Rumoi and Ishikarifukagawa and Haboro"},165:{sn:"Shibetsu"},166:{sn:"Asahikawa"},167:{sn:"Furano"},172:{sn:"Hirosaki"},173:{sn:"Goshogawara and Ajigasawa"},174:{sn:"Kanita"},175:{sn:"Mutsu and Noheji"},176:{sn:"Towada"},178:{sn:"Hachinohe"},179:{sn:"Sannohe"},182:{sn:"Yokote"},183:{sn:"Yuzawa"},184:{sn:"Honjo"},185:{sn:"Oga and Noshiro"},186:{sn:"Kazuno and Odate and Takanosu"},
187:{sn:"Omagari and Kakunodate"},188:{sn:"Akita",ln:"Akita, Kawabe District, Minamiakita District, Senboku District, Akita"},191:{sn:"Ichinoseki"},192:{sn:"Ofunato"},193:{sn:"Miyako and Kamaishi"},194:{sn:"Kuji and Iwaizumi"},195:{sn:"Iwate and Ninohe"},197:{sn:"Mizusawa and Kitakami"},198:{sn:"Hanamaki and Tono"},220:{sn:"Hasama"},223:{sn:"Iwanuma"},224:{sn:"Ogawara and Shiroishi"},225:{sn:"Ishinomaki"},226:{sn:"Kesennuma"},228:{sn:"Tsukidate"},229:{sn:"Furukawa"},233:{sn:"Shinjo"},234:{sn:"Sakata"},
235:{sn:"Tsuruoka"},236:{sn:"Yamagata",ln:"Higashimurayama District, Yamagata"},237:{sn:"Sagae and Murayama"},238:{sn:"Yonezawa and Nagai"},240:{sn:"Iwakitomioka"},241:{sn:"Kitakata and Tajima and Aizuyamaguchi and Yanaizu"},242:{sn:"Aizuwakamatsu"},243:{sn:"Nihonmatsu"},244:{sn:"Haramachi"},246:{sn:"Iwaki"},247:{sn:"Ishikawa and Miharu"},248:{sn:"Sukagawa and Shirakawa"},250:{sn:"Niitsu"},254:{sn:"Shibata and Murakami and Tsugawa"},255:{sn:"Arai"},256:{sn:"Maki and Sanjo"},257:{sn:"Kashiwazaki"},
258:{sn:"Nagaoka"},259:{sn:"Sado"},260:{sn:"Anancho"},261:{sn:"Omachi"},263:{sn:"Matsumoto"},264:{sn:"Kisofukushima"},265:{sn:"Ina and Iida"},266:{sn:"Suwa"},267:{sn:"Komoro and Saku"},268:{sn:"Ueda"},269:{sn:"Nakano and Iiyama"},270:{sn:"Isesaki"},273:{sn:"Gunma",ln:"Usui District, Gunma"},274:{sn:"Tomioka and Fujioka"},276:{sn:"Ota"},277:{sn:"Kiryu"},278:{sn:"Numata"},279:{sn:"Shibukawa and Naganohara"},280:{sn:"Furukawa"},282:{sn:"Tochigi"},283:{sn:"Sano"},284:{sn:"Ashikaga"},285:{sn:"Mooka and Oyama"},
287:{sn:"Kuroiso and Otawara and Karasuyana"},288:{sn:"Imaichi"},289:{sn:"Kanuma"},291:{sn:"Hokota"},292:{sn:"Ibaraki",ln:"Naka District, Ibaraki"},293:{sn:"Takahagi"},294:{sn:"Hitachiota"},295:{sn:"Hitachiomiya and Daigo"},296:{sn:"Kasama and Shimodate"},297:{sn:"Ryugasaki and Mitsukaido"},298:{sn:"Ibaraki",ln:"Inashiki District, Niihari District, Tsuchiura, Tsukuba, Ushiku, Ibaraki"},299:{sn:"Ishioka and Itako"},422:{sn:"Musashinomitaka"},423:{sn:"Tokyo",ln:"Fuchu, Higashimurayama, Inagi, Kodaira, Koganei, Kokubunji, Tama, Tokyo"},
424:{sn:"Tokyo",ln:"Ch\u014dfu, Fuchu, Higashikurume, Hoya, Kiyose, Kodaira, Konoe, Niiza, Saitama, Tanashi, Tokyo"},426:{sn:"Tokyo",ln:"Hachi\u014dji, Tsukui District, Kanagawa, Tokyo"},427:{sn:"Yamanashi",ln:"Kawasaki, Machida, Tokyo, Minamitsuru District, Sagamihara, Tsukui District, Yokohama, Zama, Kanagawa, Yamanashi"},428:{sn:"Ome"},429:{sn:"Saitama",ln:"Hann\u014d, Hidaka, Iruma District, Iruma, Sayama, Tokorozawa, Saitama"},434:{sn:"Chiba"},436:{sn:"Ichikawa"},438:{sn:"Kisarazu"},439:{sn:"Kisarazu"},
460:{sn:"Odawara"},463:{sn:"Hiratsuka"},465:{sn:"Odawara"},466:{sn:"Fujisawa"},467:{sn:"Fujisawa"},468:{sn:"Kanagawa",ln:"Miura District, Miura, Yokosuka, Zushi, Kanagawa"},470:{sn:"Tateyama and Ohara"},474:{sn:"Chiba",ln:"Chiba, Funabashi, Inba District, Kamagaya, Narashino, Yachiyo, Chiba"},475:{sn:"Togane and Mobara"},476:{sn:"Narita"},478:{sn:"Sawara"},479:{sn:"Choshi and Youkaichiba"},480:{sn:"Kuki"},485:{sn:"Saitama",ln:"Fukaya, Gy\u014dda, Hany\u016b, Kitaadachi District, Kitamoto, Kitasaitama District, Konosu, Kumagaya, Nitta District, Gunma, \u014csato District, Saitama"},
489:{sn:"Saitama",ln:"Kitakatsushika District, Koshigaya, Misato, S\u014dka, Yashio, Yoshikawa, Saitama"},492:{sn:"Saitama",ln:"Fujimi, Hiki District, Iruma District, Kamifukuoka, Kawagoe, Sakado, Tsurugashima, Saitama"},493:{sn:"Higashimatsuyama"},494:{sn:"Chichibu"},495:{sn:"Honjo"},531:{sn:"Tahara"},532:{sn:"Toyohashi"},533:{sn:"Toyohashi"},536:{sn:"Shinshiro and Shitara"},537:{sn:"Kakegawa"},538:{sn:"Iwata"},539:{sn:"Tenryu"},543:{sn:"Shizuoka",ln:"Ihara District, Shimizu, Shizuoka"},544:{sn:"Fujinomiya"},
545:{sn:"Fuji"},547:{sn:"Shimada"},548:{sn:"Haibara"},550:{sn:"Gotenba"},551:{sn:"Nirasaki"},552:{sn:"Yamanashi",ln:"Higashiyatsushiro District, K\u014dfu, Nakakoma District, Nishiyatsushiro District, Yamanashi"},553:{sn:"Yamanashi"},554:{sn:"Otsuki"},555:{sn:"Yoshida"},556:{sn:"Kajikazawaaoyagi and Minobu"},557:{sn:"Ito"},558:{sn:"Syuzenjiohito and Shimoda"},559:{sn:"Shizuoka",ln:"Mishima, Numazu, Sunto District, Susono, Tagata District, Shizuoka"},561:{sn:"Aichi",ln:"Aichi District, Owariasahi, Seto, Aichi"},
562:{sn:"Owariyokosuka"},563:{sn:"Nishio"},564:{sn:"Okazaki"},565:{sn:"Toyota"},566:{sn:"Kariya"},567:{sn:"Tsushima"},568:{sn:"Kasugai"},569:{sn:"Handa"},572:{sn:"Tajimi"},573:{sn:"Ena and Nakatsugawa"},574:{sn:"Minokamo and Minoshirakawa"},575:{sn:"Seki and Gujoyahata"},576:{sn:"Gero"},577:{sn:"Takayama"},578:{sn:"Kamioka"},581:{sn:"Takatomi"},583:{sn:"Gifu",ln:"Kakamigahara, Gifu"},584:{sn:"Ogaki"},585:{sn:"Ibigawa"},586:{sn:"Ichinomiya"},587:{sn:"Ichinomiya"},593:{sn:"Mie",ln:"Mie District, Suzuka, Yokkaichi, Mie"},
594:{sn:"Kuwana"},595:{sn:"Ueno and Kameyama"},596:{sn:"Ise"},597:{sn:"Owase and Kumano"},598:{sn:"Mie",ln:"Ichishi District, Matsusaka, Mie"},599:{sn:"Ago"},721:{sn:"Tondabayashi"},722:{sn:"Osaka",ln:"Sakai, Takaishi, Osaka"},723:{sn:"Osaka",ln:"Matsubara, Minamikawachi District, Osaka, \u014csakasayama, Tondabayashi, Osaka"},724:{sn:"Osaka",ln:"Senboku District, Osaka"},725:{sn:"Izumi"},726:{sn:"Osaka",ln:"Ibaraki, Kyoto, Settsu, Takatsuki, Osaka"},727:{sn:"Osaka",ln:"Ikeda, Itami, Kawabe District, Kawanishi, Hy\u014dgo, Minoh, Takarazuka, Hy\u014dgo, Toyonaka, Toyono District, Osaka"},
729:{sn:"Osaka",ln:"Fujiidera, Habikino, Higashi\u014dsaka District, Kashiwara, Yao, Osaka"},734:{sn:"Wakayama",ln:"Kainan, Kaiso District, Wakayama"},735:{sn:"Shingu and Kushimoto"},736:{sn:"Iwade and Wakayamahashimoto"},737:{sn:"Yuasa"},738:{sn:"Gobo"},739:{sn:"Tanabe"},740:{sn:"Imazu"},742:{sn:"Nara"},743:{sn:"Nara"},744:{sn:"Yamatotakada"},745:{sn:"Yamatotakada and Yamatohaibara"},746:{sn:"Yoshino and Totsukawa"},747:{sn:"Gojo and Shimoichi"},748:{sn:"Yokaichi and Minakuchi"},749:{sn:"Hikone and Nagahama"},
761:{sn:"Kaga"},763:{sn:"Fukuno"},764:{sn:"Toyama",ln:"Kaminiikawa District, Nakaniikawa District, Namerikawa, Nei District, Toyama, Toyama"},765:{sn:"Uozu"},766:{sn:"Takaoka"},767:{sn:"Nanao and Hakui"},768:{sn:"Wajima and Noto"},770:{sn:"Tsuruga and Obama"},771:{sn:"Kameoka and Sonobe"},772:{sn:"Miyazu and Mineyama"},773:{sn:"Fukuchiyama and Maizuru"},774:{sn:"Uji"},775:{sn:"Kyoto"},776:{sn:"Fukui"},778:{sn:"Takefu"},779:{sn:"Ono"},790:{sn:"Harimayamasaki and Fukusaki"},791:{sn:"Tatsuno and Aioi"},
792:{sn:"Hy\u014dgo",ln:"Himeji, Ibo District, Kanzaki District, Hy\u014dgo"},794:{sn:"Miki"},795:{sn:"Nishiwaki and Tanbakaibara"},796:{sn:"Toyooka and Hamasaka"},797:{sn:"Nishinomiya"},798:{sn:"Nishinomiya"},799:{sn:"Sumoto and Tsuna"},820:{sn:"Yanai and Kuka"},823:{sn:"Kure"},824:{sn:"Miyoshi and Shobara"},826:{sn:"Chiyoda and Akiyoshida and Kake"},827:{sn:"Iwakuni"},829:{sn:"Hatsukaichi"},832:{sn:"Yamaguchi",ln:"Shimonoseki, Toyora District, Yamaguchi"},833:{sn:"Kudamatsu"},834:{sn:"Tokuyama"},
835:{sn:"Hofu"},836:{sn:"Ube"},837:{sn:"Nagato and Mine"},838:{sn:"Hagi"},839:{sn:"Yamaguchi",ln:"Yamaguchi, Yoshiki District, Yamaguchi"},845:{sn:"Innoshima"},846:{sn:"Takehara and Kinoe"},847:{sn:"Fuchu and Kozan and Tojo"},848:{sn:"Onomichi"},849:{sn:"Hiroshima",ln:"Fukayasu District, Fukuyama, Numakuma District, Hiroshima"},852:{sn:"Matsue"},853:{sn:"Izumo"},854:{sn:"Yasugi and Kisuki and Kakeya and Iwamioda"},855:{sn:"Hamada and Gotsu and Kawamoto"},856:{sn:"Masuta and Tsuwano"},857:{sn:"Tottori"},
858:{sn:"Koge and Kurayoshi"},859:{sn:"Yonago and Neu"},863:{sn:"Tamano"},865:{sn:"Kamogata and Kasaoka"},866:{sn:"Takahashi and Ibara and Soja"},867:{sn:"Niimi and Kamogawa and Kuse"},868:{sn:"Tsuyama and Mimasaka"},869:{sn:"Bizen and Oku"},875:{sn:"Kanonji"},877:{sn:"Marugame"},879:{sn:"Sanbonmatsu and Tonosho"},880:{sn:"Tosanakamura and Sukumo and Kubokawa and Tosashimizu"},883:{sn:"Kamojima and Wakimachi and Awaikeda"},884:{sn:"Anan and Nyudani and Mugi"},885:{sn:"Komatsushima"},886:{sn:"Tokushima",
ln:"Itano District, Komatsushima, Miyoshi District, Myodo District, Myozai District, Naruto, Tokushima"},887:{sn:"Reihoku and Muroto and Aki and Tosayamada"},888:{sn:"K\u014dchi",ln:"Agawa District, Kami District, K\u014dchi, Nankoku, Susaki, Tosa District, Tosa, K\u014dchi"},889:{sn:"Sakawa and Susaki"},892:{sn:"Kuma"},893:{sn:"Ozu"},894:{sn:"Yawatahama and Uwa"},895:{sn:"Uwajima and Misho"},896:{sn:"Iyomishima"},897:{sn:"Hakata and Nihama"},898:{sn:"Imabari"},920:{sn:"Gonoura and Izuhara and Tsushimasaga"},
930:{sn:"Yukuhashi"},933:{sn:"Kagoshima",ln:"Kawanabe District, Kagoshima"},940:{sn:"Munakata"},942:{sn:"Kurume"},943:{sn:"Yame and Tanushimaru"},944:{sn:"Setaka"},946:{sn:"Amagi"},947:{sn:"Tagawa"},948:{sn:"Iizuka"},949:{sn:"Nogata"},950:{sn:"Hirado"},952:{sn:"Saga"},954:{sn:"Takeo and Kashima"},955:{sn:"Karatsu and Imari"},956:{sn:"Sasebo"},957:{sn:"Isahaya and Shimabara"},959:{sn:"Oseto and Fukue and Arikawa"},964:{sn:"Matsubase"},965:{sn:"Yatsushiro"},966:{sn:"Hitoyoshi and Minamata"},967:{sn:"Kumamotoichinomiya and Yabe and Takamori"},
968:{sn:"Yamaga and Tamana"},969:{sn:"Amakusa"},972:{sn:"Saeki and Usuki"},973:{sn:"Hita and Kusu"},974:{sn:"Mie and Taketa"},975:{sn:"\u014cita",ln:"Kitaamabe District, \u014cita District, \u014cita, Ono District, \u014cita"},977:{sn:"Beppu"},978:{sn:"Kunisaki and Bungotakada and Kitsuki"},979:{sn:"Nakatsu"},980:{sn:"Nago and Okinawamiyako and Yaeyama"},982:{sn:"Nobeoka and Hyuga and Takachiho"},983:{sn:"Takanabe"},984:{sn:"Kobayashi"},985:{sn:"Miyazaki"},986:{sn:"Miyakonojo"},987:{sn:"Nichinan"},
993:{sn:"Ibusuki and Kaseda"},994:{sn:"Kanoya and Onejime"},995:{sn:"Kajiki and Okuchi"},996:{sn:"Izumi and Sendai"},997:{sn:"Naze and Tokunoshima and Tanegashima and Yakushima and Setouchi"},1235:{sn:"Hokkaid\u014d",ln:"Y\u016bbari, Hokkaid\u014d"},1237:{sn:"Hokkaid\u014d",ln:"Y\u016bbari District, Y\u016bbari, Hokkaid\u014d"},1238:{sn:"Hokkaid\u014d",ln:"Y\u016bbari District, Hokkaid\u014d"},1242:{sn:"Hokkaid\u014d",ln:"Ashibetsu, Hokkaid\u014d"},1266:{sn:"Hokkaid\u014d",ln:"Bibai, Hokkaid\u014d"},
1267:{sn:"Iwamizawa"},1332:{sn:"Hokkaid\u014d",ln:"Ishikari District, Hokkaid\u014d"},1337:{sn:"Hokkaid\u014d",ln:"Atsuta District, Hokkaid\u014d"},1372:{sn:"Shikabe"},1374:{sn:"Mori"},1376:{sn:"Hokkaid\u014d",ln:"Yamakoshi District, Hokkaid\u014d"},1377:{sn:"Yakumo"},1378:{sn:"Hokkaid\u014d",ln:"Setana District, Hokkaid\u014d"},1392:{sn:"Kikonai"},1394:{sn:"Hokkaid\u014d",ln:"Matsumae District, Hokkaid\u014d"},1395:{sn:"Hokkaid\u014d",ln:"Hiyama District, Hokkaid\u014d"},1396:{sn:"Hokkaid\u014d",
ln:"Hiyama District, Nishi District, Hokkaid\u014d"},1397:{sn:"Okushiri"},1398:{sn:"Kumaishi"},1452:{sn:"Hokkaid\u014d",ln:"Chitose, Tomakomai, Y\u016bfutsu District, Hokkaid\u014d"},1454:{sn:"Hokkaid\u014d",ln:"Y\u016bfutsu District, Hokkaid\u014d"},1456:{sn:"Monbetsutomikawa"},1457:{sn:"Monbetsutomikawa"},1462:{sn:"Hokkaid\u014d",ln:"Urakawa D\u00dfistrict, Hokkaid\u014d"},1463:{sn:"Hokkaid\u014d",ln:"Mitsuishi District, Samani District, Urakawa District, Hokkaid\u014d"},1464:{sn:"Hokkaid\u014d",
ln:"Niikappu District, Shizunai District, Hokkaid\u014d"},1466:{sn:"Erimo"},1522:{sn:"Hokkaid\u014d",ln:"Shari District, Hokkaid\u014d"},1527:{sn:"Hokkaid\u014d",ln:"Abashiri District, Hokkaid\u014d"},1532:{sn:"Hokkaid\u014d",ln:"Nemuro, Hokkaid\u014d"},1537:{sn:"Hokkaid\u014d",ln:"Notsuke District, Shibetsu District, Hokkaid\u014d"},1538:{sn:"Hokkaid\u014d",ln:"Menashi District, Notsuke District, Shibetsu District, Hokkaid\u014d"},1547:{sn:"Shiranuka"},1548:{sn:"Hokkaid\u014d",ln:"Kamikawa District, Hokkaid\u014d"},
1557:{sn:"Hokkaid\u014d",ln:"Nakagawa District, Tokachi District, Hokkaid\u014d"},1558:{sn:"Hiroo"},1562:{sn:"Hokkaid\u014d",ln:"Ashoro District, Nakagawa District, Hokkaid\u014d"},1564:{sn:"Kamishihoro"},1566:{sn:"Hokkaid\u014d",ln:"Kamikawa District, Kat\u014d District, Hokkaid\u014d"},1582:{sn:"Hokkaid\u014d",ln:"Monbetsu, Hokkaid\u014d"},1584:{sn:"Hokkaid\u014d",ln:"Monbetsu District, Hokkaid\u014d"},1586:{sn:"Nakayubetsu"},1587:{sn:"Hokkaid\u014d",ln:"Monbetsu District, Hokkaid\u014d"},1588:{sn:"Hokkaid\u014d",
ln:"Monbetsu District, Hokkaid\u014d"},1632:{sn:"Teshio"},1634:{sn:"Hamatonbetsu"},1635:{sn:"Hamatonbetsu"},1638:{sn:"Hokkaid\u014d",ln:"Rebun District, Rishiri District, Hokkaid\u014d"},1645:{sn:"Hokkaid\u014d",ln:"Rumoi District, Hokkaid\u014d"},1646:{sn:"Hokkaid\u014d",ln:"Tomamae District, Hokkaid\u014d"},1648:{sn:"Yagisiri"},1652:{sn:"Hokkaid\u014d",ln:"Shibetsu, Hokkaid\u014d"},1653:{sn:"Hokkaid\u014d",ln:"Ury\u016b District, Hokkaid\u014d"},1654:{sn:"Nayoro"},1655:{sn:"Nayoro"},1656:{sn:"Bifuka"},
1658:{sn:"Kamikawa"},2549:{sn:"Niigata",ln:"Higashikanbara District, Niigata"},2559:{sn:"Niigata",ln:"Higashikubiki District, Niigata"},2579:{sn:"Niigata",ln:"Kitauonuma District, Niigata"},2955:{sn:"Ibaraki",ln:"Higashiibaraki District, Naka District, Ibaraki"},2957:{sn:"Ibaraki",ln:"Kuji District, Ibaraki"},4992:{sn:"Izu oshima"},4994:{sn:"Miyake"},4996:{sn:"Hachijojima"},4998:{sn:"Ogasawara"},5312:{sn:"Aichi",ln:"Atsumi District, Aichi"},5313:{sn:"Aichi",ln:"Atsumi District, Aichi"},5362:{sn:"Aichi",
ln:"Shinshiro, Aichi"},5363:{sn:"Aichi",ln:"Minamishitara District, Aichi"},5366:{sn:"Aichi",ln:"Kitashitara District, Aichi"},5367:{sn:"Aichi",ln:"Kitashitara District, Aichi"},5368:{sn:"Aichi",ln:"Kitashitara District, Aichi"},5613:{sn:"Aichi",ln:"Aichi District, Nishikamo District, Aichi"},5617:{sn:"Aichi",ln:"Aichi District, Nisshin, Aichi"},5675:{sn:"Aichi",ln:"Ama District, Aichi"},5679:{sn:"Aichi",ln:"Ama District, Aichi"},5769:{sn:"Shoukawa"},5958:{sn:"Mie",ln:"Kameyama, Mie"},5959:{sn:"Mie",
ln:"Suzuka District, Mie"},5972:{sn:"Mie",ln:"Owase, Mie"},5973:{sn:"Mie",ln:"Kitamuro District, Mie"},5974:{sn:"Mie",ln:"Kitamuro District, Mie"},5978:{sn:"Mie",ln:"Kumano, Mie"},5979:{sn:"Kumano"},5983:{sn:"Mie",ln:"Taki District, Mie"},5984:{sn:"Mie",ln:"Ichishi District, Iinan District, Mie"},5987:{sn:"Mie",ln:"Taki District, Watarai District, Mie"},5988:{sn:"Mie",ln:"Taki District, Watarai District,"},5994:{sn:"Mie",ln:"Shima District, Mie"},5995:{sn:"Mie",ln:"Shima District, Toba, Mie"},5996:{sn:"Mie",
ln:"Watarai District, Mie"},5997:{sn:"Mie",ln:"Shima District, Mie"},5998:{sn:"Mie",ln:"Shima District, Mie"},7354:{sn:"Wakayama",ln:"Higashimuro District, Minamimuro District, Mie, Yoshino District, Nara, Wakayama"},7355:{sn:"Wakayama",ln:"Higashimuro District, Wakayama"},7356:{sn:"Wakayama",ln:"Nishimuro District, Wakayama"},7357:{sn:"Wakayama",ln:"Higashimuro District, Wakayama"},7437:{sn:"Osaka",ln:"Shij\u014dnawate, Osaka"},7439:{sn:"Nara",ln:"Soekami District, Soraku District, Kyoto, Nara"},
7443:{sn:"Nara",ln:"Shiki District, Nara"},7463:{sn:"Nara",ln:"Yoshino District, Nara"},7468:{sn:"Kamikitayama"},7472:{sn:"Nara",ln:"Goj\u014d, Nara"},7473:{sn:"Nara",ln:"Yoshino District, Nara"},7617:{sn:"Ishikawa",ln:"Enuma District, Kaga, Ishikawa"},7619:{sn:"Ishikawa",ln:"Ishikawa District, Nomi District, Ishikawa"},7797:{sn:"Fukui",ln:"Asuwa District, Fukui"},7912:{sn:"Hy\u014dgo",ln:"Aioi, Hy\u014dgo"},7914:{sn:"Hy\u014dgo",ln:"Ako, Hy\u014dgo"},7915:{sn:"Hy\u014dgo",ln:"Ak\u014d District, Hy\u014dgo"},
7932:{sn:"Hy\u014dgo",ln:"Ibo District, Shikama District, Hy\u014dgo"},7933:{sn:"Hy\u014dgo",ln:"Shikama District, Hy\u014dgo"},8207:{sn:"Yamaguchi",ln:"\u014cshima District, Yamaguchi"},8247:{sn:"Hiroshima",ln:"Sh\u014dbara, Hiroshima"},8248:{sn:"Hiroshima",ln:"Hiba District, Hiroshima"},8262:{sn:"Hiroshima",ln:"Saeki District, Yamagata District, Hiroshima"},8375:{sn:"Yamaguchi",ln:"Mine, Yamaguchi"},8376:{sn:"Yamaguchi",ln:"Mine District, Toyora District, Yamaguchi"},8387:{sn:"Tamagawa"},8388:{sn:"Tamagawa"},
8395:{sn:"Yamaguchi",ln:"Abu District, Yamaguchi"},8396:{sn:"Yamaguti"},8452:{sn:"Hiroshima",ln:"Innoshima, Toyota District, Hiroshima"},8466:{sn:"Hiroshima",ln:"Toyota District, Hiroshima"},8472:{sn:"Hiroshima",ln:"Sera District, Hiroshima"},8473:{sn:"Hiroshima",ln:"Kamo District, Sera District, Hiroshima"},8477:{sn:"Tojo"},8478:{sn:"Hiroshima",ln:"Jinseki District, Hiroshima"},8487:{sn:"Hiroshima",ln:"Mitsugi District, Hiroshima"},8512:{sn:"Saigo"},8514:{sn:"Ama"},8548:{sn:"Shimane",ln:"Nima District, \u014cda, Shimane"},
8567:{sn:"Shimane",ln:"Kanoashi District, Shimane"},8636:{sn:"Okayama",ln:"Kojima District, Okayama"},8654:{sn:"Okayama",ln:"Asakuchi District, Okayama"},8687:{sn:"Okayama",ln:"Aida District, Katsuta District, Kume District, Okayama"},8692:{sn:"Okayama",ln:"Oku District, Okayama"},8695:{sn:"Okayama",ln:"Akaiwa District, Kume District, Wake District, Okayama"},8699:{sn:"Okayama",ln:"Akaiwa District, Okayama"},8846:{sn:"Tokushima",ln:"Naka District, Tokushima"},8847:{sn:"Tokushima",ln:"Kaifu District, Tokushima"},
8853:{sn:"Tokushima",ln:"Komatsushima, Naka District, Tokushima District, Tokushima"},8854:{sn:"Tokushima",ln:"Katsura District, Tokushima"},8872:{sn:"K\u014dchi",ln:"Aki District, Muroto, K\u014dchi"},8873:{sn:"K\u014dchi",ln:"Aki District, Aki, K\u014dchi"},8874:{sn:"K\u014dchi",ln:"Aki District, K\u014dchi"},8875:{sn:"K\u014dchi",ln:"Kami District, Nagaoka District, K\u014dchi"},9204:{sn:"Nagasaki",ln:"Iki, Nagasaki"},9205:{sn:"Nagasaki",ln:"Shimoagata District, Nagasaki"},9208:{sn:"Nagasaki",
ln:"Kamiagata District, Nagasaki"},9302:{sn:"Fukuoka",ln:"Miyako District, Fukuoka"},9304:{sn:"Fukuoka",ln:"Miyako District, Fukuoka"},9305:{sn:"Fukuoka",ln:"Chikujo District, Fukuoka"},9492:{sn:"Fukuoka",ln:"Kurate District, Nogata, Fukuoka"},9493:{sn:"Fukuoka",ln:"Kurate District, Fukuoka"},9496:{sn:"Nogata"},9546:{sn:"Saga",ln:"Fujitsu District, Kashima, Kishima District, Saga"},9676:{sn:"Kumamoto",ln:"Aso District, Kumamoto"},9697:{sn:"Kumamoto",ln:"Amakusa District, Ushibuka, Kumamoto"},9737:{sn:"\u014cita",
ln:"Kusu District, \u014cita"},9802:{sn:"Minamidaito"},9807:{sn:"Okinawa",ln:"Hirara, Miyako District, Okinawa"},9808:{sn:"Okinawa",ln:"Ishigaki, Yaeyama District, Okinawa"},9912:{sn:"Nakanoshima"},9913:{sn:"Iojima"},9942:{sn:"Kagoshima",ln:"Kimotsuki District, Kagoshima"},9952:{sn:"Kagoshima",ln:"Isa District, Okuchi, Kagoshima"},9969:{sn:"Nakakoshiki"},9972:{sn:"Kagoshima",ln:"Kumage District, Nishinoomote, Kagoshima"},9974:{sn:"Kagoshima",ln:"Kumage District, Kagoshima"},9977:{sn:"Kagoshima",ln:"\u014cshima District, Kagoshima"},
13379:{sn:"Hokkaid\u014d",ln:"Hamamasu District, Hokkaid\u014d"},15829:{sn:"Hokkaid\u014d",ln:"Monbetsu District, Hokkaid\u014d"},16528:{sn:"Hokkaid\u014d",ln:"Kamikawa District, Hokkaid\u014d"},53145:{sn:"Aichi",ln:"Atsumi District, Aichi"},53683:{sn:"Aichi",ln:"Kitashitara District, Aichi"},58138:{sn:"Gifu",ln:"Motosu District, Gifu"},58139:{sn:"Gifu",ln:"Ibi District, Gifu"},58157:{sn:"Gifu",ln:"Mugi District, Gifu"},58158:{sn:"Gifu",ln:"Mugi District, Gifu"},58689:{sn:"Gifu",ln:"Hashima District, Gifu"},
59832:{sn:"Mie",ln:"Iinan District, Mie"},59849:{sn:"Mie",ln:"Taki District, Mie"},59856:{sn:"Mie",ln:"Ichishi District, Mie"},59872:{sn:"Mie",ln:"Watarai District, Mie"},73549:{sn:"Wakayama",ln:"Higashimuro District, Wakayama"},74395:{sn:"Kyoto",ln:"Soraku District, Kyoto"},82485:{sn:"Hiroshima",ln:"Hiba District, Hiroshima"},82486:{sn:"Hiroshima",ln:"Hiba District, Hiroshima"},82488:{sn:"Hiroshima",ln:"K\u014dnu District, Sh\u014dbara, Hiroshima"},84732:{sn:"Hiroshima",ln:"Mitsugi District, Toyota District, Hiroshima"},
84762:{sn:"Hiroshima",ln:"K\u014dnu District, Hiroshima"},84767:{sn:"Hiroshima",ln:"K\u014dnu District, Hiroshima"},86542:{sn:"Okayama",ln:"Asakuchi District, Okayama"},86926:{sn:"Okayama",ln:"Oku District, Okayama"},93032:{sn:"Fukuoka",ln:"Miyako District, Fukuoka"},93033:{sn:"Fukuoka",ln:"Miyako District, Fukuoka"}};
ilib.data.area_KR={2:{sn:"Seoul",ln:"Seoul and parts of Gyeonggi-do (Gwacheon, Gwangmyeong and some neighborhoods of Goyang and Hanam)"},31:{sn:"Gyeonggi-do",ln:"Gyeonggi-do"},32:{sn:"Incheon",ln:"Incheon and parts of Gyeonggi-do (Bucheon and some insular communities of Ansan)"},33:{sn:"Gangwon-do",ln:"Gangwon-do"},41:{sn:"Chungcheongnam-do",ln:"Chungcheongnam-do"},42:{sn:"Daejeon",ln:"Daejeon and a part of Chungcheongnam-do (Gyeryong)"},43:{sn:"Chungcheongbuk-do",ln:"Chungcheongbuk-do"},44:{sn:"Sejong City",
ln:"Sejong City"},49:{sn:"Kaesong",ln:"Kaesong Industrial Region"},51:{sn:"Busan",ln:"Busan"},52:{sn:"Ulsan",ln:"Ulsan"},53:{sn:"Daegu",ln:"Daegu and a part of Gyeongsangbuk-do (Gyeongsan)"},54:{sn:"Gyeongsangbuk-do",ln:"Gyeongsangbuk-do"},55:{sn:"Gyeongsangnam-do",ln:"Gyeongsangnam-do and a few neighborhoods of Ulsan"},61:{sn:"Jeollanam-do",ln:"Jeollanam-do"},62:{sn:"Gwangju",ln:"Gwangju"},63:{sn:"Jeollabuk-do",ln:"Jeollabuk-do"},64:{sn:"Jeju-do",ln:"Jeju-do"}};
ilib.data.area_BR={11:{sn:"S\u00e3o Paulo",ln:"Greater S\u00e3o Paulo"},12:{sn:"Vale do Para\u00edba",ln:"Vale do Para\u00edba (S\u00e3o Jos\u00e9 dos Campos, Taubat\u00e9, Guaratinguet\u00e1) and Northern coast (Ubatuba, S\u00e3o Sebasti\u00e3o)"},13:{sn:"Baixada Santista",ln:"Baixada Santista (Santos, Guaruj\u00e1, Cubat\u00e3o) and South (Registro, Iguape)"},14:{sn:"Central S\u00e3o Paulo State",ln:"Central S\u00e3o Paulo State (Bauru, Mar\u00edlia, Botucatu)"},15:{sn:"Southwest S\u00e3o Paulo State",
ln:"Southwest S\u00e3o Paulo State (Sorocaba, Itapetininga)"},16:{sn:"Northeast S\u00e3o Paulo State",ln:"Northeast S\u00e3o Paulo State (Ribeir\u00e3o Preto, Franca, S\u00e3o Carlos)"},17:{sn:"Northwest S\u00e3o Paulo State",ln:"Northwest S\u00e3o Paulo State (S\u00e3o Jos\u00e9 do Rio Preto, Catanduva)"},18:{sn:"West S\u00e3o Paulo State",ln:"West S\u00e3o Paulo State (Presidente Prudente, Ara\u00e7atuba)"},19:{sn:"Central-South S\u00e3o Paulo State",ln:"Central-South S\u00e3o Paulo State (Campinas, Piracicaba, Rio Claro)"},
21:{sn:"Rio de Janeiro",ln:"Greater Rio de Janeiro and Teres\u00f3polis"},22:{sn:"East and North Rio de Janeiro",ln:"East and North Rio de Janeiro (Campos dos Goytacazes, Cabo Frio, Nova Friburgo)"},24:{sn:"West Rio de Janeiro",ln:"West Rio de Janeiro (Petr\u00f3polis, Volta Redonda, Angra dos Reis)"},27:{sn:"Central and North Esp\u00edrito Santo",ln:"Central and North Esp\u00edrito Santo (Vit\u00f3ria, Linhares, Colatina)"},28:{sn:"South Minas Gerais State",ln:"South Minas Gerais State (Cachoeiro de Itapemirim)"},
31:{sn:"Central Minas Gerais State",ln:"Central Minas Gerais State (Greater Belo Horizonte, Sete Lagoas, Ipatinga)"},32:{sn:"Southeast Minas Gerais State",ln:"Southeast Minas Gerais State (Juiz de Fora, Muria\u00e9, Barbacena)"},33:{sn:"East and Northeast Minas Gerais State",ln:"East and Northeast Minas Gerais State (Governador Valadares, Te\u00f3filo Otoni, Almenara)"},34:{sn:"West Minas Gerais State",ln:"West Minas Gerais State (Uberl\u00e2ndia, Uberaba, Patos de Minas)"},35:{sn:"Southwest Minas Gerais State",
ln:"Southwest Minas Gerais State (Po\u00e7os de Caldas, Varginha, Pouso Alegre)"},37:{sn:"Central-West Minas Gerais State",ln:"Central-West Minas Gerais State (Divin\u00f3polis)"},38:{sn:"North Minas Gerais State",ln:"North Minas Gerais State (Montes Claros, Diamantina, Paracatu)"},41:{sn:"Curitiba",ln:"Greater Curitiba and coast (Paranagu\u00e1)"},42:{sn:"Central-South Paran\u00e1 State",ln:"Central-South Paran\u00e1 State (Ponta Grossa, Guarapuava)"},43:{sn:"Northeast Paran\u00e1 State",ln:"Northeast Paran\u00e1 State (Londrina, Apucarana)"},
44:{sn:"Northwest Paran\u00e1 State",ln:"Northwest Paran\u00e1 State (Maring\u00e1, Umuarama)"},45:{sn:"West Paran\u00e1 State",ln:"West Paran\u00e1 State (Foz do Igua\u00e7u, Cascavel)"},46:{sn:"Southwest Paran\u00e1 State",ln:"Southwest Paran\u00e1 State (Francisco Beltr\u00e3o, Pato Branco)"},47:{sn:"Northeast Santa Catarina State",ln:"Northeast Santa Catarina State (Joinville, Blumenau, Itaja\u00ed)"},48:{sn:"Florian\u00f3polis",ln:"Greater Florian\u00f3polis and South (Crici\u00fama, Tubar\u00e3o)"},
49:{sn:"Central and West Santa Catarina State",ln:"Central and West Santa Catarina State (Lages, Chapec\u00f3)"},51:{sn:"Porto Alegre",ln:"Greater Porto Alegre, Central-South Rio Grande do Sul (Santa Cruz do Sul), Northern coast (Torres)"},53:{sn:"South Rio Grande do Sul State",ln:"South Rio Grande do Sul State (Pelotas, Rio Grande, Bag\u00e9)"},54:{sn:"North Rio Grande do Sul State",ln:"North Rio Grande do Sul State (Caxias do Sul, Passo Fundo)"},55:{sn:"Central and West Rio Grande do Sul State",
ln:"Central and West Rio Grande do Sul State (Santa Maria, Uruguaiana, Cruz Alta)"},61:{sn:"Area surrounding Bras\u00edlia",ln:"Area surrounding Bras\u00edlia"},62:{sn:"Central and North Goi\u00e1s State",ln:"Central and North Goi\u00e1s State (Greater Goi\u00e2nia, An\u00e1polis, Porangatu)"},63:{sn:"Tocantins State",ln:"Tocantins State"},64:{sn:"South and West Goi\u00e1s State",ln:"South and West Goi\u00e1s State (Rio Verde, Itumbiara, Catal\u00e3o)"},65:{sn:"Southwest Mato Grosso State",ln:"Southwest Mato Grosso State (Cuiab\u00e1, C\u00e1ceres)"},
66:{sn:"East and North Mato Grosso State",ln:"East and North Mato Grosso State (Rondon\u00f3polis, Sinop)"},67:{sn:"Mato Grosso do Sul State",ln:"Mato Grosso do Sul State"},68:{sn:"Acre State",ln:"Acre State"},69:{sn:"Rond\u00f4nia State",ln:"Rond\u00f4nia State"},71:{sn:"Salvador",ln:"Greater Salvador"},73:{sn:"South Bahia State",ln:"South Bahia State (Ilh\u00e9us, Itabuna, Porto Seguro, Jequi\u00e9)"},74:{sn:"Northwest Bahia State",ln:"Northwest Bahia State (Juazeiro, Jacobina)"},75:{sn:"Northeast Bahia State",
ln:"Northeast Bahia State (Feira de Santana, Alagoinhas)"},77:{sn:"Southwest and West Bahia State",ln:"Southwest and West Bahia State (Vit\u00f3ria da Conquista, Barreiras)"},79:{sn:"Sergipe State",ln:"Sergipe State"},81:{sn:"East Pernambuco State",ln:"East Pernambuco State (Greater Recife, Caruaru, Fernando de Noronha)"},82:{sn:"Alagoas State",ln:"Alagoas State"},83:{sn:"Para\u00edba State",ln:"Para\u00edba State"},84:{sn:"Rio Grande do Norte State",ln:"Rio Grande do Norte State"},85:{sn:"Fortaleza",
ln:"Greater Fortaleza"},86:{sn:"North Piau\u00ed State",ln:"North Piau\u00ed State (Teresina, Parna\u00edba)"},87:{sn:"Central and West Pernambuco State",ln:"Central and West Pernambuco State (Petrolina, Garanhuns)"},88:{sn:"Central, West and South Cear\u00e1 State",ln:"Central, West and South Cear\u00e1 State (Juazeiro do Norte, Sobral)"},89:{sn:"Central and South Piau\u00ed State",ln:"Central and South Piau\u00ed State (Picos, Floriano)"},91:{sn:"Northeast Par\u00e1 State",ln:"Northeast Par\u00e1 State (Greater Bel\u00e9m, Capanema)"},
92:{sn:"Northeast Amazonas State",ln:"Northeast Amazonas State (Greater Manaus, Itacoatiara, Parintins)"},93:{sn:"Central and West Par\u00e1 State",ln:"Central and West Par\u00e1 State (Santar\u00e9m, Altamira)"},94:{sn:"Southeast Par\u00e1 State",ln:"Southeast Par\u00e1 State (Marab\u00e1, Caraj\u00e1s)"},95:{sn:"Roraima State",ln:"Roraima State"},96:{sn:"Amap\u00e1 State",ln:"Amap\u00e1 State"},97:{sn:"Central, South and West Amazonas State",ln:"Central, South and West Amazonas State (Coari, Tabatinga, Humait\u00e1)"},
98:{sn:"North Maranh\u00e3o State",ln:"North Maranh\u00e3o State (Greater S\u00e3o Lu\u00eds, Pinheiro)"},99:{sn:"Central and South Maranh\u00e3o State",ln:"Central and South Maranh\u00e3o State (Imperatriz, Caxias)"}};
ilib.data.area_RU={2:{sn:"Kazahkstan",ln:"Kazahkstan"},6:{sn:"Kazahkstan",ln:"Kazahkstan"},7:{sn:"Kazahkstan",ln:"Kazahkstan"},301:{sn:"Buryatia",ln:"Republic of Buryatia"},302:{sn:"Zabaykalsky",ln:"Zabaykalsky Krai"},341:{sn:"Udmurtia",ln:"Republic of Udmurtia"},343:{sn:"Sverdlovsk",ln:"Sverdlovsk Oblast"},345:{sn:"Tyumen",ln:"Tyumen Oblast"},346:{sn:"Khanty\u2013Mansi",ln:"Khanty\u2013Mansi Autonomous Okrug"},347:{sn:"Bashkortostan",ln:"Republic of Bashkortostan"},349:{sn:"Yamalo-Nenets",ln:"Yamalo-Nenets Autonomous Okrug"},
351:{sn:"Chelyabinsk",ln:"Chelyabinsk Oblast"},352:{sn:"Kurgan",ln:"Kurgan Oblast"},365:{sn:"Crimea",ln:"Republic of Crimea"},383:{sn:"Novosibirsk",ln:"Novosibirsk Oblast"},384:{sn:"Kemerovo",ln:"Kemerovo Oblast"},385:{sn:"Altai",ln:"Altai Krai"},388:{sn:"Altai",ln:"Altai Republic"},390:{sn:"Khakassia",ln:"Republic of Khakassia"},391:{sn:"Krasnoyarsk",ln:"Krasnoyarsk Krai"},394:{sn:"Tyva",ln:"Republic of Tyva (Tuva)"},395:{sn:"Irkutsk",ln:"Irkutsk Oblast"},401:{sn:"Kaliningrad",ln:"Kaliningrad Oblast"},
411:{sn:"Sakha",ln:"Sakha Republic (Yakutia)"},413:{sn:"Magadan",ln:"Magadan Oblast"},415:{sn:"Kamchatka",ln:"Kamchatka Krai"},416:{sn:"Amur",ln:"Amur Oblast"},421:{sn:"Khabarovsk",ln:"Khabarovsk Krai"},423:{sn:"Primorsky",ln:"Primorsky Krai"},424:{sn:"Sakhalin",ln:"Sakhalin Oblast"},426:{sn:"Jewish Autonomous Oblast",ln:"Jewish Autonomous Oblast"},427:{sn:"Chukotka",ln:"Chukotka Autonomous Okrug"},471:{sn:"Kursk",ln:"Kursk Oblast"},472:{sn:"Belgorod",ln:"Belgorod Oblast"},473:{sn:"Voronezh",ln:"Voronezh Oblast"},
474:{sn:"Lipetsk",ln:"Lipetsk Oblast"},475:{sn:"Tambov",ln:"Tambov Oblast"},481:{sn:"Smolensk",ln:"Smolensk Oblast"},482:{sn:"Tver",ln:"Tver Oblast"},483:{sn:"Bryansk",ln:"Bryansk Oblast"},484:{sn:"Kaluga",ln:"Kaluga Oblast"},485:{sn:"Yaroslavl",ln:"Yaroslavl Oblast"},486:{sn:"Oryol",ln:"Oryol Oblast"},487:{sn:"Tula",ln:"Tula Oblast"},491:{sn:"Ryazan",ln:"Ryazan Oblast"},492:{sn:"Vladimir",ln:"Vladimir Oblast"},493:{sn:"Ivanovo",ln:"Ivanovo Oblast"},494:{sn:"Kostroma",ln:"Kostroma Oblast"},495:{sn:"Moscow",
ln:"Moscow City"},496:{sn:"Moscow",ln:"Moscow Oblast"},811:{sn:"Pskov",ln:"Pskov Oblast"},812:{sn:"Saint Petersburg",ln:"Saint Petersburg"},813:{sn:"Leningrad",ln:"Leningrad Oblast"},814:{sn:"Karelia",ln:"Republic of Karelia"},817:{sn:"Vologda",ln:"Vologda Oblast"},818:{sn:"Arkhangelsk",ln:"Arkhangelsk Oblast and Nenets Autonomous Okrug"},820:{sn:"Cherepovets",ln:"Cherepovets"},821:{sn:"Komi Republic",ln:"Komi Republic"},831:{sn:"Nizhny Novgorod",ln:"Nizhny Novgorod Oblast"},833:{sn:"Kirov",ln:"Kirov Oblast"},
834:{sn:"Mordovia",ln:"Republic of Mordovia"},835:{sn:"Chuvashia",ln:"Republic of Chuvashia"},836:{sn:"Mari El",ln:"Republic of Mari El"},842:{sn:"Ulyanovsk",ln:"Ulyanovsk Oblast"},843:{sn:"Tatarstan",ln:"Republic of Tatarstan"},847:{sn:"Kalmykia",ln:"Republic of Kalmykia"},851:{sn:"Astrakhan",ln:"Astrakhan Oblast"},861:{sn:"Krasnodar",ln:"Krasnodar Krai"},862:{sn:"Sochi",ln:"Sochi"},863:{sn:"Rostov",ln:"Rostov Oblast"},866:{sn:"Kabardino-Balkaria",ln:"Republic of Kabardino-Balkaria"},867:{sn:"North Ossetia\u2013Alania",
ln:"Republic of North Ossetia\u2013Alania"},869:{sn:"Sevastopol",ln:"City of Sevastopol"},871:{sn:"Chechnya",ln:"Republic of Chechnya"},872:{sn:"Dagestan",ln:"Republic of Dagestan"},873:{sn:"Ingushetia",ln:"Republic of Ingushetia"},877:{sn:"Adygea",ln:"Republic of Adygea"},878:{sn:"Karachay\u2013Cherkessia",ln:"Republic of Karachay\u2013Cherkessia"},879:{sn:"Mineral nyye Vody",ln:"Mineral nyye Vody"},3012:{sn:"Ulan Ude",ln:"Ulan Ude"},3412:{sn:"Izhevsk",ln:"Izhevsk"},3422:{sn:"Perm",ln:"Perm Krai"},
3462:{sn:"Surgut",ln:"Surgut"},3472:{sn:"Ufa",ln:"Ufa"},3532:{sn:"Orenburg",ln:"Orenburg Oblast"},3812:{sn:"Omsk",ln:"Omsk Oblast"},3822:{sn:"Tomsk",ln:"Tomsk Oblast"},3842:{sn:"Kemerovo",ln:"Kemerovo Oblast"},3852:{sn:"Barnaul",ln:"Barnaul"},3912:{sn:"Krasnoyarsk",ln:"Krasnoyarsk Krai"},3952:{sn:"Irkutsk",ln:"Irkutsk Oblast"},4112:{sn:"Yakutsk",ln:"Yakutsk"},4152:{sn:"Petropavlovsk Kamchatskiy",ln:"Petropavlovsk Kamchatskiy"},4212:{sn:"Khabarovsk",ln:"Khabarovsk Krai"},4232:{sn:"Vladivostok",ln:"Vladivostok"},
8152:{sn:"Murmansk",ln:"Murmansk Oblast"},8182:{sn:"Arkhangelsk",ln:"Arkhangelsk"},8262:{sn:"Orel",ln:"Orel"},8352:{sn:"Cheboksary",ln:"Cheboksary"},8412:{sn:"Penza",ln:"Penza Oblast"},8422:{sn:"Ulyanovsk",ln:"Ulyanovsk Oblast"},8442:{sn:"Volgograd",ln:"Volgograd Oblast"},8452:{sn:"Saratov",ln:"Saratov Oblast"},8462:{sn:"Samara",ln:"Samara Oblast"},8512:{sn:"Astrakhan",ln:"Astrakhan Oblast"},8552:{sn:"Naberezhnye Chelny",ln:"Naberezhnye Chelny"},8612:{sn:"Krasnodar",ln:"Krasnodar Krai"},8652:{sn:"Stavropol",
ln:"Stavropol Krai"},39113:{sn:"Tura",ln:"Tura"},39152:{sn:"Norilsk",ln:"Norilsk"},41322:{sn:"Magadan",ln:"Magadan Oblast"},42722:{sn:"Anadyr",ln:"Anadyr"},81622:{sn:"Novgorod",ln:"Novgorod Oblast"},86117:{sn:"Novorossiysk",ln:"Novorossiysk"},87822:{sn:"Cherkessk",ln:"Cherkessk"}};
ilib.data.area_CN={10:{sn:"Beijing",ln:"Beijing \u5317\u4eac\u5e02"},20:{sn:"Guangzhou",ln:"Guangzhou \u5e7f\u5dde\u5e02"},21:{sn:"Shanghai",ln:"Shanghai \u4e0a\u6d77\u5e02"},22:{sn:"Tianjin",ln:"Tianjin \u5929\u6d25\u5e02"},23:{sn:"Chongqing",ln:"Chongqing \u91cd\u5e86\u5e02"},24:{sn:"Shenyang",ln:"Shenyang \u6c88\u9633\u5e02"},25:{sn:"Nanjing",ln:"Nanjing \u5357\u4eac\u5e02"},27:{sn:"Wuhan",ln:"Wuhan \u6b66\u6c49\u5e02"},28:{sn:"Chengdu",ln:"Chengdu \u6210\u90fd\u5e02"},29:{sn:"XiAn",ln:"XiAn \u897f\u5b89\u5e02, Xianyang \u54b8\u9633\u5e02"},
310:{sn:"Handan",ln:"Handan \u90af\u90f8\u5e02"},311:{sn:"Shijiazhuang",ln:"Shijiazhuang \u77f3\u5bb6\u5e84\u5e02"},312:{sn:"Baoding",ln:"Baoding \u4fdd\u5b9a\u5e02"},313:{sn:"Zhangjiakou",ln:"Zhangjiakou \u5f20\u5bb6\u53e3\u5e02"},314:{sn:"Chengde",ln:"Chengde \u627f\u5fb7\u5e02"},315:{sn:"Tangshan",ln:"Tangshan \u5510\u5c71\u5e02"},316:{sn:"Langfang",ln:"Langfang \u5eca\u574a\u5e02"},317:{sn:"Cangzhou",ln:"Cangzhou \u6ca7\u5dde\u5e02"},318:{sn:"Hengshui",ln:"Hengshui \u8861\u6c34\u5e02"},319:{sn:"Xingtai",
ln:"Xingtai \u90a2\u53f0\u5e02"},335:{sn:"Qinhuangdao",ln:"Qinhuangdao \u79e6\u7687\u5c9b\u5e02"},349:{sn:"Shuozhou",ln:"Shuozhou \u6714\u5dde\u5e02"},350:{sn:"Xinzhou",ln:"Xinzhou \u5ffb\u5dde\u5e02 (\u5ffb\u5dde\u5730\u533a)"},351:{sn:"Taiyuan",ln:"Taiyuan \u592a\u539f\u5e02"},352:{sn:"Datong",ln:"Datong \u5927\u540c\u5e02"},353:{sn:"Yangquan",ln:"Yangquan \u9633\u6cc9\u5e02"},354:{sn:"Yuci",ln:"Yuci \u6986\u6b21\u5e02 (\u664b\u4e2d\u5730\u533a)"},355:{sn:"Changzhi",ln:"Changzhi \u957f\u6cbb\u5e02"},
356:{sn:"Jincheng",ln:"Jincheng \u664b\u57ce\u5e02"},357:{sn:"Linfen",ln:"Linfen \u4e34\u6c7e\u5e02 (\u4e34\u6c7e\u5730\u533a)"},358:{sn:"Lishi",ln:"Lishi \u79bb\u77f3\u5e02 (\u5415\u6881\u5730\u533a)"},359:{sn:"Yuncheng",ln:"Yuncheng \u8fd0\u57ce\u5e02 (\u8fd0\u57ce\u5730\u533a)"},370:{sn:"Shangqiu",ln:"Shangqiu \u5546\u4e18\u5e02"},371:{sn:"Zhengzhou",ln:"Zhengzhou \u90d1\u5dde\u5e02"},372:{sn:"Anyang",ln:"Anyang \u5b89\u9633\u5e02"},373:{sn:"Xinxiang",ln:"Xinxiang \u65b0\u4e61\u5e02"},374:{sn:"Xuchang",
ln:"Xuchang \u8bb8\u660c\u5e02"},375:{sn:"Pingdingshan",ln:"Pingdingshan \u5e73\u9876\u5c71\u5e02"},376:{sn:"Xinyang",ln:"Xinyang \u4fe1\u9633\u5e02\u3001\u6f62\u5ddd\u53bf"},377:{sn:"Nanyang",ln:"Nanyang \u5357\u9633\u5e02"},378:{sn:"Kaifeng",ln:"Kaifeng \u5f00\u5c01\u5e02"},379:{sn:"Luoyang",ln:"Luoyang \u6d1b\u9633\u5e02"},391:{sn:"Jiaozuo",ln:"Jiaozuo \u7126\u4f5c\u5e02"},392:{sn:"Hebi",ln:"Hebi \u9e64\u58c1\u5e02"},393:{sn:"Puyang",ln:"Puyang \u6fee\u9633\u5e02"},394:{sn:"Zhoukou",ln:"Zhoukou \u5468\u53e3\u5e02"},
395:{sn:"Luohe",ln:"Luohe \u6f2f\u6cb3\u5e02"},396:{sn:"Zhumadian",ln:"Zhumadian \u9a7b\u9a6c\u5e97\u5e02"},398:{sn:"Sanmenxia",ln:"Sanmenxia \u4e09\u95e8\u5ce1\u5e02"},410:{sn:"Tieling",ln:"Tieling \u94c1\u5cad\u5e02"},411:{sn:"Dalian",ln:"Dalian \u5927\u8fde\u5e02"},412:{sn:"Anshan",ln:"Anshan \u978d\u5c71\u5e02"},413:{sn:"Fushun",ln:"Fushun \u629a\u987a\u5e02"},414:{sn:"Benxi",ln:"Benxi \u672c\u6eaa\u5e02"},415:{sn:"Dandong",ln:"Dandong \u4e39\u4e1c\u5e02"},416:{sn:"Jinzhou",ln:"Jinzhou \u9526\u5dde\u5e02"},
417:{sn:"Yingkou",ln:"Yingkou \u8425\u53e3\u5e02"},418:{sn:"Fuxin",ln:"Fuxin \u961c\u65b0\u5e02"},419:{sn:"Liaoyang",ln:"Liaoyang \u8fbd\u9633\u5e02"},421:{sn:"Chaoyang",ln:"Chaoyang \u671d\u9633\u5e02"},427:{sn:"Panjin",ln:"Panjin \u76d8\u9526\u5e02"},429:{sn:"Huludao",ln:"Huludao \u846b\u82a6\u5c9b\u5e02"},431:{sn:"Changchun",ln:"Changchun \u957f\u6625\u5e02"},432:{sn:"Jilin",ln:"Jilin \u5409\u6797\u5e02"},433:{sn:"Hunchun",ln:"Hunchun \u73f2\u6625\u5e02, Yanji \u5ef6\u5409\u5e02(\u5ef6\u8fb9 \u671d\u9c9c\u65cf\u81ea\u6cbb\u5dde)"},
434:{sn:"Siping",ln:"Siping \u56db\u5e73\u5e02"},435:{sn:"Tonghua",ln:"Tonghua \u901a\u5316\u5e02, Meihekou \u6885\u6cb3\u53e3\u5e02"},436:{sn:"Baicheng",ln:"Baicheng \u767d\u57ce\u5e02"},437:{sn:"Liaoyuan",ln:"Liaoyuan \u8fbd\u6e90\u5e02"},438:{sn:"Songyuan",ln:"Songyuan \u677e\u539f\u5e02"},439:{sn:"Baishan",ln:"Baishan \u767d\u5c71\u5e02"},451:{sn:"Harbin",ln:"Harbin \u54c8\u5c14\u6ee8\u5e02"},452:{sn:"Qiqihar",ln:"Qiqihar \u9f50\u9f50\u54c8\u5c14\u5e02"},453:{sn:"Mudanjiang",ln:"Mudanjiang \u7261\u4e39\u6c5f\u5e02"},
454:{sn:"Jiamusi",ln:"Jiamusi \u4f73\u6728\u65af\u5e02"},455:{sn:"Suihua",ln:"Suihua \u7ee5\u5316\u5e02"},456:{sn:"Heihe",ln:"Heihe \u9ed1\u6cb3\u5e02"},457:{sn:"Jiagedaqi",ln:"Jiagedaqi \u52a0\u683c\u8fbe\u5947 (\u5927\u5174\u5b89\u5cad\u5730\u533a)"},458:{sn:"Yichun",ln:"Yichun \u4f0a\u6625\u5e02"},459:{sn:"Daqing",ln:"Daqing \u5927\u5e86\u5e02"},464:{sn:"Qitaihe",ln:"Qitaihe \u4e03\u53f0\u6cb3\u5e02"},467:{sn:"Jixi",ln:"Jixi \u9e21\u897f\u5e02"},468:{sn:"Hegang",ln:"Hegang \u9e64\u5c97\u5e02"},
469:{sn:"Shuangyashan",ln:"Shuangyashan \u53cc\u9e2d\u5c71\u5e02"},470:{sn:"Hailaer",ln:"Hailaer \u6d77\u62c9\u5c14\u5e02 (\u547c\u4f26\u8d1d\u5c14\u76df)"},471:{sn:"Huhehaote",ln:"Huhehaote \u547c\u548c\u6d69\u7279\u5e02"},472:{sn:"Baotou",ln:"Baotou \u5305\u5934\u5e02"},473:{sn:"Wuhai",ln:"Wuhai \u4e4c\u6d77\u5e02"},474:{sn:"Jining",ln:"Jining \u96c6\u5b81\u5e02 (\u4e4c\u5170\u5bdf\u5e03\u76df)"},476:{sn:"Chifeng",ln:"Chifeng \u8d64\u5cf0\u5e02"},477:{sn:"Dongsheng",ln:"Dongsheng \u4e1c\u80dc\u5e02 (\u4f0a\u514b\u662d\u76df)"},
478:{sn:"Linhe",ln:"Linhe \u4e34\u6cb3\u5e02 (\u5df4\u5f66\u6dd6\u5c14\u76df)"},479:{sn:"Xilinhaote",ln:"Xilinhaote \u9521\u6797\u6d69\u7279\u5e02 (\u9521\u6797\u90ed\u52d2\u76df)"},482:{sn:"Wulanhaote",ln:"Wulanhaote \u4e4c\u5170\u6d69\u7279\u5e02 (\u5174\u5b89\u76df)"},483:{sn:"Alashanzuoqi",ln:"Alashanzuoqi \u963f\u62c9\u5584\u5de6\u65d7 (\u963f\u62c9\u5584\u76df)"},510:{sn:"Wuxi",ln:"Wuxi \u65e0\u9521\u5e02"},511:{sn:"Zhenjiang",ln:"Zhenjiang \u9547\u6c5f\u5e02"},512:{sn:"Suzhou",ln:"Suzhou \u82cf\u5dde\u5e02"},
513:{sn:"Nantong",ln:"Nantong \u5357\u901a\u5e02"},514:{sn:"Yangzhou",ln:"Yangzhou \u626c\u5dde\u5e02"},515:{sn:"Yancheng",ln:"Yancheng \u76d0\u57ce\u5e02"},516:{sn:"Xuzhou",ln:"Xuzhou \u5f90\u5dde\u5e02"},517:{sn:"Huaian",ln:"Huaian \u6dee\u9634\u5e02"},518:{sn:"Lianyungang",ln:"Lianyungang \u8fde\u4e91\u6e2f\u5e02"},519:{sn:"Changzhou",ln:"Changzhou \u5e38\u5dde\u5e02"},523:{sn:"Taizhou",ln:"Taizhou \u6cf0\u5dde\u5e02"},527:{sn:"Suqian",ln:"Suqian \u5bbf\u8fc1\u5e02"},530:{sn:"Heze",ln:"Heze \u8377\u6cfd\u5e02 (\u8377\u6cfd\u5730\u533a)"},
531:{sn:"Jinan",ln:"Jinan \u6d4e\u5357\u5e02"},532:{sn:"Qingdao",ln:"Qingdao \u9752\u5c9b\u5e02"},533:{sn:"Zibo",ln:"Zibo \u6dc4\u535a\u5e02"},534:{sn:"Dezhou",ln:"Dezhou \u5fb7\u5dde\u5e02 (\u5fb7\u5dde\u5730\u533a)"},535:{sn:"Yantai",ln:"Yantai \u70df\u53f0\u5e02"},536:{sn:"Weifang",ln:"Weifang \u6f4d\u574a\u5e02"},537:{sn:"Jining",ln:"Jining \u6d4e\u5b81\u5e02"},538:{sn:"TaiAn",ln:"TaiAn \u6cf0\u5b89\u5e02"},539:{sn:"Linyi",ln:"Linyi \u4e34\u6c82\u5e02 (\u4e34\u6c82\u5730\u533a)"},543:{sn:"Binzhou",
ln:"Binzhou \u6ee8\u5dde\u5e02 (\u6ee8\u5dde\u5730\u533a)"},546:{sn:"Dongying",ln:"Dongying \u4e1c\u8425\u5e02"},550:{sn:"Chuzhou",ln:"Chuzhou \u6ec1\u5dde\u5e02"},551:{sn:"Hefei",ln:"Hefei \u5408\u80a5\u5e02"},552:{sn:"Bengbu",ln:"Bengbu \u868c\u57e0\u5e02"},553:{sn:"Wuhu",ln:"Wuhu \u829c\u6e56\u5e02"},554:{sn:"Huainan",ln:"Huainan \u6dee\u5357\u5e02"},555:{sn:"MaAnshan",ln:"MaAnshan \u9a6c\u978d\u5c71\u5e02"},556:{sn:"Anqing",ln:"Anqing \u5b89\u5e86\u5e02"},557:{sn:"Suzhou",ln:"Suzhou \u5bbf\u5dde\u5e02"},
558:{sn:"Fuyang",ln:"Fuyang \u961c\u9633\u5e02"},559:{sn:"Huangshan",ln:"Huangshan \u9ec4\u5c71\u5e02"},561:{sn:"Huaibei",ln:"Huaibei \u6dee\u5317\u5e02"},562:{sn:"Tongling",ln:"Tongling \u94dc\u9675\u5e02"},563:{sn:"Xuancheng",ln:"Xuancheng \u5ba3\u57ce\u5e02"},564:{sn:"LiuAn",ln:"LiuAn \u516d\u5b89\u5e02"},565:{sn:"Chaohu",ln:"Chaohu \u5de2\u6e56\u5e02"},566:{sn:"Chizhou",ln:"Chizhou \u6c60\u5dde\u5e02"},570:{sn:"Quzhou",ln:"Quzhou \u8862\u5dde\u5e02"},571:{sn:"Hangzhou",ln:"Hangzhou \u676d\u5dde\u5e02"},
572:{sn:"Huzhou",ln:"Huzhou \u6e56\u5dde\u5e02"},573:{sn:"Jiaxing",ln:"Jiaxing \u5609\u5174\u5e02"},574:{sn:"Ningbo",ln:"Ningbo \u5b81\u6ce2\u5e02"},575:{sn:"Shaoxing",ln:"Shaoxing \u7ecd\u5174\u5e02"},576:{sn:"Taizhou",ln:"Taizhou \u53f0\u5dde\u5e02"},577:{sn:"Wenzhou",ln:"Wenzhou \u6e29\u5dde\u5e02"},578:{sn:"Lishui",ln:"Lishui \u4e3d\u6c34\u5e02"},579:{sn:"Jinhua",ln:"Jinhua \u91d1\u534e\u5e02"},580:{sn:"Zhoushan",ln:"Zhoushan \u821f\u5c71\u5e02"},591:{sn:"Fuzhou",ln:"Fuzhou \u798f\u5dde\u5e02"},
592:{sn:"Xiamen",ln:"Xiamen \u53a6\u95e8\u5e02"},593:{sn:"Ningde",ln:"Ningde \u5b81\u5fb7\u5e02"},594:{sn:"Putian",ln:"Putian \u8386\u7530\u5e02"},595:{sn:"Quanzhou",ln:"Quanzhou \u6cc9\u5dde\u5e02"},596:{sn:"Zhangzhou",ln:"Zhangzhou \u6f33\u5dde\u5e02"},597:{sn:"Longyan",ln:"Longyan \u9f99\u5ca9\u5e02"},598:{sn:"Sanming",ln:"Sanming \u4e09\u660e\u5e02"},599:{sn:"Nanping",ln:"Nanping \u5357\u5e73\u5e02"},631:{sn:"Weihai",ln:"Weihai \u5a01\u6d77\u5e02"},632:{sn:"Zaozhuang",ln:"Zaozhuang \u67a3\u5e84\u5e02"},
633:{sn:"Rizhao",ln:"Rizhao \u65e5\u7167\u5e02"},634:{sn:"Laiwu",ln:"Laiwu \u83b1\u829c\u5e02"},635:{sn:"Liaocheng",ln:"Liaocheng \u804a\u57ce\u5e02 (\u804a\u57ce\u5730\u533a)"},660:{sn:"Shanwei",ln:"Shanwei \u6c55\u5c3e\u5e02"},662:{sn:"Yangjiang",ln:"Yangjiang \u9633\u6c5f\u5e02"},663:{sn:"Jieyang",ln:"Jieyang \u63ed\u9633\u5e02"},668:{sn:"Maoming",ln:"Maoming \u8302\u540d\u5e02"},691:{sn:"Jinghong",ln:"Jinghong \u666f\u6d2a\u5e02 (\u897f\u53cc\u7248\u7eb3 \u50a3\u65cf\u81ea\u6cbb\u5dde )"},692:{sn:"Luxi",
ln:"Luxi \u6f5e\u897f\u5e02 (\u5fb7\u5b8f\u50a3\u65cf \u666f\u9887\u65cf\u81ea\u6cbb\u5dde)"},701:{sn:"Yingtan",ln:"Yingtan \u9e70\u6f6d\u5e02"},710:{sn:"Xiangfan",ln:"Xiangfan \u8944\u6a0a\u5e02"},711:{sn:"Ezhou",ln:"Ezhou \u9102\u5dde\u5e02"},712:{sn:"Xiaogan",ln:"Xiaogan \u5b5d\u611f\u5e02"},713:{sn:"Huanggang",ln:"Huanggang \u9ec4\u5188\u5e02"},714:{sn:"Huangshi",ln:"Huangshi \u9ec4\u77f3\u5e02"},715:{sn:"Xianning",ln:"Xianning \u54b8\u5b81\u5e02"},716:{sn:"Jingzhou",ln:"Jingzhou \u8346\u5dde\u5e02"},
717:{sn:"Yichang",ln:"Yichang \u5b9c\u660c\u5e02"},718:{sn:"Enshi",ln:"Enshi \u6069\u65bd\u5e02 (\u6069\u65bd\u571f\u5bb6\u65cf \u82d7\u65cf\u81ea\u6cbb\u5dde)"},719:{sn:"Shiyan",ln:"Shiyan \u5341\u5830\u5e02"},722:{sn:"Suizhou",ln:"Suizhou \u968f\u5dde\u5e02"},724:{sn:"Jingmen",ln:"Jingmen \u8346\u95e8\u5e02"},728:{sn:"Xiantao",ln:"Xiantao \u4ed9\u6843\u5e02"},730:{sn:"Yueyang",ln:"Yueyang \u5cb3\u9633\u5e02"},731:{sn:"Changsha",ln:"Changsha \u957f\u6c99\u5e02, Xiangtan \u6e58\u6f6d\u5e02, Zhuzhou \u682a\u5dde\u5e02"},
734:{sn:"Hengyang",ln:"Hengyang \u8861\u9633\u5e02"},735:{sn:"Chenzhou",ln:"Chenzhou \u90f4\u5dde\u5e02"},736:{sn:"Changde",ln:"Changde \u5e38\u5fb7\u5e02"},737:{sn:"Yiyang",ln:"Yiyang \u76ca\u9633\u5e02"},738:{sn:"Loudi",ln:"Loudi \u5a04\u5e95\u5e02"},739:{sn:"Shaoyang",ln:"Shaoyang \u90b5\u9633\u5e02"},743:{sn:"Jishou",ln:"Jishou \u5409\u9996\u5e02 (\u6e58\u897f\u571f\u5bb6\u65cf \u82d7\u65cf\u81ea\u6cbb\u5dde)"},744:{sn:"Zhangjiajie",ln:"Zhangjiajie \u5f20\u5bb6\u754c\u5e02"},745:{sn:"Huaihua",
ln:"Huaihua \u6000\u5316\u5e02"},746:{sn:"Yongzhou",ln:"Yongzhou \u6c38\u5dde\u5e02"},750:{sn:"Jiangmen",ln:"Jiangmen \u6c5f\u95e8\u5e02"},751:{sn:"Shaoguan",ln:"Shaoguan \u97f6\u5173\u5e02"},752:{sn:"Huizhou",ln:"Huizhou \u60e0\u5dde\u5e02"},753:{sn:"Meizhou",ln:"Meizhou \u6885\u5dde\u5e02"},754:{sn:"Shantou",ln:"Chaoyang \u6f6e\u9633\u5e02, Shantou \u6c55\u5934\u5e02"},755:{sn:"Shenzhen",ln:"Shenzhen \u6df1\u5733\u5e02"},756:{sn:"Zhuhai",ln:"Zhuhai \u73e0\u6d77\u5e02"},757:{sn:"Foshan",ln:"Foshan \u4f5b\u5c71\u5e02, Shunde \u987a\u5fb7\u5e02"},
758:{sn:"Zhaoqing",ln:"Zhaoqing \u8087\u5e86\u5e02"},759:{sn:"Zhanjiang",ln:"Zhanjiang \u6e5b\u6c5f\u5e02"},760:{sn:"Zhongshan",ln:"Zhongshan \u4e2d\u5c71\u5e02"},762:{sn:"Heyuan",ln:"Heyuan \u6cb3\u6e90\u5e02"},763:{sn:"Qingyuan",ln:"Qingyuan \u6e05\u8fdc\u5e02"},766:{sn:"Yunfu",ln:"Yunfu \u4e91\u6d6e\u5e02"},768:{sn:"Chaozhou",ln:"Chaozhou \u6f6e\u5dde\u5e02"},769:{sn:"Dongguan",ln:"Dongguan \u4e1c\u839e\u5e02"},770:{sn:"Fangchenggang",ln:"Fangchenggang \u9632\u57ce\u6e2f\u5e02"},771:{sn:"Nanning",
ln:"Nanning \u5357\u5b81\u5e02"},772:{sn:"Liuzhou",ln:"Liuzhou \u67f3\u5dde\u5e02"},773:{sn:"Guilin",ln:"Guilin \u6842\u6797\u5e02"},774:{sn:"Wuzhou",ln:"Wuzhou \u68a7\u5dde\u5e02"},775:{sn:"Yulin",ln:"Yulin \u7389\u6797\u5e02"},776:{sn:"Baise",ln:"Baise \u767e\u8272\u5e02 (\u767e\u8272\u5730\u533a)"},777:{sn:"Qinzhou",ln:"Qinzhou \u94a6\u5dde\u5e02"},778:{sn:"Hechi",ln:"Hechi \u6cb3\u6c60\u5e02 (\u6cb3\u6c60\u5730\u533a)"},779:{sn:"Beihai",ln:"Beihai \u5317\u6d77\u5e02"},790:{sn:"Xinyu",ln:"Xinyu \u65b0\u4f59\u5e02"},
791:{sn:"Nanchang",ln:"Nanchang \u5357\u660c\u5e02"},792:{sn:"Jiujiang",ln:"Jiujiang \u4e5d\u6c5f\u5e02"},793:{sn:"Shangrao",ln:"Shangrao \u4e0a\u9976\u5e02"},794:{sn:"Fuzhou",ln:"Fuzhou \u629a\u5dde\u5e02"},795:{sn:"Yichun",ln:"Yichun \u5b9c\u6625\u5e02"},796:{sn:"JiAn",ln:"JiAn \u5409\u5b89\u5e02"},797:{sn:"Ganzhou",ln:"Ganzhou \u8d63\u5dde\u5e02"},798:{sn:"Jingdezhen",ln:"Jingdezhen \u666f\u5fb7\u9547\u5e02"},799:{sn:"Pingxiang",ln:"Pingxiang \u840d\u4e61\u5e02"},812:{sn:"Panzhihua",ln:"Panzhihua \u6500\u679d\u82b1\u5e02"},
813:{sn:"Zigong",ln:"Zigong \u81ea\u8d21\u5e02"},816:{sn:"Mianyang",ln:"Mianyang \u7ef5\u9633\u5e02"},817:{sn:"Nanchong",ln:"Nanchong \u5357\u5145\u5e02"},818:{sn:"Dazhou",ln:"Dazhou \u8fbe\u5dde\u5e02"},825:{sn:"Suining",ln:"Suining \u9042\u5b81\u5e02"},826:{sn:"GuangAn",ln:"GuangAn \u5e7f\u5b89\u5e02"},827:{sn:"Bazhong",ln:"Bazhong \u5df4\u4e2d\u5e02"},830:{sn:"Luzhou",ln:"Luzhou \u6cf8\u5dde\u5e02"},831:{sn:"Yibin",ln:"Yibin \u5b9c\u5bbe\u5e02"},832:{sn:"Neijiang",ln:"Neijiang \u5185\u6c5f\u5e02, Ziyang \u8d44\u9633\u5e02"},
833:{sn:"Leshan",ln:"Leshan \u4e50\u5c71\u5e02"},834:{sn:"Xichang",ln:"Xichang \u897f\u660c\u5e02(\u51c9\u5c71 \u5f5d\u65cf\u81ea\u6cbb\u5dde)"},835:{sn:"YaAn",ln:"YaAn \u96c5\u5b89\u5e02"},836:{sn:"Kangding",ln:"Kangding \u5eb7\u5b9a\u53bf(\u7518\u5b5c \u85cf\u65cf\u81ea\u6cbb\u5dde)"},837:{sn:"MaErkang",ln:"MaErkang \u9a6c\u5c14\u5eb7\u53bf (\u963f\u575d\u85cf\u65cf \u7f8c\u65cf\u81ea\u6cbb\u5dde)"},838:{sn:"Deyang",ln:"Deyang \u5fb7\u9633\u5e02"},839:{sn:"Guangyuan",ln:"Guangyuan \u5e7f\u5143\u5e02"},
851:{sn:"Guiyang",ln:"Guiyang \u8d35\u9633\u5e02"},852:{sn:"Zunyi",ln:"Zunyi \u9075\u4e49\u5e02"},853:{sn:"Anshun",ln:"Anshun \u5b89\u987a\u5e02 (\u5b89\u987a\u5730\u533a)"},854:{sn:"Duyun",ln:"Duyun \u90fd\u5300\u5e02 (\u9ed4\u5357\u5e03\u4f9d\u65cf \u82d7\u65cf\u81ea\u6cbb\u5dde)"},855:{sn:"Kaili",ln:"Kaili \u51ef\u91cc\u5e02 (\u9ed4\u4e1c\u5357\u82d7\u65cf \u4f97\u65cf\u81ea\u6cbb\u5dde   )"},856:{sn:"Tongren",ln:"Tongren \u94dc\u4ec1\u5e02 (\u94dc\u4ec1\u5730\u533a)"},857:{sn:"Bijie",ln:"Bijie \u6bd5\u8282\u5e02 (\u6bd5\u8282\u5730\u533a)"},
858:{sn:"Liupanshui",ln:"Liupanshui \u516d\u76d8\u6c34\u5e02"},859:{sn:"Xingyi",ln:"Xingyi \u5174\u4e49\u5e02 (\u9ed4\u897f\u5357\u5e03\u4f9d\u65cf \u82d7\u65cf\u81ea\u6cbb\u5dde)"},870:{sn:"Zhaotong",ln:"Zhaotong \u662d\u901a\u5e02 (\u662d\u901a\u5730\u533a)"},871:{sn:"Kunming",ln:"Kunming \u6606\u660e\u5e02"},872:{sn:"Dali",ln:"Dali \u5927\u7406\u5e02(\u5927\u7406 \u767d\u65cf\u81ea\u6cbb\u5dde)"},873:{sn:"Gejiu",ln:"Gejiu \u4e2a\u65e7\u5e02 (\u7ea2\u6cb3\u54c8\u5c3c\u65cf \u5f5d\u65cf\u81ea\u6cbb\u5dde)"},
874:{sn:"Qujing",ln:"Qujing \u66f2\u9756\u5e02"},875:{sn:"Baoshan",ln:"Baoshan \u4fdd\u5c71\u5e02"},876:{sn:"Wenshan",ln:"Wenshan \u6587\u5c71\u53bf (\u6587\u5c71\u58ee\u65cf \u82d7\u65cf\u81ea\u6cbb\u5dde)"},877:{sn:"Yuxi",ln:"Yuxi \u7389\u6eaa\u5e02"},878:{sn:"Chuxiong",ln:"Chuxiong \u695a\u96c4\u5e02(\u695a\u96c4 \u5f5d\u65cf\u81ea\u6cbb\u5dde )"},879:{sn:"Simao",ln:"Simao \u601d\u8305\u5e02 (\u601d\u8305\u5730\u533a)"},883:{sn:"Lincang",ln:"Lincang \u4e34\u6ca7\u53bf (\u4e34\u6ca7\u5730\u533a)"},
886:{sn:"Liuku",ln:"Liuku \u516d\u5e93\u5e02(\u6012\u6c5f \u5088\u5088\u65cf\u81ea\u6cbb\u5dde)"},887:{sn:"Zhongdian",ln:"Zhongdian \u4e2d\u7538\u53bf(\u8fea\u5e86 \u85cf\u65cf\u81ea\u6cbb\u5dde)"},888:{sn:"Lijiang",ln:"Lijiang \u4e3d\u6c5f\u7eb3\u897f\u65cf \u81ea\u6cbb\u53bf (\u4e3d\u6c5f\u5730\u533a)"},891:{sn:"Lhasa",ln:"Lhasa \u62c9\u8428\u5e02"},892:{sn:"Rikaze",ln:"Rikaze \u65e5\u5580\u5219\u5e02 (\u65e5\u5580\u5219\u5730\u533a)"},893:{sn:"Naidong",ln:"Naidong \u4e43\u4e1c\u53bf (\u5c71\u5357\u5730\u533a)"},
894:{sn:"Linzhi",ln:"Linzhi \u6797\u829d\u53bf (\u6797\u829d\u5730\u533a)"},895:{sn:"Changdu",ln:"Changdu \u660c\u90fd\u53bf (\u660c\u90fd\u5730\u533a)"},896:{sn:"Naqu",ln:"Naqu \u90a3\u66f2\u53bf (\u90a3\u66f2\u5730\u533a)"},897:{sn:"GeEr",ln:"GeEr \u5676\u5c14\u53bf (\u963f\u91cc\u5730\u533a)"},898:{sn:"Haikou",ln:"Haikou \u6d77\u53e3\u5e02"},901:{sn:"Tacheng",ln:"Tacheng \u5854\u57ce\u5e02"},902:{sn:"Hami",ln:"Hami \u54c8\u5bc6\u5e02 (\u54c8\u5bc6\u5730\u533a)"},903:{sn:"Hetian",ln:"Hetian \u548c\u7530\u5e02 (\u548c\u7530\u5730\u533a)"},
906:{sn:"Aletai",ln:"Aletai \u963f\u52d2\u6cf0\u5e02"},908:{sn:"Atushi",ln:"Atushi \u963f\u56fe\u4ec0\u5e02 (\u514b\u5b5c\u52d2\u82cf\u67ef\u5c14 \u514b\u5b5c\u81ea\u6cbb\u5dde)"},909:{sn:"Bole",ln:"Bole \u535a\u4e50\u5e02 (\u535a\u5c14\u5854\u62c9 \u8499\u53e4\u81ea\u6cbb\u5dde)"},911:{sn:"YanAn",ln:"YanAn \u5ef6\u5b89\u5e02"},912:{sn:"Yulin",ln:"Yulin \u6986\u6797\u5e02"},913:{sn:"Weinan",ln:"Weinan \u6e2d\u5357\u5e02"},914:{sn:"Shangzhou",ln:"Shangzhou \u5546\u5dde\u5e02 (\u5546\u5357\u5730\u533a)"},
915:{sn:"Ankang",ln:"Ankang \u5b89\u5eb7\u5e02 (\u5b89\u5eb7\u5730\u533a)"},916:{sn:"Hanzhong",ln:"Hanzhong \u6c49\u4e2d\u5e02"},917:{sn:"Baoji",ln:"Baoji \u5b9d\u9e21\u5e02"},919:{sn:"Tongchuan",ln:"Tongchuan \u94dc\u5ddd\u5e02"},930:{sn:"Linxia",ln:"Linxia \u4e34\u590f\u5e02(\u4e34\u590f \u56de\u65cf\u81ea\u6cbb\u5dde)"},931:{sn:"Lanzhou",ln:"Lanzhou \u5170\u5dde\u5e02"},932:{sn:"Dingxi",ln:"Dingxi \u5b9a\u897f\u53bf (\u5b9a\u897f\u5730\u533a)"},933:{sn:"Pingliang",ln:"Pingliang \u5e73\u51c9\u5e02 (\u5e73\u51c9\u5730\u533a)"},
934:{sn:"Xifeng",ln:"Xifeng \u897f\u5cf0\u5e02 (\u5e86\u9633\u5730\u533a)"},935:{sn:"Jinchang",ln:"Jinchang \u91d1\u660c\u5e02"},936:{sn:"Zhangye",ln:"Zhangye \u5f20\u6396\u5e02 (\u5f20\u6396\u5730\u533a)"},937:{sn:"Jiuquan",ln:"Jiuquan \u9152\u6cc9\u5e02 (\u9152\u6cc9\u5730\u533a)"},938:{sn:"Tianshui",ln:"Tianshui \u5929\u6c34\u5e02"},939:{sn:"Wudu",ln:"Wudu \u6b66\u90fd\u53bf (\u9647\u5357\u5730\u533a)"},941:{sn:"Hezuo",ln:"Hezuo \u5408\u4f5c\u5e02(\u7518\u5357 \u85cf\u65cf\u81ea\u6cbb\u5dde)"},
943:{sn:"Baiyin",ln:"Baiyin \u767d\u94f6\u5e02"},951:{sn:"Yinchuan",ln:"Yinchuan \u94f6\u5ddd\u5e02"},952:{sn:"Shizuishan",ln:"Shizuishan \u77f3\u5634\u5c71\u5e02"},953:{sn:"Wuzhong",ln:"Wuzhong \u5434\u5fe0\u5e02"},954:{sn:"Guyuan",ln:"Guyuan \u56fa\u539f\u53bf (\u56fa\u539f\u5730\u533a)"},955:{sn:"Zhongwei",ln:"Zhongwei \u4e2d\u536b\u5e02\u3001\u4e2d\u5b81\u53bf\u3001\u6d77\u539f\u53bf (\u4e2d\u536b\u5730\u533a)"},970:{sn:"Haiyan",ln:"Haiyan \u6d77\u664f\u53bf(\u6d77\u5317 \u85cf\u65cf\u81ea\u6cbb\u5dde)"},
971:{sn:"Xining",ln:"Xining \u897f\u5b81\u5e02"},972:{sn:"PingAn",ln:"PingAn \u5e73\u5b89\u53bf (\u6d77\u4e1c\u5730\u533a)"},973:{sn:"Tongren",ln:"Tongren \u540c\u4ec1\u53bf(\u9ec4\u5357 \u85cf\u65cf\u81ea\u6cbb\u5dde)"},974:{sn:"Gonghe",ln:"Gonghe \u5171\u548c\u53bf(\u6d77\u5357 \u85cf\u65cf\u81ea\u6cbb\u5dde)"},975:{sn:"Maqin",ln:"Maqin \u739b\u6c81\u53bf(\u679c\u6d1b \u85cf\u65cf\u81ea\u6cbb\u5dde)"},976:{sn:"Yushu",ln:"Yushu \u7389\u6811\u53bf(\u7389\u6811 \u85cf\u65cf\u81ea\u6cbb\u5dde)"},977:{sn:"Delingha",
ln:"Delingha \u5fb7\u4ee4\u54c8\u5e02 (\u6d77\u897f\u8499\u53e4\u65cf \u85cf\u65cf\u81ea\u6cbb\u5dde)"},979:{sn:"GeErmu",ln:"GeErmu \u683c\u5c14\u6728\u5e02"},990:{sn:"Kalamayi",ln:"Kalamayi \u514b\u62c9\u739b\u4f9d\u5e02"},991:{sn:"Urumchi",ln:"Urumchi \u4e4c\u9c81\u6728\u9f50"},992:{sn:"Kuitun",ln:"Kuitun \u594e\u5c6f\u5e02"},993:{sn:"Shihezi",ln:"Shihezi \u77f3\u6cb3\u5b50\u5e02"},994:{sn:"Changji",ln:"Changji \u660c\u5409\u5e02(\u660c\u5409 \u56de\u65cf\u81ea\u6cbb\u5dde)"},995:{sn:"Tulufan",
ln:"Tulufan \u5410\u9c81\u756a\u5e02 (\u5410\u9c81\u756a\u5730\u533a)"},996:{sn:"KuErle",ln:"KuErle \u5e93\u5c14\u52d2\u5e02 (\u5df4\u97f3\u90ed\u695e \u8499\u53e4\u81ea\u6cbb\u5dde)"},997:{sn:"Akesu",ln:"Akesu \u963f\u514b\u82cf\u5e02 (\u963f\u514b\u82cf\u5730\u533a)"},998:{sn:"Kashi",ln:"Kashi \u5580\u4ec0\u5e02 (\u5580\u4ec0\u5730\u533a)"},999:{sn:"Yining",ln:"Yining \u4f0a\u5b81\u5e02(\u4f0a\u7281 \u54c8\u8428\u514b\u81ea\u6cbb\u5dde)"},8029:{sn:"Zhongba",ln:"Zhongba \u4ef2\u5df4\u53bf"},8060:{sn:"Pulan",
ln:"Pulan \u666e\u5170\u53bf"},8063:{sn:"Jiali",ln:"Jiali \u5609\u9ece\u53bf"},8065:{sn:"Nierong",ln:"Nierong \u8042\u8363\u53bf"},8067:{sn:"Bange",ln:"Bange \u73ed\u6208\u53bf"},8068:{sn:"Shenzha",ln:"Shenzha \u7533\u624e\u53bf"},8070:{sn:"Shuanghu",ln:"Shuanghu \u53cc\u6e56"},8071:{sn:"Zhada",ln:"Zhada \u624e\u8fbe\u53bf"},8078:{sn:"Suoxian",ln:"Suoxian \u7d22\u53bf"},8081:{sn:"Nima",ln:"Nima \u5c3c\u739b\u53bf"}};
ilib.data.area_TW={2:{sn:"Panchiao, Sanchung, Taipei, Yingge, Yungho, Jilong"},3:{sn:"Tachi, Taoyuan"},4:{sn:"Wuri, Wufeng, Shalong, Zhanghua, Yuanlin"},5:{sn:"Dalin, Jiayi, Minxiong, Beigang"},6:{sn:"Makung, Shanhua"},7:{sn:"Fengshan, Gangshan, Kaohsiung, Jiuqutang, Nanzi, Qishan, Zuoying"},8:{sn:"Chaozhou, Pingdong, Mazu"},32:{sn:"Ruifang"},33:{sn:"Daxi"},34:{sn:"Chungli"},35:{sn:"Xinzhu, Zhubei"},36:{sn:"Hukou, Zhudong"},37:{sn:"Zhunan, Miaoli"},38:{sn:"Hualian"},39:{sn:"Jiaoqi, Su'ao, Yilan, Luodong"},
42:{sn:"Taichung"},43:{sn:"Taichung"},44:{sn:"Taichung"},45:{sn:"Fengyuan, Houli"},46:{sn:"Dadu, Dajia, Shalu, Qingshui, Rinan, Wuchi"},47:{sn:"Lugang"},48:{sn:"Shetou, Tianzhong, Yongjing"},49:{sn:"Buli, Nantou, Riyuetan, Xincun, Zhongxing"},55:{sn:"Touliu"},56:{sn:"Huwei"},62:{sn:"Tainan"},66:{sn:"Xinying"},67:{sn:"Chiali"},69:{sn:"Penghu"},88:{sn:"Donggang"},89:{sn:"Taidong"},458:{sn:"Lishan"},823:{sn:"Jinmen"},826:{sn:"Wu-chiu"},827:{sn:"Tung-Sha Island"}};
ilib.data.extarea_AU={27:{sn:"Sydney",ln:"Sydney"},28:{sn:"Sydney",ln:"Sydney"},29:{sn:"Sydney",ln:"Sydney"},37:{sn:"Melbourne",ln:"Melbourne"},38:{sn:"Melbourne",ln:"Melbourne"},39:{sn:"Melbourne",ln:"Melbourne"},72:{sn:"Brisbane",ln:"Brisbane, Bribie Island"},73:{sn:"Brisbane",ln:"Brisbane, Bribie Island"},233:{sn:"Central Coast",ln:"Gosford, Central Coast"},237:{sn:"Armidale, Tamworth, Northern Tablelands",ln:"Armidale, Tamworth, Northern Tablelands"},238:{sn:"Bowral",ln:"Bowral, Crookwell, Goulburn, Marulan"},
239:{sn:"Griffith, Wagga Wagga, Riverina",ln:"Griffith, Wagga Wagga, Riverina"},240:{sn:"Lower Hunter",ln:"Newcastle, Lower Hunter"},241:{sn:"Lower Hunter",ln:"Newcastle, Lower Hunter"},242:{sn:"Wollongong",ln:"Wollongong"},243:{sn:"Central Coast",ln:"Gosford, Central Coast"},244:{sn:"Nowra",ln:"Moruya, Nowra"},245:{sn:"Windsor",ln:"Windsor, Richmond"},246:{sn:"Campbelltown",ln:"Campbelltown"},247:{sn:"Blue Mountains",ln:"Penrith, Blue Mountains"},248:{sn:"Bowral",ln:"Bowral, Crookwell, Goulburn, Marulan"},
249:{sn:"Lower Hunter",ln:"Newcastle, Lower Hunter"},250:{sn:"Albury",ln:"Albury, Corryong, Wodonga"},251:{sn:"Canberra",ln:"Canberra, Queanbeyan, Yass"},252:{sn:"Canberra",ln:"Canberra, Queanbeyan, Yass"},253:{sn:"Bathurst",ln:"Bathurst, Orange"},254:{sn:"Bega, Merimbula, Tathra, Cooma",ln:"Bega, Merimbula, Tathra, Cooma"},255:{sn:"Kempsey",ln:"Kempsey, Taree, Lord Howe Island, Muswellbrook"},256:{sn:"Grafton",ln:"Coffs Harbour, Grafton, Lismore"},257:{sn:"Armidale",ln:"Armidale, Tamworth, Northern Tablelands"},
258:{sn:"Far West",ln:"Bourke, Dubbo, Far West"},259:{sn:"Griffith",ln:"Griffith, Wagga Wagga, Riverina"},260:{sn:"Albury",ln:"Albury, Corryong, Wodonga"},261:{sn:"Canberra",ln:"Canberra, Queanbeyan, Yass"},262:{sn:"Canberra",ln:"Canberra, Queanbeyan, Yass"},263:{sn:"Bathurst",ln:"Bathurst, Orange"},264:{sn:"Cooma",ln:"Bega, Cooma"},265:{sn:"Kempsey",ln:"Kempsey, Taree, Lord Howe Island, Muswellbrook"},266:{sn:"Grafton",ln:"Coffs Harbour, Grafton, Lismore"},267:{sn:"Armidale",ln:"Armidale, Glen Innes, Gunnedah, Inverell, Moree, Narrabri, Tamworth"},
268:{sn:"Far West",ln:"Bourke, Dubbo, Far West"},269:{sn:"Griffith",ln:"Griffith, Wagga Wagga, Riverina"},270:{sn:"Sydney",ln:"Sydney"},273:{sn:"Sydney",ln:"Sydney South / South East"},274:{sn:"Sydney",ln:"Avalon Beach, Dural, Sydney Northern Beaches"},275:{sn:"Sydney",ln:"Sydney Sutherland Shire, Sydney South West"},277:{sn:"Sydney",ln:"Sydney Liverpool, Sydney West"},278:{sn:"Sydney",ln:"Sydney Blacktown, Sydney North West"},280:{sn:"Sydney",ln:"Sydney City Centre"},281:{sn:"Sydney",ln:"Sydney Liverpool, Sydney West"},
282:{sn:"Sydney",ln:"Sydney City Centre"},283:{sn:"Sydney",ln:"Sydney South / South East"},284:{sn:"Sydney",ln:"Sydney Northern Beaches, Avalon Beach, Dural"},285:{sn:"Sydney",ln:"Sutherland Shire, Sydney South West"},286:{sn:"Sydney",ln:"Sydney Blacktown, Sydney City Centre, Sydney North West"},287:{sn:"Sydney",ln:"Sydney West, Liverpool"},288:{sn:"Sydney",ln:"Sydney North West, Blacktown"},289:{sn:"Sydney",ln:"Avalon Beach, Dural, Sydney City Centre, Northern Beaches"},290:{sn:"Sydney",ln:"Sydney City Centre"},
291:{sn:"Sydney",ln:"Sydney"},292:{sn:"Sydney",ln:"Sydney City Centre"},293:{sn:"Sydney",ln:"Sydney South / South East"},294:{sn:"Avalon Beach",ln:"Avalon Beach, Dural, Sydney North, Sydney Northern Beaches"},295:{sn:"Sydney",ln:"Sydney Sutherland Shire, Sydney South West, Sydney South East"},296:{sn:"Sydney",ln:"Sydney West"},297:{sn:"Sydney",ln:"Sydney Liverpool, Sydney West"},298:{sn:"Blacktown",ln:"Blacktown, Sydney Northwest, Sydney Liverpool"},299:{sn:"Sydney",ln:"Avalon Beach, Dural, Sydney North, Sydney City Centre, Sydney Northern Beaches"},
332:{sn:"Geelong, Colac",ln:"Geelong, Colac"},333:{sn:"Ballarat",ln:"Ballarat"},334:{sn:"Bendigo",ln:"Bendigo"},340:{sn:"Mildura",ln:"Mildura, Balranald"},341:{sn:"Bairnsdale",ln:"Bairnsdale"},342:{sn:"Colac",ln:"Colac, Geelong"},343:{sn:"Ballarat",ln:"Ballarat"},344:{sn:"Bendigo",ln:"Bendigo"},345:{sn:"Warrnambool",ln:"Warrnambool"},347:{sn:"Wangaratta",ln:"Wangaratta"},348:{sn:"Deniliquin",ln:"Deniliquin, Numurkah, Shepparton"},349:{sn:"Mornington",ln:"Mornington"},350:{sn:"Mildura",ln:"Mildura, Balranald"},
351:{sn:"Bairnsdale",ln:"Bairnsdale"},352:{sn:"Colac, Geelong",ln:"Colac, Geelong"},353:{sn:"Ballarat",ln:"Ballarat"},354:{sn:"Bendigo",ln:"Bendigo"},355:{sn:"Warrnambool",ln:"Warrnambool"},356:{sn:"Foster",ln:"Foster, Warragul, Drouin"},357:{sn:"Wangaratta",ln:"Wangaratta"},358:{sn:"Deniliquin",ln:"Deniliquin, Shepparton"},359:{sn:"Mornington",ln:"Mornington, Pakenham, Rosebud"},361:{sn:"Hobart",ln:"Hobart"},362:{sn:"Hobart",ln:"Hobart"},363:{sn:"Launceston",ln:"Launceston"},364:{sn:"Devonport",
ln:"Devonport, Burnie, Queenstown"},365:{sn:"Devonport",ln:"Devonport, Burnie, Queenstown"},367:{sn:"Launceston",ln:"Launceston"},370:{sn:"Melbourne",ln:"Melbourne"},371:{sn:"Melbourne",ln:"Melbourne Outer North, Kalkallo, Whittlesea, Melbourne"},372:{sn:"Croydon",ln:"Croydon, Melbourne, Outer East"},373:{sn:"Melbourne",ln:"Melbourne West"},375:{sn:"Melbourne",ln:"Melbourne South East"},377:{sn:"Melbourne",ln:"Melbourne Outer West, Sunbury, Melbourne"},378:{sn:"Melbourne",ln:"Melbourne East"},379:{sn:"Melbourne",
ln:"Melbourne Outer South East, Dandenong"},380:{sn:"Melbourne",ln:"Melbourne Outer West, Sunbury, Melbourne"},381:{sn:"Melbourne",ln:"Melbourne Outer North, Kalkallo, Whittlesea, Melbourne"},382:{sn:"Melbourne",ln:"Melbourne Outer East, Croydon"},383:{sn:"Melbourne",ln:"Melbourne West"},384:{sn:"Melbourne",ln:"Melbourne North East"},385:{sn:"Melbourne",ln:"Melbourne South East"},386:{sn:"Melbourne",ln:"Melbourne City & South"},387:{sn:"Melbourne",ln:"Croydon, Dandenong, Kalkallo, Sunbury, Werribee, Whittlesea, Melbourne East"},
388:{sn:"Melbourne",ln:"Melbourne East"},389:{sn:"Melbourne",ln:"Dandenong, Melbourne Outer South East"},390:{sn:"Melbourne",ln:"Melbourne City & South"},391:{sn:"Melbourne",ln:"Melbourne City & South"},392:{sn:"Melbourne",ln:"Melbourne"},393:{sn:"Melbourne",ln:"Melbourne West"},394:{sn:"Melbourne",ln:"Melbourne North East"},395:{sn:"Melbourne",ln:"Melbourne South East"},396:{sn:"Melbourne",ln:"Melbourne City & South"},397:{sn:"Melbourne East",ln:"Croydon, Dandenong, Kalkallo, Sunbury, Werribee, Whittlesea, Melbourne East"},
398:{sn:"Melbourne",ln:"Melbourne East"},399:{sn:"Melbourne",ln:"Melbourne"},704:{sn:"Brisbane Southeast",ln:"Brisbane Southeast"},721:{sn:"Brisbane",ln:"Brisbane"},722:{sn:"Brisbane",ln:"Brisbane City Centre"},724:{sn:"Brisbane Southeast",ln:"Brisbane Southeast"},728:{sn:"Brisbane",ln:"Beenleigh, Brisbane Southeast, Cleveland, Ipswich, Redcliffe, Samford, Brisbane City Centre"},730:{sn:"Brisbane",ln:"Beenleigh, Brisbane Southeast, Cleveland, Ipswich, Redcliffe, Samford, Brisbane City Centre"},731:{sn:"Brisbane",
ln:"Brisbane"},734:{sn:"Brisbane",ln:"Beenleigh, Cleveland, Ipswich, Redcliffe, Samford, Brisbane Southeast"},735:{sn:"Brisbane North/Northwest",ln:"Brisbane North/Northwest"},736:{sn:"Brisbane Northeast",ln:"Brisbane Northeast"},737:{sn:"Brisbane",ln:"Brisbane West/South West"},739:{sn:"Brisbane",ln:"Brisbane East"},740:{sn:"Far North Queensland",ln:"Cairns, Far North Queensland"},741:{sn:"Bundaberg",ln:"Bundaberg, Kingaroy"},742:{sn:"Cairns",ln:"Cairns"},743:{sn:"Bundaberg",ln:"Bundaberg, Kingaroy"},
744:{sn:"Townsville",ln:"Townsville"},745:{sn:"Toowoomba",ln:"Toowoomba, Roma, Southwest Australia"},746:{sn:"Toowoomba",ln:"Toowoomba, Roma, Southwest Australia"},747:{sn:"Townsville",ln:"Townsville"},748:{sn:"Rockhampton",ln:"Rockhampton, Mackay"},749:{sn:"Rockhampton",ln:"Rockhampton, Mackay"},752:{sn:"Sunshine Coast",ln:"Sunshine Coast, Esk, Nambour, Gatton, Caboolture"},753:{sn:"Sunshine Coast",ln:"Sunshine Coast, Esk, Nambour, Gatton, Caboolture"},754:{sn:"Sunshine Coast",ln:"Sunshine Coast, Esk, Nambour, Gatton, Caboolture"},
755:{sn:"Gold Coast",ln:"Gold Coast, Beaudesert"},756:{sn:"Gold Coast",ln:"Gold Coast, Beaudesert"},757:{sn:"Gold Coast",ln:"Gold Coast, Beaudesert"},770:{sn:"North-east",ln:"North-eastern Australia (QLD)"},775:{sn:"Inglewood, Toowoomba",ln:"Inglewood, Toowoomba"},776:{sn:"Inglewood",ln:"Inglewood, Toowoomba"},777:{sn:"Townsville, North Queensland",ln:"Townsville, North Queensland"},779:{sn:"Rockhampton, Mackay, Gladstone",ln:"Rockhampton, Mackay, Gladstone"},825:{sn:"Riverland, Murraylands",ln:"Riverland, Murraylands"},
826:{sn:"Ceduna",ln:"Ceduna"},851:{sn:"Port Hedland",ln:"Port Hedland"},852:{sn:"Perth",ln:"Perth"},853:{sn:"Perth",ln:"Perth"},854:{sn:"Perth",ln:"Perth"},855:{sn:"Perth",ln:"Perth"},858:{sn:"Albany",ln:"Albany"},860:{sn:"Perth",ln:"Bruce Rock, Great Victoria, Kalgoorlie, Merredin, Perth"},861:{sn:"Perth",ln:"Perth"},862:{sn:"Perth",ln:"Perth"},863:{sn:"Perth",ln:"Perth"},864:{sn:"Perth",ln:"Perth"},865:{sn:"Perth",ln:"Perth"},866:{sn:"Moora",ln:"Moora"},867:{sn:"Bridgetown",ln:"Bridgetown, Bunbury"},
868:{sn:"Albany",ln:"Albany"},869:{sn:"Geraldton",ln:"Geraldton"},870:{sn:"Adelaide",ln:"Adelaide"},871:{sn:"Adelaide",ln:"Adelaide"},872:{sn:"Adelaide",ln:"Adelaide"},873:{sn:"Adelaide",ln:"Adelaide"},874:{sn:"Adelaide",ln:"Adelaide"},875:{sn:"Riverland",ln:"Riverland, Murraylands"},876:{sn:"Ceduna",ln:"Ceduna"},877:{sn:"Southeast",ln:"Southeast Australia"},878:{sn:"Mid North",ln:"Mid North Australia"},879:{sn:"Northern Territory",ln:"Northern Territory (Alice Springs, Darwin)"},880:{sn:"Broken Hill",
ln:"Broken Hill"},881:{sn:"Adelaide",ln:"Adelaide"},882:{sn:"Adelaide",ln:"Adelaide"},883:{sn:"Adelaide",ln:"Adelaide"},884:{sn:"Adelaide",ln:"Adelaide"},885:{sn:"Riverland",ln:"Riverland, Murraylands"},886:{sn:"Ceduna",ln:"Ceduna"},887:{sn:"Southeast",ln:"Southeast"},888:{sn:"Mid North",ln:"Mid North"},889:{sn:"Northern Territory",ln:"Northern Territory (Alice Springs, Darwin)"},890:{sn:"Kalgoorlie",ln:"Kalgoorlie"},891:{sn:"Derby",ln:"Derby (including Cocos & Christmas Islands)"},892:{sn:"Perth",
ln:"Perth"},893:{sn:"Perth",ln:"Perth"},894:{sn:"Perth",ln:"Perth"},895:{sn:"Bullsbrook East",ln:"Bullsbrook East"},896:{sn:"Moora",ln:"Moora"},897:{sn:"Bridgetown",ln:"Bridgetown"},898:{sn:"Albany",ln:"Albany"},899:{sn:"Geraldton",ln:"Geraldton"},2913:{sn:"Sydney",ln:"Sydney South / South East"},2914:{sn:"Sydney",ln:"Sydney North"},2915:{sn:"Sydney",ln:"Sydney South West"},2918:{sn:"Sydney",ln:"Sydney North West"},2960:{sn:"Sydney",ln:"Sydney Liverpool"},2961:{sn:"Sydney",ln:"Sydney Liverpool"},
2962:{sn:"Sydney",ln:"Sydney Blacktown"},2965:{sn:"Sydney",ln:"Sydney Dural"},2966:{sn:"Sydney",ln:"Sydney City Centre"},7320:{sn:"Brisbane",ln:"Beenleigh, Cleveland, Ipswich, Redcliffe, Samford, Brisbane"},7321:{sn:"Brisbane",ln:"Brisbane"},7322:{sn:"Brisbane",ln:"Brisbane City Centre"},7323:{sn:"Brisbane",ln:"Brisbane City Centre"},7324:{sn:"Brisbane Southeast",ln:"Brisbane Southeast"},7325:{sn:"Brisbane North/Northwest",ln:"Brisbane North/Northwest"},7326:{sn:"Brisbane North/Northwest",ln:"Brisbane North/Northwest"},
7327:{sn:"Brisbane",ln:"Brisbane West/South West"},7328:{sn:"Brisbane",ln:"Beenleigh, Cleveland, Ipswich, Redcliffe, Samford, Brisbane"},7329:{sn:"Brisbane",ln:"Brisbane East"},7330:{sn:"Brisbane",ln:"Beenleigh, Cleveland, Ipswich, Redcliffe, Samford, Brisbane"},7331:{sn:"Brisbane",ln:"Brisbane"},7332:{sn:"Brisbane",ln:"Brisbane City Centre"},7333:{sn:"Brisbane",ln:"Brisbane City Centre"},7334:{sn:"Brisbane",ln:"Brisbane South East"},7335:{sn:"Brisbane North/Northwest",ln:"Brisbane North/Northwest"},
7336:{sn:"Brisbane Northeast",ln:"Brisbane Northeast"},7337:{sn:"Brisbane",ln:"Brisbane West/South West"},7338:{sn:"Brisbane",ln:"Beenleigh, Cleveland, Ipswich, Redcliffe, Samford, Brisbane"},7339:{sn:"Brisbane",ln:"Brisbane East"},7380:{sn:"Brisbane",ln:"Beenleigh, Cleveland, Ipswich, Redcliffe, Samford, Brisbane"},7381:{sn:"Brisbane",ln:"Brisbane"},7382:{sn:"Brisbane",ln:"Brisbane City Centre"},7383:{sn:"Brisbane",ln:"Brisbane City Centre"},7384:{sn:"Brisbane",ln:"Brisbane South East"},7385:{sn:"Brisbane",
ln:"Brisbane North/North West"},7386:{sn:"Brisbane",ln:"Brisbane North East"},7387:{sn:"Brisbane",ln:"Brisbane West/South West"},7388:{sn:"Brisbane",ln:"Beenleigh, Cleveland, Ipswich, Redcliffe, Samford, Brisbane"},7389:{sn:"Brisbane",ln:"Brisbane East"},8520:{sn:"Perth",ln:"Wanneroo, Perth North/Northwest"},8521:{sn:"Perth",ln:"Perth City & Southwest"},8522:{sn:"Perth",ln:"Perth City & Southwest"},8523:{sn:"Perth",ln:"Perth City & Southwest"},8527:{sn:"Perth",ln:"Perth North East"},8529:{sn:"Perth",
ln:"Armadale, Herne Hill, Kalamunda, Rottnest Island, Spearwood, Perth"},8530:{sn:"Perth",ln:"Wanneroo, Perth North/Northwest"},8531:{sn:"Perth",ln:"Perth City & South West"},8532:{sn:"Perth",ln:"Perth City & South West"},8533:{sn:"Perth",ln:"Perth City & South West"},8537:{sn:"Perth",ln:"Perth North East"},8539:{sn:"Perth",ln:"Armadale, Herne Hill, Kalamunda, Rottnest Island, Spearwood, Perth"},8540:{sn:"Perth",ln:"Wanneroo, Perth North/Northwest"},8541:{sn:"Perth",ln:"Perth City & South West"},
8542:{sn:"Perth",ln:"Perth City & South West"},8543:{sn:"Perth",ln:"Perth City & South West"},8547:{sn:"Perth",ln:"Perth North East"},8549:{sn:"Perth",ln:"Armadale, Herne Hill, Kalamunda, Rottnest Island, Spearwood, Perth"},8610:{sn:"Perth",ln:"Perth Non geographic"},8611:{sn:"Perth",ln:"Perth City & Southwest"},8612:{sn:"Perth",ln:"Perth City & Southwest"},8613:{sn:"Perth",ln:"Perth City & Southwest"},8614:{sn:"Perth",ln:"Perth Non geographic"},8615:{sn:"Perth",ln:"Perth Non geographic"},8616:{sn:"Perth",
ln:"Perth Non geographic"},8617:{sn:"Perth",ln:"Perth Non geographic"},8618:{sn:"Perth",ln:"Perth Non geographic"},8619:{sn:"Perth",ln:"Armadale, Herne Hill, Kalamunda, Rottnest Island, Spearwood, Perth"},8620:{sn:"Perth",ln:"Wanneroo, Perth North/Northwest"},8621:{sn:"Perth",ln:"Perth City & Southwest"},8622:{sn:"Perth",ln:"Perth City & Southwest"},8623:{sn:"Perth",ln:"Perth City & Southwest"},8624:{sn:"Perth",ln:"Perth North/North West"},8625:{sn:"Perth",ln:"Perth East/South East"},8626:{sn:"Perth",
ln:"Perth"},8627:{sn:"Perth",ln:"Perth North East"},8628:{sn:"Perth",ln:"Perth West"},8629:{sn:"Perth",ln:"Armadale, Herne Hill, Kalamunda, Rottnest Island, Spearwood, Perth"},8630:{sn:"Perth",ln:"Wanneroo, Perth North/Northwest"},8631:{sn:"Perth",ln:"Perth City & South West"},8632:{sn:"Perth",ln:"Perth City & South West"},8633:{sn:"Perth",ln:"Perth City & South West"},8634:{sn:"Perth",ln:"Perth North/North West"},8635:{sn:"Perth",ln:"Perth East/South East"},8636:{sn:"Perth",ln:"Perth"},8637:{sn:"Perth",
ln:"Perth North East"},8638:{sn:"Perth",ln:"Perth West"},8639:{sn:"Perth",ln:"Armadale, Herne Hill, Kalamunda, Rottnest Island, Spearwood, Perth"},8640:{sn:"Perth",ln:"Wanneroo, Perth North/Northwest"},8641:{sn:"Perth",ln:"Perth City & South West"},8642:{sn:"Perth",ln:"Perth City & South West"},8643:{sn:"Perth",ln:"Perth City & South West"},8644:{sn:"Perth",ln:"Perth North/North West"},8645:{sn:"Perth",ln:"Perth East/South East"},8646:{sn:"Perth",ln:"Perth"},8647:{sn:"Perth Northeast",ln:"Perth Northeast"},
8648:{sn:"Perth",ln:"Perth West"},8649:{sn:"Perth",ln:"Armadale, Herne Hill, Kalamunda, Rottnest Island, Spearwood, Perth"},8650:{sn:"Perth",ln:"Perth Non geographic"},8654:{sn:"Perth",ln:"Perth Non geographic"},8655:{sn:"Perth",ln:"Perth Non geographic"},8656:{sn:"Perth",ln:"Perth Non geographic"},8657:{sn:"Perth",ln:"Perth Non geographic"},8658:{sn:"Perth",ln:"Perth Non geographic"},8659:{sn:"Perth",ln:"Armadale, Herne Hill, Kalamunda, Rottnest Island, Spearwood, Perth"},8710:{sn:"Adelaide",ln:"Adelaide City Centre"},
8711:{sn:"Adelaide",ln:"Adelaide City Centre"},8712:{sn:"Adelaide",ln:"Adelaide"},8713:{sn:"Adelaide",ln:"Adelaide East"},8714:{sn:"Adelaide",ln:"Adelaide North West"},8715:{sn:"Adelaide",ln:"Adelaide West"},8716:{sn:"Adelaide",ln:"Adelaide North East"},8717:{sn:"Adelaide",ln:"Adelaide South"},8718:{sn:"Adelaide",ln:"McLaren Vale, Mt. Barker, Salisbury, Woodside, Adelaide"},8719:{sn:"Adelaide",ln:"Adelaide South"},8720:{sn:"Adelaide",ln:"Adelaide City Centre"},8721:{sn:"Adelaide",ln:"Adelaide City Centre"},
8722:{sn:"Adelaide",ln:"Adelaide"},8723:{sn:"Adelaide",ln:"Adelaide East"},8724:{sn:"Adelaide",ln:"Adelaide North West"},8725:{sn:"Adelaide",ln:"Adelaide West"},8726:{sn:"Adelaide",ln:"Adelaide North East"},8727:{sn:"Adelaide",ln:"Adelaide South"},8728:{sn:"Adelaide",ln:"McLaren Vale, Mt. Barker, Salisbury, Woodside, Adelaide"},8729:{sn:"Adelaide",ln:"Adelaide South"},8730:{sn:"Adelaide",ln:"Adelaide City Centre"},8731:{sn:"Adelaide",ln:"Adelaide City Centre"},8732:{sn:"Adelaide",ln:"Adelaide"},8733:{sn:"Adelaide",
ln:"Adelaide East"},8734:{sn:"Adelaide",ln:"Adelaide North West"},8735:{sn:"Adelaide",ln:"Adelaide West"},8736:{sn:"Adelaide",ln:"Adelaide North East"},8737:{sn:"Adelaide",ln:"Adelaide South"},8738:{sn:"Adelaide",ln:"McLaren Vale, Mt. Barker, Salisbury, Woodside, Adelaide"},8739:{sn:"Adelaide",ln:"Adelaide South"},8740:{sn:"Adelaide",ln:"Adelaide City Centre"},8741:{sn:"Adelaide",ln:"Adelaide City Centre"},8742:{sn:"Adelaide",ln:"Adelaide"},8743:{sn:"Adelaide",ln:"Adelaide East"},8744:{sn:"Adelaide",
ln:"Adelaide North West"},8745:{sn:"Adelaide",ln:"Adelaide West"},8746:{sn:"Adelaide",ln:"Adelaide North East"},8747:{sn:"Adelaide",ln:"Adelaide South"},8748:{sn:"Adelaide",ln:"McLaren Vale, Mt. Barker, Salisbury, Woodside, Adelaide"},8749:{sn:"Adelaide",ln:"Adelaide South"},8810:{sn:"Adelaide",ln:"Adelaide City Centre"},8811:{sn:"Adelaide",ln:"Adelaide City Centre"},8812:{sn:"Adelaide",ln:"Adelaide"},8813:{sn:"Adelaide",ln:"Adelaide East"},8814:{sn:"Adelaide",ln:"Adelaide North West"},8815:{sn:"Adelaide",
ln:"Adelaide West"},8816:{sn:"Adelaide",ln:"Adelaide North East"},8817:{sn:"Adelaide",ln:"Adelaide South"},8818:{sn:"Adelaide",ln:"McLaren Vale, Mt. Barker, Salisbury, Woodside, Adelaide"},8819:{sn:"Adelaide",ln:"Adelaide South"},8820:{sn:"Adelaide",ln:"Adelaide City Centre"},8821:{sn:"Adelaide",ln:"Adelaide City Centre"},8822:{sn:"Adelaide",ln:"Adelaide"},8823:{sn:"Adelaide",ln:"Adelaide East"},8824:{sn:"Adelaide",ln:"Adelaide North West"},8825:{sn:"Adelaide",ln:"Adelaide West"},8826:{sn:"Adelaide",
ln:"Adelaide North East"},8827:{sn:"Adelaide",ln:"Adelaide South"},8828:{sn:"Adelaide",ln:"McLaren Vale, Mt. Barker, Salisbury, Woodside, Adelaide"},8829:{sn:"Adelaide",ln:"Adelaide South"},8830:{sn:"Adelaide",ln:"Adelaide City Centre"},8831:{sn:"Adelaide",ln:"Adelaide City Centre"},8832:{sn:"Adelaide",ln:"Adelaide"},8833:{sn:"Adelaide",ln:"Adelaide East"},8834:{sn:"Adelaide",ln:"Adelaide North West"},8835:{sn:"Adelaide",ln:"Adelaide West"},8836:{sn:"Adelaide",ln:"Adelaide North East"},8837:{sn:"Adelaide",
ln:"Adelaide South"},8838:{sn:"Adelaide",ln:"McLaren Vale, Mt. Barker, Salisbury, Woodside, Adelaide"},8839:{sn:"Adelaide",ln:"Adelaide North East"},8840:{sn:"Adelaide",ln:"Adelaide City Centre"},8841:{sn:"Adelaide",ln:"Adelaide City Centre"},8842:{sn:"Adelaide",ln:"Adelaide"},8843:{sn:"Adelaide",ln:"Adelaide East"},8844:{sn:"Adelaide",ln:"Adelaide North West"},8845:{sn:"Adelaide",ln:"Adelaide West"},8846:{sn:"Adelaide",ln:"Adelaide North East"},8847:{sn:"Adelaide",ln:"Adelaide South"},8848:{sn:"Adelaide",
ln:"McLaren Vale, Mt. Barker, Salisbury, Woodside, Adelaide"},8849:{sn:"Adelaide",ln:"Adelaide South"},8920:{sn:"Perth",ln:"Wanneroo, Perth North/Northwest"},8921:{sn:"Perth",ln:"Perth City & South West"},8922:{sn:"Perth",ln:"Perth City & South West"},8923:{sn:"Perth",ln:"Perth City & South West"},8924:{sn:"Perth",ln:"Perth North/North West"},8925:{sn:"Perth",ln:"Perth East/South East"},8926:{sn:"Perth",ln:"Perth"},8927:{sn:"Perth",ln:"Perth North East"},8928:{sn:"Perth",ln:"Perth West"},8929:{sn:"Perth",
ln:"Armadale, Herne Hill, Kalamunda, Rottnest Island, Spearwood, Perth"},8930:{sn:"Perth",ln:"Wanneroo, Perth North/Northwest"},8931:{sn:"Perth",ln:"Perth City & South West"},8932:{sn:"Perth",ln:"Perth City & South West"},8933:{sn:"Perth",ln:"Perth City & South West"},8934:{sn:"Perth",ln:"Perth North/North West"},8935:{sn:"Perth",ln:"Perth East/South East"},8936:{sn:"Perth",ln:"Perth"},8937:{sn:"Perth",ln:"Perth North East"},8938:{sn:"Perth",ln:"Perth West"},8939:{sn:"Perth",ln:"Armadale, Herne Hill, Kalamunda, Rottnest Island, Spearwood, Perth"},
8940:{sn:"Perth",ln:"Wanneroo, Perth North/Northwest"},8941:{sn:"Perth",ln:"Perth City & South West"},8942:{sn:"Perth",ln:"Perth City & South West"},8943:{sn:"Perth",ln:"Perth City & South West"},8944:{sn:"Perth",ln:"Perth North/North West"},8945:{sn:"Perth",ln:"Perth East/South East"},8946:{sn:"Perth",ln:"Perth"},8947:{sn:"Perth",ln:"Perth North East"},8948:{sn:"Perth",ln:"Perth West"},8949:{sn:"Perth",ln:"Armadale, Herne Hill, Kalamunda, Rottnest Island, Spearwood, Perth"},25550:{sn:"Fictitious use",
ln:"Fictitious use"},27010:{sn:"Fictitious use",ln:"Fictitious use"},35550:{sn:"Fictitious use",ln:"Fictitious use"},37010:{sn:"Fictitious use",ln:"Fictitious use"},75550:{sn:"Fictitious use",ln:"Fictitious use"},77010:{sn:"Fictitious use",ln:"Fictitious use"},85550:{sn:"Fictitious use",ln:"Fictitious use"},87010:{sn:"Fictitious use",ln:"Fictitious use"},89162:{sn:"Christmas Island",ln:"Christmas Island"},89164:{sn:"Cocos/Keeling Islands",ln:"Cocos/Keeling Islands"}};
ilib.data.extarea_FR={8:{sn:"Service Number",ln:"Service number"},81:{sn:"Toll call",ln:"Toll call at local rates (Num\u00e9ros Azurs)"},82:{sn:"Toll call",ln:"Toll call (Num\u00e9ros Indigos)"},89:{sn:"Audiotel Number",ln:"Audiotel internet online services"},262:{sn:"R\u00e9union",ln:"Islands of R\u00e9union and Mayotte"},269:{sn:"Mayotte",ln:"Islands of R\u00e9union and Mayotte"},508:{sn:"Saint Pierre and Miquelon",ln:"Saint Pierre and Miquelon Islands"},590:{sn:"Guadaloupe",ln:"Guadeloupe, Saint-Barth\u00e9lemy and Saint-Martin Islands"},
594:{sn:"French Guiana",ln:"French Guiana"},596:{sn:"Martinique",ln:"Martinique Island"},639:{sn:"Mobile Number",ln:"Mobile Number in Mayotte"},690:{sn:"Mobile Number",ln:"Mobile Number in Guadeloupe, Saint-Barth\u00e9lemy or Saint-Martin Islands"},692:{sn:"Mobile Number",ln:"Mobile Number in R\u00e9union"},694:{sn:"Mobile Number",ln:"Mobile Number in French Guiana"},696:{sn:"Mobile Number",ln:"Mobile Number in Martinique"},800:{sn:"Toll-free Number",ln:"Toll-free Service (Num\u00e9ros Verts)"},801:{sn:"Toll call",
ln:"Toll call at local rates (Num\u00e9ros Azurs)"},802:{sn:"Toll call",ln:"Toll call (Num\u00e9ros Indigos)"},803:{sn:"Toll call",ln:"Toll call (Num\u00e9ros Indigos)"},805:{sn:"Toll-free Number",ln:"Toll-free Service (Num\u00e9ros Verts)"},809:{sn:"Toll-free Number",ln:"Toll-free Service (Num\u00e9ros Verts)"},819:{sn:"Toll-free Number",ln:"Toll-free Service (Num\u00e9ros Verts)"}};
ilib.data.extarea_JP={3:{sn:"Tokyo",ln:"Tokyo"},6:{sn:"Hy\u014dgo",ln:"Amagasaki, Higashi\u014dsaka, Ibaraki, Ikeda, Osaka, Itami, Kadoma, Moriguchi, Osaka, Settsu, Suita, Toyonaka, Yao, Osaka, Hy\u014dgo"},11:{sn:"Hokkaid\u014d",ln:"Ebetsu, Kitahiroshima, Sapporo, Sorachi District, Hokkaid\u014d"},19:{sn:"Iwate",ln:"Iwate District, Morioka, Shiwa District, Iwate"},22:{sn:"Miyagi",ln:"Kurokawa District, Miyagi District, Natori, Sendai, Shiogama, Tagaj\u014d, Miyagi"},23:{sn:"Yamagata",ln:"Higashimurayama District, Kaminoyama, Mogami District, Natori, Miyagi, Tend\u014d, Yamagata"},
24:{sn:"Fukushima",ln:"Adachi District, Date District, Fukushima"},25:{sn:"Niigata",ln:"Kitakanbara District, Niigata, Nishikanbara District, Shirone, Toyosaka, Niigata"},26:{sn:"Nagano",ln:"Hanishina District, Kamiminochi District, Kamitakai District, Koshoku, Nagano, Sarashina District, Suzaka, Nagano"},27:{sn:"Gunma",ln:"Kitagunma District, Maebashi, Seta District, Takasaki, Tano District, Gunma"},28:{sn:"Tochigi",ln:"Haga District, Kawachi District, Shioya District, Utsunomiya, Tochigi"},29:{sn:"Ibaraki",
ln:"Higashiibaraki District, Hitachinaka, Mito, Naka District, Ibaraki"},42:{sn:"Tokyo",ln:"Akiruno, Akishima, Fuchu, Fussa, Hachi\u014dji, Hamura, Higashiyamato, Hino, Kokubunji, Kokuritsu, Musashimurayama, Nishitama, Tachikawa, Tokyo"},43:{sn:"Chiba",ln:"Chiba, Ichihara, Inba District, Sakura, Sanbu District, Yachimata, Yotsukaid\u014d, Chiba"},44:{sn:"Kanagawa",ln:"Kawasaki, Machida, Tokyo, Yokohama, Kanagawa"},45:{sn:"Kanagawa",ln:"Yokohama, Kanagawa"},47:{sn:"Chiba",ln:"Funabashi, Higashikatsushika District, Ichikawa, Kamagaya, Matsudo, Urayasu, Chiba"},
48:{sn:"Saitama",ln:"Ageo, Asaka, Fujimi, Hasuda, Hatogaya, Iwatsuki, Kasukabe, Kawagoe, Kawaguchi, Kitaadachi District, Kitakatsushika District, Niiza, Okegawa, Omiya, Shiki, Toda, Urawa, Wak\u014d, Warabi, Yono, Saitama"},52:{sn:"Aichi",ln:"Aichi District, Ama District, Nagoya, Nishikasugai District, Nisshin, Owariasahi, T\u014dkai, Toyoake, Aichi"},53:{sn:"Shizuoka",ln:"Hamamatsu, Hamana District, Inasa District, Kosai, Shizuoka"},54:{sn:"Shizuoka",ln:"Fuji District, Fujieda, Shida District, Yaizu, Shizuoka"},
58:{sn:"Gifu",ln:"Gifu, Hashima District, Hashima, Motosu District, Gifu"},59:{sn:"Mie",ln:"Age District, Hisai, Ichishi District, Tsu, Uda District, Nara, Mie"},72:{sn:"Osaka",ln:"Dait\u014d, Hannan, Higashi\u014dsaka, Hirakata, Izumisano, Kadoma, Kaizuka, Katano, Kishiwada, Neyagawa, Sennan District, Sennan, Shij\u014dnawate, Osaka"},75:{sn:"Kyoto",ln:"Kuse District, Mishima District, Osaka, Muk\u014d, Nagaokaky\u014d, Otokuni District, Yawata, Kyoto"},76:{sn:"Ishikawa",ln:"Ishikawa District, Kahoku District, Kanazawa, Matto, Nomi District, Ishikawa"},
77:{sn:"Shiga",ln:"Kurita District, Kusatsu, Moriyama, \u014ctsu, Shiga District, Yasu District, Shiga"},78:{sn:"Hy\u014dgo",ln:"Akashi, Kako District, Kakogawa, Kobe, Nishinomiya, Hy\u014dgo"},82:{sn:"Hiroshima",ln:"Aki District, Hatsukaichi, Hiroshima"},86:{sn:"Okayama",ln:"Akaiwa District, Asakuchi District, Kibi District, Kojima District, Kurashiki, Okayama, Oku District, Tamano, Tsukubo District, Okayama"},87:{sn:"Kagawa",ln:"Ayauta District, Kagawa District, Kita District, Okawa District, Takamatsu, Kagawa"},
89:{sn:"Ehime",ln:"H\u014dj\u014d, Iyo District, Iyo, Kamiukena District, Matsuyama, Onsen District, Ehime"},92:{sn:"Fukuoka",ln:"Asakura District, Chikushi District, Chikushino, Dazaifu, Fukuoka, Itoshima District, Kanzaki District, Saga, Kasuga, Kasuya District, Koga, Maebaru, Ogori, Onojo, Fukuoka"},93:{sn:"Fukuoka",ln:"akeako District, Kitakyushu, Nakama, Onga District, Fukuoka"},95:{sn:"Nagasaki",ln:"Nagasaki, Nishisonogi District, Nagasaki"},96:{sn:"Kumamoto",ln:"Aso District, Kamimashiki District, Kamoto District, Kikuchi District, Kumamoto, Shimomashiki District, Kumamoto"},
98:{sn:"Okinawa",ln:"Ginowan, Gushikawa, Ishikawa, Itoman, Kunigami District, Naha, Nakagami District, Shimajiri District, Urasoe, Okinawa"},99:{sn:"Kagoshima",ln:"Aira District, Hioki District, Kagoshima District, Kagoshima"},123:{sn:"Hokkaid\u014d",ln:"Chitose, Eniwa, Tomakomai, Hokkaid\u014d"},125:{sn:"Hokkaid\u014d",ln:"Akabira, Kabato District, Sorachi District, Sunagawa, Takikawa, Ury\u016b District, Utashinai, Hokkaid\u014d"},126:{sn:"Hokkaid\u014d",ln:"Ishikari District, Iwamizawa, Kabato District, Sorachi District, Hokkaid\u014d"},
133:{sn:"Hokkaid\u014d",ln:"Atsuta District, Ishikari District, Ishikari, Otaru, Hokkaid\u014d"},134:{sn:"Hokkaid\u014d",ln:"Otaru, Hokkaid\u014d"},135:{sn:"Hokkaid\u014d",ln:"Furuu District, Iwanai District, Shakotan District, Yoichi District, Hokkaid\u014d"},136:{sn:"Hokkaid\u014d",ln:"Abuta District, Isoya District, Shimamaki District, Suttsu District, Usu District, Hokkaid\u014d"},138:{sn:"Hokkaid\u014d",ln:"Hakodate, Kameda District, Kamiiso District, Hokkaid\u014d"},142:{sn:"Hokkaid\u014d",
ln:"Abuta District, Date, Usu District, Hokkaid\u014d"},143:{sn:"Hokkaid\u014d",ln:"Muroran, Noboribetsu, Hokkaid\u014d"},144:{sn:"Hokkaid\u014d",ln:"Shiraoi District, Tomakomai, Hokkaid\u014d"},152:{sn:"Hokkaid\u014d",ln:"Abashiri District, Shari District, Tokoro District, Hokkaid\u014d"},153:{sn:"Hokkaid\u014d",ln:"Akkeshi District, Hokkaid\u014d"},154:{sn:"Hokkaid\u014d",ln:"Akan District, Kushiro District, Kushiro, Hokkaid\u014d"},155:{sn:"Hokkaid\u014d",ln:"Kasai District, Kat\u014d District, Nakagawa District, Obihiro, Hokkaid\u014d"},
157:{sn:"Hokkaid\u014d",ln:"Kitami, Tokoro District, Hokkaid\u014d"},162:{sn:"Hokkaid\u014d",ln:"Teshio District, Wakkanai, Hokkaid\u014d"},164:{sn:"Hokkaid\u014d",ln:"Fukagawa, Mashike District, Rumoi, Ury\u016b District, Hokkaid\u014d"},166:{sn:"Hokkaid\u014d",ln:"Asahikawa, Kamikawa District, Hokkaid\u014d"},167:{sn:"Hokkaid\u014d",ln:"Ashibetsu, Furano, Sorachi District, Y\u016bfutsu District, Hokkaid\u014d"},172:{sn:"Aomori",ln:"Aomori District, Hirosaki, Kitatsugaru District, Kuroishi, Minamitsugaru District, Nakatsugaru District, Aomori"},
173:{sn:"Aomori",ln:"Goshogawara, Kitatsugaru District, Nishitsugaru District, Aomori"},174:{sn:"Aomori",ln:"Higashitsugaru District, Aomori"},175:{sn:"Aomori",ln:"Mutsu, Shimokita District, Aomori"},176:{sn:"Aomori",ln:"Kamikita District, Kazuno District, Akita, Sannohe District, Towada, Aomori"},177:{sn:"Aomori",ln:"Aomori, Higashitsugaru District, Aomori"},178:{sn:"Aomori",ln:"Hachinohe, Kamikita District, Sannohe District, Aomori"},179:{sn:"Aomori",ln:"Sannohe District, Aomori"},182:{sn:"Akita",
ln:"Hiraka District, Ogachi District, Senboku District, Yokote, Akita"},183:{sn:"Akita",ln:"Ogachi District, Yuzawa, Akita"},184:{sn:"Akita",ln:"Honjo, Yuri District, Akita"},185:{sn:"Akita",ln:"Minamiakita District, Noshiro, Oga, Yamamoto District, Akita"},186:{sn:"Akita",ln:"Kazuno, Kitaakita District, \u014cdate, Akita"},187:{sn:"Akita",ln:"Omagari, Senboku District, Akita"},188:{sn:"Akita",ln:"Akita, Kawabe District, Minamiakita District, Senboku District, Akita"},191:{sn:"Iwate",ln:"Ichinoseki, Kesen District, Nishiiwai District, Iwate"},
192:{sn:"Iwate",ln:"Kesen District, \u014cfunato, Rikuzentakata, Iwate"},193:{sn:"Iwate",ln:"Kamaishi, Kamihei District, Miyako, Iwate"},194:{sn:"Iwate",ln:"Kamihei District, Kuji, Kunohe District, Iwate"},195:{sn:"Iwate",ln:"Iwate District, Kunohe District, Ninohe District, Ninohe, Iwate"},197:{sn:"Iwate",ln:"Esashi, Isawa District, Kesen District, Kitakami, Mizusawa, Waga District, Iwate"},198:{sn:"Iwate",ln:"Hanamaki, Hienuki District, Kamihei District, T\u014dno, Waga District, Iwate"},220:{sn:"Miyagi",
ln:"Tome District, Miyagi"},223:{sn:"Miyagi",ln:"Iwanuma, Natori, Watari District, Miyagi"},224:{sn:"Miyagi",ln:"Igu District, Kakuda, Katta District, Shibata District, Shiroishi, Miyagi"},225:{sn:"Miyagi",ln:"Ishinomaki, Monou District, Motoyoshi District, Oshika District, T\u014dda District, Tome District, Miyagi"},226:{sn:"Miyagi",ln:"Kesennuma, Motoyoshi District, Miyagi"},228:{sn:"Miyagi",ln:"Kurihara District, Tome District, Miyagi"},229:{sn:"Miyagi",ln:"Furukawa, Kami District, Shida District, Tamatsukuri District, T\u014dda District, Miyagi"},
233:{sn:"Yamagata",ln:"Shinj\u014d, Yamagata"},234:{sn:"Yamagata",ln:"Akumi District, Higashitagawa District, Mogami District, Sakata, Yamagata"},235:{sn:"Yamagata",ln:"Higashitagawa District, Iwafune District, Niigata, Nishitagawa District, Tsuruoka, Yamagata"},236:{sn:"Yamagata",ln:"Higashimurayama District, Yamagata"},237:{sn:"Yamagata",ln:"Higashimurayama District, Higashine, Kitamurayama District, Murayama, Nishimurayama District, Obanazawa, Sagae, Tend\u014d, Yamagata"},238:{sn:"Yamagata",ln:"Higashiokitama District, Nagai, Nan'y\u014d, Nishiokitama District, Yonezawa, Yamagata"},
240:{sn:"Fukushima",ln:"Futaba District, Fukushima"},241:{sn:"Fukushima",ln:"Kawanuma District, Kitakata, Minamiaizu District, \u014cnuma District, Yama District, Fukushima"},242:{sn:"Fukushima",ln:"Aizuwakamatsu, Fukushima, Kawanuma District, Kitaaizu District, \u014cnuma District, Yama District, Fukushima"},243:{sn:"Fukushima",ln:"Adachi District, Fukushima, Nihonmatsu, Fukushima"},244:{sn:"Fukushima",ln:"Haramachi, Igu District, Miyagi, S\u014dma District, Souma, Fukushima"},246:{sn:"Fukushima",
ln:"Iwaki, Fukushima"},247:{sn:"Fukushima",ln:"Higashishirakawa District, Ishikawa District, Tamura District, Fukushima"},248:{sn:"Fukushima",ln:"Iwase District, Nishishirakawa District, Shirakawa, Sukagawa, Fukushima"},249:{sn:"Fukushima",ln:"K\u014driyama, Sukagawa, Tamura District, Fukushima"},250:{sn:"Niigata",ln:"Gosen, Nakakanbara District, Niitsu, Niigata"},254:{sn:"Niigata",ln:"Iwafune District, Kitakanbara District, Murakami, Shibata, Niigata"},255:{sn:"Niigata",ln:"Arai, Higashikubiki District, Itoigawa, J\u014detsu, Kitaazumi District, Nagano, Nakakubiki District, Nishikubiki District, Niigata"},
256:{sn:"Niigata",ln:"Kamo, Minamikanbara District, Sanj\u014d, Sato District, Tsubame, Niigata"},257:{sn:"Niigata",ln:"Kariwa District, Kashiwazaki, Minamiuonuma District, Nakauonuma District, Shimominochi District, Nagano, T\u014dkamachi, Niigata"},258:{sn:"Niigata",ln:"Kariwa District, Kitauonuma District, Koshi District, Minamiuonuma District, Mitsuke, Nagaoka, Ojiya, Sant\u014d District, Tochio, Niigata"},259:{sn:"Niigata",ln:"Ryotsu, Sado, Niigata"},260:{sn:"Nagano",ln:"Shimoina District, Nagano"},
261:{sn:"Nagano",ln:"Kitaazumi District, \u014cmachi, Nagano"},263:{sn:"Nagano",ln:"Higashichikuma District, Matsumoto, Minamiazumi District, Shiojiri, Nagano"},264:{sn:"Nagano",ln:"Kiso District, Nagano"},265:{sn:"Nagano",ln:"Iida, Ina, Kamiina District, Komagane, Shimoina District, Nagano"},266:{sn:"Nagano",ln:"Chino, Kamiina District, Kitakoma District, Yamanashi, Okaya, Shiojiri, Suwa District, Suwa, Nagano"},267:{sn:"Gunma",ln:"Agatsuma District, Annaka, Chiisagata District, Nagano, Gunma District, Kanra District, Kitasaku District, Komoro, Minamisaku District, Saku, Nagano, Usui District, Gunma"},
268:{sn:"Nagano",ln:"Chiisagata District, Hanishina District, Kitasaku District, Sarashina District, Ueda, Nagano"},269:{sn:"Nagano",ln:"Iiyama, Nakano, Shimominochi District, Shimotakai District, Nagano"},270:{sn:"Gunma",ln:"Isesaki, Sawa District, Gunma"},273:{sn:"Gunma",ln:"Usui District, Gunma"},274:{sn:"Saitama",ln:"Chichibu District, Fujioka, Kanra District, Gunma, Kodama District, Minamisaku District, Nagano, Tano District, Tomioka, Gunma, Saitama"},276:{sn:"Gunma",ln:"Nitta District, Ohta, \u014cra District, \u014csato District, Saitama, Tatebayashi, Gunma"},
277:{sn:"Gunma",ln:"Kiry\u016b, Nitta District, Seta District, Yamada District, Gunma"},278:{sn:"Gunma",ln:"Numata, Tone District, Gunma"},279:{sn:"Gunma",ln:"Agatsuma District, Kitagunma District, Seta District, Shibukawa, Gunma"},280:{sn:"Saitama",ln:"Kitasaitama District, Koga, Ibaraki, Oyama, Sashima District, Ibaraki, Shimotsuga District, Tochigi, Saitama"},282:{sn:"Tochigi",ln:"Kamitsuga District, Oyama, Shimotsuga District, Tochigi"},283:{sn:"Tochigi",ln:"Aso District, Sano, Tochigi"},284:{sn:"Tochigi",
ln:"Ashikaga, Ohta, Gunma, Tochigi"},285:{sn:"Tochigi",ln:"Haga District, Kawachi District, Mooka, Oyama, Shimotsuga District, Tochigi"},287:{sn:"Gunma",ln:"Agatsuma District, Kuroiso, Nasu District, \u014ctawara, Shioya District, Yaita, Tochigi, Gunma"},288:{sn:"Tochigi",ln:"Imaichi, Kamitsuga District, Nikk\u014d, Shioya District, Tochigi"},289:{sn:"Tochigi",ln:"Kamitsuga District, Kanuma, Tochigi"},291:{sn:"Ibaraki",ln:"Kashima District, Namegata District, Ibaraki"},292:{sn:"Ibaraki",ln:"Naka District, Ibaraki"},
293:{sn:"Ibaraki",ln:"Kitaibaraki, Taga District, Takahagi, Ibaraki"},294:{sn:"Ibaraki",ln:"Hitachi, Hitachi\u014dta, Kuji District, Naka District, Ibaraki"},296:{sn:"Ibaraki",ln:"Kasama, Makabe District, Nishiibaraki District, Oyama, Tochigi, Shimodate, Shimotsuma, Y\u016bki District, Yuki, Ibaraki"},297:{sn:"Ibaraki",ln:"Inashiki District, Iwai, Kitasouma District, Mitsukaido, Ry\u016bgasaki, Toride, Tsukuba District, Y\u016bki District, Ibaraki"},298:{sn:"Ibaraki",ln:"Inashiki District, Niihari District, Tsuchiura, Tsukuba, Ushiku, Ibaraki"},
299:{sn:"Ibaraki",ln:"Inashiki District, Ishioka, Kashima District, Kashima, Namegata District, Niihari District, Nishiibaraki District, Ibaraki"},422:{sn:"Tokyo",ln:"Ch\u014dfu, Hoya, Koganei, Mitaka, Musashino, Tokyo"},423:{sn:"Tokyo",ln:"Fuchu, Higashimurayama, Inagi, Kodaira, Koganei, Kokubunji, Tama, Tokyo"},424:{sn:"Tokyo",ln:"Ch\u014dfu, Fuchu, Higashikurume, Hoya, Kiyose, Kodaira, Konoe, Niiza, Saitama, Tanashi, Tokyo"},426:{sn:"Tokyo",ln:"Hachi\u014dji, Tsukui District, Kanagawa, Tokyo"},
427:{sn:"Yamanashi",ln:"Kawasaki, Machida, Tokyo, Minamitsuru District, Sagamihara, Tsukui District, Yokohama, Zama, Kanagawa, Yamanashi"},428:{sn:"Yamanashi",ln:"Kitatsuru District, Nishitama, \u014cme, Tokyo, Yamanashi"},429:{sn:"Saitama",ln:"Hann\u014d, Hidaka, Iruma District, Iruma, Sayama, Tokorozawa, Saitama"},434:{sn:"Chiba"},436:{sn:"Chiba",ln:"Ichihara, Chiba"},438:{sn:"Chiba",ln:"Kisarazu, Sodegaura, Chiba"},439:{sn:"Chiba",ln:"Futtsu, Kimitsu, Chiba"},460:{sn:"Kanagawa",ln:"Ashigarashimo District, Kanagawa"},
462:{sn:"Kanagawa",ln:"Aik\u014d District, Atsugi, Ebina, Sagamihara, Yamato, Zama, Kanagawa"},463:{sn:"Kanagawa",ln:"Hadano, Hiratsuka, Isehara, Naka District, Kanagawa"},465:{sn:"Kanagawa",ln:"Ashigarashimo District, Atami, Shizuoka, Minamiashigara, Naka District, Odawara, Kanagawa"},466:{sn:"Kanagawa",ln:"Fujisawa, Kanagawa"},467:{sn:"Kanagawa",ln:"Ayase, Chigasaki, Kamakura, Koza District, Zushi, Kanagawa"},468:{sn:"Kanagawa",ln:"Miura District, Miura, Yokosuka, Zushi, Kanagawa"},470:{sn:"Chiba",
ln:"Awa District, Isumi District, Kamogawa, Katsuura, Tateyama, Chiba"},471:{sn:"Chiba",ln:"Abiko, Higashikatsushika District, Kashiwa, Nagareyama, Noda, Toride, Ibaraki, Chiba"},474:{sn:"Chiba",ln:"Chiba, Funabashi, Inba District, Kamagaya, Narashino, Yachiyo, Chiba"},475:{sn:"Chiba",ln:"Ch\u014dsei District, Mobara, Sanbu District, Chiba"},476:{sn:"Chiba",ln:"Inba District, Inzai, Katori District, Narita, Chiba"},478:{sn:"Ibaraki",ln:"Kashima District, Katori District, Chiba, Namegata District, Sawara, Chiba, Ibaraki"},
479:{sn:"Chiba",ln:"Asahi, Ch\u014dshi, Kaijo District, Katori District, Sanbu District, S\u014dsa District, Y\u014dkaichiba, Chiba"},480:{sn:"Saitama",ln:"Kazo, Kitakatsushika District, Kitasaitama District, Kuki, Minamisaitama District, Satte, Saitama"},485:{sn:"Saitama",ln:"Fukaya, Gy\u014dda, Hany\u016b, Kitaadachi District, Kitamoto, Kitasaitama District, Konosu, Kumagaya, Nitta District, Gunma, \u014csato District, Saitama"},489:{sn:"Saitama",ln:"Kitakatsushika District, Koshigaya, Misato, S\u014dka, Yashio, Yoshikawa, Saitama"},
492:{sn:"Saitama",ln:"Fujimi, Hiki District, Iruma District, Kamifukuoka, Kawagoe, Sakado, Tsurugashima, Saitama"},493:{sn:"Saitama",ln:"Chichibu District, Higashimatsuyama, Hiki District, \u014csato, Saitama"},494:{sn:"Saitama",ln:"Chichibu District, Chichibu, Saitama"},495:{sn:"Saitama",ln:"Honj\u014d, Kodama District, Saitama"},532:{sn:"Aichi",ln:"Toyohashi, Aichi"},533:{sn:"Aichi",ln:"Gamagori, Hoi District, Toyokawa, Aichi"},537:{sn:"Shizuoka",ln:"Kakegawa, Ogasa District, Shizuoka"},538:{sn:"Shizuoka",
ln:"Fukuroi, Iwata District, Iwata, Ogasa District, Shuchi District, Shizuoka"},539:{sn:"Shizuoka",ln:"Iwata District, Shuchi District, Tenry\u016b, Shizuoka"},543:{sn:"Shizuoka",ln:"Ihara District, Shimizu, Shizuoka"},544:{sn:"Shizuoka",ln:"Fujinomiya, Shizuoka"},545:{sn:"Shizuoka",ln:"Fuji, Ihara District, Shizuoka"},547:{sn:"Shizuoka",ln:"Haibara District, Ogasa District, Shimada, Shizuoka"},548:{sn:"Shizuoka",ln:"Haibara District, Ogasa District, Shizuoka"},550:{sn:"Shizuoka",ln:"Gotemba, Sunto District, Shizuoka"},
551:{sn:"Yamanashi",ln:"Kitakoma District, Nirasaki, Yamanashi"},552:{sn:"Yamanashi",ln:"Higashiyatsushiro District, K\u014dfu, Nakakoma District, Nishiyatsushiro District, Yamanashi"},553:{sn:"Yamanashi",ln:"Enzan, Higashiyamanashi District, Yamanashi"},554:{sn:"Yamanashi",ln:"Minamitsuru District, \u014ctsuki, Tsuru, Yamanashi"},555:{sn:"Yamanashi",ln:"Fujiyoshida, Minamitsuru District, Nishiyatsushiro District, Yamanashi"},556:{sn:"Yamanashi",ln:"Minamikoma District, Nishiyatsushiro District, Yamanashi"},
557:{sn:"Shizuoka",ln:"Atami, Ito, Kamo District, Tagata District, Shizuoka"},558:{sn:"Shizuoka",ln:"Kamo District, Shimoda, Tagata District, Shizuoka"},559:{sn:"Shizuoka",ln:"Mishima, Numazu, Sunto District, Susono, Tagata District, Shizuoka"},561:{sn:"Aichi",ln:"Aichi District, Owariasahi, Seto, Aichi"},562:{sn:"Aichi",ln:"Chita, Chita District, Obu, T\u014dkai, Toyoake, Aichi"},563:{sn:"Aichi",ln:"Nishio, Aichi hazu District, Aichi"},564:{sn:"Aichi",ln:"Higashikamo District, Nukata District, Okazaki, Aichi"},
565:{sn:"Aichi",ln:"Higashikamo District, Nishikamo District, Toyota, Aichi"},566:{sn:"Aichi",ln:"Anjo, Chiryu, Hekinan, Kariya, Takahama, Aichi"},567:{sn:"Aichi",ln:"Ama District, Kuwana District, Mie, Nakashima District, Tsushima, Aichi"},568:{sn:"Aichi",ln:"Inuyama, Kasugai, Komaki, Nishikasugai District, Seto, Aichi"},569:{sn:"Aichi",ln:"Chita, Chita District, Handa, Tokoname, Aichi"},572:{sn:"Gifu",ln:"Ena District, Mizunami, Tajimi, Toki District, Toki, Gifu"},573:{sn:"Gifu",ln:"Ena District, Ena, Kiso District, Nagano, Mizunami, Nakatsugawa, Gifu"},
574:{sn:"Gifu",ln:"Kamo District, Kani District, Kani, Minokamo, Mizunami, Gifu"},575:{sn:"Gifu",ln:"Gujo District, Mino, Mugi District, Seki, Gifu"},576:{sn:"Gifu",ln:"Mashita District, \u014cno District, Gifu"},577:{sn:"Gifu",ln:"\u014cno District, Takayama, Yoshiki District, Gifu"},578:{sn:"Gifu",ln:"Yoshiki District, Gifu"},581:{sn:"Gifu",ln:"Motosu District, Yamagata District, Gifu"},583:{sn:"Gifu",ln:"Kakamigahara, Gifu"},584:{sn:"Gifu",ln:"Anpachi District, Fuwa District, Ibi District, Kaizu District, Motosu District, Ogaki, Yoro District, Gifu"},
585:{sn:"Gifu",ln:"Anpachi District, Ibi District, Motosu District, Gifu"},586:{sn:"Aichi",ln:"Haguri District, Ichinomiya, Inazawa, Nishio, Aichi"},587:{sn:"Aichi",ln:"Inazawa, Iwakura, Konan, Nakashima District, Niwa District, Aichi"},593:{sn:"Mie",ln:"Mie District, Suzuka, Yokkaichi, Mie"},594:{sn:"Mie",ln:"Inabe District, Kuwana District, Kuwana, Mie"},595:{sn:"Mie",ln:"Ayama District, Nabari, Naga District, Ueno, Mie"},596:{sn:"Mie",ln:"Ise, Taki District, Mie"},598:{sn:"Mie",ln:"Ichishi District, Matsusaka, Mie"},
599:{sn:"Mie",ln:"Ise, Toba, Mie"},721:{sn:"Nara",ln:"Gose, Kawachinagano, Minamikawachi District, Tondabayashi, Osaka, Nara"},722:{sn:"Osaka",ln:"Sakai, Takaishi, Osaka"},723:{sn:"Osaka",ln:"Matsubara, Minamikawachi District, Osaka, \u014csakasayama, Tondabayashi, Osaka"},724:{sn:"Osaka",ln:"Senboku District, Osaka"},725:{sn:"Osaka",ln:"Izumi, Izumi\u014dtsu, Senboku District, Osaka"},726:{sn:"Osaka",ln:"Ibaraki, Kyoto, Settsu, Takatsuki, Osaka"},727:{sn:"Osaka",ln:"Ikeda, Itami, Kawabe District, Kawanishi, Hy\u014dgo, Minoh, Takarazuka, Hy\u014dgo, Toyonaka, Toyono District, Osaka"},
729:{sn:"Osaka",ln:"Fujiidera, Habikino, Higashi\u014dsaka District, Kashiwara, Yao, Osaka"},734:{sn:"Wakayama",ln:"Kainan, Kaiso District, Wakayama"},735:{sn:"Mie",ln:"Minamimuro District, Shing\u016b, Wakayama, Mie"},736:{sn:"Wakayama",ln:"Hashimoto, Ito District, Naga District, Wakayama"},737:{sn:"Wakayama",ln:"Arida District, Arida, Ito District, Wakayama"},738:{sn:"Wakayama",ln:"Gob\u014d, Hidaka District, Wakayama"},739:{sn:"Wakayama",ln:"Hidaka District, Nishimuro District, Tanabe, Wakayama"},
740:{sn:"Shiga",ln:"Takashima District, Shiga"},742:{sn:"Nara"},743:{sn:"Nara",ln:"Ikoma District, Ikoma, Shiki District, Tenri, Uda District, Yamabe District, Yamatok\u014driyama, Nara"},744:{sn:"Nara",ln:"Kashihara, Sakurai, Takaichi District, Yoshino District, Nara"},745:{sn:"Nara",ln:"Gose, Ikoma District, Kashiba, Kitakatsuragi District, Shiki District, Takaichi District, Uda District, Yamatotakada, Yoshino District, Nara"},747:{sn:"Nara",ln:"Yoshino District, Nara"},748:{sn:"Shiga",ln:"Echi District, Gamo District, Kanzaki District, Koka District, \u014cmihachiman, Yokaichi, Shiga"},
749:{sn:"Shiga",ln:"Echi District, Higashiazai District, Hikone, Ika District, Inukami District, Nagahama, Sakata District, Shiga"},761:{sn:"Ishikawa",ln:"Komatsu, Nomi District, Ishikawa"},763:{sn:"Toyama",ln:"Higashitonami District, Nishitonami District, \u014cno District, Gifu, Tonami, Toyama"},764:{sn:"Toyama",ln:"Kaminiikawa District, Nakaniikawa District, Namerikawa, Nei District, Toyama, Toyama"},765:{sn:"Toyama",ln:"Kurobe, Shimoniikawa District, Uozu, Toyama"},766:{sn:"Ishikawa",ln:"Hakui, Himi, Imizu District, Nishitonami District, Oyabe, Shinminato, Takaoka, Toyama, Ishikawa"},
767:{sn:"Ishikawa",ln:"Hakui, Kashima District, Nanao, Ishikawa"},768:{sn:"Ishikawa",ln:"Fugeshi District, Suzu District, Suzu, Wajima, Ishikawa"},770:{sn:"Fukui",ln:"Mikata District, Obama, \u014ci District, Onyu District, Tsuruga, Fukui"},771:{sn:"Kyoto",ln:"Funai District, Kameoka, Kitakuwada District, Kyoto"},772:{sn:"Kyoto",ln:"Kumano District, Miyazu, Naka District, Takeno District, Yosa District, Kyoto"},773:{sn:"Kyoto",ln:"Amata District, Ayabe, Fukuchiyama, Kasa District, Maizuru, Kyoto"},
774:{sn:"Kyoto",ln:"J\u014dy\u014d, Kuse District, Ky\u014dtanabe, Soraku District, Tsuzuki District, Uji, Kyoto"},775:{sn:"Kyoto"},776:{sn:"Fukui",ln:"Fukui, Ny\u016b District, Sakai District, Yoshida District, Fukui"},778:{sn:"Fukui",ln:"Imadate District, Nanj\u014d District, Ny\u016b District, Sabae, Takefu, Fukui"},779:{sn:"Fukui",ln:"Katsuyama, \u014cno District, Ono, Yoshida District, Fukui"},790:{sn:"Hy\u014dgo",ln:"Kanzaki District, Kasai, Say\u014d District, Shis\u014d District, Hy\u014dgo"},
791:{sn:"Hy\u014dgo",ln:"Ibo District, Tatsuno, Hy\u014dgo"},792:{sn:"Hy\u014dgo",ln:"Himeji, Ibo District, Kanzaki District, Hy\u014dgo"},794:{sn:"Hy\u014dgo",ln:"Kako District, Kakogawa, Miki, Mino District, Ono, Takasago, Hy\u014dgo"},795:{sn:"Hy\u014dgo",ln:"Hikami District, Kako District, Nishiwaki, Ono, Sanda, Taka District, Hy\u014dgo"},796:{sn:"Hy\u014dgo",ln:"Asago District, Izushi District, Kinosaki District, Mikata District, Toyooka, Yabu District, Hy\u014dgo"},797:{sn:"Hy\u014dgo",ln:"Ashiya, Kobe, Nishinomiya, Takarazuka, Hy\u014dgo"},
798:{sn:"Hy\u014dgo",ln:"Ashiya, Nishinomiya, Takarazuka, Hy\u014dgo"},799:{sn:"Hy\u014dgo",ln:"Mihara District, Sumoto, Tsuna District, Hy\u014dgo"},820:{sn:"Yamaguchi",ln:"Kuga District, Kumage District, Yanai, Yamaguchi"},823:{sn:"Hiroshima",ln:"Aki District, Kamo District, Kure, Saeki District, Toyota District, Hiroshima"},824:{sn:"Hiroshima",ln:"Futami District, Higashihiroshima, Kamo District, Miyoshi, Takata District, Toyota District, Hiroshima"},826:{sn:"Hiroshima",ln:"Miyoshi, Takata District, Yamagata District, Hiroshima"},
827:{sn:"Yamaguchi",ln:"Iwakuni, Kuga District, Yamaguchi"},829:{sn:"Hiroshima",ln:"Saeki District, Hiroshima"},832:{sn:"Yamaguchi",ln:"Shimonoseki, Toyora District, Yamaguchi"},833:{sn:"Yamaguchi",ln:"Hikari, Kumage District, Shimonoseki, Yamaguchi"},834:{sn:"Yamaguchi",ln:"Shinnan'y\u014d, Tokuyama, Tsuno District, Yamaguchi"},835:{sn:"Yamaguchi",ln:"H\u014dfu, Saba District, Yamaguchi"},836:{sn:"Yamaguchi",ln:"Asa District, Onoda, Ube, Yoshiki District, Yamaguchi"},837:{sn:"Yamaguchi",ln:"Nagato, Otsu District, Toyora District, Yamaguchi"},
838:{sn:"Yamaguchi",ln:"Abu District, Hagi, Yamaguchi"},839:{sn:"Yamaguchi",ln:"Yamaguchi, Yoshiki District, Yamaguchi"},846:{sn:"Hiroshima",ln:"Takehara, Toyota District, Hiroshima"},847:{sn:"Hiroshima",ln:"Ashina District, Fuchuu, Fukuyama, Hiroshima"},848:{sn:"Hiroshima",ln:"Mihara, Mitsugi District, Onomichi, Toyota District, Hiroshima"},849:{sn:"Hiroshima",ln:"Fukayasu District, Fukuyama, Numakuma District, Hiroshima"},852:{sn:"Shimane",ln:"Matsue, Yatsuka District, Shimane"},853:{sn:"Shimane",
ln:"Hikawa District, Hirata, Izumo, Shimane"},854:{sn:"Shimane",ln:"Iishi District, Nita District, Nogi District, Ohara District, Yasugi, Shimane"},855:{sn:"Shimane",ln:"G\u014dtsu, Hamada, Naka District, Nima District, \u014cchi District, Shimane"},856:{sn:"Shimane",ln:"Masuda, Mino District, Shimane"},857:{sn:"Tottori",ln:"Iwami District, Ketaka District, Tottori"},858:{sn:"Tottori",ln:"Kurayoshi, Saihaku District, T\u014dhaku District, Yazu District, Tottori"},859:{sn:"Tottori",ln:"Hino District, Saihaku District, Sakaiminato, Yonago, Tottori"},
863:{sn:"Okayama",ln:"Tamano, Okayama"},865:{sn:"Okayama",ln:"Asakuchi District, Kasaoka, Okayama"},866:{sn:"Okayama",ln:"Ibara, Jobo District, Kawakami District, Kibi District, Mitsu District, Oda District, Shitsuki District, Soja, Takahashi, Tsukubo District, Okayama"},867:{sn:"Okayama",ln:"Atetsu District, Kume District, Maniwa District, Mitsu District, Niimi, Tomata District, Okayama"},868:{sn:"Okayama",ln:"Katsuta District, Kume District, Tomata District, Tsuyama, Okayama"},869:{sn:"Okayama",
ln:"Bizen, Oku District, Wake District, Okayama"},875:{sn:"Kagawa",ln:"Kanonji, Mitoyo District, Kagawa"},877:{sn:"Kagawa",ln:"Ayauta District, Marugame, Nakatado District, Sakaide, Zentsuji, Kagawa"},879:{sn:"Kagawa",ln:"Okawa District, Shozu District, Kagawa"},880:{sn:"K\u014dchi",ln:"Hata District, Nakamura, Sukumo, Tosashimizu, K\u014dchi"},883:{sn:"Tokushima",ln:"Awa District, Mima District, Miyoshi District, Oe District, Tokushima"},884:{sn:"Tokushima",ln:"Anan, Naka District, Tokushima"},886:{sn:"Tokushima",
ln:"Itano District, Komatsushima, Miyoshi District, Myodo District, Myozai District, Naruto, Tokushima"},887:{sn:"K\u014dchi",ln:"Nagaoka District, Tosa District, K\u014dchi"},888:{sn:"K\u014dchi",ln:"Agawa District, Kami District, K\u014dchi, Nankoku, Susaki, Tosa District, Tosa, K\u014dchi"},889:{sn:"K\u014dchi",ln:"Agawa District, Susaki, Takaoka District, K\u014dchi"},892:{sn:"Ehime",ln:"Kamiukena District, Ehime"},893:{sn:"Ehime",ln:"Kita District, \u014czu, Ehime"},894:{sn:"Ehime",ln:"Higashiuwa District, Nishiuwa District, Yawatahama, Ehime"},
895:{sn:"Ehime",ln:"Kitauwa District, Minamiuwa District, Uwajima, Ehime"},896:{sn:"Ehime",ln:"Iyomishima, Kawanoe, Mitoyo District, Kagawa, Uma District, Ehime"},897:{sn:"Ehime",ln:"Niihama, Ochi District, Saij\u014d, Sh\u016bs\u014d District, Uma District, Ehime"},898:{sn:"Ehime",ln:"Imabari, Ochi District, Sh\u016bs\u014d District, T\u014dyo, Ehime"},930:{sn:"Fukuoka",ln:"Yukuhashi, Fukuoka"},933:{sn:"Kagoshima",ln:"Kawanabe District, Kagoshima"},940:{sn:"Fukuoka",ln:"Fukutsu, Munakata, Fukuoka"},
942:{sn:"Fukuoka",ln:"Chikugo, Kurume, Mii District, Miyaki District, Saga, Miyama, Mizuma District, Ogori, Tosu, Saga, Yame District, Fukuoka"},943:{sn:"Fukuoka",ln:"Yame District, Yame, Fukuoka"},944:{sn:"Kumamoto",ln:"Arao, Chikugo, Miike District, Miyama, Mizuma District, Okawa, Omuta, Yanagawa, Fukuoka, Kumamoto"},946:{sn:"Fukuoka",ln:"Amagi, Asakura District, Ukiha District, Fukuoka"},947:{sn:"Fukuoka",ln:"Nogata, Tagawa District, Tagawa, Fukuoka"},948:{sn:"Fukuoka",ln:"Iizuka, Kaho District, Yamada, Fukuoka"},
950:{sn:"Nagasaki",ln:"Hirado, Kitamatsuura District, Nagasaki"},952:{sn:"Saga",ln:"Kanzaki District, Kishima District, Miyaki District, Ogi District, Saga District, Saga, Taku, Saga"},954:{sn:"Saga",ln:"Fujitsu District, Kishima District, Takeo, Saga"},955:{sn:"Saga",ln:"Higashimatsuura District, Imari, Karatsu, Nishimatsuura District, Saga"},956:{sn:"Nagasaki",ln:"Higashisonogi District, Kitamatsuura District, Matsuura, Sasebo, Nagasaki"},957:{sn:"Nagasaki",ln:"Higashisonogi District, Isahaya, Kitatakaki District, Minamitakaki District, Nishisonogi District, Omura, Shimabara, Nagasaki"},
959:{sn:"Nagasaki",ln:"Fukue, Kitamatsuura District, Minamimatsura District, Nishisonogi District, Nagasaki"},964:{sn:"Kumamoto",ln:"Amakusa District, Shimomashiki District, Uto District, Uto, Yatsushiro District, Kumamoto"},965:{sn:"Kumamoto",ln:"Yatsushiro, Kumamoto"},966:{sn:"Kumamoto",ln:"Ashikita District, Hitoyoshi, Koyu District, Miyazaki, Kuma District, Minamata, Kumamoto"},967:{sn:"Kumamoto",ln:"Aso District, Kamimashiki District, Kumamoto"},968:{sn:"Kumamoto",ln:"Kamoto District, Kikuchi District, Kikuchi, Tamana District, Tamana, Yamaga, Kumamoto"},
969:{sn:"Kumamoto",ln:"Amakusa District, Hondo, Kumamoto"},972:{sn:"\u014cita",ln:"Minamiamabe District, Saiki, Tsukumi, Usuki, \u014cita"},973:{sn:"Kumamoto",ln:"Aso District, Hita District, Hita, \u014cita, Kumamoto"},974:{sn:"\u014cita",ln:"Naoiri District, Ono District, Taketa, \u014cita"},975:{sn:"\u014cita",ln:"Kitaamabe District, \u014cita District, \u014cita, Ono District, \u014cita"},977:{sn:"\u014cita",ln:"Beppu, Hayami District, \u014cita District, \u014cita"},978:{sn:"\u014cita",ln:"Bungotakada, Nishikunisaki District, Usa District, Usa, \u014cita"},
979:{sn:"Fukuoka",ln:"Buzen, Chikujo District, Nakatsu, Shimoge District, \u014cita, Fukuoka"},980:{sn:"Okinawa",ln:"Kunigami District, Nago, Shimajiri District, Okinawa"},982:{sn:"Miyazaki",ln:"Higashiusuki District, Hyuuga, Koyu District, Minamiamabe District, \u014cita, Nishiusuki District, Nobeoka, Miyazaki"},983:{sn:"Miyazaki",ln:"Higashiusuki District, Koyu District, Saito, Miyazaki"},984:{sn:"Miyazaki",ln:"Ebino, Higashimorokata District, Kobayashi, Nishimorokata District, Miyazaki"},985:{sn:"Miyazaki",
ln:"Higashimorokata District, Koyu District, Miyazaki District, Saito, Miyazaki"},986:{sn:"Miyazaki",ln:"Kitamorokata District, Miyakonojo, Soo District, Kagoshima, Miyazaki"},987:{sn:"Miyazaki",ln:"Kushima, Minaminaka District, Nichinan, Miyazaki"},993:{sn:"Kagoshima",ln:"Hioki District, Ibusuki District, Ibusuki, Kaseda, Kawanabe District, Makurazaki, Kagoshima"},994:{sn:"Kagoshima",ln:"Kanoya, Kimotsuki District, Soo District, Tarumizu, Kagoshima"},995:{sn:"Kagoshima",ln:"Aira District, Kokubu, Kagoshima"},
996:{sn:"Kagoshima",ln:"Akune, Hioki District, Izumi District, Izumi, Kushikino, Satsuma District, Sendai, Kagoshima"},997:{sn:"Kagoshima",ln:"Naze, \u014cshima District, Kagoshima"},1235:{sn:"Hokkaid\u014d",ln:"Y\u016bbari, Hokkaid\u014d"},1237:{sn:"Hokkaid\u014d",ln:"Y\u016bbari District, Y\u016bbari, Hokkaid\u014d"},1238:{sn:"Hokkaid\u014d",ln:"Y\u016bbari District, Hokkaid\u014d"},1242:{sn:"Hokkaid\u014d",ln:"Ashibetsu, Hokkaid\u014d"},1266:{sn:"Hokkaid\u014d",ln:"Bibai, Hokkaid\u014d"},1267:{sn:"Hokkaid\u014d",
ln:"Iwamizawa, Mikasa, Hokkaid\u014d"},1332:{sn:"Hokkaid\u014d",ln:"Ishikari District, Hokkaid\u014d"},1337:{sn:"Hokkaid\u014d",ln:"Atsuta District, Hokkaid\u014d"},1372:{sn:"Hokkaid\u014d",ln:"Kayabe District, Hokkaid\u014d"},1374:{sn:"Hokkaid\u014d",ln:"Kayabe District, Hokkaid\u014d"},1376:{sn:"Hokkaid\u014d",ln:"Yamakoshi District, Hokkaid\u014d"},1377:{sn:"Hokkaid\u014d",ln:"Yamakoshi District, Hokkaid\u014d"},1378:{sn:"Hokkaid\u014d",ln:"Setana District, Hokkaid\u014d"},1392:{sn:"Hokkaid\u014d",
ln:"Kamiiso District, Hokkaid\u014d"},1394:{sn:"Hokkaid\u014d",ln:"Matsumae District, Hokkaid\u014d"},1395:{sn:"Hokkaid\u014d",ln:"Hiyama District, Hokkaid\u014d"},1396:{sn:"Hokkaid\u014d",ln:"Hiyama District, Nishi District, Hokkaid\u014d"},1397:{sn:"Hokkaid\u014d",ln:"Okushiri District, Hokkaid\u014d"},1398:{sn:"Hokkaid\u014d",ln:"Kud\u014d District, Nishi District, Hokkaid\u014d"},1452:{sn:"Hokkaid\u014d",ln:"Chitose, Tomakomai, Y\u016bfutsu District, Hokkaid\u014d"},1454:{sn:"Hokkaid\u014d",ln:"Y\u016bfutsu District, Hokkaid\u014d"},
1456:{sn:"Hokkaid\u014d",ln:"Niikappu District, Saru District, Hokkaid\u014d"},1457:{sn:"Hokkaid\u014d",ln:"Saru District, Hokkaid\u014d"},1462:{sn:"Hokkaid\u014d",ln:"Urakawa District, Hokkaid\u014d"},1463:{sn:"Hokkaid\u014d",ln:"Mitsuishi District, Samani District, Urakawa District, Hokkaid\u014d"},1464:{sn:"Hokkaid\u014d",ln:"Niikappu District, Shizunai District, Hokkaid\u014d"},1466:{sn:"Hokkaid\u014d",ln:"Horoizumi District, Hokkaid\u014d"},1522:{sn:"Hokkaid\u014d",ln:"Shari District, Hokkaid\u014d"},
1527:{sn:"Hokkaid\u014d",ln:"Abashiri District, Hokkaid\u014d"},1532:{sn:"Hokkaid\u014d",ln:"Nemuro, Hokkaid\u014d"},1537:{sn:"Hokkaid\u014d",ln:"Notsuke District, Shibetsu District, Hokkaid\u014d"},1538:{sn:"Hokkaid\u014d",ln:"Menashi District, Notsuke District, Shibetsu District, Hokkaid\u014d"},1547:{sn:"Hokkaid\u014d",ln:"Shiranuka District, Hokkaid\u014d"},1548:{sn:"Hokkaid\u014d",ln:"Kamikawa District, Hokkaid\u014d"},1557:{sn:"Hokkaid\u014d",ln:"Nakagawa District, Tokachi District, Hokkaid\u014d"},
1558:{sn:"Hokkaid\u014d",ln:"Hiroo District, Hokkaid\u014d"},1562:{sn:"Hokkaid\u014d",ln:"Ashoro District, Nakagawa District, Hokkaid\u014d"},1564:{sn:"Hokkaid\u014d",ln:"Kat\u014d District, Hokkaid\u014d"},1566:{sn:"Hokkaid\u014d",ln:"Kamikawa District, Kat\u014d District, Hokkaid\u014d"},1582:{sn:"Hokkaid\u014d",ln:"Monbetsu, Hokkaid\u014d"},1584:{sn:"Hokkaid\u014d",ln:"Monbetsu District, Hokkaid\u014d"},1586:{sn:"Hokkaid\u014d",ln:"Monbetsu District, Hokkaid\u014d"},1587:{sn:"Hokkaid\u014d",ln:"Monbetsu District, Hokkaid\u014d"},
1588:{sn:"Hokkaid\u014d",ln:"Monbetsu District, Hokkaid\u014d"},1632:{sn:"Hokkaid\u014d",ln:"Teshio District, Hokkaid\u014d"},1634:{sn:"Hokkaid\u014d",ln:"Esashi District, Hokkaid\u014d"},1635:{sn:"Hokkaid\u014d",ln:"S\u014dya District, Wakkanai, Hokkaid\u014d"},1636:{sn:"Hokkaid\u014d",ln:"Esashi District, Hokkaid\u014d"},1638:{sn:"Hokkaid\u014d",ln:"Rebun District, Rishiri District, Hokkaid\u014d"},1645:{sn:"Hokkaid\u014d",ln:"Rumoi District, Hokkaid\u014d"},1646:{sn:"Hokkaid\u014d",ln:"Tomamae District, Hokkaid\u014d"},
1648:{sn:"Hokkaid\u014d",ln:"Tomamae District, Hokkaid\u014d"},1652:{sn:"Hokkaid\u014d",ln:"Shibetsu, Hokkaid\u014d"},1653:{sn:"Hokkaid\u014d",ln:"Ury\u016b District, Hokkaid\u014d"},1654:{sn:"Hokkaid\u014d",ln:"Nayoro, Hokkaid\u014d"},1655:{sn:"Hokkaid\u014d",ln:"Kamikawa District, Hokkaid\u014d"},1656:{sn:"Hokkaid\u014d",ln:"Nakagawa District, Hokkaid\u014d"},1658:{sn:"Hokkaid\u014d",ln:"Kamikawa District, Hokkaid\u014d"},2549:{sn:"Niigata",ln:"Higashikanbara District, Niigata"},2559:{sn:"Niigata",
ln:"Higashikubiki District, Niigata"},2579:{sn:"Niigata",ln:"Kitauonuma District, Niigata"},2955:{sn:"Ibaraki",ln:"Higashiibaraki District, Naka District, Ibaraki"},2957:{sn:"Ibaraki",ln:"Kuji District, Ibaraki"},4992:{sn:"Tokyocho",ln:"\u014cshima, Tokyocho"},4994:{sn:"Tokyocho",ln:"Miyake, Tokyocho"},4996:{sn:"Tokyo",ln:"Hachi\u014dji, Tokyo"},4998:{sn:"Tokyo",ln:"Ogasawara, Tokyo"},5312:{sn:"Aichi",ln:"Atsumi District, Aichi"},5313:{sn:"Aichi",ln:"Atsumi District, Aichi"},5362:{sn:"Aichi",ln:"Shinshiro, Aichi"},
5363:{sn:"Aichi",ln:"Minamishitara District, Aichi"},5366:{sn:"Aichi",ln:"Kitashitara District, Aichi"},5367:{sn:"Aichi",ln:"Kitashitara District, Aichi"},5368:{sn:"Aichi",ln:"Kitashitara District, Aichi"},5613:{sn:"Aichi",ln:"Aichi District, Nishikamo District, Aichi"},5617:{sn:"Aichi",ln:"Aichi District, Nisshin, Aichi"},5675:{sn:"Aichi",ln:"Ama District, Aichi"},5679:{sn:"Aichi",ln:"Ama District, Aichi"},5747:{sn:"Gifu",ln:"Kamo District, Gifu"},5769:{sn:"Gifu",ln:"\u014cno District, Gifu"},5958:{sn:"Mie",
ln:"Kameyama, Mie"},5959:{sn:"Mie",ln:"Suzuka District, Mie"},5972:{sn:"Mie",ln:"Owase, Mie"},5973:{sn:"Mie",ln:"Kitamuro District, Mie"},5974:{sn:"Mie",ln:"Kitamuro District, Mie"},5978:{sn:"Mie",ln:"Kumano, Mie"},5979:{sn:"Wakayama",ln:"Higashimuro District, Minamimuro District, Mie, Wakayama"},5983:{sn:"Mie",ln:"Taki District, Mie"},5984:{sn:"Mie",ln:"Ichishi District, Iinan District, Mie"},5987:{sn:"Mie",ln:"Taki District, Watarai District, Mie"},5988:{sn:"Mie",ln:"Taki District, Watarai District, Mie"},
5994:{sn:"Mie",ln:"Shima District, Mie"},5995:{sn:"Mie",ln:"Shima District, Toba, Mie"},5996:{sn:"Mie",ln:"Watarai District, Mie"},5997:{sn:"Mie",ln:"Shima District, Mie"},5998:{sn:"Mie",ln:"Shima District, Mie"},7354:{sn:"Wakayama",ln:"Higashimuro District, Minamimuro District, Mie, Yoshino District, Nara, Wakayama"},7355:{sn:"Wakayama",ln:"Higashimuro District, Wakayama"},7356:{sn:"Wakayama",ln:"Nishimuro District, Wakayama"},7357:{sn:"Wakayama",ln:"Higashimuro District, Wakayama"},7437:{sn:"Osaka",
ln:"Shij\u014dnawate, Osaka"},7439:{sn:"Nara",ln:"Soekami District, Soraku District, Kyoto, Nara"},7443:{sn:"Nara",ln:"Shiki District, Nara"},7463:{sn:"Nara",ln:"Yoshino District, Nara"},7472:{sn:"Nara",ln:"Goj\u014d, Nara"},7473:{sn:"Nara",ln:"Yoshino District, Nara"},7617:{sn:"Ishikawa",ln:"Enuma District, Kaga, Ishikawa"},7619:{sn:"Ishikawa",ln:"Ishikawa District, Nomi District, Ishikawa"},7797:{sn:"Fukui",ln:"Asuwa District, Fukui"},7912:{sn:"Hy\u014dgo",ln:"Aioi, Hy\u014dgo"},7914:{sn:"Hy\u014dgo",
ln:"Ako, Hy\u014dgo"},7915:{sn:"Hy\u014dgo",ln:"Ak\u014d District, Hy\u014dgo"},7932:{sn:"Hy\u014dgo",ln:"Ibo District, Shikama District, Hy\u014dgo"},7933:{sn:"Hy\u014dgo",ln:"Shikama District, Hy\u014dgo"},8207:{sn:"Yamaguchi",ln:"\u014cshima District, Yamaguchi"},8247:{sn:"Hiroshima",ln:"Sh\u014dbara, Hiroshima"},8248:{sn:"Hiroshima",ln:"Hiba District, Hiroshima"},8262:{sn:"Hiroshima",ln:"Saeki District, Yamagata District, Hiroshima"},8275:{sn:"Yamaguchi",ln:"Iwakuni, Kuga District, \u014ctake, Saeki District, Hiroshima, Yamaguchi"},
8375:{sn:"Yamaguchi",ln:"Mine, Yamaguchi"},8376:{sn:"Yamaguchi",ln:"Mine District, Toyora District, Yamaguchi"},8387:{sn:"Yamaguchi",ln:"Abu District, Yamaguchi"},8388:{sn:"Yamaguchi",ln:"Abu District, Yamaguchi"},8395:{sn:"Yamaguchi",ln:"Abu District, Yamaguchi"},8396:{sn:"Yamaguchi",ln:"Mine District, Yamaguchi"},8452:{sn:"Hiroshima",ln:"Innoshima, Toyota District, Hiroshima"},8466:{sn:"Hiroshima",ln:"Toyota District, Hiroshima"},8472:{sn:"Hiroshima",ln:"Sera District, Hiroshima"},8473:{sn:"Hiroshima",
ln:"Kamo District, Sera District, Hiroshima"},8477:{sn:"Hiroshima",ln:"Hiba District, Hiroshima"},8478:{sn:"Hiroshima",ln:"Jinseki District, Hiroshima"},8487:{sn:"Hiroshima",ln:"Mitsugi District, Hiroshima"},8514:{sn:"Shimane",ln:"Oki District, Shimane"},8548:{sn:"Shimane",ln:"Nima District, \u014cda, Shimane"},8567:{sn:"Shimane",ln:"Kanoashi District, Shimane"},8636:{sn:"Okayama",ln:"Kojima District, Okayama"},8654:{sn:"Okayama",ln:"Asakuchi District, Okayama"},8687:{sn:"Okayama",ln:"Aida District, Katsuta District, Kume District, Okayama"},
8692:{sn:"Okayama",ln:"Oku District, Okayama"},8695:{sn:"Okayama",ln:"Akaiwa District, Kume District, Wake District, Okayama"},8699:{sn:"Okayama",ln:"Akaiwa District, Okayama"},8802:{sn:"K\u014dchi",ln:"Hata District, Takaoka District, K\u014dchi"},8808:{sn:"K\u014dchi",ln:"Tosashimizu, K\u014dchi"},8846:{sn:"Tokushima",ln:"Naka District, Tokushima"},8847:{sn:"Tokushima",ln:"Kaifu District, Tokushima"},8853:{sn:"Tokushima",ln:"Komatsushima, Naka District, Tokushima District, Tokushima"},8854:{sn:"Tokushima",
ln:"Katsura District, Tokushima"},8872:{sn:"K\u014dchi",ln:"Aki District, Muroto, K\u014dchi"},8873:{sn:"K\u014dchi",ln:"Aki District, Aki, K\u014dchi"},8874:{sn:"K\u014dchi",ln:"Aki District, K\u014dchi"},8875:{sn:"K\u014dchi",ln:"Kami District, Nagaoka District, K\u014dchi"},9204:{sn:"Nagasaki",ln:"Iki, Nagasaki"},9205:{sn:"Nagasaki",ln:"Shimoagata District, Nagasaki"},9208:{sn:"Nagasaki",ln:"Kamiagata District, Nagasaki"},9302:{sn:"Fukuoka",ln:"Miyako District, Fukuoka"},9304:{sn:"Fukuoka",ln:"Miyako District, Fukuoka"},
9305:{sn:"Fukuoka",ln:"Chikujo District, Fukuoka"},9437:{sn:"Fukuoka",ln:"Asakura District, Hita District, \u014cita, Ukiha District, Fukuoka"},9492:{sn:"Fukuoka",ln:"Kurate District, Nogata, Fukuoka"},9493:{sn:"Fukuoka",ln:"Kurate District, Fukuoka"},9496:{sn:"Fukuoka",ln:"Iizuka, Kaho District, Fukuoka"},9546:{sn:"Saga",ln:"Fujitsu District, Kashima, Kishima District, Saga"},9676:{sn:"Kumamoto",ln:"Aso District, Kumamoto"},9697:{sn:"Kumamoto",ln:"Amakusa District, Ushibuka, Kumamoto"},9737:{sn:"\u014cita",
ln:"Kusu District, \u014cita"},9786:{sn:"\u014cita",ln:"Higashikunisaki District, Kitsuki, \u014cita"},9802:{sn:"Okinawa",ln:"Shimajiri District, Okinawa"},9807:{sn:"Okinawa",ln:"Hirara, Miyako District, Okinawa"},9808:{sn:"Okinawa",ln:"Ishigaki, Yaeyama District, Okinawa"},9912:{sn:"Kagoshima",ln:"Kagoshima District, Kagoshima"},9913:{sn:"Kagoshima",ln:"Kagoshima District, Kagoshima"},9942:{sn:"Kagoshima",ln:"Kimotsuki District, Kagoshima"},9952:{sn:"Kagoshima",ln:"Isa District, Okuchi, Kagoshima"},
9969:{sn:"Kagoshima",ln:"Satsuma District, Kagoshima"},9972:{sn:"Kagoshima",ln:"Kumage District, Nishinoomote, Kagoshima"},9974:{sn:"Kagoshima",ln:"Kumage District, Kagoshima"},9977:{sn:"Kagoshima",ln:"\u014cshima District, Kagoshima"},13379:{sn:"Hokkaid\u014d",ln:"Hamamasu District, Hokkaid\u014d"},15829:{sn:"Hokkaid\u014d",ln:"Monbetsu District, Hokkaid\u014d"},16528:{sn:"Hokkaid\u014d",ln:"Kamikawa District, Hokkaid\u014d"},16532:{sn:"Hokkaid\u014d",ln:"Kamikawa District, Hokkaid\u014d"},16534:{sn:"Hokkaid\u014d",
ln:"Kamikawa District, Hokkaid\u014d"},53145:{sn:"Aichi",ln:"Atsumi District, Aichi"},53683:{sn:"Aichi",ln:"Kitashitara District, Aichi"},58138:{sn:"Gifu",ln:"Motosu District, Gifu"},58139:{sn:"Gifu",ln:"Ibi District, Gifu"},58157:{sn:"Gifu",ln:"Mugi District, Gifu"},58158:{sn:"Gifu",ln:"Mugi District, Gifu"},58689:{sn:"Gifu",ln:"Hashima District, Gifu"},59832:{sn:"Mie",ln:"Iinan District, Mie"},59849:{sn:"Mie",ln:"Taki District, Mie"},59856:{sn:"Mie",ln:"Ichishi District, Mie"},59872:{sn:"Mie",ln:"Watarai District, Mie"},
73549:{sn:"Wakayama",ln:"Higashimuro District, Wakayama"},74395:{sn:"Kyoto",ln:"Soraku District, Kyoto"},82485:{sn:"Hiroshima",ln:"Hiba District, Hiroshima"},82486:{sn:"Hiroshima",ln:"Hiba District, Hiroshima"},82488:{sn:"Hiroshima",ln:"K\u014dnu District, Sh\u014dbara, Hiroshima"},84732:{sn:"Hiroshima",ln:"Mitsugi District, Toyota District, Hiroshima"},84762:{sn:"Hiroshima",ln:"K\u014dnu District, Hiroshima"},84767:{sn:"Hiroshima",ln:"K\u014dnu District, Hiroshima"},86542:{sn:"Okayama",ln:"Asakuchi District, Okayama"},
86554:{sn:"Okayama",ln:"Asakuchi District, Okayama"},86926:{sn:"Okayama",ln:"Oku District, Okayama"},93032:{sn:"Fukuoka",ln:"Miyako District, Fukuoka"},93033:{sn:"Fukuoka",ln:"Miyako District, Fukuoka"}};
ilib.data.extarea_TW={2:{sn:"Taipei",ln:"Taipei County, Keelung, Panchiao, Sanchung, Yingge, Yungho, Jilong"},3:{sn:"Taoyuan",ln:"Taoyuan, Hsinchu, Ilan, Hualian, and Miaoli Counties"},4:{sn:"Taichung",ln:"Wurim, Wufeng, Shalong, Yuanlin, Taichung City"},5:{sn:"Chiayi",ln:"Chiayi City, Chiayi County"},6:{sn:"Tainan",ln:"Tainan County, Chiali, Makung, Shanhua"},7:{sn:"Kaohsiung",ln:"Fengshan, Gangshan, Kaohsiung, Jiuqutang, Nanzi, Qishan, Zuoying, Kaohsiung County and the Pratas and Spratly Islands"},
8:{sn:"Pingtung",ln:"Pingtung, Kinmen, Lienchiang, Taitung Counties, Wuqiu Township"},32:{sn:"Taoyuan",ln:"Taoyuan County"},33:{sn:"Taoyuan",ln:"Daxi, Taoyuan City"},34:{sn:"Taoyuan",ln:"Zhongli, Taoyuan County"},35:{sn:"Hsinchu Hsinchu County, Chubei"},36:{sn:"Hsinchu",ln:"Hsinchu County, Hukou, Zhudong"},37:{sn:"Miaoli",ln:"Miaoli County, Zhunan, Miaoli"},38:{sn:"Hualian",ln:"Hualian County"},39:{sn:"Ilan",ln:"Ilan County, Jiaoqi, Su'ao, Luodong"},43:{sn:"Taichung",ln:"Taichung City"},44:{sn:"Taichung",
ln:"Taichung City"},45:{sn:"Taichung",ln:"Houli, Lishan, Taichung City"},46:{sn:"Dadu",ln:"Dadu, Dajia, Shalu, Qingshui, Rinan, Wuchi"},47:{sn:"Changhua",ln:"Lugang, Changhua City"},48:{sn:"Changhua",ln:"Shetou, Tianzhong, Yongjing, Yuanlin, Changhua County"},49:{sn:"Nantou",ln:"Buli, Riyuetan, Xincun, Zhongxing, Nantou County"},52:{sn:"Chiayi",ln:"Minxiong, Chiayi City"},53:{sn:"Chiayi",ln:"Puzi, Xingang, Chiayi County"},55:{sn:"Yunlin",ln:"Douliu, Yunlin County"},56:{sn:"Yunlin",ln:"Huwei, Yunlin County"},
57:{sn:"Yunlin",ln:"Beigang, Yunlin County"},62:{sn:"Tainan",ln:"Tainan City"},63:{sn:"Tainan",ln:"Tainan City"},65:{sn:"Tainan",ln:"Xinhua and Shanhua, Tainan"},66:{sn:"Tainan",ln:"Xinying, Tainan"},67:{sn:"Tainan",ln:"Jiali, Tainan"},69:{sn:"Penghu",ln:"Penghu County"},87:{sn:"Pingtung",ln:"Pingtung City and Chaozhou, Pingtung County"},88:{sn:"Pingtung",ln:"Donggang and Kenting, Pingtung County"},89:{sn:"Taitung",ln:"Taitung County"},422:{sn:"Taichung",ln:"Taichung City"},423:{sn:"Taichung",ln:"Taichung City"},
424:{sn:"Taichung",ln:"Taichung City"},425:{sn:"Taichung",ln:"Fengyuan, including Zhuolan, Miaoli, Taichung City"},426:{sn:"Taichung",ln:"Dajia and Shalu, Taichung City"},470:{sn:"Taichung",ln:"Taichung City"},826:{sn:"Wuqiu",ln:"Wuqiu Township"},827:{sn:"Tung-Sha",ln:"Tung-Sha Island"},8232:{sn:"Kinmen",ln:"Jincheng and Jinning, Kinmen County"},8233:{sn:"Kinmen",ln:"Jinhu, Kinmen County"},8235:{sn:"Kinmen",ln:"Jinsha, Kinmen County"},8236:{sn:"Kinmen",ln:"Lieyu, Kinmen County"},8362:{sn:"Matsu",
ln:"Nangan, Matsu, Lienchiang County"},8365:{sn:"Matsu",ln:"Beigan, Matsu, Lienchiang County"},8367:{sn:"Matsu",ln:"Dongyin, Matsu, Lienchiang County"},8368:{sn:"Matsu",ln:"Juguang, Matsu, Lienchiang County"}};
ilib.data.extstates_AU={s:[0,0,{s:[0,0,0,{s:[0,0,0,7,0,0,0,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,{l:7,s:[0,0,0,0,0,{s:[7]}]},7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{l:7,s:[{l:7,s:[0,{s:[7]}]},0,0,7,7,7,0,7,7]},{l:7,s:[7,7,7,7,7,7,7,7,7,7]},{l:7,s:[7,{l:7,s:[0,0,0,7,7,7,0,0,7]},7,7,7,7,{l:7,s:[7,7,7,0,0,7,7]},7,7,7]}]},{s:[0,0,0,{s:[0,0,7,7,7]},{s:[7,7,7,7,7,7,0,7,7,7]},{s:[7,7,7,7,7,{l:7,s:[0,0,0,0,0,{s:[7]}]},7,7,7,7]},{s:[0,7,7,7,7,7,0,7]},{l:7,s:[{l:7,s:[0,{s:[7]}]},7,7,7,0,7,0,7,7,7]},
{l:7,s:[7,7,7,7,7,7,7,7,7,7]},{l:7,s:[7,7,7,7,7,7,7,7,7,7]}]},0,0,0,{s:[{s:[0,0,0,0,7]},0,{l:7,s:[0,7,7,0,7,0,0,0,7]},{l:7,s:[7,7,{s:[7,7,7,7,7,7,7,7,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},7,7,7,7,{s:[7,7,7,7,7,7,7,7,7,7]},7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,0,7,7,7,{l:7,s:[0,0,0,0,0,{s:[7]}]},7,7]},0,{s:[{l:7,s:[0,{s:[7]}]},0,0,0,0,7,7,7,0,7]}]},{s:[0,0,{s:[0,0,0,0,0,7,7]},0,0,{s:[0,7,{l:7,s:[7,7,7,7,0,0,0,7,0,7]},{l:7,s:[7,7,7,7,0,0,0,7,0,7]},{l:7,s:[7,7,7,7,0,0,0,7,0,7]},{l:7,s:[0,0,0,0,0,{s:[7]}]},0,
0,7]},{s:[7,{l:7,s:[7,7,7,7,7,7,7,7,7,7]},{l:7,s:[7,7,7,7,7,7,7,7,7,7]},{l:7,s:[7,7,7,7,7,7,7,7,7,7]},{l:7,s:[7,7,7,7,7,7,7,7,7,7]},{l:7,s:[7,0,0,0,7,7,7,7,7,7]},7,7,7,7]},{s:[{l:7,s:[0,{s:[7]}]},{l:7,s:[7,7,7,7,7,7,7,7,7,7]},{l:7,s:[7,7,7,7,7,7,7,7,7,7]},{l:7,s:[7,7,7,7,7,7,7,7,7,7]},{l:7,s:[7,7,7,7,7,7,7,7,7,7]},7,7,7,7,7]},{s:[7,{l:7,s:[7,7,7,7,7,7,7,7,7,7]},{l:7,s:[7,7,7,7,7,7,7,7,7,7]},{l:7,s:[7,7,7,7,7,7,7,7,7,7]},{l:7,s:[7,7,7,7,7,7,7,7,7,7]},7,7,7,7,7]},{s:[7,{l:7,s:[0,0,0,0,0,0,{s:[0,0,7,
0,7]}]},{l:7,s:[7,7,7,7,7,7,7,7,7,7]},{l:7,s:[7,7,7,7,7,7,7,7,7,7]},{l:7,s:[7,7,7,7,7,7,7,7,7,7]},7,7,7,7,7]}]}]};ilib.data.extstates_FR={s:[0,0,{s:[0,0,0,0,0,0,{s:[0,0,7,0,0,0,0,0,0,7]}]},0,0,{s:[{s:[0,0,0,0,0,0,0,0,7]},0,0,0,0,0,0,0,0,{s:[7,0,0,0,7,0,7]}]},{s:[0,0,0,{s:[0,0,0,0,0,0,0,0,0,7]},0,0,0,0,0,{s:[7,0,7,0,7,0,7]}]},0,{l:7,s:[{s:[7,7,7,7,0,7,0,0,0,7]},{l:7,s:[0,0,0,0,0,0,0,0,0,7]},7,0,0,0,0,0,0,7]}]};
ilib.data.extstates_JP={s:[0,{s:[0,7,{s:[0,0,0,{l:7,s:[0,0,0,0,0,7,0,7,7]},{s:[0,0,7]},7,{l:7,s:[0,0,0,0,0,0,7,7]}]},{s:[0,0,0,{l:7,s:[0,0,7,0,0,0,0,{l:7,s:[0,0,0,0,0,0,0,0,0,7]}]},7,7,7,{s:[0,0,7,0,7,0,7,7,7]},7,{s:[0,0,7,0,7,7,7,7,7]}]},{s:[0,0,7,7,7,{s:[0,0,7,0,7,0,7,7]},{s:[0,0,7,7,7,0,7]}]},{s:[0,0,{l:7,s:[0,0,7,0,0,0,0,7]},{l:7,s:[0,0,7,0,0,0,0,7,7]},{l:7,s:[0,0,0,0,0,0,0,7,7]},{l:7,s:[0,0,0,0,0,0,0,7,7]},{s:[0,0,7,0,7,0,7]},7,{s:[0,0,{l:7,s:[0,0,0,0,0,0,0,0,0,7]},0,7,0,7,7,7]}]},{s:[0,0,7,
{s:[0,0,7,0,7,7,7,0,7]},{l:7,s:[0,0,0,0,0,7,7,0,7]},{s:[0,0,{l:7,s:[0,0,0,0,0,0,0,0,7]},{l:7,s:[0,0,7,0,7]},7,7,7,0,7]},7,7]},{s:[0,0,7,7,7,7,7,7,7,7]},{s:[0,0,7,7,7,7,7,7,7]},{l:7,s:[0,7,7,7,7,7,0,7,7]}]},{s:[0,0,{l:7,s:[7,0,0,7,7,7,7,0,7,7]},{l:7,s:[0,0,0,7,7,7,7,7,7]},{l:7,s:[7,7,7,7,7,0,7,7,7,7]},{l:7,s:[7,0,0,0,{l:7,s:[0,0,0,0,0,0,0,0,0,7]},{l:7,s:[0,0,0,0,0,0,0,0,0,7]},7,{l:7,s:[0,0,0,0,0,0,0,0,0,7]},7,7]},{l:7,s:[7,7,0,7,7,7,7,7,7,7]},{l:7,s:[7,0,0,7,7,0,7,7,7,7]},{l:7,s:[7,0,7,7,7,7,0,7,7,
7]},{l:7,s:[0,7,7,7,7,{s:[0,0,0,0,0,7,0,7]},7,7,7,7]}]},7,{s:[0,0,{l:7,s:[0,0,7,7,7,0,7,7,7,7]},{l:7,s:[0,0,0,0,7,0,7,0,7,7]},7,7,{s:[7,0,7,7,0,7,7,7,7]},{l:7,s:[7,7,0,0,7,7,7,0,7,7]},{l:7,s:[7,0,0,0,0,7,0,0,0,7]},{s:[0,0,7,7,7,7,0,0,0,{s:[0,0,7,0,7,0,7,0,7]}]}]},{s:[0,0,7,{l:7,s:[0,{s:[0,0,7,7,{s:[0,0,0,0,0,7]}]},7,7,0,0,{s:[0,0,7,7,0,0,7,7,{l:7,s:[0,0,0,7]}]},7,7,7]},{l:7,s:[0,0,0,7,7,7,0,7,7]},{s:[7,7,7,7,7,7,7,7,7,7]},{s:[0,{l:7,s:[0,0,0,7,0,0,0,7]},7,7,7,7,7,{l:7,s:[0,0,0,0,0,7,0,0,0,7]},7,7]},
{s:[0,0,7,7,{l:7,s:[0,0,0,0,0,0,0,7]},7,{l:7,s:[0,0,0,0,0,0,0,0,0,7]},7,7]},{l:7,s:[0,{l:7,s:[0,0,0,{s:[0,0,0,0,0,0,0,0,7,7]},0,{s:[0,0,0,0,0,0,0,7,7]}]},0,7,7,7,{l:7,s:[0,0,0,0,0,0,0,0,{s:[0,0,0,0,0,0,0,0,0,7]}]},7]},{l:7,s:[0,0,0,7,7,{l:7,s:[0,0,0,0,0,0,0,0,7,7]},7,{s:[0,0,7,7,7,0,0,0,7,7]},{l:7,s:[0,0,0,{l:7,s:[0,0,7]},{l:7,s:[0,0,0,0,0,0,0,0,0,7]},{s:[0,0,0,0,0,0,7]},0,{l:7,s:[0,0,7]},7]},{l:7,s:[0,0,0,0,7,7,7,7,7]}]}]},7,{s:[0,0,{l:7,s:[0,7,7,7,7,7,7,7,0,7]},{s:[0,0,0,0,7,{l:7,s:[0,0,0,0,{l:7,
s:[0,0,0,0,0,0,0,0,0,7]},7,7,7]},7,7,7,7]},{s:[7,0,7,{l:7,s:[0,0,0,0,0,0,0,7,0,{l:7,s:[0,0,0,0,0,7]}]},{l:7,s:[0,0,0,7]},7,{s:[0,0,0,7]},{l:7,s:[0,0,7,7]},7,7]},7,{l:7,s:[0,{l:7,s:[0,0,0,0,0,0,0,7,0,7]},0,7,7,7,7,7,7]},{l:7,s:[7,7,7,7,7,7,7,0,7,{l:7,s:[0,0,0,0,0,0,0,7]}]},7,{s:[7,{l:7,s:[0,0,7,0,7,7]},7,{s:[0,0,7,7]},7,7,7,7,7,7]}]},{s:[0,0,{l:7,s:[{l:7,s:[0,0,0,0,0,0,0,7]},0,0,7,{l:7,s:[0,0,0,0,0,0,0,7,{l:7,s:[0,0,0,0,0,7,7,0,7]}]},0,{l:7,s:[0,0,7]},{l:7,s:[0,0,0,0,0,7]},0,7]},{s:[0,0,7,7,7,7,7,
{l:7,s:[0,0,0,0,0,7,7]},{l:7,s:[0,0,0,0,0,0,0,7,7]},{l:7,s:[0,0,0,0,0,7,7]}]},{s:[0,0,0,0,0,{s:[0,0,7]},{l:7,s:[0,0,0,0,0,0,7]},{l:7,s:[0,0,7,{l:7,s:[0,0,7]},0,0,{s:[0,0,7,0,0,0,0,7]},7,7]},{l:7,s:[0,0,0,0,0,0,0,7]},7]},{s:[0,{s:[0,0,0,0,7]},7,7,{l:7,s:[0,0,0,0,0,0,0,0,7]},7,{l:7,s:[0,0,0,0,0,0,0,7]},7,7,7]},{l:7,s:[0,0,0,{l:7,s:[0,0,0,0,0,0,7]},0,{l:7,s:[0,0,0,0,{l:7,s:[0,0,7]},{s:[0,0,0,0,7]}]},7,7,{l:7,s:[0,0,0,0,0,0,0,7]},{l:7,s:[0,0,{l:7,s:[0,0,0,0,0,0,7]},0,0,7,0,0,0,7]}]},{l:7,s:[0,0,0,0,0,
7,0,7,0,7]},{s:[{l:7,s:[0,0,7,0,0,0,0,0,7]},0,0,7,{l:7,s:[0,0,0,0,0,0,7,7]},{s:[0,0,0,7,7]},7,{l:7,s:[0,0,7,7,7,7]},7,7]},{l:7,s:[0,0,7,7,7,7,7,7,7]}]},{s:[0,0,{l:7,s:[{s:[0,0,0,0,7,7,0,0,7]}]},{l:7,s:[{l:7,s:[0,0,7,{s:[0,0,7,7]},7,7]},0,0,7]},{s:[7,0,7,{l:7,s:[0,0,0,0,0,0,0,7]},7,0,7,7,7,{s:[0,0,7,7,0,0,7]}]},{l:7,s:[7,0,7,0,{l:7,s:[0,0,0,0,0,0,7]},7,7,7,0,7]},{l:7,s:[0,0,0,0,7,7,7,{l:7,s:[0,0,0,0,0,0,7]},7,{l:7,s:[0,0,0,0,0,0,0,7]}]},{s:[0,0,7,{l:7,s:[0,0,0,0,0,0,0,7]},7,7,0,7,{l:7,s:[0,0,0,0,0,
0,7]},7]},{l:7,s:[{l:7,s:[0,0,7,0,0,0,0,7,7]},0,7,7,7,7,7,7]},{l:7,s:[0,{s:[0,0,7,7]},0,7,{l:7,s:[0,0,7]},{l:7,s:[0,0,7]},{l:7,s:[0,0,0,0,0,0,0,0,0,7]},{l:7,s:[0,0,7,0,7,0,0,7]}]}]}]};ilib.data.extstates_TW={s:[0,0,7,{l:7,s:[0,0,7,7,7,7,7,7,7,7]},{l:7,s:[0,0,{s:[0,0,7,7,7,7,7]},7,7,7,7,{l:7,s:[7]},7,7]},{l:7,s:[0,0,7,7,0,7,7,7]},{l:7,s:[0,0,7,7,0,7,7,7,0,7]},7,{l:7,s:[0,0,{s:[0,0,0,{s:[0,0,7,7,0,7,7]},0,0,7,7]},{s:[0,0,0,0,0,0,{s:[0,0,7,0,0,7,0,7,7]}]},0,0,0,7,7,7]}]};
ilib.data.phoneres_de={"Alabama: Birmingham; Tuscaloosa; western and central Alabama":"Alabama: Birmingham; Tuscaloosa; westliches und mittleres Alabama",Albania:"Albanien","Alberta, Canada":"Alberta, Kanada",Algeria:"Algerien","Amer. Samoa":"Amer.-Samoa","American Samoa":"Amerikanisch-Samoa","Antigua and Barbuda":"Antigua und Barbuda",Argentina:"Argentinien","Arizona: Glendale, Sun City, Buckeye, Peoria, western Phoenix suburbs":"Arizona: Glendale, Sun City, Buckeye, Peoria, westliche Vororte von Phoenix",
"Arizona: Mesa, Scottsdale, Chandler, Gilbert, Tempe, Queen Creek, eastern Phoenix suburbs":"Arizona: Mesa, Scottsdale, Chandler, Gilbert, Tempe, Queen Creek, \u00f6stliche Vororte von Phoenix",Armenia:"Armenien","Armenia, Nagorno-Karabakh":"Armenien, Bergkarabach","Ascension Island":"Ascension",Australia:"Australien","Australia, Christmas Island, Cocos Islands":"Australien, Weihnachtsinsel, Kokosinseln",Austria:"\u00d6sterreich",Azerbaijan:"Aserbaidschan","Azerbaijan, Nagorno-Karabakh":"Aserbaidschan, Bergkarabach",
BVIs:"Britische Jungferninseln",Baleares:"Balearen",Bangladesh:"Bangladesch",Beijing:"Peking","Beijing \u5317\u4eac\u5e02":"Peking \u5317\u4eac\u5e02",Belgium:"Belgien",Bolivia:"Bolivien","Bosnia and Herzegovina":"Bosnien und Herzegowina",Botswana:"Botsuana",Brazil:"Brasilien","British Columbia, Canada":"British Columbia, Kanada","British Columbia: Victoria, Prince George, Prince Rupert, Kelowna; also Hyder, Alaska.":"British Columbia: Victoria, Prince George, Prince Rupert, Kelowna; auch Hyder, Alaska.",
"British Indian Ocean":"Britisches Territorium im Indischen Ozean","British Indian Ocean Territory":"Britisches Territorium im Indischen Ozean",Bulgaria:"Bulgarien",California:"Kalifornien","California: East Bay Area, Oakland, Berkeley, Alameda":"Kalifornien: \u00f6stliche Bay Area, Oakland, Berkeley, Alameda","California: Stockton, Modesto, Merced, Tracy, San Andreas and central California":"Kalifornien: Stockton, Modesto, Merced, Tracy, San Andreas und Zentralkalifornien",Cambodia:"Kambodscha",
Cameroon:"Kamerun","Cape Verde":"Kap Verde","Carrier Access":"Anbieterzugriff",Caymans:"Kaimaninseln","Central African Republic":"Zentralafrikanische Republik","Central Arkansas: Little Rock, Hot Springs":"Zentral-Arkansas: Little Rock, Hot Springs","Central California: Concord, Pleasant Hill, Walnut Creek, Martinez, Livermore, Pleasanton, Dublin":"Zentralkalifornien: Concord, Pleasant Hill, Walnut Creek, Martinez, Livermore, Pleasanton, Dublin","Central California: Fresno, Visalia, Madera, Hanford, Tulare":"Zentralkalifornien: Fresno, Visalia, Madera, Hanford, Tulare",
"Central California: Oakland, Berkeley, Alameda":"Zentralkalifornien: Oakland, Berkeley, Alameda","Central California: Oakland, Fremont, Hayward, Castro Valley, Alameda, Berkeley, Richmond":"Zentralkalifornien: Oakland, Fremont, Hayward, Castro Valley, Alameda, Berkeley, Richmond","Central California: Sacramento, Davis, Roseville":"Zentralkalifornien: Sacramento, Davis, Roseville","Central California: Salinas, Hollister, Monterey, Carmel, Santa Cruz":"Zentralkalifornien: Salinas, Hollister, Monterey, Carmel, Santa Cruz",
"Central California: San Francisco":"Zentralkalifornien: San Francisco","Central California: San Francisco, Marin County":"Zentralkalifornien: San Francisco, Marin County","Central California: San Jose":"Zentralkalifornien: San Jose","Central California: San Jose, Los Gatos, Milpitas, Sunnyvale, Cupertino, Gilroy":"Zentralkalifornien: San Jose, Los Gatos, Milpitas, Sunnyvale, Cupertino, Gilroy","Central California: San Mateo, Palo Alto, Redwood City, Menlo Park, Mountain View, southern San Francisco suburbs":"Zentralkalifornien: San Mateo, Palo Alto, Redwood City, Menlo Park, Mountain View, s\u00fcdliche Vororte von San Francisco",
"Central Coastal California: Ventura, San Luis Obispo, Santa Barbara, Oxnard, Simi Valley":"Zentralkalifornien, K\u00fcste: Ventura, San Luis Obispo, Santa Barbara, Oxnard, Simi Valley","Central Colorado: Denver, Boulder, Longmont, Aurora":"Zentral-Colorado: Denver, Boulder, Longmont, Aurora","Central Eastern Florida: Orlando, Cocoa Beach, St Cloud":"\u00d6stliches Zentral-Florida: Orlando, Cocoa Beach, St. Cloud","Central Eastern Florida: Orlando, Florida, St. Cloud":"\u00d6stliches Zentral-Florida: Orlando, Florida, St. Cloud",
"Central Eastern Florida: Vero Beach, Port Saint Lucie, Fort Pierce, Sebastian, Stuart":"\u00d6stliches Zentral-Florida: Vero Beach, Port Saint Lucie, Fort Pierce, Sebastian, Stuart","Central Eastern Louisiana: Baton Rouge, Donaldsonville, New Roads, White Castle":"\u00d6stliches Zentral-Louisiana: Baton Rouge, Donaldsonville, New Roads, White Castle","Central Eastern Tennessee: Knoxville, Gatlinburg, Newport, Jefferson City, Oak Ridge, Rockwood":"\u00d6stliches Zentral-Tennessee: Knoxville, Gatlinburg, Newport, Jefferson City, Oak Ridge, Rockwood",
"Central Florida: Gainesville, Ocala, Inverness, Dunnellon":"Zentral-Florida: Gainesville, Ocala, Inverness, Dunnellon","Central Florida: St Petersburg, Dunedin":"Zentral-Florida: St Petersburg, Dunedin","Central Florida: Tampa, Temple Terrace, Plant City, Pasco County, Oldsmar":"Zentral-Florida: Tampa, Temple Terrace, Plant City, Pasco County, Oldsmar","Central Georgia: Macon, Warner Robins, Swainsboro, Wadley, Milledgeville, Perry":"Zentral-Georgia: Macon, Warner Robins, Swainsboro, Wadley, Milledgeville, Perry",
"Central Illinois: Springfield, Champaign Decatur, Urbana, Lincoln":"Zentral-Illinois: Springfield, Champaign Decatur, Urbana, Lincoln","Central Indiana: Indianapolis, Carmel, Fishers, Noblesville, Greenwood, Mooresville, Beech Grove":"Zentral-Indiana: Indianapolis, Carmel, Fishers, Noblesville, Greenwood, Mooresville, Beech Grove","Central Indiana: Lafayette, Marion, Muncie, Richmond":"Zentral-Indiana: Lafayette, Marion, Muncie, Richmond","Central Iowa: Mason City, Oskaloosa, Creston, Pella, Ottumwa, Britt, Clear Lake, Fairfield":"Zentral-Iowa: Mason City, Oskaloosa, Creston, Pella, Ottumwa, Britt, Clear Lake, Fairfield",
"Central Michigan: Alpena, Mt. Pleasant, Bay City, Saginaw, Midland, Owosso":"Zentral-Michigan: Alpena, Mt. Pleasant, Bay City, Saginaw, Midland, Owosso","Central Minnesota: St. Cloud, Alexandria, Morris, Hutchinson, Sandstone, Appleton":"Zentral-Minnesota: St. Cloud, Alexandria, Morris, Hutchinson, Sandstone, Appleton","Central Mississippi: Jackson, Meridian, Natchez, McComb, Hattiesburg":"Zentral-Mississippi: Jackson, Meridian, Natchez, McComb, Hattiesburg","Central North Georgia: Marietta, Cedartown, Gainesville, Atlanta suburbs":"N\u00f6rdliches Zentral-Georgia: Marietta, Cedartown, Gainesville, Vororte von Atlanta",
"Central Oklahoma: Oklahoma City, Stillwater, Edmond, Norman, Shawnee, Chickasha":"Zentral-Oklahoma: Oklahoma City, Stillwater, Edmond, Norman, Shawnee, Chickasha","Central Ontario, Canada: Sudbury, Sault Ste. Marie, North Bay, Timmins, Barrie":"Zentral-Ontario, Kanada: Sudbury, Sault Ste. Marie, North Bay, Timmins, Barrie","Central South Carolina: Columbia, Rock Hill, Sumter, Aiken":"Zentral-South Carolina: Columbia, Rock Hill, Sumter, Aiken","Central Southern Quebec, Canada: Laval, Montreal suburbs":"S\u00fcdliches Zentral-Qu\u00e9bec, Kanada: Laval, Vororte von Montreal",
"Central Texas: Austin, San Marcos, Lampasas, Bastrop, Milam":"Zentral-Texas: Austin, San Marcos, Lampasas, Bastrop, Milam","Central Western Illinois: Peoria, Bloomington-Normal, Moline, Rock Island, Galesburg":"Westliches Zentral-Illinois: Peoria, Bloomington-Normal, Moline, Rock Island, Galesburg","Central and Southeastern New Jersey: Atlantic City, Trenton":"Mittleres und s\u00fcd\u00f6stliches New Jersey: Atlantic City, Trenton","Central and Southeastern Ohio: Columbus, Newark, Lancaster, Delaware, Mt. Vernon, Marion, Washington C.H., Marietta, Portsmouth, Cambridge, Zanesville, Coshocton, Stuebenville, Athens":"S\u00fcd\u00f6stliches und Zentral-Ohio: Columbus, Newark, Lancaster, Delaware, Mt. Vernon, Marion, Washington C.H., Marietta, Portsmouth, Cambridge, Zanesville, Coshocton, Stuebenville, Athens",
"Central and Southeastern Texas: Nacogdoches, Lufkin, Conroe, Huntsville":"S\u00fcd\u00f6stliches und Zentral-Texas: Nacogdoches, Lufkin, Conroe, Huntsville",Chad:"Tschad",Cologne:"K\u00f6ln",Colombia:"Kolumbien","Commonwealth of Dominica":"Commonwealth von Dominica",Comoros:"Komoren","Connecticut: Bridgeport, Danbury, New Haven, Waterbury, Southwestern Connecticut":"Connecticut: Bridgeport, Danbury, New Haven, Waterbury, s\u00fcdwestliches Connecticut","Connecticut: Bristol, Hartford, Norwich and northern and eastern Connecticut":"Connecticut: Bristol, Hartford, Norwich; n\u00f6rdliches und \u00f6stliches Connecticut",
"Cook Islands":"Cookinseln",Cordoba:"C\u00f3rdoba",Croatia:"Kroatien",Cuba:"Kuba",Cyprus:"Zypern","Czech Republic":"Tschechische Republik","C\u00f4te d'Ivoire":"C\u00f4te d\u2019Ivoire","D.R.":"Dominikanische Republik",DRC:"Kongo, Demokratische Volksrepublik","Democratic Republic of the Congo":"Kongo, Demokratische Republik",Denmark:"D\u00e4nemark","Dir. Assistance":"Auskunft","Directory Assistance Applications":"Auskunftsanwendungen",Djibouti:"Dschibuti","Dominican Republic":"Dominikanische Republik",
"E Arkansas":"O-Arkansas","E Florida":"O-Florida","E Iowa":"O-Iowa","E Kansas":"O-Kansas","E Kentucky":"O-Kentucky","E Louisiana":"O-Louisiana","E Maryland":"O-Maryland","E Massachusetts":"O-Massachusetts","E Nebraska":"O-Nebraska","E Ontario":"O-Ontario","E South Carolina":"O-South Carolina","E Tennessee":"O-Tennessee","E Washington":"O-Washington","E Wisconsin":"O-Wisconsin","East Central Minnesota: St Paul, Lindstrom, Red Wing, Hastings":"\u00d6stliches Zentral-Minnesota: St Paul, Lindstrom, Red Wing, Hastings",
"East Central Missouri: St. Charles, Chesterfield, Union, De Soto, Troy":"\u00d6stliches Zentral-Missouri: St. Charles, Chesterfield, Union, De Soto, Troy","East Central New Jersey: New Brunswick, Neptune, Freehold, Lakewood":"\u00d6stliches Zentral-New Jersey: New Brunswick, Neptune, Freehold, Lakewood","East Timor":"Osttimor","Eastern Arkansas: Texarkana, Jonesboro, Pine Bluff":"\u00d6stliches Arkansas: Texarkana, Jonesboro, Pine Bluff","Eastern Iowa: Cedar Rapids, Waterloo, Burlington, Iowa City":"\u00d6stliches Iowa: Cedar Rapids, Waterloo, Burlington, Iowa City",
"Eastern Iowa: Davenport, Dubuque, Bettendorf, Decorah, Clinton":"\u00d6stliches Iowa: Davenport, Dubuque, Bettendorf, Decorah, Clinton","Eastern Kansas: Kansas City, Overland Park, Paola, Leavenworth":"\u00d6stliches Kansas: Kansas City, Overland Park, Paola, Leavenworth","Eastern Kentucky: Ashland, Hazard, Somerset, London, Corbin, Pikeville, Maysville":"\u00d6stliches Kentucky: Ashland, Hazard, Somerset, London, Corbin, Pikeville, Maysville","Eastern Maryland: Baltimore, Annapolis, Salisbury":"\u00d6stliches Maryland: Baltimore, Annapolis, Salisbury",
"Eastern Massachusetts: Boston, Cambridge":"\u00d6stliches Massachusetts: Boston, Cambridge","Eastern Massachusetts: Saugus, Norwood, Waltham, Woburn, Boston suburbs":"\u00d6stliches Massachusetts: Saugus, Norwood, Waltham, Woburn, Vororte von Boston","Eastern Nebraska: Omaha, Lincoln, Norfolk, Superior":"\u00d6stliches Nebraska: Omaha, Lincoln, Norfolk, Superior","Eastern Ontario, Canada: Ottawa":"\u00d6stliches Ontario, Kanada: Ottawa","Eastern Ontario, Canada: Ottawa, Kingston":"\u00d6stliches Ontario, Kanada: Ottawa, Kingston",
"Eastern South Carolina: Florence, Myrtle Beach, Charleston, Isle of Palms, Hilton Head Island":"\u00d6stliches South Carolina: Florence, Myrtle Beach, Charleston, Isle of Palms, Hilton Head Island","Eastern Tennessee: Bristol, Johnson City, Kingsport; Chattanooga, Cleveland":"\u00d6stliches Tennessee: Bristol, Johnson City, Kingsport; Chattanooga, Cleveland","Eastern Washington: Spokane, the Tri-Cities, Yakima, Wenatchee, Walla Walla, Pullman, Ellensburg":"\u00d6stliches Washington: Spokane, Tri-Cities, Yakima, Wenatchee, Walla Walla, Pullman, Ellensburg",
"Eastern Wisconsin: Appleton, Sheboygan, Oshkosh, Green Bay, Manitowoc, Fond du Lac":"\u00d6stliches Wisconsin: Appleton, Sheboygan, Oshkosh, Green Bay, Manitowoc, Fond du Lac",Egypt:"\u00c4gypten","Emergency Services Number":"Notrufnummer","Equatorial Guinea":"\u00c4quatorialguinea",Estonia:"Estland",Ethiopia:"\u00c4thiopien","European Telephony":"Europ\u00e4ischer Telefonnummerierungsraum","European Telephony Numbering Space":"Europ\u00e4ischer Telefonnummerierungsraum",FYRoM:"Mazedonien, ehemalige jugoslawische Republik",
"Falkland Islands":"Falklandinseln",Falklands:"Falklandinseln","Faroe Islands":"F\u00e4r\u00f6er","Federated States of Micronesia":"Mikronesien",Fiji:"Fidschi",Finland:"Finnland","Finland, \u00c5land Islands":"Finnland, \u00c5landinseln","Former Yugoslav Republic of Macedonia":"Mazedonien, ehemalige jugoslawische Republik",France:"Frankreich",Freephone:"Geb\u00fchrenfreie Nummer","French Guiana":"Franz\u00f6sisch-Guayana","French Polynesia":"Franz\u00f6sisch-Polynesien",Gabon:"Gabun",Germany:"Deutschland",
"Global Mobile Satellite System":"Globales mobiles Satellitensystem","Global Satellite":"Globales Satellitensystem",Greece:"Griechenland",Greenland:"Gr\u00f6nland","Guadaloupe Island":"Guadaloupe","Guadeloupe, Saint Barth\u00e9lemy, Saint Martin":"Guadeloupe, Saint-Barth\u00e9lemy, Saint-Martin","Hong Kong":"Hongkong",Hungary:"Ungarn","Hyderabad East (Ghatkeswar), Hyderabad":"Hyderabad Ost (Ghatkeswar), Hyderabad",Iceland:"Island","Illinois: Aurora, Naperville, western Chicago":"Illinois: Aurora, Naperville, Chicago West",
"Illinois: Aurora, Naperville, western Chicago suburbs":"Illinois: Aurora, Naperville, westliche Vororte von Chicago","Illinois: Chicago Heights, Evergreen Park, Tinley Park, Elmwood Park, Cicero, Oak Forest, Oak Park, Berwyn, western Chicago suburbs":"Illinois: Chicago Heights, Evergreen Park, Tinley Park, Elmwood Park, Cicero, Oak Forest, Oak Park, Berwyn, westliche Vororte von Chicago","Inbound Intl.":"Eingehend intl.","Inbound international calls for carrier-specific services":"Eingehende internationale Anrufe f\u00fcr anbieterspezifische Dienste",
India:"Indien","Indiana: Southern Indiana, including Bloomington, Evansville, Jeffersonville, New Albany, and Terre Haute).":"Indiana: s\u00fcdliches Indiana, einschl. Bloomington, Evansville, Jeffersonville, New Albany, und Terre Haute",Indonesia:"Indonesien","International Networks":"Internationale Netzwerke","International Networks (country code)":"Internationale Netzwerke (Landeskennzahl)","International Premium Rate Service":"Internationaler Premium-Rate-Dienst",Iraq:"Irak",Ireland:"Irland",
"Islands of R\u00e9union and Mayotte":"R\u00e9union und Mayotte","Israel, Palestinian Authority":"Israel, Pal\u00e4stinensische Autonomiebeh\u00f6rde",Italy:"Italien","Italy, Vatican City":"Italien, Vatikanstadt",Jamaica:"Jamaika",Jordan:"Jordanien","Kentucky: west of the Pennyrile Parkway, including Fort Campbell, Henderson, Hopkinsville, Madisonville, Murray, and Paducah":"Kentucky: westlich des Pennyrile Parkway, einschl. Fort Campbell, Henderson, Hopkinsville, Madisonville, Murray und Paducah",
Kenya:"Kenia",Kyrgyzstan:"Kirgisistan","LD Carrier":"Verbindungsnetzbetreiber",Latvia:"Lettland",Lebanon:"Libanon",Libya:"Libyen",Lithuania:"Litauen","Long Distance Carrier Use":"Nutzung durch Verbindungsnetzbetreiber",Luxembourg:"Luxemburg",Madagascar:"Madagaskar",Malaga:"M\u00e1laga",Maldives:"Malediven","Manitoba, Canada":"Manitoba, Kanada",Marianas:"Marianen","Marshall Islands":"Marshallinseln","Martinique Island":"Martinique",Mauritania:"Mauretanien",Mexico:"Mexiko","Mexico City":"Mexiko-Stadt",
"Mexico City, Federal District":"Mexiko-Stadt, Hauptstadtbezirk",'Michigan: Port Huron, Flint, Lapeer, and Michigan "Thumb"':'Michigan: Port Huron, Flint, Lapeer und der "Daumen" von Michigan',Micronesia:"Mikronesien","Minnesota: Maple Grove, Monticello, Elk River, Fridley, Blaine, northwest Minneapolis":"Minnesota: Maple Grove, Monticello, Elk River, Fridley, Blaine, nordwestliches Minneapolis","Missouri: Columbia, Jefferson City, Hannibal, Cape Girardeau, Poplar Bluff, Farmington, Park Hills, Lake Ozark and eastern Missouri excluding St. Louis":"Missouri: Columbia, Jefferson City, Hannibal, Cape Girardeau, Poplar Bluff, Farmington, Park Hills, Lake Ozark und \u00f6stliches Missouri ausschl. St. Louis",
"Mobile Number":"Handynummer",Moldova:"Moldau",Mongolia:"Mongolei",Morocco:"Marokko","Morocco, Western Sahara":"Marokko, Westsahara",Mozambique:"Mosambik",Munich:"M\u00fcnchen","N Alberta":"N-Alberta","N California":"N-Kalifornien","N Georgia":"N-Georgia","N Illinois":"N-Illinois","N Kansas":"N-Kansas","N Kentucky":"N-Kentucky","N Louisiana":"N-Louisiana","N Michigan":"N-Michigan","N Minnesota":"N-Minnesota","N Mississippi":"N-Mississippi","N Ohio":"N-Ohio","N Texas":"N-Texas","N Virginia":"N-Virginia",
"N Wisconsin":"N-Wisconsin","NE Alabama":"NO-Alabama","NE California":"NO-Kalifornien","NE Florida":"NO-Florida","NE Illinois":"NO-Illinois","NE Indiana":"NO-Indiana","NE Massachusetts":"NO-Massachusetts","NE New York":"NO-New York","NE North Carolina":"NO-North Carolina","NE Ohio":"NO-Ohio","NE Oklahoma":"NO-Oklahoma","NE Pennsylvania":"NO-Pennsylvania","NE Texas":"NO-Texas","NW Arizona":"NW-Arizona","NW Arkansas":"NW-Arkansas","NW California":"NW-Kalifornien","NW Colorado":"NW-Colorado","NW Florida":"NW-Florida",
"NW Indiana":"NW-Indiana","NW Michigan":"NW-Michigan","NW New Jersey":"NW-New Jersey","NW New Mexico":"NW-New Mexico","NW Ohio":"NW-Ohio","NW Ontario":"NW-Ontario","NW Oregon":"NW-Oregon","NW Pennsylvania":"NW-Pennsylvania","National Rate":"Inlandstarif",Netherlands:"Niederlande","Netherlands Antilles":"Niederl\u00e4ndische Antillen","New Brunswick, Canada":"New Brunswick, Kanada","New Caledonia":"Neukaledonien","New Delhi":"Neu-Delhi","New Delhi, New Delhi":"Neu-Delhi, Neu-Delhi","New Jersey: Hackensack, Jersey City, Hoboken, Bayonne, Ridgewood, Union City, Teaneck, New Milford, and northeast New Jersey":"New Jersey: Hackensack, Jersey City, Hoboken, Bayonne, Ridgewood, Union City, Teaneck, New Milford und nord\u00f6stliches New Jersey",
"New York: Manhattan except for Marble Hill":"New York: Manhattan au\u00dfer Marble Hill",'New York: The "Outer Boroughs"':'New York: "Outer Boroughs"',"New Zealand":"Neuseeland",Newfoundland:"Neufundland","Newfoundland and Labrador, Canada: St. John's":"Neufundland und Labrador, Kanada: St. John's","Norfolk Island":"Norfolkinseln","Norfolk Island, Australian Antarctic Territory":"Norfolkinseln, Australisches Antarktis-Territorium","North America":"Nordamerika","North America and the Caribbean Islands":"Nordamerika und karibische Inseln",
"North Carolina: Greensboro, Winston-Salem, Wilkesboro, Roxboro, and northwest North Carolina":"North Carolina: Greensboro, Winston-Salem, Wilkesboro, Roxboro und nordwestliches North Carolina","North Central Indiana: South Bend, Logansport, Elkhart, Warsaw, Nappanee":"N\u00f6rdliches Zentral-Indiana: South Bend, Logansport, Elkhart, Warsaw, Nappanee","North Central Iowa: Des Moines, Ames, Fort Dodge, Jefferson, Algona, Indianola":"N\u00f6rdliches Zentral-Iowa: Des Moines, Ames, Fort Dodge, Jefferson, Algona, Indianola",
"North Central Kentucky: Lexington, Richmond, Danville, Covington, Florence, Mount Sterling":"N\u00f6rdliche Zentral-Kentucky: Lexington, Richmond, Danville, Covington, Florence, Mount Sterling","North Central Missouri: Sedalia, Kirksville, Macon, Marshall, Trenton, Maryville, Bethany":"N\u00f6rdliches und mittleres Missouri: Sedalia, Kirksville, Macon, Marshall, Trenton, Maryville, Bethany","North Central New York: Syracuse, New York, Utica, Watertown":"N\u00f6rdliches Zentral-New York: Syracuse, New York, Utica, Watertown",
"North Central North Carolina: Raleigh, Durham, Chapel Hill, Oxford, Goldsboro":"N\u00f6rdliches Zentral-North Carolina: Raleigh, Durham, Chapel Hill, Oxford, Goldsboro","North Central Tennessee: Nashville, Murfreesboro, Springfield, Lebanon, Dickson":"N\u00f6rdliches Zentral-Tennessee: Nashville, Murfreesboro, Springfield, Lebanon, Dickson","North Central Virginia: Roanoke, Fredericksburg, Blacksburg, Harrisonburg, Winchester":"N\u00f6rdliches Zentral-Virginia: Roanoke, Fredericksburg, Blacksburg, Harrisonburg, Winchester",
"North Korea":"Nordkorea","Northeast France":"Nordostfrankreich","Northeastern Florida: Jacksonville, St. Augustine, Starke, Green Cove Springs":"Nord\u00f6stliches Florida: Jacksonville, St. Augustine, Starke, Green Cove Springs","Northeastern Illinois: Arlington Heights, Buffalo Grove, Wauconda, Waukegan, Des Plaines, Chicago suburbs":"Nord\u00f6stliches Illinois: Arlington Heights, Buffalo Grove, Wauconda, Waukegan, Des Plaines, Vororte von Chicago","Northeastern Indiana: Fort Wayne, New Haven, Decatur, Angola, Huntington, Wabash":"Nord\u00f6stliches Indiana: Fort Wayne, New Haven, Decatur, Angola, Huntington, Wabash",
"Northeastern Massachusetts: Fitchburg, Peabody":"Nord\u00f6stliches Massachusetts: Fitchburg, Peabody","Northeastern New York: Albany, Schenectady, Plattsburgh, Saranac Lake":"Nord\u00f6stliches New York: Albany, Schenectady, Plattsburgh, Saranac Lake","Northeastern North Carolina: Greenville, Kitty Hawk, Rocky Mount":"Nord\u00f6stliches North Carolina: Greenville, Kitty Hawk, Rocky Mount","Northeastern Ohio: Akron, Canton, Youngstown, Warren":"Nord\u00f6stliches Ohio: Akron, Canton, Youngstown, Warren",
"Northeastern Oklahoma: Tulsa, Bartlesville, McAlester, Muskogee, Henryetta":"Nord\u00f6stliches Oklahoma: Tulsa, Bartlesville, McAlester, Muskogee, Henryetta","Northeastern Pennsylvania: Scranton, Williamsport, Wilkes-Barre, Nanticoke, Hazleton, Pottsville, Sunbury, Danville, Bloomsburg, Stroudsburg":"Nord\u00f6stliches Pennsylvania: Scranton, Williamsport, Wilkes-Barre, Nanticoke, Hazleton, Pottsville, Sunbury, Danville, Bloomsburg, Stroudsburg","Northeastern Texas: Tyler, Sherman, Longview, Marshall, Palestine, Jacksonville, Carthage":"Nord\u00f6stliches Texas: Tyler, Sherman, Longview, Marshall, Palestine, Jacksonville, Carthage",
"Northern Alberta, Canada: Edmonton, Jasper, Grande Prairie, Peace River":"N\u00f6rdliches Alberta, Kanada: Edmonton, Jasper, Grande Prairie, Peace River","Northern California coast":"Nordkalifornische K\u00fcste","Northern Illinois: Rockford, La Salle, De Kalb, Freeport, Joliet, Plainfield, Crystal Lake":"N\u00f6rdliches Illinois: Rockford, La Salle, De Kalb, Freeport, Joliet, Plainfield, Crystal Lake","Northern Ireland":"Nordirland","Northern Kansas: Colby, Topeka, Salina, Manhattan, Lawrence":"N\u00f6rdliches Kansas: Colby, Topeka, Salina, Manhattan, Lawrence",
"Northern Kentucky: Louisville, Frankfort, Shelbyville, Bardstown":"N\u00f6rdliches Kentucky: Louisville, Frankfort, Shelbyville, Bardstown","Northern Louisiana: Shreveport, Monroe, Alexandria, Fisher, Tallulah":"N\u00f6rdliches Louisiana: Shreveport, Monroe, Alexandria, Fisher, Tallulah","Northern Mariana Islands":"N\u00f6rdliche Marianen","Northern Michigan: Escanaba, Houghton, Iron Mountain, Marquette, Menominee, Sault Ste. Marie, Upper Peninsula":"N\u00f6rdliches Michigan: Escanaba, Houghton, Iron Mountain, Marquette, Menominee, Sault Ste. Marie, Obere Halbinsel",
"Northern Minnesota: Duluth, Thief River Falls, Brainerd, International Falls":"N\u00f6rdliches Minnesota: Duluth, Thief River Falls, Brainerd, International Falls","Northern Mississippi: Greenville, Tupelo, Winona, Columbus, Holly Springs":"N\u00f6rdliches Mississippi: Greenville, Tupelo, Winona, Columbus, Holly Springs","Northern Ohio: Cleveland suburbs, Elyria, Lorain, Oberlin, Ashtabula":"N\u00f6rdliches Ohio: Vororte von Cleveland, Elyria, Lorain, Oberlin, Ashtabula","Northern Texas: Vernon, Wichita Falls, Denton, Gainesville, Decatur":"N\u00f6rdliches Texas: Vernon, Wichita Falls, Denton, Gainesville, Decatur",
"Northern Virginia: Alexandria, Arlington, Fairfax, Prince William, eastern Loudoun counties":"N\u00f6rdliches Virginia: Alexandria, Arlington, Fairfax, Prince William Counties; \u00f6stliches Loudoun County","Northern Wisconsin: Wausau, Eau Claire, Rice Lake, Rhinelander, Ashland":"N\u00f6rdliches Wisconsin: Wausau, Eau Claire, Rice Lake, Rhinelander, Ashland","Northern and Eastern Alabama: Huntsville, Decatur, Cullman, Gadsden, Florence, Anniston":"N\u00f6rdliches und \u00f6stliches Alabama: Huntsville, Decatur, Cullman, Gadsden, Florence, Anniston",
"Northern and Eastern Florida: Daytona Beach, Lake City, Live Oak, Crescent City":"N\u00f6rdliches und \u00f6stliches Florida: Daytona Beach, Lake City, Live Oak, Crescent City","Northern and Western Arizona: Flagstaff, Kingman, Prescott, Yuma":"N\u00f6rdliches und westliches Arizona: Flagstaff, Kingman, Prescott, Yuma","Northern and Western Colorado: Aspen, Durango, Grand Junction, Fort Collins":"N\u00f6rdliches und westliches Colorado: Aspen, Durango, Grand Junction, Fort Collins","Northerneastern California: Redding, Chico, Davis, Placerville, Lake Tahoe, Susanville, Alturas, Truckee":"Nord\u00f6stliches Kalifornien: Redding, Chico, Davis, Placerville, Lake Tahoe, Susanville, Alturas, Truckee",
"Northwest California":"Nordwestliches Kalifornien","Northwest France":"Nordwestfrankreich","Northwest Indiana: Gary, Chesterton, Crown Point, East Chicago, Hammond, Hobart, Merrillville, Michigan City, Portage, Valparaiso":"Nordwestliches Indiana: Gary, Chesterton, Crown Point, East Chicago, Hammond, Hobart, Merrillville, Michigan City, Portage, Valparaiso","Northwestern Arkansas: Fort Smith, Fayetteville":"Nordwestliches Arkansas: Fort Smith, Fayetteville","Northwestern California: Napa, Vallejo, Santa Rosa, Ukiah, Crescent City, Eureka, Ukiah":"Nordwestliches California: Napa, Vallejo, Santa Rosa, Ukiah, Crescent City, Eureka, Ukiah",
"Northwestern Florida: Pensacola, Tallahassee, Panama City, the Florida panhandle":"Nordwestliches Florida: Pensacola, Tallahassee, Panama City, Florida-Panhandle","Northwestern Michigan: Muskegon, Traverse City, Ludington, Petoskey":"Nordwestliches Michigan: Muskegon, Traverse City, Ludington, Petoskey","Northwestern New Jersey: Newark, Paterson":"Nordwestliches New Jersey: Newark, Paterson","Northwestern New Mexico: Albuquerque, Santa Fe, Farmington, Gallup":"Nordwestliches New Mexico: Albuquerque, Santa Fe, Farmington, Gallup",
"Northwestern Ohio: Toledo, Sylvania, Mansfield, Lima, Findlay, Bryan, Sandusky, Bowling Green":"Nordwestliches Ohio: Toledo, Sylvania, Mansfield, Lima, Findlay, Bryan, Sandusky, Bowling Green","Northwestern Ontario, Canada: Thunder Bay, Kenora, Dryden, Greenstone":"Nordwestliches Ontario, Kanada: Thunder Bay, Kenora, Dryden, Greenstone","Northwestern Oregon: Portland, Salem, Hillsboro, Beaverton":"Nordwestliches Oregon: Portland, Salem, Hillsboro, Beaverton","Northwestern Oregon: Portland, Salem, Hillsboro, St. Helens, Tillamook, Astoria":"Nordwestliches Oregon: Portland, Salem, Hillsboro, St. Helens, Tillamook, Astoria",
"Northwestern and Central Pennsylvania: Erie, Warren, State College, Altoona, Johnstown, Meyersdale, Johnsonburg, St. Marys, Ridgway, DuBois, Emporium":"Nordwestliches und Zentral-Pennsylvania: Erie, Warren, State College, Altoona, Johnstown, Meyersdale, Johnsonburg, St. Marys, Ridgway, DuBois, Emporium",Norway:"Norwegen","Norway, Svalbard and Jan Mayen":"Norwegen, Svalbard und Jan Mayen","Nova Scotia and Prince Edward Island, Canada":"Nova Scotia und Prinz-Edward-Insel, Kanada","Ontario, Canada":"Ontario, Kanada",
"Palestinian Authority":"Pal\u00e4stinensische Autonomiebeh\u00f6rde","Papua New Guinea":"Papua-Neuguinea","Paris (Ile-de-France area)":"Paris (\u00cele-de-France)","People's Republic of China":"China, Volksrepublik","Personal Comm.":"Pers\u00f6nliche Komm.","Personal Comm. Services":"Pers\u00f6nliche Komm.dienste","Personal Communications Services":"Pers\u00f6nliche Kommunikationsdienste",Philippines:"Philippinen",Poland:"Polen","Premium-rate":"Mehrwert","Premium-rate Telephone Service":"Mehrwertdienst",
Qatar:"Katar",Quebec:"Qu\u00e9bec","Quebec, Canada":"Qu\u00e9bec, Kanada","Quebec, Canada: Montreal, \u00cele Perrot, \u00cele Bizard":"Qu\u00e9bec, Kanada: Montreal, \u00cele Perrot, \u00cele Bizard","Quebec, Canada: Quebec City, Saguenay, Gasp\u00e9 Peninsula, C\u00f4te-Nord, Chibougamau, St-Georges":"Qu\u00e9bec, Kanada: Qu\u00e9bec (Stadt), Saguenay, Gasp\u00e9sie-Halbinsel, C\u00f4te-Nord, Chibougamau, St-Georges","Quebec, Canada: Sherbrooke, Trois-Rivieres, Abitibi-T\u00e9miscamingue, Mauricie, Outaouais, Estrie":"Qu\u00e9bec, Kanada: Sherbrooke, Trois-Rivi\u00e8res, Abitibi-T\u00e9miscamingue, Mauricie, Outaouais, Estrie",
"Republic of China":"China, Republik","Republic of Congo":"Kongo, Republik","Republic of Ireland":"Irland, Republik",Romania:"Rum\u00e4nien",Russia:"Russland","Russia, Kazakhstan":"Russland, Kasachstan",Rwanda:"Ruanda","S Alberta":"S-Alberta","S Arkansas":"S-Arkansas","S California":"S-Kalifornien","S Florida":"S-Florida","S Illinois":"S-Illinois","S Kansas":"S-Kansas","S Minnesota":"S-Minnesota","S Mississippi":"S-Mississippi","S Quebec":"S-Qu\u00e9bec","S Texas":"S-Texas","S Virginia":"S-Virginia",
"SE Alabama":"SO-Alabama","SE Arizona":"SO-Arizona","SE California":"SO-Kalifornien","SE Colorado":"SO-Colorado","SE Georgia":"SO-Georgia","SE Louisiana":"SO-Louisiana","SE Massachusetts":"SO-Massachusetts","SE New Jersey":"SO-New Jersey","SE New York":"SO-New York","SE North Carolina":"SO-North Carolina","SE Ohio":"SO-Ohio","SE Pennsylvania":"SO-Pennsylvania","SE Texas":"SO-Texas","SE Wisconsin":"SO-Wisconsin","SW Alabama":"SW-Alabama","SW Florida":"SW-Florida","SW Georgia":"SW-Georgia","SW Louisiana":"SW-Louisiana",
"SW Michigan":"SW-Michigan","SW Missouri":"SW-Missouri","SW New Jersey":"SW-New Jersey","SW Ohio":"SW-Ohio","SW Oklahoma":"SW-Oklahoma","SW Ontario":"SW-Ontario","SW Pennsylvania":"SW-Pennsylvania","SW Tennessee":"SW-Tennessee","SW Texas":"SW-Texas","SW Virginia":"SW-Virginia","SW Wisconsin":"SW-Wisconsin","Saint Helena":"St. Helena","Saint Helena, Tristan da Cunha":"St. Helena, Tristan da Cunha","Saint Kitts and Nevis":"St. Kitts und Nevis","Saint Lucia":"St. Lucia","Saint Pierre and Miquelon":"Saint-Pierre und Miquelon",
"Saint Pierre and Miquelon Islands":"Saint-Pierre und Miquelon","Saint Vincent and the Grenadines":"St. Vincent und die Grenadinen","Saskatchewan, Canada":"Saskatchewan, Kanada","Saudi Arabia":"Saudi-Arabien",Serbia:"Serbien","Service Number":"Dienstnummer",Seville:"Sevilla",Seychelles:"Seychellen","Shared Cost":"Geteilte Kosten","Shared Cost Service":"Geteilte-Kosten-Dienst",Singapore:"Singapur",Slovakia:"Slowakei",Slovenia:"Slowenien","Solomon Islands":"Salomoninseln","South Africa":"S\u00fcdafrika",
"South Carolina: Greenville, Spartanburg, Anderson, Upstate South Carolina":"South Carolina: Greenville, Spartanburg, Anderson, n\u00f6rdliches South Carolina","South Central California: Bakersfield, Lancaster, Santa Clarita, Palmdale, Mojave":"S\u00fcdliches Zentralkalifornien: Bakersfield, Lancaster, Santa Clarita, Palmdale, Mojave","South Central Florida: Auburndale, Lakeland, Avon Park, Clewiston, Bartow, Sebring, Winter Haven":"S\u00fcdliches Zentral-Florida: Auburndale, Lakeland, Avon Park, Clewiston, Bartow, Sebring, Winter Haven",
"South Central Michigan: Lansing, Jackson, Charlotte, Coldwater, Howell, Deerfield, Addison":"S\u00fcdliches Zentral-Michigan: Lansing, Jackson, Charlotte, Coldwater, Howell, Deerfield, Addison","South Central North Carolina: Charlotte, Gastonia, Concord, Salisbury":"S\u00fcdliche Zentral-North Carolina: Charlotte, Gastonia, Concord, Salisbury","South Central Pennsylvania: Harrisburg, Gettysburg, Lancaster, York":"S\u00fcdliches Zentral-Pennsylvania: Harrisburg, Gettysburg, Lancaster, York","South Korea":"S\u00fcdkorea",
"Southeast France":"S\u00fcdostfrankreich","Southeastern Alabama: Montgomery, Auburn, Opelika, Dothan, Selma":"S\u00fcd\u00f6stliches Alabama: Montgomery, Auburn, Opelika, Dothan, Selma","Southeastern Arizona: Tucson, Nogales":"S\u00fcdostliches Arizona: Tucson, Nogales","Southeastern California: Bishop, Ridgecrest, Barstow, Palm Springs, Indio, Imperial County":"S\u00fcd\u00f6stliches Kalifornien: Bishop, Ridgecrest, Barstow, Palm Springs, Indio, Imperial County","Southeastern Colorado: Colorado Springs, Pueblo, Leadville, Trinidad, Rocky Ford, La Junta":"S\u00fcd\u00f6stliches Colorado: Colorado Springs, Pueblo, Leadville, Trinidad, Rocky Ford, La Junta",
"Southeastern Georgia: Savannah, Statesboro, Vidalia, Waycross, Brunswick, Douglas":"S\u00fcd\u00f6stliches Georgia: Savannah, Statesboro, Vidalia, Waycross, Brunswick, Douglas","Southeastern Louisiana: Houma, Slidell":"S\u00fcd\u00f6stliches Louisiana: Houma, Slidell","Southeastern Massachusetts: Worcester, New Bedford":"S\u00fcd\u00f6stliches Massachusetts: Worcester, New Bedford","Southeastern New York: Rockland, Poughkeepsie, Middletown, West Point, Newburgh, Catskills, Margaretville":"S\u00fcd\u00f6stliches New York: Rockland, Poughkeepsie, Middletown, West Point, Newburgh, Catskills, Margaretville",
"Southeastern North Carolina: Fayetteville, Wilmington, Jacksonville, Lumberton":"S\u00fcd\u00f6stliches North Carolina: Fayetteville, Wilmington, Jacksonville, Lumberton","Southeastern Pennsylvania: Allentown, Reading, Norristown, Chester":"S\u00fcd\u00f6stliches Pennsylvania: Allentown, Reading, Norristown, Chester","Southeastern Texas: Beaumont, Galveston, Port Arthur, Jasper":"S\u00fcd\u00f6stliches Texas: Beaumont, Galveston, Port Arthur, Jasper","Southeastern Texas: Wharton, Bryan, Bay City, College Station, Lake Jackson, La Grange":"S\u00fcd\u00f6stliches Texas: Wharton, Bryan, Bay City, College Station, Lake Jackson, La Grange",
"Southeastern Wisconsin: Racine, Kenosha, Menomonee Falls, Waukesha":"S\u00fcd\u00f6stliches Wisconsin: Racine, Kenosha, Menomonee Falls, Waukesha","Southern Alberta, Canada: Calgary, Banff, Red Deer, Medicine Hat, Lethbridge, Brooks":"S\u00fcdliches Alberta, Kanada: Calgary, Banff, Red Deer, Medicine Hat, Lethbridge, Brooks","Southern California: Anaheim, Santa Ana, Huntington Beach, Orange, Garden Grove, Fullerton, Orange County":"S\u00fcdkalifornien: Anaheim, Santa Ana, Huntington Beach, Orange, Garden Grove, Fullerton, Orange County",
"Southern California: Central Los Angeles":"S\u00fcdkalifornien: Los Angeles Mitte","Southern California: Colton, Grand Terrace, Ontario, Claremont, Pomona, Chino, Redlands, Fontana":"S\u00fcdkalifornien: Colton, Grand Terrace, Ontario, Claremont, Pomona, Chino, Redlands, Fontana","Southern California: Corona, Riverside, Temescal Canyon, Lake Elsinore, Mira Loma, Moreno Valley, Perris, Sun City, Murrieta, Temecula, Hemet, Winchester, Lakeview, Nuevo, Beaumont, Banning, Idyllwild":"S\u00fcdkalifornien: Corona, Riverside, Temescal Canyon, Lake Elsinore, Mira Loma, Moreno Valley, Perris, Sun City, Murrieta, Temecula, Hemet, Winchester, Lakeview, Nuevo, Beaumont, Banning, Idyllwild",
"Southern California: Del Mar, La Jolla, San Diego":"S\u00fcdkalifornien: Del Mar, La Jolla, San Diego","Southern California: Laguna Niguel, Irvine, Lake Forest, Newport Beach, Corona Del Mar":"S\u00fcdkalifornien: Laguna Niguel, Irvine, Lake Forest, Newport Beach, Corona Del Mar","Southern California: Long Beach, Whittier, Norwalk, La Habra Lakewood, Bellflower":"S\u00fcdkalifornien: Long Beach, Whittier, Norwalk, La Habra Lakewood, Bellflower","Southern California: Los Angeles, West LA, San Fernando Valley, Florence, Montebello":"S\u00fcdkalifornien: Los Angeles, West Los Angeles, San Fernando Valley, Florence, Montebello",
"Southern California: Pasadena, West Covina, El Monte, La Puente, Arcadia, San Gabriel Valley, eastern Los Angeles suburbs":"S\u00fcdkalifornien: Pasadena, West Covina, El Monte, La Puente, Arcadia, San Gabriel Valley, \u00f6stliche Vororte von Los Angeles","Southern California: San Diego":"S\u00fcdkalifornien: San Diego","Southern California: San Diego, Chula Vista":"S\u00fcdkalifornien: San Diego, Chula Vista","Southern California: San Fernando Valley":"S\u00fcdkalifornien: San Fernando Valley",
"Southern California: San Fernando Valley, including Glendale, San Fernando, Northridge, Burbank, Los Angeles suburbs":"S\u00fcdkalifornien: San Fernando Valley, einschl. Glendale, San Fernando, Northridge, Burbank, Vororte von Los Angeles","Southern California: Santa Monica, Malibu, Torrance, South Bay, Beverly Hills, Catalina Island, the Los Angeles Westside":"S\u00fcdkalifornien: Santa Monica, Malibu, Torrance, South Bay, Beverly Hills, Catalina Island, Los Angeles West","Southern Florida: Fort Lauderdale, Hollywood, Coral Springs":"S\u00fcdliches Florida: Fort Lauderdale, Hollywood, Coral Springs",
"Southern Florida: Miami-Dade, Florida Keys, Miami, Homestead, Coral Gables, Key West":"S\u00fcdliches Florida: Miami-Dade, Florida Keys, Miami, Homestead, Coral Gables, Key West","Southern Illinois: Alton, Belleville, Carbondale, Centralia, East Saint Louis, Mount Vernon":"S\u00fcdliches Illinois: Alton, Belleville, Carbondale, Centralia, East Saint Louis, Mount Vernon","Southern Kansas: Dodge City, Emporia, Geat Bend, Parsons, Liberal":"S\u00fcdliches Kansas: Dodge City, Emporia, Geat Bend, Parsons, Liberal",
"Southern Minnesota: Rochester, Mankato, Worthington, Marshall":"S\u00fcdliches Minnesota: Rochester, Mankato, Worthington, Marshall","Southern Mississippi: Gulfport, Biloxi, Pascagoula, Bay St Louis":"S\u00fcdliches Mississippi: Gulfport, Biloxi, Pascagoula, Bay St Louis","Southern Texas: Laredo, Brownsville, McAllen, Harlingen":"S\u00fcdliches Texas: Laredo, Brownsville, McAllen, Harlingen","Southern Virginia: Charlottesville, Lynchburg, Danville, Farmville, South Hill":"S\u00fcdliches Virginia: Charlottesville, Lynchburg, Danville, Farmville, South Hill",
"Southern and Eastern Arkansas: Texarkana, Jonesboro, Pine Bluff":"S\u00fcdliches und \u00f6stliches Arkansas: Texarkana, Jonesboro, Pine Bluff","Southern and Western Oklahoma: Enid, Lawton, Ponca City, Guymon, Ardmore, Sayre, Elk City":"S\u00fcdwestliches Oklahoma: Enid, Lawton, Ponca City, Guymon, Ardmore, Sayre, Elk City","Southwest France":"S\u00fcdwestfrankreich","Southwestern Alabama: Mobile, Jackson, Brewton":"S\u00fcdwestliches Alabama: Mobile, Jackson, Brewton","Southwestern Florida: Lee, Collier, and Monroe Counties; Cape Coral, Fort Myers, Naples, Everglades":"S\u00fcdwestliches Florida: Lee, Collier und Monroe Counties; Cape Coral, Fort Myers, Naples, Everglades",
"Southwestern Florida: Tampa Bay,Manatee County, Sarasota County, Charlotte County; Bradenton, Port Charlotte, Sarasota, Punta Gorda":"S\u00fcdwestliches Florida: Tampa Bay und Manatee, Sarasota, Charlotte Counties; Bradenton, Port Charlotte, Sarasota, Punta Gorda","Southwestern Georgia: Albany, Valdosta, Bainbridge, Americus, Fitzgerald":"S\u00fcdwestliches Georgia: Albany, Valdosta, Bainbridge, Americus, Fitzgerald","Southwestern Louisiana: Lafayette, Lake Charles, Leesville, New Iberia, Opelousas, De Ridder":"S\u00fcdwestliches Louisiana: Lafayette, Lake Charles, Leesville, New Iberia, Opelousas, De Ridder",
"Southwestern Michigan: Ann Arbor, Canton, Plymouth, Monroe, Wayne, Ypsilanti, Romulus, Detroit suburbs":"S\u00fcdwestliches Michigan: Ann Arbor, Canton, Plymouth, Monroe, Wayne, Ypsilanti, Romulus, Vororte von Detroit","Southwestern Michigan: Battle Creek, Kalamazoo, Benton Harbor, Allegan, Hastings, St Joseph":"S\u00fcdwestliches Michigan: Battle Creek, Kalamazoo, Benton Harbor, Allegan, Hastings, St Joseph","Southwestern Michigan: Grand Rapids, Holland, Greenville, Grand Haven, Zeeland, Ionia":"S\u00fcdwestliches Michigan: Grand Rapids, Holland, Greenville, Grand Haven, Zeeland, Ionia",
"Southwestern Missouri: Springfield, Joplin, Branson, West Plains, Lamar, Lebanon":"S\u00fcdwestliches Missouri: Springfield, Joplin, Branson, West Plains, Lamar, Lebanon","Southwestern New Jersey: Vineland, Cherry Hill, Camden, Millville":"S\u00fcdwestliches New Jersey: Vineland, Cherry Hill, Camden, Millville","Southwestern Ohio":"S\u00fcdwestliches Ohio","Southwestern Ohio: Cincinnati, Middletown, Hamilton, Norwood, Lebanon":"S\u00fcdwestliches Ohio: Cincinnati, Middletown, Hamilton, Norwood, Lebanon",
"Southwestern Ohio: Marysville, Springfield, Dayton, Hillsboro":"S\u00fcdwestliches Ohio: Marysville, Springfield, Dayton, Hillsboro","Southwestern Ontario, Canada: London, Windsor, Kitchener-Waterloo, Cambridge":"S\u00fcdwestliches Ontario, Kanada: London, Windsor, Kitchener-Waterloo, Cambridge","Southwestern Ontario, Canada: Niagara Region, Hamilton, Toronto suburbs":"S\u00fcdwestliches Ontario, Kanada: Region Niagara, Hamilton, Vororte von Toronto","Southwestern Pennsylvania: New Castle, Washington, Indiana, Uniontown":"S\u00fcdwestliches Pennsylvania: New Castle, Washington, Indiana, Uniontown",
"Southwestern Tennessee: Memphis, Covington, Somerville":"S\u00fcdwestliches Tennessee: Memphis, Covington, Somerville","Southwestern Texas: Del Rio, Uvalde, New Braunfels, Kerrville, Eagle Pass":"S\u00fcdwestliches Texas: Del Rio, Uvalde, New Braunfels, Kerrville, Eagle Pass","Southwestern Virginia: Bristol, Abingdon, Wytheville, Martinsville, Bluefield":"S\u00fcdwestliches Virginia: Bristol, Abingdon, Wytheville, Martinsville, Bluefield","Southwestern Wisconsin: Madison, La Crosse, Platteville, Beloit":"S\u00fcdwestliches Wisconsin: Madison, La Crosse, Platteville, Beloit",
Spain:"Spanien","Special Telecom.":"Sondertelekomm.","Special Telecommunications Needs in Canada":"Sondertelekommunikationsanforderungen in Kanada","St. Pierre and Miquelon":"Saint-Pierre und Miquelon","St. Vincent/Grenadines":"St. Vincent/Grenadinen",Strasburg:"Stra\u00dfburg",Suriname:"Surinam",Swaziland:"Swasiland",Sweden:"Schweden",Switzerland:"Schweiz",Syria:"Syrien","S\u00e3o Tom\u00e9 and Pr\u00edncipe":"S\u00e3o Tom\u00e9 und Pr\u00edncipe",Tajikistan:"Tadschikistan",Tanzania:"Tansania","Texas: Amarillo, Lubbock, Canadian, Perryton, Shamrock, Dalhart, Texas Panhandle":"Texas: Amarillo, Lubbock, Canadian, Perryton, Shamrock, Dalhart, Texas-Panhandle",
"Texas: Dallas area":"Texas: Region Dallas","Texas: San Antonio area":"Texas: Region San Antonio","Texas: Waco, Killeen, Temple, Belton, and Stephenville":"Texas: Waco, Killeen, Temple, Belton und Stephenville","The Bahamas":"Bahamas","The British Virgin Islands":"Britische Jungferninseln","The Cayman Islands":"Kaimaninseln","The Dominican Republic":"Dominikanische Republik","The Gambia":"Gambia","The Turks and Caicos Islands":"Turks- und Caicosinseln","The U.S. Virgin Islands":"Amerikanische Jungferninseln",
"Toll call":"Geb\u00fchrenpflichtiger Anruf","Toll calls (Num\u00e9ros Azur)":"Geb\u00fchrenpflichtige Anrufe (Num\u00e9ros Azur)","Toll calls (Num\u00e9ros Indigo)":"Geb\u00fchrenpflichtige Anrufe (Num\u00e9ros Indigo)","Toll-free":"Geb\u00fchrenfrei","Toll-free Telephone Service":"Geb\u00fchrenfreier Telefondienst","Trinidad and Tobago":"Trinidad und Tobago",Tunisia:"Tunesien",Turkey:"T\u00fcrkei","Turkey, Turkish Republic of Northern Cyprus":"T\u00fcrkei, T\u00fcrkische Republik Nordzypern","U.S. Government":"US-Regierung",
"U.S. Government Special Services":"US-Regierung - Sonderdienste","U.S. Virgins":"Amerikanische Jungferninseln",UAE:"VAE","United Arab Emirates":"Vereinigte Arabische Emirate","United Kingdom":"Gro\u00dfbritannien","United Kingdom, Guernsey, Isle of Man, Jersey":"Vereinigtes K\u00f6nigreich, Guernsey, Isle of Man, Jersey","Universal Personal":"Pers\u00f6nliche Rufnummern","Universal Personal Telecommunications":"Pers\u00f6nliche Rufnummern","Universal international freephone number":"Universelle internationale geb\u00fchrenfreie Nummer",
"Unknown Country":"Unbekanntes Land","Unknown Location":"Unbekannter Ort",Uzbekistan:"Usbekistan","Vatican City":"Vatikanstadt","Voice over IP":"VoIP","Voice over IP services":"VoIP-Dienste","W Illinois":"W-Illinois","W Iowa":"W-Iowa","W Kentucky":"W-Kentucky","W Maryland":"W-Maryland","W Massachusetts":"W-Massachusetts","W Nebraska":"W-Nebraska","W New York":"W-New York","W North Carolina":"W-North Carolina","W Pennsylvania":"W-Pennsylvania","W Tennessee":"W-Tennessee","W Texas":"W-Texas","W Washington":"W-Washington",
"Wallis and Futuna":"Wallis und Futuna","Washington D.C.":"Washington, D.C.","Washington: Seattle suburbs, Bellevue, Everett, Redmond, Renton, Kirkland, Bothell, Sammamish, Issaquah, Edmonds, Lynnwood and Mountlake Terrace":"Washington: Vororte von Seattle, Bellevue, Everett, Redmond, Renton, Kirkland, Bothell, Sammamish, Issaquah, Edmonds, Lynnwood und Mountlake Terrace","Washington: Tacoma, Lakewood, Auburn, Puyallup, Enumclaw, Spanaway and south Seattle suburbs":"Washington: Tacoma, Lakewood, Auburn, Puyallup, Enumclaw, Spanaway und s\u00fcdliche Vororte von Seattle",
"Washington: Western Washington":"Washington: westliches Washington","West Central Georgia: Augusta, Lincolnton, Columbus, LaGrange, Rome, Dalton, Thomaston":"Westliches Zentral-Georgia: Augusta, Lincolnton, Columbus, LaGrange, Rome, Dalton, Thomaston","West Central Missouri: Kansas City, St Joseph, Independence, Harrisonville":"Westliches Zentral-Missouri: Kansas City, St Joseph, Independence, Harrisonville","West Central New Jersey: Alpha, Washington, Elizabeth, Warren, Plainfield":"Westliches Zentral-New Jersey: Alpha, Washington, Elizabeth, Warren, Plainfield",
"West Texas: Midland, Odessa, Big Spring, Alpine":"Westliches Texas: Midland, Odessa, Big Spring, Alpine","Western Iowa: Sioux City, Council Bluffs, Sheldon, Denison, Estherville":"Westliches Iowa: Sioux City, Council Bluffs, Sheldon, Denison, Estherville","Western Kentucky: Owensboro, Paducah, Bowling Green, Hopkinsville, Henderson, Elizabethtown":"Westliches Kentucky: Owensboro, Paducah, Bowling Green, Hopkinsville, Henderson, Elizabethtown","Western Maryland: Silver Spring, DC suburbs, Hagerstown, Frederick, Rockville, Cumberland":"Westliches Maryland: Silver Spring, Vororte von Washington, Hagerstown, Frederick, Rockville, Cumberland",
"Western Massachusetts: Springfield, Pittsfield, Holyoke, Greenfield":"Westliches Massachusetts: Springfield, Pittsfield, Holyoke, Greenfield","Western Nebraska: North Platte, Scottsbluff, McCook, Kearney, Grand Island":"Westliches Nebraska: North Platte, Scottsbluff, McCook, Kearney, Grand Island","Western New York: Buffalo, Jamestown, Niagara Falls, Tonawanda, Olean":"Westliches New York: Buffalo, Jamestown, Niagara Falls, Tonawanda, Olean","Western New York: Rochester, Wellsville, Batavia":"Westliches New York: Rochester, Wellsville, Batavia",
"Western North Carolina: Hickory, Asheville, Waynesville, Franklin, Murphy":"Westliches North Carolina: Hickory, Asheville, Waynesville, Franklin, Murphy","Western Pennsylvania: Pittsburgh area, McKeesport, Braddock, Duquesne":"Westliches Pennsylvania: Region Pittsburgh, McKeesport, Braddock, Duquesne","Western Tennessee: Union City, Jackson, Dyersburg, Martin, Brownsville, Paris, Bolivar":"Westliches Tennessee: Union City, Jackson, Dyersburg, Martin, Brownsville, Paris, Bolivar","Western Washington: Olympia, Vancouver, Bellingham, Bremerton, Port Angeles, Aberdeen":"Westliches Washington: Olympia, Vancouver, Bellingham, Bremerton, Port Angeles, Aberdeen",
"Western and Southern Texas: Corpus Christi, Victoria, George":"S\u00fcdwestliches Texas: Corpus Christi, Victoria, George",Yemen:"Jemen","Yukon, Northwest Territories, and Nunavut, Canada":"Yukon, Nordwest-Territorien und Nunavut, Kanada",Zambia:"Sambia",Zimbabwe:"Simbabwe"};
ilib.data.phoneres_fr={Aachen:"Aix-la-Chapelle","Aachen-Kornelim\u00fcnster":"Aix-la-Chapelle-Kornelim\u00fcnster","Alabama: Birmingham; Tuscaloosa; western and central Alabama":"Alabama\u00a0: Birmingham; Tuscaloosa\u00a0; ouest et centre de l\u2019Alabama","Alabama: Huntsville":"Alabama\u00a0: Huntsville","Alaska: Anchorage, Juneau, Fairbanks":"Alaska\u00a0: Anchorage, Juneau, Fairbanks",Albania:"Albanie",Algeria:"Alg\u00e9rie","Amer. Samoa":"Samoa am\u00e9r.","American Samoa":"Samoa am\u00e9ricaines",
Andorra:"Andorre","Antigua and Barbuda":"Antigua-et-Barbuda",Argentina:"Argentine","Arizona: Glendale, Sun City, Buckeye, Peoria, western Phoenix suburbs":"Arizona\u00a0: Glendale, Sun City, Buckeye, Peoria, banlieues de l\u2019ouest de Phoenix","Arizona: Mesa, Scottsdale, Chandler, Gilbert, Tempe, Queen Creek, eastern Phoenix suburbs":"Arizona\u00a0: Mesa, Scottsdale, Chandler, Gilbert, Tempe, Queen Creek, banlieues de l\u2019est de Phoenix","Arizona: Phoenix":"Arizona\u00a0: Phoenix",Armenia:"Arm\u00e9nie",
"Armenia, Nagorno-Karabakh":"Arm\u00e9nie, Haut-Karabagh","Ascension Island":"\u00cele de l\u2019Ascension",Australia:"Australie","Australia, Christmas Island, Cocos Islands":"Australie, \u00cele Christmas, \u00celes Cocos",Austria:"Autriche",Azerbaijan:"Azerba\u00efdjan","Azerbaijan, Nagorno-Karabakh":"Azerba\u00efdjan, Haut-Karabagh",BVIs:"IVB",Bahrain:"Bahre\u00efn",Baleares:"Bal\u00e9ares",Barbados:"Barbade",Barcelona:"Barcelone",Beijing:"P\u00e9kin","Beijing \u5317\u4eac\u5e02":"P\u00e9kin \u5317\u4eac\u5e02",
Belarus:"Bi\u00e9lorussie",Belgium:"Belgique",Benin:"B\u00e9nin",Bermuda:"Bermudes",Bhutan:"Bhoutan",Bolivia:"Bolivie","Bosnia and Herzegovina":"Bosnie-Herz\u00e9govine",Brazil:"Br\u00e9sil",Bremen:"Br\u00eame","British Columbia":"Colombie-Britannique","British Columbia, Canada":"Colombie-Britannique, Canada","British Columbia: Vancouver, Abbotsford, Whistler, Chilliwack":"Colombie-Britannique\u00a0: Vancouver, Abbotsford, Whistler, Chilliwack","British Columbia: Victoria, Prince George, Prince Rupert, Kelowna; also Hyder, Alaska.":"Colombie-Britannique\u00a0: Victoria, Prince George, Prince Rupert, Kelowna\u00a0; aussi Hyder, Alaska.",
"British Indian Ocean":"Oc\u00e9an Indien britannique","British Indian Ocean Territory":"Territoire de l\u2019oc\u00e9an Indien Britannique",Bulgaria:"Bulgarie",Burma:"Birmanie",California:"Californie","California: East Bay Area, Oakland, Berkeley, Alameda":"Californie\u00a0: East Bay Area, Oakland, Berkeley, Alameda","California: Stockton, Modesto, Merced, Tracy, San Andreas and central California":"Californie\u00a0: Stockton, Modesto, Merced, Tracy, San Andreas et Californie centrale",Cambodia:"Cambodge",
Cameroon:"Cameroun",Cantabria:"Cantabrie",Canterbury:"Cantorb\u00e9ry","Cape Verde":"Cap-Vert","Carrier Access":"Acc\u00e8s op\u00e9rateur (indicatif 950)",Caymans:"Ca\u00efmans","Central African Republic":"R\u00e9publique d\u2019Afrique centrale","Central Arkansas: Little Rock, Hot Springs":"Arkansas central\u00a0: Little Rock, Hot Springs","Central California: Concord, Pleasant Hill, Walnut Creek, Martinez, Livermore, Pleasanton, Dublin":"Californie centrale\u00a0: Concord, Pleasant Hill, Walnut Creek, Martinez, Livermore, Pleasanton, Dublin",
"Central California: Fresno, Visalia, Madera, Hanford, Tulare":"Californie centrale\u00a0: Fresno, Visalia, Madera, Hanford, Tulare","Central California: Oakland, Berkeley, Alameda":"Californie centrale\u00a0: Oakland, Berkeley, Alameda","Central California: Oakland, Fremont, Hayward, Castro Valley, Alameda, Berkeley, Richmond":"Californie centrale\u00a0: Oakland, Fremont, Hayward, Castro Valley, Alameda, Berkeley, Richmond","Central California: Sacramento, Davis, Roseville":"Californie centrale\u00a0: Sacramento, Davis, Roseville",
"Central California: Salinas, Hollister, Monterey, Carmel, Santa Cruz":"Californie centrale\u00a0: Salinas, Hollister, Monterey, Carmel, Santa Cruz","Central California: San Francisco":"Californie centrale\u00a0: San Francisco","Central California: San Francisco, Marin County":"Californie centrale\u00a0: San Francisco, Comt\u00e9 de Marin","Central California: San Jose":"Californie centrale\u00a0: San Jose","Central California: San Jose, Los Gatos, Milpitas, Sunnyvale, Cupertino, Gilroy":"Californie centrale\u00a0: San Jose, Los Gatos, Milpitas, Sunnyvale, Cupertino, Gilroy",
"Central California: San Mateo, Palo Alto, Redwood City, Menlo Park, Mountain View, southern San Francisco suburbs":"Californie centrale\u00a0: San Mateo, Palo Alto, Redwood City, Menlo Park, Mountain View, banlieues du sud de San Francisco","Central Coastal California: Ventura, San Luis Obispo, Santa Barbara, Oxnard, Simi Valley":"C\u00f4te de la Californie centrale\u00a0: Ventura, San Luis Obispo, Santa Barbara, Oxnard, Simi Valley","Central Colorado: Denver, Boulder, Longmont, Aurora":"Colorado central\u00a0: Denver, Boulder, Longmont, Aurora",
"Central Eastern Florida: Orlando, Cocoa Beach, St Cloud":"Centre-est de la Floride\u00a0: Orlando, Cocoa Beach, St Cloud","Central Eastern Florida: Orlando, Florida, St. Cloud":"Centre-est de la Floride\u00a0: Orlando, Florida, St. Cloud","Central Eastern Florida: Vero Beach, Port Saint Lucie, Fort Pierce, Sebastian, Stuart":"Centre-est de la Floride\u00a0: Vero Beach, Port Saint Lucie, Fort Pierce, Sebastian, Stuart","Central Eastern Louisiana: Baton Rouge, Donaldsonville, New Roads, White Castle":"Centre-est de la Louisiane\u00a0: B\u00e2ton-Rouge, Donaldsonville, New Roads, White Castle",
"Central Eastern Tennessee: Knoxville, Gatlinburg, Newport, Jefferson City, Oak Ridge, Rockwood":">Centre-est du Tennessee\u00a0: Knoxville, Gatlinburg, Newport, Jefferson City, Oak Ridge, Rockwood","Central Florida: Gainesville, Ocala, Inverness, Dunnellon":"Floride centrale\u00a0: Gainesville, Ocala, Inverness, Dunnellon","Central Florida: St Petersburg, Dunedin":"Floride centrale\u00a0: St Petersburg, Dunedin","Central Florida: Tampa, Temple Terrace, Plant City, Pasco County, Oldsmar":"Floride centrale\u00a0: Tampa, Temple Terrace, Plant City, Pasco County, Oldsmar",
"Central Georgia: Macon, Warner Robins, Swainsboro, Wadley, Milledgeville, Perry":"G\u00e9orgie centrale\u00a0: Macon, Warner Robins, Swainsboro, Wadley, Milledgeville, Perry","Central Illinois: Springfield, Champaign Decatur, Urbana, Lincoln":"Centre de l\u2019Illinois : Springfield, Champaign Decatur, Urbana, Lincoln","Central Indiana: Indianapolis, Carmel, Fishers, Noblesville, Greenwood, Mooresville, Beech Grove":"Indiana central\u00a0: Indianapolis, Carmel, Fishers, Noblesville, Greenwood, Mooresville, Beech Grove",
"Central Indiana: Lafayette, Marion, Muncie, Richmond":"Indiana central\u00a0: Lafayette, Marion, Muncie, Richmond","Central Iowa: Mason City, Oskaloosa, Creston, Pella, Ottumwa, Britt, Clear Lake, Fairfield":"Iowa central\u00a0: Mason City, Oskaloosa, Creston, Pella, Ottumwa, Britt, Clear Lake, Fairfield","Central Michigan: Alpena, Mt. Pleasant, Bay City, Saginaw, Midland, Owosso":"Michigan central\u00a0: Alpena, Mt. Pleasant, Bay City, Saginaw, Midland, Owosso","Central Minnesota: St. Cloud, Alexandria, Morris, Hutchinson, Sandstone, Appleton":"Minnesota central\u00a0: St. Cloud, Alexandria, Morris, Hutchinson, Sandstone, Appleton",
"Central Mississippi: Jackson, Meridian, Natchez, McComb, Hattiesburg":"Mississippi central\u00a0: Jackson, Meridian, Natchez, McComb, Hattiesburg","Central North Georgia: Marietta, Cedartown, Gainesville, Atlanta suburbs":"Centre-nord de la G\u00e9orgie\u00a0: Marietta, Cedartown, Gainesville, banlieues d\u2019Atlanta","Central Oklahoma: Oklahoma City, Stillwater, Edmond, Norman, Shawnee, Chickasha":"Oklahoma central\u00a0: Oklahoma City, Stillwater, Edmond, Norman, Shawnee, Chickasha","Central Ontario, Canada: Sudbury, Sault Ste. Marie, North Bay, Timmins, Barrie":"Centre de l\u2019Ontario, Canada\u00a0: Sudbury, Sault Ste. Marie, North Bay, Timmins, Barrie",
"Central South Carolina: Columbia, Rock Hill, Sumter, Aiken":"Caroline du Sud centrale\u00a0: Columbia, Rock Hill, Sumter, Aiken","Central Southern Quebec, Canada: Laval, Montreal suburbs":"Centre-sud du Qu\u00e9bec, Canada\u00a0: Laval, banlieues de Montr\u00e9al","Central Texas: Austin, San Marcos, Lampasas, Bastrop, Milam":"Texas central\u00a0: Austin, San Marcos, Lampasas, Bastrop, Milam","Central Western Illinois: Peoria, Bloomington-Normal, Moline, Rock Island, Galesburg":"Centre-ouest de l\u2019Illinois\u00a0: Peoria, Bloomington-Normal, Moline, Rock Island, Galesburg",
"Central and Southeastern New Jersey: Atlantic City, Trenton":"New Jersey central et du sud-est\u00a0: Atlantic City, Trenton","Central and Southeastern Ohio: Columbus, Newark, Lancaster, Delaware, Mt. Vernon, Marion, Washington C.H., Marietta, Portsmouth, Cambridge, Zanesville, Coshocton, Stuebenville, Athens":"Ohio du centre et du sud-est\u00a0: Columbus, Newark, Lancaster, Delaware, Mt. Vernon, Marion, Washington C.H., Marietta, Portsmouth, Cambridge, Zanesville, Coshocton, Stuebenville, Athens",
"Central and Southeastern Texas: Nacogdoches, Lufkin, Conroe, Huntsville":"Texas central et du sud-est\u00a0: Nacogdoches, Lufkin, Conroe, Huntsville",Chad:"Tchad",Chile:"Chili",China:"Chine",Colombia:"Colombie","Commonwealth of Dominica":"Commonwealth de la Dominique",Comoros:"Comores","Connecticut: Bridgeport, Danbury, New Haven, Waterbury, Southwestern Connecticut":"Connecticut\u00a0: Bridgeport, Danbury, New Haven, Waterbury, sud-ouest du Connecticut","Connecticut: Bristol, Hartford, Norwich and northern and eastern Connecticut":"Connecticut\u00a0: Bristol, Hartford, Norwich et r\u00e9gion nord et est du Connecticut",
"Cook Islands":"\u00celes Cook",Croatia:"Croatie",Cyprus:"Chypre","Czech Republic":"R\u00e9publique tch\u00e8que","C\u00e1diz":"Cadix","C\u00f4te d'Ivoire":"C\u00f4te d\u2019Ivoire","D.R.":"R.D.",DRC:"RDC","Democratic Republic of the Congo":"R\u00e9publique d\u00e9mocratique du Congo",Denmark:"Danemark","Dir. Assistance":"Assistance t\u00e9l\u00e9phonique","Directory Assistance Applications":"Applications de l\u2019assistance t\u00e9l\u00e9phonique",Dominica:"Dominique","Dominican Republic":"R\u00e9publique dominicaine",
Dover:"Douvres",Dresden:"Dresde","E Arkansas":"Arkansas de l\u2019E","E Florida":"Floride de l\u2019E","E Iowa":"Iowa de l\u2019E","E Kansas":"Kansas de l\u2019E","E Kentucky":"Kentucky de l\u2019E","E Louisiana":"Louisiane de l\u2019E","E Maryland":"Maryland de l\u2019E","E Massachusetts":"Massachusetts de l\u2019E","E Nebraska":"Nebraska de l\u2019E","E Ontario":"Ontario de l\u2019E","E South Carolina":"Caroline du Sud de l\u2019E","E Tennessee":"Tennessee de l\u2019E","E Washington":"Washington de l\u2019E",
"E Wisconsin":"Wisconsin de l\u2019E","East Central Minnesota: St Paul, Lindstrom, Red Wing, Hastings":"Centre-est du Minnesota\u00a0: St Paul, Lindstrom, Red Wing, Hastings","East Central Missouri: St. Charles, Chesterfield, Union, De Soto, Troy":"Centre-est du Missouri\u00a0: St. Charles, Chesterfield, Union, De Soto, Troy","East Central New Jersey: New Brunswick, Neptune, Freehold, Lakewood":"Centre-est du New Jersey\u00a0: New Brunswick, Neptune, Freehold, Lakewood","East Timor":"Timor oriental",
"Eastern Arkansas: Texarkana, Jonesboro, Pine Bluff":"Arkansas de l\u2019est\u00a0: Texarkana, Jonesboro, Pine Bluff","Eastern Iowa: Cedar Rapids, Waterloo, Burlington, Iowa City":"Iowa de l\u2019Est\u00a0: Cedar Rapids, Waterloo, Burlington, Iowa City","Eastern Iowa: Davenport, Dubuque, Bettendorf, Decorah, Clinton":"Iowa de l\u2019est\u00a0: Davenport, Dubuque, Bettendorf, Decorah, Clinton","Eastern Kansas: Kansas City, Overland Park, Paola, Leavenworth":"Kansas de l\u2019est\u00a0: Kansas City, Overland Park, Paola, Leavenworth",
"Eastern Kentucky: Ashland, Hazard, Somerset, London, Corbin, Pikeville, Maysville":"Kentucky de l\u2019est\u00a0: Ashland, Hazard, Somerset, London, Corbin, Pikeville, Maysville","Eastern Maryland: Baltimore, Annapolis, Salisbury":"Maryland de l\u2019est\u00a0: Baltimore, Annapolis, Salisbury","Eastern Massachusetts: Boston, Cambridge":"Massachusetts de l\u2019est\u00a0: Boston, Cambridge","Eastern Massachusetts: Saugus, Norwood, Waltham, Woburn, Boston suburbs":"Massachusetts de l\u2019est\u00a0: Saugus, Norwood, Waltham, Woburn, banlieues de Boston",
"Eastern Nebraska: Omaha, Lincoln, Norfolk, Superior":"Nebraska de l\u2019est\u00a0: Omaha, Lincoln, Norfolk, Superior","Eastern Ontario, Canada: Ottawa":"Ontario de l\u2019est, Canada\u00a0: Ottawa","Eastern Ontario, Canada: Ottawa, Kingston":"Ontario de l\u2019est, Canada\u00a0: Ottawa, Kingston","Eastern South Carolina: Florence, Myrtle Beach, Charleston, Isle of Palms, Hilton Head Island":"Caroline du Sud de l\u2019est\u00a0: Florence, Myrtle Beach, Charleston, Isle of Palms, Hilton Head Island",
"Eastern Tennessee: Bristol, Johnson City, Kingsport; Chattanooga, Cleveland":"Tennessee de l\u2019est\u00a0: Bristol, Johnson City, Kingsport\u00a0; Chattanooga, Cleveland","Eastern Washington: Spokane, the Tri-Cities, Yakima, Wenatchee, Walla Walla, Pullman, Ellensburg":"Washington de l\u2019est\u00a0: Spokane, Tri-Cities, Yakima, Wenatchee, Walla Walla, Pullman, Ellensburg","Eastern Wisconsin: Appleton, Sheboygan, Oshkosh, Green Bay, Manitowoc, Fond du Lac":"Wisconsin de l\u2019est\u00a0: Appleton, Sheboygan, Oshkosh, Green Bay, Manitowoc, Fond du Lac",
Ecuador:"\u00c9quateur",Edinburgh:"Edimbourg",Egypt:"\u00c9gypte","Emergency Services Number":"Num\u00e9ro des services d\u2019urgence","Equatorial Guinea":"Guin\u00e9e \u00e9quatoriale",Eritrea:"\u00c9rythr\u00e9e",Estonia:"Estonie",Ethiopia:"\u00c9thiopie","European Telephony":"T\u00e9l\u00e9phonie europ\u00e9enne","European Telephony Numbering Space":"Espace de num\u00e9rotation t\u00e9l\u00e9phonique europ\u00e9en",FYRoM:"ARYM","Falkland Islands":"\u00celes Falkland",Falklands:"Falkland","Faroe Islands":"\u00celes F\u00e9ro\u00e9",
"Federated States of Micronesia":"\u00c9tats f\u00e9d\u00e9r\u00e9s de Micron\u00e9sie",Fiji:"Fidji",Finland:"Finlande","Finland, \u00c5land Islands":"Finlande, \u00celes \u00c5land",Florida:"Floride","Florida: Miami-Dade County, Florida Keys":"Floride\u00a0: Miami-Dade County, Keys de la Floride","Florida: Palm Beach, West Palm Beach, Boca Raton, Boynton Beach, Delray Beach, Belle Glade":"Floride\u00a0: Palm Beach, West Palm Beach, Boca Raton, Boynton Beach, Delray Beach, Belle Glade","Former Yugoslav Republic of Macedonia":"Ex-R\u00e9publique yougoslave de Mac\u00e9doine",
Frankfurt:"Francfort","Frankfurt am Main, Offenbach am Main":"Francfort-sur-le-Main, Offenbach-sur-le-Main","French Guiana":"Guyane fran\u00e7aise","French Polynesia":"Polyn\u00e9sie fran\u00e7aise",Gambia:"Gambie",Georgia:"G\u00e9orgie","Georgia: Atlanta":"G\u00e9orgie\u00a0: Atlanta",Germany:"Allemagne","Global Mobile Satellite System":"Syst\u00e8me de satellites m\u00e9t\u00e9orologiques g\u00e9ostationnaires","Global Satellite":"Satellite global",Granada:"Grenade",Greece:"Gr\u00e8ce",Greenland:"Groenland",
Grenada:"Grenade",Guadaloupe:"Guadeloupe","Guadaloupe Island":"\u00celes de la Guadeloupe","Guadeloupe, Saint Barth\u00e9lemy, Saint Martin":"Guadeloupe, Saint-Barth\u00e9lemy, Saint-Martin",Guinea:"Guin\u00e9e","Guinea-Bissau":"Guin\u00e9e-Bissau",Guyana:"Guyane",Haiti:"Ha\u00efti",Hamburg:"Hambourg","Hamburg, Norderstedt, Neu Wulmstorf":"Hambourg, Norderstedt, Neu Wulmstorf",Hannover:"Hannovre",Hawaii:"Hawa\u00ef",Hungary:"Hongrie",Iceland:"Islande","Illinois: Aurora, Naperville, western Chicago":"Illinois\u00a0: Aurora, Naperville, Chicago de l\u2019ouest",
"Illinois: Aurora, Naperville, western Chicago suburbs":"Illinois\u00a0: Aurora, Naperville, banlieues de l\u2019ouest de Chicago","Illinois: Chicago":"Illinois\u00a0: Chicago","Illinois: Chicago Heights, Evergreen Park, Tinley Park, Elmwood Park, Cicero, Oak Forest, Oak Park, Berwyn, western Chicago suburbs":"Illinois\u00a0: Chicago Heights, Evergreen Park, Tinley Park, Elmwood Park, Cicero, Oak Forest, Oak Park, Berwyn, banlieues de l\u2019ouest de Chicago","Inbound Intl.":"Entrants internationaux",
"Inbound international calls for carrier-specific services":"Appels entrants internationaux pour les services de l\u2019op\u00e9rateur",India:"Inde","Indiana: Southern Indiana, including Bloomington, Evansville, Jeffersonville, New Albany, and Terre Haute).":"Indiana\u00a0: Indiana du sud, y compris Bloomington, Evansville, Jeffersonville, New Albany et Terre Haute).",Indonesia:"Indon\u00e9sie","International National Rate Service":"Service de tarif national international","International Networks":"R\u00e9seaux internationaux",
"International Networks (country code)":"R\u00e9seaux internationaux (indicatif pays)","International Premium Rate Service":"Service international \u00e0 revenus partag\u00e9s",Iraq:"Irak",Ireland:"Irlande","Islands of R\u00e9union and Mayotte":"\u00celes de la R\u00e9union et de Mayotte",Israel:"Isra\u00ebl","Israel, Palestinian Authority":"Isra\u00ebl, Autorit\u00e9 palestinienne",Italy:"Italie","Italy, Vatican City":"Italie, Cit\u00e9 du Vatican",Jamaica:"Jama\u00efque",Japan:"Japon",Jordan:"Jordanie",
"Kansas: Wichita, Augusta, El Dorado, Mulvane":"Kansas\u00a0: Wichita, Augusta, El Dorado, Mulvane","Kentucky: west of the Pennyrile Parkway, including Fort Campbell, Henderson, Hopkinsville, Madisonville, Murray, and Paducah":"Kentucky\u00a0: est de Pennyrile Parkway, y compris Fort Campbell, Henderson, Hopkinsville, Madisonville, Murray et Paducah",Kolkata:"Calcutta",Konstanz:"Constance","Konstanz, Reichenau":"Constance, Reichenau",Krakow:"Cracovie",Kuwait:"Kowe\u00eft",Kyrgyzstan:"Kirghizistan",
"LD Carrier":"Op\u00e9rateur interurbain",Latvia:"Lettonie",Lebanon:"Liban",Libya:"Libye",Lithuania:"Lituanie",London:"Londres","Long Distance Carrier Use":"Utilisation de l\u2019op\u00e9rateur interurbain (indicatif 700)",Louisiana:"Louisiane","Louisiana: New Orleans, Metairie, Kenner":"Louisiane\u00a0: Nouvelle-Orl\u00e9ans, Metairie, Kenner",Macau:"Macao",Malaysia:"Malaisie",Malta:"Malte",Marianas:"Marianne","Marshall Islands":"\u00celes Marshall","Martinique Island":"\u00cele de la Martinique",
Mauritania:"Mauritanie",Mauritius:"Maurice",Mexico:"Mexique","Mexico City":"Mexico","Mexico City, Federal District":"Mexico, District f\u00e9d\u00e9ral","Michigan: Dearborn, Detroit, Hamtramck, Highland Park":"Michigan\u00a0: Dearborn, Detroit, Hamtramck, Highland Park","Michigan: Oakland County":"Michigan\u00a0: Comt\u00e9 d\u2019Oakland",'Michigan: Port Huron, Flint, Lapeer, and Michigan "Thumb"':"Michigan\u00a0: Port Huron, Flint, Lapeer et le \u00ab\u00a0pouce\u00a0\u00bb du Michigan","Michigan: Warren, Sterling Heights, Macomb County":"Michigan\u00a0: Warren, Sterling Heights, Comt\u00e9 de Macomb",
Micronesia:"Micron\u00e9sie","Minnesota: Bloomington, Minnetonka, Chaska, Minneapolis":"Minnesota\u00a0: Bloomington, Minnetonka, Chaska, Minneapolis","Minnesota: Maple Grove, Monticello, Elk River, Fridley, Blaine, northwest Minneapolis":"Minnesota\u00a0: Maple Grove, Monticello, Elk River, Fridley, Blaine, nord-ouest de Minneapolis","Minnesota: Minneapolis, Fort Snelling, St Anthony, Richfield":"Minnesota\u00a0: Minneapolis, Fort Snelling, St Anthony, Richfield","Missouri: Columbia, Jefferson City, Hannibal, Cape Girardeau, Poplar Bluff, Farmington, Park Hills, Lake Ozark and eastern Missouri excluding St. Louis":"Missouri\u00a0: Columbia, Jefferson City, Hannibal, Cape Girardeau, Poplar Bluff, Farmington, Park Hills, Lake Ozark et est du Missouri \u00e0 l\u2019exception de St. Louis",
"Missouri: St. Louis, Florissant, Crestwood, Affton":"Missouri\u00a0: St. Louis, Florissant, Crestwood, Affton","Mobile Number":"Num\u00e9ro de mobile","Mobile Number in Mayotte":"Num\u00e9ro de mobile en Mayotte","Mobile Number in Guadeloupe, Saint-Barth\u00e9lemy or Saint-Martin Islands":"Num\u00e9ro de mobile en les \u00celes de Guadeloupe, Saint-Barth\u00e9lemy ou Saint-Martin","Mobile Number in R\u00e9union":"Num\u00e9ro de mobile en R\u00e9union","Mobile Number in French Guiana":"Num\u00e9ro de mobile en Guyane",
"Mobile Number in Martinique":"Num\u00e9ro de mobile en Martinique",Moldova:"Moldavie",Mongolia:"Mongolie",Montenegro:"Mont\u00e9n\u00e9gro",Morocco:"Maroc","Morocco, Western Sahara":"Maroc, Sahara occidental","N Alberta":"Alberta du N","N California":"Californie du N","N Georgia":"G\u00e9orgie du N","N Illinois":"Illinois du N","N Kansas":"Kansas du N","N Kentucky":"Kentucky du N","N Louisiana":"Louisiane du N","N Michigan":"Michigan du N","N Minnesota":"Minnesota du N","N Mississippi":"Mississippi du N",
"N Ohio":"Ohio du N","N Texas":"Texas du N","N Virginia":"Virginie du N","N Wisconsin":"Wisconsin du N","NE Alabama":"Alabama du NE","NE California":"Californie du NE","NE Florida":"Floride du NE","NE Illinois":"Illinois du NE","NE Indiana":"Indiana du NE","NE Massachusetts":"Massachusetts du NE","NE New York":"New York du NE","NE North Carolina":"Caroline du Nord du NE","NE Ohio":"Ohio du NE","NE Oklahoma":"Oklahoma du NE","NE Pennsylvania":"Pennsylvanie du NE","NE Texas":"Texas du NE","NW Arizona":"Arizona du NO",
"NW Arkansas":"Arkansas du NO","NW California":"Californie du NO","NW Colorado":"Colorado du NO","NW Florida":"Floride du NO","NW Indiana":"Indiana du NO","NW Michigan":"Michigan du NO","NW New Jersey":"New Jersey du NO","NW New Mexico":"Nouveau-Mexique du NO","NW Ohio":"Ohio du NO","NW Ontario":"Ontario du NO","NW Oregon":"Or\u00e9gon du NO","NW Pennsylvania":"Pennsylvanie du NO",Namibia:"Namibie",Nanjing:"Nankin","Nanjing \u5357\u4eac\u5e02":"Nankin \u5357\u4eac\u5e02","National Rate":"Tarif national",
Navarra:"Navarre",Nepal:"N\u00e9pal",Netherlands:"Pays-Bas","Netherlands Antilles":"Antilles n\u00e9erlandaises","Nevada: Clark County, Las Vegas, Henderson, Boulder City":"Nevada\u00a0: Clark County, Las Vegas, Henderson, Boulder City","Nevada: Reno, Elko, Ely":"Nevada\u00a0: Reno, Elko, Ely","New Brunswick":"Nouveau-Brunswick","New Brunswick, Canada":"Nouveau-Brunswick, Canada","New Caledonia":"Nouvelle-Cal\u00e9donie","New Jersey: Hackensack, Jersey City, Hoboken, Bayonne, Ridgewood, Union City, Teaneck, New Milford, and northeast New Jersey":"New Jersey\u00a0: Hackensack, Jersey City, Hoboken, Bayonne, Ridgewood, Union City, Teaneck, New Milford et nord-est du New Jersey",
"New Mexico":"Nouveau-Mexique","New Mexico: Las Cruces, Roswell, Carlsbad, Taos":"Nouveau-Mexique\u00a0: Las Cruces, Roswell, Carlsbad, Taos","New York: Binghamton, Elmira, Bath, Norwich, Oneonta, Ithaca":"New York\u00a0: Binghamton, Elmira, Bath, Norwich, Oneonta, Ithaca","New York: Manhattan":"New York\u00a0: Manhattan","New York: Manhattan except for Marble Hill":"New York\u00a0: Manhattan sauf Marble Hill","New York: Nassau County, Hempstead, Elmont":"New York\u00a0: Comt\u00e9 de Nassau, Hempstead, Elmont",
"New York: New York City":"New York\u00a0: New York","New York: New York City, Marble Hill":"New York New York, Marble Hill","New York: Suffolk County":"New York\u00a0: Comt\u00e9 de Suffolk",'New York: The "Outer Boroughs"':"New York\u00a0: les \u00ab\u00a0Outer Boroughs\u00a0\u00bb","New York: Westchester County":"New York\u00a0: Comt\u00e9 de Westchester","New Zealand":"Nouvelle-Z\u00e9lande",Newfoundland:"Terre-Neuve","Newfoundland and Labrador, Canada: St. John's":"Terre-Neuve-et-Labrador, Canada\u00a0: St. John\u2019s",
"Norfolk Island":"\u00cele Norfolk","Norfolk Island, Australian Antarctic Territory":"\u00cele Norfolk, Territoire de l\u2019Antarctique australien","North America":"Am\u00e9rique du Nord","North America and the Caribbean Islands":"Am\u00e9rique du Nord et \u00celes Cara\u00efbes","North Carolina":"Caroline du Nord","North Carolina: Greensboro, Winston-Salem, Wilkesboro, Roxboro, and northwest North Carolina":"Caroline du Nord\u00a0: Greensboro, Winston-Salem, Wilkesboro, Roxboro et nord-ouest de la Caroline du Nord",
"North Central Indiana: South Bend, Logansport, Elkhart, Warsaw, Nappanee":"Centre nord de l\u2019Indiana\u00a0: South Bend, Logansport, Elkhart, Warsaw, Nappanee","North Central Iowa: Des Moines, Ames, Fort Dodge, Jefferson, Algona, Indianola":"Centre-nord de l\u2019Iowa\u00a0: Des Moines, Ames, Fort Dodge, Jefferson, Algona, Indianola","North Central Kentucky: Lexington, Richmond, Danville, Covington, Florence, Mount Sterling":"Centre-nord du Kentucky\u00a0: Lexington, Richmond, Danville, Covington, Florence, Mount Sterling",
"North Central Missouri: Sedalia, Kirksville, Macon, Marshall, Trenton, Maryville, Bethany":"Centre-nord du Minnesota\u00a0: Sedalia, Kirksville, Macon, Marshall, Trenton, Maryville, Bethany","North Central New York: Syracuse, New York, Utica, Watertown":"Centre-nord de New York\u00a0: Syracuse, New York, Utica, Watertown","North Central North Carolina: Raleigh, Durham, Chapel Hill, Oxford, Goldsboro":"Centre-nord de la Caroline du Nord\u00a0: Raleigh, Durham, Chapel Hill, Oxford, Goldsboro","North Central Tennessee: Nashville, Murfreesboro, Springfield, Lebanon, Dickson":"Centre-nord du Tennessee\u00a0: Nashville, Murfreesboro, Springfield, Lebanon, Dickson",
"North Central Virginia: Roanoke, Fredericksburg, Blacksburg, Harrisonburg, Winchester":"Centre-nord de la Virginie\u00a0: Roanoke, Fredericksburg, Blacksburg, Harrisonburg, Winchester","North Dakota":"Dakota du Nord","North Korea":"Cor\u00e9e du Nord","Northeast France":"Nord-est de la France","Northeastern Florida: Jacksonville, St. Augustine, Starke, Green Cove Springs":"Floride du nord-est\u00a0: Jacksonville, St. Augustine, Starke, Green Cove Springs","Northeastern Illinois: Arlington Heights, Buffalo Grove, Wauconda, Waukegan, Des Plaines, Chicago suburbs":"Illinois du nord-est\u00a0: Arlington Heights, Buffalo Grove, Wauconda, Waukegan, Des Plaines, banlieues de Chicago",
"Northeastern Indiana: Fort Wayne, New Haven, Decatur, Angola, Huntington, Wabash":"Indiana du nord-est\u00a0: Fort Wayne, New Haven, Decatur, Angola, Huntington, Wabash","Northeastern Massachusetts: Fitchburg, Peabody":"Massachusetts du nord-est\u00a0: Fitchburg, Peabody","Northeastern New York: Albany, Schenectady, Plattsburgh, Saranac Lake":"New York du nord-est\u00a0: Albany, Schenectady, Plattsburgh, Saranac Lake","Northeastern North Carolina: Greenville, Kitty Hawk, Rocky Mount":"Caroline du Nord du nord-est\u00a0: Greenville, Kitty Hawk, Rocky Mount",
"Northeastern Ohio: Akron, Canton, Youngstown, Warren":"Ohio du nord-est\u00a0: Akron, Canton, Youngstown, Warren","Northeastern Oklahoma: Tulsa, Bartlesville, McAlester, Muskogee, Henryetta":"Oklahoma du nord-est\u00a0: Tulsa, Bartlesville, McAlester, Muskogee, Henryetta","Northeastern Pennsylvania: Scranton, Williamsport, Wilkes-Barre, Nanticoke, Hazleton, Pottsville, Sunbury, Danville, Bloomsburg, Stroudsburg":"Pennsylvanie du nord-est\u00a0: Scranton, Williamsport, Wilkes-Barre, Nanticoke, Hazleton, Pottsville, Sunbury, Danville, Bloomsburg, Stroudsburg",
"Northeastern Texas: Tyler, Sherman, Longview, Marshall, Palestine, Jacksonville, Carthage":"Texas du nord-est\u00a0: Tyler, Sherman, Longview, Marshall, Palestine, Jacksonville, Carthage","Northern Alberta, Canada: Edmonton, Jasper, Grande Prairie, Peace River":"Alberta du nord, Canada\u00a0: Edmonton, Jasper, Grande Prairie, Peace River","Northern California coast":"C\u00f4te de la Californie du nord","Northern Illinois: Rockford, La Salle, De Kalb, Freeport, Joliet, Plainfield, Crystal Lake":"Illinois du nord\u00a0: Rockford, La Salle, De Kalb, Freeport, Joliet, Plainfield, Crystal Lake",
"Northern Ireland":"Irlande du Nord","Northern Kansas: Colby, Topeka, Salina, Manhattan, Lawrence":"Kansas du nord\u00a0: Colby, Topeka, Salina, Manhattan, Lawrence","Northern Kentucky: Louisville, Frankfort, Shelbyville, Bardstown":"Kentucky du nord\u00a0: Louisville, Frankfort, Shelbyville, Bardstown","Northern Louisiana: Shreveport, Monroe, Alexandria, Fisher, Tallulah":"Louisiane du nord\u00a0: Shreveport, Monroe, Alexandria, Fisher, Tallulah","Northern Mariana Islands":"\u00celes Marianne du Nord",
"Northern Michigan: Escanaba, Houghton, Iron Mountain, Marquette, Menominee, Sault Ste. Marie, Upper Peninsula":"Michigan du nord\u00a0: Escanaba, Houghton, Iron Mountain, Marquette, Menominee, Sault Ste. Marie, Upper Peninsula","Northern Minnesota: Duluth, Thief River Falls, Brainerd, International Falls":"Minnesota du nord\u00a0: Duluth, Thief River Falls, Brainerd, International Falls","Northern Mississippi: Greenville, Tupelo, Winona, Columbus, Holly Springs":"Mississippi du nord\u00a0: Greenville, Tupelo, Winona, Columbus, Holly Springs",
"Northern Ohio: Cleveland suburbs, Elyria, Lorain, Oberlin, Ashtabula":"Ohio du nord\u00a0: Banlieues de Cleveland, Elyria, Lorain, Oberlin, Ashtabula","Northern Texas: Vernon, Wichita Falls, Denton, Gainesville, Decatur":"Texas du nord\u00a0: Vernon, Wichita Falls, Denton, Gainesville, Decatur","Northern Virginia: Alexandria, Arlington, Fairfax, Prince William, eastern Loudoun counties":"Virginie du nord\u00a0: Alexandria, Arlington, Fairfax, Prince William, comt\u00e9s de l\u2019est de Loudoun",
"Northern Wisconsin: Wausau, Eau Claire, Rice Lake, Rhinelander, Ashland":"Wisconsin du nord\u00a0: Wausau, Eau Claire, Rice Lake, Rhinelander, Ashland","Northern and Eastern Alabama: Huntsville, Decatur, Cullman, Gadsden, Florence, Anniston":"Alabama du nord et de l\u2019est\u00a0: Huntsville, Decatur, Cullman, Gadsden, Florence, Anniston","Northern and Eastern Florida: Daytona Beach, Lake City, Live Oak, Crescent City":"Floride du nord et de l\u2019est : Daytona Beach, Lake City, Live Oak, Crescent City",
"Northern and Western Arizona: Flagstaff, Kingman, Prescott, Yuma":"Arizona du nord et de l\u2019ouest\u00a0: Flagstaff, Kingman, Prescott, Yuma","Northern and Western Colorado: Aspen, Durango, Grand Junction, Fort Collins":"Colorado du nord et de l\u2019ouest\u00a0: Aspen, Durango, Grand Junction, Fort Collins","Northerneastern California: Redding, Chico, Davis, Placerville, Lake Tahoe, Susanville, Alturas, Truckee":"Californie du nord-est\u00a0: Redding, Chico, Davis, Placerville, Lake Tahoe, Susanville, Alturas, Truckee",
"Northwest California":"Californie du nord-ouest","Northwest France":"Nord-ouest de la France","Northwest Indiana: Gary, Chesterton, Crown Point, East Chicago, Hammond, Hobart, Merrillville, Michigan City, Portage, Valparaiso":"Indiana du nord-ouest\u00a0: Gary, Chesterton, Crown Point, East Chicago, Hammond, Hobart, Merrillville, Michigan City, Portage, Valparaiso","Northwestern Arkansas: Fort Smith, Fayetteville":"Arkansas du nord-ouest\u00a0: Fort Smith, Fayetteville","Northwestern California: Napa, Vallejo, Santa Rosa, Ukiah, Crescent City, Eureka, Ukiah":"Californie du nord-ouest\u00a0: Napa, Vallejo, Santa Rosa, Ukiah, Crescent City, Eureka, Ukiah",
"Northwestern Florida: Pensacola, Tallahassee, Panama City, the Florida panhandle":"Floride du nord-ouest\u00a0: Pensacola, Tallahassee, Panama City, l\u2019enclave de Floride","Northwestern Michigan: Muskegon, Traverse City, Ludington, Petoskey":"Michigan du nord-ouest\u00a0: Muskegon, Traverse City, Ludington, Petoskey","Northwestern New Jersey: Newark, Paterson":"New Jersey du nord-ouest\u00a0: Newark, Paterson","Northwestern New Mexico: Albuquerque, Santa Fe, Farmington, Gallup":"Nouveau-Mexique du nord-ouest\u00a0: Albuquerque, Santa Fe, Farmington, Gallup",
"Northwestern Ohio: Toledo, Sylvania, Mansfield, Lima, Findlay, Bryan, Sandusky, Bowling Green":"Ohio du nord-ouest\u00a0: Toledo, Sylvania, Mansfield, Lima, Findlay, Bryan, Sandusky, Bowling Green","Northwestern Ontario, Canada: Thunder Bay, Kenora, Dryden, Greenstone":"Ontario du nord-ouest, Canada\u00a0: Thunder Bay, Kenora, Dryden, Greenstone","Northwestern Oregon: Portland, Salem, Hillsboro, Beaverton":"Or\u00e9gon du nord-ouest\u00a0: Portland, Salem, Hillsboro, Beaverton","Northwestern Oregon: Portland, Salem, Hillsboro, St. Helens, Tillamook, Astoria":"Or\u00e9gon du nord-ouest\u00a0: Portland, Salem, Hillsboro, St. Helens, Tillamook, Astoria",
"Northwestern and Central Pennsylvania: Erie, Warren, State College, Altoona, Johnstown, Meyersdale, Johnsonburg, St. Marys, Ridgway, DuBois, Emporium":"Pennsylvanie du nord-ouest et du centre\u00a0: Erie, Warren, State College, Altoona, Johnstown, Meyersdale, Johnsonburg, St. Marys, Ridgway, DuBois, Emporium",Norway:"Norv\u00e8ge","Norway, Svalbard and Jan Mayen":"Norv\u00e8ge, Svalbard et Jan Mayen","Nova Scotia and Prince Edward Island, Canada":"Nouvelle-\u00c9cosse et \u00cele-du-Prince-\u00c9douard, Canada",
"Nova Scotia/PEI":"Nouvelle-\u00c9cosse/IPE","N\u00fcrnberg":"Nuremberg","N\u00fcrnberg/F\u00fcrth":"Nuremberg/F\u00fcrth",OCHA:"BCAH","Ohio: Cleveland":"Ohio\u00a0: Cleveland","Ohio: Columbus":"Ohio\u00a0: Columbus","Ontario: Toronto":"Ontario\u00a0:\u00a0 Toronto",Oregon:"Or\u00e9gon","Oregon: Eugene, Medford, Bend, Pendleton, Corvallis, Ontario, Burns":"Or\u00e9gon\u00a0: Eugene, Medford, Bend, Pendleton, Corvallis, Ontario, Burns",Palau:"Palaos","Palestinian Authority":"Autorit\u00e9 palestinienne",
Panama:"Panam\u00e1","Papua New Guinea":"Papouasie-Nouvelle-Guin\u00e9e","Paris (Ile-de-France area)":"Paris (\u00cele-de-France)",Pennsylvania:"Pennsylvanie","Pennsylvania: Philadelphia":"Pennsylvanie\u00a0: Philadelphie","People's Republic of China":"R\u00e9publique populaire de Chine","Personal Comm.":"Comm. personnelles","Personal Comm. Services":"Services comm. personnelles","Personal Communications Services":"Services de communications personnelles",Peru:"P\u00e9rou",Poland:"Pologne","Premium Rate":"Revenus partag\u00e9s (indicatif 900)",
"Premium-rate":"Acc\u00e8s limit\u00e9 (indicatif 900)","Premium-rate Telephone Service":"Service tel\u00e9phonique \u00e0 acc\u00e8s limit\u00e9 (indicatif 900)","Puerto Rico":"Porto Rico",Quebec:"Qu\u00e9bec","Quebec, Canada":"Qu\u00e9bec, Canada","Quebec, Canada: Montreal, \u00cele Perrot, \u00cele Bizard":"Qu\u00e9bec, Canada\u00a0: Montr\u00e9al, \u00cele Perrot, \u00cele Bizard","Quebec, Canada: Quebec City, Saguenay, Gasp\u00e9 Peninsula, C\u00f4te-Nord, Chibougamau, St-Georges":"Qu\u00e9bec, Canada\u00a0: Qu\u00e9bec, Saguenay, P\u00e9ninsule de Gasp\u00e9, C\u00f4te-Nord, Chibougamau, St-Georges",
"Quebec, Canada: Sherbrooke, Trois-Rivieres, Abitibi-T\u00e9miscamingue, Mauricie, Outaouais, Estrie":"Qu\u00e9bec, Canada\u00a0: Sherbrooke, Trois-Rivi\u00e8res, Abitibi-T\u00e9miscamingue, Mauricie, Outaouais, Estrie","Republic of China":"R\u00e9publique de Chine","Republic of Congo":"R\u00e9publique du Congo","Republic of Ireland":"R\u00e9publique d\u2019Irlande",Romania:"Roumanie",Russia:"Russie","Russia, Kazakhstan":"Russie, Kazakhstan","S Alberta":"Alberta du S","S Arkansas":"Arkansas du S",
"S California":"Californie du S","S Florida":"Floride du S","S Illinois":"Illinois du S","S Kansas":"Kansas du S","S Minnesota":"Minnesota du S","S Mississippi":"Mississippi du S","S Quebec":"Qu\u00e9bec du S","S Texas":"Texas du S","S Virginia":"Virginie du S","SE Alabama":"Alabama du SE","SE Arizona":"Arizona du SE","SE California":"Californie du SE","SE Colorado":"Colorado du SE","SE Georgia":"G\u00e9orgie du SE","SE Louisiana":"Louisiane du SE","SE Massachusetts":"Massachusetts du SE","SE New Jersey":"New Jersey du SE",
"SE New York":"New York du SE","SE North Carolina":"Caroline du Nord du SE","SE Ohio":"Ohio du SE","SE Pennsylvania":"Pennsylvanie du SE","SE Texas":"Texas du SE","SE Wisconsin":"Wisconsin du SE","SW Alabama":"Alabama du SO","SW Florida":"Floride du SO","SW Georgia":"G\u00e9orgie du SO","SW Louisiana":"Louisiane du SO","SW Michigan":"Michigan du SO","SW Missouri":"Missouri du SO","SW New Jersey":"New Jersey du SO","SW Ohio":"Ohio du SO","SW Oklahoma":"Oklahoma du SO","SW Ontario":"Ontario du SO",
"SW Pennsylvania":"Pennsylvanie du SO","SW Tennessee":"Tennessee du SO","SW Texas":"Texas du SO","SW Virginia":"Virginie du SO","SW Wisconsin":"Wisconsin du SO","Saint Helena":"Sainte-H\u00e9l\u00e8ne","Saint Helena, Tristan da Cunha":"Sainte-H\u00e9l\u00e8ne, Tristan da Cunha","Saint Kitts and Nevis":"Saint-Kitts-et-Nevis","Saint Lucia":"Sainte-Lucie","Saint Pierre and Miquelon":"Saint-Pierre-et-Miquelon (France)","Saint Pierre and Miquelon Islands":"Saint-Pierre-et-Miquelon (France)","Saint Vincent and the Grenadines":"Saint-Vincent et les Grenadines",
Salamanca:"Salamanque","San Marino":"Saint-Marin","Saudi Arabia":"Arabie saoudite",Senegal:"S\u00e9n\u00e9gal",Serbia:"Serbie","Service Number":"Num\u00e9ro de service",Seville:"S\u00e9ville","Shared Cost":"Co\u00fbts partag\u00e9s","Shared Cost Service":"Service \u00e0 co\u00fbts partag\u00e9s",Singapore:"Singapour","Sint Maarten":"Saint-Martin",Slovakia:"Slovaquie",Slovenia:"Slov\u00e9nie","Solomon Islands":"\u00celes Solomon",Somalia:"Somalie","Somalia, Somaliland":"Somalie, Somaliland","South Africa":"Afrique du Sud",
"South Carolina":"Caroline du Sud","South Carolina: Greenville, Spartanburg, Anderson, Upstate South Carolina":"Caroline du Sud\u00a0: Greenville, Spartanburg, Anderson, nord-ouest de la Caroline du Sud","South Central California: Bakersfield, Lancaster, Santa Clarita, Palmdale, Mojave":"Centre-sud de la Californie\u00a0: Bakersfield, Lancaster, Santa Clarita, Palmdale, Mojave","South Central Florida: Auburndale, Lakeland, Avon Park, Clewiston, Bartow, Sebring, Winter Haven":"Centre-sud de la Floride\u00a0: Auburndale, Lakeland, Avon Park, Clewiston, Bartow, Sebring, Winter Haven",
"South Central Michigan: Lansing, Jackson, Charlotte, Coldwater, Howell, Deerfield, Addison":"Centre-sud du Michigan\u00a0: Lansing, Jackson, Charlotte, Coldwater, Howell, Deerfield, Addison","South Central North Carolina: Charlotte, Gastonia, Concord, Salisbury":"Centre sud de la Caroline du Nord\u00a0: Charlotte, Gastonia, Concord, Salisbury","South Central Pennsylvania: Harrisburg, Gettysburg, Lancaster, York":"Centre-sud de la Pennsylvanie\u00a0: Harrisburg, Gettysburg, Lancaster, York","South Dakota":"Dakota du Sud",
"South Korea":"Cor\u00e9e du Sud","Southeast France":"Sud-est de la France","Southeastern Alabama: Montgomery, Auburn, Opelika, Dothan, Selma":"Alabama du sud-est\u00a0: Montgomery, Auburn, Opelika, Dothan, Selma","Southeastern Arizona: Tucson, Nogales":"Arizona du sud-est\u00a0: Tucson, Nogales","Southeastern California: Bishop, Ridgecrest, Barstow, Palm Springs, Indio, Imperial County":"Californie du sud-est\u00a0: Bishop, Ridgecrest, Barstow, Palm Springs, Indio, Comt\u00e9 Imperial","Southeastern Colorado: Colorado Springs, Pueblo, Leadville, Trinidad, Rocky Ford, La Junta":"Colorado du sud-est\u00a0: Colorado Springs, Pueblo, Leadville, Trinidad, Rocky Ford, La Junta",
"Southeastern Georgia: Savannah, Statesboro, Vidalia, Waycross, Brunswick, Douglas":"G\u00e9orgie du sud-est\u00a0: Savannah, Statesboro, Vidalia, Waycross, Brunswick, Douglas","Southeastern Louisiana: Houma, Slidell":"Louisiane du sud-est\u00a0: Houma, Slidell","Southeastern Massachusetts: Worcester, New Bedford":"Massachusetts du sud-est\u00a0: Worcester, New Bedford","Southeastern New York: Rockland, Poughkeepsie, Middletown, West Point, Newburgh, Catskills, Margaretville":"New York du sud-est\u00a0: Rockland, Poughkeepsie, Middletown, West Point, Newburgh, Catskills, Margaretville",
"Southeastern North Carolina: Fayetteville, Wilmington, Jacksonville, Lumberton":"Caroline du Nord du sud-est\u00a0: Fayetteville, Wilmington, Jacksonville, Lumberton","Southeastern Pennsylvania: Allentown, Reading, Norristown, Chester":"Pennsylvanie du sud-est\u00a0: Allentown, Reading, Norristown, Chester","Southeastern Texas: Beaumont, Galveston, Port Arthur, Jasper":"Texas du sud-est\u00a0: Beaumont, Galveston, Port Arthur, Jasper","Southeastern Texas: Wharton, Bryan, Bay City, College Station, Lake Jackson, La Grange":"Texas du sud-est\u00a0: Wharton, Bryan, Bay City, College Station, Lake Jackson, La Grange",
"Southeastern Wisconsin: Racine, Kenosha, Menomonee Falls, Waukesha":"Wisconsin du sud-est\u00a0: Racine, Kenosha, Menomonee Falls, Waukesha","Southern Alberta, Canada: Calgary, Banff, Red Deer, Medicine Hat, Lethbridge, Brooks":"Sud de l\u2019Alberta, Canada\u00a0: Calgary, Banff, Red Deer, Medicine Hat, Lethbridge, Brooks","Southern California: Anaheim, Santa Ana, Huntington Beach, Orange, Garden Grove, Fullerton, Orange County":"Californie du sud\u00a0: Anaheim, Santa Ana, Huntington Beach, Orange, Garden Grove, Fullerton, Comt\u00e9 d\u2019Orange",
"Southern California: Central Los Angeles":"Californie du sud\u00a0: Centre de Los Angeles","Southern California: Colton, Grand Terrace, Ontario, Claremont, Pomona, Chino, Redlands, Fontana":"Californie du sud\u00a0: Colton, Grand Terrace, Ontario, Claremont, Pomona, Chino, Redlands, Fontana","Southern California: Corona, Riverside, Temescal Canyon, Lake Elsinore, Mira Loma, Moreno Valley, Perris, Sun City, Murrieta, Temecula, Hemet, Winchester, Lakeview, Nuevo, Beaumont, Banning, Idyllwild":"Californie du sud\u00a0: Corona, Riverside, Temescal Canyon, Lake Elsinore, Mira Loma, Moreno Valley, Perris, Sun City, Murrieta, Temecula, Hemet, Winchester, Lakeview, Nuevo, Beaumont, Banning, Idyllwild",
"Southern California: Del Mar, La Jolla, San Diego":"Californie du sud\u00a0: Del Mar, La Jolla, San Diego","Southern California: Laguna Niguel, Irvine, Lake Forest, Newport Beach, Corona Del Mar":"Californie du sud\u00a0: Laguna Niguel, Irvine, Lake Forest, Newport Beach, Corona Del Mar","Southern California: Long Beach, Whittier, Norwalk, La Habra Lakewood, Bellflower":"Californie du sud\u00a0: Long Beach, Whittier, Norwalk, La Habra Lakewood, Bellflower","Southern California: Los Angeles, West LA, San Fernando Valley, Florence, Montebello":"Californie du sud\u00a0: Los Angeles, West LA, San Fernando Valley, Florence, Montebello",
"Southern California: Pasadena, West Covina, El Monte, La Puente, Arcadia, San Gabriel Valley, eastern Los Angeles suburbs":"Californie du sud\u00a0: Pasadena, West Covina, El Monte, La Puente, Arcadia, San Gabriel Valley, banlieues de l\u2019est de Los Angeles","Southern California: San Diego":"Californie du sud\u00a0: San Diego","Southern California: San Diego, Chula Vista":"Californie du sud\u00a0: San Diego, Chula Vista","Southern California: San Fernando Valley":"Californie du sud\u00a0: Vall\u00e9e de San Fernando",
"Southern California: San Fernando Valley, including Glendale, San Fernando, Northridge, Burbank, Los Angeles suburbs":"Californie du sud\u00a0: San Fernando Valley, y compris Glendale, San Fernando, Northridge, Burbank, banlieues de Los Angeles","Southern California: Santa Monica, Malibu, Torrance, South Bay, Beverly Hills, Catalina Island, the Los Angeles Westside":"Californie du sud : Santa Monica, Malibu, Torrance, South Bay, Beverly Hills, Catalina Island, Los Angeles Westside","Southern Florida: Fort Lauderdale, Hollywood, Coral Springs":"Floride du sud\u00a0: Fort Lauderdale, Hollywood, Coral Springs",
"Southern Florida: Miami-Dade, Florida Keys, Miami, Homestead, Coral Gables, Key West":"Floride du sud : Miami-Dade, Keys de la Floride, Miami, Homestead, Coral Gables, Key West","Southern Illinois: Alton, Belleville, Carbondale, Centralia, East Saint Louis, Mount Vernon":"Illinois du sud\u00a0: Alton, Belleville, Carbondale, Centralia, East Saint Louis, Mount Vernon","Southern Kansas: Dodge City, Emporia, Geat Bend, Parsons, Liberal":"Kansas du sud\u00a0: Dodge City, Emporia, Geat Bend, Parsons, Liberal",
"Southern Minnesota: Rochester, Mankato, Worthington, Marshall":"Minnesota du sud\u00a0: Rochester, Mankato, Worthington, Marshall","Southern Mississippi: Gulfport, Biloxi, Pascagoula, Bay St Louis":"Mississippi du sud\u00a0: Gulfport, Biloxi, Pascagoula, Bay St Louis","Southern Texas: Laredo, Brownsville, McAllen, Harlingen":"Texas du sud\u00a0: Laredo, Brownsville, McAllen, Harlingen","Southern Virginia: Charlottesville, Lynchburg, Danville, Farmville, South Hill":"Virginie du sud\u00a0: Charlottesville, Lynchburg, Danville, Farmville, South Hill",
"Southern and Eastern Arkansas: Texarkana, Jonesboro, Pine Bluff":"Arkansas du sud et de l\u2019est\u00a0: Texarkana, Jonesboro, Pine Bluff","Southern and Western Oklahoma: Enid, Lawton, Ponca City, Guymon, Ardmore, Sayre, Elk City":"Oklahoma du sud et de l\u2019ouest\u00a0: Enid, Lawton, Ponca City, Guymon, Ardmore, Sayre, Elk City","Southwest France":"Sud-ouest de la France","Southwestern Alabama: Mobile, Jackson, Brewton":"Alabama du sud-ouest\u00a0: Mobile, Jackson, Brewton","Southwestern Florida: Lee, Collier, and Monroe Counties; Cape Coral, Fort Myers, Naples, Everglades":"Floride du sud-ouest : Comt\u00e9s de Lee, Collier et Monroe\u00a0; Cape Coral, Fort Myers, Naples, Everglades",
"Southwestern Florida: Tampa Bay,Manatee County, Sarasota County, Charlotte County; Bradenton, Port Charlotte, Sarasota, Punta Gorda":"Floride du sud-ouest\u00a0: Tampa Bay,Manatee County, Sarasota County, Charlotte County; Bradenton, Port Charlotte, Sarasota, Punta Gorda","Southwestern Georgia: Albany, Valdosta, Bainbridge, Americus, Fitzgerald":"G\u00e9orgie du sud-ouest\u00a0: Albany, Valdosta, Bainbridge, Americus, Fitzgerald","Southwestern Louisiana: Lafayette, Lake Charles, Leesville, New Iberia, Opelousas, De Ridder":"Louisiane du sud-ouest\u00a0: Lafayette, Lake Charles, Leesville, New Iberia, Opelousas, De Ridder",
"Southwestern Michigan: Ann Arbor, Canton, Plymouth, Monroe, Wayne, Ypsilanti, Romulus, Detroit suburbs":"Michigan du sud-ouest\u00a0: Ann Arbor, Canton, Plymouth, Monroe, Wayne, Ypsilanti, Romulus, banlieues de Detroit","Southwestern Michigan: Battle Creek, Kalamazoo, Benton Harbor, Allegan, Hastings, St Joseph":"Michigan du sud-ouest\u00a0: Battle Creek, Kalamazoo, Benton Harbor, Allegan, Hastings, St Joseph","Southwestern Michigan: Grand Rapids, Holland, Greenville, Grand Haven, Zeeland, Ionia":"Michigan du sud-ouest\u00a0: Grand Rapids, Holland, Greenville, Grand Haven, Zeeland, Ionia",
"Southwestern Missouri: Springfield, Joplin, Branson, West Plains, Lamar, Lebanon":"Missouri du sud-ouest : Springfield, Joplin, Branson, West Plains, Lamar, Lebanon","Southwestern New Jersey: Vineland, Cherry Hill, Camden, Millville":"New Jersey du sud-ouest\u00a0: Vineland, Cherry Hill, Camden, Millville","Southwestern Ohio":"Ohio du sud-ouest","Southwestern Ohio: Cincinnati, Middletown, Hamilton, Norwood, Lebanon":"Ohio du sud-ouest \u00a0: Cincinnati, Middletown, Hamilton, Norwood, Lebanon","Southwestern Ohio: Marysville, Springfield, Dayton, Hillsboro":"Ohio du sud-ouest \u00a0: Marysville, Springfield, Dayton, Hillsboro",
"Southwestern Ontario, Canada: London, Windsor, Kitchener-Waterloo, Cambridge":"Ontario du sud-ouest, Canada\u00a0: London, Windsor, Kitchener-Waterloo, Cambridge","Southwestern Ontario, Canada: Niagara Region, Hamilton, Toronto suburbs":"Ontario du sud-ouest, Canada\u00a0: Niagara Region, Hamilton, banlieues de Toronto","Southwestern Pennsylvania: New Castle, Washington, Indiana, Uniontown":"Pennsylvanie du sud-ouest\u00a0: New Castle, Washington, Indiana, Uniontown","Southwestern Tennessee: Memphis, Covington, Somerville":"Tennessee du sud-ouest\u00a0: Memphis, Covington, Somerville",
"Southwestern Texas: Del Rio, Uvalde, New Braunfels, Kerrville, Eagle Pass":"Texas du sud-ouest \u00a0: Del Rio, Uvalde, New Braunfels, Kerrville, Eagle Pass","Southwestern Virginia: Bristol, Abingdon, Wytheville, Martinsville, Bluefield":"Virginie du sud-ouest : Bristol, Abingdon, Wytheville, Martinsville, Bluefield","Southwestern Wisconsin: Madison, La Crosse, Platteville, Beloit":"Wisconsin du sud-ouest\u00a0: Madison, La Crosse, Platteville, Beloit",Spain:"Espagne","Special Telecom.":"T\u00e9l\u00e9com. sp\u00e9ciales",
"Special Telecommunications Needs in Canada":"Besoins en t\u00e9l\u00e9communications sp\u00e9ciales au Canada","St. Lucia":"Ste-Lucie","St. Pierre and Miquelon":"Saint-Pierre-et-Miquelon","St. Vincent/Grenadines":"St-Vincent/Grenadines",Strasburg:"Strasbourg",Sudan:"Soudan",Sweden:"Su\u00e8de",Switzerland:"Suisse",Syria:"Syrie","S\u00e3o Tom\u00e9 and Pr\u00edncipe":"Sao Tom\u00e9-et-Principe",Taiwan:"Ta\u00efwan",Tajikistan:"Tadjikistan",Tanzania:"Tanzanie",Tarragona:"Tarragone","Tennessee: Clarksville, Columbia, Manchester, Cookeville":"Tennessee\u00a0: Clarksville, Columbia, Manchester, Cookeville",
"Texas: Abilene, San Angelo, Sweetwater, Snyder":"Texas\u00a0: Abilene, San Angelo, Sweetwater, Snyder","Texas: Amarillo, Lubbock, Canadian, Perryton, Shamrock, Dalhart, Texas Panhandle":"Texas\u00a0: Amarillo, Lubbock, Canadian, Perryton, Shamrock, Dalhart, Texas Panhandle","Texas: Dallas area":"Texas\u00a0: R\u00e9gion de Dallas","Texas: El Paso County, Hudspeth County":"Texas\u00a0: Comt\u00e9 d\u2019El Paso, Comt\u00e9 de Hudspeth","Texas: Fort Worth, Arlington, Grandview, Weatherford, Rhome":"Texas\u00a0: Fort Worth, Arlington, Grandview, Weatherford, Rhome",
"Texas: Houston":"Texas Houston","Texas: San Antonio area":"Texas\u00a0: R\u00e9gion de San Antonio","Texas: Waco, Killeen, Temple, Belton, and Stephenville":"Texas\u00a0: Waco, Killeen, Temple, Belton et Stephenville",Thailand:"Tha\u00eflande","The Bahamas":"Les Bahamas","The British Virgin Islands":"\u00celes Vierges britanniques","The Cayman Islands":"Les \u00eeles Ca\u00efmans","The Dominican Republic":"R\u00e9publique dominicaine","The Gambia":"Gambie","The Turks and Caicos Islands":"\u00celes Turks et Caicos",
"The U.S. Virgin Islands":"\u00celes Vierges am\u00e9ricaines",Toledo:"Tol\u00e8de","Toll call":"Appel payant","Toll call at local rates (Num\u00e9ros Azurs)":"Appel payant au tarif local (Num\u00e9ros Azurs)","Toll call (Num\u00e9ros Indigos)":"Appel payant (Num\u00e9ros Indigos)","Toll-free Number":"Num\u00e9ro gratuit","Toll-free Service (Num\u00e9ros Verts)":"Num\u00e9ro gratuit (Num\u00e9ros Verts)","Trinidad and Tobago":"Trinit\u00e9-et-Tobago","Trinidad/Tobago":"Trinit\u00e9/Tobago",Tunisia:"Tunisie",
Turkey:"Turquie","Turkey, Turkish Republic of Northern Cyprus":"Turquie, R\u00e9publique turque de Chypre du Nord",Turkmenistan:"Turkm\u00e9nistan","U.S. Government":"Gouvernement des \u00c9tats-Unis","U.S. Government Special Services":"Services sp\u00e9ciaux du gouvernement des \u00c9tats-Unis","U.S. Virgins":"\u00celes Vierges am\u00e9ricaines",UAE:"\u00c9AU",Uganda:"Ouganda","United Arab Emirates":"\u00c9mirats arabes unis","United Kingdom":"Royaume-Uni","United Kingdom, Guernsey, Isle of Man, Jersey":"Royaume-Uni, Guernesey, \u00cele de Man, Jersey",
"Universal Personal":"Personnel universel","Universal Personal Telecommunications":"T\u00e9l\u00e9communications personnelles universelles","Universal international freephone number":"Num\u00e9ro de t\u00e9l\u00e9phone gratuit international universel","Unknown Country":"Pays inconnu","Unknown Location":"Lieu inconnu","Utah: Cedar City, Logan, Moab, Park City, St. George, Moab":"Utah\u00a0: Cedar City, Logan, Moab, Park City, St. George, Moab","Utah: Wasatch Front":"Utah\u00a0: Wasatch Front",Uzbekistan:"Ouzb\u00e9kistan",
Valencia:"Valence","Vatican City":"Vatican",Virginia:"Virginie","Virginia: Hampton Roads, Eastern Shore":"Virginie\u00a0: Hampton Roads, Eastern Shore","Virginia: Richmond, Petersburg":"Virginie\u00a0: Richmond, Petersburg",Vizcaya:"Biscaye","Voice over IP":"Voix sur IP","Voice over IP services":"Services de voix sur IP","W Illinois":"Illinois de l\u2019O","W Iowa":"Iowa de l\u2019O","W Kentucky":"Kentucky de l\u2019O","W Maryland":"Maryland de l\u2019O","W Massachusetts":"Massachusetts de l\u2019O",
"W Nebraska":"Nebraska de l\u2019O","W New York":"New York de l\u2019O","W North Carolina":"Caroline du Nord de l\u2019O","W Pennsylvania":"Pennsylvanie de l\u2019O","W Tennessee":"Tennessee de l\u2019O","W Texas":"Texas de l\u2019O","W Washington":"Washington de l\u2019O","Wallis and Futuna":"Wallis-et-Futuna","Washington D.C.":"Washington, DC","Washington: Seattle":"Washington\u00a0: Seattle","Washington: Seattle suburbs, Bellevue, Everett, Redmond, Renton, Kirkland, Bothell, Sammamish, Issaquah, Edmonds, Lynnwood and Mountlake Terrace":"Washington\u00a0: Banlieues de Seattle, Bellevue, Everett, Redmond, Renton, Kirkland, Bothell, Sammamish, Issaquah, Edmonds, Lynnwood et Mountlake Terrace",
"Washington: Tacoma, Lakewood, Auburn, Puyallup, Enumclaw, Spanaway and south Seattle suburbs":"Washington\u00a0: Tacoma, Lakewood, Auburn, Puyallup, Enumclaw, Spanaway et banlieues du sud de Seattle","Washington: Western Washington":"Washington\u00a0: Washington de l\u2019ouest","West Central Georgia: Augusta, Lincolnton, Columbus, LaGrange, Rome, Dalton, Thomaston":"Centre-ouest de la G\u00e9orgie\u00a0: Augusta, Lincolnton, Columbus, LaGrange, Rome, Dalton, Thomaston","West Central Missouri: Kansas City, St Joseph, Independence, Harrisonville":"Centre-ouest du Missouri\u00a0: Kansas City, St Joseph, Independence, Harrisonville",
"West Central New Jersey: Alpha, Washington, Elizabeth, Warren, Plainfield":"Centre-ouest du New Jersey\u00a0: Alpha, Washington, Elizabeth, Warren, Plainfield","West Texas: Midland, Odessa, Big Spring, Alpine":"Texas de l\u2019ouest\u00a0: Midland, Odessa, Big Spring, Alpine","West Virginia":"Virginie occidentale","Western Iowa: Sioux City, Council Bluffs, Sheldon, Denison, Estherville":"Iowa de l\u2019ouest\u00a0: Sioux City, Council Bluffs, Sheldon, Denison, Estherville","Western Kentucky: Owensboro, Paducah, Bowling Green, Hopkinsville, Henderson, Elizabethtown":"Kentucky de l\u2019ouest\u00a0: Owensboro, Paducah, Bowling Green, Hopkinsville, Henderson, Elizabethtown",
"Western Maryland: Silver Spring, DC suburbs, Hagerstown, Frederick, Rockville, Cumberland":"Maryland de l\u2019ouest\u00a0: Silver Spring, banlieues de Washington, DC, Hagerstown, Frederick, Rockville, Cumberland","Western Massachusetts: Springfield, Pittsfield, Holyoke, Greenfield":"Massachusetts de l\u2019ouest\u00a0: Springfield, Pittsfield, Holyoke, Greenfield","Western Nebraska: North Platte, Scottsbluff, McCook, Kearney, Grand Island":"Nebraska de l\u2019ouest\u00a0: North Platte, Scottsbluff, McCook, Kearney, Grand Island",
"Western New York: Buffalo, Jamestown, Niagara Falls, Tonawanda, Olean":"New York de l\u2019ouest\u00a0: Buffalo, Jamestown, Niagara Falls, Tonawanda, Olean","Western New York: Rochester, Wellsville, Batavia":"New York de l\u2019ouest\u00a0: Rochester, Wellsville, Batavia","Western North Carolina: Hickory, Asheville, Waynesville, Franklin, Murphy":"Caroline du Nord de l\u2019ouest\u00a0: Hickory, Asheville, Waynesville, Franklin, Murphy","Western Pennsylvania: Pittsburgh area, McKeesport, Braddock, Duquesne":"Pennsylvanie de l\u2019ouest\u00a0: R\u00e9gion de Pittsburgh, McKeesport, Braddock, Duquesne",
"Western Tennessee: Union City, Jackson, Dyersburg, Martin, Brownsville, Paris, Bolivar":"Tennessee de l\u2019ouest\u00a0: Union City, Jackson, Dyersburg, Martin, Brownsville, Paris, Bolivar","Western Washington: Olympia, Vancouver, Bellingham, Bremerton, Port Angeles, Aberdeen":"Washington de l\u2019ouest\u00a0: Olympia, Vancouver, Bellingham, Bremerton, Port Angeles, Aberdeen","Western and Southern Texas: Corpus Christi, Victoria, George":"Texas de l\u2019ouest et du sud\u00a0: Corpus Christi, Victoria, George",
"Wisconsin: Milwaukee":"Wisconsin\u00a0: Milwaukee",Yemen:"Y\u00e9men","Yukon, Northwest Territories, and Nunavut, Canada":"Yukon, Territoires du Nord-Ouest et Nunavut, Canada",Zambia:"Zambie",Zaragoza:"Saragosse"};
ilib.data.phoneres_fr_CA={"Alabama: Birmingham; Tuscaloosa; western and central Alabama":"Alabama\u00a0: Birmingham; Tuscaloosa; ouest et centre de l'Alabama","British Columbia: Victoria, Prince George, Prince Rupert, Kelowna; also Hyder, Alaska.":"Colombie-Britannique\u00a0: Victoria, Prince George, Prince Rupert, Kelowna; aussi Hyder, Alaska.","Central Eastern Tennessee: Knoxville, Gatlinburg, Newport, Jefferson City, Oak Ridge, Rockwood":"Centre-est du Tennessee\u00a0: Knoxville, Gatlinburg, Newport, Jefferson City, Oak Ridge, Rockwood",
"Central Illinois: Springfield, Champaign Decatur, Urbana, Lincoln":"Centre de l\u2019Illinois\u00a0: Springfield, Champaign Decatur, Urbana, Lincoln","Eastern Tennessee: Bristol, Johnson City, Kingsport; Chattanooga, Cleveland":"Tennessee de l\u2019est\u00a0: Bristol, Johnson City, Kingsport; Chattanooga, Cleveland","New York: New York City, Marble Hill":"New York\u00a0: New York, Marble Hill","Northwestern Florida: Pensacola, Tallahassee, Panama City, the Florida panhandle":"Floride du nord-ouest\u00a0: Pensacola, Tallahassee, Panama City, l\u2019enclave de la Floride",
"Nova Scotia/PEI":"Nouvelle-\u00c9cosse/I.-P.-E.","Southern California: Santa Monica, Malibu, Torrance, South Bay, Beverly Hills, Catalina Island, the Los Angeles Westside":"Californie du sud\u00a0: Santa Monica, Malibu, Torrance, South Bay, Beverly Hills, Catalina Island, Los Angeles Westside","Southern Florida: Miami-Dade, Florida Keys, Miami, Homestead, Coral Gables, Key West":"Floride du sud\u00a0: Miami-Dade, Keys de la Floride, Miami, Homestead, Coral Gables, Key West","Southwestern Florida: Lee, Collier, and Monroe Counties; Cape Coral, Fort Myers, Naples, Everglades":"Floride du sud-ouest\u00a0: Comt\u00e9s de Lee, Collier et Monroe; Cape Coral, Fort Myers, Naples, Everglades",
"Texas: Houston":"Texas\u00a0: Houston","Toll-free":"Num\u00e9ro sans frais"};
ilib.data.phoneres_es={Afghanistan:"Afganist\u00e1n","Alabama: Birmingham; Tuscaloosa; western and central Alabama":"Alabama: Birmingham; Tuscaloosa; oeste y centro de Alabama","Alberta, Canada":"Alberta, Canad\u00e1",Algeria:"Argelia","Amer. Samoa":"Samoa Americana","American Samoa":"Samoa Americana",Anguilla:"Anguila","Antigua and Barbuda":"Antigua y Barbuda","Antigua/Barbuda":"Antigua / Barbuda","Arizona: Glendale, Sun City, Buckeye, Peoria, western Phoenix suburbs":"Arizona: Glendale, Sun City, Buckeye, Peoria, suburbios del oeste de Phoenix","Arizona: Mesa, Scottsdale, Chandler, Gilbert, Tempe, Queen Creek, eastern Phoenix suburbs":"Arizona: Mesa, Scottsdale, Chandler, Gilbert, Tempe, Queen Creek, suburbios del este de Phoenix",
"Armenia, Nagorno-Karabakh":"Armenia, Alto Karabaj",Ascension:"Ascensi\u00f3n","Ascension Island":"Isla Ascensi\u00f3n","Australia, Christmas Island, Cocos Islands":"Australia, Isla Christmas, Islas Cocos",Azerbaijan:"Azerbaiy\u00e1n","Azerbaijan, Nagorno-Karabakh":"Azerbaiy\u00e1n, Alto Karabaj",BVIs:"Islas V\u00edrgenes Brit\u00e1nicas",Bahrain:"Bahrein",Belarus:"Bielorrusia",Belgium:"B\u00e9lgica",Belize:"Belice",Benin:"Ben\u00edn",Berlin:"Berl\u00edn",Bermuda:"Bermudas",Bhutan:"But\u00e1n","Bosnia and Herzegovina":"Bosnia y Herzegovina",
Botswana:"Botsuana",Brazil:"Brasil","British Columbia":"Columbia Brit\u00e1nica","British Columbia, Canada":"Columbia Brit\u00e1nica, Canad\u00e1","British Columbia: Vancouver, Abbotsford, Whistler, Chilliwack":"Columbia Brit\u00e1nica: Vancouver, Abbotsford, Whistler, Chilliwack","British Columbia: Victoria, Prince George, Prince Rupert, Kelowna; also Hyder, Alaska.":"Columbia Brit\u00e1nica: Victoria, Prince George, Prince Rupert, Kelowna; tambi\u00e9n Hyder, Alaska.","British Indian Ocean":"Oc\u00e9ano \u00cdndico Brit\u00e1nico",
"British Indian Ocean Territory":"Territorio Brit\u00e1nico del Oc\u00e9ano \u00cdndico",Burma:"Birmania","California: East Bay Area, Oakland, Berkeley, Alameda":"California: \u00c1rea Este de la Bah\u00eda, Oakland, Berkeley, Alameda","California: Stockton, Modesto, Merced, Tracy, San Andreas and central California":"California: Stockton, Modesto, Merced, Tracy, San Andreas y California Central",Cambodia:"Camboya",Cameroon:"Camer\u00fan","Cape Verde":"Cabo Verde","Carrier Access":"Acceso de compa\u00f1\u00eda telef\u00f3nica",
Caymans:"Caim\u00e1n","Central African Republic":"Rep\u00fablica Centroafricana","Central Arkansas: Little Rock, Hot Springs":"Arkansas Central: Little Rock, Hot Springs","Central California: Concord, Pleasant Hill, Walnut Creek, Martinez, Livermore, Pleasanton, Dublin":"California Central: Concord, Pleasant Hill, Walnut Creek, Martinez, Livermore, Pleasanton, Dublin","Central California: Fresno, Visalia, Madera, Hanford, Tulare":"California Central: Fresno, Visalia, Madera, Hanford, Tulare","Central California: Oakland, Berkeley, Alameda":"California Central: Oakland, Berkeley, Alameda",
"Central California: Oakland, Fremont, Hayward, Castro Valley, Alameda, Berkeley, Richmond":"California Central: Oakland, Fremont, Hayward, Castro Valley, Alameda, Berkeley, Richmond","Central California: Sacramento, Davis, Roseville":"California Central: Sacramento, Davis, Roseville","Central California: Salinas, Hollister, Monterey, Carmel, Santa Cruz":"California Central: Salinas, Hollister, Monterey, Carmel, Santa Cruz","Central California: San Francisco":"California Central: San Francisco","Central California: San Francisco, Marin County":"California Central: San Francisco, Condado de Marin",
"Central California: San Jose":"California Central: San Jos\u00e9","Central California: San Jose, Los Gatos, Milpitas, Sunnyvale, Cupertino, Gilroy":"California Central: San Jos\u00e9, Los Gatos, Milpitas, Sunnyvale, Cupertino, Gilroy","Central California: San Mateo, Palo Alto, Redwood City, Menlo Park, Mountain View, southern San Francisco suburbs":"California Central: San Mateo, Palo Alto, Redwood City, Menlo Park, Mountain View, suburbios del sur de San Francisco","Central Coastal California: Ventura, San Luis Obispo, Santa Barbara, Oxnard, Simi Valley":"Costa Central de California: Ventura, San Lu\u00eds Obispo, Santa B\u00e1rbara, Oxnard, Simi Valley",
"Central Colorado: Denver, Boulder, Longmont, Aurora":"Colorado Central: Denver, Boulder, Longmont, Aurora","Central Eastern Florida: Orlando, Cocoa Beach, St Cloud":"Centro Este de Florida: Orlando, Cocoa Beach, St Cloud","Central Eastern Florida: Orlando, Florida, St. Cloud":"Centro Este de Florida: Orlando, Florida, St. Cloud","Central Eastern Florida: Vero Beach, Port Saint Lucie, Fort Pierce, Sebastian, Stuart":"Centro Este de Florida: Vero Beach, Port Saint Lucie, Fort Pierce, Sebastian, Stuart",
"Central Eastern Louisiana: Baton Rouge, Donaldsonville, New Roads, White Castle":"Centro Este de Luisiana: Baton Rouge, Donaldsonville, New Roads, White Castle","Central Eastern Tennessee: Knoxville, Gatlinburg, Newport, Jefferson City, Oak Ridge, Rockwood":"Centro Este de Tennessee: Knoxville, Gatlinburg, Newport, Jefferson City, Oak Ridge, Rockwood","Central Florida: Gainesville, Ocala, Inverness, Dunnellon":"Florida Central: Gainesville, Ocala, Inverness, Dunnellon","Central Florida: St Petersburg, Dunedin":"Florida Central: St Petersburg, Dunedin",
"Central Florida: Tampa, Temple Terrace, Plant City, Pasco County, Oldsmar":"Florida Central: Tampa, Temple Terrace, Plant City, Condado de Pasco, Oldsmar","Central Georgia: Macon, Warner Robins, Swainsboro, Wadley, Milledgeville, Perry":"Georgia Central: Macon, Warner Robins, Swainsboro, Wadley, Milledgeville, Perry","Central Illinois: Springfield, Champaign Decatur, Urbana, Lincoln":"Illinois Central: Springfield, Champaign Decatur, Urbana, Lincoln","Central Indiana: Indianapolis, Carmel, Fishers, Noblesville, Greenwood, Mooresville, Beech Grove":"Indiana Central: Indianapolis, Carmel, Fishers, Noblesville, Greenwood, Mooresville, Beech Grove",
"Central Indiana: Lafayette, Marion, Muncie, Richmond":"Indiana Central: Lafayette, Marion, Muncie, Richmond","Central Iowa: Mason City, Oskaloosa, Creston, Pella, Ottumwa, Britt, Clear Lake, Fairfield":"Iowa Central: Mason City, Oskaloosa, Creston, Pella, Ottumwa, Britt, Clear Lake, Fairfield","Central Michigan: Alpena, Mt. Pleasant, Bay City, Saginaw, Midland, Owosso":"Michigan Central: Alpena, Mt. Pleasant, Bay City, Saginaw, Midland, Owosso","Central Minnesota: St. Cloud, Alexandria, Morris, Hutchinson, Sandstone, Appleton":"Minnesota Central: St. Cloud, Alexandria, Morris, Hutchinson, Sandstone, Appleton",
"Central Mississippi: Jackson, Meridian, Natchez, McComb, Hattiesburg":"Misisipi Central: Jackson, Meridian, Natchez, McComb, Hattiesburg","Central North Georgia: Marietta, Cedartown, Gainesville, Atlanta suburbs":"Centro Norte de Georgia: Marietta, Cedartown, Gainesville, suburbios de Atlanta","Central Oklahoma: Oklahoma City, Stillwater, Edmond, Norman, Shawnee, Chickasha":"Oklahoma Central: Oklahoma City, Stillwater, Edmond, Norman, Shawnee, Chickasha","Central Ontario, Canada: Sudbury, Sault Ste. Marie, North Bay, Timmins, Barrie":"Ontario Central, Canad\u00e1: Sudbury, Sault Ste. Marie, North Bay, Timmins, Barrie",
"Central South Carolina: Columbia, Rock Hill, Sumter, Aiken":"Carolina del Sur Central: Columbia, Rock Hill, Sumter, Aiken","Central Southern Quebec, Canada: Laval, Montreal suburbs":"Centro Sur de Qu\u00e9bec, Canad\u00e1: Laval, suburbios de Montreal","Central Texas: Austin, San Marcos, Lampasas, Bastrop, Milam":"Texas Central: Austin, San Marcos, Lampasas, Bastrop, Milam","Central Western Illinois: Peoria, Bloomington-Normal, Moline, Rock Island, Galesburg":"Centro Oeste de Illinois: Peoria, Bloomington-Normal, Moline, Rock Island, Galesburg",
"Central and Southeastern New Jersey: Atlantic City, Trenton":"Centro y Sudeste de Nueva Jersey: Atlantic City, Trenton","Central and Southeastern Ohio: Columbus, Newark, Lancaster, Delaware, Mt. Vernon, Marion, Washington C.H., Marietta, Portsmouth, Cambridge, Zanesville, Coshocton, Stuebenville, Athens":"Centro y sudeste de Ohio: Columbus, Newark, Lancaster, Delaware, Mt. Vernon, Marion, Washington C.H., Marietta, Portsmouth, Cambridge, Zanesville, Coshocton, Stuebenville, Athens","Central and Southeastern Texas: Nacogdoches, Lufkin, Conroe, Huntsville":"Centro y Sudeste de Texas: Nacogdoches, Lufkin, Conroe, Huntsville",
Cologne:"Colonia","Commonwealth of Dominica":"Mancomunidad de Dominica",Comoros:"Comoras","Connecticut: Bridgeport, Danbury, New Haven, Waterbury, Southwestern Connecticut":"Connecticut: Bridgeport, Danbury, New Haven, Waterbury, sudoeste de Connecticut","Connecticut: Bristol, Hartford, Norwich and northern and eastern Connecticut":"Connecticut: Bristol, Hartford, Norwich y norte y este de Connecticut","Cook Islands":"Islas Cook",Cordoba:"C\u00f3rdoba",Croatia:"Croacia",Cyprus:"Chipre","Czech Republic":"Rep\u00fablica Checa",
"D.R.":"Rep\u00fablica Dominicana",DRC:"RDC","Democratic Republic of the Congo":"Rep\u00fablica Democr\u00e1tica del Congo",Denmark:"Dinamarca","Dir. Assistance":"Informaci\u00f3n telef\u00f3nica","Directory Assistance Applications":"Aplicaciones de informaci\u00f3n telef\u00f3nica",Djibouti:"Yibuti","Dominican Republic":"Rep\u00fablica Dominicana",Dresden:"Dresde",Dublin:"Dubl\u00edn","E Arkansas":"Este de Arkansas","E Florida":"Este de Florida","E Iowa":"Este de Iowa","E Kansas":"Este de Kansas",
"E Kentucky":"Este de Kentucky","E Louisiana":"Este de Luisiana","E Maryland":"Este de Maryland","E Massachusetts":"Este de Massachusetts","E Nebraska":"Este de Nebraska","E Ontario":"Este de Ontario","E South Carolina":"Este de Carolina del Sur","E Tennessee":"Este de Tennessee","E Washington":"Este de Washington","E Wisconsin":"Este de Wisconsin","East Central Minnesota: St Paul, Lindstrom, Red Wing, Hastings":"Este Centro de Minnesota: St Paul, Lindstrom, Red Wing, Hastings","East Central Missouri: St. Charles, Chesterfield, Union, De Soto, Troy":"Este Centro de Missouri: St. Charles, Chesterfield, Union, De Soto, Troy",
"East Central New Jersey: New Brunswick, Neptune, Freehold, Lakewood":"Este Centro de Nueva Jersey: New Brunswick, Neptune, Freehold, Lakewood","East Timor":"Timor Oriental","Eastern Arkansas: Texarkana, Jonesboro, Pine Bluff":"Este de Arkansas: Texarkana, Jonesboro, Pine Bluff","Eastern Iowa: Cedar Rapids, Waterloo, Burlington, Iowa City":"Este de Iowa: Cedar Rapids, Waterloo, Burlington, Iowa City","Eastern Iowa: Davenport, Dubuque, Bettendorf, Decorah, Clinton":"Este de Iowa: Davenport, Dubuque, Bettendorf, Decorah, Clinton",
"Eastern Kansas: Kansas City, Overland Park, Paola, Leavenworth":"Este de Kansas: Kansas City, Overland Park, Paola, Leavenworth","Eastern Kentucky: Ashland, Hazard, Somerset, London, Corbin, Pikeville, Maysville":"Este de Kentucky: Ashland, Hazard, Somerset, London, Corbin, Pikeville, Maysville","Eastern Maryland: Baltimore, Annapolis, Salisbury":"Este de Maryland: Baltimore, Annapolis, Salisbury","Eastern Massachusetts: Boston, Cambridge":"Este de Massachusetts: Boston, Cambridge","Eastern Massachusetts: Saugus, Norwood, Waltham, Woburn, Boston suburbs":"Este de Massachusetts: Saugus, Norwood, Waltham, Woburn, suburbios de Boston",
"Eastern Nebraska: Omaha, Lincoln, Norfolk, Superior":"Este de Nebraska: Omaha, Lincoln, Norfolk, Superior","Eastern Ontario, Canada: Ottawa":"Este de Ontario, Canad\u00e1: Ottawa","Eastern Ontario, Canada: Ottawa, Kingston":"Este de Ontario, Canad\u00e1: Ottawa, Kingston","Eastern South Carolina: Florence, Myrtle Beach, Charleston, Isle of Palms, Hilton Head Island":"Este de Carolina del Sur: Florence, Myrtle Beach, Charleston, Isle of Palms, Hilton Head Island","Eastern Tennessee: Bristol, Johnson City, Kingsport; Chattanooga, Cleveland":"Este de Tennessee: Bristol, Johnson City, Kingsport; Chattanooga, Cleveland",
"Eastern Washington: Spokane, the Tri-Cities, Yakima, Wenatchee, Walla Walla, Pullman, Ellensburg":"Este de Washington: Spokane, los Tri-Cities, Yakima, Wenatchee, Walla Walla, Pullman, Ellensburg","Eastern Wisconsin: Appleton, Sheboygan, Oshkosh, Green Bay, Manitowoc, Fond du Lac":"Este de Wisconsin: Appleton, Sheboygan, Oshkosh, Green Bay, Manitowoc, Fond du Lac",Edinburgh:"Edimburgo",Egypt:"Egipto","Emergency Services Number":"N\u00famero de servicios de emergencia","Equatorial Guinea":"Guinea Ecuatorial",
Ethiopia:"Etiop\u00eda","European Telephony":"Telefon\u00eda europea","European Telephony Numbering Space":"Espacio de numeraci\u00f3n telef\u00f3nica europea",FYRoM:"Antigua Rep\u00fablica Yugoslava de Macedonia","Falkland Islands":"Islas Malvinas",Falklands:"Malvinas","Faroe Islands":"Islas Feroe","Federated States of Micronesia":"Estados Federados de Micronesia",Fiji:"Fiyi",Finland:"Finlandia","Finland, \u00c5land Islands":"Finlandia, Islas de \u00c5land","Florida: Miami-Dade County, Florida Keys":"Florida: Condado de Miami-Dade, Cayos de la Florida",
"Former Yugoslav Republic of Macedonia":"Antigua Rep\u00fablica Yugoslava de Macedonia",France:"Francia",Frankfurt:"Fr\u00e1ncfort","Frankfurt am Main, Offenbach am Main":"Fr\u00e1ncfort del Meno, Offenbach del Meno",Freephone:"Tel\u00e9fono gratuito","French Guiana":"Guayana Francesa","French Polynesia":"Polinesia Francesa",Gabon:"Gab\u00f3n",Germany:"Alemania","Global Mobile Satellite System":"Sistema satelital m\u00f3vil global","Global Satellite":"Sat\u00e9lite global",Greece:"Grecia",Greenland:"Groenlandia",
Grenada:"Granada",Guadaloupe:"Guadalupe","Guadaloupe Island":"Isla Guadalupe",Guadeloupe:"Guadalupe","Guadeloupe, Saint Barth\u00e9lemy, Saint Martin":"Guadalupe, San Bartolom\u00e9, San Mart\u00edn","G\u00f6ttingen":"Gotinga",Haiti:"Hait\u00ed",Hamburg:"Hamburgo","Hamburg, Norderstedt, Neu Wulmstorf":"Hamburgo, Norderstedt, Neu Wulmstorf",Hannover:"Han\u00f3ver",Hawaii:"Hawai",Hungary:"Hungr\u00eda","Hyderabad East (Ghatkeswar), Hyderabad":"Hyderabad Este (Ghatkeswar), Hyderabad","Hyderabad West (Shamshabad), Hyderabad":"Hyderabad Oeste (Shamshabad), Hyderabad",
Iceland:"Islandia","Illinois: Aurora, Naperville, western Chicago":"Illinois: Aurora, Naperville, oeste de Chicago","Illinois: Aurora, Naperville, western Chicago suburbs":"Illinois: Aurora, Naperville, suburbios del oeste de Chicago","Illinois: Chicago Heights, Evergreen Park, Tinley Park, Elmwood Park, Cicero, Oak Forest, Oak Park, Berwyn, western Chicago suburbs":"Illinois: Chicago Heights, Evergreen Park, Tinley Park, Elmwood Park, Cicero, Oak Forest, Oak Park, Berwyn, suburbios del oeste de Chicago",
"Inbound Intl.":"Entrantes internacionales","Inbound international calls for carrier-specific services":"Llamadas entrantes internacionales para servicios espec\u00edficos de una compa\u00f1\u00eda telef\u00f3nica","Indiana: Southern Indiana, including Bloomington, Evansville, Jeffersonville, New Albany, and Terre Haute).":"Indiana: Sur de Indiana, incluidos Bloomington, Evansville, Jeffersonville, New Albany y Terre Haute).","International National Rate Service":"Servicio de tarifa nacional internacional",
"International Networks":"Redes internacionales","International Networks (country code)":"Redes internacionales (c\u00f3digo de pa\u00eds)","International Premium Rate Service":"Servicio de tarifa alta internacional",Iran:"Ir\u00e1n",Iraq:"Irak",Ireland:"Irlanda","Islands of R\u00e9union and Mayotte":"Islas de Reuni\u00f3n y Mayotte","Israel, Palestinian Authority":"Israel, Autoridad Palestina",Italy:"Italia","Italy, Vatican City":"Italia, Ciudad del Vaticano",Japan:"Jap\u00f3n",Jordan:"Jordania",
"Kentucky: west of the Pennyrile Parkway, including Fort Campbell, Henderson, Hopkinsville, Madisonville, Murray, and Paducah":"Kentucky: Oeste de la Pennyrile Parkway, incluidos Fort Campbell, Henderson, Hopkinsville, Madisonville, Murray y Paducah",Kenya:"Kenia",Kolkata:"Calcuta","Kolkata, Kolkata":"Calcuta, Calcuta",Konstanz:"Constanza","Konstanz, Reichenau":"Constanza, Reichenau",Krakow:"Cracovia",Kyrgyzstan:"Kirguist\u00e1n","LD Carrier":"Compa\u00f1\u00eda telef\u00f3nica de larga distancia",
Latvia:"Letonia",Lebanon:"L\u00edbano",Libya:"Libia",Lithuania:"Lituania",London:"Londres","Long Distance Carrier Use":"Uso de compa\u00f1\u00eda telef\u00f3nica de larga distancia",Louisiana:"Luisiana","Louisiana: New Orleans, Metairie, Kenner":"Luisiana: Nueva Orle\u00e1ns, Metairie, Kenner",Luxembourg:"Luxemburgo",Malaga:"M\u00e1laga",Malaysia:"Malasia",Maldives:"Maldivas",Mali:"Mal\u00ed","Manitoba, Canada":"Manitoba, Canad\u00e1","Marshall Islands":"Islas Marshall",Martinique:"Martinica","Martinique Island":"Isla Martinica",
Mauritius:"Mauricio",Mexico:"M\u00e9xico","Mexico City":"Ciudad de M\u00e9xico","Mexico City, Federal District":"Ciudad de M\u00e9xico, Distrito Federal","Michigan: Oakland County":"Michigan: Condado de Oakland",'Michigan: Port Huron, Flint, Lapeer, and Michigan "Thumb"':'Michigan: Port Huron, Flint, Lapeer y Michigan "Thumb"',"Michigan: Warren, Sterling Heights, Macomb County":"Michigan: Warren, Sterling Heights, Condado Macomb","Minnesota: Maple Grove, Monticello, Elk River, Fridley, Blaine, northwest Minneapolis":"Minnesota: Maple Grove, Monticello, Elk River, Fridley, Blaine, noroeste de Minneapolis",
Mississippi:"Misisipi","Missouri: Columbia, Jefferson City, Hannibal, Cape Girardeau, Poplar Bluff, Farmington, Park Hills, Lake Ozark and eastern Missouri excluding St. Louis":"Missouri: Columbia, Jefferson City, Hannibal, Cape Girardeau, Poplar Bluff, Farmington, Park Hills, Lake Ozark y Este de Missouri, excluido St. Louis","Mobile Number":"N\u00famero de m\u00f3vil",Moldova:"Moldavia",Monaco:"M\u00f3naco",Morocco:"Marruecos","Morocco, Western Sahara":"Marruecos, Sahara Occidental",Munich:"M\u00fanich",
"N Alberta":"Norte de Alberta","N California":"Norte de California","N Georgia":"Norte de Georgia","N Illinois":"Norte de Illinois","N Kansas":"Norte de Kansas","N Kentucky":"Norte de Kentucky","N Louisiana":"Norte de Luisiana","N Michigan":"Norte de Michigan","N Minnesota":"Norte de Minnesota","N Mississippi":"Norte de Misisipi","N Ohio":"Norte de Ohio","N Texas":"Norte de Texas","N Virginia":"Norte de Virginia","N Wisconsin":"Norte de Wisconsin","NE Alabama":"Noreste de Alabama","NE California":"Noreste de California",
"NE Florida":"Noreste de Florida","NE Illinois":"Noreste de Illinois","NE Indiana":"Noreste de Indiana","NE Massachusetts":"Noreste de Massachusetts","NE New York":"Noreste de Nueva York","NE North Carolina":"Noreste de Carolina del Norte","NE Ohio":"Noreste de Ohio","NE Oklahoma":"Noreste de Oklahoma","NE Pennsylvania":"Noreste de Pensilvania","NE Texas":"Noreste de Texas","NW Arizona":"Noroeste de Arizona","NW Arkansas":"Noroeste de Arkansas","NW California":"Noroeste de California","NW Colorado":"Noroeste de Colorado",
"NW Florida":"Noroeste de Florida","NW Indiana":"Noroeste de Indiana","NW Michigan":"Noroeste de Michigan","NW New Jersey":"Noroeste de Nueva Jersey","NW New Mexico":"Noroeste de Nuevo M\u00e9xico","NW Ohio":"Noroeste de Ohio","NW Ontario":"Noroeste de Ontario","NW Oregon":"Noroeste de Oreg\u00f3n","NW Pennsylvania":"Noroeste de Pensilvania","National Rate":"Tarifa nacional",Netherlands:"Pa\u00edses Bajos","Netherlands Antilles":"Antillas Holandesas","Nevada: Clark County, Las Vegas, Henderson, Boulder City":"Nevada: Condado de Clark, Las Vegas, Henderson, Boulder City",
"New Brunswick":"Nuevo Brunswick","New Brunswick, Canada":"Nuevo Brunswick, Canad\u00e1","New Caledonia":"Nueva Caledonia","New Delhi":"Nueva Delhi","New Delhi, New Delhi":"Nueva Delhi, Nueva Delhi","New Hampshire":"Nuevo Hampshire","New Jersey":"Nueva Jersey","New Jersey: Hackensack, Jersey City, Hoboken, Bayonne, Ridgewood, Union City, Teaneck, New Milford, and northeast New Jersey":"Nueva Jersey: Hackensack, Jersey City, Hoboken, Bayonne, Ridgewood, Union City, Teaneck, New Milford y noreste de Nueva Jersey",
"New Mexico":"Nuevo M\u00e9xico","New Mexico: Las Cruces, Roswell, Carlsbad, Taos":"Nuevo M\u00e9xico: Las Cruces, Roswell, Carlsbad, Taos","New York":"Nueva York","New York: Binghamton, Elmira, Bath, Norwich, Oneonta, Ithaca":"Nueva York: Binghamton, Elmira, Bath, Norwich, Oneonta, Ithaca","New York: Manhattan":"Nueva York: Manhattan","New York: Manhattan except for Marble Hill":"Nueva York: Manhattan excepto Marble Hill","New York: Nassau County, Hempstead, Elmont":"Nueva York: Condado de Nassau, Hempstead, Elmont",
"New York: New York City":"Nueva York: Ciudad de Nueva York","New York: New York City, Marble Hill":"Nueva York: Ciudad de Nueva York, Marble Hill","New York: Suffolk County":"Nueva York: Condado de Suffolk",'New York: The "Outer Boroughs"':'Nueva York: "Outer Boroughs"',"New York: Westchester County":"Nueva York: Condado de Westchester","New Zealand":"Nueva Zelanda",Newfoundland:"Terranova","Newfoundland and Labrador, Canada: St. John's":"Terranova y Labrador, Canad\u00e1: St. John's",Niger:"N\u00edger",
"Norfolk Island":"Isla Norfolk","Norfolk Island, Australian Antarctic Territory":"Isla Norfolk, Territorio Ant\u00e1rtico Australiano","North America":"Norteam\u00e9rica","North America and the Caribbean Islands":"Norteam\u00e9rica y las islas del Caribe","North Carolina":"Carolina del Norte","North Carolina: Greensboro, Winston-Salem, Wilkesboro, Roxboro, and northwest North Carolina":"Carolina del Norte: Greensboro, Winston-Salem, Wilkesboro, Roxboro y noroeste de Carolina del Norte","North Central Indiana: South Bend, Logansport, Elkhart, Warsaw, Nappanee":"Norte Centro de Indiana: South Bend, Logansport, Elkhart, Warsaw, Nappanee",
"North Central Iowa: Des Moines, Ames, Fort Dodge, Jefferson, Algona, Indianola":"Norte Centro de Iowa: Des Moines, Ames, Fort Dodge, Jefferson, Algona, Indianola","North Central Kentucky: Lexington, Richmond, Danville, Covington, Florence, Mount Sterling":"Norte Centro de Kentucky: Lexington, Richmond, Danville, Covington, Florence, Mount Sterling","North Central Missouri: Sedalia, Kirksville, Macon, Marshall, Trenton, Maryville, Bethany":"Norte Centro de Missouri: Sedalia, Kirksville, Macon, Marshall, Trenton, Maryville, Bethany",
"North Central New York: Syracuse, New York, Utica, Watertown":"Norte Centro de Nueva York: Syracuse, Nueva York, Utica, Watertown","North Central North Carolina: Raleigh, Durham, Chapel Hill, Oxford, Goldsboro":"Norte Centro de Carolina del Norte: Raleigh, Durham, Chapel Hill, Oxford, Goldsboro","North Central Tennessee: Nashville, Murfreesboro, Springfield, Lebanon, Dickson":"Norte Centro de Tennessee: Nashville, Murfreesboro, Springfield, Lebanon, Dickson","North Central Virginia: Roanoke, Fredericksburg, Blacksburg, Harrisonburg, Winchester":"Norte Centro de Virginia: Roanoke, Fredericksburg, Blacksburg, Harrisonburg, Winchester",
"North Dakota":"Dakota del Norte","North Korea":"Corea del Norte","Northeast France":"Noreste de Francia","Northeastern Florida: Jacksonville, St. Augustine, Starke, Green Cove Springs":"Noreste de Florida: Jacksonville, St. Augustine, Starke, Green Cove Springs","Northeastern Illinois: Arlington Heights, Buffalo Grove, Wauconda, Waukegan, Des Plaines, Chicago suburbs":"Noreste de Illinois: Arlington Heights, Buffalo Grove, Wauconda, Waukegan, Des Plaines, suburbios de Chicago","Northeastern Indiana: Fort Wayne, New Haven, Decatur, Angola, Huntington, Wabash":"Noreste de Indiana: Fort Wayne, New Haven, Decatur, Angola, Huntington, Wabash",
"Northeastern Massachusetts: Fitchburg, Peabody":"Noreste de Massachusetts: Fitchburg, Peabody","Northeastern New York: Albany, Schenectady, Plattsburgh, Saranac Lake":"Noreste de Nueva York: Albany, Schenectady, Plattsburgh, Saranac Lake","Northeastern North Carolina: Greenville, Kitty Hawk, Rocky Mount":"Noreste de Carolina del Norte: Greenville, Kitty Hawk, Rocky Mount","Northeastern Ohio: Akron, Canton, Youngstown, Warren":"Noreste de Ohio: Akron, Canton, Youngstown, Warren","Northeastern Oklahoma: Tulsa, Bartlesville, McAlester, Muskogee, Henryetta":"Noreste de Oklahoma: Tulsa, Bartlesville, McAlester, Muskogee, Henryetta",
"Northeastern Pennsylvania: Scranton, Williamsport, Wilkes-Barre, Nanticoke, Hazleton, Pottsville, Sunbury, Danville, Bloomsburg, Stroudsburg":"Noreste de Pensilvania: Scranton, Williamsport, Wilkes-Barre, Nanticoke, Hazleton, Pottsville, Sunbury, Danville, Bloomsburg, Stroudsburg","Northeastern Texas: Tyler, Sherman, Longview, Marshall, Palestine, Jacksonville, Carthage":"Noreste de Texas: Tyler, Sherman, Longview, Marshall, Palestine, Jacksonville, Carthage","Northern Alberta, Canada: Edmonton, Jasper, Grande Prairie, Peace River":"Norte de Alberta, Canad\u00e1: Edmonton, Jasper, Grande Prairie, Peace River",
"Northern California coast":"Costa norte de California","Northern Illinois: Rockford, La Salle, De Kalb, Freeport, Joliet, Plainfield, Crystal Lake":"Norte de Illinois: Rockford, La Salle, De Kalb, Freeport, Joliet, Plainfield, Crystal Lake","Northern Ireland":"Irlanda del Norte","Northern Kansas: Colby, Topeka, Salina, Manhattan, Lawrence":"Norte de Kansas: Colby, Topeka, Salina, Manhattan, Lawrence","Northern Kentucky: Louisville, Frankfort, Shelbyville, Bardstown":"Norte de Kentucky: Louisville, Frankfort, Shelbyville, Bardstown",
"Northern Louisiana: Shreveport, Monroe, Alexandria, Fisher, Tallulah":"Norte de Luisiana: Shreveport, Monroe, Alexandria, Fisher, Tallulah","Northern Mariana Islands":"Islas Marianas del Norte","Northern Michigan: Escanaba, Houghton, Iron Mountain, Marquette, Menominee, Sault Ste. Marie, Upper Peninsula":"Norte de Michigan: Escanaba, Houghton, Iron Mountain, Marquette, Menominee, Sault Ste. Marie, Upper Peninsula","Northern Minnesota: Duluth, Thief River Falls, Brainerd, International Falls":"Norte de Minnesota: Duluth, Thief River Falls, Brainerd, International Falls",
"Northern Mississippi: Greenville, Tupelo, Winona, Columbus, Holly Springs":"Norte de Misisipi: Greenville, Tupelo, Winona, Columbus, Holly Springs","Northern Ohio: Cleveland suburbs, Elyria, Lorain, Oberlin, Ashtabula":"Norte de Ohio: suburbios de Cleveland, Elyria, Lorain, Oberlin, Ashtabula","Northern Texas: Vernon, Wichita Falls, Denton, Gainesville, Decatur":"Norte de Texas: Vernon, Wichita Falls, Denton, Gainesville, Decatur","Northern Virginia: Alexandria, Arlington, Fairfax, Prince William, eastern Loudoun counties":"Norte de Virginia: Alexandria, Arlington, Fairfax, Prince William, condados del este de Loudoun",
"Northern Wisconsin: Wausau, Eau Claire, Rice Lake, Rhinelander, Ashland":"Norte de Wisconsin: Wausau, Eau Claire, Rice Lake, Rhinelander, Ashland","Northern and Eastern Alabama: Huntsville, Decatur, Cullman, Gadsden, Florence, Anniston":"Norte y Este de Alabama: Huntsville, Decatur, Cullman, Gadsden, Florence, Anniston","Northern and Eastern Florida: Daytona Beach, Lake City, Live Oak, Crescent City":"Norte y Este de Florida: Daytona Beach, Lake City, Live Oak, Crescent City","Northern and Western Arizona: Flagstaff, Kingman, Prescott, Yuma":"Norte y Oeste de Arizona: Flagstaff, Kingman, Prescott, Yuma",
"Northern and Western Colorado: Aspen, Durango, Grand Junction, Fort Collins":"Norte y Oeste de Colorado: Aspen, Durango, Grand Junction, Fort Collins","Northerneastern California: Redding, Chico, Davis, Placerville, Lake Tahoe, Susanville, Alturas, Truckee":"Noreste de California: Redding, Chico, Davis, Placerville, Lake Tahoe, Susanville, Alturas, Truckee","Northwest California":"Noroeste de California","Northwest France":"Noroeste de Francia","Northwest Indiana: Gary, Chesterton, Crown Point, East Chicago, Hammond, Hobart, Merrillville, Michigan City, Portage, Valparaiso":"Noroeste de Indiana: Gary, Chesterton, Crown Point, East Chicago, Hammond, Hobart, Merrillville, Michigan City, Portage, Valparaiso",
"Northwestern Arkansas: Fort Smith, Fayetteville":"Noroeste de Arkansas: Fort Smith, Fayetteville","Northwestern California: Napa, Vallejo, Santa Rosa, Ukiah, Crescent City, Eureka, Ukiah":"Noroeste de California: Napa, Vallejo, Santa Rosa, Ukiah, Crescent City, Eureka, Ukiah","Northwestern Florida: Pensacola, Tallahassee, Panama City, the Florida panhandle":"Noroeste de Florida: Pensacola, Tallahassee, Panama City, el panhandle de Florida","Northwestern Michigan: Muskegon, Traverse City, Ludington, Petoskey":"Noroeste de Michigan: Muskegon, Traverse City, Ludington, Petoskey",
"Northwestern New Jersey: Newark, Paterson":"Noroeste de Nueva Jersey: Newark, Paterson","Northwestern New Mexico: Albuquerque, Santa Fe, Farmington, Gallup":"Noroeste de Nuevo M\u00e9xico: Albuquerque, Santa Fe, Farmington, Gallup","Northwestern Ohio: Toledo, Sylvania, Mansfield, Lima, Findlay, Bryan, Sandusky, Bowling Green":"Noroeste de Ohio: Toledo, Sylvania, Mansfield, Lima, Findlay, Bryan, Sandusky, Bowling Green","Northwestern Ontario, Canada: Thunder Bay, Kenora, Dryden, Greenstone":"Noroeste de Ontario, Canad\u00e1: Thunder Bay, Kenora, Dryden, Greenstone",
"Northwestern Oregon: Portland, Salem, Hillsboro, Beaverton":"Noroeste de Oreg\u00f3n: Portland, Salem, Hillsboro, Beaverton","Northwestern Oregon: Portland, Salem, Hillsboro, St. Helens, Tillamook, Astoria":"Noroeste de Oreg\u00f3n: Portland, Salem, Hillsboro, St. Helens, Tillamook, Astoria","Northwestern and Central Pennsylvania: Erie, Warren, State College, Altoona, Johnstown, Meyersdale, Johnsonburg, St. Marys, Ridgway, DuBois, Emporium":"Noroeste y Centro de Pensilvania: Erie, Warren, State College, Altoona, Johnstown, Meyersdale, Johnsonburg, St. Marys, Ridgway, DuBois, Emporium",
Norway:"Noruega","Norway, Svalbard and Jan Mayen":"Noruega, Svalbard y Jan Mayen","Nova Scotia and Prince Edward Island, Canada":"Nueva Escocia e Isla del Pr\u00edncipe Eduardo, Canad\u00e1","Nova Scotia/PEI":"Nueva Escocia / Isla del Pr\u00edncipe Eduardo","N\u00fcrnberg":"N\u00faremberg","N\u00fcrnberg/F\u00fcrth":"N\u00faremberg/F\u00fcrth",Oman:"Om\u00e1n","Ontario, Canada":"Ontario, Canad\u00e1",Oregon:"Oreg\u00f3n","Oregon: Eugene, Medford, Bend, Pendleton, Corvallis, Ontario, Burns":"Oreg\u00f3n: Eugene, Medford, Bend, Pendleton, Corvallis, Ontario, Burns",
Pakistan:"Pakist\u00e1n",Palau:"Palaos","Palestinian Authority":"Autoridad Palestina",Panama:"Panam\u00e1","Papua New Guinea":"Papua Nueva Guinea",Paris:"Par\u00eds","Paris (Ile-de-France area)":"Par\u00eds (\u00e1rea de Ile-de-France)",Pennsylvania:"Pensilvania","Pennsylvania: Philadelphia":"Pensilvania: Filadelfia","People's Republic of China":"Rep\u00fablica Popular China","Personal Comm.":"Comunicaciones personales","Personal Comm. Services":"Servicios de comunicaciones personales","Personal Communications Services":"Servicios de comunicaciones personales",
Peru:"Per\u00fa",Philippines:"Filipinas",Poland:"Polonia","Premium Rate":"Tarifa alta","Premium-rate":"Tarifa alta","Premium-rate Telephone Service":"Servicios telef\u00f3nicos de tarifa alta",Quebec:"Qu\u00e9bec","Quebec, Canada":"Qu\u00e9bec, Canad\u00e1","Quebec, Canada: Montreal, \u00cele Perrot, \u00cele Bizard":"Qu\u00e9bec, Canad\u00e1 Montreal, \u00cele Perrot, \u00cele Bizard","Quebec, Canada: Quebec City, Saguenay, Gasp\u00e9 Peninsula, C\u00f4te-Nord, Chibougamau, St-Georges":"Qu\u00e9bec, Canad\u00e1 Ciudad de Quebec, Saguenay, Pen\u00ednsula de Gaspesia, C\u00f4te-Nord, Chibougamau, St-Georges",
"Quebec, Canada: Sherbrooke, Trois-Rivieres, Abitibi-T\u00e9miscamingue, Mauricie, Outaouais, Estrie":"Qu\u00e9bec, Canad\u00e1 Sherbrooke, Trois-Rivieres, Abitibi-T\u00e9miscamingue, Mauricie, Outaouais, Estrie","Republic of China":"Rep\u00fablica de China","Republic of Congo":"Rep\u00fablica del Congo","Republic of Ireland":"Rep\u00fablica de Irlanda",Romania:"Rumania",Russia:"Rusia","Russia, Kazakhstan":"Rusia, Kazajst\u00e1n",Rwanda:"Ruanda","R\u00e9union":"Reuni\u00f3n","R\u00e9union, Mayotte":"Reuni\u00f3n, Mayotte",
"S Alberta":"Sur de Alberta","S Arkansas":"Sur de Arkansas","S California":"Sur de California","S Florida":"Sur de Florida","S Illinois":"Sur de Illinois","S Kansas":"Sur de Kansas","S Minnesota":"Sur de Minnesota","S Mississippi":"Sur de Misisipi","S Quebec":"Sur de Qu\u00e9bec","S Texas":"Sur de Texas","S Virginia":"Sur de Virginia","SE Alabama":"Sudeste de Alabama","SE Arizona":"Sudeste de Arizona","SE California":"Sudeste de California","SE Colorado":"Sudeste de Colorado","SE Georgia":"Sudeste de Georgia",
"SE Louisiana":"Sudeste de Luisiana","SE Massachusetts":"Sudeste de Massachusetts","SE New Jersey":"Sudeste de Nueva Jersey:","SE New York":"Sudeste de Nueva York","SE North Carolina":"Sudeste de Carolina del Norte:","SE Ohio":"Sudeste de Ohio","SE Pennsylvania":"Sudeste de Pensilvania","SE Texas":"Sudeste de Texas","SE Wisconsin":"Sudeste de Wisconsin","SW Alabama":"Sudoeste de Alabama","SW Florida":"Sudoeste de Florida","SW Georgia":"Sudoeste de Georgia","SW Louisiana":"Sudoeste de Luisiana","SW Michigan":"Sudoeste de Michigan",
"SW Missouri":"Sudoeste de Missouri","SW New Jersey":"Sudoeste de Nueva Jersey","SW Ohio":"Sudoeste de Ohio","SW Oklahoma":"Sudoeste de Oklahoma","SW Ontario":"Sudoeste de Ontario","SW Pennsylvania":"Sudoeste de Pensilvania","SW Tennessee":"Sudoeste de Tennessee","SW Texas":"Sudoeste de Texas","SW Virginia":"Sudoeste de Virginia","SW Wisconsin":"Sudoeste de Wisconsin","Saint Helena":"Santa Helena","Saint Helena, Tristan da Cunha":"Santa Helena, Trist\u00e1n de Acu\u00f1a","Saint Kitts and Nevis":"San Crist\u00f3bal y Nieves",
"Saint Lucia":"Santa Luc\u00eda","Saint Pierre and Miquelon":"San Pedro y Miquel\u00f3n","Saint Pierre and Miquelon Islands":"Islas San Pedro y Miquel\u00f3n","Saint Vincent and the Grenadines":"San Vicente y las Granadinas","Saskatchewan, Canada":"Saskatchewan, Canad\u00e1","Saudi Arabia":"Arabia Saudita","Service Number":"N\u00famero de servicio",Seville:"Sevilla",Shanghai:"Shangh\u00e1i","Shanghai \u4e0a\u6d77\u5e02":"Shangh\u00e1i \u4e0a\u6d77\u5e02","Shared Cost":"Costo compartido","Shared Cost Service":"Servicio de costo compartido",
"Sierra Leone":"Sierra Leona",Singapore:"Singapur",Slovakia:"Eslovaquia",Slovenia:"Eslovenia","Solomon Islands":"Islas Salom\u00f3n","Somalia, Somaliland":"Somalia, Somalilandia","South Africa":"Sud\u00e1frica","South Carolina":"Carolina del Sur","South Carolina: Greenville, Spartanburg, Anderson, Upstate South Carolina":"Carolina del Sur: Greenville, Spartanburg, Anderson, zona norte de South Carolina","South Central California: Bakersfield, Lancaster, Santa Clarita, Palmdale, Mojave":"Sur Centro de California: Bakersfield, Lancaster, Santa Clarita, Palmdale, Mojave",
"South Central Florida: Auburndale, Lakeland, Avon Park, Clewiston, Bartow, Sebring, Winter Haven":"Sur Centro de Florida: Auburndale, Lakeland, Avon Park, Clewiston, Bartow, Sebring, Winter Haven","South Central Michigan: Lansing, Jackson, Charlotte, Coldwater, Howell, Deerfield, Addison":"Sur Centro de Michigan: Lansing, Jackson, Charlotte, Coldwater, Howell, Deerfield, Addison","South Central North Carolina: Charlotte, Gastonia, Concord, Salisbury":"Sur Centro de Carolina del Norte: Charlotte, Gastonia, Concord, Salisbury",
"South Central Pennsylvania: Harrisburg, Gettysburg, Lancaster, York":"Sur Centro de Pensilvania: Harrisburg, Gettysburg, Lancaster, York","South Dakota":"Dakota del Sur","South Korea":"Corea del Sur","Southeast France":"Sudeste de Francia","Southeastern Alabama: Montgomery, Auburn, Opelika, Dothan, Selma":"Sudeste de Alabama: Montgomery, Auburn, Opelika, Dothan, Selma","Southeastern Arizona: Tucson, Nogales":"Sudeste de Arizona: Tucson, Nogales","Southeastern California: Bishop, Ridgecrest, Barstow, Palm Springs, Indio, Imperial County":"Sudeste de California: Bishop, Ridgecrest, Barstow, Palm Springs, Indio, Condado de Imperial",
"Southeastern Colorado: Colorado Springs, Pueblo, Leadville, Trinidad, Rocky Ford, La Junta":"Sudeste de Colorado: Colorado Springs, Pueblo, Leadville, Trinidad, Rocky Ford, La Junta","Southeastern Georgia: Savannah, Statesboro, Vidalia, Waycross, Brunswick, Douglas":"Sudeste de Georgia: Savannah, Statesboro, Vidalia, Waycross, Brunswick, Douglas","Southeastern Louisiana: Houma, Slidell":"Sudeste de Luisiana: Houma, Slidell","Southeastern Massachusetts: Worcester, New Bedford":"Sudeste de Massachusetts: Worcester, New Bedford",
"Southeastern New York: Rockland, Poughkeepsie, Middletown, West Point, Newburgh, Catskills, Margaretville":"Sudeste de Nueva York: Rockland, Poughkeepsie, Middletown, West Point, Newburgh, Catskills, Margaretville","Southeastern North Carolina: Fayetteville, Wilmington, Jacksonville, Lumberton":"Sudeste de Carolina del Norte: Fayetteville, Wilmington, Jacksonville, Lumberton","Southeastern Pennsylvania: Allentown, Reading, Norristown, Chester":"Sudeste de Pensilvania: Allentown, Reading, Norristown, Chester",
"Southeastern Texas: Beaumont, Galveston, Port Arthur, Jasper":"Sudeste de Texas: Beaumont, Galveston, Port Arthur, Jasper","Southeastern Texas: Wharton, Bryan, Bay City, College Station, Lake Jackson, La Grange":"Sudeste de Texas: Wharton, Bryan, Bay City, College Station, Lake Jackson, La Grange","Southeastern Wisconsin: Racine, Kenosha, Menomonee Falls, Waukesha":"Sudeste de Wisconsin:  Racine, Kenosha, Menomonee Falls, Waukesha","Southern Alberta, Canada: Calgary, Banff, Red Deer, Medicine Hat, Lethbridge, Brooks":"Sur de Alberta, Canad\u00e1: Calgary, Banff, Red Deer, Medicine Hat, Lethbridge, Brooks",
"Southern California: Anaheim, Santa Ana, Huntington Beach, Orange, Garden Grove, Fullerton, Orange County":"Sur de California: Anaheim, Santa Ana, Huntington Beach, Orange, Garden Grove, Fullerton, Condado de Orange","Southern California: Central Los Angeles":"Sur de California: Centro de Los \u00c1ngeles","Southern California: Colton, Grand Terrace, Ontario, Claremont, Pomona, Chino, Redlands, Fontana":"Sur de California: Colton, Grand Terrace, Ontario, Claremont, Pomona, Chino, Redlands, Fontana",
"Southern California: Corona, Riverside, Temescal Canyon, Lake Elsinore, Mira Loma, Moreno Valley, Perris, Sun City, Murrieta, Temecula, Hemet, Winchester, Lakeview, Nuevo, Beaumont, Banning, Idyllwild":"Sur de California: Corona, Riverside, Temescal Canyon, Lake Elsinore, Mira Loma, Moreno Valley, Perris, Sun City, Murrieta, Temecula, Hemet, Winchester, Lakeview, Nuevo, Beaumont, Banning, Idyllwild","Southern California: Del Mar, La Jolla, San Diego":"Sur de California: Del Mar, La Jolla, San Diego",
"Southern California: Laguna Niguel, Irvine, Lake Forest, Newport Beach, Corona Del Mar":"Sur de California: Laguna Niguel, Irvine, Lake Forest, Newport Beach, Corona Del Mar","Southern California: Long Beach, Whittier, Norwalk, La Habra Lakewood, Bellflower":"Sur de California: Long Beach, Whittier, Norwalk, La Habra Lakewood, Bellflower","Southern California: Los Angeles, West LA, San Fernando Valley, Florence, Montebello":"Sur de California: Los \u00c1ngeles, West LA, Valle de San Fernando, Florence, Montebello",
"Southern California: Pasadena, West Covina, El Monte, La Puente, Arcadia, San Gabriel Valley, eastern Los Angeles suburbs":"Sur de California: Pasadena, West Covina, El Monte, La Puente, Arcadia, Valle de San Gabriel, suburbios del este de Los \u00c1ngeles","Southern California: San Diego":"Sur de California: San Diego","Southern California: San Diego, Chula Vista":"Sur de California: San Diego, Chula Vista","Southern California: San Fernando Valley":"Sur de California: Valle de San Fernando","Southern California: San Fernando Valley, including Glendale, San Fernando, Northridge, Burbank, Los Angeles suburbs":"Sur de California: Valle de San Fernando, incluidos Glendale, San Fernando, Northridge, Burbank, suburbios de Los \u00c1ngeles",
"Southern California: Santa Monica, Malibu, Torrance, South Bay, Beverly Hills, Catalina Island, the Los Angeles Westside":"Sur de California: Santa M\u00f3nica, Malibu, Torrance, South Bay, Beverly Hills, Isla Catalina, Westside de Los \u00c1ngeles","Southern Florida: Fort Lauderdale, Hollywood, Coral Springs":"Sur de Florida: Fort Lauderdale, Hollywood, Coral Springs","Southern Florida: Miami-Dade, Florida Keys, Miami, Homestead, Coral Gables, Key West":"Sur de Florida: Miami-Dade, Cayos de la Florida, Miami, Homestead, Coral Gables, Cayo Hueso",
"Southern Illinois: Alton, Belleville, Carbondale, Centralia, East Saint Louis, Mount Vernon":"Sur de Illinois: Alton, Belleville, Carbondale, Centralia, East Saint Louis, Mount Vernon","Southern Kansas: Dodge City, Emporia, Geat Bend, Parsons, Liberal":"Sur de Kansas: Dodge City, Emporia, Geat Bend, Parsons, Liberal","Southern Minnesota: Rochester, Mankato, Worthington, Marshall":"Sur de Minnesota: Rochester, Mankato, Worthington, Marshall","Southern Mississippi: Gulfport, Biloxi, Pascagoula, Bay St Louis":"Sur de Misisipi: Gulfport, Biloxi, Pascagoula, Bay St Louis",
"Southern Texas: Laredo, Brownsville, McAllen, Harlingen":"Sur de Texas: Laredo, Brownsville, McAllen, Harlingen","Southern Virginia: Charlottesville, Lynchburg, Danville, Farmville, South Hill":"Sur de Virginia: Charlottesville, Lynchburg, Danville, Farmville, South Hill","Southern and Eastern Arkansas: Texarkana, Jonesboro, Pine Bluff":"Sur y Este de Arkansas: Texarkana, Jonesboro, Pine Bluff","Southern and Western Oklahoma: Enid, Lawton, Ponca City, Guymon, Ardmore, Sayre, Elk City":"Sur y Oeste de Oklahoma: Enid, Lawton, Ponca City, Guymon, Ardmore, Sayre, Elk City",
"Southwest France":"Sudoeste de Francia","Southwestern Alabama: Mobile, Jackson, Brewton":"Sudoeste de Alabama: Mobile, Jackson, Brewton","Southwestern Florida: Lee, Collier, and Monroe Counties; Cape Coral, Fort Myers, Naples, Everglades":"Sudoeste de Florida: Condados Lee, Collier y Monroe; Cabo Coral, Fort Myers, Naples, Everglades","Southwestern Florida: Tampa Bay,Manatee County, Sarasota County, Charlotte County; Bradenton, Port Charlotte, Sarasota, Punta Gorda":"Sudoeste de Florida: Tampa Bay, Condado de Manatee, Condado de Sarasota, Condado de Charlotte; Bradenton, Port Charlotte, Sarasota, Punta Gorda",
"Southwestern Georgia: Albany, Valdosta, Bainbridge, Americus, Fitzgerald":"Sudoeste de Georgia: Albany, Valdosta, Bainbridge, Americus, Fitzgerald","Southwestern Louisiana: Lafayette, Lake Charles, Leesville, New Iberia, Opelousas, De Ridder":"Sudoeste de Luisiana: Lafayette, Lake Charles, Leesville, New Iberia, Opelousas, De Ridder","Southwestern Michigan: Ann Arbor, Canton, Plymouth, Monroe, Wayne, Ypsilanti, Romulus, Detroit suburbs":"Sudoeste de Michigan: Ann Arbor, Canton, Plymouth, Monroe, Wayne, Ypsilanti, Romulus, suburbios de Detroit",
"Southwestern Michigan: Battle Creek, Kalamazoo, Benton Harbor, Allegan, Hastings, St Joseph":"Sudoeste de Michigan: Battle Creek, Kalamazoo, Benton Harbor, Allegan, Hastings, St Joseph","Southwestern Michigan: Grand Rapids, Holland, Greenville, Grand Haven, Zeeland, Ionia":"Sudoeste de Michigan: Grand Rapids, Holland, Greenville, Grand Haven, Zeeland, Ionia","Southwestern Missouri: Springfield, Joplin, Branson, West Plains, Lamar, Lebanon":"Sudoeste de Missouri: Springfield, Joplin, Branson, West Plains, Lamar, Lebanon",
"Southwestern New Jersey: Vineland, Cherry Hill, Camden, Millville":"Sudoeste de Nueva Jersey: Vineland, Cherry Hill, Camden, Millville","Southwestern Ohio":"Sudoeste de Ohio","Southwestern Ohio: Cincinnati, Middletown, Hamilton, Norwood, Lebanon":"Sudoeste de Ohio: Cincinnati, Middletown, Hamilton, Norwood, Lebanon","Southwestern Ohio: Marysville, Springfield, Dayton, Hillsboro":"Sudoeste de Ohio: Marysville, Springfield, Dayton, Hillsboro","Southwestern Ontario, Canada: London, Windsor, Kitchener-Waterloo, Cambridge":"Sudoeste de Ontario, Canad\u00e1: London, Windsor, Kitchener-Waterloo, Cambridge",
"Southwestern Ontario, Canada: Niagara Region, Hamilton, Toronto suburbs":"Sudoeste de Ontario, Canad\u00e1: Regi\u00f3n del Ni\u00e1gara, Hamilton, suburbios de Toronto","Southwestern Pennsylvania: New Castle, Washington, Indiana, Uniontown":"Sudoeste de Pensilvania: New Castle, Washington, Indiana, Uniontown","Southwestern Tennessee: Memphis, Covington, Somerville":"Sudoeste de Tennessee: Memphis, Covington, Somerville","Southwestern Texas: Del Rio, Uvalde, New Braunfels, Kerrville, Eagle Pass":"Sudeste de Texas: Del Rio, Uvalde, New Braunfels, Kerrville, Eagle Pass",
"Southwestern Virginia: Bristol, Abingdon, Wytheville, Martinsville, Bluefield":"Sudoeste de Virginia: Bristol, Abingdon, Wytheville, Martinsville, Bluefield","Southwestern Wisconsin: Madison, La Crosse, Platteville, Beloit":"Sudoeste de Wisconsin:  Madison, La Crosse, Platteville, Beloit",Spain:"Espa\u00f1a","Special Telecom.":"Telecomunicaciones especiales","Special Telecommunications Needs in Canada":"Necesidades especiales de telecomunicaciones en Canad\u00e1","St. Kitts/Nevis":"San Cristobal / Nieves",
"St. Lucia":"Santa Lucia","St. Pierre and Miquelon":"San Pedro y Miquel\u00f3n","St. Vincent/Grenadines":"San Vincente / Granadinas",Sudan:"Sud\u00e1n",Suriname:"Surinam",Swaziland:"Swazilandia",Sweden:"Suecia",Switzerland:"Suiza",Syria:"Siria","S\u00e3o Tom\u00e9 and Pr\u00edncipe":"Santo Tom\u00e9 y Pr\u00edncipe",Taiwan:"Taiw\u00e1n",Tajikistan:"Tayikist\u00e1n","Texas: Dallas area":"Texas: \u00c1rea de Dallas","Texas: El Paso County, Hudspeth County":"Texas: Condado de El Paso, Condado de Hudspeth",
"Texas: San Antonio area":"Texas: \u00c1rea de San Antonio","Texas: Waco, Killeen, Temple, Belton, and Stephenville":"Texas: Waco, Killeen, Temple, Belton y Stephenville",Thailand:"Tailandia","The Bahamas":"Las Bahamas","The British Virgin Islands":"Las Islas V\u00edrgenes Brit\u00e1nicas","The Cayman Islands":"Las Islas Caim\u00e1n","The Dominican Republic":"La Rep\u00fablica Dominicana","The Gambia":"Gambia","The Turks and Caicos Islands":"Las Islas Turcas y Caicos","The U.S. Virgin Islands":"Las Islas V\u00edrgenes de los Estados Unidos",
"Toll call":"Llamada de larga distancia","Toll calls (Num\u00e9ros Azur)":"Llamadas de larga distancia (Num\u00e9ros Azur)","Toll calls (Num\u00e9ros Indigo)":"Llamadas de larga distancia (Num\u00e9ros Indigo)","Toll-free":"Llamada gratuita","Toll-free Telephone Service":"Servicio telef\u00f3nico gratuito","Trinidad and Tobago":"Trinidad y Tobago","Trinidad/Tobago":"Trinidad / Tobago",Tunisia:"T\u00fanez",Turkey:"Turqu\u00eda","Turkey, Turkish Republic of Northern Cyprus":"Turqu\u00eda, Rep\u00fablica Turca del Norte de Chipre",
Turkmenistan:"Turkmenist\u00e1n","Turks/Caicos":"Turcas y Caicos","U.S. Government":"Gobierno de EE.UU.","U.S. Government Special Services":"Servicios especiales del Gobierno de EE.UU.","U.S. Virgins":"Islas V\u00edrgenes de los Estados Unidos",UAE:"EAU",Ukraine:"Ucrania","United Arab Emirates":"Emiratos \u00c1rabes Unidos","United Kingdom":"Reino Unido","United Kingdom, Guernsey, Isle of Man, Jersey":"Reino Unido, Guernsey, Isla de Man, Jersey","Universal Personal":"Personal universal","Universal Personal Telecommunications":"Telecomunicaciones personales universales",
"Universal international freephone number":"N\u00famero de tel\u00e9fono gratuito internacional universal","Unknown Country":"Pa\u00eds desconocido","Unknown Location":"Ubicaci\u00f3n desconocida",Uzbekistan:"Uzbekist\u00e1n","Vatican City":"Ciudad del Vaticano","Voice over IP":"Voz sobre IP","Voice over IP services":"Servicios de voz sobre IP","W Illinois":"Oeste de Illinois","W Iowa":"Oeste de Iowa","W Kentucky":"Oeste de Kentucky","W Maryland":"Oeste de Maryland","W Massachusetts":"Oeste de Massachusetts",
"W Nebraska":"Oeste de Nebraska","W New York":"Oeste de Nueva York","W North Carolina":"Oeste de Carolina del Norte","W Pennsylvania":"Oeste de Pensilvania","W Tennessee":"Oeste de Tennessee","W Texas":"Oeste de Texas","W Washington":"Oeste de Washington","Wallis and Futuna":"Wallis y Futuna","Washington: Seattle suburbs, Bellevue, Everett, Redmond, Renton, Kirkland, Bothell, Sammamish, Issaquah, Edmonds, Lynnwood and Mountlake Terrace":"Washington: suburbios de Seattle, Bellevue, Everett, Redmond, Renton, Kirkland, Bothell, Sammamish, Issaquah, Edmonds, Lynnwood y Mountlake Terrace",
"Washington: Tacoma, Lakewood, Auburn, Puyallup, Enumclaw, Spanaway and south Seattle suburbs":"Washington: Tacoma, Lakewood, Auburn, Puyallup, Enumclaw, Spanaway y suburbios del sur de Seattle","Washington: Western Washington":"Washington: Oeste de Washington","West Central Georgia: Augusta, Lincolnton, Columbus, LaGrange, Rome, Dalton, Thomaston":"Oeste Centro de Georgia: Augusta, Lincolnton, Columbus, LaGrange, Rome, Dalton, Thomaston","West Central Missouri: Kansas City, St Joseph, Independence, Harrisonville":"Oeste Centro de Missouri: Kansas City, St Joseph, Independence, Harrisonville",
"West Central New Jersey: Alpha, Washington, Elizabeth, Warren, Plainfield":"Oeste Centro de Nueva Jersey: Alpha, Washington, Elizabeth, Warren, Plainfield","West Texas: Midland, Odessa, Big Spring, Alpine":"Oeste de Texas: Midland, Odessa, Big Spring, Alpine","West Virginia":"Oeste de Virginia","Western Iowa: Sioux City, Council Bluffs, Sheldon, Denison, Estherville":"Oeste de Iowa: Sioux City, Council Bluffs, Sheldon, Denison, Estherville","Western Kentucky: Owensboro, Paducah, Bowling Green, Hopkinsville, Henderson, Elizabethtown":"Oeste de Kentucky: Owensboro, Paducah, Bowling Green, Hopkinsville, Henderson, Elizabethtown",
"Western Maryland: Silver Spring, DC suburbs, Hagerstown, Frederick, Rockville, Cumberland":"Oeste de Maryland: Silver Spring, suburbios de Washington DC, Hagerstown, Frederick, Rockville, Cumberland","Western Massachusetts: Springfield, Pittsfield, Holyoke, Greenfield":"Oeste de Massachusetts: Springfield, Pittsfield, Holyoke, Greenfield","Western Nebraska: North Platte, Scottsbluff, McCook, Kearney, Grand Island":"Oeste de Nebraska: North Platte, Scottsbluff, McCook, Kearney, Grand Island","Western New York: Buffalo, Jamestown, Niagara Falls, Tonawanda, Olean":"Oeste de Nueva York: Buffalo, Jamestown, Niagara Falls, Tonawanda, Olean",
"Western New York: Rochester, Wellsville, Batavia":"Oeste de Nueva York: Rochester, Wellsville, Batavia","Western North Carolina: Hickory, Asheville, Waynesville, Franklin, Murphy":"Oeste de Carolina del Norte: Hickory, Asheville, Waynesville, Franklin, Murphy","Western Pennsylvania: Pittsburgh area, McKeesport, Braddock, Duquesne":"Oeste de Pensilvania: \u00c1rea de Pittsburgh, McKeesport, Braddock, Duquesne","Western Tennessee: Union City, Jackson, Dyersburg, Martin, Brownsville, Paris, Bolivar":"Oeste de Tennessee: Union City, Jackson, Dyersburg, Martin, Brownsville, Paris, Bolivar",
"Western Washington: Olympia, Vancouver, Bellingham, Bremerton, Port Angeles, Aberdeen":"Oeste de Washington: Olympia, Vancouver, Bellingham, Bremerton, Port Angeles, Aberdeen","Western and Southern Texas: Corpus Christi, Victoria, George":"Oeste y Sur de Texas: Corpus Christi, Victoria, George",Yukon:"Yuk\u00f3n","Yukon, Northwest Territories, and Nunavut, Canada":"Yukon, Territorios del Noroeste y Nunavut, Canad\u00e1"};
ilib.data.phoneres_it={Aachen:"Aquisgrana","Aachen-Kornelim\u00fcnster":"Aquisgrana-Kornelim\u00fcnster","Alabama: Birmingham; Tuscaloosa; western and central Alabama":"Alabama: Birmingham; Tuscaloosa; ovest e centro Alabama","Amer. Samoa":"Samoa americane","American Samoa":"Samoa americane","Antigua and Barbuda":"Antigua e Barbuda","Arizona: Glendale, Sun City, Buckeye, Peoria, western Phoenix suburbs":"Arizona: Glendale, Sun City, Buckeye, Peoria, periferia ovest di Phoenix","Arizona: Mesa, Scottsdale, Chandler, Gilbert, Tempe, Queen Creek, eastern Phoenix suburbs":"Arizona: Mesa, Scottsdale, Chandler, Gilbert, Tempe, Queen Creek, periferia est di Phoenix",
Ascension:"Ascensione","Ascension Island":"Isola di Ascensione","Australia, Christmas Island, Cocos Islands":"Australia, Isola Christmas, Isole Cocos",Azerbaijan:"Azerbaigian","Azerbaijan, Nagorno-Karabakh":"Azerbaigian, Nagorno-Karabakh",BVIs:"Isole Vergini Britanniche",Baleares:"Baleari",Barcelona:"Barcellona",Beijing:"Pechino","Beijing \u5317\u4eac\u5e02":"Pechino \u5317\u4eac\u5e02",Belarus:"Bielorussia",Belgium:"Belgio",Berlin:"Berlino","Bosnia and Herzegovina":"Bosnia Erzegovina",Brazil:"Brasile",
Bremen:"Brema","British Columbia: Victoria, Prince George, Prince Rupert, Kelowna; also Hyder, Alaska.":"British Columbia: Victoria, Prince George, Prince Rupert, Kelowna; anche Hyder, Alaska.","British Indian Ocean":"Oceano Indiano Britannico","British Indian Ocean Territory":"Territori britannici dell\u2019oceano Indiano",Burma:"Birmania","California: Stockton, Modesto, Merced, Tracy, San Andreas and central California":"California: Stockton, Modesto, Merced, Tracy, San Andreas e California centrale",
Cambodia:"Cambogia",Cameroon:"Camerun","Cape Verde":"Capo Verde","Carrier Access":"Accesso gestore",Caymans:"Cayman","Central African Republic":"Repubblica Centrafricana","Central Arkansas: Little Rock, Hot Springs":"Centro Arkansas: Little Rock, Hot Springs","Central California: Concord, Pleasant Hill, Walnut Creek, Martinez, Livermore, Pleasanton, Dublin":"Centro California: Concord, Pleasant Hill, Walnut Creek, Martinez, Livermore, Pleasanton, Dublin","Central California: Fresno, Visalia, Madera, Hanford, Tulare":"Centro California: Fresno, Visalia, Madera, Hanford, Tulare",
"Central California: Oakland, Berkeley, Alameda":"Centro California: Oakland, Berkeley, Alameda","Central California: Oakland, Fremont, Hayward, Castro Valley, Alameda, Berkeley, Richmond":"Centro California: Oakland, Fremont, Hayward, Castro Valley, Alameda, Berkeley, Richmond","Central California: Sacramento, Davis, Roseville":"Centro California: Sacramento, Davis, Roseville","Central California: Salinas, Hollister, Monterey, Carmel, Santa Cruz":"Centro California: Salinas, Hollister, Monterey, Carmel, Santa Cruz",
"Central California: San Francisco":"Centro California: San Francisco","Central California: San Francisco, Marin County":"Centro California: San Francisco, Marin County","Central California: San Jose":"Centro California: San Jose","Central California: San Jose, Los Gatos, Milpitas, Sunnyvale, Cupertino, Gilroy":"Centro California: San Jose, Los Gatos, Milpitas, Sunnyvale, Cupertino, Gilroy","Central California: San Mateo, Palo Alto, Redwood City, Menlo Park, Mountain View, southern San Francisco suburbs":"Centro California: San Mateo, Palo Alto, Redwood City, Menlo Park, Mountain View, periferia sud di San Francisco",
"Central Coastal California: Ventura, San Luis Obispo, Santa Barbara, Oxnard, Simi Valley":"Centro costa California: Ventura, San Luis Obispo, Santa Barbara, Oxnard, Simi Valley","Central Colorado: Denver, Boulder, Longmont, Aurora":"Centro Colorado: Denver, Boulder, Longmont, Aurora","Central Eastern Florida: Orlando, Cocoa Beach, St Cloud":"Centro est Florida: Orlando, Cocoa Beach, St Cloud","Central Eastern Florida: Orlando, Florida, St. Cloud":"Centro est Florida: Orlando, Florida, St. Cloud",
"Central Eastern Florida: Vero Beach, Port Saint Lucie, Fort Pierce, Sebastian, Stuart":"Centro est Florida: Vero Beach, Port Saint Lucie, Fort Pierce, Sebastian, Stuart","Central Eastern Louisiana: Baton Rouge, Donaldsonville, New Roads, White Castle":"Centro est Louisiana: Baton Rouge, Donaldsonville, New Roads, White Castle","Central Eastern Tennessee: Knoxville, Gatlinburg, Newport, Jefferson City, Oak Ridge, Rockwood":"Centro est Tennessee: Knoxville, Gatlinburg, Newport, Jefferson City, Oak Ridge, Rockwood",
"Central Florida: Gainesville, Ocala, Inverness, Dunnellon":"Centro Florida: Gainesville, Ocala, Inverness, Dunnellon","Central Florida: St Petersburg, Dunedin":"Centro Florida: St Petersburg, Dunedin","Central Florida: Tampa, Temple Terrace, Plant City, Pasco County, Oldsmar":"Centro Florida: Tampa, Temple Terrace, Plant City, Pasco County, Oldsmar","Central Georgia: Macon, Warner Robins, Swainsboro, Wadley, Milledgeville, Perry":"Centro Georgia: Macon, Warner Robins, Swainsboro, Wadley, Milledgeville, Perry",
"Central Illinois: Springfield, Champaign Decatur, Urbana, Lincoln":"Illinois centrale Springfield, Champaign Decatur, Urbana, Lincoln","Central Indiana: Indianapolis, Carmel, Fishers, Noblesville, Greenwood, Mooresville, Beech Grove":"Centro Indiana: Indianapolis, Carmel, Fishers, Noblesville, Greenwood, Mooresville, Beech Grove","Central Indiana: Lafayette, Marion, Muncie, Richmond":"Centro Indiana: Lafayette, Marion, Muncie, Richmond","Central Iowa: Mason City, Oskaloosa, Creston, Pella, Ottumwa, Britt, Clear Lake, Fairfield":"Centro Iowa: Mason City, Oskaloosa, Creston, Pella, Ottumwa, Britt, Clear Lake, Fairfield",
"Central Michigan: Alpena, Mt. Pleasant, Bay City, Saginaw, Midland, Owosso":"Centro Michigan: Alpena, Mt. Pleasant, Bay City, Saginaw, Midland, Owosso","Central Minnesota: St. Cloud, Alexandria, Morris, Hutchinson, Sandstone, Appleton":"Centro Minnesota: St. Cloud, Alexandria, Morris, Hutchinson, Sandstone, Appleton","Central Mississippi: Jackson, Meridian, Natchez, McComb, Hattiesburg":"Centro Mississippi: Jackson, Meridian, Natchez, McComb, Hattiesburg","Central North Georgia: Marietta, Cedartown, Gainesville, Atlanta suburbs":"Centro nord Georgia: Marietta, Cedartown, Gainesville, periferia di Atlanta",
"Central Oklahoma: Oklahoma City, Stillwater, Edmond, Norman, Shawnee, Chickasha":"Centro Oklahoma: Oklahoma City, Stillwater, Edmond, Norman, Shawnee, Chickasha","Central Ontario, Canada: Sudbury, Sault Ste. Marie, North Bay, Timmins, Barrie":"Centro Ontario, Canada: Sudbury, Sault Ste. Marie, North Bay, Timmins, Barrie","Central South Carolina: Columbia, Rock Hill, Sumter, Aiken":"South Carolina Columbia, Rock Hill, Sumter, Aiken","Central Southern Quebec, Canada: Laval, Montreal suburbs":"Centro sud Quebec, Canada: Laval, periferia di Montreal",
"Central Texas: Austin, San Marcos, Lampasas, Bastrop, Milam":"Centro Texas: Austin, San Marcos, Lampasas, Bastrop, Milam","Central Western Illinois: Peoria, Bloomington-Normal, Moline, Rock Island, Galesburg":"Centro ovest Illinois: Peoria, Bloomington-Normal, Moline, Rock Island, Galesburg","Central and Southeastern New Jersey: Atlantic City, Trenton":"Centro e sud est New Jersey: Atlantic City, Trenton","Central and Southeastern Ohio: Columbus, Newark, Lancaster, Delaware, Mt. Vernon, Marion, Washington C.H., Marietta, Portsmouth, Cambridge, Zanesville, Coshocton, Stuebenville, Athens":"Centro e sud est Ohio: Columbus, Newark, Lancaster, Delaware, Mt. Vernon, Marion, Washington C.H., Marietta, Portsmouth, Cambridge, Zanesville, Coshocton, Stuebenville, Athens",
"Central and Southeastern Texas: Nacogdoches, Lufkin, Conroe, Huntsville":"Centro e sud est Texas: Nacogdoches, Lufkin, Conroe, Huntsville",Chad:"Ciad",Chile:"Cile",China:"Cina",Cologne:"Colonia","Connecticut: Bridgeport, Danbury, New Haven, Waterbury, Southwestern Connecticut":"Connecticut: Bridgeport, Danbury, New Haven, Waterbury, sudovest Connecticut","Connecticut: Bristol, Hartford, Norwich and northern and eastern Connecticut":"Connecticut: Bristol, Hartford, Norwich, nord ed est Connecticut",
"Cook Islands":"Isole Cook",Croatia:"Croazia",Cyprus:"Cipro","Czech Republic":"Repubblica Ceca","C\u00f4te d'Ivoire":"Costa d\u2019Avorio","D.R.":"Rep. Dominicana",DRC:"Repubblica Democratica del Congo","Democratic Republic of the Congo":"Repubblica Democratica del Congo",Denmark:"Danimarca","Dir. Assistance":"Informazioni abbonati","Directory Assistance Applications":"Applicazioni informazioni abbonati",Djibouti:"Gibuti","Dominican Republic":"Repubblica Dominicana",Dresden:"Dresda",Dublin:"Dublino",
"East Central Minnesota: St Paul, Lindstrom, Red Wing, Hastings":"Est centro Minnesota: St Paul, Lindstrom, Red Wing, Hastings","East Central Missouri: St. Charles, Chesterfield, Union, De Soto, Troy":"Est centro Missouri: St. Charles, Chesterfield, Union, De Soto, Troy","East Central New Jersey: New Brunswick, Neptune, Freehold, Lakewood":"Est centro New Jersey: New Brunswick, Neptune, Freehold, Lakewood","East Timor":"Timor Est","Eastern Arkansas: Texarkana, Jonesboro, Pine Bluff":"Est Arkansas: Texarkana, Jonesboro, Pine Bluff",
"Eastern Iowa: Cedar Rapids, Waterloo, Burlington, Iowa City":"Est Iowa: Cedar Rapids, Waterloo, Burlington, Iowa City","Eastern Iowa: Davenport, Dubuque, Bettendorf, Decorah, Clinton":"Est Iowa: Davenport, Dubuque, Bettendorf, Decorah, Clinton","Eastern Kansas: Kansas City, Overland Park, Paola, Leavenworth":"Est Kansas: Kansas City, Overland Park, Paola, Leavenworth","Eastern Kentucky: Ashland, Hazard, Somerset, London, Corbin, Pikeville, Maysville":"Est Kentucky: Ashland, Hazard, Somerset, London, Corbin, Pikeville, Maysville",
"Eastern Maryland: Baltimore, Annapolis, Salisbury":"Est Maryland: Baltimore, Annapolis, Salisbury","Eastern Massachusetts: Boston, Cambridge":"Est Massachusetts: Boston, Cambridge","Eastern Massachusetts: Saugus, Norwood, Waltham, Woburn, Boston suburbs":"Est Massachusetts: Saugus, Norwood, Waltham, Woburn, periferia di Boston","Eastern Nebraska: Omaha, Lincoln, Norfolk, Superior":"Est Nebraska: Omaha, Lincoln, Norfolk, Superior","Eastern Ontario, Canada: Ottawa":"Est Ontario, Canada: Ottawa","Eastern Ontario, Canada: Ottawa, Kingston":"Est Ontario, Canada: Ottawa, Kingston",
"Eastern South Carolina: Florence, Myrtle Beach, Charleston, Isle of Palms, Hilton Head Island":"Est South Carolina: Florence, Myrtle Beach, Charleston, Isle of Palms, Hilton Head Island","Eastern Tennessee: Bristol, Johnson City, Kingsport; Chattanooga, Cleveland":"Est Tennessee: Bristol, Johnson City, Kingsport; Chattanooga, Cleveland","Eastern Washington: Spokane, the Tri-Cities, Yakima, Wenatchee, Walla Walla, Pullman, Ellensburg":"Est Washington: Spokane, Tri-Cities, Yakima, Wenatchee, Walla Walla, Pullman, Ellensburg",
"Eastern Wisconsin: Appleton, Sheboygan, Oshkosh, Green Bay, Manitowoc, Fond du Lac":"Est Wisconsin: Appleton, Sheboygan, Oshkosh, Green Bay, Manitowoc, Fond du Lac",Edinburgh:"Edimburgo",Egypt:"Egitto","Emergency Services Number":"Numero servizi di emergenza","Equatorial Guinea":"Guinea Equatoriale",Ethiopia:"Etiopia","European Telephony":"Telefonia europea","European Telephony Numbering Space":"ETNS",FYRoM:"Macedonia","Falkland Islands":"Isole Falkland",Falklands:"Falkland","Faroe Islands":"Isole F\u00e6r \u00d8er",
"Federated States of Micronesia":"Stati Federati di Micronesia",Finland:"Finlandia","Finland, \u00c5land Islands":"Finlandia, Isole \u00c5land","Florida: Miami-Dade County, Florida Keys":"Florida: Contea Miami-Dade, Florida Keys","Former Yugoslav Republic of Macedonia":"Repubblica Ex Jugoslava di Macedonia",France:"Francia",Frankfurt:"Francoforte","Frankfurt am Main, Offenbach am Main":"Francoforte sul Meno, Offenbach am Main","French Guiana":"Guiana Francese","French Polynesia":"Polinesia Francese",
Germany:"Germania",Gibraltar:"Gibilterra","Global Mobile Satellite System":"Sistema satellitare mobile globale","Global Satellite":"Satellite globale",Greece:"Grecia",Greenland:"Groenlandia",Guadaloupe:"Guadalupa","Guadaloupe Island":"Isola Guadalupa",Guadeloupe:"Guadalupa","Guadeloupe, Saint Barth\u00e9lemy, Saint Martin":"Guadalupa, Saint Barth\u00e9lemy, Saint Martin","G\u00f6ttingen":"Gottinga",Hamburg:"Amburgo","Hamburg, Norderstedt, Neu Wulmstorf":"Amburgo, Norderstedt, Neu Wulmstorf",Hungary:"Ungheria",
"Hyderabad East (Ghatkeswar), Hyderabad":"Hyderabad Est (Ghatkeswar), Hyderabad","Hyderabad West (Shamshabad), Hyderabad":"Hyderabad Ovest (Shamshabad), Hyderabad",Iceland:"Islanda","Illinois: Aurora, Naperville, western Chicago":"Illinois: Aurora, Naperville, ovest Chicago","Illinois: Aurora, Naperville, western Chicago suburbs":"Illinois: Aurora, Naperville, periferia ovest di Chicago","Illinois: Chicago Heights, Evergreen Park, Tinley Park, Elmwood Park, Cicero, Oak Forest, Oak Park, Berwyn, western Chicago suburbs":"Illinois: Chicago Heights, Evergreen Park, Tinley Park, Elmwood Park, Cicero, Oak Forest, Oak Park, Berwyn, periferia ovest di Chicago",
"Inbound Intl.":"Internaz. in entrata","Inbound international calls for carrier-specific services":"Chiamate internazionali in entrata per servizi specifici del gestore","Indiana: Southern Indiana, including Bloomington, Evansville, Jeffersonville, New Albany, and Terre Haute).":"Indiana: Sud Indiana, inclusi Bloomington, Evansville, Jeffersonville, New Albany e Terre Haute.","International National Rate Service":"Servizio tariffa nazionale internazionale","International Networks":"Reti internazionali",
"International Networks (country code)":"Reti internazionali (prefisso nazionale)","International Premium Rate Service":"Servizio tariffa premium internazionale",Ireland:"Irlanda","Islands of R\u00e9union and Mayotte":"Isole di R\u00e9union e Mayotte",Israel:"Israele","Israel, Palestinian Authority":"Israele, Autorit\u00e0 Palestinese",Italy:"Italia","Italy, Vatican City":"Italia, Citt\u00e0 del Vaticano",Jamaica:"Giamaica",Japan:"Giappone",Jordan:"Giordania","Kentucky: west of the Pennyrile Parkway, including Fort Campbell, Henderson, Hopkinsville, Madisonville, Murray, and Paducah":"Kentucky: ovest di Pennyrile Parkway, inclusi Fort Campbell, Henderson, Hopkinsville, Madisonville, Murray e Paducah",
Kenya:"Kenia",Konstanz:"Costanza","Konstanz, Reichenau":"Costanza, Reichenau",Krakow:"Cracovia",Kyrgyzstan:"Kirghizistan","LD Carrier":"Gestore interurbano",Latvia:"Lettonia",Lebanon:"Libano",Leipzig:"Lipsia",Libya:"Libia",Lichtenstein:"Liechtenstein","Lichtenstein, Engstingen":"Liechtenstein, Engstingen",Lithuania:"Lituania",London:"Londra","Long Distance Carrier Use":"Utilizzabile dal gestore interurbano",Luxembourg:"Lussemburgo",Macau:"Macao",Malaysia:"Malesia",Maldives:"Maldive",Marianas:"Marianne",
"Marshall Islands":"Isole Marshall",Martinique:"Martinica","Martinique Island":"Isola di Martinica",Mexico:"Messico","Mexico City":"Citt\u00e0 del Messico","Mexico City, Federal District":"Citt\u00e0 del Messico, Distretto federale","Michigan: Oakland County":"Michigan: Contea di Oakland",'Michigan: Port Huron, Flint, Lapeer, and Michigan "Thumb"':'Michigan: Port Huron, Flint, Lapeer e Michigan "Thumb"',"Minnesota: Maple Grove, Monticello, Elk River, Fridley, Blaine, northwest Minneapolis":"Minnesota: Maple Grove, Monticello, Elk River, Fridley, Blaine, nord ovest Minneapolis",
"Missouri: Columbia, Jefferson City, Hannibal, Cape Girardeau, Poplar Bluff, Farmington, Park Hills, Lake Ozark and eastern Missouri excluding St. Louis":"Missouri: Columbia, Jefferson City, Hannibal, Cape Girardeau, Poplar Bluff, Farmington, Park Hills, Lake Ozark ed est Missouri escluso St. Louis","Mobile Number":"Numero cellulare",Moldova:"Moldavia",Monaco:"Principato di Monaco",Morocco:"Marocco","Morocco, Western Sahara":"Marocco, Sahara Occidentale",Mozambique:"Mozambico",Munich:"Monaco","NW Arizona":"NO Arizona",
"NW Arkansas":"NO Arkansas","NW California":"NO California","NW Colorado":"NO Colorado","NW Florida":"NO Florida","NW Indiana":"NO Indiana","NW Michigan":"NO Michigan","NW Ohio":"NO Ohio","NW Ontario":"NO Ontario","NW Oregon":"NO Oregon","NW Pennsylvania":"NO Pennsylvania",Nanjing:"Nanchino","Nanjing \u5357\u4eac\u5e02":"Nanchino \u5357\u4eac\u5e02","National Rate":"Tariffa nazionale",Netherlands:"Paesi Bassi","Netherlands Antilles":"Antille olandesi","New Caledonia":"Nuova Caledonia","New Delhi":"Nuova Delhi",
"New Delhi, New Delhi":"Nuova Delhi, Nuova Delhi","New Jersey: Hackensack, Jersey City, Hoboken, Bayonne, Ridgewood, Union City, Teaneck, New Milford, and northeast New Jersey":"New Jersey: Hackensack, Jersey City, Hoboken, Bayonne, Ridgewood, Union City, Teaneck, New Milford, e nordest New Jersey","New York: Manhattan except for Marble Hill":"New York: Manhattan tranne Marble Hill",'New York: The "Outer Boroughs"':"New York: Periferia","New Zealand":"Nuova Zelanda","Newfoundland and Labrador, Canada: St. John's":"Newfoundland e Labrador, Canada: St. John's",
"Norfolk Island":"Isola Norfolk","Norfolk Island, Australian Antarctic Territory":"Isola Norfolk, Territorio antartico australiano","North America":"America del Nord","North America and the Caribbean Islands":"America del Nord e isole del Caraibi","North Carolina: Greensboro, Winston-Salem, Wilkesboro, Roxboro, and northwest North Carolina":"North Carolina: Greensboro, Winston-Salem, Wilkesboro, Roxboro e nord ovest North Carolina","North Central Indiana: South Bend, Logansport, Elkhart, Warsaw, Nappanee":"Nord centro Indiana: South Bend, Logansport, Elkhart, Warsaw, Nappanee",
"North Central Iowa: Des Moines, Ames, Fort Dodge, Jefferson, Algona, Indianola":"Nord centro Iowa: Des Moines, Ames, Fort Dodge, Jefferson, Algona, Indianola","North Central Kentucky: Lexington, Richmond, Danville, Covington, Florence, Mount Sterling":"Nord centro Kentucky: Lexington, Richmond, Danville, Covington, Florence, Mount Sterling","North Central Missouri: Sedalia, Kirksville, Macon, Marshall, Trenton, Maryville, Bethany":"Nord centro Missouri: Sedalia, Kirksville, Macon, Marshall, Trenton, Maryville, Bethany",
"North Central New York: Syracuse, New York, Utica, Watertown":"Nord centro New York: Syracuse, New York, Utica, Watertown","North Central North Carolina: Raleigh, Durham, Chapel Hill, Oxford, Goldsboro":"Nord centro North Carolina: Raleigh, Durham, Chapel Hill, Oxford, Goldsboro","North Central Tennessee: Nashville, Murfreesboro, Springfield, Lebanon, Dickson":"Nord centro Tennessee: Nashville, Murfreesboro, Springfield, Lebanon, Dickson","North Central Virginia: Roanoke, Fredericksburg, Blacksburg, Harrisonburg, Winchester":"Nord centro Virginia: Roanoke, Fredericksburg, Blacksburg, Harrisonburg, Winchester",
"North Korea":"Corea del Nord","Northeast France":"Nordest Francia","Northeastern Florida: Jacksonville, St. Augustine, Starke, Green Cove Springs":"Nord est Florida: Jacksonville, St. Augustine, Starke, Green Cove Springs","Northeastern Illinois: Arlington Heights, Buffalo Grove, Wauconda, Waukegan, Des Plaines, Chicago suburbs":"Nord est Illinois: Arlington Heights, Buffalo Grove, Wauconda, Waukegan, Des Plaines, periferia di Chicago","Northeastern Indiana: Fort Wayne, New Haven, Decatur, Angola, Huntington, Wabash":"Nord est Indiana: Fort Wayne, New Haven, Decatur, Angola, Huntington, Wabash",
"Northeastern Massachusetts: Fitchburg, Peabody":"Nord est Massachusetts: Fitchburg, Peabody","Northeastern New York: Albany, Schenectady, Plattsburgh, Saranac Lake":"Nord est New York: Albany, Schenectady, Plattsburgh, Saranac Lake","Northeastern North Carolina: Greenville, Kitty Hawk, Rocky Mount":"Nord est North Carolina: Greenville, Kitty Hawk, Rocky Mount","Northeastern Ohio: Akron, Canton, Youngstown, Warren":"Nord est Ohio: Akron, Canton, Youngstown, Warren","Northeastern Oklahoma: Tulsa, Bartlesville, McAlester, Muskogee, Henryetta":"Nord est Oklahoma: Tulsa, Bartlesville, McAlester, Muskogee, Henryetta",
"Northeastern Pennsylvania: Scranton, Williamsport, Wilkes-Barre, Nanticoke, Hazleton, Pottsville, Sunbury, Danville, Bloomsburg, Stroudsburg":"Nord est Pennsylvania: Scranton, Williamsport, Wilkes-Barre, Nanticoke, Hazleton, Pottsville, Sunbury, Danville, Bloomsburg, Stroudsburg","Northeastern Texas: Tyler, Sherman, Longview, Marshall, Palestine, Jacksonville, Carthage":"Nord est Texas: Tyler, Sherman, Longview, Marshall, Palestine, Jacksonville, Carthage","Northern California coast":"Costa nord California",
"Northern Illinois: Rockford, La Salle, De Kalb, Freeport, Joliet, Plainfield, Crystal Lake":"Nord Illinois: Rockford, La Salle, De Kalb, Freeport, Joliet, Plainfield, Crystal Lake","Northern Ireland":"Irlanda del nord","Northern Kansas: Colby, Topeka, Salina, Manhattan, Lawrence":"Nord Kansas: Colby, Topeka, Salina, Manhattan, Lawrence","Northern Kentucky: Louisville, Frankfort, Shelbyville, Bardstown":"Nord Kentucky: Louisville, Frankfort, Shelbyville, Bardstown","Northern Louisiana: Shreveport, Monroe, Alexandria, Fisher, Tallulah":"Nord Louisiana: Shreveport, Monroe, Alexandria, Fisher, Tallulah",
"Northern Mariana Islands":"Isole Marianne Settentrionali","Northern Michigan: Escanaba, Houghton, Iron Mountain, Marquette, Menominee, Sault Ste. Marie, Upper Peninsula":"Nord Michigan: Escanaba, Houghton, Iron Mountain, Marquette, Menominee, Sault Ste. Marie, Upper Peninsula","Northern Minnesota: Duluth, Thief River Falls, Brainerd, International Falls":"Nord Minnesota: Duluth, Thief River Falls, Brainerd, International Falls","Northern Mississippi: Greenville, Tupelo, Winona, Columbus, Holly Springs":"Nord Mississippi: Greenville, Tupelo, Winona, Columbus, Holly Springs",
"Northern Ohio: Cleveland suburbs, Elyria, Lorain, Oberlin, Ashtabula":"Nord Ohio: Periferia di Cleveland, Elyria, Lorain, Oberlin, Ashtabula","Northern Texas: Vernon, Wichita Falls, Denton, Gainesville, Decatur":"Nord Texas: Vernon, Wichita Falls, Denton, Gainesville, Decatur","Northern Virginia: Alexandria, Arlington, Fairfax, Prince William, eastern Loudoun counties":"Nord Virginia: Alexandria, Arlington, Fairfax, Prince William, contee est Loudoun","Northern Wisconsin: Wausau, Eau Claire, Rice Lake, Rhinelander, Ashland":"Nord Wisconsin: Wausau, Eau Claire, Rice Lake, Rhinelander, Ashland",
"Northern and Eastern Alabama: Huntsville, Decatur, Cullman, Gadsden, Florence, Anniston":"Nord ed est Alabama: Huntsville, Decatur, Cullman, Gadsden, Florence, Anniston","Northern and Eastern Florida: Daytona Beach, Lake City, Live Oak, Crescent City":"Nord ed est Florida: Daytona Beach, Lake City, Live Oak, Crescent City","Northern and Western Arizona: Flagstaff, Kingman, Prescott, Yuma":"Nord ed ovest Arizona: Flagstaff, Kingman, Prescott, Yuma","Northern and Western Colorado: Aspen, Durango, Grand Junction, Fort Collins":"Nord ed ovest Colorado: Aspen, Durango, Grand Junction, Fort Collins",
"Northerneastern California: Redding, Chico, Davis, Placerville, Lake Tahoe, Susanville, Alturas, Truckee":"Nord est California Redding, Chico, Davis, Placerville, Lake Tahoe, Susanville, Alturas, Truckee","Northwest California":"Nord ovest California","Northwest France":"Nordovest Francia","Northwest Indiana: Gary, Chesterton, Crown Point, East Chicago, Hammond, Hobart, Merrillville, Michigan City, Portage, Valparaiso":"Nord ovest Indiana: Gary, Chesterton, Crown Point, East Chicago, Hammond, Hobart, Merrillville, Michigan City, Portage, Valparaiso",
"Northwestern Arkansas: Fort Smith, Fayetteville":"Nord ovest Arkansas: Fort Smith, Fayetteville","Northwestern California: Napa, Vallejo, Santa Rosa, Ukiah, Crescent City, Eureka, Ukiah":"Nord ovest California: Napa, Vallejo, Santa Rosa, Ukiah, Crescent City, Eureka, Ukiah","Northwestern Florida: Pensacola, Tallahassee, Panama City, the Florida panhandle":"Nord ovest Florida: Pensacola, Tallahassee, Panama City, Florida panhandle","Northwestern Michigan: Muskegon, Traverse City, Ludington, Petoskey":"Nord ovest Michigan: Muskegon, Traverse City, Ludington, Petoskey",
"Northwestern New Jersey: Newark, Paterson":"Nord ovest New Jersey: Newark, Paterson","Northwestern New Mexico: Albuquerque, Santa Fe, Farmington, Gallup":"Nord ovest New Mexico Albuquerque, Santa Fe, Farmington, Gallup","Northwestern Ohio: Toledo, Sylvania, Mansfield, Lima, Findlay, Bryan, Sandusky, Bowling Green":"Nord ovest Ohio: Toledo, Sylvania, Mansfield, Lima, Findlay, Bryan, Sandusky, Bowling Green","Northwestern Ontario, Canada: Thunder Bay, Kenora, Dryden, Greenstone":"Nord ovest Ontario, Canada: Thunder Bay, Kenora, Dryden, Greenstone",
"Northwestern Oregon: Portland, Salem, Hillsboro, Beaverton":"Nord ovest Oregon: Portland, Salem, Hillsboro, Beaverton","Northwestern Oregon: Portland, Salem, Hillsboro, St. Helens, Tillamook, Astoria":"Nord ovest Oregon: Portland, Salem, Hillsboro, St. Helens, Tillamook, Astoria","Northwestern and Central Pennsylvania: Erie, Warren, State College, Altoona, Johnstown, Meyersdale, Johnsonburg, St. Marys, Ridgway, DuBois, Emporium":"Nord ovest e regione centrale Pennsylvania: Erie, Warren, State College, Altoona, Johnstown, Meyersdale, Johnsonburg, St. Marys, Ridgway, DuBois, Emporium",
Norway:"Norvegia","Norway, Svalbard and Jan Mayen":"Norvegia, Svalbard e Jan Mayen","Nova Scotia and Prince Edward Island, Canada":"Nova Scotia e Prince Edward Island, Canada","N\u00fcrnberg":"Norimberga","N\u00fcrnberg/F\u00fcrth":"Norimberga/F\u00fcrth","Palestinian Authority":"Autorit\u00e0 palestinese","Papua New Guinea":"Papua Nuova Guinea",Paris:"Parigi","Paris (Ile-de-France area)":"Paris (zona Ile-de-France)","People's Republic of China":"Repubblica popolare cinese","Personal Comm.":"Com. personale",
"Personal Comm. Services":"Com. personale Servizi","Personal Communications Services":"Servizi di comunicazione personale",Peru:"Per\u00f9",Philippines:"Filippine",Poland:"Polonia",Portugal:"Portogallo","Premium Rate":"Tariffa premium","Premium-rate":"A pagamento","Premium-rate Telephone Service":"Servizi telefonici a pagamento","Puerto Rico":"Porto Rico","Republic of China":"Repubblica di Cona","Republic of Congo":"Repubblica del Congo","Republic of Ireland":"Irlanda","Russia, Kazakhstan":"Russia, Kazakistan",
Rwanda:"Ruanda","SW Alabama":"SO Alabama","SW Florida":"SO Florida","SW Georgia":"SO Georgia","SW Louisiana":"SO Louisiana","SW Michigan":"SO Michigan","SW Missouri":"SO Missouri","SW New Jersey":"SO New Jersey","SW Ohio":"SO Ohio","SW Oklahoma":"SO Oklahoma","SW Ontario":"SO Ontario","SW Pennsylvania":"SO Pennsylvania","SW Tennessee":"SO Tennessee","SW Texas":"SO Texas","SW Virginia":"SO Virginia","SW Wisconsin":"SO Wisconsin","Saint Helena":"Sant\u2019Elena","Saint Helena, Tristan da Cunha":"Sant\u2019Elena, Tristan da Cunha",
"Saint Kitts and Nevis":"Saint Kitts e Nevis","Saint Lucia":"Santa Lucia","Saint Pierre and Miquelon":"Saint Pierre e Miquelon","Saint Pierre and Miquelon Islands":"Isole Saint Pierre e Miquelon","Saint Vincent and the Grenadines":"Saint Vincent e le Grenadines","Saudi Arabia":"Arabia Saudita","Service Number":"Numero servizio",Seville:"Siviglia","Shared Cost":"Costo condiviso","Shared Cost Service":"Servizio a costo condiviso",Slovakia:"Slovacchia","Solomon Islands":"Isole Salomone","South Africa":"Sudafrica",
"South Carolina: Greenville, Spartanburg, Anderson, Upstate South Carolina":"South Carolina: Greenville, Spartanburg, Anderson, interno South Carolina","South Central California: Bakersfield, Lancaster, Santa Clarita, Palmdale, Mojave":"Sud centro California: Bakersfield, Lancaster, Santa Clarita, Palmdale, Mojave","South Central Florida: Auburndale, Lakeland, Avon Park, Clewiston, Bartow, Sebring, Winter Haven":"Sud centro Florida: Auburndale, Lakeland, Avon Park, Clewiston, Bartow, Sebring, Winter Haven",
"South Central Michigan: Lansing, Jackson, Charlotte, Coldwater, Howell, Deerfield, Addison":"Sud centro Michigan: Lansing, Jackson, Charlotte, Coldwater, Howell, Deerfield, Addison","South Central North Carolina: Charlotte, Gastonia, Concord, Salisbury":"Sud centro North Carolina: Charlotte, Gastonia, Concord, Salisbury","South Central Pennsylvania: Harrisburg, Gettysburg, Lancaster, York":"Sud centro Pennsylvania: Harrisburg, Gettysburg, Lancaster, York","South Korea":"Corea del Sud","Southeast France":"Sudest Francia",
"Southeastern Alabama: Montgomery, Auburn, Opelika, Dothan, Selma":"Sud est Alabama: Montgomery, Auburn, Opelika, Dothan, Selma","Southeastern Arizona: Tucson, Nogales":"Sud est Arizona: Tucson, Nogales","Southeastern California: Bishop, Ridgecrest, Barstow, Palm Springs, Indio, Imperial County":"Sud est California: Bishop, Ridgecrest, Barstow, Palm Springs, Indio, Imperial County","Southeastern Colorado: Colorado Springs, Pueblo, Leadville, Trinidad, Rocky Ford, La Junta":"Sud est Colorado: Colorado Springs, Pueblo, Leadville, Trinidad, Rocky Ford, La Junta",
"Southeastern Georgia: Savannah, Statesboro, Vidalia, Waycross, Brunswick, Douglas":"Sud est Georgia: Savannah, Statesboro, Vidalia, Waycross, Brunswick, Douglas","Southeastern Louisiana: Houma, Slidell":"Sud est Louisiana: Houma, Slidell","Southeastern Massachusetts: Worcester, New Bedford":"Sud est Massachusetts: Worcester, New Bedford","Southeastern New York: Rockland, Poughkeepsie, Middletown, West Point, Newburgh, Catskills, Margaretville":"Sud est New York Rockland, Poughkeepsie, Middletown, West Point, Newburgh, Catskills, Margaretville",
"Southeastern North Carolina: Fayetteville, Wilmington, Jacksonville, Lumberton":"Sud est North Carolina Fayetteville, Wilmington, Jacksonville, Lumberton","Southeastern Pennsylvania: Allentown, Reading, Norristown, Chester":"Sud est Pennsylvania: Allentown, Reading, Norristown, Chester","Southeastern Texas: Beaumont, Galveston, Port Arthur, Jasper":"Sud est Texas: Beaumont, Galveston, Port Arthur, Jasper","Southeastern Texas: Wharton, Bryan, Bay City, College Station, Lake Jackson, La Grange":"Sud est Texas: Wharton, Bryan, Bay City, College Station, Lake Jackson, La Grange",
"Southeastern Wisconsin: Racine, Kenosha, Menomonee Falls, Waukesha":"Sud est Wisconsin: Racine, Kenosha, Menomonee Falls, Waukesha","Southern Alberta, Canada: Calgary, Banff, Red Deer, Medicine Hat, Lethbridge, Brooks":"Sud Alberta, Canada: Calgary, Banff, Red Deer, Medicine Hat, Lethbridge, Brooks","Southern California: Anaheim, Santa Ana, Huntington Beach, Orange, Garden Grove, Fullerton, Orange County":"Sud California: Anaheim, Santa Ana, Huntington Beach, Orange, Garden Grove, Fullerton, Orange County",
"Southern California: Central Los Angeles":"Sud California: Centro Los Angeles","Southern California: Colton, Grand Terrace, Ontario, Claremont, Pomona, Chino, Redlands, Fontana":"Sud California: Colton, Grand Terrace, Ontario, Claremont, Pomona, Chino, Redlands, Fontana","Southern California: Corona, Riverside, Temescal Canyon, Lake Elsinore, Mira Loma, Moreno Valley, Perris, Sun City, Murrieta, Temecula, Hemet, Winchester, Lakeview, Nuevo, Beaumont, Banning, Idyllwild":"Sud California: Corona, Riverside, Temescal Canyon, Lake Elsinore, Mira Loma, Moreno Valley, Perris, Sun City, Murrieta, Temecula, Hemet, Winchester, Lakeview, Nuevo, Beaumont, Banning, Idyllwild",
"Southern California: Del Mar, La Jolla, San Diego":"Sud California: Del Mar, La Jolla, San Diego","Southern California: Laguna Niguel, Irvine, Lake Forest, Newport Beach, Corona Del Mar":"Sud California: Laguna Niguel, Irvine, Lake Forest, Newport Beach, Corona Del Mar","Southern California: Long Beach, Whittier, Norwalk, La Habra Lakewood, Bellflower":"Sud California: Long Beach, Whittier, Norwalk, La Habra Lakewood, Bellflower","Southern California: Los Angeles, West LA, San Fernando Valley, Florence, Montebello":"Sud California: Los Angeles, West LA, San Fernando Valley, Florence, Montebello",
"Southern California: Pasadena, West Covina, El Monte, La Puente, Arcadia, San Gabriel Valley, eastern Los Angeles suburbs":"Sud California: Pasadena, West Covina, El Monte, La Puente, Arcadia, San Gabriel Valley, periferia est di Los Angeles","Southern California: San Diego":"Sud California: San Diego","Southern California: San Diego, Chula Vista":"Sud California: San Diego, Chula Vista","Southern California: San Fernando Valley":"Sud California: San Fernando Valley","Southern California: San Fernando Valley, including Glendale, San Fernando, Northridge, Burbank, Los Angeles suburbs":"Sud California: San Fernando Valley, inclusi Glendale, San Fernando, Northridge, Burbank, periferia di Los Angeles",
"Southern California: Santa Monica, Malibu, Torrance, South Bay, Beverly Hills, Catalina Island, the Los Angeles Westside":"Sud California: Santa Monica, Malibu, Torrance, South Bay, Beverly Hills, Catalina Island, zona ovest di Los Angeles","Southern Florida: Fort Lauderdale, Hollywood, Coral Springs":"Sud Florida: Fort Lauderdale, Hollywood, Coral Springs","Southern Florida: Miami-Dade, Florida Keys, Miami, Homestead, Coral Gables, Key West":"Sud Florida: Miami-Dade, Florida Keys, Miami, Homestead, Coral Gables, Key West",
"Southern Illinois: Alton, Belleville, Carbondale, Centralia, East Saint Louis, Mount Vernon":"Sud Illinois: Alton, Belleville, Carbondale, Centralia, East Saint Louis, Mount Vernon","Southern Kansas: Dodge City, Emporia, Geat Bend, Parsons, Liberal":"Sud Kansas: Dodge City, Emporia, Geat Bend, Parsons, Liberal","Southern Minnesota: Rochester, Mankato, Worthington, Marshall":"Sud Minnesota: Rochester, Mankato, Worthington, Marshall","Southern Mississippi: Gulfport, Biloxi, Pascagoula, Bay St Louis":"Sud Mississippi: Gulfport, Biloxi, Pascagoula, Bay St Louis",
"Southern Texas: Laredo, Brownsville, McAllen, Harlingen":"Sud Texas: Laredo, Brownsville, McAllen, Harlingen","Southern Virginia: Charlottesville, Lynchburg, Danville, Farmville, South Hill":"Sud Virginia: Charlottesville, Lynchburg, Danville, Farmville, South Hill","Southern and Eastern Arkansas: Texarkana, Jonesboro, Pine Bluff":"Sud ed est Arkansas: Texarkana, Jonesboro, Pine Bluff","Southern and Western Oklahoma: Enid, Lawton, Ponca City, Guymon, Ardmore, Sayre, Elk City":"Sud ed ovest Oklahoma: Enid, Lawton, Ponca City, Guymon, Ardmore, Sayre, Elk City",
"Southwest France":"Sud est Francia","Southwestern Alabama: Mobile, Jackson, Brewton":"Sud ovest Alabama: Mobile, Jackson, Brewton","Southwestern Florida: Lee, Collier, and Monroe Counties; Cape Coral, Fort Myers, Naples, Everglades":"Sud ovest Florida: Contee Lee, Collier e Monroe; Cape Coral, Fort Myers, Naples, Everglades","Southwestern Florida: Tampa Bay,Manatee County, Sarasota County, Charlotte County; Bradenton, Port Charlotte, Sarasota, Punta Gorda":"Sud ovest Florida: Tampa Bay,Manatee County, Sarasota County, Charlotte County; Bradenton, Port Charlotte, Sarasota, Punta Gorda",
"Southwestern Georgia: Albany, Valdosta, Bainbridge, Americus, Fitzgerald":"Sud ovest Georgia: Albany, Valdosta, Bainbridge, Americus, Fitzgerald","Southwestern Louisiana: Lafayette, Lake Charles, Leesville, New Iberia, Opelousas, De Ridder":"Sud ovest Louisiana: Lafayette, Lake Charles, Leesville, New Iberia, Opelousas, De Ridder","Southwestern Michigan: Ann Arbor, Canton, Plymouth, Monroe, Wayne, Ypsilanti, Romulus, Detroit suburbs":"Sud ovest Michigan: Ann Arbor, Canton, Plymouth, Monroe, Wayne, Ypsilanti, Romulus, periferia di Detroit",
"Southwestern Michigan: Battle Creek, Kalamazoo, Benton Harbor, Allegan, Hastings, St Joseph":"Sud ovest Michigan: Battle Creek, Kalamazoo, Benton Harbor, Allegan, Hastings, St Joseph","Southwestern Michigan: Grand Rapids, Holland, Greenville, Grand Haven, Zeeland, Ionia":"Sud ovest Michigan: Grand Rapids, Holland, Greenville, Grand Haven, Zeeland, Ionia","Southwestern Missouri: Springfield, Joplin, Branson, West Plains, Lamar, Lebanon":"Sud ovest Missouri: Springfield, Joplin, Branson, West Plains, Lamar, Lebanon",
"Southwestern New Jersey: Vineland, Cherry Hill, Camden, Millville":"Sud ovest New Jersey: Vineland, Cherry Hill, Camden, Millville","Southwestern Ohio":"Sud ovest Ohio","Southwestern Ohio: Cincinnati, Middletown, Hamilton, Norwood, Lebanon":"Sud ovest Ohio: Cincinnati, Middletown, Hamilton, Norwood, Lebanon","Southwestern Ohio: Marysville, Springfield, Dayton, Hillsboro":"Sud ovest Ohio: Marysville, Springfield, Dayton, Hillsboro","Southwestern Ontario, Canada: London, Windsor, Kitchener-Waterloo, Cambridge":"Sud ovest Ontario, Canada: London, Windsor, Kitchener-Waterloo, Cambridge",
"Southwestern Ontario, Canada: Niagara Region, Hamilton, Toronto suburbs":"Sud ovest Ontario, Canada: Niagara, Hamilton, periferia Toronto","Southwestern Pennsylvania: New Castle, Washington, Indiana, Uniontown":"Sud ovest Pennsylvania: New Castle, Washington, Indiana, Uniontown","Southwestern Tennessee: Memphis, Covington, Somerville":"Sud ovest Tennessee: Memphis, Covington, Somerville","Southwestern Texas: Del Rio, Uvalde, New Braunfels, Kerrville, Eagle Pass":"Sud ovest Texas: Del Rio, Uvalde, New Braunfels, Kerrville, Eagle Pass",
"Southwestern Virginia: Bristol, Abingdon, Wytheville, Martinsville, Bluefield":"Sud ovest Virginia: Bristol, Abingdon, Wytheville, Martinsville, Bluefield","Southwestern Wisconsin: Madison, La Crosse, Platteville, Beloit":"Sud ovest Wisconsin: Madison, La Crosse, Platteville, Beloit",Spain:"Spagna","Special Telecom.":"Telecom. speciali","Special Telecommunications Needs in Canada":"Uso telecomunicazioni speciali in Canada","St. Pierre and Miquelon":"St. Pierre e Miquelon",Strasburg:"Strasburgo",
"Stra\u00dfberg":"Strasburgo",Stuttgart:"Stoccarda","Stuttgart, Aichwald, Denkendorf, Esslingen am Neckar, Fellbach, Filderstadt-Bernhausen, Filderstadt-Bonlanden, Filderstadt-Plattenhardt, Korntal, Leinfelden-Echterdingen, Ostfildern-Kemnat, Ostfildern-Nellingen, Ostfildern-Ruit":"Stoccarda, Aichwald, Denkendorf, Esslingen am Neckar, Fellbach, Filderstadt-Bernhausen, Filderstadt-Bonlanden, Filderstadt-Plattenhardt, Korntal, Leinfelden-Echterdingen, Ostfildern-Kemnat, Ostfildern-Nellingen, Ostfildern-Ruit",
Sweden:"Svezia",Switzerland:"Svizzera",Syria:"Siria","S\u00e3o Tom\u00e9 and Pr\u00edncipe":"Sao Tome e Principe",Tajikistan:"Tagikistan","Texas: Dallas area":"Texas: Zona di Dallas","Texas: San Antonio area":"Texas: Zona di San Antonio","Texas: Waco, Killeen, Temple, Belton, and Stephenville":"Texas: Waco, Killeen, Temple, Belton e Stephenville",Thailand:"Tailandia","The Bahamas":"Le Bahamas","The British Virgin Islands":"Isole Vergini Britanniche","The Cayman Islands":"Isole Cayman","The Dominican Republic":"Repubblica Dominicana",
"The Gambia":"Gambia","The Turks and Caicos Islands":"Isole Turks e Caicos","The U.S. Virgin Islands":"Isole Vergini americane","Toll call":"Chiamata a pagamento","Toll calls (Num\u00e9ros Azur)":"Chiamata a pagamento (numero azzurro)","Toll calls (Num\u00e9ros Indigo)":"Chiamata a pagamento (numero indaco)","Toll-free":"Numero verde","Toll-free Telephone Service":"Servizio telefonico numero verde","Trinidad and Tobago":"Trinidad e Tobago","Trinidad/Tobago":"Trinidad e Tobago",Turkey:"Turchia","Turkey, Turkish Republic of Northern Cyprus":"Turchia, Repubblica Turca di Cipro del Nord",
"Turks/Caicos":"Turk/Caicos","U.S. Government":"Governo USA","U.S. Government Special Services":"Servizi speciali governo USA","U.S. Virgins":"Isole Vergini Statunitensi",UAE:"EAU",Ukraine:"Ucraina","United Arab Emirates":"Emirati Arabi Uniti","United Kingdom":"Regno Unito","United Kingdom, Guernsey, Isle of Man, Jersey":"Regno unito, Guernsey, Isola di Man, Jersey","Universal Personal":"Universale personale","Universal Personal Telecommunications":"Telecomunicazione personale universale","Universal international freephone number":"Numero verde internazionale",
"Unknown Country":"Nazione sconosciuta","Unknown Location":"Posizione sconosciuta","Vatican City":"Citt\u00e0 del Vaticano",Vizcaya:"Biscaglia","Voice over IP services":"Servizi Voice over IP","W Illinois":"O Illinois","W Iowa":"O Iowa","W Kentucky":"O Kentucky","W Maryland":"O Maryland","W Massachusetts":"O Massachusetts","W Nebraska":"O Nebraska","W New York":"O New York","W North Carolina":"O North Carolina","W Pennsylvania":"O Pennsylvania","W Tennessee":"O Tennessee","W Texas":"O Texas","W Washington":"O Washington",
"Wallis and Futuna":"Wallis e Futuna","Washington: Seattle suburbs, Bellevue, Everett, Redmond, Renton, Kirkland, Bothell, Sammamish, Issaquah, Edmonds, Lynnwood and Mountlake Terrace":"Washington: Periferia di Seattle, Bellevue, Everett, Redmond, Renton, Kirkland, Bothell, Sammamish, Issaquah, Edmonds, Lynnwood e Mountlake Terrace","Washington: Tacoma, Lakewood, Auburn, Puyallup, Enumclaw, Spanaway and south Seattle suburbs":"Washington: Tacoma, Lakewood, Auburn, Puyallup, Enumclaw, Spanaway e periferia sud di Seattle",
"Washington: Western Washington":"Washington: Ovest Washington","West Central Georgia: Augusta, Lincolnton, Columbus, LaGrange, Rome, Dalton, Thomaston":"Ovest centro Georgia: Augusta, Lincolnton, Columbus, LaGrange, Rome, Dalton, Thomaston","West Central Missouri: Kansas City, St Joseph, Independence, Harrisonville":"Ovest centro Missouri: Kansas City, St Joseph, Independence, Harrisonville","West Central New Jersey: Alpha, Washington, Elizabeth, Warren, Plainfield":"Ovest centro New Jersey: Alpha, Washington, Elizabeth, Warren, Plainfield",
"West Texas: Midland, Odessa, Big Spring, Alpine":"Ovest Texas: Midland, Odessa, Big Spring, Alpine","Western Iowa: Sioux City, Council Bluffs, Sheldon, Denison, Estherville":"Ovest Iowa: Sioux City, Council Bluffs, Sheldon, Denison, Estherville","Western Kentucky: Owensboro, Paducah, Bowling Green, Hopkinsville, Henderson, Elizabethtown":"Ovest Kentucky: Owensboro, Paducah, Bowling Green, Hopkinsville, Henderson, Elizabethtown","Western Maryland: Silver Spring, DC suburbs, Hagerstown, Frederick, Rockville, Cumberland":"Ovest Maryland: Silver Spring, periferia DC, Hagerstown, Frederick, Rockville, Cumberland",
"Western Massachusetts: Springfield, Pittsfield, Holyoke, Greenfield":"Ovest Massachusetts: Springfield, Pittsfield, Holyoke, Greenfield","Western Nebraska: North Platte, Scottsbluff, McCook, Kearney, Grand Island":"Ovest Nebraska: North Platte, Scottsbluff, McCook, Kearney, Grand Island","Western New York: Buffalo, Jamestown, Niagara Falls, Tonawanda, Olean":"Ovest New York: Buffalo, Jamestown, Niagara Falls, Tonawanda, Olean","Western New York: Rochester, Wellsville, Batavia":"Ovest New York: Rochester, Wellsville, Batavia",
"Western North Carolina: Hickory, Asheville, Waynesville, Franklin, Murphy":"Ovest North Carolina: Hickory, Asheville, Waynesville, Franklin, Murphy","Western Pennsylvania: Pittsburgh area, McKeesport, Braddock, Duquesne":"Ovest Pennsylvania: Zona di Pittsburgh, McKeesport, Braddock, Duquesne","Western Tennessee: Union City, Jackson, Dyersburg, Martin, Brownsville, Paris, Bolivar":"Ovest Tennessee: Union City, Jackson, Dyersburg, Martin, Brownsville, Paris, Bolivar","Western Washington: Olympia, Vancouver, Bellingham, Bremerton, Port Angeles, Aberdeen":"Ovest Washington: Olympia, Vancouver, Bellingham, Bremerton, Port Angeles, Aberdeen",
"Western and Southern Texas: Corpus Christi, Victoria, George":"Ovest e sud Texas: Corpus Christi, Victoria, George","Yukon, Northwest Territories, and Nunavut, Canada":"Yukon, Northwest Territories e Nunavut, Canada",Zaragoza:"Saragozza"};
ilib.data.phoneres_ko={Busan:"\ubd80\uc0b0",China:"\uc911\uad6d","Chungcheongbuk-do":"\ucda9\uccad\ubd81\ub3c4","Chungcheongnam-do":"\ucda9\uccad\ub0a8\ub3c4",Daegu:"\ub300\uad6c","Daegu and a part of Gyeongsangbuk-do (Gyeongsan)":"\ub300\uad6c \uadf8\ub9ac\uace0 \uacbd\uc0c1\ubd81\ub3c4 \uc77c\ubd80 (\uacbd\uc0b0)",Daejeon:"\ub300\uc804","Daejeon and a part of Chungcheongnam-do (Gyeryong)":"\ub300\uc804 \uadf8\ub9ac\uace0 \ucda9\uccad\ub0a8\ub3c4 \uc77c\ubd80 (\uacc4\ub8e1)","Gangwon-do":"\uac15\uc6d0\ub3c4",
Gwangju:"\uad11\uc8fc","Gyeonggi-do":"\uacbd\uae30\ub3c4","Gyeongsangbuk-do":"\uacbd\uc0c1\ubd81\ub3c4","Gyeongsangnam-do":"\uacbd\uc0c1\ub0a8\ub3c4","Gyeongsangnam-do and a few neighborhoods of Ulsan":"\uacbd\uc0c1\ub0a8\ub3c4 \uadf8\ub9ac\uace0 \uc6b8\uc0b0\uc2dc \uc77c\ubd80","Hong Kong":"\ud64d\ucf69",Incheon:"\uc778\ucc9c","Incheon and parts of Gyeonggi-do (Bucheon and some insular communities of Ansan)":"\uc778\ucc9c \uadf8\ub9ac\uace0 \uacbd\uae30\ub3c4 \uc77c\ubd80 (\ubd80\ucc9c\uc2dc \uadf8\ub9ac\uace0 \uc548\uc0b0\uc2dc \uc77c\ubd80)",
Japan:"\uc77c\ubcf8","Jeju-do":"\uc81c\uc8fc\ub3c4","Jeollabuk-do":"\uc804\ub77c\ubd81\ub3c4","Jeollanam-do":"\uc804\ub77c\ub0a8\ub3c4",Kaesong:"\uac1c\uc131","Kaesong Industrial Region":"\uac1c\uc131\uacf5\uc5c5\uc9c0\uad6c","North Korea":"\ubd81\ud55c","People's Republic of China":"\uc911\ud654\uc778\ubbfc\uacf5\ud654\uad6d","Sejong City":"\uc138\uc885\uc2dc",Seoul:"\uc11c\uc6b8","Seoul and parts of Gyeonggi-do (Gwacheon, Gwangmyeong and some neighborhoods of Goyang and Hanam)":"\uc11c\uc6b8 \uadf8\ub9ac\uace0 \uacbd\uae30\ub3c4 \uc77c\ubd80(\uacfc\ucc9c, \uad11\uba85 \uadf8\ub9ac\uace0 \uace0\uc591\uc2dc \ud558\ub0a8\uc2dc)",
"South Korea":"\ub0a8\ud55c",Ulsan:"\uc6b8\uc0b0"};
ilib.data.phoneres_zh={Aachen:"\u4e9a\u741b","Aachen-Kornelim\u00fcnster":"\u4e9a\u741b-\u79d1\u5185\u5229\u660e\u65af\u7279",Afghanistan:"\u963f\u5bcc\u6c57",Akesu:"\u963f\u514b\u82cf\u5e02(\u963f\u514b\u82cf\u5730\u533a)","Akesu \u963f\u514b\u82cf\u5e02 (\u963f\u514b\u82cf\u5730\u533a)":"\u963f\u514b\u82cf\u5e02 (\u963f\u514b\u82cf\u5730\u533a)",Alabama:"\u4e9a\u62c9\u5df4\u9a6c\u5dde","Alabama: Birmingham; Tuscaloosa; western and central Alabama":"\u4e9a\u62c9\u5df4\u9a6c\u5dde\uff1a\u4f2f\u660e\u7ff0\uff1bTuscaloosa\uff1b\u4e9a\u62c9\u5df4\u9a6c\u5dde\u897f\u90e8\u548c\u4e2d\u90e8","Alabama: Huntsville":"\u4e9a\u62c9\u5df4\u9a6c\u5dde\uff1aHuntsville",
Alashanzuoqi:"\u963f\u62c9\u5584\u5de6\u65d7(\u963f\u62c9\u5584\u76df)","Alashanzuoqi \u963f\u62c9\u5584\u5de6\u65d7 (\u963f\u62c9\u5584\u76df)":"\u963f\u62c9\u5584\u5de6\u65d7 (\u963f\u62c9\u5584\u76df)",Alaska:"\u963f\u62c9\u65af\u52a0\u5dde","Alaska: Anchorage, Juneau, Fairbanks":"\u963f\u62c9\u65af\u52a0\u5dde\uff1aAnchorage, Juneau, Fairbanks",Albania:"\u963f\u5c14\u5df4\u5c3c\u4e9a",Alberta:"\u4e9a\u4f2f\u8fbe","Alberta, Canada":"\u52a0\u62ff\u5927\u4e9a\u4f2f\u8fbe",Aletai:"\u963f\u52d2\u6cf0\u5e02",
"Aletai \u963f\u52d2\u6cf0\u5e02":"\u963f\u52d2\u6cf0\u5e02",Algeria:"\u963f\u5c14\u53ca\u5229\u4e9a",Alicante:"\u963f\u5229\u574e\u7279","Almer\u00eda":"\u963f\u5c14\u6885\u91cc\u4e9a","Amer. Samoa":"\u7f8e\u5c5e\u8428\u6469\u4e9a","American Samoa":"\u7f8e\u5c5e\u8428\u6469\u4e9a",Andorra:"\u5b89\u9053\u5c14",Angola:"\u5b89\u54e5\u62c9",Anguilla:"\u5b89\u572d\u62c9",Ankang:"\u5b89\u5eb7\u5e02(\u5b89\u5eb7\u5730\u533a)","Ankang \u5b89\u5eb7\u5e02 (\u5b89\u5eb7\u5730\u533a)":"\u5b89\u5eb7\u5e02 (\u5b89\u5eb7\u5730\u533a)",
Anqing:"\u5b89\u5e86\u5e02","Anqing \u5b89\u5e86\u5e02":"\u5b89\u5e86\u5e02",Anshan:"\u978d\u5c71\u5e02","Anshan \u978d\u5c71\u5e02":"\u978d\u5c71\u5e02",Anshun:"\u5b89\u987a\u5e02(\u5b89\u987a\u5730\u533a)","Anshun \u5b89\u987a\u5e02 (\u5b89\u987a\u5730\u533a)":"\u5b89\u987a\u5e02 (\u5b89\u987a\u5730\u533a)","Antigua and Barbuda":"\u5b89\u63d0\u74dc\u548c\u5df4\u5e03\u8fbe","Antigua/Barbuda":"\u5b89\u63d0\u74dc/\u5df4\u5e03\u8fbe",Anyang:"\u5b89\u9633\u5e02","Anyang \u5b89\u9633\u5e02":"\u5b89\u9633\u5e02",
Argentina:"\u963f\u6839\u5ef7",Arizona:"\u4e9a\u5229\u6851\u90a3\u5dde","Arizona: Glendale, Sun City, Buckeye, Peoria, western Phoenix suburbs":"\u4e9a\u5229\u6851\u90a3\u5dde\uff1aGlendale, Sun City, Buckeye, Peoria, Phoenix \u897f\u90e8\u90ca\u533a","Arizona: Mesa, Scottsdale, Chandler, Gilbert, Tempe, Queen Creek, eastern Phoenix suburbs":"\u4e9a\u5229\u6851\u90a3\u5dde\uff1aMesa, Scottsdale, Chandler, Gilbert, Tempe, Queen Creek, \u51e4\u51f0\u57ce\u4e1c\u90e8\u90ca\u533a","Arizona: Phoenix":"\u4e9a\u5229\u6851\u90a3\u5dde\uff1a\u00ef\u00bb\u00cb\u00b3\u00c7\u00b7",
Arkansas:"\u963f\u80af\u8272\u5dde",Armenia:"\u4e9a\u7f8e\u5c3c\u4e9a","Armenia, Nagorno-Karabakh":"\u963f\u585e\u62dc\u7586\uff0c\u7eb3\u6208\u5c14\u8bfa\uff0d\u5361\u62c9\u5df4\u8d6b",Aruba:"\u963f\u9c81\u5df4",Ascension:"\u963f\u68ee\u677e","Ascension Island":"\u963f\u68ee\u677e\u5c9b",Atushi:"\u963f\u56fe\u4ec0\u5e02(\u514b\u5b5c\u52d2\u82cf\u67ef\u5c14\u514b\u5b5c\u81ea\u6cbb\u5dde)","Atushi \u963f\u56fe\u4ec0\u5e02 (\u514b\u5b5c\u52d2\u82cf\u67ef\u5c14 \u514b\u5b5c\u81ea\u6cbb\u5dde)":"\u963f\u56fe\u4ec0\u5e02 (\u514b\u5b5c\u52d2\u82cf\u67ef\u5c14 \u514b\u5b5c\u81ea\u6cbb\u5dde)",
Australia:"\u6fb3\u5927\u5229\u4e9a","Australia, Christmas Island, Cocos Islands":"\u6fb3\u5927\u5229\u4e9a\uff0c\u5723\u8bde\u5c9b\uff0c\u79d1\u79d1\u65af\u7fa4\u5c9b",Austria:"\u5965\u5730\u5229",Azerbaijan:"\u963f\u585e\u62dc\u7586","Azerbaijan, Nagorno-Karabakh":"\u963f\u585e\u62dc\u7586\uff0c\u7eb3\u6208\u5c14\u8bfa\uff0d\u5361\u62c9\u5df4\u8d6b",BVIs:"\u82f1\u5c5e\u7ef4\u5c14\u4eac\u7fa4\u5c9b","Baden-Baden":"\u5df4\u767b-\u5df4\u767b","Baden-Baden, Sinzheim":"\u5df4\u767b-\u5df4\u767b\uff0c\u8f9b\u8328\u6d77\u59c6",
Bahamas:"\u5df4\u54c8\u9a6c",Bahrain:"\u5df4\u6797",Baicheng:"\u767d\u57ce\u5e02","Baicheng \u767d\u57ce\u5e02":"\u767d\u57ce\u5e02",Baise:"\u767e\u8272\u5e02(\u767e\u8272\u5730\u533a)","Baise \u767e\u8272\u5e02 (\u767e\u8272\u5730\u533a)":"\u767e\u8272\u5e02 (\u767e\u8272\u5730\u533a)",Baishan:"\u767d\u5c71\u5e02","Baishan \u767d\u5c71\u5e02":"\u767d\u5c71\u5e02",Baiyin:"\u767d\u94f6\u5e02","Baiyin \u767d\u94f6\u5e02":"\u767d\u94f6\u5e02",Baleares:"\u5df4\u5229\u963f\u91cc",Bangalore:"\u73ed\u52a0\u7f57\u5c14",
"Bangalore, Bangalore":"\u73ed\u52a0\u7f57\u5c14\uff0c\u73ed\u52a0\u7f57\u5c14",Bange:"\u73ed\u6208\u53bf","Bange \u73ed\u6208\u53bf":"\u73ed\u6208\u53bf",Bangladesh:"\u5b5f\u52a0\u62c9\u56fd",Baoding:"\u4fdd\u5b9a\u5e02","Baoding \u4fdd\u5b9a\u5e02":"\u4fdd\u5b9a\u5e02",Baoji:"\u5b9d\u9e21\u5e02","Baoji \u5b9d\u9e21\u5e02":"\u5b9d\u9e21\u5e02",Baoshan:"\u4fdd\u5c71\u5e02","Baoshan \u4fdd\u5c71\u5e02":"\u4fdd\u5c71\u5e02",Baotou:"\u5305\u5934\u5e02","Baotou \u5305\u5934\u5e02":"\u5305\u5934\u5e02",
Barbados:"\u5df4\u5df4\u591a\u65af",Barcelona:"\u5df4\u585e\u7f57\u90a3",Bazhong:"\u5df4\u4e2d\u5e02","Bazhong \u5df4\u4e2d\u5e02":"\u5df4\u4e2d\u5e02",Beihai:"\u5317\u6d77\u5e02","Beihai \u5317\u6d77\u5e02":"\u5317\u6d77\u5e02",Beijing:"\u5317\u4eac",Belarus:"\u767d\u4fc4\u7f57\u65af",Belgium:"\u6bd4\u5229\u65f6",Belize:"\u4f2f\u5229\u5179",Bengbu:"\u868c\u57e0\u5e02","Bengbu \u868c\u57e0\u5e02":"\u868c\u57e0\u5e02",Benin:"\u8d1d\u5b81",Benxi:"\u672c\u6eaa\u5e02","Benxi \u672c\u6eaa\u5e02":"\u672c\u6eaa\u5e02",
Berlin:"\u67cf\u6797",Bermuda:"\u767e\u6155\u5927",Bhutan:"\u4e0d\u4e39",Bijie:"\u6bd5\u8282\u5e02(\u6bd5\u8282\u5730\u533a)","Bijie \u6bd5\u8282\u5e02 (\u6bd5\u8282\u5730\u533a)":"\u6bd5\u8282\u5e02 (\u6bd5\u8282\u5730\u533a)",Binzhou:"\u6ee8\u5dde\u5e02(\u6ee8\u5dde\u5730\u533a)","Binzhou \u6ee8\u5dde\u5e02 (\u6ee8\u5dde\u5730\u533a)":"\u6ee8\u5dde\u5e02 (\u6ee8\u5dde\u5730\u533a)",Birmingham:"\u4f2f\u660e\u7ff0",Bole:"\u535a\u4e50\u5e02(\u535a\u5c14\u5854\u62c9\u8499\u53e4\u81ea\u6cbb\u5dde)",
"Bole \u535a\u4e50\u5e02 (\u535a\u5c14\u5854\u62c9 \u8499\u53e4\u81ea\u6cbb\u5dde)":"\u535a\u4e50\u5e02 (\u535a\u5c14\u5854\u62c9 \u8499\u53e4\u81ea\u6cbb\u5dde)",Bolivia:"\u73bb\u5229\u7ef4\u4e9a",Bonn:"\u6ce2\u6069","Bonn, Niederkassel-Mondorf":"\u6ce2\u6069\uff0c\u4e0b\u5361\u745f\u5c14-\u8499\u591a\u592b","Bosnia and Herzegovina":"\u6ce2\u65af\u5c3c\u4e9a\u548c\u9ed1\u585e\u54e5\u7ef4\u90a3",Botswana:"\u535a\u8328\u74e6\u7eb3",Brazil:"\u5df4\u897f",Bremen:"\u4e0d\u6765\u6885",Brighton:"\u5e03\u83b1\u987f",
Bristol:"\u5e03\u91cc\u65af\u6258\u5c14","British Columbia":"\u4e0d\u5217\u98a0\u54e5\u4f26\u6bd4\u4e9a\u7701","British Columbia, Canada":"\u52a0\u62ff\u5927\u4e0d\u5217\u98a0\u54e5\u4f26\u6bd4\u4e9a\u7701","British Columbia: Vancouver, Abbotsford, Whistler, Chilliwack":"\u4e0d\u5217\u98a0\u54e5\u4f26\u6bd4\u4e9a\u7701\uff1a\u6e29\u54e5\u534e, Abbotsford, Whistler, Chilliwack","British Columbia: Victoria, Prince George, Prince Rupert, Kelowna; also Hyder, Alaska.":"\u4e0d\u5217\u98a0\u54e5\u4f26\u6bd4\u4e9a\u7701\uff1aVictoria, Prince George, Prince Rupert, Kelowna; \u548cHyder\uff0c\u963f\u62c9\u65af\u52a0\u3002",
"British Indian Ocean":"\u82f1\u5c5e\u5370\u5ea6\u6d0b","British Indian Ocean Territory":"\u82f1\u5c5e\u5370\u5ea6\u6d0b\u9886\u5730",Brunei:"\u6587\u83b1","Brunei Darussalam":"\u6587\u83b1\u8fbe\u9c81\u8428\u5170\u56fd",Buckingham:"\u767d\u91d1\u6c49",Bulgaria:"\u4fdd\u52a0\u5229\u4e9a","Burkina Faso":"\u5e03\u57fa\u7eb3\u6cd5\u7d22",Burma:"\u7f05\u7538",Burundi:"\u5e03\u9686\u8fea",California:"\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde","California: East Bay Area, Oakland, Berkeley, Alameda":"\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\uff1aEast Bay Area, Oakland, Berkeley, Alameda",
"California: Stockton, Modesto, Merced, Tracy, San Andreas and central California":"\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\uff1aStockton, Modesto, Merced, Tracy, San Andreas\u548c\u52a0\u5229\u798f\u5c3c\u4e9a\u4e2d\u90e8",Cambodia:"\u67ec\u57d4\u5be8",Cambridge:"\u5251\u6865",Cameroon:"\u5580\u9ea6\u9686",Cangzhou:"\u6ca7\u5dde\u5e02","Cangzhou \u6ca7\u5dde\u5e02":"\u6ca7\u5dde\u5e02",Cantabria:"\u574e\u5854\u5e03\u91cc\u4e9a",Canterbury:"\u574e\u7279\u4f2f\u96f7","Cape Verde":"\u4f5b\u5f97\u89d2",
Cardiff:"\u52a0\u7684\u592b","Carrier Access":"\u533a\u53f7950",Caymans:"\u5f00\u66fc","Central African Republic":"\u4e2d\u975e\u5171\u548c\u56fd","Central Arkansas: Little Rock, Hot Springs":"\u963f\u80af\u8272\u5dde\u4e2d\u90e8\uff1aLittle Rock, Hot Springs","Central California: Concord, Pleasant Hill, Walnut Creek, Martinez, Livermore, Pleasanton, Dublin":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u4e2d\u90e8\uff1aConcord, Pleasant Hill, Walnut Creek, Martinez, Livermore, Pleasanton, Dublin","Central California: Fresno, Visalia, Madera, Hanford, Tulare":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u4e2d\u90e8\uff1aFresno, Visalia, Madera, Hanford, Tulare",
"Central California: Oakland, Berkeley, Alameda":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u4e2d\u90e8\uff1aOakland, Berkeley, Alameda","Central California: Oakland, Fremont, Hayward, Castro Valley, Alameda, Berkeley, Richmond":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u4e2d\u90e8\uff1aOakland, Fremont, Hayward, Castro Valley, Alameda, Berkeley, Richmond","Central California: Sacramento, Davis, Roseville":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u4e2d\u90e8\uff1aSacramento, Davis, Roseville","Central California: Salinas, Hollister, Monterey, Carmel, Santa Cruz":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u4e2d\u90e8\uff1aSalinas, Hollister, Monterey, Carmel, Santa Cruz",
"Central California: San Francisco":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u4e2d\u90e8\uff1a\u65e7\u91d1\u5c71","Central California: San Francisco, Marin County":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u4e2d\u90e8\uff1a\u65e7\u91d1\u5c71, Marin County","Central California: San Jose":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u4e2d\u90e8\uff1a\u00ca\u00ba\u00ce\u00ce\u00f7","Central California: San Jose, Los Gatos, Milpitas, Sunnyvale, Cupertino, Gilroy":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u4e2d\u90e8\uff1aSan Jose, Los Gatos, Milpitas, Sunnyvale, Cupertino, Gilroy",
"Central California: San Mateo, Palo Alto, Redwood City, Menlo Park, Mountain View, southern San Francisco suburbs":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u4e2d\u90e8\uff1aSan Mateo, Palo Alto, Redwood City, Menlo Park, Mountain View, San Francisco\u5357\u90e8\u90ca\u533a","Central Coastal California: Ventura, San Luis Obispo, Santa Barbara, Oxnard, Simi Valley":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u4e2d\u90e8\u6d77\u5cb8\uff1aVentura, San Luis Obispo, Santa Barbara, Oxnard, Simi Valley","Central Colorado: Denver, Boulder, Longmont, Aurora":"\u79d1\u7f57\u62c9\u591a\u5dde\u4e2d\u90e8\uff1a\u4e39\u4f5b,Boulder, Longmont, Aurora",
"Central Eastern Florida: Orlando, Cocoa Beach, St Cloud":"\u4f5b\u7f57\u91cc\u8fbe\u5dde\u4e1c\u4e2d\u90e8\uff1aOrlando, Cocoa Beach, St Cloud","Central Eastern Florida: Orlando, Florida, St. Cloud":"\u4f5b\u7f57\u91cc\u8fbe\u5dde\u4e1c\u4e2d\u90e8\uff1a\u5965\u5170\u591a, \u4f5b\u7f57\u91cc\u8fbe, St. Cloud","Central Eastern Florida: Vero Beach, Port Saint Lucie, Fort Pierce, Sebastian, Stuart":"\u4f5b\u7f57\u91cc\u8fbe\u5dde\u4e1c\u4e2d\u90e8\uff1aVero Beach, Port Saint Lucie, Fort Pierce, Sebastian, Stuart",
"Central Eastern Louisiana: Baton Rouge, Donaldsonville, New Roads, White Castle":"\u8def\u6613\u65af\u5b89\u90a3\u5dde\u4e1c\u4e2d\u90e8\uff1aBaton Rouge, Donaldsonville, New Roads, White Castle","Central Eastern Tennessee: Knoxville, Gatlinburg, Newport, Jefferson City, Oak Ridge, Rockwood":"\u7530\u7eb3\u897f\u5dde\u4e1c\u4e2d\u90e8\uff1aKnoxville, Gatlinburg, Newport, Jefferson City, Oak Ridge, Rockwood","Central Florida: Gainesville, Ocala, Inverness, Dunnellon":"\u4f5b\u7f57\u91cc\u8fbe\u5dde\u4e2d\u90e8\uff1aGainesville, Ocala, Inverness, Dunnellon",
"Central Florida: St Petersburg, Dunedin":"\u4f5b\u7f57\u91cc\u8fbe\u5dde\u4e2d\u90e8\uff1aSt Petersburg, Dunedin","Central Florida: Tampa, Temple Terrace, Plant City, Pasco County, Oldsmar":"\u4f5b\u7f57\u91cc\u8fbe\u5dde\u4e2d\u90e8\uff1aTampa, Temple Terrace, Plant City, Pasco County, Oldsmar","Central Georgia: Macon, Warner Robins, Swainsboro, Wadley, Milledgeville, Perry":"\u4e54\u6cbb\u4e9a\u5dde\u4e2d\u90e8\uff1aMacon, Warner Robins, Swainsboro, Wadley, Milledgeville, Perry","Central Illinois: Springfield, Champaign Decatur, Urbana, Lincoln":"\u4f0a\u5229\u8bfa\u4f0a\u5dde\u4e2d\u90e8\uff1aSpringfield, Champaign Decatur, Urbana, Lincoln",
"Central Indiana: Indianapolis, Carmel, Fishers, Noblesville, Greenwood, Mooresville, Beech Grove":"\u5370\u7b2c\u5b89\u7eb3\u5dde\u4e2d\u90e8\uff1a\u5370\u7b2c\u5b89\u7eb3\u6ce2\u5229\u65af, Carmel, Fishers, Noblesville, Greenwood, Mooresville, Beech Grove","Central Indiana: Lafayette, Marion, Muncie, Richmond":"\u5370\u7b2c\u5b89\u7eb3\u5dde\u4e2d\u90e8\uff1aLafayette, Marion, Muncie, Richmond","Central Iowa: Mason City, Oskaloosa, Creston, Pella, Ottumwa, Britt, Clear Lake, Fairfield":"\u7231\u8377\u534e\u5dde\u4e2d\u90e8\uff1aMason City, Oskaloosa, Creston, Pella, Ottumwa, Britt, Clear Lake, Fairfield",
"Central Michigan: Alpena, Mt. Pleasant, Bay City, Saginaw, Midland, Owosso":"\u5bc6\u6b47\u6839\u5dde\u4e2d\u90e8\uff1aAlpena, Mt. Pleasant, Bay City, Saginaw, Midland, Owosso","Central Minnesota: St. Cloud, Alexandria, Morris, Hutchinson, Sandstone, Appleton":"\u660e\u5c3c\u82cf\u8fbe\u5dde\u4e2d\u90e8\uff1aSt. Cloud, Alexandria, Morris, Hutchinson, Sandstone, Appleton","Central Mississippi: Jackson, Meridian, Natchez, McComb, Hattiesburg":"\u5bc6\u897f\u897f\u6bd4\u5dde\u4e2d\u90e8\uff1aJackson, Meridian, Natchez, McComb, Hattiesburg",
"Central North Georgia: Marietta, Cedartown, Gainesville, Atlanta suburbs":"\u4e54\u6cbb\u4e9a\u5dde\u4e2d\u5317\u90e8\uff1aMarietta, Cedartown, Gainesville, \u4e9a\u7279\u5170\u5927\u90ca\u533a","Central Oklahoma: Oklahoma City, Stillwater, Edmond, Norman, Shawnee, Chickasha":"\u4fc4\u514b\u62c9\u4f55\u9a6c\u5dde\u4e2d\u90e8\uff1a\u4fc4\u514b\u62c9\u4f55\u9a6c\u57ce, Stillwater, Edmond, Norman, Shawnee, Chickasha","Central Ontario, Canada: Sudbury, Sault Ste. Marie, North Bay, Timmins, Barrie":"\u52a0\u62ff\u5927\u5b89\u5927\u7565\u7701\u4e2d\u90e8Sudbury, Sault Ste.Marie, North Bay, Timmins, Barrie",
"Central South Carolina: Columbia, Rock Hill, Sumter, Aiken":"\u5357\u5361\u7f57\u6765\u7eb3\u5dde\u4e2d\u90e8\uff1aColumbia, Rock Hill, Sumter, Aiken","Central Southern Quebec, Canada: Laval, Montreal suburbs":"\u52a0\u62ff\u5927\u9b41\u5317\u514b\u4e2d\u5357\u90e8\uff1aLaval, \u8499\u7279\u5229\u5c14\u90ca\u533a","Central Texas: Austin, San Marcos, Lampasas, Bastrop, Milam":"\u5fb7\u514b\u8428\u65af\u5dde\u4e2d\u90e8\uff1aAustin, San Marcos, Lampasas, Bastrop, Milam","Central Western Illinois: Peoria, Bloomington-Normal, Moline, Rock Island, Galesburg":"\u4f0a\u5229\u8bfa\u4f0a\u5dde\u4e2d\u897f\u90e8\uff1aPeoria, Bloomington-Normal, Moline, Rock Island, Galesburg",
"Central and Southeastern New Jersey: Atlantic City, Trenton":"\u65b0\u6cfd\u897f\u5dde\u4e1c\u5357\u90e8Atlantic City, Trenton","Central and Southeastern Ohio: Columbus, Newark, Lancaster, Delaware, Mt. Vernon, Marion, Washington C.H., Marietta, Portsmouth, Cambridge, Zanesville, Coshocton, Stuebenville, Athens":"\u4fc4\u4ea5\u4fc4\u5dde\u4e1c\u5357\u90e8\uff1aColumbus, Newark, Lancaster, Delaware, Mt. Vernon, Marion, Washington C.H., Marietta, Portsmouth, Cambridge, Zanesville, Coshocton, Stuebenville, Athens",
"Central and Southeastern Texas: Nacogdoches, Lufkin, Conroe, Huntsville":"\u5fb7\u514b\u8428\u65af\u5dde\u4e2d\u90e8\u548c\u4e1c\u5357\u90e8\uff1aNacogdoches, Lufkin, Conroe, Huntsville",Chad:"\u4e4d\u5f97",Changchun:"\u957f\u6625\u5e02","Changchun \u957f\u6625\u5e02":"\u957f\u6625\u5e02",Changde:"\u5e38\u5fb7\u5e02","Changde \u5e38\u5fb7\u5e02":"\u5e38\u5fb7\u5e02",Changdu:"\u660c\u90fd\u53bf(\u660c\u90fd\u5730\u533a)","Changdu \u660c\u90fd\u53bf (\u660c\u90fd\u5730\u533a)":"\u660c\u90fd\u53bf (\u660c\u90fd\u5730\u533a)",
Changji:"\u660c\u5409\u5e02(\u660c\u5409\u56de\u65cf\u81ea\u6cbb\u5dde)","Changji \u660c\u5409\u5e02(\u660c\u5409 \u56de\u65cf\u81ea\u6cbb\u5dde)":"\u660c\u5409\u5e02(\u660c\u5409 \u56de\u65cf\u81ea\u6cbb\u5dde)",Changsha:"\u957f\u6c99\u5e02","Changsha \u957f\u6c99\u5e02, Xiangtan \u6e58\u6f6d\u5e02, Zhuzhou \u682a\u5dde\u5e02":"\u957f\u6c99\u5e02,\u6e58\u6f6d\u5e02,\u682a\u5dde\u5e02",Changzhi:"\u957f\u6cbb\u5e02","Changzhi \u957f\u6cbb\u5e02":"\u957f\u6cbb\u5e02",Changzhou:"\u5e38\u5dde\u5e02",
"Changzhou \u5e38\u5dde\u5e02":"\u5e38\u5dde\u5e02",Chaohu:"\u5de2\u6e56\u5e02","Chaohu \u5de2\u6e56\u5e02":"\u5de2\u6e56\u5e02",Chaoyang:"\u6f6e\u9633\u5e02","Chaoyang \u671d\u9633\u5e02":"\u671d\u9633\u5e02","Chaoyang \u6f6e\u9633\u5e02, Shantou \u6c55\u5934\u5e02":"\u6f6e\u9633\u5e02,\u6c55\u5934\u5e02",Chaozhou:"\u6f6e\u5dde\u5e02","Chaozhou \u6f6e\u5dde\u5e02":"\u6f6e\u5dde\u5e02",Chengde:"\u627f\u5fb7\u5e02","Chengde \u627f\u5fb7\u5e02":"\u627f\u5fb7\u5e02",Chengdu:"\u6210\u90fd\u5e02","Chengdu \u6210\u90fd\u5e02":"\u6210\u90fd\u5e02",
Chennai:"\u94a6\u5948","Chennai, Chennai":"\u94a6\u5948\uff0c\u94a6\u5948",Chenzhou:"\u90f4\u5dde\u5e02","Chenzhou \u90f4\u5dde\u5e02":"\u90f4\u5dde\u5e02",Chifeng:"\u8d64\u5cf0\u5e02","Chifeng \u8d64\u5cf0\u5e02":"\u8d64\u5cf0\u5e02",Chile:"\u667a\u5229",China:"\u4e2d\u56fd",Chizhou:"\u6c60\u5dde\u5e02","Chizhou \u6c60\u5dde\u5e02":"\u6c60\u5dde\u5e02",Chongqing:"\u91cd\u5e86\u5e02","Chongqing \u91cd\u5e86\u5e02":"\u91cd\u5e86\u5e02",Chuxiong:"\u695a\u96c4\u5e02(\u695a\u96c4\u5f5d\u65cf\u81ea\u6cbb\u5dde)",
"Chuxiong \u695a\u96c4\u5e02(\u695a\u96c4 \u5f5d\u65cf\u81ea\u6cbb\u5dde )":"\u695a\u96c4\u5e02(\u695a\u96c4 \u5f5d\u65cf\u81ea\u6cbb\u5dde )",Chuzhou:"\u6ec1\u5dde\u5e02","Chuzhou \u6ec1\u5dde\u5e02":"\u6ec1\u5dde\u5e02","Ciudad Real":"\u96f7\u963f\u5c14\u57ce",Cologne:"\u79d1\u9686",Colombia:"\u54e5\u4f26\u6bd4\u4e9a",Colorado:"\u79d1\u7f57\u62c9\u591a\u5dde","Commonwealth of Dominica":"\u591a\u7c73\u5c3c\u514b\u5171\u548c\u56fd",Comoros:"\u79d1\u6469\u7f57",Connecticut:"\u5eb7\u6d85\u72c4\u683c\u5dde",
"Connecticut: Bridgeport, Danbury, New Haven, Waterbury, Southwestern Connecticut":"\u5eb7\u6d85\u72c4\u683c\u5dde\uff1aBridgeport, Danbury, New Haven, Waterbury\uff0c\u5eb7\u6d85\u72c4\u683c\u5dde\u897f\u5357\u90e8","Connecticut: Bristol, Hartford, Norwich and northern and eastern Connecticut":"\u5eb7\u6d85\u72c4\u683c\u5dde\uff1aBristol, Hartford, Norwich\u548c\u5eb7\u6d85\u72c4\u683c\u5dde\u4e1c\u5317\u90e8","Cook Islands":"\u5e93\u514b\u7fa4\u5c9b",Cordoba:"\u79d1\u5c14\u591a\u74e6","Costa Rica":"\u54e5\u65af\u8fbe\u9ece\u52a0",
Coventry:"\u8003\u6587\u5782",Croatia:"\u514b\u7f57\u5730\u4e9a",Cuba:"\u53e4\u5df4",Cyprus:"\u585e\u6d66\u8def\u65af","Czech Republic":"\u6377\u514b\u5171\u548c\u56fd","C\u00e1diz":"\u52a0\u7684\u65af","C\u00f4te d'Ivoire":"\u79d1\u7279\u8fea\u74e6","D.R.":"\u591a\u7c73\u5c3c\u52a0\u5171\u548c\u56fd",DRC:"\u521a\u679c\u6c11\u4e3b\u5171\u548c\u56fd",Dali:"\u5927\u7406\u5e02(\u5927\u7406\u767d\u65cf\u81ea\u6cbb\u5dde)","Dali \u5927\u7406\u5e02(\u5927\u7406 \u767d\u65cf\u81ea\u6cbb\u5dde)":"\u5927\u7406\u5e02(\u5927\u7406 \u767d\u65cf\u81ea\u6cbb\u5dde)",
Dalian:"\u5927\u8fde\u5e02","Dalian \u5927\u8fde\u5e02":"\u5927\u8fde\u5e02",Dandong:"\u4e39\u4e1c\u5e02","Dandong \u4e39\u4e1c\u5e02":"\u4e39\u4e1c\u5e02",Daqing:"\u5927\u5e86\u5e02","Daqing \u5927\u5e86\u5e02":"\u5927\u5e86\u5e02",Datong:"\u5927\u540c\u5e02","Datong \u5927\u540c\u5e02":"\u5927\u540c\u5e02",Dazhou:"\u8fbe\u5dde\u5e02","Dazhou \u8fbe\u5dde\u5e02":"\u8fbe\u5dde\u5e02",Delaware:"\u7279\u62c9\u534e\u5dde",Delingha:"\u5fb7\u4ee4\u54c8\u5e02(\u6d77\u897f\u8499\u53e4\u65cf\u85cf\u65cf\u81ea\u6cbb\u5dde)",
"Delingha \u5fb7\u4ee4\u54c8\u5e02 (\u6d77\u897f\u8499\u53e4\u65cf \u85cf\u65cf\u81ea\u6cbb\u5dde)":"\u5fb7\u4ee4\u54c8\u5e02 (\u6d77\u897f\u8499\u53e4\u65cf \u85cf\u65cf\u81ea\u6cbb\u5dde)","Democratic Republic of the Congo":"\u521a\u679c\u6c11\u4e3b\u5171\u548c\u56fd",Denmark:"\u4e39\u9ea6",Deyang:"\u5fb7\u9633\u5e02","Deyang \u5fb7\u9633\u5e02":"\u5fb7\u9633\u5e02",Dezhou:"\u5fb7\u5dde\u5e02(\u5fb7\u5dde\u5730\u533a)","Dezhou \u5fb7\u5dde\u5e02 (\u5fb7\u5dde\u5730\u533a)":"\u5fb7\u5dde\u5e02 (\u5fb7\u5dde\u5730\u533a)",
Dingxi:"\u5b9a\u897f\u53bf(\u5b9a\u897f\u5730\u533a)","Dingxi \u5b9a\u897f\u53bf (\u5b9a\u897f\u5730\u533a)":"\u5b9a\u897f\u53bf (\u5b9a\u897f\u5730\u533a)","Dir. Assistance":"\u67e5\u53f7\u53f0","Directory Assistance Applications":"\u67e5\u53f7\u53f0\u5e94\u7528\u7a0b\u5e8f",Djibouti:"\u5409\u5e03\u63d0",Dominica:"\u591a\u7c73\u5c3c\u514b","Dominican Republic":"\u591a\u7c73\u5c3c\u52a0\u5171\u548c\u56fd",Dongguan:"\u4e1c\u839e\u5e02","Dongguan \u4e1c\u839e\u5e02":"\u4e1c\u839e\u5e02",Dongsheng:"\u4e1c\u80dc\u5e02(\u4f0a\u514b\u662d\u76df)",
"Dongsheng \u4e1c\u80dc\u5e02 (\u4f0a\u514b\u662d\u76df)":"\u4e1c\u80dc\u5e02 (\u4f0a\u514b\u662d\u76df)",Dongying:"\u4e1c\u8425\u5e02","Dongying \u4e1c\u8425\u5e02":"\u4e1c\u8425\u5e02",Dover:"\u591a\u4f5b\u5c14",Dresden:"\u5fb7\u7d2f\u65af\u987f",Dublin:"\u90fd\u67cf\u6797",Duyun:"\u90fd\u5300\u5e02(\u9ed4\u5357\u5e03\u4f9d\u65cf\u82d7\u65cf\u81ea\u6cbb\u5dde)","Duyun \u90fd\u5300\u5e02 (\u9ed4\u5357\u5e03\u4f9d\u65cf \u82d7\u65cf\u81ea\u6cbb\u5dde)":"\u90fd\u5300\u5e02 (\u9ed4\u5357\u5e03\u4f9d\u65cf \u82d7\u65cf\u81ea\u6cbb\u5dde)",
"D\u00fcsseldorf":"\u675c\u585e\u5c14\u591a\u592b","E Arkansas":"\u963f\u80af\u8272\u4e1c\u90e8","E Florida":"\u4f5b\u7f57\u91cc\u8fbe\u5dde\u4e1c\u90e8\uff1a","E Iowa":"\u7231\u8377\u534e\u5dde\u4e1c\u90e8","E Kansas":"\u582a\u8428\u65af\u5dde\u4e1c\u90e8","E Kentucky":"\u80af\u5854\u57fa\u5dde\u4e1c\u90e8","E Louisiana":"\u8def\u6613\u65af\u5b89\u90a3\u5dde\u4e1c\u90e8","E Maryland":"\u9a6c\u91cc\u5170\u5dde\u4e1c\u90e8","E Massachusetts":"\u9a6c\u8428\u8bf8\u585e\u5dde\u4e1c\u90e8","E Nebraska":"\u5185\u5e03\u62c9\u65af\u52a0\u4e1c\u90e8",
"E Ontario":"\u5b89\u5927\u7565\u4e1c\u90e8","E South Carolina":"\u5357\u5361\u7f57\u6765\u7eb3\u5dde\u4e1c\u90e8","E Tennessee":"\u7530\u7eb3\u897f\u5dde\u4e1c\u90e8","E Washington":"\u534e\u76db\u987f\u5dde\u4e1c\u90e8","E Wisconsin":"\u5a01\u65af\u5eb7\u661f\u5dde\u4e1c\u90e8","East Central Minnesota: St Paul, Lindstrom, Red Wing, Hastings":"\u660e\u5c3c\u82cf\u8fbe\u5dde\u4e2d\u4e1c\u90e8\uff1aSt Paul, Lindstrom, Red Wing, Hastings","East Central Missouri: St. Charles, Chesterfield, Union, De Soto, Troy":"\u5bc6\u82cf\u91cc\u5dde\u4e2d\u4e1c\u90e8\uff1aSt. Charles, Chesterfield, Union, De Soto, Troy",
"East Central New Jersey: New Brunswick, Neptune, Freehold, Lakewood":"\u65b0\u6cfd\u897f\u5dde\u4e1c\u4e2d\u90e8\uff1aNew Brunswick, Neptune, Freehold, Lakewood","East Timor":"\u4e1c\u5e1d\u6c76","Eastern Arkansas: Texarkana, Jonesboro, Pine Bluff":"\u963f\u80af\u8272\u4e1c\u90e8\uff1aTexarkana, Jonesboro, Pine Bluff","Eastern Iowa: Cedar Rapids, Waterloo, Burlington, Iowa City":"\u7231\u8377\u534e\u5dde\u4e1c\u90e8\uff1aCedar Rapids, Waterloo, Burlington, Iowa City","Eastern Iowa: Davenport, Dubuque, Bettendorf, Decorah, Clinton":"\u7231\u8377\u534e\u5dde\u4e1c\u90e8\uff1aDavenport, Dubuque, Bettendorf, Decorah, Clinton",
"Eastern Kansas: Kansas City, Overland Park, Paola, Leavenworth":"\u582a\u8428\u65af\u5dde\u4e1c\u90e8\uff1a\u582a\u8428\u65af\u5dde\u57ce, Overland Park, Paola, Leavenworth","Eastern Kentucky: Ashland, Hazard, Somerset, London, Corbin, Pikeville, Maysville":"\u80af\u5854\u57fa\u5dde\u4e1c\u90e8\uff1aAshland, Hazard, Somerset, London, Corbin, Pikeville, Maysville","Eastern Maryland: Baltimore, Annapolis, Salisbury":"\u9a6c\u91cc\u5170\u4e1c\u90e8\uff1aBaltimore, Annapolis, Salisbury","Eastern Massachusetts: Boston, Cambridge":"\u9a6c\u8428\u8bf8\u585e\u5dde\u4e1c\u90e8\uff1a\u6ce2\u58eb\u987f\uff0c\u5251\u6865",
"Eastern Massachusetts: Saugus, Norwood, Waltham, Woburn, Boston suburbs":"\u9a6c\u8428\u8bf8\u585e\u5dde\u4e1c\u90e8\uff1aSaugus, Norwood, Waltham, Woburn, \u6ce2\u58eb\u987f\u90ca\u533a","Eastern Nebraska: Omaha, Lincoln, Norfolk, Superior":"\u5185\u5e03\u62c9\u65af\u52a0\u4e1c\u90e8\uff1aOmaha, Lincoln, Norfolk, Superior","Eastern Ontario, Canada: Ottawa":"\u52a0\u62ff\u5927\u5b89\u5927\u7565\u4e1c\u90e8\uff1a\u6e25\u592a\u534e","Eastern Ontario, Canada: Ottawa, Kingston":"\u52a0\u62ff\u5927\u5b89\u5927\u7565\u4e1c\u90e8\uff1aOttawa, Kingston",
"Eastern South Carolina: Florence, Myrtle Beach, Charleston, Isle of Palms, Hilton Head Island":"\u5357\u5361\u7f57\u6765\u7eb3\u5dde\u4e1c\u90e8\uff1aFlorence, Myrtle Beach, Charleston, Isle of Palms, Hilton Head Island","Eastern Tennessee: Bristol, Johnson City, Kingsport; Chattanooga, Cleveland":"\u7530\u7eb3\u897f\u5dde\u4e1c\u90e8\uff1aBristol, Johnson City, Kingsport; Chattanooga, Cleveland","Eastern Washington: Spokane, the Tri-Cities, Yakima, Wenatchee, Walla Walla, Pullman, Ellensburg":"\u534e\u76db\u987f\u5dde\u4e1c\u90e8\uff1aSpokane, the Tri-Cities, Yakima, Wenatchee, Walla Walla, Pullman, Ellensburg",
"Eastern Wisconsin: Appleton, Sheboygan, Oshkosh, Green Bay, Manitowoc, Fond du Lac":"\u5a01\u65af\u5eb7\u661f\u5dde\u4e1c\u90e8\uff1aAppleton, Sheboygan, Oshkosh, Green Bay, Manitowoc, Fond du Lac",Ecuador:"\u5384\u74dc\u591a\u5c14",Edinburgh:"\u7231\u4e01\u5821",Egypt:"\u57c3\u53ca","El Salvador":"\u8428\u5c14\u74e6\u591a","Emergency Services Number":"\u7d27\u6025\u670d\u52a1\u53f7\u7801",Enshi:"\u6069\u65bd\u5e02(\u6069\u65bd\u571f\u5bb6\u65cf\u82d7\u65cf\u81ea\u6cbb\u5dde)","Enshi \u6069\u65bd\u5e02 (\u6069\u65bd\u571f\u5bb6\u65cf \u82d7\u65cf\u81ea\u6cbb\u5dde)":"\u6069\u65bd\u5e02 (\u6069\u65bd\u571f\u5bb6\u65cf \u82d7\u65cf\u81ea\u6cbb\u5dde)",
"Equatorial Guinea":"\u8d64\u9053\u51e0\u5185\u4e9a",Eritrea:"\u5384\u7acb\u7279\u91cc\u4e9a",Essen:"\u57c3\u68ee","Essen (Oldenburg)":"\u57c3\u68ee\uff08\u5965\u5c14\u767b\u5821\uff09",Estonia:"\u7231\u6c99\u5c3c\u4e9a",Ethiopia:"\u57c3\u585e\u4fc4\u6bd4\u4e9a","European Telephony":"\u6b27\u6d32\u7535\u8bdd","European Telephony Numbering Space":"\u6b27\u6d32\u7535\u8bdd\u53f7\u7801\u7a7a\u95f4",Ezhou:"\u9102\u5dde\u5e02","Ezhou \u9102\u5dde\u5e02":"\u9102\u5dde\u5e02",FYRoM:"\u9a6c\u5176\u987f\u5171\u548c\u56fd\uff08\u524d\u5357\u65af\u62c9\u592b\uff09",
"Falkland Islands":"\u798f\u514b\u5170\u7fa4\u5c9b",Falklands:"\u798f\u514b\u5170\u7fa4\u5c9b",Fangchenggang:"\u9632\u57ce\u6e2f\u5e02","Fangchenggang \u9632\u57ce\u6e2f\u5e02":"\u9632\u57ce\u6e2f\u5e02","Faroe Islands":"\u6cd5\u7f57\u7fa4\u5c9b","Federated States of Micronesia":"\u5bc6\u514b\u7f57\u5c3c\u897f\u4e9a\u8054\u90a6",Fiji:"\u6590\u6d4e",Finland:"\u82ac\u5170","Finland, \u00c5land Islands":"\u82ac\u5170\uff0c\u5965\u5170\u7fa4\u5c9b",Florida:"\u4f5b\u7f57\u91cc\u8fbe\u5dde","Florida: Miami-Dade County, Florida Keys":"\u4f5b\u7f57\u91cc\u8fbe\u5dde\uff1aMiami-Dade County, Florida Keys",
"Florida: Palm Beach, West Palm Beach, Boca Raton, Boynton Beach, Delray Beach, Belle Glade":"\u4f5b\u7f57\u91cc\u8fbe\u5dde\uff1aPalm Beach, West Palm Beach, Boca Raton, Boynton Beach, Delray Beach, Belle Glade","Former Yugoslav Republic of Macedonia":"\u9a6c\u5176\u987f\u5171\u548c\u56fd\uff08\u524d\u5357\u65af\u62c9\u592b\uff09",Foshan:"\u4f5b\u5c71\u5e02","Foshan \u4f5b\u5c71\u5e02, Shunde \u987a\u5fb7\u5e02":"\u4f5b\u5c71\u5e02,\u987a\u5fb7\u5e02",France:"\u6cd5\u56fd",Frankfurt:"\u6cd5\u5170\u514b\u798f",
"Frankfurt am Main, Offenbach am Main":"\u7f8e\u56e0\u6cb3\u7554\u6cd5\u5170\u514b\u798f\uff0c\u7f8e\u56e0\u6cb3\u7554\u5965\u82ac\u5df4\u8d6b",Freephone:"\u514d\u8d39\u7535\u8bdd","French Guiana":"\u6cd5\u5c5e\u572d\u4e9a\u90a3","French Polynesia":"\u6cd5\u5c5e\u6ce2\u5229\u5c3c\u897f\u4e9a",Fushun:"\u629a\u987a\u5e02","Fushun \u629a\u987a\u5e02":"\u629a\u987a\u5e02",Fuxin:"\u961c\u65b0\u5e02","Fuxin \u961c\u65b0\u5e02":"\u961c\u65b0\u5e02",Fuyang:"\u961c\u9633\u5e02","Fuyang \u961c\u9633\u5e02":"\u961c\u9633\u5e02",
Fuzhou:"\u798f\u5dde\u5e02","Fuzhou \u629a\u5dde\u5e02":"\u798f\u5dde\u5e02 \u629a\u5dde\u5e02","Fuzhou \u798f\u5dde\u5e02":"\u798f\u5dde\u5e02",Gabon:"\u52a0\u84ec",Gambia:"\u5188\u6bd4\u4e9a",Ganzhou:"\u8d63\u5dde\u5e02","Ganzhou \u8d63\u5dde\u5e02":"\u8d63\u5dde\u5e02",GeEr:"\u5676\u5c14\u53bf(\u963f\u91cc\u5730\u533a)","GeEr \u5676\u5c14\u53bf (\u963f\u91cc\u5730\u533a)":"\u5676\u5c14\u53bf (\u963f\u91cc\u5730\u533a)",GeErmu:"\u683c\u5c14\u6728\u5e02","GeErmu \u683c\u5c14\u6728\u5e02":"\u683c\u5c14\u6728\u5e02",
Gejiu:"\u4e2a\u65e7\u5e02(\u7ea2\u6cb3\u54c8\u5c3c\u65cf\u5f5d\u65cf\u81ea\u6cbb\u5dde)","Gejiu \u4e2a\u65e7\u5e02 (\u7ea2\u6cb3\u54c8\u5c3c\u65cf \u5f5d\u65cf\u81ea\u6cbb\u5dde)":"\u4e2a\u65e7\u5e02 (\u7ea2\u6cb3\u54c8\u5c3c\u65cf \u5f5d\u65cf\u81ea\u6cbb\u5dde)",Georgia:"\u4e54\u6cbb\u4e9a\u5dde","Georgia: Atlanta":"\u4e54\u6cbb\u4e9a\u5dde\uff1a\u4e9a\u7279\u5170\u5927",Germany:"\u5fb7\u56fd",Ghana:"\u52a0\u7eb3",Gibraltar:"\u76f4\u5e03\u7f57\u9640",Glasgow:"\u683c\u62c9\u65af\u54e5","Global Mobile Satellite System":"\u5168\u7403\u79fb\u52a8\u536b\u661f\u7cfb\u7edf",
"Global Satellite":"\u5168\u7403\u536b\u661f",Gonghe:"\u5171\u548c\u53bf(\u6d77\u5357\u85cf\u65cf\u81ea\u6cbb\u5dde)","Gonghe \u5171\u548c\u53bf(\u6d77\u5357 \u85cf\u65cf\u81ea\u6cbb\u5dde)":"\u5171\u548c\u53bf(\u6d77\u5357 \u85cf\u65cf\u81ea\u6cbb\u5dde)",Granada:"\u683c\u62c9\u7eb3\u8fbe",Greece:"\u5e0c\u814a",Greenland:"\u683c\u9675\u5170",Grenada:"\u683c\u6797\u7eb3\u8fbe",Guadalajara:"\u74dc\u8fbe\u62c9\u54c8\u62c9",Guadaloupe:"\u54e5\u5fb7\u666e\u6d1b","Guadaloupe Island":"\u54e5\u5fb7\u666e\u6d1b\u5c9b",
Guadeloupe:"\u74dc\u5fb7\u7f57\u666e\u5c9b","Guadeloupe, Saint Barth\u00e9lemy, Saint Martin":"\u74dc\u5fb7\u7f57\u666e\u5c9b\uff0c\u5723\u5df4\u6cf0\u52d2\u7c73\uff0c\u5723\u9a6c\u4e01",Guam:"\u5173\u5c9b",GuangAn:"\u5e7f\u5b89\u5e02","GuangAn \u5e7f\u5b89\u5e02":"\u5e7f\u5b89\u5e02",Guangyuan:"\u5e7f\u5143\u5e02","Guangyuan \u5e7f\u5143\u5e02":"\u5e7f\u5143\u5e02",Guangzhou:"\u5e7f\u5dde\u5e02","Guangzhou \u5e7f\u5dde\u5e02":"\u5e7f\u5dde\u5e02",Guatemala:"\u5371\u5730\u9a6c\u62c9",Guilin:"\u6842\u6797\u5e02",
"Guilin \u6842\u6797\u5e02":"\u6842\u6797\u5e02",Guinea:"\u51e0\u5185\u4e9a","Guinea-Bissau":"\u51e0\u5185\u4e9a\u6bd4\u7ecd",Guiyang:"\u8d35\u9633\u5e02","Guiyang \u8d35\u9633\u5e02":"\u8d35\u9633\u5e02",Guyana:"\u572d\u4e9a\u90a3",Guyuan:"\u56fa\u539f\u53bf(\u56fa\u539f\u5730\u533a)","Guyuan \u56fa\u539f\u53bf (\u56fa\u539f\u5730\u533a)":"\u56fa\u539f\u53bf (\u56fa\u539f\u5730\u533a)","G\u00f6ttingen":"\u54e5\u5ef7\u6839",Haikou:"\u6d77\u53e3\u5e02","Haikou \u6d77\u53e3\u5e02":"\u6d77\u53e3\u5e02",
Hailaer:"\u6d77\u62c9\u5c14\u5e02(\u547c\u4f26\u8d1d\u5c14\u76df)","Hailaer \u6d77\u62c9\u5c14\u5e02 (\u547c\u4f26\u8d1d\u5c14\u76df)":"\u6d77\u62c9\u5c14\u5e02 (\u547c\u4f26\u8d1d\u5c14\u76df)",Haiti:"\u6d77\u5730",Haiyan:"\u6d77\u664f\u53bf(\u6d77\u5317\u85cf\u65cf\u81ea\u6cbb\u5dde)","Haiyan \u6d77\u664f\u53bf(\u6d77\u5317 \u85cf\u65cf\u81ea\u6cbb\u5dde)":"\u6d77\u664f\u53bf(\u6d77\u5317 \u85cf\u65cf\u81ea\u6cbb\u5dde)",Hamburg:"\u6c49\u5821","Hamburg, Norderstedt, Neu Wulmstorf":"\u6c49\u5821\uff0c\u8bfa\u5fb7\u65bd\u6cf0\u7279\uff0c\u7ebd\u6b66\u5c14\u59c6\u65af\u6258\u592b",
Hami:"\u54c8\u5bc6\u5e02(\u54c8\u5bc6\u5730\u533a)","Hami \u54c8\u5bc6\u5e02 (\u54c8\u5bc6\u5730\u533a)":"\u54c8\u5bc6\u5e02 (\u54c8\u5bc6\u5730\u533a)",Handan:"\u90af\u90f8\u5e02","Handan \u90af\u90f8\u5e02":"\u90af\u90f8\u5e02",Hangzhou:"\u676d\u5dde\u5e02","Hangzhou \u676d\u5dde\u5e02":"\u676d\u5dde\u5e02",Hannover:"\u6c49\u8bfa\u5a01",Hanzhong:"\u6c49\u4e2d\u5e02","Hanzhong \u6c49\u4e2d\u5e02":"\u6c49\u4e2d\u5e02",Harbin:"\u54c8\u5c14\u6ee8\u5e02","Harbin \u54c8\u5c14\u6ee8\u5e02":"\u54c8\u5c14\u6ee8\u5e02",
Hawaii:"\u590f\u5a01\u5937\u5dde",Hebi:"\u9e64\u58c1\u5e02","Hebi \u9e64\u58c1\u5e02":"\u9e64\u58c1\u5e02",Hechi:"\u6cb3\u6c60\u5e02(\u6cb3\u6c60\u5730\u533a)","Hechi \u6cb3\u6c60\u5e02 (\u6cb3\u6c60\u5730\u533a)":"\u6cb3\u6c60\u5e02 (\u6cb3\u6c60\u5730\u533a)",Hefei:"\u5408\u80a5\u5e02","Hefei \u5408\u80a5\u5e02":"\u5408\u80a5\u5e02",Hegang:"\u9e64\u5c97\u5e02","Hegang \u9e64\u5c97\u5e02":"\u9e64\u5c97\u5e02",Heihe:"\u9ed1\u6cb3\u5e02","Heihe \u9ed1\u6cb3\u5e02":"\u9ed1\u6cb3\u5e02",Hengshui:"\u8861\u6c34\u5e02",
"Hengshui \u8861\u6c34\u5e02":"\u8861\u6c34\u5e02",Hengyang:"\u8861\u9633\u5e02","Hengyang \u8861\u9633\u5e02":"\u8861\u9633\u5e02",Hetian:"\u548c\u7530\u5e02(\u548c\u7530\u5730\u533a)","Hetian \u548c\u7530\u5e02 (\u548c\u7530\u5730\u533a)":"\u548c\u7530\u5e02 (\u548c\u7530\u5730\u533a)",Heyuan:"\u6cb3\u6e90\u5e02","Heyuan \u6cb3\u6e90\u5e02":"\u6cb3\u6e90\u5e02",Heze:"\u8377\u6cfd\u5e02(\u8377\u6cfd\u5730\u533a)","Heze \u8377\u6cfd\u5e02 (\u8377\u6cfd\u5730\u533a)":"\u8377\u6cfd\u5e02 (\u8377\u6cfd\u5730\u533a)",
Hezuo:"\u5408\u4f5c\u5e02(\u7518\u5357\u85cf\u65cf\u81ea\u6cbb\u5dde)","Hezuo \u5408\u4f5c\u5e02(\u7518\u5357 \u85cf\u65cf\u81ea\u6cbb\u5dde)":"\u5408\u4f5c\u5e02(\u7518\u5357 \u85cf\u65cf\u81ea\u6cbb\u5dde)",Honduras:"\u6d2a\u90fd\u62c9\u65af","Hong Kong":"\u9999\u6e2f",Huaian:"\u6dee\u9634\u5e02","Huaian \u6dee\u9634\u5e02":"\u6dee\u9634\u5e02",Huaibei:"\u6dee\u5317\u5e02","Huaibei \u6dee\u5317\u5e02":"\u6dee\u5317\u5e02",Huaihua:"\u6000\u5316\u5e02","Huaihua \u6000\u5316\u5e02":"\u6000\u5316\u5e02",
Huainan:"\u6dee\u5357\u5e02","Huainan \u6dee\u5357\u5e02":"\u6dee\u5357\u5e02",Huanggang:"\u9ec4\u5188\u5e02","Huanggang \u9ec4\u5188\u5e02":"\u9ec4\u5188\u5e02",Huangshan:"\u9ec4\u5c71\u5e02","Huangshan \u9ec4\u5c71\u5e02":"\u9ec4\u5c71\u5e02",Huangshi:"\u9ec4\u77f3\u5e02","Huangshi \u9ec4\u77f3\u5e02":"\u9ec4\u77f3\u5e02",Huhehaote:"\u547c\u548c\u6d69\u7279\u5e02","Huhehaote \u547c\u548c\u6d69\u7279\u5e02":"\u547c\u548c\u6d69\u7279\u5e02",Huizhou:"\u60e0\u5dde\u5e02","Huizhou \u60e0\u5dde\u5e02":"\u60e0\u5dde\u5e02",
Huludao:"\u846b\u82a6\u5c9b\u5e02","Huludao \u846b\u82a6\u5c9b\u5e02":"\u846b\u82a6\u5c9b\u5e02",Hunchun:"\u73f2\u6625\u5e02","Hunchun \u73f2\u6625\u5e02, Yanji \u5ef6\u5409\u5e02(\u5ef6\u8fb9 \u671d\u9c9c\u65cf\u81ea\u6cbb\u5dde)":"\u73f2\u6625\u5e02,\u5ef6\u5409\u5e02(\u5ef6\u8fb9 \u671d\u9c9c\u65cf\u81ea\u6cbb\u5dde)",Hungary:"\u5308\u7259\u5229",Huzhou:"\u6e56\u5dde\u5e02","Huzhou \u6e56\u5dde\u5e02":"\u6e56\u5dde\u5e02",Hyderabad:"\u6d77\u5f97\u62c9\u5df4","Hyderabad East (Ghatkeswar), Hyderabad":"\u4e1c\u6d77\u5f97\u62c9\u5df4\uff08Ghatkeswar\uff09\uff0c\u6d77\u5f97\u62c9\u5df4",
"Hyderabad West (Shamshabad), Hyderabad":"\u897f\u6d77\u5f97\u62c9\u5df4\uff08Shamshabad\uff09\uff0c\u6d77\u5f97\u62c9\u5df4",ITPCS:"\u56fd\u9645\u7535\u4fe1\u4e2a\u4eba\u901a\u8baf\u670d\u52a1\uff08ITPCS\uff09",Iceland:"\u51b0\u5c9b",Idaho:"\u7231\u8fbe\u8377\u5dde",Illinois:"\u4f0a\u5229\u8bfa\u4f0a\u5dde","Illinois: Aurora, Naperville, western Chicago":"\u4f0a\u5229\u8bfa\u4f0a\uff1aAurora, Naperville, \u829d\u52a0\u54e5\u897f\u90e8","Illinois: Aurora, Naperville, western Chicago suburbs":"\u4f0a\u5229\u8bfa\u4f0a\u5dde\uff1aAurora, Naperville, \u829d\u52a0\u54e5\u897f\u90e8\u90ca\u533a",
"Illinois: Chicago":"\u4f0a\u5229\u8bfa\u4f0a\uff1aChicago","Illinois: Chicago Heights, Evergreen Park, Tinley Park, Elmwood Park, Cicero, Oak Forest, Oak Park, Berwyn, western Chicago suburbs":"\u4f0a\u5229\u8bfa\u4f0a\u5dde\uff1aChicago Heights, Evergreen Park, Tinley Park, Elmwood Park, Cicero, Oak Forest, Oak Park, Berwyn, \u829d\u52a0\u54e5\u897f\u90e8\u90ca\u533a","Inbound Intl.":"\u6253\u5165\u7684\u56fd\u9645\u7535\u8bdd\u6765\u7535","Inbound international calls for carrier-specific services":"\u901a\u8fc7\u7279\u5b9a\u63d0\u4f9b\u5546\u670d\u52a1\u6253\u5165\u7684\u56fd\u9645\u7535\u8bdd",
India:"\u5370\u5ea6",Indiana:"\u5370\u7b2c\u5b89\u7eb3\u5dde","Indiana: Southern Indiana, including Bloomington, Evansville, Jeffersonville, New Albany, and Terre Haute).":"\u5370\u7b2c\u5b89\u7eb3\u5dde\uff1aSouthern Indiana, including Bloomington, Evansville, Jeffersonville, New Albany, and Terre Haute).",Indonesia:"\u5370\u5ea6\u5c3c\u897f\u4e9a",Inmarsat:"\u56fd\u9645\u6d77\u4e8b\u536b\u661f\u7ec4\u7ec7","International National Rate Service":"\u56fd\u9645\u56fd\u5185\u8d39\u7387\u670d\u52a1",
"International Networks":"\u56fd\u9645\u7f51\u7edc","International Networks (country code)":"\u56fd\u9645\u7f51\u7edc\uff08\u56fd\u5bb6\u4ee3\u7801\uff09","International Premium Rate Service":"\u56fd\u9645900\u533a\u53f7\u670d\u52a1",Iowa:"\u7231\u8377\u534e\u5dde",Iran:"\u4f0a\u6717",Iraq:"\u4f0a\u62c9\u514b",Ireland:"\u7231\u5c14\u5170","Islands of R\u00e9union and Mayotte":"\u7559\u5c3c\u6c6a\u548c\u9a6c\u7ea6\u7279\u5c9b",Israel:"\u4ee5\u8272\u5217","Israel, Palestinian Authority":"\u4ee5\u8272\u5217\uff0c\u5df4\u52d2\u65af\u5766\u6743\u529b\u673a\u6784",
Italy:"\u610f\u5927\u5229","Italy, Vatican City":"\u610f\u5927\u5229\uff0c\u68b5\u8482\u5188\u57ce",Jamaica:"\u7259\u4e70\u52a0",Japan:"\u65e5\u672c",JiAn:"\u5409\u5b89\u5e02","JiAn \u5409\u5b89\u5e02":"\u5409\u5b89\u5e02",Jiagedaqi:"\u52a0\u683c\u8fbe\u5947(\u5927\u5174\u5b89\u5cad\u5730\u533a)","Jiagedaqi \u52a0\u683c\u8fbe\u5947 (\u5927\u5174\u5b89\u5cad\u5730\u533a)":"\u52a0\u683c\u8fbe\u5947 (\u5927\u5174\u5b89\u5cad\u5730\u533a)",Jiali:"\u5609\u9ece\u53bf","Jiali \u5609\u9ece\u53bf":"\u5609\u9ece\u53bf",
Jiamusi:"\u4f73\u6728\u65af\u5e02","Jiamusi \u4f73\u6728\u65af\u5e02":"\u4f73\u6728\u65af\u5e02",Jiangmen:"\u6c5f\u95e8\u5e02","Jiangmen \u6c5f\u95e8\u5e02":"\u6c5f\u95e8\u5e02",Jiaozuo:"\u7126\u4f5c\u5e02","Jiaozuo \u7126\u4f5c\u5e02":"\u7126\u4f5c\u5e02",Jiaxing:"\u5609\u5174\u5e02","Jiaxing \u5609\u5174\u5e02":"\u5609\u5174\u5e02",Jieyang:"\u63ed\u9633\u5e02","Jieyang \u63ed\u9633\u5e02":"\u63ed\u9633\u5e02",Jilin:"\u5409\u6797\u5e02","Jilin \u5409\u6797\u5e02":"\u5409\u6797\u5e02",Jinan:"\u6d4e\u5357\u5e02",
"Jinan \u6d4e\u5357\u5e02":"\u6d4e\u5357\u5e02",Jinchang:"\u91d1\u660c\u5e02","Jinchang \u91d1\u660c\u5e02":"\u91d1\u660c\u5e02",Jincheng:"\u664b\u57ce\u5e02","Jincheng \u664b\u57ce\u5e02":"\u664b\u57ce\u5e02",Jingdezhen:"\u666f\u5fb7\u9547\u5e02","Jingdezhen \u666f\u5fb7\u9547\u5e02":"\u666f\u5fb7\u9547\u5e02",Jinghong:"\u666f\u6d2a\u5e02(\u897f\u53cc\u7248\u7eb3\u50a3\u65cf\u81ea\u6cbb\u5dde)","Jinghong \u666f\u6d2a\u5e02 (\u897f\u53cc\u7248\u7eb3 \u50a3\u65cf\u81ea\u6cbb\u5dde )":"\u666f\u6d2a\u5e02 (\u897f\u53cc\u7248\u7eb3 \u50a3\u65cf\u81ea\u6cbb\u5dde )",
Jingmen:"\u8346\u95e8\u5e02","Jingmen \u8346\u95e8\u5e02":"\u8346\u95e8\u5e02",Jingzhou:"\u8346\u5dde\u5e02","Jingzhou \u8346\u5dde\u5e02":"\u8346\u5dde\u5e02",Jinhua:"\u91d1\u534e\u5e02","Jinhua \u91d1\u534e\u5e02":"\u91d1\u534e\u5e02",Jining:"\u96c6\u5b81\u5e02(\u4e4c\u5170\u5bdf\u5e03\u76df)","Jining \u6d4e\u5b81\u5e02":"\u6d4e\u5b81\u5e02","Jining \u96c6\u5b81\u5e02 (\u4e4c\u5170\u5bdf\u5e03\u76df)":"\u96c6\u5b81\u5e02 (\u4e4c\u5170\u5bdf\u5e03\u76df)",Jinzhou:"\u9526\u5dde\u5e02","Jinzhou \u9526\u5dde\u5e02":"\u9526\u5dde\u5e02",
Jishou:"\u5409\u9996\u5e02(\u6e58\u897f\u571f\u5bb6\u65cf\u82d7\u65cf\u81ea\u6cbb\u5dde)","Jishou \u5409\u9996\u5e02 (\u6e58\u897f\u571f\u5bb6\u65cf \u82d7\u65cf\u81ea\u6cbb\u5dde)":"\u5409\u9996\u5e02 (\u6e58\u897f\u571f\u5bb6\u65cf \u82d7\u65cf\u81ea\u6cbb\u5dde)",Jiujiang:"\u4e5d\u6c5f\u5e02","Jiujiang \u4e5d\u6c5f\u5e02":"\u4e5d\u6c5f\u5e02",Jiuquan:"\u9152\u6cc9\u5e02(\u9152\u6cc9\u5730\u533a)","Jiuquan \u9152\u6cc9\u5e02 (\u9152\u6cc9\u5730\u533a)":"\u9152\u6cc9\u5e02 (\u9152\u6cc9\u5730\u533a)",
Jixi:"\u9e21\u897f\u5e02","Jixi \u9e21\u897f\u5e02":"\u9e21\u897f\u5e02",Jordan:"\u7ea6\u65e6",Kaifeng:"\u5f00\u5c01\u5e02","Kaifeng \u5f00\u5c01\u5e02":"\u5f00\u5c01\u5e02",Kaili:"\u51ef\u91cc\u5e02(\u9ed4\u4e1c\u5357\u82d7\u65cf\u4f97\u65cf\u81ea\u6cbb\u5dde)","Kaili \u51ef\u91cc\u5e02 (\u9ed4\u4e1c\u5357\u82d7\u65cf \u4f97\u65cf\u81ea\u6cbb\u5dde )":"\u51ef\u91cc\u5e02 (\u9ed4\u4e1c\u5357\u82d7\u65cf \u4f97\u65cf\u81ea\u6cbb\u5dde   )",Kalamayi:"\u514b\u62c9\u739b\u4f9d\u5e02","Kalamayi \u514b\u62c9\u739b\u4f9d\u5e02":"\u514b\u62c9\u739b\u4f9d\u5e02",
Kangding:"\u5eb7\u5b9a\u53bf(\u7518\u5b5c\u85cf\u65cf\u81ea\u6cbb\u5dde)","Kangding \u5eb7\u5b9a\u53bf(\u7518\u5b5c \u85cf\u65cf\u81ea\u6cbb\u5dde)":"\u5eb7\u5b9a\u53bf(\u7518\u5b5c \u85cf\u65cf\u81ea\u6cbb\u5dde)",Kansas:"\u582a\u8428\u65af\u5dde","Kansas: Wichita, Augusta, El Dorado, Mulvane":"\u582a\u8428\u65af\u5dde\uff1aWichita, Augusta, El Dorado, Mulvane",Karlsruhe:"\u5361\u5c14\u65af\u9c81\u5384","Karlsruhe, Eggenstein-Leopoldshafen, Pfinztal-Berghausen (Baden), Rheinstetten, Stutensee,":"\u5361\u5c14\u65af\u9c81\u5384\uff0cEggenstein-Leopoldshafen\uff0c\u666e\u82ac\u8328\u5854\u5c14-Berghausen\uff08\u5df4\u767b\uff09\uff0c\u83b1\u8335\u65bd\u6cf0\u6ed5\uff0c\u65bd\u56fe\u6ed5\u585e\uff0c",
Kashi:"\u5580\u4ec0\u5e02(\u5580\u4ec0\u5730\u533a)","Kashi \u5580\u4ec0\u5e02 (\u5580\u4ec0\u5730\u533a)":"\u5580\u4ec0\u5e02 (\u5580\u4ec0\u5730\u533a)",Kentucky:"\u80af\u5854\u57fa\u5dde","Kentucky: west of the Pennyrile Parkway, including Fort Campbell, Henderson, Hopkinsville, Madisonville, Murray, and Paducah":"\u80af\u5854\u57fa\u5dde\uff1aPennyrile Parkway\u897f\u90e8, \u5305\u62ecFort Campbell, Henderson, Hopkinsville, Madisonville, Murray\u548cPaducah",Kenya:"\u80af\u5c3c\u4e9a",Kiel:"\u57fa\u5c14",
Kiribati:"\u57fa\u91cc\u5df4\u65af",Kolkata:"\u52a0\u5c14\u5404\u7b54","Kolkata, Kolkata":"\u52a0\u5c14\u5404\u7b54\uff0c\u52a0\u5c14\u5404\u7b54",Konstanz:"\u5eb7\u65af\u5766\u8328","Konstanz, Reichenau":"\u5eb7\u65af\u5766\u8328\uff0c\u8d56\u6b47\u7459",Krakow:"\u514b\u62c9\u79d1\u592b",KuErle:"\u5e93\u5c14\u52d2\u5e02(\u5df4\u97f3\u90ed\u695e\u8499\u53e4\u81ea\u6cbb\u5dde)","KuErle \u5e93\u5c14\u52d2\u5e02 (\u5df4\u97f3\u90ed\u695e \u8499\u53e4\u81ea\u6cbb\u5dde)":"\u5e93\u5c14\u52d2\u5e02 (\u5df4\u97f3\u90ed\u695e \u8499\u53e4\u81ea\u6cbb\u5dde)",
Kuitun:"\u594e\u5c6f\u5e02","Kuitun \u594e\u5c6f\u5e02":"\u594e\u5c6f\u5e02",Kunming:"\u6606\u660e\u5e02","Kunming \u6606\u660e\u5e02":"\u6606\u660e\u5e02",Kuwait:"\u79d1\u5a01\u7279",Kyrgyzstan:"\u5409\u5c14\u5409\u65af\u65af\u5766","LD Carrier":"\u957f\u9014\u7535\u8bdd\u63d0\u4f9b\u5546","La Rioja":"\u62c9\u91cc\u5965\u54c8",Laiwu:"\u83b1\u829c\u5e02","Laiwu \u83b1\u829c\u5e02":"\u83b1\u829c\u5e02",Langfang:"\u5eca\u574a\u5e02","Langfang \u5eca\u574a\u5e02":"\u5eca\u574a\u5e02",Lanzhou:"\u5170\u5dde\u5e02",
"Lanzhou \u5170\u5dde\u5e02":"\u5170\u5dde\u5e02",Laos:"\u8001\u631d","Las Palmas":"\u62c9\u65af\u5e15\u5c14\u9a6c\u65af",Latvia:"\u62c9\u8131\u7ef4\u4e9a",Lebanon:"\u9ece\u5df4\u5ae9",Leeds:"\u5229\u5179",Leicester:"\u83b1\u65af\u7279",Leipzig:"\u83b1\u6bd4\u9521",Leshan:"\u4e50\u5c71\u5e02","Leshan \u4e50\u5c71\u5e02":"\u4e50\u5c71\u5e02",Lesotho:"\u83b1\u7d22\u6258","Le\u00f3n":"\u83b1\u6602",Lhasa:"\u62c9\u8428\u5e02","Lhasa \u62c9\u8428\u5e02":"\u62c9\u8428\u5e02",Lianyungang:"\u8fde\u4e91\u6e2f\u5e02",
"Lianyungang \u8fde\u4e91\u6e2f\u5e02":"\u8fde\u4e91\u6e2f\u5e02",Liaocheng:"\u804a\u57ce\u5e02(\u804a\u57ce\u5730\u533a)","Liaocheng \u804a\u57ce\u5e02 (\u804a\u57ce\u5730\u533a)":"\u804a\u57ce\u5e02 (\u804a\u57ce\u5730\u533a)",Liaoyang:"\u8fbd\u9633\u5e02","Liaoyang \u8fbd\u9633\u5e02":"\u8fbd\u9633\u5e02",Liaoyuan:"\u8fbd\u6e90\u5e02","Liaoyuan \u8fbd\u6e90\u5e02":"\u8fbd\u6e90\u5e02",Liberia:"\u5229\u6bd4\u91cc\u4e9a",Libya:"\u5229\u6bd4\u4e9a",Lichtenstein:"\u5229\u5e0c\u6ed5\u65af\u5766","Lichtenstein, Engstingen":"\u5229\u5e0c\u6ed5\u65af\u5766\uff0c\u6069\u65af\u5ef7\u6839",
Liechtenstein:"\u5217\u652f\u6566\u58eb\u767b",Lijiang:"\u4e3d\u6c5f\u7eb3\u897f\u65cf\u81ea\u6cbb\u53bf(\u4e3d\u6c5f\u5730\u533a)","Lijiang \u4e3d\u6c5f\u7eb3\u897f\u65cf \u81ea\u6cbb\u53bf (\u4e3d\u6c5f\u5730\u533a)":"\u4e3d\u6c5f\u7eb3\u897f\u65cf \u81ea\u6cbb\u53bf (\u4e3d\u6c5f\u5730\u533a)",Lincang:"\u4e34\u6ca7\u53bf(\u4e34\u6ca7\u5730\u533a)","Lincang \u4e34\u6ca7\u53bf (\u4e34\u6ca7\u5730\u533a)":"\u4e34\u6ca7\u53bf (\u4e34\u6ca7\u5730\u533a)",Linfen:"\u4e34\u6c7e\u5e02(\u4e34\u6c7e\u5730\u533a)",
"Linfen \u4e34\u6c7e\u5e02 (\u4e34\u6c7e\u5730\u533a)":"\u4e34\u6c7e\u5e02 (\u4e34\u6c7e\u5730\u533a)",Linhe:"\u4e34\u6cb3\u5e02(\u5df4\u5f66\u6dd6\u5c14\u76df)","Linhe \u4e34\u6cb3\u5e02 (\u5df4\u5f66\u6dd6\u5c14\u76df)":"\u4e34\u6cb3\u5e02 (\u5df4\u5f66\u6dd6\u5c14\u76df)",Linxia:"\u4e34\u590f\u5e02(\u4e34\u590f\u56de\u65cf\u81ea\u6cbb\u5dde)","Linxia \u4e34\u590f\u5e02(\u4e34\u590f \u56de\u65cf\u81ea\u6cbb\u5dde)":"\u4e34\u590f\u5e02(\u4e34\u590f \u56de\u65cf\u81ea\u6cbb\u5dde)",Linyi:"\u4e34\u6c82\u5e02(\u4e34\u6c82\u5730\u533a)",
"Linyi \u4e34\u6c82\u5e02 (\u4e34\u6c82\u5730\u533a)":"\u4e34\u6c82\u5e02 (\u4e34\u6c82\u5730\u533a)",Linzhi:"\u6797\u829d\u53bf(\u6797\u829d\u5730\u533a)","Linzhi \u6797\u829d\u53bf (\u6797\u829d\u5730\u533a)":"\u6797\u829d\u53bf (\u6797\u829d\u5730\u533a)",Lishi:"\u79bb\u77f3\u5e02(\u5415\u6881\u5730\u533a)","Lishi \u79bb\u77f3\u5e02 (\u5415\u6881\u5730\u533a)":"\u79bb\u77f3\u5e02 (\u5415\u6881\u5730\u533a)",Lishui:"\u4e3d\u6c34\u5e02","Lishui \u4e3d\u6c34\u5e02":"\u4e3d\u6c34\u5e02",Lithuania:"\u7acb\u9676\u5b9b",
LiuAn:"\u516d\u5b89\u5e02","LiuAn \u516d\u5b89\u5e02":"\u516d\u5b89\u5e02",Liuku:"\u516d\u5e93\u5e02(\u6012\u6c5f\u5088\u5088\u65cf\u81ea\u6cbb\u5dde)","Liuku \u516d\u5e93\u5e02(\u6012\u6c5f \u5088\u5088\u65cf\u81ea\u6cbb\u5dde)":"\u516d\u5e93\u5e02(\u6012\u6c5f \u5088\u5088\u65cf\u81ea\u6cbb\u5dde)",Liupanshui:"\u516d\u76d8\u6c34\u5e02","Liupanshui \u516d\u76d8\u6c34\u5e02":"\u516d\u76d8\u6c34\u5e02",Liuzhou:"\u67f3\u5dde\u5e02","Liuzhou \u67f3\u5dde\u5e02":"\u67f3\u5dde\u5e02",Liverpool:"\u5229\u7269\u6d66",
London:"\u4f26\u6566","Long Distance Carrier Use":"\u4f9b\u957f\u9014\u7535\u8bdd\u63d0\u4f9b\u5546\u4f7f\u7528",Longyan:"\u9f99\u5ca9\u5e02","Longyan \u9f99\u5ca9\u5e02":"\u9f99\u5ca9\u5e02",Loudi:"\u5a04\u5e95\u5e02","Loudi \u5a04\u5e95\u5e02":"\u5a04\u5e95\u5e02",Louisiana:"\u8def\u6613\u65af\u5b89\u90a3\u5dde","Louisiana: New Orleans, Metairie, Kenner":"\u8def\u6613\u65af\u5b89\u90a3\u5dde\uff1a\u65b0\u5965\u5c14\u826f, Metairie, Kenner",Luohe:"\u6f2f\u6cb3\u5e02","Luohe \u6f2f\u6cb3\u5e02":"\u6f2f\u6cb3\u5e02",
Luoyang:"\u6d1b\u9633\u5e02","Luoyang \u6d1b\u9633\u5e02":"\u6d1b\u9633\u5e02",Luxembourg:"\u5362\u68ee\u5821",Luxi:"\u6f5e\u897f\u5e02(\u5fb7\u5b8f\u50a3\u65cf\u666f\u9887\u65cf\u81ea\u6cbb\u5dde)","Luxi \u6f5e\u897f\u5e02 (\u5fb7\u5b8f\u50a3\u65cf \u666f\u9887\u65cf\u81ea\u6cbb\u5dde)":"\u6f5e\u897f\u5e02 (\u5fb7\u5b8f\u50a3\u65cf \u666f\u9887\u65cf\u81ea\u6cbb\u5dde)",Luzhou:"\u6cf8\u5dde\u5e02","Luzhou \u6cf8\u5dde\u5e02":"\u6cf8\u5dde\u5e02",MaAnshan:"\u9a6c\u978d\u5c71\u5e02","MaAnshan \u9a6c\u978d\u5c71\u5e02":"\u9a6c\u978d\u5c71\u5e02",
MaErkang:"\u9a6c\u5c14\u5eb7\u53bf(\u963f\u575d\u85cf\u65cf\u7f8c\u65cf\u81ea\u6cbb\u5dde)","MaErkang \u9a6c\u5c14\u5eb7\u53bf (\u963f\u575d\u85cf\u65cf \u7f8c\u65cf\u81ea\u6cbb\u5dde)":"\u9a6c\u5c14\u5eb7\u53bf (\u963f\u575d\u85cf\u65cf \u7f8c\u65cf\u81ea\u6cbb\u5dde)",Macau:"\u6fb3\u95e8",Madagascar:"\u9a6c\u8fbe\u52a0\u65af\u52a0",Madrid:"\u9a6c\u5fb7\u91cc",Maine:"\u7f05\u56e0\u5dde",Malaga:"\u9a6c\u62c9\u52a0",Malawi:"\u9a6c\u62c9\u7ef4",Malaysia:"\u9a6c\u6765\u897f\u4e9a",Maldives:"\u9a6c\u5c14\u4ee3\u592b",
Mali:"\u9a6c\u91cc",Malta:"\u9a6c\u8033\u4ed6",Manchester:"\u66fc\u5f7b\u65af\u7279",Manitoba:"\u9a6c\u5c3c\u6258\u5df4","Manitoba, Canada":"\u9a6c\u5c3c\u6258\u5df4\uff0c\u52a0\u62ff\u5927",Maoming:"\u8302\u540d\u5e02","Maoming \u8302\u540d\u5e02":"\u8302\u540d\u5e02",Maqin:"\u739b\u6c81\u53bf(\u679c\u6d1b\u85cf\u65cf\u81ea\u6cbb\u5dde)","Maqin \u739b\u6c81\u53bf(\u679c\u6d1b \u85cf\u65cf\u81ea\u6cbb\u5dde)":"\u739b\u6c81\u53bf(\u679c\u6d1b \u85cf\u65cf\u81ea\u6cbb\u5dde)","Marshall Islands":"\u9a6c\u7ecd\u5c14\u7fa4\u5c9b",
Martinique:"\u9a6c\u63d0\u5c3c\u514b","Martinique Island":"\u9a6c\u63d0\u5c3c\u514b\u5c9b",Maryland:"\u9a6c\u91cc\u5170\u5dde",Massachusetts:"\u9a6c\u8428\u8bf8\u585e\u5dde",Mauritania:"\u6bdb\u91cc\u5854\u5c3c\u4e9a",Mauritius:"\u6bdb\u91cc\u6c42\u65af",Meizhou:"\u6885\u5dde\u5e02","Meizhou \u6885\u5dde\u5e02":"\u6885\u5dde\u5e02",Mexico:"\u58a8\u897f\u54e5","Mexico City":"\u58a8\u897f\u54e5\u57ce","Mexico City, Federal District":"\u58a8\u897f\u54e5\u57ce\u8054\u90a6\u533a",Mianyang:"\u7ef5\u9633\u5e02",
"Mianyang \u7ef5\u9633\u5e02":"\u7ef5\u9633\u5e02",Michigan:"\u5bc6\u6b47\u6839\u5dde","Michigan: Dearborn, Detroit, Hamtramck, Highland Park":"\u5bc6\u6b47\u6839\uff1aDearborn, Detroit, Hamtramck, Highland Park","Michigan: Oakland County":"\u5bc6\u6b47\u6839\uff1aOakland County",'Michigan: Port Huron, Flint, Lapeer, and Michigan "Thumb"':"\u5bc6\u6b47\u6839\uff1aPort Huron\u3001 Flint\u3001Lapeer\u548c\u5bc6\u6b47\u6839\u201c\u62c7\u6307\u201d\u533a","Michigan: Warren, Sterling Heights, Macomb County":"\u5bc6\u6b47\u6839\uff1aWarren, Sterling Heights, Macomb County",
Micronesia:"\u5bc6\u514b\u7f57\u5c3c\u897f\u4e9a",Minnesota:"\u660e\u5c3c\u82cf\u8fbe\u5dde","Minnesota: Bloomington, Minnetonka, Chaska, Minneapolis":"\u660e\u5c3c\u82cf\u8fbe\u5dde\uff1aBloomington, Minnetonka, Chaska, Minneapolis","Minnesota: Maple Grove, Monticello, Elk River, Fridley, Blaine, northwest Minneapolis":"\u660e\u5c3c\u82cf\u8fbe\u5dde\uff1aMaple Grove, Monticello, Elk River, Fridley, Blaine, \u660e\u5c3c\u963f\u6ce2\u5229\u65af\u897f\u5317","Minnesota: Minneapolis, Fort Snelling, St Anthony, Richfield":"\u660e\u5c3c\u82cf\u8fbe\u5dde\uff1aMinneapolis, Fort Snelling, St Anthony, Richfield",
Mississippi:"\u5bc6\u897f\u897f\u6bd4\u5dde",Missouri:"\u5bc6\u82cf\u91cc\u5dde","Missouri: Columbia, Jefferson City, Hannibal, Cape Girardeau, Poplar Bluff, Farmington, Park Hills, Lake Ozark and eastern Missouri excluding St. Louis":"\u5bc6\u82cf\u91cc\u5dde\uff1aColumbia, Jefferson City, Hannibal, Cape Girardeau, Poplar Bluff, Farmington, Park Hills, Lake Ozark \u548c\u5bc6\u82cf\u91cc\u5dde\u4e1c\u90e8\uff0c\u4e0d\u542b St. Louis","Missouri: St. Louis, Florissant, Crestwood, Affton":"\u5bc6\u82cf\u91cc\u5dde\uff1aSt. Louis, Florissant, Crestwood, Affton",
"Mobile Number":"\u624b\u673a\u53f7\u7801",Moldova:"\u6469\u5c14\u591a\u74e6",Monaco:"\u6469\u7eb3\u54e5",Mongolia:"\u8499\u53e4",Montana:"\u8499\u5927\u62ff\u5dde",Montenegro:"\u9ed1\u5c71",Morocco:"\u6469\u6d1b\u54e5","Morocco, Western Sahara":"\u6469\u6d1b\u54e5\uff0c\u897f\u6492\u54c8\u62c9",Mozambique:"\u83ab\u6851\u6bd4\u514b",Mudanjiang:"\u7261\u4e39\u6c5f\u5e02","Mudanjiang \u7261\u4e39\u6c5f\u5e02":"\u7261\u4e39\u6c5f\u5e02",Mumbai:"\u5b5f\u4e70","Mumbai, Mumbai":"\u5b5f\u4e70\uff0c\u5b5f\u4e70",
Munich:"\u6155\u5c3c\u9ed1",Murcia:"\u7a46\u5c14\u897f\u4e9a","N Alberta":"\u4e9a\u4f2f\u8fbe\u5317\u90e8","N California":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u5317\u90e8","N Georgia":"\u4e54\u6cbb\u4e9a\u5317\u90e8","N Illinois":"\u4f0a\u5229\u8bfa\u4f0a\u5dde\u5317\u90e8","N Kansas":"\u582a\u8428\u65af\u5dde\u5317\u90e8","N Kentucky":"\u80af\u5854\u57fa\u5dde\u5317\u90e8","N Louisiana":"\u8def\u6613\u65af\u5b89\u90a3\u5dde\u5317\u90e8","N Michigan":"\u5bc6\u6b47\u6839\u5317\u90e8","N Minnesota":"\u660e\u5c3c\u82cf\u8fbe\u5dde\u5317\u90e8",
"N Mississippi":"\u5bc6\u897f\u897f\u6bd4\u5dde\u5317\u90e8","N Ohio":"\u4fc4\u4ea5\u4fc4\u5317\u90e8","N Texas":"\u5fb7\u514b\u8428\u65af\u5dde\u5317\u90e8","N Virginia":"\u5f17\u5409\u5c3c\u4e9a\u5dde\u5317\u90e8","N Wisconsin":"\u5a01\u65af\u5eb7\u661f\u5317\u90e8","NE Alabama":"\u4e9a\u62c9\u5df4\u9a6c\u5dde\u4e1c\u5317\u90e8","NE California":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u4e1c\u5317\u90e8","NE Florida":"\u4f5b\u7f57\u91cc\u8fbe\u5dde\u4e1c\u5317\u90e8","NE Illinois":"\u4f0a\u5229\u8bfa\u4f0a\u5dde\u4e1c\u5317\u90e8",
"NE Indiana":"\u5370\u5730\u5b89\u90a3\u5dde\u4e1c\u5317\u90e8","NE Massachusetts":"\u9a6c\u8428\u8bf8\u585e\u5dde\u4e1c\u5317\u90e8","NE New York":"\u7ebd\u7ea6\u5dde\u4e1c\u5317\u90e8","NE North Carolina":"\u5317\u5361\u7f57\u83b1\u7eb3\u5dde\u4e1c\u5317\u90e8","NE Ohio":"\u4fc4\u4ea5\u4fc4\u4e1c\u5317\u90e8","NE Oklahoma":"\u4fc4\u514b\u62c9\u8377\u9a6c\u5dde\u4e1c\u5317\u90e8","NE Pennsylvania":"\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u4e1c\u5317\u90e8","NE Texas":"\u5fb7\u514b\u8428\u65af\u5dde\u4e1c\u5317\u90e8",
"NW Arizona":"\u4e9a\u5229\u6851\u90a3\u5dde\u897f\u5317\u90e8","NW Arkansas":"\u963f\u80af\u8272\u5dde\u897f\u5317\u90e8","NW California":"\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u897f\u5317\u90e8","NW Colorado":"\u79d1\u7f57\u62c9\u591a\u5dde\u897f\u5317\u90e8","NW Florida":"\u4f5b\u7f57\u91cc\u8fbe\u5dde\u897f\u5317\u90e8","NW Indiana":"\u5370\u7b2c\u5b89\u7eb3\u5dde\u897f\u5317\u90e8","NW Michigan":"\u5bc6\u6b47\u6839\u5dde\u897f\u5317\u90e8","NW New Jersey":"\u65b0\u6cfd\u897f\u5dde\u897f\u5317\u90e8",
"NW New Mexico":"\u65b0\u58a8\u897f\u54e5\u5dde\u897f\u5317\u90e8","NW Ohio":"\u4fc4\u4ea5\u4fc4\u5dde\u897f\u5317\u90e8","NW Ontario":"\u5b89\u5927\u7565\u7701\u897f\u5317\u90e8","NW Oregon":"\u4fc4\u52d2\u5188\u5dde\u897f\u5317\u90e8","NW Pennsylvania":"\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u897f\u5317\u90e8",Naidong:"\u4e43\u4e1c\u53bf(\u5c71\u5357\u5730\u533a)","Naidong \u4e43\u4e1c\u53bf (\u5c71\u5357\u5730\u533a)":"\u4e43\u4e1c\u53bf (\u5c71\u5357\u5730\u533a)",Namibia:"\u7eb3\u7c73\u6bd4\u4e9a",
Nanchang:"\u5357\u660c\u5e02","Nanchang \u5357\u660c\u5e02":"\u5357\u660c\u5e02",Nanchong:"\u5357\u5145\u5e02","Nanchong \u5357\u5145\u5e02":"\u5357\u5145\u5e02",Nanjing:"\u5357\u4eac",Nanning:"\u5357\u5b81\u5e02","Nanning \u5357\u5b81\u5e02":"\u5357\u5b81\u5e02",Nanping:"\u5357\u5e73\u5e02","Nanping \u5357\u5e73\u5e02":"\u5357\u5e73\u5e02",Nantong:"\u5357\u901a\u5e02","Nantong \u5357\u901a\u5e02":"\u5357\u901a\u5e02",Nanyang:"\u5357\u9633\u5e02","Nanyang \u5357\u9633\u5e02":"\u5357\u9633\u5e02",
Naqu:"\u90a3\u66f2\u53bf(\u90a3\u66f2\u5730\u533a)","Naqu \u90a3\u66f2\u53bf (\u90a3\u66f2\u5730\u533a)":"\u90a3\u66f2\u53bf (\u90a3\u66f2\u5730\u533a)","National Rate":"\u5168\u56fd\u8d39\u7387",Nauru:"\u7459\u9c81",Navarra:"\u7eb3\u74e6\u62c9",Nebraska:"\u5185\u5e03\u62c9\u65af\u52a0\u5229\u798f\u5229\u4e9a\u5dde",Neijiang:"\u5185\u6c5f\u5e02","Neijiang \u5185\u6c5f\u5e02, Ziyang \u8d44\u9633\u5e02":"\u5185\u6c5f\u5e02,\u8d44\u9633\u5e02",Nepal:"\u5c3c\u6cca\u5c14",Netherlands:"\u8377\u5170","Netherlands Antilles":"\u8377\u5c5e\u5b89\u7684\u5217\u65af",
Nevada:"\u5185\u534e\u8fbe\u5dde","Nevada: Clark County, Las Vegas, Henderson, Boulder City":"\u5185\u534e\u8fbe\u5dde\uff1aClark County, Las Vegas, Henderson, Boulder City","Nevada: Reno, Elko, Ely":"\u5185\u534e\u8fbe\u5dde\uff1aReno, Elko, Ely","New Brunswick":"\u65b0\u4e0d\u4f26\u745e\u514b","New Brunswick, Canada":"\u52a0\u62ff\u5927\u65b0\u4e0d\u4f26\u745e\u514b","New Caledonia":"\u65b0\u5580\u91cc\u591a\u5c3c\u4e9a","New Delhi":"\u65b0\u5fb7\u91cc","New Delhi, New Delhi":"\u65b0\u5fb7\u91cc\uff0c\u65b0\u5fb7\u91cc",
"New Hampshire":"\u65b0\u7f55\u5e03\u4ec0\u5c14\u5dde","New Jersey":"\u65b0\u6cfd\u897f\u5dde","New Jersey: Hackensack, Jersey City, Hoboken, Bayonne, Ridgewood, Union City, Teaneck, New Milford, and northeast New Jersey":"\u65b0\u6cfd\u897f\u5dde\uff1aHackensack, Jersey City, Hoboken, Bayonne, Ridgewood, Union City, Teaneck, New Milford\u548c\u65b0\u6cfd\u897f\u5dde\u4e1c\u5317\u90e8","New Mexico":"\u65b0\u58a8\u897f\u54e5\u5dde","New Mexico: Las Cruces, Roswell, Carlsbad, Taos":"\u65b0\u58a8\u897f\u54e5\u5dde\uff1aLas Cruces, Roswell, Carlsbad, Taos",
"New York":"\u7ebd\u7ea6\u5dde","New York: Binghamton, Elmira, Bath, Norwich, Oneonta, Ithaca":"\u7ebd\u7ea6\u5dde\uff1aBinghamton, Elmira, Bath, Norwich, Oneonta, Ithaca","New York: Manhattan":"\u7ebd\u7ea6\u5dde\uff1a\u66fc\u54c8\u987f","New York: Manhattan except for Marble Hill":"\u7ebd\u7ea6\u5dde\uff1a\u66fc\u54c8\u987f\uff0c\u4e0d\u542bMarble Hill","New York: Nassau County, Hempstead, Elmont":"\u7ebd\u7ea6\u5dde\uff1aNassau County, Hempstead, Elmont","New York: New York City":"\u7ebd\u7ea6\u5dde\uff1a\u7ebd\u7ea6\u5e02",
"New York: New York City, Marble Hill":"\u7ebd\u7ea6\u5dde\uff1a\u7ebd\u7ea6\u5e02\uff0cMarble Hill","New York: Suffolk County":"\u7ebd\u7ea6\u5dde\uff1aSuffolk County",'New York: The "Outer Boroughs"':"\u7ebd\u7ea6\u5dde\uff1a\u5916\u533a","New York: Westchester County":"\u7ebd\u7ea6\u5dde\uff1aWestchester\u00cf\u00d8","New Zealand":"\u65b0\u897f\u5170",Newfoundland:"\u7ebd\u82ac\u5170","Newfoundland and Labrador, Canada: St. John's":"\u52a0\u62ff\u5927\u7ebd\u82ac\u5170\u4e0e\u62c9\u5e03\u62c9\u591a\u7701 St. John's",
Nicaragua:"\u5c3c\u52a0\u62c9\u74dc",Nierong:"\u8042\u8363\u53bf","Nierong \u8042\u8363\u53bf":"\u8042\u8363\u53bf",Niger:"\u5c3c\u65e5\u5c14",Nigeria:"\u5c3c\u65e5\u5229\u4e9a",Nima:"\u5c3c\u739b\u53bf","Nima \u5c3c\u739b\u53bf":"\u5c3c\u739b\u53bf",Ningbo:"\u5b81\u6ce2\u5e02","Ningbo \u5b81\u6ce2\u5e02":"\u5b81\u6ce2\u5e02",Ningde:"\u5b81\u5fb7\u5e02","Ningde \u5b81\u5fb7\u5e02":"\u5b81\u5fb7\u5e02",Niue:"\u7ebd\u57c3","Norfolk Island":"\u8bfa\u798f\u514b\u5c9b","Norfolk Island, Australian Antarctic Territory":"\u8bfa\u798f\u514b\u5c9b\uff0c\u6fb3\u5927\u5229\u4e9a\u5357\u6781\u9886\u5730",
"North America":"\u5317\u7f8e","North America and the Caribbean Islands":"\u5317\u7f8e\u548c\u52a0\u52d2\u6bd4\u7fa4\u5c9b","North Carolina":"\u5317\u5361\u7f57\u6765\u7eb3\u5dde","North Carolina: Greensboro, Winston-Salem, Wilkesboro, Roxboro, and northwest North Carolina":"\u5317\u5361\u7f57\u6765\u7eb3\u5dde\uff1aGreensboro, Winston-Salem, Wilkesboro, Roxboro, \u548c\u5317\u5361\u7f57\u6765\u7eb3\u897f\u5317\u90e8","North Central Indiana: South Bend, Logansport, Elkhart, Warsaw, Nappanee":"\u5370\u7b2c\u5b89\u7eb3\u5dde\u4e2d\u5317\u90e8\uff1aSouth Bend, Logansport, Elkhart, Warsaw, Nappanee",
"North Central Iowa: Des Moines, Ames, Fort Dodge, Jefferson, Algona, Indianola":"\u7231\u8377\u534e\u5dde\u5317\u4e2d\u90e8\uff1aDes Moines, Ames, Fort Dodge, Jefferson, Algona, Indianola","North Central Kentucky: Lexington, Richmond, Danville, Covington, Florence, Mount Sterling":"\u80af\u5854\u57fa\u5dde\u4e2d\u5317\u90e8\uff1aLexington, Richmond, Danville, Covington, Florence, Mount Sterling","North Central Missouri: Sedalia, Kirksville, Macon, Marshall, Trenton, Maryville, Bethany":"\u5bc6\u82cf\u91cc\u5dde\u4e2d\u5317\u90e8\uff1aSedalia, Kirksville, Macon, Marshall, Trenton, Maryville, Bethany",
"North Central New York: Syracuse, New York, Utica, Watertown":"\u7ebd\u7ea6\u5dde\u4e2d\u5317\u90e8\uff1aSyracuse, \u7ebd\u7ea6, Utica, Watertown","North Central North Carolina: Raleigh, Durham, Chapel Hill, Oxford, Goldsboro":"\u5317\u5361\u7f57\u83b1\u7eb3\u5dde\u4e2d\u5317\u90e8\uff1aRaleigh, Durham, Chapel Hill, Oxford, Goldsboro","North Central Tennessee: Nashville, Murfreesboro, Springfield, Lebanon, Dickson":"\u7530\u7eb3\u897f\u5dde\u4e2d\u5317\u90e8\uff1aNashville, Murfreesboro, Springfield, Lebanon, Dickson",
"North Central Virginia: Roanoke, Fredericksburg, Blacksburg, Harrisonburg, Winchester":"\u5f17\u5409\u5c3c\u4e9a\u5dde\u5317\u4e2d\u90e8\uff1aRoanoke, Fredericksburg, Blacksburg, Harrisonburg, Winchester","North Dakota":"\u5317\u8fbe\u79d1\u4ed6\u5dde","North Korea":"\u671d\u9c9c","Northeast France":"\u6cd5\u56fd\u4e1c\u5317\u90e8","Northeastern Florida: Jacksonville, St. Augustine, Starke, Green Cove Springs":"\u4f5b\u7f57\u91cc\u8fbe\u5dde\u4e1c\u5317\u90e8\uff1aJacksonville, St. Augustine, Starke, Green Cove Springs",
"Northeastern Illinois: Arlington Heights, Buffalo Grove, Wauconda, Waukegan, Des Plaines, Chicago suburbs":"\u4f0a\u5229\u8bfa\u4f0a\u5dde\u4e1c\u5317\u90e8\uff1aArlington Heights, Buffalo Grove, Wauconda, Waukegan, Des Plaines, \u829d\u52a0\u54e5\u90ca\u533a","Northeastern Indiana: Fort Wayne, New Haven, Decatur, Angola, Huntington, Wabash":"\u5370\u7b2c\u5b89\u7eb3\u5dde\u4e1c\u5317\u90e8\uff1aFort Wayne, New Haven, Decatur, Angola, Huntington, Wabash","Northeastern Massachusetts: Fitchburg, Peabody":"\u9a6c\u8428\u8bf8\u585e\u5dde\u4e1c\u5317\u90e8\uff1aFitchburg, Peabody",
"Northeastern New York: Albany, Schenectady, Plattsburgh, Saranac Lake":"\u7ebd\u7ea6\u5dde\u4e1c\u5317\u90e8\uff1aAlbany, Schenectady, Plattsburgh, Saranac Lake","Northeastern North Carolina: Greenville, Kitty Hawk, Rocky Mount":"\u5317\u5361\u7f57\u83b1\u7eb3\u5dde\u4e1c\u5317\u90e8\uff1aGreenville, Kitty Hawk, Rocky Mount","Northeastern Ohio: Akron, Canton, Youngstown, Warren":"\u4fc4\u4ea5\u4fc4\u4e1c\u5317\u90e8\uff1aAkron, Canton, Youngstown, Warren","Northeastern Oklahoma: Tulsa, Bartlesville, McAlester, Muskogee, Henryetta":"\u4fc4\u514b\u62c9\u8377\u9a6c\u5dde\u4e1c\u5317\u90e8\uff1aTulsa, Bartlesville, McAlester, Muskogee, Henryetta",
"Northeastern Pennsylvania: Scranton, Williamsport, Wilkes-Barre, Nanticoke, Hazleton, Pottsville, Sunbury, Danville, Bloomsburg, Stroudsburg":"\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u4e1c\u5317\u90e8\uff1aScranton, Williamsport, Wilkes-Barre, Nanticoke, Hazleton, Pottsville, Sunbury, Danville, Bloomsburg, Stroudsburg","Northeastern Texas: Tyler, Sherman, Longview, Marshall, Palestine, Jacksonville, Carthage":"\u5fb7\u514b\u8428\u65af\u5dde\u4e1c\u5317\u90e8\uff1aTyler, Sherman, Longview, Marshall, Palestine, Jacksonville, Carthage",
"Northern Alberta, Canada: Edmonton, Jasper, Grande Prairie, Peace River":"\u52a0\u62ff\u5927\u4e9a\u4f2f\u8fbe\u5317\u90e8\uff1aEdmonton, Jasper, Grande Prairie, Peace River","Northern California coast":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u5317\u90e8\u6d77\u5cb8","Northern Illinois: Rockford, La Salle, De Kalb, Freeport, Joliet, Plainfield, Crystal Lake":"\u4f0a\u5229\u8bfa\u4f0a\u5dde\u5317\u90e8\uff1aRockford, La Salle, De Kalb, Freeport, Joliet, Plainfield, Crystal Lake","Northern Ireland":"\u5317\u7231\u5c14\u5170",
"Northern Kansas: Colby, Topeka, Salina, Manhattan, Lawrence":"\u582a\u8428\u65af\u5dde\u5317\u90e8\uff1aColby, Topeka, Salina, Manhattan, Lawrence","Northern Kentucky: Louisville, Frankfort, Shelbyville, Bardstown":"\u80af\u5854\u57fa\u5dde\u5317\u90e8\uff1aLouisville, Frankfort, Shelbyville, Bardstown","Northern Louisiana: Shreveport, Monroe, Alexandria, Fisher, Tallulah":"\u8def\u6613\u65af\u5b89\u90a3\u5dde\u5317\u90e8\uff1aShreveport, Monroe, Alexandria, Fisher, Tallulah","Northern Mariana Islands":"\u5317\u9a6c\u91cc\u4e9a\u7eb3\u7fa4\u5c9b",
"Northern Michigan: Escanaba, Houghton, Iron Mountain, Marquette, Menominee, Sault Ste. Marie, Upper Peninsula":"\u5bc6\u6b47\u6839\u5317\u90e8\uff1aEscanaba, Houghton, Iron Mountain, Marquette, Menominee, Sault Ste.Marie, Upper Peninsula","Northern Minnesota: Duluth, Thief River Falls, Brainerd, International Falls":"\u660e\u5c3c\u82cf\u8fbe\u5dde\u5317\u90e8\uff1aDuluth, Thief River Falls, Brainerd, International Falls","Northern Mississippi: Greenville, Tupelo, Winona, Columbus, Holly Springs":"\u5bc6\u897f\u897f\u6bd4\u5dde\u5317\u90e8\uff1aGreenville, Tupelo, Winona, Columbus, Holly Springs",
"Northern Ohio: Cleveland suburbs, Elyria, Lorain, Oberlin, Ashtabula":"\u4fc4\u4ea5\u4fc4\u5317\u90e8\uff1aCleveland \u90ca\u533a, Elyria, Lorain, Oberlin, Ashtabula","Northern Texas: Vernon, Wichita Falls, Denton, Gainesville, Decatur":"\u5fb7\u514b\u8428\u65af\u5dde\u5317\u90e8\uff1aVernon, Wichita Falls, Denton, Gainesville, Decatur","Northern Virginia: Alexandria, Arlington, Fairfax, Prince William, eastern Loudoun counties":"\u5f17\u5409\u5c3c\u4e9a\u5dde\u5317\u90e8\uff1aAlexandria, Arlington, Fairfax, Prince William, Loudoun \u4e1c\u90e8\u53bf",
"Northern Wisconsin: Wausau, Eau Claire, Rice Lake, Rhinelander, Ashland":"\u5a01\u65af\u5eb7\u661f\u5317\u90e8\uff1aWausau, Eau Claire, Rice Lake, Rhinelander, Ashland","Northern and Eastern Alabama: Huntsville, Decatur, Cullman, Gadsden, Florence, Anniston":"\u4e9a\u62c9\u5df4\u9a6c\u5dde\u5317\u90e8\u548c\u4e1c\u90e8Huntsville, Decatur, Cullman, Gadsden, Florence, Anniston","Northern and Eastern Florida: Daytona Beach, Lake City, Live Oak, Crescent City":"\u4f5b\u7f57\u91cc\u8fbe\u5dde\u4e1c\u5317\u90e8Daytona Beach, Lake City, Live Oak, Crescent City",
"Northern and Western Arizona: Flagstaff, Kingman, Prescott, Yuma":"\u4e9a\u5229\u6851\u90a3\u5dde\u897f\u5317\u90e8\uff1aFlagstaff, Kingman, Prescott, Yuma","Northern and Western Colorado: Aspen, Durango, Grand Junction, Fort Collins":"\u79d1\u7f57\u62c9\u591a\u5dde\u897f\u5317\u90e8\uff1aAspen, Durango, Grand Junction, Fort Collins","Northerneastern California: Redding, Chico, Davis, Placerville, Lake Tahoe, Susanville, Alturas, Truckee":" \u52a0\u5229\u798f\u5229\u4e9a\u5dde\u4e1c\u5317\u90e8 \uff1aRedding, Chico, Davis, Placerville, Lake Tahoe, Susanville, Alturas, Truckee",
"Northwest California":"\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u897f\u5317\u90e8","Northwest France":"\u6cd5\u56fd\u897f\u5317\u90e8","Northwest Indiana: Gary, Chesterton, Crown Point, East Chicago, Hammond, Hobart, Merrillville, Michigan City, Portage, Valparaiso":"\u5370\u7b2c\u5b89\u7eb3\u5dde\u897f\u5317\u90e8\uff1aGary, Chesterton, Crown Point, East Chicago, Hammond, Hobart, Merrillville, Michigan City, Portage, Valparaiso","Northwestern Arkansas: Fort Smith, Fayetteville":"\u963f\u80af\u8272\u5dde\u897f\u5317\u90e8\uff1aFort Smith, Fayetteville",
"Northwestern California: Napa, Vallejo, Santa Rosa, Ukiah, Crescent City, Eureka, Ukiah":"\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u897f\u5317\u90e8\uff1aNapa, Vallejo, Santa Rosa, Ukiah, Crescent City, Eureka, Ukiah","Northwestern Florida: Pensacola, Tallahassee, Panama City, the Florida panhandle":"\u4f5b\u7f57\u91cc\u8fbe\u5dde\u897f\u5317\u90e8\uff1aPensacola, Tallahassee, \u5df4\u62ff\u9a6c\u57ce, \u4f5b\u7f57\u91cc\u8fbe\u72ed\u957f\u5730\u5e26","Northwestern Michigan: Muskegon, Traverse City, Ludington, Petoskey":"\u5bc6\u6b47\u6839\u5dde\u897f\u5317\u90e8\uff1aMuskegon, Traverse City, Ludington, Petoskey",
"Northwestern New Jersey: Newark, Paterson":"\u65b0\u6cfd\u897f\u5dde\u897f\u5317\u90e8\uff1aNewark, Paterson","Northwestern New Mexico: Albuquerque, Santa Fe, Farmington, Gallup":"\u65b0\u58a8\u897f\u54e5\u5dde\u897f\u5317\u90e8\uff1aAlbuquerque, Santa Fe, Farmington, Gallup","Northwestern Ohio: Toledo, Sylvania, Mansfield, Lima, Findlay, Bryan, Sandusky, Bowling Green":"\u4fc4\u4ea5\u4fc4\u5dde\u897f\u5317\u90e8\uff1aToledo, Sylvania, Mansfield, Lima, Findlay, Bryan, Sandusky, Bowling Green","Northwestern Ontario, Canada: Thunder Bay, Kenora, Dryden, Greenstone":"\u52a0\u62ff\u5927\u5b89\u5927\u7565\u7701\u897f\u5317\u90e8Thunder Bay, Kenora, Dryden, Greenstone",
"Northwestern Oregon: Portland, Salem, Hillsboro, Beaverton":"\u4fc4\u52d2\u5188\u5dde\u897f\u5317\u90e8\uff1aPortland, Salem, Hillsboro, Beaverton","Northwestern Oregon: Portland, Salem, Hillsboro, St. Helens, Tillamook, Astoria":"\u4fc4\u52d2\u5188\u5dde\u897f\u5317\u90e8\uff1a\u6ce2\u7279\u5170, Salem, Hillsboro, St. Helens, Tillamook, Astoria","Northwestern and Central Pennsylvania: Erie, Warren, State College, Altoona, Johnstown, Meyersdale, Johnsonburg, St. Marys, Ridgway, DuBois, Emporium":"\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u897f\u5317\u548c\u4e2d\u90e8\uff1aErie, Warren, State College, Altoona, Johnstown, Meyersdale, Johnsonburg, St. Marys, Ridgway, DuBois, Emporium",
Norway:"\u632a\u5a01","Norway, Svalbard and Jan Mayen":"\u632a\u5a01\uff0c\u65af\u74e6\u5c14\u5df4\u7279\u548c\u626c\u9a6c\u5ef6\u5c9b",Nottingham:"\u8bfa\u4e01\u6c49","Nova Scotia and Prince Edward Island, Canada":"\u52a0\u62ff\u5927\u65b0\u65af\u79d1\u820d\u7701\u548c\u7231\u5fb7\u534e\u738b\u5b50\u5c9b","Nova Scotia/PEI":"\u65b0\u65af\u79d1\u820d/PEI","N\u00fcrnberg":"\u7ebd\u4f26\u5821","N\u00fcrnberg/F\u00fcrth":"\u7ebd\u4f26\u5821/\u83f2\u5c14\u7279",OCHA:"\u8054\u5408\u56fd\u4eba\u9053\u534f\u8c03\u5385",
Ohio:"\u4fc4\u4ea5\u4fc4\u5dde","Ohio: Cleveland":"\u4fc4\u4ea5\u4fc4\uff1a\u514b\u5229\u592b\u5170","Ohio: Columbus":"\u4fc4\u4ea5\u4fc4\u5dde\uff1a Columbus",Oklahoma:"\u4fc4\u514b\u62c9\u4f55\u9a6c\u5dde",Oman:"\u963f\u66fc",Ontario:"\u5b89\u5927\u7565\u7701","Ontario, Canada":"\u52a0\u62ff\u5927\u5b89\u5927\u7565\u7701","Ontario: Toronto":"\u5b89\u5927\u7565\u7701\uff1a\u591a\u4f26\u591a",Oregon:"\u4fc4\u52d2\u5188\u5dde","Oregon: Eugene, Medford, Bend, Pendleton, Corvallis, Ontario, Burns":"\u4fc4\u52d2\u5188\u5dde\uff1aEugene, Medford, Bend, Pendleton, Corvallis, Ontario, Burns",
Pakistan:"\u5df4\u57fa\u65af\u5766",Palau:"\u5e15\u52b3","Palestinian Authority":"\u5df4\u52d2\u65af\u5766\u6c11\u65cf\u6743\u529b\u673a\u6784",Panama:"\u5df4\u62ff\u9a6c",Panjin:"\u76d8\u9526\u5e02","Panjin \u76d8\u9526\u5e02":"\u76d8\u9526\u5e02",Panzhihua:"\u6500\u679d\u82b1\u5e02","Panzhihua \u6500\u679d\u82b1\u5e02":"\u6500\u679d\u82b1\u5e02","Papua New Guinea":"\u5df4\u5e03\u4e9a\u65b0\u51e0\u5185\u4e9a",Paraguay:"\u5df4\u62c9\u572d",Paris:"\u5df4\u9ece","Paris (Ile-de-France area)":"\u5df4\u9ece\uff08\u5df4\u9ece\u5927\u533a\uff09",
Pennsylvania:"\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde","Pennsylvania: Philadelphia":"\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\uff1a\u8d39\u57ce","People's Republic of China":"\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd","Personal Comm.":"\u4e2a\u4eba\u901a\u8baf","Personal Comm. Services":"\u4e2a\u4eba\u901a\u8baf\u670d\u52a1","Personal Communications Services":"\u4e2a\u4eba\u901a\u8baf\u670d\u52a1",Peru:"\u79d8\u9c81",Philippines:"\u83f2\u5f8b\u5bbe",PingAn:"\u5e73\u5b89\u53bf(\u6d77\u4e1c\u5730\u533a)",
"PingAn \u5e73\u5b89\u53bf (\u6d77\u4e1c\u5730\u533a)":"\u5e73\u5b89\u53bf (\u6d77\u4e1c\u5730\u533a)",Pingdingshan:"\u5e73\u9876\u5c71\u5e02","Pingdingshan \u5e73\u9876\u5c71\u5e02":"\u5e73\u9876\u5c71\u5e02",Pingliang:"\u5e73\u51c9\u5e02(\u5e73\u51c9\u5730\u533a)","Pingliang \u5e73\u51c9\u5e02 (\u5e73\u51c9\u5730\u533a)":"\u5e73\u51c9\u5e02 (\u5e73\u51c9\u5730\u533a)",Pingxiang:"\u840d\u4e61\u5e02","Pingxiang \u840d\u4e61\u5e02":"\u840d\u4e61\u5e02",Pitcairn:"\u76ae\u7279\u51ef\u6069",Poland:"\u6ce2\u5170",
Portugal:"\u8461\u8404\u7259","Premium Rate":"900\u533a\u53f7","Premium-rate":"900\u533a\u53f7","Premium-rate Telephone Service":"900\u533a\u53f7\u7535\u8bdd\u670d\u52a1","Puerto Rico":"\u6ce2\u591a\u9ece\u5404",Pulan:"\u666e\u5170\u53bf","Pulan \u666e\u5170\u53bf":"\u666e\u5170\u53bf",Putian:"\u8386\u7530\u5e02","Putian \u8386\u7530\u5e02":"\u8386\u7530\u5e02",Puyang:"\u6fee\u9633\u5e02","Puyang \u6fee\u9633\u5e02":"\u6fee\u9633\u5e02",Qatar:"\u5361\u5854\u5c14",Qingdao:"\u9752\u5c9b\u5e02","Qingdao \u9752\u5c9b\u5e02":"\u9752\u5c9b\u5e02",
Qingyuan:"\u6e05\u8fdc\u5e02","Qingyuan \u6e05\u8fdc\u5e02":"\u6e05\u8fdc\u5e02",Qinhuangdao:"\u79e6\u7687\u5c9b\u5e02","Qinhuangdao \u79e6\u7687\u5c9b\u5e02":"\u79e6\u7687\u5c9b\u5e02",Qinzhou:"\u94a6\u5dde\u5e02","Qinzhou \u94a6\u5dde\u5e02":"\u94a6\u5dde\u5e02",Qiqihar:"\u9f50\u9f50\u54c8\u5c14\u5e02","Qiqihar \u9f50\u9f50\u54c8\u5c14\u5e02":"\u9f50\u9f50\u54c8\u5c14\u5e02",Qitaihe:"\u4e03\u53f0\u6cb3\u5e02","Qitaihe \u4e03\u53f0\u6cb3\u5e02":"\u4e03\u53f0\u6cb3\u5e02",Quanzhou:"\u6cc9\u5dde\u5e02",
"Quanzhou \u6cc9\u5dde\u5e02":"\u6cc9\u5dde\u5e02",Quebec:"\u9b41\u5317\u514b","Quebec, Canada":"\u52a0\u62ff\u5927\u9b41\u5317\u514b","Quebec, Canada: Montreal, \u00cele Perrot, \u00cele Bizard":"\u52a0\u62ff\u5927\u9b41\u5317\u514b\uff1a\u8499\u7279\u5229\u5c14, \u00cele Perrot,  \u00cele Bizard","Quebec, Canada: Quebec City, Saguenay, Gasp\u00e9 Peninsula, C\u00f4te-Nord, Chibougamau, St-Georges":"\u52a0\u62ff\u5927\u9b41\u5317\u514b\uff1a\u9b41\u5317\u514b\u57ce, Saguenay, Gasp\u00e9 Peninsula, C\u00f4te-Nord, Chibougamau, St-Georges",
"Quebec, Canada: Sherbrooke, Trois-Rivieres, Abitibi-T\u00e9miscamingue, Mauricie, Outaouais, Estrie":"\u52a0\u62ff\u5927\u9b41\u5317\u514b\uff1aSherbrooke, Trois-Rivieres, Abitibi-T\u00e9iscamingue, Mauricie, Outaouais, Estrie",Qujing:"\u66f2\u9756\u5e02","Qujing \u66f2\u9756\u5e02":"\u66f2\u9756\u5e02",Quzhou:"\u8862\u5dde\u5e02","Quzhou \u8862\u5dde\u5e02":"\u8862\u5dde\u5e02",Reading:"\u91cc\u4e01","Republic of China":"\u53f0\u6e7e","Republic of Congo":"\u521a\u679c\u5171\u548c\u56fd","Republic of Ireland":"\u7231\u5c14\u5170\u5171\u548c\u56fd",
"Rhode Island":"\u7f57\u5f97\u5c9b\u5dde",Rikaze:"\u65e5\u5580\u5219\u5e02(\u65e5\u5580\u5219\u5730\u533a)","Rikaze \u65e5\u5580\u5219\u5e02 (\u65e5\u5580\u5219\u5730\u533a)":"\u65e5\u5580\u5219\u5e02 (\u65e5\u5580\u5219\u5730\u533a)",Rizhao:"\u65e5\u7167\u5e02","Rizhao \u65e5\u7167\u5e02":"\u65e5\u7167\u5e02",Romania:"\u7f57\u9a6c\u5c3c\u4e9a",Russia:"\u4fc4\u7f57\u65af","Russia, Kazakhstan":"\u4fc4\u7f57\u65af\uff0c\u54c8\u8428\u514b\u65af\u5766",Rwanda:"\u5362\u65fa\u8fbe","R\u00e9union":"\u7559\u5c3c\u6c6a",
"R\u00e9union, Mayotte":"\u7559\u5c3c\u6c6a\u5c9b\uff0c\u9a6c\u7ea6\u7279","S Alberta":"\u4e9a\u4f2f\u8fbe\u5357\u90e8","S Arkansas":"\u963f\u80af\u8272\u5dde\u5357\u90e8","S California":"\u5357\u52a0\u5229\u798f\u5229\u4e9a\u5dde","S Florida":"\u4f5b\u7f57\u91cc\u8fbe\u5dde\u5357\u90e8","S Illinois":"\u4f0a\u5229\u8bfa\u4f0a\u5dde\u5357\u90e8","S Kansas":"\u582a\u8428\u65af\u5dde\u5357\u90e8","S Minnesota":"\u660e\u5c3c\u82cf\u8fbe\u5dde\u5357\u90e8","S Mississippi":"\u5bc6\u897f\u897f\u6bd4\u5dde\u5357\u90e8",
"S Quebec":"\u9b41\u5317\u514b\u5357\u90e8","S Texas":"\u5fb7\u514b\u8428\u65af\u5dde\u5357\u90e8","S Virginia":"\u5f17\u5409\u5c3c\u4e9a\u5357\u90e8","SE Alabama":"\u4e9a\u62c9\u5df4\u9a6c\u4e1c\u5357\u90e8","SE Arizona":"\u4e9a\u5229\u6851\u90a3\u5dde\u4e1c\u5357\u90e8","SE California":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u4e1c\u5357\u90e8","SE Colorado":"\u79d1\u7f57\u62c9\u591a\u4e1c\u5357\u90e8","SE Georgia":"\u4e54\u6cbb\u4e9a\u5dde\u4e1c\u5357\u90e8","SE Louisiana":"\u8def\u6613\u65af\u5b89\u90a3\u5dde\u4e1c\u5357\u90e8",
"SE Massachusetts":"\u9a6c\u8428\u8bf8\u585e\u5dde\u4e1c\u5357\u90e8","SE New Jersey":"\u65b0\u6cfd\u897f\u5dde\u4e1c\u5357\u90e8","SE New York":"\u7ebd\u7ea6\u5dde\u4e1c\u5357\u90e8","SE North Carolina":"\u5317\u5361\u7f57\u83b1\u7eb3\u5dde\u4e1c\u5357\u90e8","SE Ohio":"\u4fc4\u4ea5\u4fc4\u5dde\u4e1c\u5357\u90e8","SE Pennsylvania":"\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u4e1c\u5357\u90e8","SE Texas":"\u5fb7\u514b\u8428\u65af\u5dde\u4e1c\u5357\u90e8","SE Wisconsin":"\u5a01\u65af\u5eb7\u661f\u5dde\u4e1c\u5357\u90e8",
"SW Alabama":"\u4e9a\u62c9\u5df4\u9a6c\u5dde\u897f\u5357\u90e8","SW Florida":"\u4f5b\u7f57\u91cc\u8fbe\u5dde\u897f\u5357\u90e8","SW Georgia":"\u4e54\u6cbb\u4e9a\u5dde\u897f\u5357\u90e8","SW Louisiana":"\u8def\u6613\u65af\u5b89\u90a3\u5dde\u897f\u5357\u90e8","SW Michigan":"\u5bc6\u6b47\u6839\u5dde\u897f\u5357\u90e8","SW Missouri":"\u5bc6\u82cf\u91cc\u5dde\u897f\u5357\u90e8","SW New Jersey":"\u65b0\u6cfd\u897f\u5dde\u897f\u5357\u90e8","SW Ohio":"\u4fc4\u4ea5\u4fc4\u5dde\u897f\u5357\u90e8","SW Oklahoma":"\u4fc4\u514b\u62c9\u8377\u9a6c\u5dde\u897f\u5357\u90e8",
"SW Ontario":"\u5b89\u5927\u7565\u7701\u897f\u5357\u90e8","SW Pennsylvania":"\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u897f\u5357\u90e8","SW Tennessee":"\u7530\u7eb3\u897f\u5dde\u897f\u5357\u90e8","SW Texas":"\u5fb7\u514b\u8428\u65af\u5dde\u897f\u5357\u90e8","SW Virginia":"\u5f17\u5409\u5c3c\u4e9a\u5dde\u897f\u5357\u90e8","SW Wisconsin":"\u5a01\u65af\u5eb7\u661f\u5dde\u897f\u5357\u90e8","Saint Helena":"\u5723\u6d77\u4f26\u5a1c","Saint Helena, Tristan da Cunha":"\u5723\u8d6b\u52d2\u62ff\u5c9b\uff0c\u7279\u91cc\u65af\u5766\u8fbe\u5e93\u5c3c\u4e9a",
"Saint Kitts and Nevis":"\u5723\u57fa\u8328\u548c\u5c3c\u7ef4\u65af","Saint Lucia":"\u5723\u5362\u897f\u4e9a","Saint Pierre and Miquelon":"\u5723\u76ae\u57c3\u5c14\u548c\u5bc6\u514b\u9686\u5c9b","Saint Pierre and Miquelon Islands":"\u5723\u76ae\u57c3\u5c14\u548c\u5bc6\u514b\u9686\u5c9b","Saint Vincent and the Grenadines":"\u5723\u6587\u68ee\u7279\u548c\u683c\u6797\u7eb3\u4e01\u65af",Salamanca:"\u8428\u62c9\u66fc\u5361",Samoa:"\u8428\u6469\u4e9a","San Marino":"\u5723\u9a6c\u529b\u8bfa",Sanmenxia:"\u4e09\u95e8\u5ce1\u5e02",
"Sanmenxia \u4e09\u95e8\u5ce1\u5e02":"\u4e09\u95e8\u5ce1\u5e02",Sanming:"\u4e09\u660e\u5e02","Sanming \u4e09\u660e\u5e02":"\u4e09\u660e\u5e02","Santa Cruz de Tenerife":"\u5723\u514b\u9c81\u65af\u7279\u5185\u91cc\u8d39",Saskatchewan:"\u8428\u65af\u5580\u5f7b\u6e29\u7701","Saskatchewan, Canada":"\u52a0\u62ff\u5927\u8428\u65af\u5580\u5f7b\u6e29\u7701","Saudi Arabia":"\u6c99\u7279\u963f\u62c9\u4f2f",Senegal:"\u585e\u5185\u52a0\u5c14",Serbia:"\u585e\u5c14\u7ef4\u4e9a","Service Number":"\u670d\u52a1\u53f7\u7801",
Seville:"\u585e\u7ef4\u5229\u4e9a",Seychelles:"\u585e\u820c\u5c14",Shanghai:"\u4e0a\u6d77",Shangqiu:"\u5546\u4e18\u5e02","Shangqiu \u5546\u4e18\u5e02":"\u5546\u4e18\u5e02",Shangrao:"\u4e0a\u9976\u5e02","Shangrao \u4e0a\u9976\u5e02":"\u4e0a\u9976\u5e02",Shangzhou:"\u5546\u5dde\u5e02(\u5546\u5357\u5730\u533a)","Shangzhou \u5546\u5dde\u5e02 (\u5546\u5357\u5730\u533a)":"\u5546\u5dde\u5e02 (\u5546\u5357\u5730\u533a)",Shanwei:"\u6c55\u5c3e\u5e02","Shanwei \u6c55\u5c3e\u5e02":"\u6c55\u5c3e\u5e02",Shaoguan:"\u97f6\u5173\u5e02",
"Shaoguan \u97f6\u5173\u5e02":"\u97f6\u5173\u5e02",Shaoxing:"\u7ecd\u5174\u5e02","Shaoxing \u7ecd\u5174\u5e02":"\u7ecd\u5174\u5e02",Shaoyang:"\u90b5\u9633\u5e02","Shaoyang \u90b5\u9633\u5e02":"\u90b5\u9633\u5e02","Shared Cost":"\u5206\u644a\u8d39\u7528","Shared Cost Service":"\u5206\u644a\u8d39\u7528\u670d\u52a1",Sheffield:"\u8c22\u83f2\u5c14\u5fb7",Shenyang:"\u6c88\u9633\u5e02","Shenyang \u6c88\u9633\u5e02":"\u6c88\u9633\u5e02",Shenzha:"\u7533\u624e\u53bf","Shenzha \u7533\u624e\u53bf":"\u7533\u624e\u53bf",
Shenzhen:"\u6df1\u5733\u5e02","Shenzhen \u6df1\u5733\u5e02":"\u6df1\u5733\u5e02",Shihezi:"\u77f3\u6cb3\u5b50\u5e02","Shihezi \u77f3\u6cb3\u5b50\u5e02":"\u77f3\u6cb3\u5b50\u5e02",Shijiazhuang:"\u77f3\u5bb6\u5e84\u5e02","Shijiazhuang \u77f3\u5bb6\u5e84\u5e02":"\u77f3\u5bb6\u5e84\u5e02",Shiyan:"\u5341\u5830\u5e02","Shiyan \u5341\u5830\u5e02":"\u5341\u5830\u5e02",Shizuishan:"\u77f3\u5634\u5c71\u5e02","Shizuishan \u77f3\u5634\u5c71\u5e02":"\u77f3\u5634\u5c71\u5e02",Shuanghu:"\u53cc\u6e56","Shuanghu \u53cc\u6e56":"\u53cc\u6e56",
Shuangyashan:"\u53cc\u9e2d\u5c71\u5e02","Shuangyashan \u53cc\u9e2d\u5c71\u5e02":"\u53cc\u9e2d\u5c71\u5e02",Shuozhou:"\u6714\u5dde\u5e02","Shuozhou \u6714\u5dde\u5e02":"\u6714\u5dde\u5e02","Sierra Leone":"\u585e\u62c9\u5229\u6602",Simao:"\u601d\u8305\u5e02(\u601d\u8305\u5730\u533a)","Simao \u601d\u8305\u5e02 (\u601d\u8305\u5730\u533a)":"\u601d\u8305\u5e02 (\u601d\u8305\u5730\u533a)",Singapore:"\u65b0\u52a0\u5761",Siping:"\u56db\u5e73\u5e02","Siping \u56db\u5e73\u5e02":"\u56db\u5e73\u5e02",Slovakia:"\u65af\u6d1b\u4f10\u514b",
Slovenia:"\u65af\u6d1b\u6587\u5c3c\u4e9a","Solomon Islands":"\u6240\u7f57\u95e8\u7fa4\u5c9b",Somalia:"\u7d22\u9a6c\u91cc","Somalia, Somaliland":"\u7d22\u9a6c\u91cc\uff0c\u7d22\u9a6c\u91cc\u5170",Songyuan:"\u677e\u539f\u5e02","Songyuan \u677e\u539f\u5e02":"\u677e\u539f\u5e02","South Africa":"\u5357\u975e","South Carolina":"\u5357\u5361\u7f57\u6765\u7eb3\u5dde","South Carolina: Greenville, Spartanburg, Anderson, Upstate South Carolina":"\u5357\u5361\u7f57\u6765\u7eb3\u5dde\uff1aGreenville, Spartanburg, Anderson, \u5357\u5361\u7f57\u6765\u7eb3\u4e0a\u5dde",
"South Central California: Bakersfield, Lancaster, Santa Clarita, Palmdale, Mojave":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u4e2d\u5357\u90e8\uff1aBakersfield, Lancaster, Santa Clarita, Palmdale, Mojave","South Central Florida: Auburndale, Lakeland, Avon Park, Clewiston, Bartow, Sebring, Winter Haven":"\u4f5b\u7f57\u91cc\u8fbe\u5dde\u4e2d\u5357\u90e8\uff1aAuburndale, Lakeland, Avon Park, Clewiston, Bartow, Sebring, Winter Haven","South Central Michigan: Lansing, Jackson, Charlotte, Coldwater, Howell, Deerfield, Addison":"\u5bc6\u6b47\u6839\u5dde\u4e2d\u5357\u90e8\uff1aLansing, Jackson, Charlotte, Coldwater, Howell, Deerfield, Addison",
"South Central North Carolina: Charlotte, Gastonia, Concord, Salisbury":"\u5317\u5361\u7f57\u83b1\u7eb3\u5dde\u4e2d\u5357\u90e8\uff1aCharlotte, Gastonia, Concord, Salisbury","South Central Pennsylvania: Harrisburg, Gettysburg, Lancaster, York":"\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u4e2d\u5357\u90e8\uff1aHarrisburg, Gettysburg, Lancaster, York","South Dakota":"\u5357\u8fbe\u79d1\u4ed6\u5dde","South Korea":"\u97e9\u56fd","Southeast France":"\u6cd5\u56fd\u4e1c\u5357\u90e8","Southeastern Alabama: Montgomery, Auburn, Opelika, Dothan, Selma":"\u4e9a\u62c9\u5df4\u9a6c\u4e1c\u5357\u90e8\uff1aMontgomery, Auburn, Opelika, Dothan, Selma",
"Southeastern Arizona: Tucson, Nogales":"\u4e9a\u5229\u6851\u90a3\u5dde\u4e1c\u5357\u90e8\uff1aTucson, Nogales","Southeastern California: Bishop, Ridgecrest, Barstow, Palm Springs, Indio, Imperial County":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u4e1c\u5357\u90e8\uff1aBishop, Ridgecrest, Barstow, Palm Springs, Indio, Imperial County","Southeastern Colorado: Colorado Springs, Pueblo, Leadville, Trinidad, Rocky Ford, La Junta":"\u79d1\u7f57\u62c9\u591a\u4e1c\u5357\u90e8\uff1aColorado Springs, Pueblo, Leadville, Trinidad, Rocky Ford, La Junta",
"Southeastern Georgia: Savannah, Statesboro, Vidalia, Waycross, Brunswick, Douglas":"\u4e54\u6cbb\u4e9a\u5dde\u4e1c\u5357\u90e8\uff1aSavannah, Statesboro, Vidalia, Waycross, Brunswick, Douglas","Southeastern Louisiana: Houma, Slidell":"\u8def\u6613\u65af\u5b89\u90a3\u5dde\u4e1c\u5357\u90e8\uff1aHouma, Slidell","Southeastern Massachusetts: Worcester, New Bedford":"\u9a6c\u8428\u8bf8\u585e\u5dde\u4e1c\u5357\u90e8\uff1aWorcester, New Bedford","Southeastern New York: Rockland, Poughkeepsie, Middletown, West Point, Newburgh, Catskills, Margaretville":"\u7ebd\u7ea6\u5dde\u4e1c\u5357\u90e8\uff1aRockland, Poughkeepsie, Middletown, West Point, Newburgh, Catskills, Margaretville",
"Southeastern North Carolina: Fayetteville, Wilmington, Jacksonville, Lumberton":"\u5317\u5361\u7f57\u83b1\u7eb3\u5dde\u4e1c\u5357\u90e8\uff1aFayetteville, Wilmington, Jacksonville, Lumberton","Southeastern Pennsylvania: Allentown, Reading, Norristown, Chester":"\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u4e1c\u5357\u90e8Allentown, Reading, Norristown, Chester","Southeastern Texas: Beaumont, Galveston, Port Arthur, Jasper":"\u5fb7\u514b\u8428\u65af\u5dde\u4e1c\u5357\u90e8\uff1aBeaumont, Galveston, Port Arthur, Jasper",
"Southeastern Texas: Wharton, Bryan, Bay City, College Station, Lake Jackson, La Grange":"\u5fb7\u514b\u8428\u65af\u5dde\u4e1c\u5357\u90e8\uff1aWharton, Bryan, Bay City, College Station, Lake Jackson, La Grange","Southeastern Wisconsin: Racine, Kenosha, Menomonee Falls, Waukesha":"\u5a01\u65af\u5eb7\u661f\u5dde\u4e1c\u5357\u90e8\uff1aRacine, Kenosha, Menomonee Falls, Waukesha","Southern Alberta, Canada: Calgary, Banff, Red Deer, Medicine Hat, Lethbridge, Brooks":"\u52a0\u62ff\u5927\u4e9a\u4f2f\u8fbe\u5357\u90e8Calgary, Banff, Red Deer, Medicine Hat, Lethbridge, Brooks",
"Southern California: Anaheim, Santa Ana, Huntington Beach, Orange, Garden Grove, Fullerton, Orange County":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u5357\u90e8\uff1aAnaheim, Santa Ana, Huntington Beach, Orange, Garden Grove, Fullerton, Orange County","Southern California: Central Los Angeles":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u5357\u90e8\uff1a\u6d1b\u6749\u77f6\u4e2d\u592e\u5730\u533a","Southern California: Colton, Grand Terrace, Ontario, Claremont, Pomona, Chino, Redlands, Fontana":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u5357\u90e8\uff1aColton, Grand Terrace, Ontario, Claremont, Pomona, Chino, Redlands, Fontana",
"Southern California: Corona, Riverside, Temescal Canyon, Lake Elsinore, Mira Loma, Moreno Valley, Perris, Sun City, Murrieta, Temecula, Hemet, Winchester, Lakeview, Nuevo, Beaumont, Banning, Idyllwild":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u5357\u90e8\uff1aCorona, Riverside, Temescal Canyon, Lake Elsinore, Mira Loma, Moreno Valley, Perris, Sun City, Murrieta, Temecula, Hemet, Winchester, Lakeview, Nuevo, Beaumont, Banning, Idyllwild","Southern California: Del Mar, La Jolla, San Diego":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u5357\u90e8\uff1aDel Mar, La Jolla, \u5723\u8fed\u6208",
"Southern California: Laguna Niguel, Irvine, Lake Forest, Newport Beach, Corona Del Mar":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u5357\u90e8\uff1aLaguna Niguel, Irvine, Lake Forest, Newport Beach, Corona Del Mar","Southern California: Long Beach, Whittier, Norwalk, La Habra Lakewood, Bellflower":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u5357\u90e8\uff1aLong Beach, Whittier, Norwalk, La Habra Lakewood, Bellflower","Southern California: Los Angeles, West LA, San Fernando Valley, Florence, Montebello":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u5357\u90e8\uff1a\u6d1b\u6749\u77f6, West LA, San Fernando Valley, Florence, Montebello",
"Southern California: Pasadena, West Covina, El Monte, La Puente, Arcadia, San Gabriel Valley, eastern Los Angeles suburbs":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u5357\u90e8\uff1aPasadena, West Covina, El Monte, La Puente, Arcadia, San Gabriel Valley, \u6d1b\u6749\u77f6\u4e1c\u90e8\u90ca\u533a","Southern California: San Diego":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u5357\u90e8\uff1a\u5723\u8fed\u6208","Southern California: San Diego, Chula Vista":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u5357\u90e8\uff1aSan Diego, Chula Vista",
"Southern California: San Fernando Valley":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u5357\u90e8\uff1aSan Fernando Valley","Southern California: San Fernando Valley, including Glendale, San Fernando, Northridge, Burbank, Los Angeles suburbs":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u5357\u90e8\uff1aSan Fernando Valley, \u5305\u62ec Glendale, San Fernando, Northridge, Burbank, \u6d1b\u6749\u77f6\u90ca\u533a","Southern California: Santa Monica, Malibu, Torrance, South Bay, Beverly Hills, Catalina Island, the Los Angeles Westside":"\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u5357\u90e8\uff1aSanta Monica, Malibu, Torrance, South Bay, Beverly Hills, Catalina Island, the Los Angeles Westside",
"Southern Florida: Fort Lauderdale, Hollywood, Coral Springs":"\u4f5b\u7f57\u91cc\u8fbe\u5dde\u5357\u90e8\uff1aFort Lauderdale, Hollywood, Coral Springs","Southern Florida: Miami-Dade, Florida Keys, Miami, Homestead, Coral Gables, Key West":"\u4f5b\u7f57\u91cc\u8fbe\u5dde\u5357\u90e8\uff1aMiami-Dade, Florida Keys, \u8fc8\u963f\u5bc6, Homestead, Coral Gables, Key West","Southern Illinois: Alton, Belleville, Carbondale, Centralia, East Saint Louis, Mount Vernon":"\u4f0a\u5229\u8bfa\u4f0a\u5dde\u5357\u90e8\uff1aAlton, Belleville, Carbondale, Centralia, East Saint Louis, Mount Vernon",
"Southern Kansas: Dodge City, Emporia, Geat Bend, Parsons, Liberal":"\u582a\u8428\u65af\u5dde\u5357\u90e8\uff1aDodge City, Emporia, Geat Bend, Parsons, Liberal","Southern Minnesota: Rochester, Mankato, Worthington, Marshall":"\u660e\u5c3c\u82cf\u8fbe\u5dde\u5357\u90e8\uff1aRochester, Mankato, Worthington, Marshall","Southern Mississippi: Gulfport, Biloxi, Pascagoula, Bay St Louis":"\u5bc6\u897f\u897f\u6bd4\u5dde\u5357\u90e8\uff1aGulfport, Biloxi, Pascagoula, Bay St Louis","Southern Texas: Laredo, Brownsville, McAllen, Harlingen":"\u5fb7\u514b\u8428\u65af\u5dde\u5357\u90e8\uff1aLaredo, Brownsville, McAllen, Harlingen",
"Southern Virginia: Charlottesville, Lynchburg, Danville, Farmville, South Hill":"\u5f17\u5409\u5c3c\u4e9a\u5357\u90e8\uff1aCharlottesville, Lynchburg, Danville, Farmville, South Hill","Southern and Eastern Arkansas: Texarkana, Jonesboro, Pine Bluff":"\u963f\u80af\u8272\u5dde\u4e1c\u5357\u90e8\uff1aTexarkana, Jonesboro, Pine Bluff","Southern and Western Oklahoma: Enid, Lawton, Ponca City, Guymon, Ardmore, Sayre, Elk City":"\u4fc4\u514b\u62c9\u8377\u9a6c\u5dde\u897f\u5357\u90e8\uff1aEnid, Lawton, Ponca City, Guymon, Ardmore, Sayre, Elk City",
"Southwest France":"\u6cd5\u56fd\u897f\u5357\u90e8","Southwestern Alabama: Mobile, Jackson, Brewton":"\u4e9a\u62c9\u5df4\u9a6c\u5dde\u897f\u5357\u90e8\uff1aMobile, Jackson, Brewton","Southwestern Florida: Lee, Collier, and Monroe Counties; Cape Coral, Fort Myers, Naples, Everglades":"\u4f5b\u7f57\u91cc\u8fbe\u5dde\u897f\u5357\u90e8\uff1aLee, Collier, and Monroe Counties; Cape Coral, Fort Myers, Naples, Everglades","Southwestern Florida: Tampa Bay,Manatee County, Sarasota County, Charlotte County; Bradenton, Port Charlotte, Sarasota, Punta Gorda":"\u4f5b\u7f57\u91cc\u8fbe\u5dde\u897f\u5357\u90e8\uff1aTampa Bay,Manatee County, Sarasota County, Charlotte County; Bradenton, Port Charlotte, Sarasota, Punta Gorda",
"Southwestern Georgia: Albany, Valdosta, Bainbridge, Americus, Fitzgerald":"\u4e54\u6cbb\u4e9a\u5dde\u897f\u5357\u90e8\uff1aAlbany, Valdosta, Bainbridge, Americus, Fitzgerald","Southwestern Louisiana: Lafayette, Lake Charles, Leesville, New Iberia, Opelousas, De Ridder":"\u8def\u6613\u65af\u5b89\u90a3\u5dde\u897f\u5357\u90e8\uff1aLafayette, Lake Charles, Leesville, New Iberia, Opelousas, De Ridder","Southwestern Michigan: Ann Arbor, Canton, Plymouth, Monroe, Wayne, Ypsilanti, Romulus, Detroit suburbs":"\u5bc6\u6b47\u6839\u5dde\u897f\u5357\u90e8\uff1aAnn Arbor, Canton, Plymouth, Monroe, Wayne, Ypsilanti, Romulus, Detroit \u90ca\u533a",
"Southwestern Michigan: Battle Creek, Kalamazoo, Benton Harbor, Allegan, Hastings, St Joseph":"\u5bc6\u6b47\u6839\u897f\u5357\u90e8\uff1aBattle Creek, Kalamazoo, Benton Harbor, Allegan, Hastings, St Joseph","Southwestern Michigan: Grand Rapids, Holland, Greenville, Grand Haven, Zeeland, Ionia":"\u5bc6\u6b47\u6839\u5dde\u897f\u5357\u90e8\uff1aGrand Rapids, Holland, Greenville, Grand Haven, Zeeland, Ionia","Southwestern Missouri: Springfield, Joplin, Branson, West Plains, Lamar, Lebanon":"\u5bc6\u82cf\u91cc\u5dde\u897f\u5357\u90e8\uff1aSpringfield, Joplin, Branson, West Plains, Lamar, Lebanon",
"Southwestern New Jersey: Vineland, Cherry Hill, Camden, Millville":"\u65b0\u6cfd\u897f\u5dde\u897f\u5357\u90e8\uff1aVineland, Cherry Hill, Camden, Millville","Southwestern Ohio":"\u4fc4\u4ea5\u4fc4\u5dde\u897f\u5357\u90e8","Southwestern Ohio: Cincinnati, Middletown, Hamilton, Norwood, Lebanon":"\u4fc4\u4ea5\u4fc4\u5dde\u897f\u5357\u90e8\uff1aCincinnati, Middletown, Hamilton, Norwood, Lebanon","Southwestern Ohio: Marysville, Springfield, Dayton, Hillsboro":"\u4fc4\u4ea5\u4fc4\u897f\u5357\u90e8\uff1aMarysville, Springfield, Dayton, Hillsboro",
"Southwestern Ontario, Canada: London, Windsor, Kitchener-Waterloo, Cambridge":"\u52a0\u62ff\u5927\u5b89\u5927\u7565\u7701\u897f\u5357\u90e8London, Windsor, Kitchener-Waterloo, Cambridge","Southwestern Ontario, Canada: Niagara Region, Hamilton, Toronto suburbs":"\u52a0\u62ff\u5927\u5b89\u5927\u7565\u7701\u897f\u5357\u90e8Niagara Region, Hamilton, \u591a\u4f26\u591a\u90ca\u533a","Southwestern Pennsylvania: New Castle, Washington, Indiana, Uniontown":"\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u897f\u5357\u90e8\uff1aNew Castle, Washington, Indiana, Uniontown",
"Southwestern Tennessee: Memphis, Covington, Somerville":"\u7530\u7eb3\u897f\u5dde\u897f\u5357\u90e8\uff1a\u5b5f\u83f2\u65af, Covington, Somerville","Southwestern Texas: Del Rio, Uvalde, New Braunfels, Kerrville, Eagle Pass":"\u5fb7\u514b\u8428\u65af\u5dde\u897f\u5357\u90e8\uff1aDel Rio, Uvalde, New Braunfels, Kerrville, Eagle Pass","Southwestern Virginia: Bristol, Abingdon, Wytheville, Martinsville, Bluefield":"\u5f17\u5409\u5c3c\u4e9a\u5dde\u897f\u5357\u90e8\uff1aBristol, Abingdon, Wytheville, Martinsville, Bluefield",
"Southwestern Wisconsin: Madison, La Crosse, Platteville, Beloit":"\u5a01\u65af\u5eb7\u661f\u5dde\u897f\u5357\u90e8\uff1aMadison, La Crosse, Platteville, Beloit",Spain:"\u897f\u73ed\u7259","Special Telecom.":"\u7279\u522b\u7535\u8baf","Special Telecommunications Needs in Canada":"\u52a0\u62ff\u5927\u56fd\u5185\u7684\u7279\u522b\u7535\u8baf\u9700\u6c42","Sri Lanka":"\u65af\u91cc\u5170\u5361","St. Kitts/Nevis":"\u5723\u57fa\u8328/\u5c3c\u7ef4\u65af","St. Pierre and Miquelon":"\u5723\u76ae\u57c3\u5c14\u548c\u5bc6\u514b\u9686\u5c9b",
Strasburg:"\u65af\u7279\u62c9\u65af\u5821","Stra\u00dfberg":"\u65af\u7279\u62c9\u65af\u5821",Stuttgart:"\u65af\u56fe\u52a0\u7279","Stuttgart, Aichwald, Denkendorf, Esslingen am Neckar, Fellbach, Filderstadt-Bernhausen, Filderstadt-Bonlanden, Filderstadt-Plattenhardt, Korntal, Leinfelden-Echterdingen, Ostfildern-Kemnat, Ostfildern-Nellingen, Ostfildern-Ruit":"\u65af\u56fe\u52a0\u7279\uff0cAichwald\uff0c\u767b\u80af\u591a\u592b\uff0c\u7f8e\u5185\u5361\u6cb3\u7554\u57c3\u65af\u6797\u6839\uff0c\u8d39\u5c14\u5df4\u8d6b\uff0c\u83f2\u5c14\u5fb7\u65bd\u5854\u7279-\u4f2f\u6069\u8c6a\u68ee\uff0c\u83f2\u5c14\u5fb7\u65bd\u5854\u7279-Bonlanden\uff0c\u83f2\u5c14\u5fb7\u65bd\u5854\u7279-Plattenhardt\uff0cKorntal\uff0c\u83b1\u6069\u8d39\u5c14\u767b- Echterdingen\uff0cOstfildern-Kemnat\uff0cOstfildern-Nellingen\uff0cOstfildern-Ruit",
Sudan:"\u82cf\u4e39",Suihua:"\u7ee5\u5316\u5e02","Suihua \u7ee5\u5316\u5e02":"\u7ee5\u5316\u5e02",Suining:"\u9042\u5b81\u5e02","Suining \u9042\u5b81\u5e02":"\u9042\u5b81\u5e02",Suizhou:"\u968f\u5dde\u5e02","Suizhou \u968f\u5dde\u5e02":"\u968f\u5dde\u5e02",Suoxian:"\u7d22\u53bf","Suoxian \u7d22\u53bf":"\u7d22\u53bf",Suqian:"\u5bbf\u8fc1\u5e02","Suqian \u5bbf\u8fc1\u5e02":"\u5bbf\u8fc1\u5e02",Suriname:"\u82cf\u91cc\u5357",Suzhou:"\u5bbf\u5dde\u5e02","Suzhou \u5bbf\u5dde\u5e02":"\u5bbf\u5dde\u5e02",
"Suzhou \u82cf\u5dde\u5e02":"\u82cf\u5dde\u5e02",Swaziland:"\u65af\u5a01\u58eb\u5170",Sweden:"\u745e\u5178",Switzerland:"\u745e\u58eb",Syria:"\u53d9\u5229\u4e9a","S\u00e3o Tom\u00e9 and Pr\u00edncipe":"\u5723\u591a\u7f8e\u548c\u666e\u6797\u897f\u6bd4",Tacheng:"\u5854\u57ce\u5e02","Tacheng \u5854\u57ce\u5e02":"\u5854\u57ce\u5e02",TaiAn:"\u6cf0\u5b89\u5e02","TaiAn \u6cf0\u5b89\u5e02":"\u6cf0\u5b89\u5e02",Taiwan:"\u53f0\u6e7e",Taiyuan:"\u592a\u539f\u5e02","Taiyuan \u592a\u539f\u5e02":"\u592a\u539f\u5e02",
Taizhou:"\u6cf0\u5dde\u5e02","Taizhou \u53f0\u5dde\u5e02":"\u53f0\u5dde\u5e02","Taizhou \u6cf0\u5dde\u5e02":"\u6cf0\u5dde\u5e02",Tajikistan:"\u5854\u5409\u514b\u65af\u5766",Tangshan:"\u5510\u5c71\u5e02","Tangshan \u5510\u5c71\u5e02":"\u5510\u5c71\u5e02",Tanzania:"\u5766\u6851\u5c3c\u4e9a",Tarragona:"\u5854\u62c9\u6208\u7eb3",Tennessee:"\u7530\u7eb3\u897f\u5dde","Tennessee: Clarksville, Columbia, Manchester, Cookeville":"\u7530\u7eb3\u897f\u5ddeClarksville, Columbia, Manchester, Cookeville",Texas:"\u5fb7\u514b\u8428\u65af\u5dde",
"Texas: Abilene, San Angelo, Sweetwater, Snyder":"\u5f97\u514b\u8428\u65af\uff1aAbilene, San Angelo, Sweetwater, Snyder","Texas: Amarillo, Lubbock, Canadian, Perryton, Shamrock, Dalhart, Texas Panhandle":"\u5f97\u514b\u8428\u65af\uff1aAmarillo, Lubbock, Canadian, Perryton, Shamrock, Dalhart, Texas Panhandle","Texas: Dallas area":"\u5f97\u514b\u8428\u65af\uff1a\u8fbe\u62c9\u65af\u5730\u533a","Texas: El Paso County, Hudspeth County":"\u5f97\u514b\u8428\u65af\u5dde\uff1aEl Paso\u00cf\u00d8, Hudspeth\u00cf\u00d8",
"Texas: Fort Worth, Arlington, Grandview, Weatherford, Rhome":"\u5f97\u514b\u8428\u65af\u5dde\uff1aFort Worth, Arlington, Grandview, Weatherford, Rhome","Texas: Houston":"\u5f97\u514b\u8428\u65af\uff1a\u4f11\u65af\u6566","Texas: San Antonio area":"\u5f97\u514b\u8428\u65af\uff1a\u5723\u5b89\u4e1c\u5c3c\u5965\u5730\u533a","Texas: Waco, Killeen, Temple, Belton, and Stephenville":"\u5f97\u514b\u8428\u65af\uff1aWaco, Killeen, Temple, Belton\u548cStephenville",Thailand:"\u6cf0\u56fd","The Bahamas":"\u5df4\u54c8\u9a6c",
"The British Virgin Islands":"\u82f1\u5c5e\u7ef4\u5c14\u4eac\u7fa4\u5c9b","The Cayman Islands":"\u5f00\u66fc\u7fa4\u5c9b","The Dominican Republic":"\u591a\u7c73\u5c3c\u52a0\u5171\u548c\u56fd","The Gambia":"\u5188\u6bd4\u4e9a","The U.S. Virgin Islands":"\u7f8e\u5c5e\u7ef4\u5c14\u4eac\u7fa4\u5c9b",Tianjin:"\u5929\u6d25\u5e02","Tianjin \u5929\u6d25\u5e02":"\u5929\u6d25\u5e02",Tianshui:"\u5929\u6c34\u5e02","Tianshui \u5929\u6c34\u5e02":"\u5929\u6c34\u5e02",Tieling:"\u94c1\u5cad\u5e02","Tieling \u94c1\u5cad\u5e02":"\u94c1\u5cad\u5e02",
Togo:"\u591a\u54e5",Tokelau:"\u6258\u514b\u52b3",Toledo:"\u6258\u83b1\u591a","Toll-free":"\u514d\u8d39","Toll-free Telephone Service":"\u514d\u8d39\u7535\u8bdd\u670d\u52a1",Tonga:"\u6c64\u52a0",Tongchuan:"\u94dc\u5ddd\u5e02","Tongchuan \u94dc\u5ddd\u5e02":"\u94dc\u5ddd\u5e02",Tonghua:"\u901a\u5316\u5e02","Tonghua \u901a\u5316\u5e02, Meihekou \u6885\u6cb3\u53e3\u5e02":"\u901a\u5316\u5e02,\u6885\u6cb3\u53e3\u5e02",Tongling:"\u94dc\u9675\u5e02","Tongling \u94dc\u9675\u5e02":"\u94dc\u9675\u5e02",Tongren:"\u94dc\u4ec1\u5e02(\u94dc\u4ec1\u5730\u533a)",
"Tongren \u540c\u4ec1\u53bf(\u9ec4\u5357 \u85cf\u65cf\u81ea\u6cbb\u5dde)":"\u540c\u4ec1\u53bf(\u9ec4\u5357 \u85cf\u65cf\u81ea\u6cbb\u5dde)","Tongren \u94dc\u4ec1\u5e02 (\u94dc\u4ec1\u5730\u533a)":"\u94dc\u4ec1\u5e02 (\u94dc\u4ec1\u5730\u533a)","Trinidad and Tobago":"\u7279\u7acb\u5c3c\u8fbe\u548c\u591a\u5df4\u54e5","Trinidad/Tobago":"\u7279\u7acb\u5c3c\u8fbe/\u591a\u5df4\u54e5",Tulufan:"\u5410\u9c81\u756a\u5e02(\u5410\u9c81\u756a\u5730\u533a)","Tulufan \u5410\u9c81\u756a\u5e02 (\u5410\u9c81\u756a\u5730\u533a)":"\u5410\u9c81\u756a\u5e02 (\u5410\u9c81\u756a\u5730\u533a)",
Tunisia:"\u7a81\u5c3c\u65af",Turkey:"\u571f\u8033\u5176","Turkey, Turkish Republic of Northern Cyprus":"\u571f\u8033\u5176\uff0c\u5317\u585e\u6d66\u8def\u65af\u571f\u8033\u5176\u5171\u548c\u56fd",Turkmenistan:"\u571f\u5e93\u66fc\u65af\u5766",Tuvalu:"\u56fe\u74e6\u5362","U.S. Government":"\u7f8e\u56fd\u653f\u5e9c","U.S. Government Special Services":"\u7f8e\u56fd\u653f\u5e9c\u7279\u522b\u670d\u52a1","U.S. Virgins":"\u7f8e\u5c5e\u7ef4\u5c14\u4eac\u7fa4\u5c9b",UAE:"\u963f\u8054\u914b",Uganda:"\u4e4c\u5e72\u8fbe",
Ukraine:"\u4e4c\u514b\u5170","United Arab Emirates":"\u963f\u62c9\u4f2f\u8054\u5408\u914b\u957f\u56fd","United Kingdom":"\u82f1\u56fd","United Kingdom, Guernsey, Isle of Man, Jersey":"\u82f1\u56fd\uff0c\u683c\u6069\u897f\u5c9b\uff0c\u9a6c\u6069\u5c9b\uff0c\u6cfd\u897f","Universal Personal":"\u901a\u7528\u4e2a\u4eba","Universal Personal Telecommunications":"\u901a\u7528\u4e2a\u4eba\u901a\u8baf","Universal international freephone number":"\u901a\u7528\u56fd\u9645\u514d\u8d39\u7535\u8bdd\u53f7\u7801",
"Unknown Country":"\u672a\u77e5\u56fd\u5bb6","Unknown Location":"\u672a\u77e5\u5730\u70b9",Uruguay:"\u4e4c\u62c9\u572d",Urumchi:"\u4e4c\u9c81\u6728\u9f50","Urumchi \u4e4c\u9c81\u6728\u9f50":"\u4e4c\u9c81\u6728\u9f50",Utah:"\u72b9\u4ed6\u5dde","Utah: Cedar City, Logan, Moab, Park City, St. George, Moab":"\u72b9\u4ed6\u5dde\uff1aCedar City, Logan, Moab, Park City, St. George, Moab","Utah: Wasatch Front":"\u72b9\u4ed6\u5dde\uff1aWasatch Front",Uzbekistan:"\u4e4c\u5179\u522b\u514b\u65af\u5766",Valencia:"\u74e6\u4f26\u897f\u4e9a",
Vanuatu:"\u74e6\u52aa\u963f\u56fe","Vatican City":"\u68b5\u8482\u5188\u57ce",Venezuela:"\u59d4\u5185\u745e\u62c9",Vermont:"\u4f5b\u8499\u7279\u5dde",Vietnam:"\u8d8a\u5357",Virginia:"\u5f17\u5409\u5c3c\u4e9a\u5dde","Virginia: Hampton Roads, Eastern Shore":"\u5f17\u5409\u5c3c\u4e9a\u5dde\uff1aHampton Roads, Eastern Shore","Virginia: Richmond, Petersburg":"\u5f17\u5409\u5c3c\u4e9a\u5dde\uff1aRichmond, Petersburg",Vizcaya:"\u6bd4\u65af\u5361\u4e9a","Voice over IP":"VoIP","Voice over IP services":"VoIP\u670d\u52a1",
"W Illinois":"\u4f0a\u5229\u8bfa\u4f0a\u5dde\u897f\u90e8","W Iowa":"\u7231\u8377\u534e\u5dde\u897f\u90e8","W Kentucky":"\u80af\u5854\u57fa\u5dde\u897f\u90e8","W Maryland":"\u9a6c\u91cc\u5170\u5dde\u897f\u90e8","W Massachusetts":"\u9a6c\u8428\u8bf8\u585e\u5dde\u897f\u90e8","W Nebraska":"\u5185\u5e03\u62c9\u65af\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u897f\u90e8","W New York":"\u7ebd\u7ea6\u5dde\u897f\u90e8","W North Carolina":"\u5317\u5361\u7f57\u83b1\u7eb3\u5dde\u897f\u90e8","W Pennsylvania":"\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u897f\u90e8",
"W Tennessee":"\u7530\u7eb3\u897f\u5dde\u897f\u90e8","W Texas":"\u00b5\u00c2\u00bf\u00cb\u00c8\u00f8\u00cb\u00b9\u5dde\u897f\u90e8","W Washington":"\u534e\u76db\u987f\u5dde\u897f\u90e8","Wallis and Futuna":"\u74e6\u5229\u65af\u548c\u5bcc\u56fe\u7eb3\u7fa4\u5c9b",Washington:"\u534e\u76db\u987f\u5dde","Washington D.C.":"\u534e\u76db\u987f\u7279\u533a","Washington: Seattle":"\u534e\u76db\u987f\uff1a\u897f\u96c5\u56fe","Washington: Seattle suburbs, Bellevue, Everett, Redmond, Renton, Kirkland, Bothell, Sammamish, Issaquah, Edmonds, Lynnwood and Mountlake Terrace":"\u534e\u76db\u987f\u5dde\uff1a\u897f\u96c5\u56fe\u90ca\u533a, Bellevue, Everett, Redmond, Renton, Kirkland, Bothell, Sammamish, Issaquah, Edmonds, Lynnwood \u548cMountlake Terrace",
"Washington: Tacoma, Lakewood, Auburn, Puyallup, Enumclaw, Spanaway and south Seattle suburbs":"\u534e\u76db\u987f\uff1aTacoma, Lakewood, Auburn, Puyallup, Enumclaw, Spanaway\u548c\u897f\u96c5\u56fe\u5357\u90e8\u90ca\u533a","Washington: Western Washington":"\u534e\u76db\u987f\u5dde\uff1a\u534e\u76db\u987f\u5dde\u897f\u90e8\uff1a",Weifang:"\u6f4d\u574a\u5e02","Weifang \u6f4d\u574a\u5e02":"\u6f4d\u574a\u5e02",Weihai:"\u5a01\u6d77\u5e02","Weihai \u5a01\u6d77\u5e02":"\u5a01\u6d77\u5e02",Weinan:"\u6e2d\u5357\u5e02",
"Weinan \u6e2d\u5357\u5e02":"\u6e2d\u5357\u5e02",Wenshan:"\u6587\u5c71\u53bf(\u6587\u5c71\u58ee\u65cf\u82d7\u65cf\u81ea\u6cbb\u5dde)","Wenshan \u6587\u5c71\u53bf (\u6587\u5c71\u58ee\u65cf \u82d7\u65cf\u81ea\u6cbb\u5dde)":"\u6587\u5c71\u53bf (\u6587\u5c71\u58ee\u65cf \u82d7\u65cf\u81ea\u6cbb\u5dde)",Wenzhou:"\u6e29\u5dde\u5e02","Wenzhou \u6e29\u5dde\u5e02":"\u6e29\u5dde\u5e02","West Central Georgia: Augusta, Lincolnton, Columbus, LaGrange, Rome, Dalton, Thomaston":"\u4e54\u6cbb\u4e9a\u5dde\u4e2d\u897f\u90e8\uff1aAugusta, Lincolnton, Columbus, LaGrange, Rome, Dalton, Thomaston",
"West Central Missouri: Kansas City, St Joseph, Independence, Harrisonville":"\u5bc6\u82cf\u91cc\u5dde\u4e2d\u897f\u90e8\uff1aKansas City, St Joseph, Independence, Harrisonville","West Central New Jersey: Alpha, Washington, Elizabeth, Warren, Plainfield":"\u65b0\u6cfd\u897f\u5dde\u4e2d\u897f\u90e8\uff1aAlpha, Washington, Elizabeth, Warren, Plainfield","West Texas: Midland, Odessa, Big Spring, Alpine":"\u5fb7\u514b\u8428\u65af\u5dde\u897f\u90e8\uff1aMidland, Odessa, Big Spring, Alpine","West Virginia":"\u897f\u5f17\u5409\u5c3c\u4e9a\u5dde",
"Western Iowa: Sioux City, Council Bluffs, Sheldon, Denison, Estherville":"\u7231\u8377\u534e\u5dde\u897f\u90e8\uff1aSioux City, Council Bluffs, Sheldon, Denison, Estherville","Western Kentucky: Owensboro, Paducah, Bowling Green, Hopkinsville, Henderson, Elizabethtown":"\u80af\u5854\u57fa\u5dde\u897f\u90e8\uff1aOwensboro, Paducah, Bowling Green, Hopkinsville, Henderson, Elizabethtown","Western Maryland: Silver Spring, DC suburbs, Hagerstown, Frederick, Rockville, Cumberland":"\u9a6c\u91cc\u5170\u5dde\u897f\u90e8\uff1aSilver Spring, DC \u90ca\u533a, Hagerstown, Frederick, Rockville, Cumberland",
"Western Massachusetts: Springfield, Pittsfield, Holyoke, Greenfield":"\u9a6c\u8428\u8bf8\u585e\u5dde\u897f\u90e8\uff1aSpringfield, Pittsfield, Holyoke, Greenfield","Western Nebraska: North Platte, Scottsbluff, McCook, Kearney, Grand Island":"\u5185\u5e03\u62c9\u65af\u52a0\u5229\u798f\u5229\u4e9a\u5dde\u897f\u90e8\uff1aNorth Platte, Scottsbluff, McCook, Kearney, Grand Island","Western New York: Buffalo, Jamestown, Niagara Falls, Tonawanda, Olean":"\u7ebd\u7ea6\u5dde\u897f\u90e8\uff1aBuffalo, Jamestown, Niagara Falls, Tonawanda, Olean",
"Western New York: Rochester, Wellsville, Batavia":"\u7ebd\u7ea6\u5dde\u897f\u90e8\uff1aRochester, Wellsville, Batavia","Western North Carolina: Hickory, Asheville, Waynesville, Franklin, Murphy":"\u5317\u5361\u7f57\u6765\u7eb3\u5dde\u897f\u90e8\uff1aHickory, Asheville, Waynesville, Franklin, Murphy","Western Pennsylvania: Pittsburgh area, McKeesport, Braddock, Duquesne":"\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u897f\u90e8\uff1a\u5339\u5179\u5821\u5730\u533a, McKeesport, Braddock, Duquesne","Western Tennessee: Union City, Jackson, Dyersburg, Martin, Brownsville, Paris, Bolivar":"\u7530\u7eb3\u897f\u5dde\u897f\u90e8\uff1aUnion City, Jackson, Dyersburg, Martin, Brownsville, Paris, Bolivar",
"Western Washington: Olympia, Vancouver, Bellingham, Bremerton, Port Angeles, Aberdeen":"\u534e\u76db\u987f\u5dde\u897f\u90e8\uff1aOlympia, Vancouver, Bellingham, Bremerton, Port Angeles, Aberdeen","Western and Southern Texas: Corpus Christi, Victoria, George":"\u5fb7\u514b\u8428\u65af\u5dde\u897f\u5357\u90e8\uff1aCorpus Christi, Victoria, George",Wisconsin:"\u5a01\u65af\u5eb7\u661f\u5dde","Wisconsin: Milwaukee":"\u5a01\u65af\u5eb7\u661f\u5dde\uff1aMilwaukee",Wudu:"\u6b66\u90fd\u53bf(\u9647\u5357\u5730\u533a)",
"Wudu \u6b66\u90fd\u53bf (\u9647\u5357\u5730\u533a)":"\u6b66\u90fd\u53bf (\u9647\u5357\u5730\u533a)",Wuhai:"\u4e4c\u6d77\u5e02","Wuhai \u4e4c\u6d77\u5e02":"\u4e4c\u6d77\u5e02",Wuhan:"\u6b66\u6c49\u5e02","Wuhan \u6b66\u6c49\u5e02":"\u6b66\u6c49\u5e02",Wuhu:"\u829c\u6e56\u5e02","Wuhu \u829c\u6e56\u5e02":"\u829c\u6e56\u5e02",Wulanhaote:"\u4e4c\u5170\u6d69\u7279\u5e02(\u5174\u5b89\u76df)","Wulanhaote \u4e4c\u5170\u6d69\u7279\u5e02 (\u5174\u5b89\u76df)":"\u4e4c\u5170\u6d69\u7279\u5e02 (\u5174\u5b89\u76df)",
Wuxi:"\u65e0\u9521\u5e02","Wuxi \u65e0\u9521\u5e02":"\u65e0\u9521\u5e02",Wuzhong:"\u5434\u5fe0\u5e02","Wuzhong \u5434\u5fe0\u5e02":"\u5434\u5fe0\u5e02",Wuzhou:"\u68a7\u5dde\u5e02","Wuzhou \u68a7\u5dde\u5e02":"\u68a7\u5dde\u5e02",Wyoming:"\u6000\u4fc4\u660e\u5dde",XiAn:"\u897f\u5b89\u5e02","XiAn \u897f\u5b89\u5e02, Xianyang \u54b8\u9633\u5e02":"\u897f\u5b89\u5e02,\u54b8\u9633\u5e02",Xiamen:"\u53a6\u95e8\u5e02","Xiamen \u53a6\u95e8\u5e02":"\u53a6\u95e8\u5e02",Xiangfan:"\u8944\u6a0a\u5e02","Xiangfan \u8944\u6a0a\u5e02":"\u8944\u6a0a\u5e02",
Xianning:"\u54b8\u5b81\u5e02","Xianning \u54b8\u5b81\u5e02":"\u54b8\u5b81\u5e02",Xiantao:"\u4ed9\u6843\u5e02","Xiantao \u4ed9\u6843\u5e02":"\u4ed9\u6843\u5e02",Xiaogan:"\u5b5d\u611f\u5e02","Xiaogan \u5b5d\u611f\u5e02":"\u5b5d\u611f\u5e02",Xichang:"\u897f\u660c\u5e02(\u51c9\u5c71\u5f5d\u65cf\u81ea\u6cbb\u5dde)","Xichang \u897f\u660c\u5e02(\u51c9\u5c71 \u5f5d\u65cf\u81ea\u6cbb\u5dde)":"\u897f\u660c\u5e02(\u51c9\u5c71 \u5f5d\u65cf\u81ea\u6cbb\u5dde)",Xifeng:"\u897f\u5cf0\u5e02(\u5e86\u9633\u5730\u533a)",
"Xifeng \u897f\u5cf0\u5e02 (\u5e86\u9633\u5730\u533a)":"\u897f\u5cf0\u5e02 (\u5e86\u9633\u5730\u533a)",Xilinhaote:"\u9521\u6797\u6d69\u7279\u5e02(\u9521\u6797\u90ed\u52d2\u76df)","Xilinhaote \u9521\u6797\u6d69\u7279\u5e02 (\u9521\u6797\u90ed\u52d2\u76df)":"\u9521\u6797\u6d69\u7279\u5e02 (\u9521\u6797\u90ed\u52d2\u76df)",Xingtai:"\u90a2\u53f0\u5e02","Xingtai \u90a2\u53f0\u5e02":"\u90a2\u53f0\u5e02",Xingyi:"\u5174\u4e49\u5e02(\u9ed4\u897f\u5357\u5e03\u4f9d\u65cf\u82d7\u65cf\u81ea\u6cbb\u5dde)","Xingyi \u5174\u4e49\u5e02 (\u9ed4\u897f\u5357\u5e03\u4f9d\u65cf \u82d7\u65cf\u81ea\u6cbb\u5dde)":"\u5174\u4e49\u5e02 (\u9ed4\u897f\u5357\u5e03\u4f9d\u65cf \u82d7\u65cf\u81ea\u6cbb\u5dde)",
Xining:"\u897f\u5b81\u5e02","Xining \u897f\u5b81\u5e02":"\u897f\u5b81\u5e02",Xinxiang:"\u65b0\u4e61\u5e02","Xinxiang \u65b0\u4e61\u5e02":"\u65b0\u4e61\u5e02",Xinyang:"\u4fe1\u9633\u5e02\u3001\u6f62\u5ddd\u53bf","Xinyang \u4fe1\u9633\u5e02\u3001\u6f62\u5ddd\u53bf":"\u4fe1\u9633\u5e02\u3001\u6f62\u5ddd\u53bf",Xinyu:"\u65b0\u4f59\u5e02","Xinyu \u65b0\u4f59\u5e02":"\u65b0\u4f59\u5e02",Xinzhou:"\u5ffb\u5dde\u5e02(\u5ffb\u5dde\u5730\u533a)","Xinzhou \u5ffb\u5dde\u5e02 (\u5ffb\u5dde\u5730\u533a)":"\u5ffb\u5dde\u5e02 (\u5ffb\u5dde\u5730\u533a)",
Xuancheng:"\u5ba3\u57ce\u5e02","Xuancheng \u5ba3\u57ce\u5e02":"\u5ba3\u57ce\u5e02",Xuchang:"\u8bb8\u660c\u5e02","Xuchang \u8bb8\u660c\u5e02":"\u8bb8\u660c\u5e02",Xuzhou:"\u5f90\u5dde\u5e02","Xuzhou \u5f90\u5dde\u5e02":"\u5f90\u5dde\u5e02",YaAn:"\u96c5\u5b89\u5e02","YaAn \u96c5\u5b89\u5e02":"\u96c5\u5b89\u5e02",YanAn:"\u5ef6\u5b89\u5e02","YanAn \u5ef6\u5b89\u5e02":"\u5ef6\u5b89\u5e02",Yancheng:"\u76d0\u57ce\u5e02","Yancheng \u76d0\u57ce\u5e02":"\u76d0\u57ce\u5e02",Yangjiang:"\u9633\u6c5f\u5e02","Yangjiang \u9633\u6c5f\u5e02":"\u9633\u6c5f\u5e02",
Yangquan:"\u9633\u6cc9\u5e02","Yangquan \u9633\u6cc9\u5e02":"\u9633\u6cc9\u5e02",Yangzhou:"\u626c\u5dde\u5e02","Yangzhou \u626c\u5dde\u5e02":"\u626c\u5dde\u5e02",Yantai:"\u70df\u53f0\u5e02","Yantai \u70df\u53f0\u5e02":"\u70df\u53f0\u5e02",Yemen:"\u4e5f\u95e8",Yibin:"\u5b9c\u5bbe\u5e02","Yibin \u5b9c\u5bbe\u5e02":"\u5b9c\u5bbe\u5e02",Yichang:"\u5b9c\u660c\u5e02","Yichang \u5b9c\u660c\u5e02":"\u5b9c\u660c\u5e02",Yichun:"\u4f0a\u6625\u5e02","Yichun \u4f0a\u6625\u5e02":"\u4f0a\u6625\u5e02","Yichun \u5b9c\u6625\u5e02":"\u5b9c\u6625\u5e02",
Yinchuan:"\u94f6\u5ddd\u5e02","Yinchuan \u94f6\u5ddd\u5e02":"\u94f6\u5ddd\u5e02",Yingkou:"\u8425\u53e3\u5e02","Yingkou \u8425\u53e3\u5e02":"\u8425\u53e3\u5e02",Yingtan:"\u9e70\u6f6d\u5e02","Yingtan \u9e70\u6f6d\u5e02":"\u9e70\u6f6d\u5e02",Yining:"\u4f0a\u5b81\u5e02(\u4f0a\u7281\u54c8\u8428\u514b\u81ea\u6cbb\u5dde)","Yining \u4f0a\u5b81\u5e02(\u4f0a\u7281 \u54c8\u8428\u514b\u81ea\u6cbb\u5dde)":"\u4f0a\u5b81\u5e02(\u4f0a\u7281 \u54c8\u8428\u514b\u81ea\u6cbb\u5dde)",Yiyang:"\u76ca\u9633\u5e02","Yiyang \u76ca\u9633\u5e02":"\u76ca\u9633\u5e02",
Yongzhou:"\u6c38\u5dde\u5e02","Yongzhou \u6c38\u5dde\u5e02":"\u6c38\u5dde\u5e02",Yuci:"\u6986\u6b21\u5e02(\u664b\u4e2d\u5730\u533a)","Yuci \u6986\u6b21\u5e02 (\u664b\u4e2d\u5730\u533a)":"\u6986\u6b21\u5e02 (\u664b\u4e2d\u5730\u533a)",Yueyang:"\u5cb3\u9633\u5e02","Yueyang \u5cb3\u9633\u5e02":"\u5cb3\u9633\u5e02",Yukon:"\u80b2\u7a7a","Yukon, Northwest Territories, and Nunavut, Canada":"\u52a0\u62ff\u5927\u80b2\u7a7a\u5730\u533a\uff0c\u897f\u5317\u5730\u533a\u548c\u52aa\u7eb3\u6b66\u7279\u5730\u533a",
Yulin:"\u7389\u6797\u5e02","Yulin \u6986\u6797\u5e02":"\u6986\u6797\u5e02","Yulin \u7389\u6797\u5e02":"\u7389\u6797\u5e02",Yuncheng:"\u8fd0\u57ce\u5e02(\u8fd0\u57ce\u5730\u533a)","Yuncheng \u8fd0\u57ce\u5e02 (\u8fd0\u57ce\u5730\u533a)":"\u8fd0\u57ce\u5e02 (\u8fd0\u57ce\u5730\u533a)",Yunfu:"\u4e91\u6d6e\u5e02","Yunfu \u4e91\u6d6e\u5e02":"\u4e91\u6d6e\u5e02",Yushu:"\u7389\u6811\u53bf(\u7389\u6811\u85cf\u65cf\u81ea\u6cbb\u5dde)","Yushu \u7389\u6811\u53bf(\u7389\u6811 \u85cf\u65cf\u81ea\u6cbb\u5dde)":"\u7389\u6811\u53bf(\u7389\u6811 \u85cf\u65cf\u81ea\u6cbb\u5dde)",
Yuxi:"\u7389\u6eaa\u5e02","Yuxi \u7389\u6eaa\u5e02":"\u7389\u6eaa\u5e02",Zambia:"\u8d5e\u6bd4\u4e9a",Zaozhuang:"\u67a3\u5e84\u5e02","Zaozhuang \u67a3\u5e84\u5e02":"\u67a3\u5e84\u5e02",Zaragoza:"\u8428\u62c9\u6208\u8428",Zhada:"\u624e\u8fbe\u53bf","Zhada \u624e\u8fbe\u53bf":"\u624e\u8fbe\u53bf",Zhangjiajie:"\u5f20\u5bb6\u754c\u5e02","Zhangjiajie \u5f20\u5bb6\u754c\u5e02":"\u5f20\u5bb6\u754c\u5e02",Zhangjiakou:"\u5f20\u5bb6\u53e3\u5e02","Zhangjiakou \u5f20\u5bb6\u53e3\u5e02":"\u5f20\u5bb6\u53e3\u5e02",
Zhangye:"\u5f20\u6396\u5e02(\u5f20\u6396\u5730\u533a)","Zhangye \u5f20\u6396\u5e02 (\u5f20\u6396\u5730\u533a)":"\u5f20\u6396\u5e02 (\u5f20\u6396\u5730\u533a)",Zhangzhou:"\u6f33\u5dde\u5e02","Zhangzhou \u6f33\u5dde\u5e02":"\u6f33\u5dde\u5e02",Zhanjiang:"\u6e5b\u6c5f\u5e02","Zhanjiang \u6e5b\u6c5f\u5e02":"\u6e5b\u6c5f\u5e02",Zhaoqing:"\u8087\u5e86\u5e02","Zhaoqing \u8087\u5e86\u5e02":"\u8087\u5e86\u5e02",Zhaotong:"\u662d\u901a\u5e02(\u662d\u901a\u5730\u533a)","Zhaotong \u662d\u901a\u5e02 (\u662d\u901a\u5730\u533a)":"\u662d\u901a\u5e02 (\u662d\u901a\u5730\u533a)",
Zhengzhou:"\u90d1\u5dde\u5e02","Zhengzhou \u90d1\u5dde\u5e02":"\u90d1\u5dde\u5e02",Zhenjiang:"\u9547\u6c5f\u5e02","Zhenjiang \u9547\u6c5f\u5e02":"\u9547\u6c5f\u5e02",Zhongba:"\u4ef2\u5df4\u53bf","Zhongba \u4ef2\u5df4\u53bf":"\u4ef2\u5df4\u53bf",Zhongdian:"\u4e2d\u7538\u53bf(\u8fea\u5e86\u85cf\u65cf\u81ea\u6cbb\u5dde)","Zhongdian \u4e2d\u7538\u53bf(\u8fea\u5e86 \u85cf\u65cf\u81ea\u6cbb\u5dde)":"\u4e2d\u7538\u53bf(\u8fea\u5e86 \u85cf\u65cf\u81ea\u6cbb\u5dde)",Zhongshan:"\u4e2d\u5c71\u5e02","Zhongshan \u4e2d\u5c71\u5e02":"\u4e2d\u5c71\u5e02",
Zhongwei:"\u4e2d\u536b\u5e02\u3001\u4e2d\u5b81\u53bf\u3001\u6d77\u539f\u53bf(\u4e2d\u536b\u5730\u533a)","Zhongwei \u4e2d\u536b\u5e02\u3001\u4e2d\u5b81\u53bf\u3001\u6d77\u539f\u53bf (\u4e2d\u536b\u5730\u533a)":"\u4e2d\u536b\u5e02\u3001\u4e2d\u5b81\u53bf\u3001\u6d77\u539f\u53bf (\u4e2d\u536b\u5730\u533a)",Zhoukou:"\u5468\u53e3\u5e02","Zhoukou \u5468\u53e3\u5e02":"\u5468\u53e3\u5e02",Zhoushan:"\u821f\u5c71\u5e02","Zhoushan \u821f\u5c71\u5e02":"\u821f\u5c71\u5e02",Zhuhai:"\u73e0\u6d77\u5e02","Zhuhai \u73e0\u6d77\u5e02":"\u73e0\u6d77\u5e02",
Zhumadian:"\u9a7b\u9a6c\u5e97\u5e02","Zhumadian \u9a7b\u9a6c\u5e97\u5e02":"\u9a7b\u9a6c\u5e97\u5e02",Zibo:"\u6dc4\u535a\u5e02","Zibo \u6dc4\u535a\u5e02":"\u6dc4\u535a\u5e02",Zigong:"\u81ea\u8d21\u5e02","Zigong \u81ea\u8d21\u5e02":"\u81ea\u8d21\u5e02",Zimbabwe:"\u6d25\u5df4\u5e03\u97e6",Zunyi:"\u9075\u4e49\u5e02","Zunyi \u9075\u4e49\u5e02":"\u9075\u4e49\u5e02","\u00c1vila":"\u963f\u7ef4\u62c9"};
ilib.GeoLocator=function $ilib$GeoLocator$($options$$){var $sync$$=true,$loadParams$$={},$locale$$=ilib.getLocale();if($options$$){if($options$$.locale)$locale$$=$options$$.locale;if(typeof $options$$.sync==="boolean")$sync$$=$options$$.sync;if($options$$.loadParams)$loadParams$$=$options$$.loadParams}new ilib.Locale.PhoneLoc({locale:$locale$$,mcc:$options$$&&$options$$.mcc,countryCode:$options$$&&$options$$.countryCode,sync:$sync$$,loadParams:$loadParams$$,onLoad:ilib.bind(this,function($loc$$){this.locale=
$loc$$;new ilib.NumPlan({locale:this.locale,sync:$sync$$,loadParams:$loadParams$$,onLoad:ilib.bind(this,function($plan$$){this.plan=$plan$$;new ilib.ResBundle({locale:this.locale,name:"phoneres",sync:$sync$$,loadParams:$loadParams$$,onLoad:ilib.bind(this,function($rb$$){this.rb=$rb$$;ilib.loadData({name:"iddarea.json",object:ilib.GeoLocator,nonlocale:true,sync:$sync$$,loadParams:$loadParams$$,callback:ilib.bind(this,function($data$$){this.regiondata=$data$$;ilib.loadData({name:"area.json",object:ilib.GeoLocator,
locale:this.locale,sync:$sync$$,loadParams:ilib.merge($loadParams$$,{returnOne:true}),callback:ilib.bind(this,function($areadata$$){this.areadata=$areadata$$;if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad(this)})})})})})})})})})})};
ilib.GeoLocator.prototype={_parseAreaAndSubscriber:function $ilib$GeoLocator$$_parseAreaAndSubscriber$($number$$,$stateTable$$){var $ch$$31_newState$$,$i$$,$consumed$$2_handlerMethod$$,$lastLeaf$$,$currentState$$;if($number$$&&$stateTable$$){$currentState$$=$stateTable$$;for($i$$=0;$i$$<$number$$.length;){$ch$$31_newState$$=ilib.PhoneNumber._getCharacterCode($number$$.charAt($i$$));if($ch$$31_newState$$>=0){$ch$$31_newState$$=$currentState$$.s&&$currentState$$.s[$ch$$31_newState$$];!$ch$$31_newState$$&&
($currentState$$.s&&$currentState$$.s[14])&&($ch$$31_newState$$=$currentState$$.s[14]);if(typeof $ch$$31_newState$$==="object"){if(typeof $ch$$31_newState$$.l!=="undefined"){$lastLeaf$$=$ch$$31_newState$$;$consumed$$2_handlerMethod$$=$i$$}$currentState$$=$ch$$31_newState$$;$i$$++}else{if(typeof $ch$$31_newState$$==="undefined"||$ch$$31_newState$$===0){$ch$$31_newState$$=$lastLeaf$$;$i$$=$consumed$$2_handlerMethod$$}if(typeof $ch$$31_newState$$==="number"&&$ch$$31_newState$$||typeof $ch$$31_newState$$===
"object"&&typeof $ch$$31_newState$$.l!=="undefined"){$consumed$$2_handlerMethod$$=ilib.PhoneNumber._states[typeof $ch$$31_newState$$==="number"?$ch$$31_newState$$:$ch$$31_newState$$.l];return $consumed$$2_handlerMethod$$==="area"?$number$$.substring(0,$i$$+1):void 0}break}}else $i$$++}}},_matchPrefix:function $ilib$GeoLocator$$_matchPrefix$($prefix$$,$table$$){var $i$$,$matchedDot$$,$matchesWithDots$$=[];if($table$$[$prefix$$])return $table$$[$prefix$$];for(var $entry$$ in $table$$)if($entry$$&&typeof $entry$$===
"string"){$i$$=0;for($matchedDot$$=false;$i$$<$entry$$.length&&($entry$$.charAt($i$$)===$prefix$$.charAt($i$$)||$entry$$.charAt($i$$)===".");){$entry$$.charAt($i$$)==="."&&($matchedDot$$=true);$i$$++}if($i$$>=$entry$$.length)if($matchedDot$$)$matchesWithDots$$.push($entry$$);else return $table$$[$entry$$]}if($matchesWithDots$$.length>0){$matchesWithDots$$.sort(function($left$$,$right$$){return $right$$<$left$$?-1:$left$$<$right$$?1:0});return $table$$[$matchesWithDots$$[0]]}},_getAreaInfo:function $ilib$GeoLocator$$_getAreaInfo$($number$$,
$areaCode_countryCode$$2_data$$31_temp$$,$locale$$,$plan$$,$options$$){var $sync$$=true,$ret$$={},$areaInfo$$,$geoTable$$,$tempNumber$$,$prefix$$;if($options$$&&typeof $options$$.sync==="boolean")$sync$$=$options$$.sync;$prefix$$=$number$$.areaCode||$number$$.serviceCode;$geoTable$$=$areaCode_countryCode$$2_data$$31_temp$$;if($prefix$$!==void 0)if($plan$$.getExtendedAreaCode()){$tempNumber$$=$prefix$$+$number$$.subscriberNumber;$tempNumber$$=$tempNumber$$.replace(/[wWpPtT\+#\*]/g,"");ilib.loadData({name:"extarea.json",
object:ilib.GeoLocator,locale:$locale$$,sync:$sync$$,loadParams:ilib.merge($options$$&&$options$$.loadParams||{},{returnOne:true}),callback:ilib.bind(this,function($data$$0$$){this.extarea=$data$$0$$;ilib.loadData({name:"extstates.json",object:ilib.GeoLocator,locale:$locale$$,sync:$sync$$,loadParams:ilib.merge($options$$&&$options$$.loadParams||{},{returnOne:true}),callback:ilib.bind(this,function($data$$){this.extstates=$data$$;($geoTable$$=this.extarea)&&this.extstates&&($prefix$$=this._parseAreaAndSubscriber($tempNumber$$,
this.extstates));if(!$prefix$$){$geoTable$$=this.areadata;$prefix$$=$number$$.areaCode||$number$$.serviceCode}if(!$plan$$.fieldLengths||$plan$$.getFieldLength("maxLocalLength")===void 0||!$number$$.subscriberNumber||$number$$.subscriberNumber.length<=$plan$$.fieldLengths("maxLocalLength"))if(($areaInfo$$=this._matchPrefix($prefix$$,$geoTable$$))&&$areaInfo$$.sn&&$areaInfo$$.ln)$ret$$.area={sn:this.rb.getString($areaInfo$$.sn).toString(),ln:this.rb.getString($areaInfo$$.ln).toString()}})})})})}else if(!$plan$$||
$plan$$.getFieldLength("maxLocalLength")===void 0||!$number$$.subscriberNumber||$number$$.subscriberNumber.length<=$plan$$.getFieldLength("maxLocalLength"))if($geoTable$$){$areaCode_countryCode$$2_data$$31_temp$$=$prefix$$.replace(/[wWpPtT\+#\*]/g,"");if(($areaInfo$$=this._matchPrefix($areaCode_countryCode$$2_data$$31_temp$$,$geoTable$$))&&$areaInfo$$.sn&&$areaInfo$$.ln)$ret$$.area={sn:this.rb.getString($areaInfo$$.sn).toString(),ln:this.rb.getString($areaInfo$$.ln).toString()};else if($number$$.serviceCode)$ret$$.area=
{sn:this.rb.getString("Service Number").toString(),ln:this.rb.getString("Service Number").toString()}}else{$areaCode_countryCode$$2_data$$31_temp$$=$number$$.locale._mapRegiontoCC(this.locale.getRegion());if($areaCode_countryCode$$2_data$$31_temp$$!=="0"&&this.regiondata)($areaCode_countryCode$$2_data$$31_temp$$=this.regiondata[$areaCode_countryCode$$2_data$$31_temp$$])&&$areaCode_countryCode$$2_data$$31_temp$$.sn&&($ret$$.country={sn:this.rb.getString($areaCode_countryCode$$2_data$$31_temp$$.sn).toString(),
ln:this.rb.getString($areaCode_countryCode$$2_data$$31_temp$$.ln).toString(),code:this.locale.getRegion()})}else{$areaCode_countryCode$$2_data$$31_temp$$=$number$$.locale._mapRegiontoCC(this.locale.getRegion());if($areaCode_countryCode$$2_data$$31_temp$$!=="0"&&this.regiondata)($areaCode_countryCode$$2_data$$31_temp$$=this.regiondata[$areaCode_countryCode$$2_data$$31_temp$$])&&$areaCode_countryCode$$2_data$$31_temp$$.sn&&($ret$$.country={sn:this.rb.getString($areaCode_countryCode$$2_data$$31_temp$$.sn).toString(),
ln:this.rb.getString($areaCode_countryCode$$2_data$$31_temp$$.ln).toString(),code:this.locale.getRegion()})}else if($number$$.mobilePrefix)$ret$$.area={sn:this.rb.getString("Mobile Number").toString(),ln:this.rb.getString("Mobile Number").toString()};else if($number$$.emergency)$ret$$.area={sn:this.rb.getString("Emergency Services Number").toString(),ln:this.rb.getString("Emergency Services Number").toString()};return $ret$$},locate:function $ilib$GeoLocator$$locate$($number$$,$options$$){var $loadParams$$=
{},$ret$$={},$region$$,$countryCode$$,$temp$$,$plan$$,$areaResult$$,$phoneLoc$$=this.locale,$sync$$=true;if($number$$===void 0||typeof $number$$!=="object"||!($number$$ instanceof ilib.PhoneNumber))return $ret$$;if($options$$){typeof $options$$.sync!=="undefined"&&($sync$$=$options$$.sync==true);if($options$$.loadParams)$loadParams$$=$options$$.loadParams}$region$$=this.locale.getRegion();if($number$$.countryCode!==void 0&&this.regiondata){$countryCode$$=$number$$.countryCode.replace(/[wWpPtT\+#\*]/g,
"");$temp$$=this.regiondata[$countryCode$$];$phoneLoc$$=$number$$.destinationLocale;$plan$$=$number$$.destinationPlan;$ret$$.country={sn:this.rb.getString($temp$$.sn).toString(),ln:this.rb.getString($temp$$.ln).toString(),code:$phoneLoc$$.getRegion()}}if(!$plan$$)$plan$$=this.plan;ilib.loadData({name:"area.json",object:ilib.GeoLocator,locale:$phoneLoc$$,sync:$sync$$,loadParams:ilib.merge($loadParams$$,{returnOne:true}),callback:ilib.bind(this,function($areadata$$){if($areadata$$)this.areadata=$areadata$$;
$areaResult$$=this._getAreaInfo($number$$,this.areadata,$phoneLoc$$,$plan$$,$options$$);$ret$$=ilib.merge($ret$$,$areaResult$$);if($ret$$.country===void 0){$countryCode$$=$number$$.locale._mapRegiontoCC($region$$);if($countryCode$$!=="0"&&this.regiondata)($temp$$=this.regiondata[$countryCode$$])&&$temp$$.sn&&($ret$$.country={sn:this.rb.getString($temp$$.sn).toString(),ln:this.rb.getString($temp$$.ln).toString(),code:this.locale.getRegion()})}})});return $ret$$},country:function $ilib$GeoLocator$$country$($number$$){var $countryCode$$,
$region$$,$phoneLoc$$;if(!$number$$||!($number$$ instanceof ilib.PhoneNumber))return"";$phoneLoc$$=$number$$.locale;$region$$=$number$$.countryCode&&$phoneLoc$$._mapCCtoRegion($number$$.countryCode)||$number$$.locale&&$number$$.locale.region||$phoneLoc$$.locale.getRegion()||this.locale.getRegion();$countryCode$$=$number$$.countryCode||$phoneLoc$$._mapRegiontoCC($region$$);$number$$.areaCode?$region$$=$phoneLoc$$._mapAreatoRegion($countryCode$$,$number$$.areaCode):$countryCode$$==="33"&&$number$$.serviceCode&&
($region$$=$phoneLoc$$._mapAreatoRegion($countryCode$$,$number$$.serviceCode));return $region$$}};
ilib.Measurement=function $ilib$Measurement$($options$$){if($options$$&&typeof $options$$.unit!=="undefined"){this.amount=$options$$.amount||0;var $measure$$=void 0,$c$$;for($c$$ in ilib.Measurement._constructors)if(typeof ilib.Measurement._constructors[$c$$].aliases[$options$$.unit]!=="undefined"){$measure$$=$c$$;break}return!$measure$$||typeof $measure$$==="undefined"?new ilib.Measurement.Unknown({unit:$options$$.unit,amount:$options$$.amount}):new ilib.Measurement._constructors[$measure$$]($options$$)}};
ilib.Measurement._constructors={};ilib.Measurement.getAvailableUnits=function $ilib$Measurement$getAvailableUnits$(){var $units$$=[],$c$$;for($c$$ in ilib.Measurement._constructors)$units$$=$units$$.concat(ilib.Measurement._constructors[$c$$].getMeasures());return $units$$};
ilib.Measurement.metricScales={femto:{symbol:"f",scale:-15},pico:{symbol:"p",scale:-12},nano:{symbol:"n",scale:-9},micro:{symbol:"\u00b5",scale:-6},milli:{symbol:"m",scale:-3},centi:{symbol:"c",scale:-2},deci:{symbol:"d",scale:-1},deca:{symbol:"da",scale:1},hecto:{symbol:"h",scale:2},kilo:{symbol:"k",scale:3},mega:{symbol:"M",scale:6},giga:{symbol:"G",scale:9},peta:{symbol:"P",scale:12},exa:{symbol:"E",scale:18}};
ilib.Measurement.prototype={normalizeUnits:function $ilib$Measurement$$normalizeUnits$($name$$){return this.aliases[$name$$]||$name$$},getUnit:function $ilib$Measurement$$getUnit$(){return this.unit},getOriginalUnit:function $ilib$Measurement$$getOriginalUnit$(){return this.originalUnit},getAmount:function $ilib$Measurement$$getAmount$(){return this.amount},getMeasure:function $ilib$Measurement$$getMeasure$(){},convert:function $ilib$Measurement$$convert$(){},scale:function $ilib$Measurement$$scale$(){},
localize:function $ilib$Measurement$$localize$(){}};
ilib.data.unitfmt={unitfmt:{"long":{"g-force":"1#{n} g-force|#{n} g-force","meter-per-second-squared":"1#{n} meter per second squared|#{n} meters per second squared","arc-minute":"1#{n} arcminute|#{n} arcminutes","arc-second":"1#{n} arcsecond|#{n} arcseconds",degree:"1#{n} degree|#{n} degrees",radian:"1#{n} radian|#{n} radians",acre:"1#{n} acre|#{n} acres",hectare:"1#{n} hectare|#{n} hectares","square centimeter":"1#{n} square centimeter|#{n} square centimeters","square foot":"1#{n} square foot|#{n} square feet",
"square inch":"1#{n} square inch|#{n} square inches","square km":"1#{n} square kilometer|#{n} square kilometers","square meter":"1#{n} square meter|#{n} square meters","square mile":"1#{n} square mile|#{n} square miles","square yard":"1#{n} square yard|#{n} square yards","liter-per-kilometer":"1#{n} liter per kilometer|#{n} liters per kilometer",mpg:"1#{n} mile per gallon|#{n} miles per gallon",bit:"1#{n} bit|#{n} bits","byte":"1#{n} byte|#{n} bytes",gigabit:"1#{n} gigabit|#{n} gigabits",gigabyte:"1#{n} gigabyte|#{n} gigabytes",
kilobit:"1#{n} kilobit|#{n} kilobits",kilobyte:"1#{n} kilobyte|#{n} kilobytes",megabit:"1#{n} megabit|#{n} megabits",megabyte:"1#{n} megabyte|#{n} megabytes",terabit:"1#{n} terabit|#{n} terabits",terabyte:"1#{n} terabyte|#{n} terabytes",day:"1#{n} day|#{n} days",hour:"1#{n} hour|#{n} hours",microsecond:"1#{n} microsecond|#{n} microseconds",millisecond:"1#{n} millisecond|#{n} milliseconds",minute:"1#{n} minute|#{n} minutes",month:"1#{n} month|#{n} months",nanosecond:"1#{n} nanosecond|#{n} nanoseconds",
second:"1#{n} second|#{n} seconds",week:"1#{n} week|#{n} weeks",year:"1#{n} year|#{n} years",ampere:"1#{n} ampere|#{n} amperes",milliampere:"1#{n} milliampere|#{n} milliamperes",ohm:"1#{n} ohm|#{n} ohms",volt:"1#{n} volt|#{n} volts",calorie:"1#{n} Calorie|#{n} Calories",joule:"1#{n} joule|#{n} joules",kilocalorie:"1#{n} kilocalorie|#{n} kilocalories",kilojoule:"1#{n} kilojoule|#{n} kilojoules","kilowatt hour":"1#{n} kilowatt hour|#{n} kilowatt-hours",gigahertz:"1#{n} gigahertz|#{n} gigahertz",hertz:"1#{n} hertz|#{n} hertz",
kilohertz:"1#{n} kilohertz|#{n} kilohertz",megahertz:"1#{n} megahertz|#{n} megahertz","astronomical-unit":"1#{n} astronomical unit|#{n} astronomical units",centimeter:"1#{n} centimeter|#{n} centimeters",decimeter:"1#{n} decimeter|#{n} decimeters",fathom:"1#{n} fathom|#{n} fathoms",foot:"1#{n} foot|#{n} feet",furlong:"1#{n} furlong|#{n} furlongs",inch:"1#{n} inch|#{n} inches",kilometer:"1#{n} kilometer|#{n} kilometers","light-year":"1#{n} light year|#{n} light years",meter:"1#{n} meter|#{n} meters",
micrometer:"1#{n} micrometer|#{n} micrometers",mile:"1#{n} mile|#{n} miles",millimeter:"1#{n} millimeter|#{n} millimeters",nanometer:"1#{n} nanometer|#{n} nanometers",nauticalmile:"1#{n} nautical mile|#{n} nautical miles",parsec:"1#{n} parsec|#{n} parsecs",picometer:"1#{n} picometer|#{n} picometers",yard:"1#{n} yard|#{n} yards",lux:"1#{n} lux|#{n} lux",carat:"1#{n} carat|#{n} carats",gram:"1#{n} gram|#{n} grams",kilogram:"1#{n} kilogram|#{n} kilograms","metric ton":"1#{n} metric ton|#{n} metric tons",
microgram:"1#{n} microgram|#{n} micrograms",milligram:"1#{n} milligram|#{n} milligrams",ounce:"1#{n} ounce|#{n} ounces","ounce-troy":"1#{n} troy ounce|#{n} troy ounces",pound:"1#{n} pound|#{n} pounds",stone:"1#{n} stone|#{n} stones","long ton":"1#{n} ton|#{n} tons",gigawatt:"1#{n} gigawatt|#{n} gigawatts",horsepower:"1#{n} horsepower|#{n} horsepower",kilowatt:"1#{n} kilowatt|#{n} kilowatts",megawatt:"1#{n} megawatt|#{n} megawatts",milliwatt:"1#{n} milliwatt|#{n} milliwatts",watt:"1#{n} watt|#{n} watts",
hectopascal:"1#{n} hectopascal|#{n} hectopascals","inch-hg":"1#{n} inch of mercury|#{n} inches of mercury",millibar:"1#{n} millibar|#{n} millibars","millimeter-of-mercury":"1#{n} millimeter of mercury|#{n} millimeters of mercury","pound-per-square-inch":"1#{n} pound per square inch|#{n} pounds per square inch",karat:"1#{n} karat|#{n} karats","kilometer/hour":"1#{n} kilometer per hour|#{n} kilometers per hour","meters/second":"1#{n} meter per second|#{n} meters per second","miles/hour":"1#{n} mile per hour|#{n} miles per hour",
celsius:"1#{n} degree Celsius|#{n} degrees Celsius",fahrenheit:"1#{n} degree Fahrenheit|#{n} degrees Fahrenheit",kelvin:"1#{n} kelvin|#{n} kelvins","acre-foot":"1#{n} acre-foot|#{n} acre-feet",bushel:"1#{n} bushel|#{n} bushels",centiliter:"1#{n} centiliter|#{n} centiliters","cubic-centimeter":"1#{n} cubic centimeter|#{n} cubic centimeters","cubic foot":"1#{n} cubic foot|#{n} cubic feet","cubic inch":"1#{n} cubic inch|#{n} cubic inches","cubic-kilometer":"1#{n} cubic kilometer|#{n} cubic kilometers",
"cubic meter":"1#{n} cubic meter|#{n} cubic meters","cubic-mile":"1#{n} cubic mile|#{n} cubic miles","cubic-yard":"1#{n} cubic yard|#{n} cubic yards",cup:"1#{n} cup|#{n} cups",deciliter:"1#{n} deciliter|#{n} deciliters","us ounce":"1#{n} fluid ounce|#{n} fluid ounces",gallon:"1#{n} gallon|#{n} gallons",hectoliter:"1#{n} hectoliter|#{n} hectoliters",liter:"1#{n} liter|#{n} liters",megaliter:"1#{n} megaliter|#{n} megaliters",milliliter:"1#{n} milliliter|#{n} milliliters",pint:"1#{n} pint|#{n} pints",
quart:"1#{n} quart|#{n} quarts",tbsp:"1#{n} tablespoon|#{n} tablespoons",tsp:"1#{n} teaspoon|#{n} teaspoons",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",
gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second",
"miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},
"short":{"g-force":"1#{n} G|#{n} G","meter-per-second-squared":"1#{n} m/s\u00b2|#{n} m/s\u00b2","arc-minute":"1#{n} arcmin|#{n} arcmins","arc-second":"1#{n} arcsec|#{n} arcsecs",degree:"1#{n} deg|#{n} deg",radian:"1#{n} rad|#{n} rad",acre:"1#{n} ac|#{n} ac",hectare:"1#{n} ha|#{n} ha","square centimeter":"1#{n} cm\u00b2|#{n} cm\u00b2","square foot":"1#{n} sq ft|#{n} sq ft","square inch":"1#{n} in\u00b2|#{n} in\u00b2","square km":"1#{n} km\u00b2|#{n} km\u00b2","square meter":"1#{n} m\u00b2|#{n} m\u00b2",
"square mile":"1#{n} sq mi|#{n} sq mi","square yard":"1#{n} yd\u00b2|#{n} yd\u00b2","liter-per-kilometer":"1#{n} L/km|#{n} L/km",mpg:"1#{n} mpg|#{n} mpg",bit:"1#{n} bit|#{n} bit","byte":"1#{n} byte|#{n} byte",gigabit:"1#{n} Gb|#{n} Gb",gigabyte:"1#{n} GB|#{n} GB",kilobit:"1#{n} kb|#{n} kb",kilobyte:"1#{n} kB|#{n} kB",megabit:"1#{n} Mb|#{n} Mb",megabyte:"1#{n} MB|#{n} MB",terabit:"1#{n} Tb|#{n} Tb",terabyte:"1#{n} TB|#{n} TB",day:"1#{n} day|#{n} days",hour:"1#{n} hr|#{n} hrs",microsecond:"1#{n} \u03bcs|#{n} \u03bcs",
millisecond:"1#{n} ms|#{n} ms",minute:"1#{n} min|#{n} mins",month:"1#{n} mth|#{n} mths",nanosecond:"1#{n} ns|#{n} ns",second:"1#{n} sec|#{n} secs",week:"1#{n} wk|#{n} wks",year:"1#{n} yr|#{n} yrs",ampere:"1#{n} A|#{n} A",milliampere:"1#{n} mA|#{n} mA",ohm:"1#{n} \u03a9|#{n} \u03a9",volt:"1#{n} V|#{n} V",calorie:"1#{n} Cal|#{n} Cal",joule:"1#{n} J|#{n} J",kilocalorie:"1#{n} kcal|#{n} kcal",kilojoule:"1#{n} kJ|#{n} kJ","kilowatt hour":"1#{n} kWh|#{n} kWh",gigahertz:"1#{n} GHz|#{n} GHz",hertz:"1#{n} Hz|#{n} Hz",
kilohertz:"1#{n} kHz|#{n} kHz",megahertz:"1#{n} MHz|#{n} MHz","astronomical-unit":"1#{n} au|#{n} au",centimeter:"1#{n} cm|#{n} cm",decimeter:"1#{n} dm|#{n} dm",fathom:"1#{n} ftm|#{n} ftm",foot:"1#{n} ft|#{n} ft",furlong:"1#{n} fur|#{n} fur",inch:"1#{n} in|#{n} in",kilometer:"1#{n} km|#{n} km","light-year":"1#{n} ly|#{n} ly",meter:"1#{n} m|#{n} m",micrometer:"1#{n} \u00b5m|#{n} \u00b5m",mile:"1#{n} mi|#{n} mi",millimeter:"1#{n} mm|#{n} mm",nanometer:"1#{n} nm|#{n} nm",nauticalmile:"1#{n} nmi|#{n} nmi",
parsec:"1#{n} pc|#{n} pc",picometer:"1#{n} pm|#{n} pm",yard:"1#{n} yd|#{n} yd",lux:"1#{n} lx|#{n} lx",carat:"1#{n} CD|#{n} CD",gram:"1#{n} g|#{n} g",kilogram:"1#{n} kg|#{n} kg","metric ton":"1#{n} t|#{n} t",microgram:"1#{n} \u00b5g|#{n} \u00b5g",milligram:"1#{n} mg|#{n} mg",ounce:"1#{n} oz|#{n} oz","ounce-troy":"1#{n} oz t|#{n} oz t",pound:"1#{n} lb|#{n} lb",stone:"1#{n} st|#{n} st","long ton":"1#{n} tn|#{n} tn",gigawatt:"1#{n} GW|#{n} GW",horsepower:"1#{n} hp|#{n} hp",kilowatt:"1#{n} kW|#{n} kW",
megawatt:"1#{n} MW|#{n} MW",milliwatt:"1#{n} mW|#{n} mW",watt:"1#{n} W|#{n} W",hectopascal:"1#{n} hPa|#{n} hPa","inch-hg":"1#{n} inHg|#{n} inHg",millibar:"1#{n} mbar|#{n} mbar","millimeter-of-mercury":"1#{n} mm Hg|#{n} mm Hg","pound-per-square-inch":"1#{n} psi|#{n} psi",karat:"1#{n} kt|#{n} kt","kilometer/hour":"1#{n} kph|#{n} kph","meters/second":"1#{n} m/s|#{n} m/s","miles/hour":"1#{n} mph|#{n} mph",celsius:"1#{n}\u00b0C|#{n}\u00b0C",fahrenheit:"1#{n}\u00b0F|#{n}\u00b0F",kelvin:"1#{n} K|#{n} K",
"acre-foot":"1#{n} ac ft|#{n} ac ft",bushel:"1#{n} bu|#{n} bu",centiliter:"1#{n} cL|#{n} cL","cubic-centimeter":"1#{n} cm\u00b3|#{n} cm\u00b3","cubic foot":"1#{n} ft\u00b3|#{n} ft\u00b3","cubic inch":"1#{n} in\u00b3|#{n} in\u00b3","cubic-kilometer":"1#{n} km\u00b3|#{n} km\u00b3","cubic meter":"1#{n} m\u00b3|#{n} m\u00b3","cubic-mile":"1#{n} mi\u00b3|#{n} mi\u00b3","cubic-yard":"1#{n} yd\u00b3|#{n} yd\u00b3",cup:"1#{n} c|#{n} c",deciliter:"1#{n} dL|#{n} dL","us ounce":"1#{n} fl oz|#{n} fl oz",gallon:"1#{n} gal|#{n} gal",
hectoliter:"1#{n} hL|#{n} hL",liter:"1#{n} L|#{n} L",megaliter:"1#{n} ML|#{n} ML",milliliter:"1#{n} mL|#{n} mL",pint:"1#{n} pt|#{n} pt",quart:"1#{n} qt|#{n} qt",tbsp:"1#{n} tbsp|#{n} tbsp",tsp:"1#{n} tsp|#{n} tsp",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",
gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp",
"imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_en={unitfmt:{"long":{"g-force":"1#{n} g-force|#{n} g-force","meter-per-second-squared":"1#{n} meter per second squared|#{n} meters per second squared","arc-minute":"1#{n} arcminute|#{n} arcminutes","arc-second":"1#{n} arcsecond|#{n} arcseconds",degree:"1#{n} degree|#{n} degrees",radian:"1#{n} radian|#{n} radians",acre:"1#{n} acre|#{n} acres",hectare:"1#{n} hectare|#{n} hectares","square centimeter":"1#{n} square centimeter|#{n} square centimeters","square foot":"1#{n} square foot|#{n} square feet",
"square inch":"1#{n} square inch|#{n} square inches","square km":"1#{n} square kilometer|#{n} square kilometers","square meter":"1#{n} square meter|#{n} square meters","square mile":"1#{n} square mile|#{n} square miles","square yard":"1#{n} square yard|#{n} square yards","liter-per-kilometer":"1#{n} liter per kilometer|#{n} liters per kilometer",mpg:"1#{n} mile per gallon|#{n} miles per gallon",bit:"1#{n} bit|#{n} bits","byte":"1#{n} byte|#{n} bytes",gigabit:"1#{n} gigabit|#{n} gigabits",gigabyte:"1#{n} gigabyte|#{n} gigabytes",
kilobit:"1#{n} kilobit|#{n} kilobits",kilobyte:"1#{n} kilobyte|#{n} kilobytes",megabit:"1#{n} megabit|#{n} megabits",megabyte:"1#{n} megabyte|#{n} megabytes",terabit:"1#{n} terabit|#{n} terabits",terabyte:"1#{n} terabyte|#{n} terabytes",day:"1#{n} day|#{n} days",hour:"1#{n} hour|#{n} hours",microsecond:"1#{n} microsecond|#{n} microseconds",millisecond:"1#{n} millisecond|#{n} milliseconds",minute:"1#{n} minute|#{n} minutes",month:"1#{n} month|#{n} months",nanosecond:"1#{n} nanosecond|#{n} nanoseconds",
second:"1#{n} second|#{n} seconds",week:"1#{n} week|#{n} weeks",year:"1#{n} year|#{n} years",ampere:"1#{n} ampere|#{n} amperes",milliampere:"1#{n} milliampere|#{n} milliamperes",ohm:"1#{n} ohm|#{n} ohms",volt:"1#{n} volt|#{n} volts",calorie:"1#{n} Calorie|#{n} Calories",joule:"1#{n} joule|#{n} joules",kilocalorie:"1#{n} kilocalorie|#{n} kilocalories",kilojoule:"1#{n} kilojoule|#{n} kilojoules","kilowatt hour":"1#{n} kilowatt hour|#{n} kilowatt-hours",gigahertz:"1#{n} gigahertz|#{n} gigahertz",hertz:"1#{n} hertz|#{n} hertz",
kilohertz:"1#{n} kilohertz|#{n} kilohertz",megahertz:"1#{n} megahertz|#{n} megahertz","astronomical-unit":"1#{n} astronomical unit|#{n} astronomical units",centimeter:"1#{n} centimeter|#{n} centimeters",decimeter:"1#{n} decimeter|#{n} decimeters",fathom:"1#{n} fathom|#{n} fathoms",foot:"1#{n} foot|#{n} feet",furlong:"1#{n} furlong|#{n} furlongs",inch:"1#{n} inch|#{n} inches",kilometer:"1#{n} kilometer|#{n} kilometers","light-year":"1#{n} light year|#{n} light years",meter:"1#{n} meter|#{n} meters",
micrometer:"1#{n} micrometer|#{n} micrometers",mile:"1#{n} mile|#{n} miles",millimeter:"1#{n} millimeter|#{n} millimeters",nanometer:"1#{n} nanometer|#{n} nanometers",nauticalmile:"1#{n} nautical mile|#{n} nautical miles",parsec:"1#{n} parsec|#{n} parsecs",picometer:"1#{n} picometer|#{n} picometers",yard:"1#{n} yard|#{n} yards",lux:"1#{n} lux|#{n} lux",carat:"1#{n} carat|#{n} carats",gram:"1#{n} gram|#{n} grams",kilogram:"1#{n} kilogram|#{n} kilograms","metric ton":"1#{n} metric ton|#{n} metric tons",
microgram:"1#{n} microgram|#{n} micrograms",milligram:"1#{n} milligram|#{n} milligrams",ounce:"1#{n} ounce|#{n} ounces","ounce-troy":"1#{n} troy ounce|#{n} troy ounces",pound:"1#{n} pound|#{n} pounds",stone:"1#{n} stone|#{n} stones","long ton":"1#{n} ton|#{n} tons",gigawatt:"1#{n} gigawatt|#{n} gigawatts",horsepower:"1#{n} horsepower|#{n} horsepower",kilowatt:"1#{n} kilowatt|#{n} kilowatts",megawatt:"1#{n} megawatt|#{n} megawatts",milliwatt:"1#{n} milliwatt|#{n} milliwatts",watt:"1#{n} watt|#{n} watts",
hectopascal:"1#{n} hectopascal|#{n} hectopascals","inch-hg":"1#{n} inch of mercury|#{n} inches of mercury",millibar:"1#{n} millibar|#{n} millibars","millimeter-of-mercury":"1#{n} millimeter of mercury|#{n} millimeters of mercury","pound-per-square-inch":"1#{n} pound per square inch|#{n} pounds per square inch",karat:"1#{n} karat|#{n} karats","kilometer/hour":"1#{n} kilometer per hour|#{n} kilometers per hour","meters/second":"1#{n} meter per second|#{n} meters per second","miles/hour":"1#{n} mile per hour|#{n} miles per hour",
celsius:"1#{n} degree Celsius|#{n} degrees Celsius",fahrenheit:"1#{n} degree Fahrenheit|#{n} degrees Fahrenheit",kelvin:"1#{n} kelvin|#{n} kelvins","acre-foot":"1#{n} acre-foot|#{n} acre-feet",bushel:"1#{n} bushel|#{n} bushels",centiliter:"1#{n} centiliter|#{n} centiliters","cubic-centimeter":"1#{n} cubic centimeter|#{n} cubic centimeters","cubic foot":"1#{n} cubic foot|#{n} cubic feet","cubic inch":"1#{n} cubic inch|#{n} cubic inches","cubic-kilometer":"1#{n} cubic kilometer|#{n} cubic kilometers",
"cubic meter":"1#{n} cubic meter|#{n} cubic meters","cubic-mile":"1#{n} cubic mile|#{n} cubic miles","cubic-yard":"1#{n} cubic yard|#{n} cubic yards",cup:"1#{n} cup|#{n} cups",deciliter:"1#{n} deciliter|#{n} deciliters","us ounce":"1#{n} fluid ounce|#{n} fluid ounces",gallon:"1#{n} gallon|#{n} gallons",hectoliter:"1#{n} hectoliter|#{n} hectoliters",liter:"1#{n} liter|#{n} liters",megaliter:"1#{n} megaliter|#{n} megaliters",milliliter:"1#{n} milliliter|#{n} milliliters",pint:"1#{n} pint|#{n} pints",
quart:"1#{n} quart|#{n} quarts",tbsp:"1#{n} tablespoon|#{n} tablespoons",tsp:"1#{n} teaspoon|#{n} teaspoons",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",
gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second",
"miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},
"short":{"g-force":"1#{n} G|#{n} G","meter-per-second-squared":"1#{n} m/s\u00b2|#{n} m/s\u00b2","arc-minute":"1#{n} arcmin|#{n} arcmins","arc-second":"1#{n} arcsec|#{n} arcsecs",degree:"1#{n} deg|#{n} deg",radian:"1#{n} rad|#{n} rad",acre:"1#{n} ac|#{n} ac",hectare:"1#{n} ha|#{n} ha","square centimeter":"1#{n} cm\u00b2|#{n} cm\u00b2","square foot":"1#{n} sq ft|#{n} sq ft","square inch":"1#{n} in\u00b2|#{n} in\u00b2","square km":"1#{n} km\u00b2|#{n} km\u00b2","square meter":"1#{n} m\u00b2|#{n} m\u00b2",
"square mile":"1#{n} sq mi|#{n} sq mi","square yard":"1#{n} yd\u00b2|#{n} yd\u00b2","liter-per-kilometer":"1#{n} L/km|#{n} L/km",mpg:"1#{n} mpg|#{n} mpg",bit:"1#{n} bit|#{n} bit","byte":"1#{n} byte|#{n} byte",gigabit:"1#{n} Gb|#{n} Gb",gigabyte:"1#{n} GB|#{n} GB",kilobit:"1#{n} kb|#{n} kb",kilobyte:"1#{n} kB|#{n} kB",megabit:"1#{n} Mb|#{n} Mb",megabyte:"1#{n} MB|#{n} MB",terabit:"1#{n} Tb|#{n} Tb",terabyte:"1#{n} TB|#{n} TB",day:"1#{n} day|#{n} days",hour:"1#{n} hr|#{n} hrs",microsecond:"1#{n} \u03bcs|#{n} \u03bcs",
millisecond:"1#{n} ms|#{n} ms",minute:"1#{n} min|#{n} mins",month:"1#{n} mth|#{n} mths",nanosecond:"1#{n} ns|#{n} ns",second:"1#{n} sec|#{n} secs",week:"1#{n} wk|#{n} wks",year:"1#{n} yr|#{n} yrs",ampere:"1#{n} A|#{n} A",milliampere:"1#{n} mA|#{n} mA",ohm:"1#{n} \u03a9|#{n} \u03a9",volt:"1#{n} V|#{n} V",calorie:"1#{n} Cal|#{n} Cal",joule:"1#{n} J|#{n} J",kilocalorie:"1#{n} kcal|#{n} kcal",kilojoule:"1#{n} kJ|#{n} kJ","kilowatt hour":"1#{n} kWh|#{n} kWh",gigahertz:"1#{n} GHz|#{n} GHz",hertz:"1#{n} Hz|#{n} Hz",
kilohertz:"1#{n} kHz|#{n} kHz",megahertz:"1#{n} MHz|#{n} MHz","astronomical-unit":"1#{n} au|#{n} au",centimeter:"1#{n} cm|#{n} cm",decimeter:"1#{n} dm|#{n} dm",fathom:"1#{n} ftm|#{n} ftm",foot:"1#{n} ft|#{n} ft",furlong:"1#{n} fur|#{n} fur",inch:"1#{n} in|#{n} in",kilometer:"1#{n} km|#{n} km","light-year":"1#{n} ly|#{n} ly",meter:"1#{n} m|#{n} m",micrometer:"1#{n} \u00b5m|#{n} \u00b5m",mile:"1#{n} mi|#{n} mi",millimeter:"1#{n} mm|#{n} mm",nanometer:"1#{n} nm|#{n} nm",nauticalmile:"1#{n} nmi|#{n} nmi",
parsec:"1#{n} pc|#{n} pc",picometer:"1#{n} pm|#{n} pm",yard:"1#{n} yd|#{n} yd",lux:"1#{n} lx|#{n} lx",carat:"1#{n} CD|#{n} CD",gram:"1#{n} g|#{n} g",kilogram:"1#{n} kg|#{n} kg","metric ton":"1#{n} t|#{n} t",microgram:"1#{n} \u00b5g|#{n} \u00b5g",milligram:"1#{n} mg|#{n} mg",ounce:"1#{n} oz|#{n} oz","ounce-troy":"1#{n} oz t|#{n} oz t",pound:"1#{n} lb|#{n} lb",stone:"1#{n} st|#{n} st","long ton":"1#{n} tn|#{n} tn",gigawatt:"1#{n} GW|#{n} GW",horsepower:"1#{n} hp|#{n} hp",kilowatt:"1#{n} kW|#{n} kW",
megawatt:"1#{n} MW|#{n} MW",milliwatt:"1#{n} mW|#{n} mW",watt:"1#{n} W|#{n} W",hectopascal:"1#{n} hPa|#{n} hPa","inch-hg":"1#{n} inHg|#{n} inHg",millibar:"1#{n} mbar|#{n} mbar","millimeter-of-mercury":"1#{n} mm Hg|#{n} mm Hg","pound-per-square-inch":"1#{n} psi|#{n} psi",karat:"1#{n} kt|#{n} kt","kilometer/hour":"1#{n} kph|#{n} kph","meters/second":"1#{n} m/s|#{n} m/s","miles/hour":"1#{n} mph|#{n} mph",celsius:"1#{n}\u00b0C|#{n}\u00b0C",fahrenheit:"1#{n}\u00b0F|#{n}\u00b0F",kelvin:"1#{n} K|#{n} K",
"acre-foot":"1#{n} ac ft|#{n} ac ft",bushel:"1#{n} bu|#{n} bu",centiliter:"1#{n} cL|#{n} cL","cubic-centimeter":"1#{n} cm\u00b3|#{n} cm\u00b3","cubic foot":"1#{n} ft\u00b3|#{n} ft\u00b3","cubic inch":"1#{n} in\u00b3|#{n} in\u00b3","cubic-kilometer":"1#{n} km\u00b3|#{n} km\u00b3","cubic meter":"1#{n} m\u00b3|#{n} m\u00b3","cubic-mile":"1#{n} mi\u00b3|#{n} mi\u00b3","cubic-yard":"1#{n} yd\u00b3|#{n} yd\u00b3",cup:"1#{n} c|#{n} c",deciliter:"1#{n} dL|#{n} dL","us ounce":"1#{n} fl oz|#{n} fl oz",gallon:"1#{n} gal|#{n} gal",
hectoliter:"1#{n} hL|#{n} hL",liter:"1#{n} L|#{n} L",megaliter:"1#{n} ML|#{n} ML",milliliter:"1#{n} mL|#{n} mL",pint:"1#{n} pt|#{n} pt",quart:"1#{n} qt|#{n} qt",tbsp:"1#{n} tbsp|#{n} tbsp",tsp:"1#{n} tsp|#{n} tsp",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",
gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp",
"imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_en_AU={unitfmt:{"long":{"g-force":"1#{n} g-force|#{n} g-force","meter-per-second-squared":"1#{n} metre per second squared|#{n} metres per second squared","arc-minute":"1#{n} arcminute|#{n} arcminutes","arc-second":"1#{n} arcsecond|#{n} arcseconds",degree:"1#{n} degree|#{n} degrees",radian:"1#{n} radian|#{n} radians",acre:"1#{n} acre|#{n} acres",hectare:"1#{n} hectare|#{n} hectares","square centimeter":"1#{n} square centimetre|#{n} square centimetres","square foot":"1#{n} square foot|#{n} square feet",
"square inch":"1#{n} square inch|#{n} square inches","square km":"1#{n} square kilometre|#{n} square kilometres","square meter":"1#{n} square metre|#{n} square metres","square mile":"1#{n} square mile|#{n} square miles","square yard":"1#{n} square yard|#{n} square yards","liter-per-kilometer":"1#{n} litre per kilometre|#{n} litres per kilometre",mpg:"1#{n} mile per gallon|#{n} miles per gallon",bit:"1#{n} bit|#{n} bits","byte":"1#{n} byte|#{n} bytes",gigabit:"1#{n} gigabit|#{n} gigabits",gigabyte:"1#{n} gigabyte|#{n} gigabytes",
kilobit:"1#{n} kilobit|#{n} kilobits",kilobyte:"1#{n} kilobyte|#{n} kilobytes",megabit:"1#{n} megabit|#{n} megabits",megabyte:"1#{n} megabyte|#{n} megabytes",terabit:"1#{n} terabit|#{n} terabits",terabyte:"1#{n} terabyte|#{n} terabytes",day:"1#{n} day|#{n} days",hour:"1#{n} hour|#{n} hours",microsecond:"1#{n} microsecond|#{n} microseconds",millisecond:"1#{n} millisecond|#{n} milliseconds",minute:"1#{n} minute|#{n} minutes",month:"1#{n} month|#{n} months",nanosecond:"1#{n} nanosecond|#{n} nanoseconds",
second:"1#{n} second|#{n} seconds",week:"1#{n} week|#{n} weeks",year:"1#{n} year|#{n} years",ampere:"1#{n} ampere|#{n} amperes",milliampere:"1#{n} milliampere|#{n} milliamperes",ohm:"1#{n} ohm|#{n} ohms",volt:"1#{n} volt|#{n} volts",calorie:"1#{n} Calorie|#{n} Calories",joule:"1#{n} joule|#{n} joules",kilocalorie:"1#{n} kilocalorie|#{n} kilocalories",kilojoule:"1#{n} kilojoule|#{n} kilojoules","kilowatt hour":"1#{n} kilowatt hour|#{n} kilowatt-hours",gigahertz:"1#{n} gigahertz|#{n} gigahertz",hertz:"1#{n} hertz|#{n} hertz",
kilohertz:"1#{n} kilohertz|#{n} kilohertz",megahertz:"1#{n} megahertz|#{n} megahertz","astronomical-unit":"1#{n} astronomical unit|#{n} astronomical units",centimeter:"1#{n} centimetre|#{n} centimetres",decimeter:"1#{n} decimetre|#{n} decimetres",fathom:"1#{n} fathom|#{n} fathoms",foot:"1#{n} foot|#{n} feet",furlong:"1#{n} furlong|#{n} furlongs",inch:"1#{n} inch|#{n} inches",kilometer:"1#{n} kilometre|#{n} kilometres","light-year":"1#{n} light year|#{n} light years",meter:"1#{n} metre|#{n} metres",
micrometer:"1#{n} micrometre|#{n} micrometres",mile:"1#{n} mile|#{n} miles",millimeter:"1#{n} millimetre|#{n} millimetres",nanometer:"1#{n} nanometre|#{n} nanometres",nauticalmile:"1#{n} nautical mile|#{n} nautical miles",parsec:"1#{n} parsec|#{n} parsecs",picometer:"1#{n} picometre|#{n} picometres",yard:"1#{n} yard|#{n} yards",lux:"1#{n} lux|#{n} lux",carat:"1#{n} carat|#{n} carats",gram:"1#{n} gram|#{n} grams",kilogram:"1#{n} kilogram|#{n} kilograms","metric ton":"1#tonne|#{n} tonnes",microgram:"1#{n} microgram|#{n} micrograms",
milligram:"1#{n} milligram|#{n} milligrams",ounce:"1#{n} ounce|#{n} ounces","ounce-troy":"1#{n} troy ounce|#{n} troy ounces",pound:"1#{n} pound|#{n} pounds",stone:"1#{n} stone|#{n} stones","long ton":"1#{n} ton|#{n} tons",gigawatt:"1#{n} gigawatt|#{n} gigawatts",horsepower:"1#{n} horsepower|#{n} horsepower",kilowatt:"1#{n} kilowatt|#{n} kilowatts",megawatt:"1#{n} megawatt|#{n} megawatts",milliwatt:"1#{n} milliwatt|#{n} milliwatts",watt:"1#{n} watt|#{n} watts",hectopascal:"1#{n} hectopascal|#{n} hectopascals",
"inch-hg":"1#{n} inch of mercury|#{n} inches of mercury",millibar:"1#{n} millibar|#{n} millibars","millimeter-of-mercury":"1#{n} millimetre of mercury|#{n} millimetres of mercury","pound-per-square-inch":"1#{n} pound per square inch|#{n} pounds per square inch",karat:"1#{n} karat|#{n} karats","kilometer/hour":"1#{n} kilometre per hour|#{n} kilometres per hour","meters/second":"1#{n} metre per second|#{n} metres per second","miles/hour":"1#{n} mile per hour|#{n} miles per hour",celsius:"1#{n} degree Celsius|#{n} degrees Celsius",
fahrenheit:"1#{n} degree Fahrenheit|#{n} degrees Fahrenheit",kelvin:"1#{n} kelvin|#{n} kelvins","acre-foot":"1#{n} acre-foot|#{n} acre-feet",bushel:"1#{n} bushel|#{n} bushels",centiliter:"1#{n} centilitre|#{n} centilitres","cubic-centimeter":"1#{n} cubic centimetre|#{n} cubic centimetres","cubic foot":"1#{n} cubic foot|#{n} cubic feet","cubic inch":"1#{n} cubic inch|#{n} cubic inches","cubic-kilometer":"1#{n} cubic kilometre|#{n} cubic kilometres","cubic meter":"1#{n} cubic metre|#{n} cubic metres",
"cubic-mile":"1#{n} cubic mile|#{n} cubic miles","cubic-yard":"1#{n} cubic yard|#{n} cubic yards",cup:"1#{n} cup|#{n} cups",deciliter:"1#{n} decilitre|#{n} decilitres","us ounce":"1#{n} fluid ounce|#{n} fluid ounces",gallon:"1#{n} gallon|#{n} gallons",hectoliter:"1#{n} hectolitre|#{n} hectolitres",liter:"1#{n} litre|#{n} litres",megaliter:"1#{n} megalitre|#{n} megalitres",milliliter:"1#{n} millilitre|#{n} millilitres",pint:"1#{n} pint|#{n} pints",quart:"1#{n} quart|#{n} quarts",tbsp:"1#{n} tablespoon|#{n} tablespoons",
tsp:"1#{n} teaspoon|#{n} teaspoons",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours",
"gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second","miles/second":"1#{n} mile per second|#{n} miles per second",
decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},"short":{"g-force":"1#{n} G|#{n} G","meter-per-second-squared":"1#{n} m/s\u00b2|#{n} m/s\u00b2",
"arc-minute":"1#{n} arcmin|#{n} arcmins","arc-second":"1#{n} arcsec|#{n} arcsecs",degree:"1#{n} deg|#{n} deg",radian:"1#{n} rad|#{n} rad",acre:"1#{n} ac|#{n} ac",hectare:"1#{n} ha|#{n} ha","square centimeter":"1#{n} cm\u00b2|#{n} cm\u00b2","square foot":"1#{n} sq ft|#{n} sq ft","square inch":"1#{n} in\u00b2|#{n} in\u00b2","square km":"1#{n} km\u00b2|#{n} km\u00b2","square meter":"1#{n} m\u00b2|#{n} m\u00b2","square mile":"1#{n} sq mi|#{n} sq mi","square yard":"1#{n} yd\u00b2|#{n} yd\u00b2","liter-per-kilometer":"1#{n} L/km|#{n} L/km",
mpg:"1#{n} mpg|#{n} mpg",bit:"1#{n} bit|#{n} bit","byte":"1#{n} byte|#{n} byte",gigabit:"1#{n} Gb|#{n} Gb",gigabyte:"1#{n} GB|#{n} GB",kilobit:"1#{n} kb|#{n} kb",kilobyte:"1#{n} kB|#{n} kB",megabit:"1#{n} Mb|#{n} Mb",megabyte:"1#{n} MB|#{n} MB",terabit:"1#{n} Tb|#{n} Tb",terabyte:"1#{n} TB|#{n} TB",day:"1#{n} day|#{n} days",hour:"1#{n} hr|#{n} hrs",microsecond:"1#{n} \u03bcs|#{n} \u03bcs",millisecond:"1#{n} ms|#{n} ms",minute:"1#{n} min|#{n} mins",month:"1#{n} mth|#{n} mths",nanosecond:"1#{n} ns|#{n} ns",
second:"1#{n} sec|#{n} secs",week:"1#{n} wk|#{n} wks",year:"1#{n} yr|#{n} yrs",ampere:"1#{n} A|#{n} A",milliampere:"1#{n} mA|#{n} mA",ohm:"1#{n} \u03a9|#{n} \u03a9",volt:"1#{n} V|#{n} V",calorie:"1#{n} Cal|#{n} Cal",joule:"1#{n} J|#{n} J",kilocalorie:"1#{n} kcal|#{n} kcal",kilojoule:"1#{n} kJ|#{n} kJ","kilowatt hour":"1#{n} kWh|#{n} kWh",gigahertz:"1#{n} GHz|#{n} GHz",hertz:"1#{n} Hz|#{n} Hz",kilohertz:"1#{n} kHz|#{n} kHz",megahertz:"1#{n} MHz|#{n} MHz","astronomical-unit":"1#{n} au|#{n} au",centimeter:"1#{n} cm|#{n} cm",
decimeter:"1#{n} dm|#{n} dm",fathom:"1#{n} fm|#{n} fm",foot:"1#{n} ft|#{n} ft",furlong:"1#{n} fur|#{n} fur",inch:"1#{n} in|#{n} in",kilometer:"1#{n} km|#{n} km","light-year":"1#{n} ly|#{n} ly",meter:"1#{n} m|#{n} m",micrometer:"1#{n} \u00b5m|#{n} \u00b5m",mile:"1#{n} mi|#{n} mi",millimeter:"1#{n} mm|#{n} mm",nanometer:"1#{n} nm|#{n} nm",nauticalmile:"1#{n} nmi|#{n} nmi",parsec:"1#{n} pc|#{n} pc",picometer:"1#{n} pm|#{n} pm",yard:"1#{n} yd|#{n} yd",lux:"1#{n} lx|#{n} lx",carat:"1#{n} CD|#{n} CD",gram:"1#{n} g|#{n} g",
kilogram:"1#{n} kg|#{n} kg","metric ton":"1#{n} t|#{n} t",microgram:"1#{n} \u00b5g|#{n} \u00b5g",milligram:"1#{n} mg|#{n} mg",ounce:"1#{n} oz|#{n} oz","ounce-troy":"1#{n} oz t|#{n} oz t",pound:"1#{n} lb|#{n} lb",stone:"1#{n} st|#{n} st","long ton":"1#{n} tn|#{n} tn",gigawatt:"1#{n} GW|#{n} GW",horsepower:"1#{n} hp|#{n} hp",kilowatt:"1#{n} kW|#{n} kW",megawatt:"1#{n} MW|#{n} MW",milliwatt:"1#{n} mW|#{n} mW",watt:"1#{n} W|#{n} W",hectopascal:"1#{n} hPa|#{n} hPa","inch-hg":"1#{n} inHg|#{n} inHg",millibar:"1#{n} mbar|#{n} mbar",
"millimeter-of-mercury":"1#{n} mm Hg|#{n} mm Hg","pound-per-square-inch":"1#{n} psi|#{n} psi",karat:"1#{n} kt|#{n} kt","kilometer/hour":"1#{n} kph|#{n} kph","meters/second":"1#{n} m/s|#{n} m/s","miles/hour":"1#{n} mph|#{n} mph",celsius:"1#{n}\u00b0C|#{n}\u00b0C",fahrenheit:"1#{n}\u00b0F|#{n}\u00b0F",kelvin:"1#{n} K|#{n} K","acre-foot":"1#{n} ac ft|#{n} ac ft",bushel:"1#{n} bu|#{n} bu",centiliter:"1#{n} cL|#{n} cL","cubic-centimeter":"1#{n} cm\u00b3|#{n} cm\u00b3","cubic foot":"1#{n} ft\u00b3|#{n} ft\u00b3",
"cubic inch":"1#{n} in\u00b3|#{n} in\u00b3","cubic-kilometer":"1#{n} km\u00b3|#{n} km\u00b3","cubic meter":"1#{n} m\u00b3|#{n} m\u00b3","cubic-mile":"1#{n} mi\u00b3|#{n} mi\u00b3","cubic-yard":"1#{n} yd\u00b3|#{n} yd\u00b3",cup:"1#{n} c|#{n} c",deciliter:"1#{n} dL|#{n} dL","us ounce":"1#{n} fl oz|#{n} fl oz",gallon:"1#{n} gal|#{n} gal",hectoliter:"1#{n} hL|#{n} hL",liter:"1#{n} l|#{n} l",megaliter:"1#{n} ML|#{n} ML",milliliter:"1#{n} mL|#{n} mL",pint:"1#{n} pt|#{n} pt",quart:"1#{n} qt|#{n} qt",tbsp:"1#{n} tbsp|#{n} tbsp",
tsp:"1#{n} tsp|#{n} tsp",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)",
"short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp","imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt",
"imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_en_CA={unitfmt:{"long":{"g-force":"1#{n} g-force|#{n} g-force","meter-per-second-squared":"1#{n} meter per second squared|#{n} meters per second squared","arc-minute":"1#{n} arcminute|#{n} arcminutes","arc-second":"1#{n} arcsecond|#{n} arcseconds",degree:"1#{n} degree|#{n} degrees",radian:"1#{n} radian|#{n} radians",acre:"1#{n} acre|#{n} acres",hectare:"1#{n} hectare|#{n} hectares","square centimeter":"1#{n} square centimeter|#{n} square centimeters","square foot":"1#{n} square foot|#{n} square feet",
"square inch":"1#{n} square inch|#{n} square inches","square km":"1#{n} square kilometer|#{n} square kilometers","square meter":"1#{n} square meter|#{n} square meters","square mile":"1#{n} square mile|#{n} square miles","square yard":"1#{n} square yard|#{n} square yards","liter-per-kilometer":"1#{n} liter per kilometer|#{n} liters per kilometer",mpg:"1#{n} mile per gallon|#{n} miles per gallon",bit:"1#{n} bit|#{n} bits","byte":"1#{n} byte|#{n} bytes",gigabit:"1#{n} gigabit|#{n} gigabits",gigabyte:"1#{n} gigabyte|#{n} gigabytes",
kilobit:"1#{n} kilobit|#{n} kilobits",kilobyte:"1#{n} kilobyte|#{n} kilobytes",megabit:"1#{n} megabit|#{n} megabits",megabyte:"1#{n} megabyte|#{n} megabytes",terabit:"1#{n} terabit|#{n} terabits",terabyte:"1#{n} terabyte|#{n} terabytes",day:"1#{n} day|#{n} days",hour:"1#{n} hour|#{n} hours",microsecond:"1#{n} microsecond|#{n} microseconds",millisecond:"1#{n} millisecond|#{n} milliseconds",minute:"1#{n} minute|#{n} minutes",month:"1#{n} month|#{n} months",nanosecond:"1#{n} nanosecond|#{n} nanoseconds",
second:"1#{n} second|#{n} seconds",week:"1#{n} week|#{n} weeks",year:"1#{n} year|#{n} years",ampere:"1#{n} ampere|#{n} amperes",milliampere:"1#{n} milliampere|#{n} milliamperes",ohm:"1#{n} ohm|#{n} ohms",volt:"1#{n} volt|#{n} volts",calorie:"1#{n} Calorie|#{n} Calories",joule:"1#{n} joule|#{n} joules",kilocalorie:"1#{n} kilocalorie|#{n} kilocalories",kilojoule:"1#{n} kilojoule|#{n} kilojoules","kilowatt hour":"1#{n} kilowatt hour|#{n} kilowatt-hours",gigahertz:"1#{n} gigahertz|#{n} gigahertz",hertz:"1#{n} hertz|#{n} hertz",
kilohertz:"1#{n} kilohertz|#{n} kilohertz",megahertz:"1#{n} megahertz|#{n} megahertz","astronomical-unit":"1#{n} astronomical unit|#{n} astronomical units",centimeter:"1#{n} centimeter|#{n} centimeters",decimeter:"1#{n} decimeter|#{n} decimeters",fathom:"1#{n} fathom|#{n} fathoms",foot:"1#{n} foot|#{n} feet",furlong:"1#{n} furlong|#{n} furlongs",inch:"1#{n} inch|#{n} inches",kilometer:"1#{n} kilometer|#{n} kilometers","light-year":"1#{n} light year|#{n} light years",meter:"1#{n} meter|#{n} meters",
micrometer:"1#{n} micrometer|#{n} micrometers",mile:"1#{n} mile|#{n} miles",millimeter:"1#{n} millimeter|#{n} millimeters",nanometer:"1#{n} nanometer|#{n} nanometers",nauticalmile:"1#{n} nautical mile|#{n} nautical miles",parsec:"1#{n} parsec|#{n} parsecs",picometer:"1#{n} picometer|#{n} picometers",yard:"1#{n} yard|#{n} yards",lux:"1#{n} lux|#{n} lux",carat:"1#{n} carat|#{n} carats",gram:"1#{n} gram|#{n} grams",kilogram:"1#{n} kilogram|#{n} kilograms","metric ton":"1#{n} metric ton|#{n} metric tons",
microgram:"1#{n} microgram|#{n} micrograms",milligram:"1#{n} milligram|#{n} milligrams",ounce:"1#{n} ounce|#{n} ounces","ounce-troy":"1#{n} troy ounce|#{n} troy ounces",pound:"1#{n} pound|#{n} pounds",stone:"1#{n} stone|#{n} stones","long ton":"1#{n} ton|#{n} tons",gigawatt:"1#{n} gigawatt|#{n} gigawatts",horsepower:"1#{n} horsepower|#{n} horsepower",kilowatt:"1#{n} kilowatt|#{n} kilowatts",megawatt:"1#{n} megawatt|#{n} megawatts",milliwatt:"1#{n} milliwatt|#{n} milliwatts",watt:"1#{n} watt|#{n} watts",
hectopascal:"1#{n} hectopascal|#{n} hectopascals","inch-hg":"1#{n} inch of mercury|#{n} inches of mercury",millibar:"1#{n} millibar|#{n} millibars","millimeter-of-mercury":"1#{n} millimeter of mercury|#{n} millimeters of mercury","pound-per-square-inch":"1#{n} pound per square inch|#{n} pounds per square inch",karat:"1#{n} karat|#{n} karats","kilometer/hour":"1#{n} kilometer per hour|#{n} kilometers per hour","meters/second":"1#{n} meter per second|#{n} meters per second","miles/hour":"1#{n} mile per hour|#{n} miles per hour",
celsius:"1#{n} degree Celsius|#{n} degrees Celsius",fahrenheit:"1#{n} degree Fahrenheit|#{n} degrees Fahrenheit",kelvin:"1#{n} kelvin|#{n} kelvins","acre-foot":"1#{n} acre-foot|#{n} acre-feet",bushel:"1#{n} bushel|#{n} bushels",centiliter:"1#{n} centiliter|#{n} centiliters","cubic-centimeter":"1#{n} cubic centimeter|#{n} cubic centimeters","cubic foot":"1#{n} cubic foot|#{n} cubic feet","cubic inch":"1#{n} cubic inch|#{n} cubic inches","cubic-kilometer":"1#{n} cubic kilometer|#{n} cubic kilometers",
"cubic meter":"1#{n} cubic meter|#{n} cubic meters","cubic-mile":"1#{n} cubic mile|#{n} cubic miles","cubic-yard":"1#{n} cubic yard|#{n} cubic yards",cup:"1#{n} cup|#{n} cups",deciliter:"1#{n} deciliter|#{n} deciliters","us ounce":"1#{n} fluid ounce|#{n} fluid ounces",gallon:"1#{n} gallon|#{n} gallons",hectoliter:"1#{n} hectoliter|#{n} hectoliters",liter:"1#{n} liter|#{n} liters",megaliter:"1#{n} megaliter|#{n} megaliters",milliliter:"1#{n} milliliter|#{n} milliliters",pint:"1#{n} pint|#{n} pints",
quart:"1#{n} quart|#{n} quarts",tbsp:"1#{n} tablespoon|#{n} tablespoons",tsp:"1#{n} teaspoon|#{n} teaspoons",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",
gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second",
"miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},
"short":{"g-force":"1#{n} G|#{n} G","meter-per-second-squared":"1#{n} m/s\u00b2|#{n} m/s\u00b2","arc-minute":"1#{n} arcmin|#{n} arcmins","arc-second":"1#{n} arcsec|#{n} arcsecs",degree:"1#{n} deg|#{n} deg",radian:"1#{n} rad|#{n} rad",acre:"1#{n} ac|#{n} ac",hectare:"1#{n} ha|#{n} ha","square centimeter":"1#{n} cm\u00b2|#{n} cm\u00b2","square foot":"1#{n} sq ft|#{n} sq ft","square inch":"1#{n} in\u00b2|#{n} in\u00b2","square km":"1#{n} km\u00b2|#{n} km\u00b2","square meter":"1#{n} m\u00b2|#{n} m\u00b2",
"square mile":"1#{n} sq mi|#{n} sq mi","square yard":"1#{n} yd\u00b2|#{n} yd\u00b2","liter-per-kilometer":"1#{n} L/km|#{n} L/km",mpg:"1#{n} mpg|#{n} mpg",bit:"1#{n} bit|#{n} bit","byte":"1#{n} byte|#{n} byte",gigabit:"1#{n} Gb|#{n} Gb",gigabyte:"1#{n} GB|#{n} GB",kilobit:"1#{n} kb|#{n} kb",kilobyte:"1#{n} kB|#{n} kB",megabit:"1#{n} Mb|#{n} Mb",megabyte:"1#{n} MB|#{n} MB",terabit:"1#{n} Tb|#{n} Tb",terabyte:"1#{n} TB|#{n} TB",day:"1#{n} day|#{n} days",hour:"1#{n} hr|#{n} hrs",microsecond:"1#{n} \u03bcs|#{n} \u03bcs",
millisecond:"1#{n} ms|#{n} ms",minute:"1#{n} min|#{n} mins",month:"1#{n} mth|#{n} mths",nanosecond:"1#{n} ns|#{n} ns",second:"1#{n} sec|#{n} secs",week:"1#{n} wk|#{n} wks",year:"1#{n} yr|#{n} yrs",ampere:"1#{n} A|#{n} A",milliampere:"1#{n} mA|#{n} mA",ohm:"1#{n} \u03a9|#{n} \u03a9",volt:"1#{n} V|#{n} V",calorie:"1#{n} Cal|#{n} Cal",joule:"1#{n} J|#{n} J",kilocalorie:"1#{n} kcal|#{n} kcal",kilojoule:"1#{n} kJ|#{n} kJ","kilowatt hour":"1#{n} kWh|#{n} kWh",gigahertz:"1#{n} GHz|#{n} GHz",hertz:"1#{n} Hz|#{n} Hz",
kilohertz:"1#{n} kHz|#{n} kHz",megahertz:"1#{n} MHz|#{n} MHz","astronomical-unit":"1#{n} au|#{n} au",centimeter:"1#{n} cm|#{n} cm",decimeter:"1#{n} dm|#{n} dm",fathom:"1#{n} ftm|#{n} ftm",foot:"1#{n} ft|#{n} ft",furlong:"1#{n} fur|#{n} fur",inch:"1#{n} in|#{n} in",kilometer:"1#{n} km|#{n} km","light-year":"1#{n} ly|#{n} ly",meter:"1#{n} m|#{n} m",micrometer:"1#{n} \u00b5m|#{n} \u00b5m",mile:"1#{n} mi|#{n} mi",millimeter:"1#{n} mm|#{n} mm",nanometer:"1#{n} nm|#{n} nm",nauticalmile:"1#{n} nmi|#{n} nmi",
parsec:"1#{n} pc|#{n} pc",picometer:"1#{n} pm|#{n} pm",yard:"1#{n} yd|#{n} yd",lux:"1#{n} lx|#{n} lx",carat:"1#{n} CD|#{n} CD",gram:"1#{n} g|#{n} g",kilogram:"1#{n} kg|#{n} kg","metric ton":"1#{n} t|#{n} t",microgram:"1#{n} \u00b5g|#{n} \u00b5g",milligram:"1#{n} mg|#{n} mg",ounce:"1#{n} oz|#{n} oz","ounce-troy":"1#{n} oz t|#{n} oz t",pound:"1#{n} lb|#{n} lb",stone:"1#{n} st|#{n} st","long ton":"1#{n} tn|#{n} tn",gigawatt:"1#{n} GW|#{n} GW",horsepower:"1#{n} hp|#{n} hp",kilowatt:"1#{n} kW|#{n} kW",
megawatt:"1#{n} MW|#{n} MW",milliwatt:"1#{n} mW|#{n} mW",watt:"1#{n} W|#{n} W",hectopascal:"1#{n} hPa|#{n} hPa","inch-hg":"1#{n} inHg|#{n} inHg",millibar:"1#{n} mbar|#{n} mbar","millimeter-of-mercury":"1#{n} mm Hg|#{n} mm Hg","pound-per-square-inch":"1#{n} psi|#{n} psi",karat:"1#{n} kt|#{n} kt","kilometer/hour":"1#{n} kph|#{n} kph","meters/second":"1#{n} m/s|#{n} m/s","miles/hour":"1#{n} mph|#{n} mph",celsius:"1#{n}\u00b0C|#{n}\u00b0C",fahrenheit:"1#{n}\u00b0F|#{n}\u00b0F",kelvin:"1#{n} K|#{n} K",
"acre-foot":"1#{n} ac ft|#{n} ac ft",bushel:"1#{n} bu|#{n} bu",centiliter:"1#{n} cL|#{n} cL","cubic-centimeter":"1#{n} cm\u00b3|#{n} cm\u00b3","cubic foot":"1#{n} ft\u00b3|#{n} ft\u00b3","cubic inch":"1#{n} in\u00b3|#{n} in\u00b3","cubic-kilometer":"1#{n} km\u00b3|#{n} km\u00b3","cubic meter":"1#{n} m\u00b3|#{n} m\u00b3","cubic-mile":"1#{n} mi\u00b3|#{n} mi\u00b3","cubic-yard":"1#{n} yd\u00b3|#{n} yd\u00b3",cup:"1#{n} c|#{n} c",deciliter:"1#{n} dL|#{n} dL","us ounce":"1#{n} fl oz|#{n} fl oz",gallon:"1#{n} gal|#{n} gal",
hectoliter:"1#{n} hL|#{n} hL",liter:"1#{n} L|#{n} L",megaliter:"1#{n} ML|#{n} ML",milliliter:"1#{n} mL|#{n} mL",pint:"1#{n} pt|#{n} pt",quart:"1#{n} qt|#{n} qt",tbsp:"1#{n} tbsp|#{n} tbsp",tsp:"1#{n} tsp|#{n} tsp",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",
gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp",
"imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_en_GB={unitfmt:{"long":{"g-force":"1#{n} g-force|#{n} g-force","meter-per-second-squared":"1#{n} metre per second squared|#{n} metres per second squared","arc-minute":"1#{n} arcminute|#{n} arcminutes","arc-second":"1#{n} arcsecond|#{n} arcseconds",degree:"1#{n} degree|#{n} degrees",radian:"1#{n} radian|#{n} radians",acre:"1#{n} acre|#{n} acres",hectare:"1#{n} hectare|#{n} hectares","square centimeter":"1#{n} square centimetre|#{n} square centimetres","square foot":"1#{n} square foot|#{n} square feet",
"square inch":"1#{n} square inch|#{n} square inches","square km":"1#{n} square kilometre|#{n} square kilometres","square meter":"1#{n} square metre|#{n} square metres","square mile":"1#{n} square mile|#{n} square miles","square yard":"1#{n} square yard|#{n} square yards","liter-per-kilometer":"1#{n} litre per kilometre|#{n} litres per kilometre",mpg:"1#{n} mile per gallon|#{n} miles per gallon",bit:"1#{n} bit|#{n} bits","byte":"1#{n} byte|#{n} bytes",gigabit:"1#{n} gigabit|#{n} gigabits",gigabyte:"1#{n} gigabyte|#{n} gigabytes",
kilobit:"1#{n} kilobit|#{n} kilobits",kilobyte:"1#{n} kilobyte|#{n} kilobytes",megabit:"1#{n} megabit|#{n} megabits",megabyte:"1#{n} megabyte|#{n} megabytes",terabit:"1#{n} terabit|#{n} terabits",terabyte:"1#{n} terabyte|#{n} terabytes",day:"1#{n} day|#{n} days",hour:"1#{n} hour|#{n} hours",microsecond:"1#{n} microsecond|#{n} microseconds",millisecond:"1#{n} millisecond|#{n} milliseconds",minute:"1#{n} minute|#{n} minutes",month:"1#{n} month|#{n} months",nanosecond:"1#{n} nanosecond|#{n} nanoseconds",
second:"1#{n} second|#{n} seconds",week:"1#{n} week|#{n} weeks",year:"1#{n} year|#{n} years",ampere:"1#{n} ampere|#{n} amperes",milliampere:"1#{n} milliampere|#{n} milliamperes",ohm:"1#{n} ohm|#{n} ohms",volt:"1#{n} volt|#{n} volts",calorie:"1#{n} Calorie|#{n} Calories",joule:"1#{n} joule|#{n} joules",kilocalorie:"1#{n} kilocalorie|#{n} kilocalories",kilojoule:"1#{n} kilojoule|#{n} kilojoules","kilowatt hour":"1#{n} kilowatt hour|#{n} kilowatt-hours",gigahertz:"1#{n} gigahertz|#{n} gigahertz",hertz:"1#{n} hertz|#{n} hertz",
kilohertz:"1#{n} kilohertz|#{n} kilohertz",megahertz:"1#{n} megahertz|#{n} megahertz","astronomical-unit":"1#{n} astronomical unit|#{n} astronomical units",centimeter:"1#{n} centimetre|#{n} centimetres",decimeter:"1#{n} decimetre|#{n} decimetres",fathom:"1#{n} fathom|#{n} fathoms",foot:"1#{n} foot|#{n} feet",furlong:"1#{n} furlong|#{n} furlongs",inch:"1#{n} inch|#{n} inches",kilometer:"1#{n} kilometre|#{n} kilometres","light-year":"1#{n} light year|#{n} light years",meter:"1#{n} metre|#{n} metres",
micrometer:"1#{n} micrometre|#{n} micrometres",mile:"1#{n} mile|#{n} miles",millimeter:"1#{n} millimetre|#{n} millimetres",nanometer:"1#{n} nanometre|#{n} nanometres",nauticalmile:"1#{n} nautical mile|#{n} nautical miles",parsec:"1#{n} parsec|#{n} parsecs",picometer:"1#{n} picometre|#{n} picometres",yard:"1#{n} yard|#{n} yards",lux:"1#{n} lux|#{n} lux",carat:"1#{n} carat|#{n} carats",gram:"1#{n} gram|#{n} grams",kilogram:"1#{n} kilogram|#{n} kilograms","metric ton":"1#{n} metric ton|#{n} metric tons",
microgram:"1#{n} microgram|#{n} micrograms",milligram:"1#{n} milligram|#{n} milligrams",ounce:"1#{n} ounce|#{n} ounces","ounce-troy":"1#{n} troy ounce|#{n} troy ounces",pound:"1#{n} pound|#{n} pounds",stone:"1#{n} stone|#{n} stones","long ton":"1#{n} ton|#{n} tons",gigawatt:"1#{n} gigawatt|#{n} gigawatts",horsepower:"1#{n} horsepower|#{n} horsepower",kilowatt:"1#{n} kilowatt|#{n} kilowatts",megawatt:"1#{n} megawatt|#{n} megawatts",milliwatt:"1#{n} milliwatt|#{n} milliwatts",watt:"1#{n} watt|#{n} watts",
hectopascal:"1#{n} hectopascal|#{n} hectopascals","inch-hg":"1#{n} inch of mercury|#{n} inches of mercury",millibar:"1#{n} millibar|#{n} millibars","millimeter-of-mercury":"1#{n} millimetre of mercury|#{n} millimetres of mercury","pound-per-square-inch":"1#{n} pound per square inch|#{n} pounds per square inch",karat:"1#{n} karat|#{n} karats","kilometer/hour":"1#{n} kilometre per hour|#{n} kilometres per hour","meters/second":"1#{n} metre per second|#{n} metres per second","miles/hour":"1#{n} mile per hour|#{n} miles per hour",
celsius:"1#{n} degree Celsius|#{n} degrees Celsius",fahrenheit:"1#{n} degree Fahrenheit|#{n} degrees Fahrenheit",kelvin:"1#{n} kelvin|#{n} kelvins","acre-foot":"1#{n} acre-foot|#{n} acre-feet",bushel:"1#{n} bushel|#{n} bushels",centiliter:"1#{n} centilitre|#{n} centilitres","cubic-centimeter":"1#{n} cubic centimetre|#{n} cubic centimetres","cubic foot":"1#{n} cubic foot|#{n} cubic feet","cubic inch":"1#{n} cubic inch|#{n} cubic inches","cubic-kilometer":"1#{n} cubic kilometre|#{n} cubic kilometres",
"cubic meter":"1#{n} cubic metre|#{n} cubic metres","cubic-mile":"1#{n} cubic mile|#{n} cubic miles","cubic-yard":"1#{n} cubic yard|#{n} cubic yards",cup:"1#{n} cup|#{n} cups",deciliter:"1#{n} decilitre|#{n} decilitres","us ounce":"1#{n} fluid ounce|#{n} fluid ounces",gallon:"1#{n} gallon|#{n} gallons",hectoliter:"1#{n} hectolitre|#{n} hectolitres",liter:"1#{n} litre|#{n} litres",megaliter:"1#{n} megalitre|#{n} megalitres",milliliter:"1#{n} millilitre|#{n} millilitres",pint:"1#{n} pint|#{n} pints",
quart:"1#{n} quart|#{n} quarts",tbsp:"1#{n} tablespoon|#{n} tablespoons",tsp:"1#{n} teaspoon|#{n} teaspoons",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",
gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second",
"miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},
"short":{"g-force":"1#{n} G|#{n} G","meter-per-second-squared":"1#{n} m/s\u00b2|#{n} m/s\u00b2","arc-minute":"1#{n} arcmin|#{n} arcmins","arc-second":"1#{n} arcsec|#{n} arcsecs",degree:"1#{n} deg|#{n} deg",radian:"1#{n} rad|#{n} rad",acre:"1#{n} ac|#{n} ac",hectare:"1#{n} ha|#{n} ha","square centimeter":"1#{n} cm\u00b2|#{n} cm\u00b2","square foot":"1#{n} sq ft|#{n} sq ft","square inch":"1#{n} in\u00b2|#{n} in\u00b2","square km":"1#{n} km\u00b2|#{n} km\u00b2","square meter":"1#{n} m\u00b2|#{n} m\u00b2",
"square mile":"1#{n} sq mi|#{n} sq mi","square yard":"1#{n} yd\u00b2|#{n} yd\u00b2","liter-per-kilometer":"1#{n} L/km|#{n} L/km",mpg:"1#{n} mpg|#{n} mpg",bit:"1#{n} bit|#{n} bit","byte":"1#{n} byte|#{n} byte",gigabit:"1#{n} Gb|#{n} Gb",gigabyte:"1#{n} GB|#{n} GB",kilobit:"1#{n} kb|#{n} kb",kilobyte:"1#{n} kB|#{n} kB",megabit:"1#{n} Mb|#{n} Mb",megabyte:"1#{n} MB|#{n} MB",terabit:"1#{n} Tb|#{n} Tb",terabyte:"1#{n} TB|#{n} TB",day:"1#{n} day|#{n} days",hour:"1#{n} hr|#{n} hrs",microsecond:"1#{n} \u03bcs|#{n} \u03bcs",
millisecond:"1#{n} ms|#{n} ms",minute:"1#{n} min|#{n} mins",month:"1#{n} mth|#{n} mths",nanosecond:"1#{n} ns|#{n} ns",second:"1#{n} sec|#{n} secs",week:"1#{n} wk|#{n} wks",year:"1#{n} yr|#{n} yrs",ampere:"1#{n} A|#{n} A",milliampere:"1#{n} mA|#{n} mA",ohm:"1#{n} \u03a9|#{n} \u03a9",volt:"1#{n} V|#{n} V",calorie:"1#{n} Cal|#{n} Cal",joule:"1#{n} J|#{n} J",kilocalorie:"1#{n} kcal|#{n} kcal",kilojoule:"1#{n} kJ|#{n} kJ","kilowatt hour":"1#{n} kWh|#{n} kWh",gigahertz:"1#{n} GHz|#{n} GHz",hertz:"1#{n} Hz|#{n} Hz",
kilohertz:"1#{n} kHz|#{n} kHz",megahertz:"1#{n} MHz|#{n} MHz","astronomical-unit":"1#{n} au|#{n} au",centimeter:"1#{n} cm|#{n} cm",decimeter:"1#{n} dm|#{n} dm",fathom:"1#{n} fm|#{n} fm",foot:"1#{n} ft|#{n} ft",furlong:"1#{n} fur|#{n} fur",inch:"1#{n} in|#{n} in",kilometer:"1#{n} km|#{n} km","light-year":"1#{n} ly|#{n} ly",meter:"1#{n} m|#{n} m",micrometer:"1#{n} \u00b5m|#{n} \u00b5m",mile:"1#{n} mi|#{n} mi",millimeter:"1#{n} mm|#{n} mm",nanometer:"1#{n} nm|#{n} nm",nauticalmile:"1#{n} nmi|#{n} nmi",
parsec:"1#{n} pc|#{n} pc",picometer:"1#{n} pm|#{n} pm",yard:"1#{n} yd|#{n} yd",lux:"1#{n} lx|#{n} lx",carat:"1#{n} CD|#{n} CD",gram:"1#{n} g|#{n} g",kilogram:"1#{n} kg|#{n} kg","metric ton":"1#{n} t|#{n} t",microgram:"1#{n} \u00b5g|#{n} \u00b5g",milligram:"1#{n} mg|#{n} mg",ounce:"1#{n} oz|#{n} oz","ounce-troy":"1#{n} oz t|#{n} oz t",pound:"1#{n} lb|#{n} lb",stone:"1#{n} st|#{n} st","long ton":"1#{n} tn|#{n} tn",gigawatt:"1#{n} GW|#{n} GW",horsepower:"1#{n} hp|#{n} hp",kilowatt:"1#{n} kW|#{n} kW",
megawatt:"1#{n} MW|#{n} MW",milliwatt:"1#{n} mW|#{n} mW",watt:"1#{n} W|#{n} W",hectopascal:"1#{n} hPa|#{n} hPa","inch-hg":"1#{n} inHg|#{n} inHg",millibar:"1#{n} mbar|#{n} mbar","millimeter-of-mercury":"1#{n} mm Hg|#{n} mm Hg","pound-per-square-inch":"1#{n} psi|#{n} psi",karat:"1#{n} kt|#{n} kt","kilometer/hour":"1#{n} kph|#{n} kph","meters/second":"1#{n} m/s|#{n} m/s","miles/hour":"1#{n} mph|#{n} mph",celsius:"1#{n}\u00b0C|#{n}\u00b0C",fahrenheit:"1#{n}\u00b0F|#{n}\u00b0F",kelvin:"1#{n} K|#{n} K",
"acre-foot":"1#{n} ac ft|#{n} ac ft",bushel:"1#{n} bu|#{n} bu",centiliter:"1#{n} cL|#{n} cL","cubic-centimeter":"1#{n} cm\u00b3|#{n} cm\u00b3","cubic foot":"1#{n} ft\u00b3|#{n} ft\u00b3","cubic inch":"1#{n} in\u00b3|#{n} in\u00b3","cubic-kilometer":"1#{n} km\u00b3|#{n} km\u00b3","cubic meter":"1#{n} m\u00b3|#{n} m\u00b3","cubic-mile":"1#{n} mi\u00b3|#{n} mi\u00b3","cubic-yard":"1#{n} yd\u00b3|#{n} yd\u00b3",cup:"1#{n} c|#{n} c",deciliter:"1#{n} dL|#{n} dL","us ounce":"1#{n} fl oz|#{n} fl oz",gallon:"1#{n} gal|#{n} gal",
hectoliter:"1#{n} hL|#{n} hL",liter:"1#{n} l|#{n} l",megaliter:"1#{n} ML|#{n} ML",milliliter:"1#{n} mL|#{n} mL",pint:"1#{n} pt|#{n} pt",quart:"1#{n} qt|#{n} qt",tbsp:"1#{n} tbsp|#{n} tbsp",tsp:"1#{n} tsp|#{n} tsp",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",
gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp",
"imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_en_IN={unitfmt:{"long":{"g-force":"1#{n} g-force|#{n} g-force","meter-per-second-squared":"1#{n} metre per second squared|#{n} metres per second squared","arc-minute":"1#{n} arcminute|#{n} arcminutes","arc-second":"1#{n} arcsecond|#{n} arcseconds",degree:"1#{n} degree|#{n} degrees",radian:"1#{n} radian|#{n} radians",acre:"1#{n} acre|#{n} acres",hectare:"1#{n} hectare|#{n} hectares","square centimeter":"1#{n} square centimetre|#{n} square centimetres","square foot":"1#{n} square foot|#{n} square feet",
"square inch":"1#{n} square inch|#{n} square inches","square km":"1#{n} square kilometre|#{n} square kilometres","square meter":"1#{n} square metre|#{n} square metres","square mile":"1#{n} square mile|#{n} square miles","square yard":"1#{n} square yard|#{n} square yards","liter-per-kilometer":"1#{n} litre per kilometre|#{n} litres per kilometre",mpg:"1#{n} mile per gallon|#{n} miles per gallon",bit:"1#{n} bit|#{n} bits","byte":"1#{n} byte|#{n} bytes",gigabit:"1#{n} gigabit|#{n} gigabits",gigabyte:"1#{n} gigabyte|#{n} gigabytes",
kilobit:"1#{n} kilobit|#{n} kilobits",kilobyte:"1#{n} kilobyte|#{n} kilobytes",megabit:"1#{n} megabit|#{n} megabits",megabyte:"1#{n} megabyte|#{n} megabytes",terabit:"1#{n} terabit|#{n} terabits",terabyte:"1#{n} terabyte|#{n} terabytes",day:"1#{n} day|#{n} days",hour:"1#{n} hour|#{n} hours",microsecond:"1#{n} microsecond|#{n} microseconds",millisecond:"1#{n} millisecond|#{n} milliseconds",minute:"1#{n} minute|#{n} minutes",month:"1#{n} month|#{n} months",nanosecond:"1#{n} nanosecond|#{n} nanoseconds",
second:"1#{n} second|#{n} seconds",week:"1#{n} week|#{n} weeks",year:"1#{n} year|#{n} years",ampere:"1#{n} ampere|#{n} amperes",milliampere:"1#{n} milliampere|#{n} milliamperes",ohm:"1#{n} ohm|#{n} ohms",volt:"1#{n} volt|#{n} volts",calorie:"1#{n} Calorie|#{n} Calories",joule:"1#{n} joule|#{n} joules",kilocalorie:"1#{n} kilocalorie|#{n} kilocalories",kilojoule:"1#{n} kilojoule|#{n} kilojoules","kilowatt hour":"1#{n} kilowatt hour|#{n} kilowatt-hours",gigahertz:"1#{n} gigahertz|#{n} gigahertz",hertz:"1#{n} hertz|#{n} hertz",
kilohertz:"1#{n} kilohertz|#{n} kilohertz",megahertz:"1#{n} megahertz|#{n} megahertz","astronomical-unit":"1#{n} astronomical unit|#{n} astronomical units",centimeter:"1#{n} centimetre|#{n} centimetres",decimeter:"1#{n} decimetre|#{n} decimetres",fathom:"1#{n} fathom|#{n} fathoms",foot:"1#{n} foot|#{n} feet",furlong:"1#{n} furlong|#{n} furlongs",inch:"1#{n} inch|#{n} inches",kilometer:"1#{n} kilometre|#{n} kilometres","light-year":"1#{n} light year|#{n} light years",meter:"1#{n} metre|#{n} metres",
micrometer:"1#{n} micrometre|#{n} micrometres",mile:"1#{n} mile|#{n} miles",millimeter:"1#{n} millimetre|#{n} millimetres",nanometer:"1#{n} nanometre|#{n} nanometres",nauticalmile:"1#{n} nautical mile|#{n} nautical miles",parsec:"1#{n} parsec|#{n} parsecs",picometer:"1#{n} picometre|#{n} picometres",yard:"1#{n} yard|#{n} yards",lux:"1#{n} lux|#{n} lux",carat:"1#{n} carat|#{n} carats",gram:"1#{n} gram|#{n} grams",kilogram:"1#{n} kilogram|#{n} kilograms","metric ton":"1#{n} metric ton|#{n} metric tons",
microgram:"1#{n} microgram|#{n} micrograms",milligram:"1#{n} milligram|#{n} milligrams",ounce:"1#{n} ounce|#{n} ounces","ounce-troy":"1#{n} troy ounce|#{n} troy ounces",pound:"1#{n} pound|#{n} pounds",stone:"1#{n} stone|#{n} stones","long ton":"1#{n} ton|#{n} tons",gigawatt:"1#{n} gigawatt|#{n} gigawatts",horsepower:"1#{n} horsepower|#{n} horsepower",kilowatt:"1#{n} kilowatt|#{n} kilowatts",megawatt:"1#{n} megawatt|#{n} megawatts",milliwatt:"1#{n} milliwatt|#{n} milliwatts",watt:"1#{n} watt|#{n} watts",
hectopascal:"1#{n} hectopascal|#{n} hectopascals","inch-hg":"1#{n} inch of mercury|#{n} inches of mercury",millibar:"1#{n} millibar|#{n} millibars","millimeter-of-mercury":"1#{n} millimetre of mercury|#{n} millimetres of mercury","pound-per-square-inch":"1#{n} pound per square inch|#{n} pounds per square inch",karat:"1#{n} karat|#{n} karats","kilometer/hour":"1#{n} kilometre per hour|#{n} kilometres per hour","meters/second":"1#{n} metre per second|#{n} metres per second","miles/hour":"1#{n} mile per hour|#{n} miles per hour",
celsius:"1#{n} degree Celsius|#{n} degrees Celsius",fahrenheit:"1#{n} degree Fahrenheit|#{n} degrees Fahrenheit",kelvin:"1#{n} kelvin|#{n} kelvins","acre-foot":"1#{n} acre-foot|#{n} acre-feet",bushel:"1#{n} bushel|#{n} bushels",centiliter:"1#{n} centilitre|#{n} centilitres","cubic-centimeter":"1#{n} cubic centimetre|#{n} cubic centimetres","cubic foot":"1#{n} cubic foot|#{n} cubic feet","cubic inch":"1#{n} cubic inch|#{n} cubic inches","cubic-kilometer":"1#{n} cubic kilometre|#{n} cubic kilometres",
"cubic meter":"1#{n} cubic metre|#{n} cubic metres","cubic-mile":"1#{n} cubic mile|#{n} cubic miles","cubic-yard":"1#{n} cubic yard|#{n} cubic yards",cup:"1#{n} cup|#{n} cups",deciliter:"1#{n} decilitre|#{n} decilitres","us ounce":"1#{n} fluid ounce|#{n} fluid ounces",gallon:"1#{n} gallon|#{n} gallons",hectoliter:"1#{n} hectolitre|#{n} hectolitres",liter:"1#{n} litre|#{n} litres",megaliter:"1#{n} megalitre|#{n} megalitres",milliliter:"1#{n} millilitre|#{n} millilitres",pint:"1#{n} pint|#{n} pints",
quart:"1#{n} quart|#{n} quarts",tbsp:"1#{n} tablespoon|#{n} tablespoons",tsp:"1#{n} teaspoon|#{n} teaspoons",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",
gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second",
"miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},
"short":{"g-force":"1#{n} G|#{n} G","meter-per-second-squared":"1#{n} m/s\u00b2|#{n} m/s\u00b2","arc-minute":"1#{n} arcmin|#{n} arcmins","arc-second":"1#{n} arcsec|#{n} arcsecs",degree:"1#{n} deg|#{n} deg",radian:"1#{n} rad|#{n} rad",acre:"1#{n} ac|#{n} ac",hectare:"1#{n} ha|#{n} ha","square centimeter":"1#{n} cm\u00b2|#{n} cm\u00b2","square foot":"1#{n} sq ft|#{n} sq ft","square inch":"1#{n} in\u00b2|#{n} in\u00b2","square km":"1#{n} km\u00b2|#{n} km\u00b2","square meter":"1#{n} m\u00b2|#{n} m\u00b2",
"square mile":"1#{n} sq mi|#{n} sq mi","square yard":"1#{n} yd\u00b2|#{n} yd\u00b2","liter-per-kilometer":"1#{n} L/km|#{n} L/km",mpg:"1#{n} mpg|#{n} mpg",bit:"1#{n} bit|#{n} bit","byte":"1#{n} byte|#{n} byte",gigabit:"1#{n} Gb|#{n} Gb",gigabyte:"1#{n} GB|#{n} GB",kilobit:"1#{n} kb|#{n} kb",kilobyte:"1#{n} kB|#{n} kB",megabit:"1#{n} Mb|#{n} Mb",megabyte:"1#{n} MB|#{n} MB",terabit:"1#{n} Tb|#{n} Tb",terabyte:"1#{n} TB|#{n} TB",day:"1#{n} day|#{n} days",hour:"1#{n} hr|#{n} hrs",microsecond:"1#{n} \u03bcs|#{n} \u03bcs",
millisecond:"1#{n} ms|#{n} ms",minute:"1#{n} min|#{n} mins",month:"1#{n} mth|#{n} mths",nanosecond:"1#{n} ns|#{n} ns",second:"1#{n} sec|#{n} secs",week:"1#{n} wk|#{n} wks",year:"1#{n} yr|#{n} yrs",ampere:"1#{n} A|#{n} A",milliampere:"1#{n} mA|#{n} mA",ohm:"1#{n} \u03a9|#{n} \u03a9",volt:"1#{n} V|#{n} V",calorie:"1#{n} Cal|#{n} Cal",joule:"1#{n} J|#{n} J",kilocalorie:"1#{n} kcal|#{n} kcal",kilojoule:"1#{n} kJ|#{n} kJ","kilowatt hour":"1#{n} kWh|#{n} kWh",gigahertz:"1#{n} GHz|#{n} GHz",hertz:"1#{n} Hz|#{n} Hz",
kilohertz:"1#{n} kHz|#{n} kHz",megahertz:"1#{n} MHz|#{n} MHz","astronomical-unit":"1#{n} au|#{n} au",centimeter:"1#{n} cm|#{n} cm",decimeter:"1#{n} dm|#{n} dm",fathom:"1#{n} fm|#{n} fm",foot:"1#{n} ft|#{n} ft",furlong:"1#{n} fur|#{n} fur",inch:"1#{n} in|#{n} in",kilometer:"1#{n} km|#{n} km","light-year":"1#{n} ly|#{n} ly",meter:"1#{n} m|#{n} m",micrometer:"1#{n} \u00b5m|#{n} \u00b5m",mile:"1#{n} mi|#{n} mi",millimeter:"1#{n} mm|#{n} mm",nanometer:"1#{n} nm|#{n} nm",nauticalmile:"1#{n} nmi|#{n} nmi",
parsec:"1#{n} pc|#{n} pc",picometer:"1#{n} pm|#{n} pm",yard:"1#{n} yd|#{n} yd",lux:"1#{n} lx|#{n} lx",carat:"1#{n} CD|#{n} CD",gram:"1#{n} g|#{n} g",kilogram:"1#{n} kg|#{n} kg","metric ton":"1#{n} t|#{n} t",microgram:"1#{n} \u00b5g|#{n} \u00b5g",milligram:"1#{n} mg|#{n} mg",ounce:"1#{n} oz|#{n} oz","ounce-troy":"1#{n} oz t|#{n} oz t",pound:"1#{n} lb|#{n} lb",stone:"1#{n} st|#{n} st","long ton":"1#{n} tn|#{n} tn",gigawatt:"1#{n} GW|#{n} GW",horsepower:"1#{n} hp|#{n} hp",kilowatt:"1#{n} kW|#{n} kW",
megawatt:"1#{n} MW|#{n} MW",milliwatt:"1#{n} mW|#{n} mW",watt:"1#{n} W|#{n} W",hectopascal:"1#{n} hPa|#{n} hPa","inch-hg":"1#{n} inHg|#{n} inHg",millibar:"1#{n} mbar|#{n} mbar","millimeter-of-mercury":"1#{n} mm Hg|#{n} mm Hg","pound-per-square-inch":"1#{n} psi|#{n} psi",karat:"1#{n} kt|#{n} kt","kilometer/hour":"1#{n} kph|#{n} kph","meters/second":"1#{n} m/s|#{n} m/s","miles/hour":"1#{n} mph|#{n} mph",celsius:"1#{n}\u00b0C|#{n}\u00b0C",fahrenheit:"1#{n}\u00b0F|#{n}\u00b0F",kelvin:"1#{n} K|#{n} K",
"acre-foot":"1#{n} ac ft|#{n} ac ft",bushel:"1#{n} bu|#{n} bu",centiliter:"1#{n} cL|#{n} cL","cubic-centimeter":"1#{n} cm\u00b3|#{n} cm\u00b3","cubic foot":"1#{n} ft\u00b3|#{n} ft\u00b3","cubic inch":"1#{n} in\u00b3|#{n} in\u00b3","cubic-kilometer":"1#{n} km\u00b3|#{n} km\u00b3","cubic meter":"1#{n} m\u00b3|#{n} m\u00b3","cubic-mile":"1#{n} mi\u00b3|#{n} mi\u00b3","cubic-yard":"1#{n} yd\u00b3|#{n} yd\u00b3",cup:"1#{n} c|#{n} c",deciliter:"1#{n} dL|#{n} dL","us ounce":"1#{n} fl oz|#{n} fl oz",gallon:"1#{n} gal|#{n} gal",
hectoliter:"1#{n} hL|#{n} hL",liter:"1#{n} l|#{n} l",megaliter:"1#{n} ML|#{n} ML",milliliter:"1#{n} mL|#{n} mL",pint:"1#{n} pt|#{n} pt",quart:"1#{n} qt|#{n} qt",tbsp:"1#{n} tbsp|#{n} tbsp",tsp:"1#{n} tsp|#{n} tsp",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",
gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp",
"imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_en_NG={unitfmt:{"long":{"g-force":"1#{n} g-force|#{n} g-force","meter-per-second-squared":"1#{n} meter per second squared|#{n} meters per second squared","arc-minute":"1#{n} arcminute|#{n} arcminutes","arc-second":"1#{n} arcsecond|#{n} arcseconds",degree:"1#{n} degree|#{n} degrees",radian:"1#{n} radian|#{n} radians",acre:"1#{n} acre|#{n} acres",hectare:"1#{n} hectare|#{n} hectares","square centimeter":"1#{n} square centimeter|#{n} square centimeters","square foot":"1#{n} square foot|#{n} square feet",
"square inch":"1#{n} square inch|#{n} square inches","square km":"1#{n} square kilometer|#{n} square kilometers","square meter":"1#{n} square meter|#{n} square meters","square mile":"1#{n} square mile|#{n} square miles","square yard":"1#{n} square yard|#{n} square yards","liter-per-kilometer":"1#{n} liter per kilometer|#{n} liters per kilometer",mpg:"1#{n} mile per gallon|#{n} miles per gallon",bit:"1#{n} bit|#{n} bits","byte":"1#{n} byte|#{n} bytes",gigabit:"1#{n} gigabit|#{n} gigabits",gigabyte:"1#{n} gigabyte|#{n} gigabytes",
kilobit:"1#{n} kilobit|#{n} kilobits",kilobyte:"1#{n} kilobyte|#{n} kilobytes",megabit:"1#{n} megabit|#{n} megabits",megabyte:"1#{n} megabyte|#{n} megabytes",terabit:"1#{n} terabit|#{n} terabits",terabyte:"1#{n} terabyte|#{n} terabytes",day:"1#{n} day|#{n} days",hour:"1#{n} hour|#{n} hours",microsecond:"1#{n} microsecond|#{n} microseconds",millisecond:"1#{n} millisecond|#{n} milliseconds",minute:"1#{n} minute|#{n} minutes",month:"1#{n} month|#{n} months",nanosecond:"1#{n} nanosecond|#{n} nanoseconds",
second:"1#{n} second|#{n} seconds",week:"1#{n} week|#{n} weeks",year:"1#{n} year|#{n} years",ampere:"1#{n} ampere|#{n} amperes",milliampere:"1#{n} milliampere|#{n} milliamperes",ohm:"1#{n} ohm|#{n} ohms",volt:"1#{n} volt|#{n} volts",calorie:"1#{n} Calorie|#{n} Calories",joule:"1#{n} joule|#{n} joules",kilocalorie:"1#{n} kilocalorie|#{n} kilocalories",kilojoule:"1#{n} kilojoule|#{n} kilojoules","kilowatt hour":"1#{n} kilowatt hour|#{n} kilowatt-hours",gigahertz:"1#{n} gigahertz|#{n} gigahertz",hertz:"1#{n} hertz|#{n} hertz",
kilohertz:"1#{n} kilohertz|#{n} kilohertz",megahertz:"1#{n} megahertz|#{n} megahertz","astronomical-unit":"1#{n} astronomical unit|#{n} astronomical units",centimeter:"1#{n} centimeter|#{n} centimeters",decimeter:"1#{n} decimeter|#{n} decimeters",fathom:"1#{n} fathom|#{n} fathoms",foot:"1#{n} foot|#{n} feet",furlong:"1#{n} furlong|#{n} furlongs",inch:"1#{n} inch|#{n} inches",kilometer:"1#{n} kilometer|#{n} kilometers","light-year":"1#{n} light year|#{n} light years",meter:"1#{n} meter|#{n} meters",
micrometer:"1#{n} micrometer|#{n} micrometers",mile:"1#{n} mile|#{n} miles",millimeter:"1#{n} millimeter|#{n} millimeters",nanometer:"1#{n} nanometer|#{n} nanometers",nauticalmile:"1#{n} nautical mile|#{n} nautical miles",parsec:"1#{n} parsec|#{n} parsecs",picometer:"1#{n} picometer|#{n} picometers",yard:"1#{n} yard|#{n} yards",lux:"1#{n} lux|#{n} lux",carat:"1#{n} carat|#{n} carats",gram:"1#{n} gram|#{n} grams",kilogram:"1#{n} kilogram|#{n} kilograms","metric ton":"1#{n} metric ton|#{n} metric tons",
microgram:"1#{n} microgram|#{n} micrograms",milligram:"1#{n} milligram|#{n} milligrams",ounce:"1#{n} ounce|#{n} ounces","ounce-troy":"1#{n} troy ounce|#{n} troy ounces",pound:"1#{n} pound|#{n} pounds",stone:"1#{n} stone|#{n} stones","long ton":"1#{n} ton|#{n} tons",gigawatt:"1#{n} gigawatt|#{n} gigawatts",horsepower:"1#{n} horsepower|#{n} horsepower",kilowatt:"1#{n} kilowatt|#{n} kilowatts",megawatt:"1#{n} megawatt|#{n} megawatts",milliwatt:"1#{n} milliwatt|#{n} milliwatts",watt:"1#{n} watt|#{n} watts",
hectopascal:"1#{n} hectopascal|#{n} hectopascals","inch-hg":"1#{n} inch of mercury|#{n} inches of mercury",millibar:"1#{n} millibar|#{n} millibars","millimeter-of-mercury":"1#{n} millimeter of mercury|#{n} millimeters of mercury","pound-per-square-inch":"1#{n} pound per square inch|#{n} pounds per square inch",karat:"1#{n} karat|#{n} karats","kilometer/hour":"1#{n} kilometer per hour|#{n} kilometers per hour","meters/second":"1#{n} meter per second|#{n} meters per second","miles/hour":"1#{n} mile per hour|#{n} miles per hour",
celsius:"1#{n} degree Celsius|#{n} degrees Celsius",fahrenheit:"1#{n} degree Fahrenheit|#{n} degrees Fahrenheit",kelvin:"1#{n} kelvin|#{n} kelvins","acre-foot":"1#{n} acre-foot|#{n} acre-feet",bushel:"1#{n} bushel|#{n} bushels",centiliter:"1#{n} centiliter|#{n} centiliters","cubic-centimeter":"1#{n} cubic centimeter|#{n} cubic centimeters","cubic foot":"1#{n} cubic foot|#{n} cubic feet","cubic inch":"1#{n} cubic inch|#{n} cubic inches","cubic-kilometer":"1#{n} cubic kilometer|#{n} cubic kilometers",
"cubic meter":"1#{n} cubic meter|#{n} cubic meters","cubic-mile":"1#{n} cubic mile|#{n} cubic miles","cubic-yard":"1#{n} cubic yard|#{n} cubic yards",cup:"1#{n} cup|#{n} cups",deciliter:"1#{n} deciliter|#{n} deciliters","us ounce":"1#{n} fluid ounce|#{n} fluid ounces",gallon:"1#{n} gallon|#{n} gallons",hectoliter:"1#{n} hectoliter|#{n} hectoliters",liter:"1#{n} liter|#{n} liters",megaliter:"1#{n} megaliter|#{n} megaliters",milliliter:"1#{n} milliliter|#{n} milliliters",pint:"1#{n} pint|#{n} pints",
quart:"1#{n} quart|#{n} quarts",tbsp:"1#{n} tablespoon|#{n} tablespoons",tsp:"1#{n} teaspoon|#{n} teaspoons",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",
gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second",
"miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},
"short":{"g-force":"1#{n} G|#{n} G","meter-per-second-squared":"1#{n} m/s\u00b2|#{n} m/s\u00b2","arc-minute":"1#{n} arcmin|#{n} arcmins","arc-second":"1#{n} arcsec|#{n} arcsecs",degree:"1#{n} deg|#{n} deg",radian:"1#{n} rad|#{n} rad",acre:"1#{n} ac|#{n} ac",hectare:"1#{n} ha|#{n} ha","square centimeter":"1#{n} cm\u00b2|#{n} cm\u00b2","square foot":"1#{n} sq ft|#{n} sq ft","square inch":"1#{n} in\u00b2|#{n} in\u00b2","square km":"1#{n} km\u00b2|#{n} km\u00b2","square meter":"1#{n} m\u00b2|#{n} m\u00b2",
"square mile":"1#{n} sq mi|#{n} sq mi","square yard":"1#{n} yd\u00b2|#{n} yd\u00b2","liter-per-kilometer":"1#{n} L/km|#{n} L/km",mpg:"1#{n} mpg|#{n} mpg",bit:"1#{n} bit|#{n} bit","byte":"1#{n} byte|#{n} byte",gigabit:"1#{n} Gb|#{n} Gb",gigabyte:"1#{n} GB|#{n} GB",kilobit:"1#{n} kb|#{n} kb",kilobyte:"1#{n} kB|#{n} kB",megabit:"1#{n} Mb|#{n} Mb",megabyte:"1#{n} MB|#{n} MB",terabit:"1#{n} Tb|#{n} Tb",terabyte:"1#{n} TB|#{n} TB",day:"1#{n} day|#{n} days",hour:"1#{n} hr|#{n} hrs",microsecond:"1#{n} \u03bcs|#{n} \u03bcs",
millisecond:"1#{n} ms|#{n} ms",minute:"1#{n} min|#{n} mins",month:"1#{n} mth|#{n} mths",nanosecond:"1#{n} ns|#{n} ns",second:"1#{n} sec|#{n} secs",week:"1#{n} wk|#{n} wks",year:"1#{n} yr|#{n} yrs",ampere:"1#{n} A|#{n} A",milliampere:"1#{n} mA|#{n} mA",ohm:"1#{n} \u03a9|#{n} \u03a9",volt:"1#{n} V|#{n} V",calorie:"1#{n} Cal|#{n} Cal",joule:"1#{n} J|#{n} J",kilocalorie:"1#{n} kcal|#{n} kcal",kilojoule:"1#{n} kJ|#{n} kJ","kilowatt hour":"1#{n} kWh|#{n} kWh",gigahertz:"1#{n} GHz|#{n} GHz",hertz:"1#{n} Hz|#{n} Hz",
kilohertz:"1#{n} kHz|#{n} kHz",megahertz:"1#{n} MHz|#{n} MHz","astronomical-unit":"1#{n} au|#{n} au",centimeter:"1#{n} cm|#{n} cm",decimeter:"1#{n} dm|#{n} dm",fathom:"1#{n} ftm|#{n} ftm",foot:"1#{n} ft|#{n} ft",furlong:"1#{n} fur|#{n} fur",inch:"1#{n} in|#{n} in",kilometer:"1#{n} km|#{n} km","light-year":"1#{n} ly|#{n} ly",meter:"1#{n} m|#{n} m",micrometer:"1#{n} \u00b5m|#{n} \u00b5m",mile:"1#{n} mi|#{n} mi",millimeter:"1#{n} mm|#{n} mm",nanometer:"1#{n} nm|#{n} nm",nauticalmile:"1#{n} nmi|#{n} nmi",
parsec:"1#{n} pc|#{n} pc",picometer:"1#{n} pm|#{n} pm",yard:"1#{n} yd|#{n} yd",lux:"1#{n} lx|#{n} lx",carat:"1#{n} CD|#{n} CD",gram:"1#{n} g|#{n} g",kilogram:"1#{n} kg|#{n} kg","metric ton":"1#{n} t|#{n} t",microgram:"1#{n} \u00b5g|#{n} \u00b5g",milligram:"1#{n} mg|#{n} mg",ounce:"1#{n} oz|#{n} oz","ounce-troy":"1#{n} oz t|#{n} oz t",pound:"1#{n} lb|#{n} lb",stone:"1#{n} st|#{n} st","long ton":"1#{n} tn|#{n} tn",gigawatt:"1#{n} GW|#{n} GW",horsepower:"1#{n} hp|#{n} hp",kilowatt:"1#{n} kW|#{n} kW",
megawatt:"1#{n} MW|#{n} MW",milliwatt:"1#{n} mW|#{n} mW",watt:"1#{n} W|#{n} W",hectopascal:"1#{n} hPa|#{n} hPa","inch-hg":"1#{n} inHg|#{n} inHg",millibar:"1#{n} mbar|#{n} mbar","millimeter-of-mercury":"1#{n} mm Hg|#{n} mm Hg","pound-per-square-inch":"1#{n} psi|#{n} psi",karat:"1#{n} kt|#{n} kt","kilometer/hour":"1#{n} kph|#{n} kph","meters/second":"1#{n} m/s|#{n} m/s","miles/hour":"1#{n} mph|#{n} mph",celsius:"1#{n}\u00b0C|#{n}\u00b0C",fahrenheit:"1#{n}\u00b0F|#{n}\u00b0F",kelvin:"1#{n} K|#{n} K",
"acre-foot":"1#{n} ac ft|#{n} ac ft",bushel:"1#{n} bu|#{n} bu",centiliter:"1#{n} cL|#{n} cL","cubic-centimeter":"1#{n} cm\u00b3|#{n} cm\u00b3","cubic foot":"1#{n} ft\u00b3|#{n} ft\u00b3","cubic inch":"1#{n} in\u00b3|#{n} in\u00b3","cubic-kilometer":"1#{n} km\u00b3|#{n} km\u00b3","cubic meter":"1#{n} m\u00b3|#{n} m\u00b3","cubic-mile":"1#{n} mi\u00b3|#{n} mi\u00b3","cubic-yard":"1#{n} yd\u00b3|#{n} yd\u00b3",cup:"1#{n} c|#{n} c",deciliter:"1#{n} dL|#{n} dL","us ounce":"1#{n} fl oz|#{n} fl oz",gallon:"1#{n} gal|#{n} gal",
hectoliter:"1#{n} hL|#{n} hL",liter:"1#{n} L|#{n} L",megaliter:"1#{n} ML|#{n} ML",milliliter:"1#{n} mL|#{n} mL",pint:"1#{n} pt|#{n} pt",quart:"1#{n} qt|#{n} qt",tbsp:"1#{n} tbsp|#{n} tbsp",tsp:"1#{n} tsp|#{n} tsp",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",
gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp",
"imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_en_PH={unitfmt:{"long":{"g-force":"1#{n} g-force|#{n} g-force","meter-per-second-squared":"1#{n} meter per second squared|#{n} meters per second squared","arc-minute":"1#{n} arcminute|#{n} arcminutes","arc-second":"1#{n} arcsecond|#{n} arcseconds",degree:"1#{n} degree|#{n} degrees",radian:"1#{n} radian|#{n} radians",acre:"1#{n} acre|#{n} acres",hectare:"1#{n} hectare|#{n} hectares","square centimeter":"1#{n} square centimeter|#{n} square centimeters","square foot":"1#{n} square foot|#{n} square feet",
"square inch":"1#{n} square inch|#{n} square inches","square km":"1#{n} square kilometer|#{n} square kilometers","square meter":"1#{n} square meter|#{n} square meters","square mile":"1#{n} square mile|#{n} square miles","square yard":"1#{n} square yard|#{n} square yards","liter-per-kilometer":"1#{n} liter per kilometer|#{n} liters per kilometer",mpg:"1#{n} mile per gallon|#{n} miles per gallon",bit:"1#{n} bit|#{n} bits","byte":"1#{n} byte|#{n} bytes",gigabit:"1#{n} gigabit|#{n} gigabits",gigabyte:"1#{n} gigabyte|#{n} gigabytes",
kilobit:"1#{n} kilobit|#{n} kilobits",kilobyte:"1#{n} kilobyte|#{n} kilobytes",megabit:"1#{n} megabit|#{n} megabits",megabyte:"1#{n} megabyte|#{n} megabytes",terabit:"1#{n} terabit|#{n} terabits",terabyte:"1#{n} terabyte|#{n} terabytes",day:"1#{n} day|#{n} days",hour:"1#{n} hour|#{n} hours",microsecond:"1#{n} microsecond|#{n} microseconds",millisecond:"1#{n} millisecond|#{n} milliseconds",minute:"1#{n} minute|#{n} minutes",month:"1#{n} month|#{n} months",nanosecond:"1#{n} nanosecond|#{n} nanoseconds",
second:"1#{n} second|#{n} seconds",week:"1#{n} week|#{n} weeks",year:"1#{n} year|#{n} years",ampere:"1#{n} ampere|#{n} amperes",milliampere:"1#{n} milliampere|#{n} milliamperes",ohm:"1#{n} ohm|#{n} ohms",volt:"1#{n} volt|#{n} volts",calorie:"1#{n} Calorie|#{n} Calories",joule:"1#{n} joule|#{n} joules",kilocalorie:"1#{n} kilocalorie|#{n} kilocalories",kilojoule:"1#{n} kilojoule|#{n} kilojoules","kilowatt hour":"1#{n} kilowatt hour|#{n} kilowatt-hours",gigahertz:"1#{n} gigahertz|#{n} gigahertz",hertz:"1#{n} hertz|#{n} hertz",
kilohertz:"1#{n} kilohertz|#{n} kilohertz",megahertz:"1#{n} megahertz|#{n} megahertz","astronomical-unit":"1#{n} astronomical unit|#{n} astronomical units",centimeter:"1#{n} centimeter|#{n} centimeters",decimeter:"1#{n} decimeter|#{n} decimeters",fathom:"1#{n} fathom|#{n} fathoms",foot:"1#{n} foot|#{n} feet",furlong:"1#{n} furlong|#{n} furlongs",inch:"1#{n} inch|#{n} inches",kilometer:"1#{n} kilometer|#{n} kilometers","light-year":"1#{n} light year|#{n} light years",meter:"1#{n} meter|#{n} meters",
micrometer:"1#{n} micrometer|#{n} micrometers",mile:"1#{n} mile|#{n} miles",millimeter:"1#{n} millimeter|#{n} millimeters",nanometer:"1#{n} nanometer|#{n} nanometers",nauticalmile:"1#{n} nautical mile|#{n} nautical miles",parsec:"1#{n} parsec|#{n} parsecs",picometer:"1#{n} picometer|#{n} picometers",yard:"1#{n} yard|#{n} yards",lux:"1#{n} lux|#{n} lux",carat:"1#{n} carat|#{n} carats",gram:"1#{n} gram|#{n} grams",kilogram:"1#{n} kilogram|#{n} kilograms","metric ton":"1#{n} metric ton|#{n} metric tons",
microgram:"1#{n} microgram|#{n} micrograms",milligram:"1#{n} milligram|#{n} milligrams",ounce:"1#{n} ounce|#{n} ounces","ounce-troy":"1#{n} troy ounce|#{n} troy ounces",pound:"1#{n} pound|#{n} pounds",stone:"1#{n} stone|#{n} stones","long ton":"1#{n} ton|#{n} tons",gigawatt:"1#{n} gigawatt|#{n} gigawatts",horsepower:"1#{n} horsepower|#{n} horsepower",kilowatt:"1#{n} kilowatt|#{n} kilowatts",megawatt:"1#{n} megawatt|#{n} megawatts",milliwatt:"1#{n} milliwatt|#{n} milliwatts",watt:"1#{n} watt|#{n} watts",
hectopascal:"1#{n} hectopascal|#{n} hectopascals","inch-hg":"1#{n} inch of mercury|#{n} inches of mercury",millibar:"1#{n} millibar|#{n} millibars","millimeter-of-mercury":"1#{n} millimeter of mercury|#{n} millimeters of mercury","pound-per-square-inch":"1#{n} pound per square inch|#{n} pounds per square inch",karat:"1#{n} karat|#{n} karats","kilometer/hour":"1#{n} kilometer per hour|#{n} kilometers per hour","meters/second":"1#{n} meter per second|#{n} meters per second","miles/hour":"1#{n} mile per hour|#{n} miles per hour",
celsius:"1#{n} degree Celsius|#{n} degrees Celsius",fahrenheit:"1#{n} degree Fahrenheit|#{n} degrees Fahrenheit",kelvin:"1#{n} kelvin|#{n} kelvins","acre-foot":"1#{n} acre-foot|#{n} acre-feet",bushel:"1#{n} bushel|#{n} bushels",centiliter:"1#{n} centiliter|#{n} centiliters","cubic-centimeter":"1#{n} cubic centimeter|#{n} cubic centimeters","cubic foot":"1#{n} cubic foot|#{n} cubic feet","cubic inch":"1#{n} cubic inch|#{n} cubic inches","cubic-kilometer":"1#{n} cubic kilometer|#{n} cubic kilometers",
"cubic meter":"1#{n} cubic meter|#{n} cubic meters","cubic-mile":"1#{n} cubic mile|#{n} cubic miles","cubic-yard":"1#{n} cubic yard|#{n} cubic yards",cup:"1#{n} cup|#{n} cups",deciliter:"1#{n} deciliter|#{n} deciliters","us ounce":"1#{n} fluid ounce|#{n} fluid ounces",gallon:"1#{n} gallon|#{n} gallons",hectoliter:"1#{n} hectoliter|#{n} hectoliters",liter:"1#{n} liter|#{n} liters",megaliter:"1#{n} megaliter|#{n} megaliters",milliliter:"1#{n} milliliter|#{n} milliliters",pint:"1#{n} pint|#{n} pints",
quart:"1#{n} quart|#{n} quarts",tbsp:"1#{n} tablespoon|#{n} tablespoons",tsp:"1#{n} teaspoon|#{n} teaspoons",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",
gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second",
"miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},
"short":{"g-force":"1#{n} G|#{n} G","meter-per-second-squared":"1#{n} m/s\u00b2|#{n} m/s\u00b2","arc-minute":"1#{n} arcmin|#{n} arcmins","arc-second":"1#{n} arcsec|#{n} arcsecs",degree:"1#{n} deg|#{n} deg",radian:"1#{n} rad|#{n} rad",acre:"1#{n} ac|#{n} ac",hectare:"1#{n} ha|#{n} ha","square centimeter":"1#{n} cm\u00b2|#{n} cm\u00b2","square foot":"1#{n} sq ft|#{n} sq ft","square inch":"1#{n} in\u00b2|#{n} in\u00b2","square km":"1#{n} km\u00b2|#{n} km\u00b2","square meter":"1#{n} m\u00b2|#{n} m\u00b2",
"square mile":"1#{n} sq mi|#{n} sq mi","square yard":"1#{n} yd\u00b2|#{n} yd\u00b2","liter-per-kilometer":"1#{n} L/km|#{n} L/km",mpg:"1#{n} mpg|#{n} mpg",bit:"1#{n} bit|#{n} bit","byte":"1#{n} byte|#{n} byte",gigabit:"1#{n} Gb|#{n} Gb",gigabyte:"1#{n} GB|#{n} GB",kilobit:"1#{n} kb|#{n} kb",kilobyte:"1#{n} kB|#{n} kB",megabit:"1#{n} Mb|#{n} Mb",megabyte:"1#{n} MB|#{n} MB",terabit:"1#{n} Tb|#{n} Tb",terabyte:"1#{n} TB|#{n} TB",day:"1#{n} day|#{n} days",hour:"1#{n} hr|#{n} hrs",microsecond:"1#{n} \u03bcs|#{n} \u03bcs",
millisecond:"1#{n} ms|#{n} ms",minute:"1#{n} min|#{n} mins",month:"1#{n} mth|#{n} mths",nanosecond:"1#{n} ns|#{n} ns",second:"1#{n} sec|#{n} secs",week:"1#{n} wk|#{n} wks",year:"1#{n} yr|#{n} yrs",ampere:"1#{n} A|#{n} A",milliampere:"1#{n} mA|#{n} mA",ohm:"1#{n} \u03a9|#{n} \u03a9",volt:"1#{n} V|#{n} V",calorie:"1#{n} Cal|#{n} Cal",joule:"1#{n} J|#{n} J",kilocalorie:"1#{n} kcal|#{n} kcal",kilojoule:"1#{n} kJ|#{n} kJ","kilowatt hour":"1#{n} kWh|#{n} kWh",gigahertz:"1#{n} GHz|#{n} GHz",hertz:"1#{n} Hz|#{n} Hz",
kilohertz:"1#{n} kHz|#{n} kHz",megahertz:"1#{n} MHz|#{n} MHz","astronomical-unit":"1#{n} au|#{n} au",centimeter:"1#{n} cm|#{n} cm",decimeter:"1#{n} dm|#{n} dm",fathom:"1#{n} ftm|#{n} ftm",foot:"1#{n} ft|#{n} ft",furlong:"1#{n} fur|#{n} fur",inch:"1#{n} in|#{n} in",kilometer:"1#{n} km|#{n} km","light-year":"1#{n} ly|#{n} ly",meter:"1#{n} m|#{n} m",micrometer:"1#{n} \u00b5m|#{n} \u00b5m",mile:"1#{n} mi|#{n} mi",millimeter:"1#{n} mm|#{n} mm",nanometer:"1#{n} nm|#{n} nm",nauticalmile:"1#{n} nmi|#{n} nmi",
parsec:"1#{n} pc|#{n} pc",picometer:"1#{n} pm|#{n} pm",yard:"1#{n} yd|#{n} yd",lux:"1#{n} lx|#{n} lx",carat:"1#{n} CD|#{n} CD",gram:"1#{n} g|#{n} g",kilogram:"1#{n} kg|#{n} kg","metric ton":"1#{n} t|#{n} t",microgram:"1#{n} \u00b5g|#{n} \u00b5g",milligram:"1#{n} mg|#{n} mg",ounce:"1#{n} oz|#{n} oz","ounce-troy":"1#{n} oz t|#{n} oz t",pound:"1#{n} lb|#{n} lb",stone:"1#{n} st|#{n} st","long ton":"1#{n} tn|#{n} tn",gigawatt:"1#{n} GW|#{n} GW",horsepower:"1#{n} hp|#{n} hp",kilowatt:"1#{n} kW|#{n} kW",
megawatt:"1#{n} MW|#{n} MW",milliwatt:"1#{n} mW|#{n} mW",watt:"1#{n} W|#{n} W",hectopascal:"1#{n} hPa|#{n} hPa","inch-hg":"1#{n} inHg|#{n} inHg",millibar:"1#{n} mbar|#{n} mbar","millimeter-of-mercury":"1#{n} mm Hg|#{n} mm Hg","pound-per-square-inch":"1#{n} psi|#{n} psi",karat:"1#{n} kt|#{n} kt","kilometer/hour":"1#{n} kph|#{n} kph","meters/second":"1#{n} m/s|#{n} m/s","miles/hour":"1#{n} mph|#{n} mph",celsius:"1#{n}\u00b0C|#{n}\u00b0C",fahrenheit:"1#{n}\u00b0F|#{n}\u00b0F",kelvin:"1#{n} K|#{n} K",
"acre-foot":"1#{n} ac ft|#{n} ac ft",bushel:"1#{n} bu|#{n} bu",centiliter:"1#{n} cL|#{n} cL","cubic-centimeter":"1#{n} cm\u00b3|#{n} cm\u00b3","cubic foot":"1#{n} ft\u00b3|#{n} ft\u00b3","cubic inch":"1#{n} in\u00b3|#{n} in\u00b3","cubic-kilometer":"1#{n} km\u00b3|#{n} km\u00b3","cubic meter":"1#{n} m\u00b3|#{n} m\u00b3","cubic-mile":"1#{n} mi\u00b3|#{n} mi\u00b3","cubic-yard":"1#{n} yd\u00b3|#{n} yd\u00b3",cup:"1#{n} c|#{n} c",deciliter:"1#{n} dL|#{n} dL","us ounce":"1#{n} fl oz|#{n} fl oz",gallon:"1#{n} gal|#{n} gal",
hectoliter:"1#{n} hL|#{n} hL",liter:"1#{n} L|#{n} L",megaliter:"1#{n} ML|#{n} ML",milliliter:"1#{n} mL|#{n} mL",pint:"1#{n} pt|#{n} pt",quart:"1#{n} qt|#{n} qt",tbsp:"1#{n} tbsp|#{n} tbsp",tsp:"1#{n} tsp|#{n} tsp",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",
gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp",
"imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_en_PK={unitfmt:{"long":{"g-force":"1#{n} g-force|#{n} g-force","meter-per-second-squared":"1#{n} metre per second squared|#{n} metres per second squared","arc-minute":"1#{n} arcminute|#{n} arcminutes","arc-second":"1#{n} arcsecond|#{n} arcseconds",degree:"1#{n} degree|#{n} degrees",radian:"1#{n} radian|#{n} radians",acre:"1#{n} acre|#{n} acres",hectare:"1#{n} hectare|#{n} hectares","square centimeter":"1#{n} square centimetre|#{n} square centimetres","square foot":"1#{n} square foot|#{n} square feet",
"square inch":"1#{n} square inch|#{n} square inches","square km":"1#{n} square kilometre|#{n} square kilometres","square meter":"1#{n} square metre|#{n} square metres","square mile":"1#{n} square mile|#{n} square miles","square yard":"1#{n} square yard|#{n} square yards","liter-per-kilometer":"1#{n} litre per kilometre|#{n} litres per kilometre",mpg:"1#{n} mile per gallon|#{n} miles per gallon",bit:"1#{n} bit|#{n} bits","byte":"1#{n} byte|#{n} bytes",gigabit:"1#{n} gigabit|#{n} gigabits",gigabyte:"1#{n} gigabyte|#{n} gigabytes",
kilobit:"1#{n} kilobit|#{n} kilobits",kilobyte:"1#{n} kilobyte|#{n} kilobytes",megabit:"1#{n} megabit|#{n} megabits",megabyte:"1#{n} megabyte|#{n} megabytes",terabit:"1#{n} terabit|#{n} terabits",terabyte:"1#{n} terabyte|#{n} terabytes",day:"1#{n} day|#{n} days",hour:"1#{n} hour|#{n} hours",microsecond:"1#{n} microsecond|#{n} microseconds",millisecond:"1#{n} millisecond|#{n} milliseconds",minute:"1#{n} minute|#{n} minutes",month:"1#{n} month|#{n} months",nanosecond:"1#{n} nanosecond|#{n} nanoseconds",
second:"1#{n} second|#{n} seconds",week:"1#{n} week|#{n} weeks",year:"1#{n} year|#{n} years",ampere:"1#{n} ampere|#{n} amperes",milliampere:"1#{n} milliampere|#{n} milliamperes",ohm:"1#{n} ohm|#{n} ohms",volt:"1#{n} volt|#{n} volts",calorie:"1#{n} Calorie|#{n} Calories",joule:"1#{n} joule|#{n} joules",kilocalorie:"1#{n} kilocalorie|#{n} kilocalories",kilojoule:"1#{n} kilojoule|#{n} kilojoules","kilowatt hour":"1#{n} kilowatt hour|#{n} kilowatt-hours",gigahertz:"1#{n} gigahertz|#{n} gigahertz",hertz:"1#{n} hertz|#{n} hertz",
kilohertz:"1#{n} kilohertz|#{n} kilohertz",megahertz:"1#{n} megahertz|#{n} megahertz","astronomical-unit":"1#{n} astronomical unit|#{n} astronomical units",centimeter:"1#{n} centimetre|#{n} centimetres",decimeter:"1#{n} decimetre|#{n} decimetres",fathom:"1#{n} fathom|#{n} fathoms",foot:"1#{n} foot|#{n} feet",furlong:"1#{n} furlong|#{n} furlongs",inch:"1#{n} inch|#{n} inches",kilometer:"1#{n} kilometre|#{n} kilometres","light-year":"1#{n} light year|#{n} light years",meter:"1#{n} metre|#{n} metres",
micrometer:"1#{n} micrometre|#{n} micrometres",mile:"1#{n} mile|#{n} miles",millimeter:"1#{n} millimetre|#{n} millimetres",nanometer:"1#{n} nanometre|#{n} nanometres",nauticalmile:"1#{n} nautical mile|#{n} nautical miles",parsec:"1#{n} parsec|#{n} parsecs",picometer:"1#{n} picometre|#{n} picometres",yard:"1#{n} yard|#{n} yards",lux:"1#{n} lux|#{n} lux",carat:"1#{n} carat|#{n} carats",gram:"1#{n} gram|#{n} grams",kilogram:"1#{n} kilogram|#{n} kilograms","metric ton":"1#{n} metric ton|#{n} metric tons",
microgram:"1#{n} microgram|#{n} micrograms",milligram:"1#{n} milligram|#{n} milligrams",ounce:"1#{n} ounce|#{n} ounces","ounce-troy":"1#{n} troy ounce|#{n} troy ounces",pound:"1#{n} pound|#{n} pounds",stone:"1#{n} stone|#{n} stones","long ton":"1#{n} ton|#{n} tons",gigawatt:"1#{n} gigawatt|#{n} gigawatts",horsepower:"1#{n} horsepower|#{n} horsepower",kilowatt:"1#{n} kilowatt|#{n} kilowatts",megawatt:"1#{n} megawatt|#{n} megawatts",milliwatt:"1#{n} milliwatt|#{n} milliwatts",watt:"1#{n} watt|#{n} watts",
hectopascal:"1#{n} hectopascal|#{n} hectopascals","inch-hg":"1#{n} inch of mercury|#{n} inches of mercury",millibar:"1#{n} millibar|#{n} millibars","millimeter-of-mercury":"1#{n} millimetre of mercury|#{n} millimetres of mercury","pound-per-square-inch":"1#{n} pound per square inch|#{n} pounds per square inch",karat:"1#{n} karat|#{n} karats","kilometer/hour":"1#{n} kilometre per hour|#{n} kilometres per hour","meters/second":"1#{n} metre per second|#{n} metres per second","miles/hour":"1#{n} mile per hour|#{n} miles per hour",
celsius:"1#{n} degree Celsius|#{n} degrees Celsius",fahrenheit:"1#{n} degree Fahrenheit|#{n} degrees Fahrenheit",kelvin:"1#{n} kelvin|#{n} kelvins","acre-foot":"1#{n} acre-foot|#{n} acre-feet",bushel:"1#{n} bushel|#{n} bushels",centiliter:"1#{n} centilitre|#{n} centilitres","cubic-centimeter":"1#{n} cubic centimetre|#{n} cubic centimetres","cubic foot":"1#{n} cubic foot|#{n} cubic feet","cubic inch":"1#{n} cubic inch|#{n} cubic inches","cubic-kilometer":"1#{n} cubic kilometre|#{n} cubic kilometres",
"cubic meter":"1#{n} cubic metre|#{n} cubic metres","cubic-mile":"1#{n} cubic mile|#{n} cubic miles","cubic-yard":"1#{n} cubic yard|#{n} cubic yards",cup:"1#{n} cup|#{n} cups",deciliter:"1#{n} decilitre|#{n} decilitres","us ounce":"1#{n} fluid ounce|#{n} fluid ounces",gallon:"1#{n} gallon|#{n} gallons",hectoliter:"1#{n} hectolitre|#{n} hectolitres",liter:"1#{n} litre|#{n} litres",megaliter:"1#{n} megalitre|#{n} megalitres",milliliter:"1#{n} millilitre|#{n} millilitres",pint:"1#{n} pint|#{n} pints",
quart:"1#{n} quart|#{n} quarts",tbsp:"1#{n} tablespoon|#{n} tablespoons",tsp:"1#{n} teaspoon|#{n} teaspoons",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",
gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second",
"miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},
"short":{"g-force":"1#{n} G|#{n} G","meter-per-second-squared":"1#{n} m/s\u00b2|#{n} m/s\u00b2","arc-minute":"1#{n} arcmin|#{n} arcmins","arc-second":"1#{n} arcsec|#{n} arcsecs",degree:"1#{n} deg|#{n} deg",radian:"1#{n} rad|#{n} rad",acre:"1#{n} ac|#{n} ac",hectare:"1#{n} ha|#{n} ha","square centimeter":"1#{n} cm\u00b2|#{n} cm\u00b2","square foot":"1#{n} sq ft|#{n} sq ft","square inch":"1#{n} in\u00b2|#{n} in\u00b2","square km":"1#{n} km\u00b2|#{n} km\u00b2","square meter":"1#{n} m\u00b2|#{n} m\u00b2",
"square mile":"1#{n} sq mi|#{n} sq mi","square yard":"1#{n} yd\u00b2|#{n} yd\u00b2","liter-per-kilometer":"1#{n} L/km|#{n} L/km",mpg:"1#{n} mpg|#{n} mpg",bit:"1#{n} bit|#{n} bit","byte":"1#{n} byte|#{n} byte",gigabit:"1#{n} Gb|#{n} Gb",gigabyte:"1#{n} GB|#{n} GB",kilobit:"1#{n} kb|#{n} kb",kilobyte:"1#{n} kB|#{n} kB",megabit:"1#{n} Mb|#{n} Mb",megabyte:"1#{n} MB|#{n} MB",terabit:"1#{n} Tb|#{n} Tb",terabyte:"1#{n} TB|#{n} TB",day:"1#{n} day|#{n} days",hour:"1#{n} hr|#{n} hrs",microsecond:"1#{n} \u03bcs|#{n} \u03bcs",
millisecond:"1#{n} ms|#{n} ms",minute:"1#{n} min|#{n} mins",month:"1#{n} mth|#{n} mths",nanosecond:"1#{n} ns|#{n} ns",second:"1#{n} sec|#{n} secs",week:"1#{n} wk|#{n} wks",year:"1#{n} yr|#{n} yrs",ampere:"1#{n} A|#{n} A",milliampere:"1#{n} mA|#{n} mA",ohm:"1#{n} \u03a9|#{n} \u03a9",volt:"1#{n} V|#{n} V",calorie:"1#{n} Cal|#{n} Cal",joule:"1#{n} J|#{n} J",kilocalorie:"1#{n} kcal|#{n} kcal",kilojoule:"1#{n} kJ|#{n} kJ","kilowatt hour":"1#{n} kWh|#{n} kWh",gigahertz:"1#{n} GHz|#{n} GHz",hertz:"1#{n} Hz|#{n} Hz",
kilohertz:"1#{n} kHz|#{n} kHz",megahertz:"1#{n} MHz|#{n} MHz","astronomical-unit":"1#{n} au|#{n} au",centimeter:"1#{n} cm|#{n} cm",decimeter:"1#{n} dm|#{n} dm",fathom:"1#{n} fm|#{n} fm",foot:"1#{n} ft|#{n} ft",furlong:"1#{n} fur|#{n} fur",inch:"1#{n} in|#{n} in",kilometer:"1#{n} km|#{n} km","light-year":"1#{n} ly|#{n} ly",meter:"1#{n} m|#{n} m",micrometer:"1#{n} \u00b5m|#{n} \u00b5m",mile:"1#{n} mi|#{n} mi",millimeter:"1#{n} mm|#{n} mm",nanometer:"1#{n} nm|#{n} nm",nauticalmile:"1#{n} nmi|#{n} nmi",
parsec:"1#{n} pc|#{n} pc",picometer:"1#{n} pm|#{n} pm",yard:"1#{n} yd|#{n} yd",lux:"1#{n} lx|#{n} lx",carat:"1#{n} CD|#{n} CD",gram:"1#{n} g|#{n} g",kilogram:"1#{n} kg|#{n} kg","metric ton":"1#{n} t|#{n} t",microgram:"1#{n} \u00b5g|#{n} \u00b5g",milligram:"1#{n} mg|#{n} mg",ounce:"1#{n} oz|#{n} oz","ounce-troy":"1#{n} oz t|#{n} oz t",pound:"1#{n} lb|#{n} lb",stone:"1#{n} st|#{n} st","long ton":"1#{n} tn|#{n} tn",gigawatt:"1#{n} GW|#{n} GW",horsepower:"1#{n} hp|#{n} hp",kilowatt:"1#{n} kW|#{n} kW",
megawatt:"1#{n} MW|#{n} MW",milliwatt:"1#{n} mW|#{n} mW",watt:"1#{n} W|#{n} W",hectopascal:"1#{n} hPa|#{n} hPa","inch-hg":"1#{n} inHg|#{n} inHg",millibar:"1#{n} mbar|#{n} mbar","millimeter-of-mercury":"1#{n} mm Hg|#{n} mm Hg","pound-per-square-inch":"1#{n} psi|#{n} psi",karat:"1#{n} kt|#{n} kt","kilometer/hour":"1#{n} kph|#{n} kph","meters/second":"1#{n} m/s|#{n} m/s","miles/hour":"1#{n} mph|#{n} mph",celsius:"1#{n}\u00b0C|#{n}\u00b0C",fahrenheit:"1#{n}\u00b0F|#{n}\u00b0F",kelvin:"1#{n} K|#{n} K",
"acre-foot":"1#{n} ac ft|#{n} ac ft",bushel:"1#{n} bu|#{n} bu",centiliter:"1#{n} cL|#{n} cL","cubic-centimeter":"1#{n} cm\u00b3|#{n} cm\u00b3","cubic foot":"1#{n} ft\u00b3|#{n} ft\u00b3","cubic inch":"1#{n} in\u00b3|#{n} in\u00b3","cubic-kilometer":"1#{n} km\u00b3|#{n} km\u00b3","cubic meter":"1#{n} m\u00b3|#{n} m\u00b3","cubic-mile":"1#{n} mi\u00b3|#{n} mi\u00b3","cubic-yard":"1#{n} yd\u00b3|#{n} yd\u00b3",cup:"1#{n} c|#{n} c",deciliter:"1#{n} dL|#{n} dL","us ounce":"1#{n} fl oz|#{n} fl oz",gallon:"1#{n} gal|#{n} gal",
hectoliter:"1#{n} hL|#{n} hL",liter:"1#{n} l|#{n} l",megaliter:"1#{n} ML|#{n} ML",milliliter:"1#{n} mL|#{n} mL",pint:"1#{n} pt|#{n} pt",quart:"1#{n} qt|#{n} qt",tbsp:"1#{n} tbsp|#{n} tbsp",tsp:"1#{n} tsp|#{n} tsp",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",
gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp",
"imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_en_US={unitfmt:{"long":{"g-force":"1#{n} g-force|#{n} g-force","meter-per-second-squared":"1#{n} meter per second squared|#{n} meters per second squared","arc-minute":"1#{n} arcminute|#{n} arcminutes","arc-second":"1#{n} arcsecond|#{n} arcseconds",degree:"1#{n} degree|#{n} degrees",radian:"1#{n} radian|#{n} radians",acre:"1#{n} acre|#{n} acres",hectare:"1#{n} hectare|#{n} hectares","square centimeter":"1#{n} square centimeter|#{n} square centimeters","square foot":"1#{n} square foot|#{n} square feet",
"square inch":"1#{n} square inch|#{n} square inches","square km":"1#{n} square kilometer|#{n} square kilometers","square meter":"1#{n} square meter|#{n} square meters","square mile":"1#{n} square mile|#{n} square miles","square yard":"1#{n} square yard|#{n} square yards","liter-per-kilometer":"1#{n} liter per kilometer|#{n} liters per kilometer",mpg:"1#{n} mile per gallon|#{n} miles per gallon",bit:"1#{n} bit|#{n} bits","byte":"1#{n} byte|#{n} bytes",gigabit:"1#{n} gigabit|#{n} gigabits",gigabyte:"1#{n} gigabyte|#{n} gigabytes",
kilobit:"1#{n} kilobit|#{n} kilobits",kilobyte:"1#{n} kilobyte|#{n} kilobytes",megabit:"1#{n} megabit|#{n} megabits",megabyte:"1#{n} megabyte|#{n} megabytes",terabit:"1#{n} terabit|#{n} terabits",terabyte:"1#{n} terabyte|#{n} terabytes",day:"1#{n} day|#{n} days",hour:"1#{n} hour|#{n} hours",microsecond:"1#{n} microsecond|#{n} microseconds",millisecond:"1#{n} millisecond|#{n} milliseconds",minute:"1#{n} minute|#{n} minutes",month:"1#{n} month|#{n} months",nanosecond:"1#{n} nanosecond|#{n} nanoseconds",
second:"1#{n} second|#{n} seconds",week:"1#{n} week|#{n} weeks",year:"1#{n} year|#{n} years",ampere:"1#{n} ampere|#{n} amperes",milliampere:"1#{n} milliampere|#{n} milliamperes",ohm:"1#{n} ohm|#{n} ohms",volt:"1#{n} volt|#{n} volts",calorie:"1#{n} Calorie|#{n} Calories",joule:"1#{n} joule|#{n} joules",kilocalorie:"1#{n} kilocalorie|#{n} kilocalories",kilojoule:"1#{n} kilojoule|#{n} kilojoules","kilowatt hour":"1#{n} kilowatt hour|#{n} kilowatt-hours",gigahertz:"1#{n} gigahertz|#{n} gigahertz",hertz:"1#{n} hertz|#{n} hertz",
kilohertz:"1#{n} kilohertz|#{n} kilohertz",megahertz:"1#{n} megahertz|#{n} megahertz","astronomical-unit":"1#{n} astronomical unit|#{n} astronomical units",centimeter:"1#{n} centimeter|#{n} centimeters",decimeter:"1#{n} decimeter|#{n} decimeters",fathom:"1#{n} fathom|#{n} fathoms",foot:"1#{n} foot|#{n} feet",furlong:"1#{n} furlong|#{n} furlongs",inch:"1#{n} inch|#{n} inches",kilometer:"1#{n} kilometer|#{n} kilometers","light-year":"1#{n} light year|#{n} light years",meter:"1#{n} meter|#{n} meters",
micrometer:"1#{n} micrometer|#{n} micrometers",mile:"1#{n} mile|#{n} miles",millimeter:"1#{n} millimeter|#{n} millimeters",nanometer:"1#{n} nanometer|#{n} nanometers",nauticalmile:"1#{n} nautical mile|#{n} nautical miles",parsec:"1#{n} parsec|#{n} parsecs",picometer:"1#{n} picometer|#{n} picometers",yard:"1#{n} yard|#{n} yards",lux:"1#{n} lux|#{n} lux",carat:"1#{n} carat|#{n} carats",gram:"1#{n} gram|#{n} grams",kilogram:"1#{n} kilogram|#{n} kilograms","metric ton":"1#{n} metric ton|#{n} metric tons",
microgram:"1#{n} microgram|#{n} micrograms",milligram:"1#{n} milligram|#{n} milligrams",ounce:"1#{n} ounce|#{n} ounces","ounce-troy":"1#{n} troy ounce|#{n} troy ounces",pound:"1#{n} pound|#{n} pounds",stone:"1#{n} stone|#{n} stones","long ton":"1#{n} ton|#{n} tons",gigawatt:"1#{n} gigawatt|#{n} gigawatts",horsepower:"1#{n} horsepower|#{n} horsepower",kilowatt:"1#{n} kilowatt|#{n} kilowatts",megawatt:"1#{n} megawatt|#{n} megawatts",milliwatt:"1#{n} milliwatt|#{n} milliwatts",watt:"1#{n} watt|#{n} watts",
hectopascal:"1#{n} hectopascal|#{n} hectopascals","inch-hg":"1#{n} inch of mercury|#{n} inches of mercury",millibar:"1#{n} millibar|#{n} millibars","millimeter-of-mercury":"1#{n} millimeter of mercury|#{n} millimeters of mercury","pound-per-square-inch":"1#{n} pound per square inch|#{n} pounds per square inch",karat:"1#{n} karat|#{n} karats","kilometer/hour":"1#{n} kilometer per hour|#{n} kilometers per hour","meters/second":"1#{n} meter per second|#{n} meters per second","miles/hour":"1#{n} mile per hour|#{n} miles per hour",
celsius:"1#{n} degree Celsius|#{n} degrees Celsius",fahrenheit:"1#{n} degree Fahrenheit|#{n} degrees Fahrenheit",kelvin:"1#{n} kelvin|#{n} kelvins","acre-foot":"1#{n} acre-foot|#{n} acre-feet",bushel:"1#{n} bushel|#{n} bushels",centiliter:"1#{n} centiliter|#{n} centiliters","cubic-centimeter":"1#{n} cubic centimeter|#{n} cubic centimeters","cubic foot":"1#{n} cubic foot|#{n} cubic feet","cubic inch":"1#{n} cubic inch|#{n} cubic inches","cubic-kilometer":"1#{n} cubic kilometer|#{n} cubic kilometers",
"cubic meter":"1#{n} cubic meter|#{n} cubic meters","cubic-mile":"1#{n} cubic mile|#{n} cubic miles","cubic-yard":"1#{n} cubic yard|#{n} cubic yards",cup:"1#{n} cup|#{n} cups",deciliter:"1#{n} deciliter|#{n} deciliters","us ounce":"1#{n} fluid ounce|#{n} fluid ounces",gallon:"1#{n} gallon|#{n} gallons",hectoliter:"1#{n} hectoliter|#{n} hectoliters",liter:"1#{n} liter|#{n} liters",megaliter:"1#{n} megaliter|#{n} megaliters",milliliter:"1#{n} milliliter|#{n} milliliters",pint:"1#{n} pint|#{n} pints",
quart:"1#{n} quart|#{n} quarts",tbsp:"1#{n} tablespoon|#{n} tablespoons",tsp:"1#{n} teaspoon|#{n} teaspoons",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",
gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second",
"miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},
"short":{"g-force":"1#{n} G|#{n} G","meter-per-second-squared":"1#{n} m/s\u00b2|#{n} m/s\u00b2","arc-minute":"1#{n} arcmin|#{n} arcmins","arc-second":"1#{n} arcsec|#{n} arcsecs",degree:"1#{n} deg|#{n} deg",radian:"1#{n} rad|#{n} rad",acre:"1#{n} ac|#{n} ac",hectare:"1#{n} ha|#{n} ha","square centimeter":"1#{n} cm\u00b2|#{n} cm\u00b2","square foot":"1#{n} sq ft|#{n} sq ft","square inch":"1#{n} in\u00b2|#{n} in\u00b2","square km":"1#{n} km\u00b2|#{n} km\u00b2","square meter":"1#{n} m\u00b2|#{n} m\u00b2",
"square mile":"1#{n} sq mi|#{n} sq mi","square yard":"1#{n} yd\u00b2|#{n} yd\u00b2","liter-per-kilometer":"1#{n} L/km|#{n} L/km",mpg:"1#{n} mpg|#{n} mpg",bit:"1#{n} bit|#{n} bit","byte":"1#{n} byte|#{n} byte",gigabit:"1#{n} Gb|#{n} Gb",gigabyte:"1#{n} GB|#{n} GB",kilobit:"1#{n} kb|#{n} kb",kilobyte:"1#{n} kB|#{n} kB",megabit:"1#{n} Mb|#{n} Mb",megabyte:"1#{n} MB|#{n} MB",terabit:"1#{n} Tb|#{n} Tb",terabyte:"1#{n} TB|#{n} TB",day:"1#{n} day|#{n} days",hour:"1#{n} hr|#{n} hrs",microsecond:"1#{n} \u03bcs|#{n} \u03bcs",
millisecond:"1#{n} ms|#{n} ms",minute:"1#{n} min|#{n} mins",month:"1#{n} mth|#{n} mths",nanosecond:"1#{n} ns|#{n} ns",second:"1#{n} sec|#{n} secs",week:"1#{n} wk|#{n} wks",year:"1#{n} yr|#{n} yrs",ampere:"1#{n} A|#{n} A",milliampere:"1#{n} mA|#{n} mA",ohm:"1#{n} \u03a9|#{n} \u03a9",volt:"1#{n} V|#{n} V",calorie:"1#{n} Cal|#{n} Cal",joule:"1#{n} J|#{n} J",kilocalorie:"1#{n} kcal|#{n} kcal",kilojoule:"1#{n} kJ|#{n} kJ","kilowatt hour":"1#{n} kWh|#{n} kWh",gigahertz:"1#{n} GHz|#{n} GHz",hertz:"1#{n} Hz|#{n} Hz",
kilohertz:"1#{n} kHz|#{n} kHz",megahertz:"1#{n} MHz|#{n} MHz","astronomical-unit":"1#{n} au|#{n} au",centimeter:"1#{n} cm|#{n} cm",decimeter:"1#{n} dm|#{n} dm",fathom:"1#{n} ftm|#{n} ftm",foot:"1#{n} ft|#{n} ft",furlong:"1#{n} fur|#{n} fur",inch:"1#{n} in|#{n} in",kilometer:"1#{n} km|#{n} km","light-year":"1#{n} ly|#{n} ly",meter:"1#{n} m|#{n} m",micrometer:"1#{n} \u00b5m|#{n} \u00b5m",mile:"1#{n} mi|#{n} mi",millimeter:"1#{n} mm|#{n} mm",nanometer:"1#{n} nm|#{n} nm",nauticalmile:"1#{n} nmi|#{n} nmi",
parsec:"1#{n} pc|#{n} pc",picometer:"1#{n} pm|#{n} pm",yard:"1#{n} yd|#{n} yd",lux:"1#{n} lx|#{n} lx",carat:"1#{n} CD|#{n} CD",gram:"1#{n} g|#{n} g",kilogram:"1#{n} kg|#{n} kg","metric ton":"1#{n} t|#{n} t",microgram:"1#{n} \u00b5g|#{n} \u00b5g",milligram:"1#{n} mg|#{n} mg",ounce:"1#{n} oz|#{n} oz","ounce-troy":"1#{n} oz t|#{n} oz t",pound:"1#{n} lb|#{n} lb",stone:"1#{n} st|#{n} st","long ton":"1#{n} tn|#{n} tn",gigawatt:"1#{n} GW|#{n} GW",horsepower:"1#{n} hp|#{n} hp",kilowatt:"1#{n} kW|#{n} kW",
megawatt:"1#{n} MW|#{n} MW",milliwatt:"1#{n} mW|#{n} mW",watt:"1#{n} W|#{n} W",hectopascal:"1#{n} hPa|#{n} hPa","inch-hg":"1#{n} inHg|#{n} inHg",millibar:"1#{n} mbar|#{n} mbar","millimeter-of-mercury":"1#{n} mm Hg|#{n} mm Hg","pound-per-square-inch":"1#{n} psi|#{n} psi",karat:"1#{n} kt|#{n} kt","kilometer/hour":"1#{n} kph|#{n} kph","meters/second":"1#{n} m/s|#{n} m/s","miles/hour":"1#{n} mph|#{n} mph",celsius:"1#{n}\u00b0C|#{n}\u00b0C",fahrenheit:"1#{n}\u00b0F|#{n}\u00b0F",kelvin:"1#{n} K|#{n} K",
"acre-foot":"1#{n} ac ft|#{n} ac ft",bushel:"1#{n} bu|#{n} bu",centiliter:"1#{n} cL|#{n} cL","cubic-centimeter":"1#{n} cm\u00b3|#{n} cm\u00b3","cubic foot":"1#{n} ft\u00b3|#{n} ft\u00b3","cubic inch":"1#{n} in\u00b3|#{n} in\u00b3","cubic-kilometer":"1#{n} km\u00b3|#{n} km\u00b3","cubic meter":"1#{n} m\u00b3|#{n} m\u00b3","cubic-mile":"1#{n} mi\u00b3|#{n} mi\u00b3","cubic-yard":"1#{n} yd\u00b3|#{n} yd\u00b3",cup:"1#{n} c|#{n} c",deciliter:"1#{n} dL|#{n} dL","us ounce":"1#{n} fl oz|#{n} fl oz",gallon:"1#{n} gal|#{n} gal",
hectoliter:"1#{n} hL|#{n} hL",liter:"1#{n} L|#{n} L",megaliter:"1#{n} ML|#{n} ML",milliliter:"1#{n} mL|#{n} mL",pint:"1#{n} pt|#{n} pt",quart:"1#{n} qt|#{n} qt",tbsp:"1#{n} tbsp|#{n} tbsp",tsp:"1#{n} tsp|#{n} tsp",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",
gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp",
"imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_en_ZA={unitfmt:{"long":{"g-force":"1#{n} g-force|#{n} g-force","meter-per-second-squared":"1#{n} meter per second squared|#{n} meters per second squared","arc-minute":"1#{n} arcminute|#{n} arcminutes","arc-second":"1#{n} arcsecond|#{n} arcseconds",degree:"1#{n} degree|#{n} degrees",radian:"1#{n} radian|#{n} radians",acre:"1#{n} acre|#{n} acres",hectare:"1#{n} hectare|#{n} hectares","square centimeter":"1#{n} square centimeter|#{n} square centimeters","square foot":"1#{n} square foot|#{n} square feet",
"square inch":"1#{n} square inch|#{n} square inches","square km":"1#{n} square kilometer|#{n} square kilometers","square meter":"1#{n} square meter|#{n} square meters","square mile":"1#{n} square mile|#{n} square miles","square yard":"1#{n} square yard|#{n} square yards","liter-per-kilometer":"1#{n} liter per kilometer|#{n} liters per kilometer",mpg:"1#{n} mile per gallon|#{n} miles per gallon",bit:"1#{n} bit|#{n} bits","byte":"1#{n} byte|#{n} bytes",gigabit:"1#{n} gigabit|#{n} gigabits",gigabyte:"1#{n} gigabyte|#{n} gigabytes",
kilobit:"1#{n} kilobit|#{n} kilobits",kilobyte:"1#{n} kilobyte|#{n} kilobytes",megabit:"1#{n} megabit|#{n} megabits",megabyte:"1#{n} megabyte|#{n} megabytes",terabit:"1#{n} terabit|#{n} terabits",terabyte:"1#{n} terabyte|#{n} terabytes",day:"1#{n} day|#{n} days",hour:"1#{n} hour|#{n} hours",microsecond:"1#{n} microsecond|#{n} microseconds",millisecond:"1#{n} millisecond|#{n} milliseconds",minute:"1#{n} minute|#{n} minutes",month:"1#{n} month|#{n} months",nanosecond:"1#{n} nanosecond|#{n} nanoseconds",
second:"1#{n} second|#{n} seconds",week:"1#{n} week|#{n} weeks",year:"1#{n} year|#{n} years",ampere:"1#{n} ampere|#{n} amperes",milliampere:"1#{n} milliampere|#{n} milliamperes",ohm:"1#{n} ohm|#{n} ohms",volt:"1#{n} volt|#{n} volts",calorie:"1#{n} Calorie|#{n} Calories",joule:"1#{n} joule|#{n} joules",kilocalorie:"1#{n} kilocalorie|#{n} kilocalories",kilojoule:"1#{n} kilojoule|#{n} kilojoules","kilowatt hour":"1#{n} kilowatt hour|#{n} kilowatt-hours",gigahertz:"1#{n} gigahertz|#{n} gigahertz",hertz:"1#{n} hertz|#{n} hertz",
kilohertz:"1#{n} kilohertz|#{n} kilohertz",megahertz:"1#{n} megahertz|#{n} megahertz","astronomical-unit":"1#{n} astronomical unit|#{n} astronomical units",centimeter:"1#{n} centimeter|#{n} centimeters",decimeter:"1#{n} decimeter|#{n} decimeters",fathom:"1#{n} fathom|#{n} fathoms",foot:"1#{n} foot|#{n} feet",furlong:"1#{n} furlong|#{n} furlongs",inch:"1#{n} inch|#{n} inches",kilometer:"1#{n} kilometer|#{n} kilometers","light-year":"1#{n} light year|#{n} light years",meter:"1#{n} meter|#{n} meters",
micrometer:"1#{n} micrometer|#{n} micrometers",mile:"1#{n} mile|#{n} miles",millimeter:"1#{n} millimeter|#{n} millimeters",nanometer:"1#{n} nanometer|#{n} nanometers",nauticalmile:"1#{n} nautical mile|#{n} nautical miles",parsec:"1#{n} parsec|#{n} parsecs",picometer:"1#{n} picometer|#{n} picometers",yard:"1#{n} yard|#{n} yards",lux:"1#{n} lux|#{n} lux",carat:"1#{n} carat|#{n} carats",gram:"1#{n} gram|#{n} grams",kilogram:"1#{n} kilogram|#{n} kilograms","metric ton":"1#{n} metric ton|#{n} metric tons",
microgram:"1#{n} microgram|#{n} micrograms",milligram:"1#{n} milligram|#{n} milligrams",ounce:"1#{n} ounce|#{n} ounces","ounce-troy":"1#{n} troy ounce|#{n} troy ounces",pound:"1#{n} pound|#{n} pounds",stone:"1#{n} stone|#{n} stones","long ton":"1#{n} ton|#{n} tons",gigawatt:"1#{n} gigawatt|#{n} gigawatts",horsepower:"1#{n} horsepower|#{n} horsepower",kilowatt:"1#{n} kilowatt|#{n} kilowatts",megawatt:"1#{n} megawatt|#{n} megawatts",milliwatt:"1#{n} milliwatt|#{n} milliwatts",watt:"1#{n} watt|#{n} watts",
hectopascal:"1#{n} hectopascal|#{n} hectopascals","inch-hg":"1#{n} inch of mercury|#{n} inches of mercury",millibar:"1#{n} millibar|#{n} millibars","millimeter-of-mercury":"1#{n} millimeter of mercury|#{n} millimeters of mercury","pound-per-square-inch":"1#{n} pound per square inch|#{n} pounds per square inch",karat:"1#{n} karat|#{n} karats","kilometer/hour":"1#{n} kilometer per hour|#{n} kilometers per hour","meters/second":"1#{n} meter per second|#{n} meters per second","miles/hour":"1#{n} mile per hour|#{n} miles per hour",
celsius:"1#{n} degree Celsius|#{n} degrees Celsius",fahrenheit:"1#{n} degree Fahrenheit|#{n} degrees Fahrenheit",kelvin:"1#{n} kelvin|#{n} kelvins","acre-foot":"1#{n} acre-foot|#{n} acre-feet",bushel:"1#{n} bushel|#{n} bushels",centiliter:"1#{n} centiliter|#{n} centiliters","cubic-centimeter":"1#{n} cubic centimeter|#{n} cubic centimeters","cubic foot":"1#{n} cubic foot|#{n} cubic feet","cubic inch":"1#{n} cubic inch|#{n} cubic inches","cubic-kilometer":"1#{n} cubic kilometer|#{n} cubic kilometers",
"cubic meter":"1#{n} cubic meter|#{n} cubic meters","cubic-mile":"1#{n} cubic mile|#{n} cubic miles","cubic-yard":"1#{n} cubic yard|#{n} cubic yards",cup:"1#{n} cup|#{n} cups",deciliter:"1#{n} deciliter|#{n} deciliters","us ounce":"1#{n} fluid ounce|#{n} fluid ounces",gallon:"1#{n} gallon|#{n} gallons",hectoliter:"1#{n} hectoliter|#{n} hectoliters",liter:"1#{n} liter|#{n} liters",megaliter:"1#{n} megaliter|#{n} megaliters",milliliter:"1#{n} milliliter|#{n} milliliters",pint:"1#{n} pint|#{n} pints",
quart:"1#{n} quart|#{n} quarts",tbsp:"1#{n} tablespoon|#{n} tablespoons",tsp:"1#{n} teaspoon|#{n} teaspoons",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",
gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second",
"miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},
"short":{"g-force":"1#{n} G|#{n} G","meter-per-second-squared":"1#{n} m/s\u00b2|#{n} m/s\u00b2","arc-minute":"1#{n} arcmin|#{n} arcmins","arc-second":"1#{n} arcsec|#{n} arcsecs",degree:"1#{n} deg|#{n} deg",radian:"1#{n} rad|#{n} rad",acre:"1#{n} ac|#{n} ac",hectare:"1#{n} ha|#{n} ha","square centimeter":"1#{n} cm\u00b2|#{n} cm\u00b2","square foot":"1#{n} sq ft|#{n} sq ft","square inch":"1#{n} in\u00b2|#{n} in\u00b2","square km":"1#{n} km\u00b2|#{n} km\u00b2","square meter":"1#{n} m\u00b2|#{n} m\u00b2",
"square mile":"1#{n} sq mi|#{n} sq mi","square yard":"1#{n} yd\u00b2|#{n} yd\u00b2","liter-per-kilometer":"1#{n} L/km|#{n} L/km",mpg:"1#{n} mpg|#{n} mpg",bit:"1#{n} bit|#{n} bit","byte":"1#{n} byte|#{n} byte",gigabit:"1#{n} Gb|#{n} Gb",gigabyte:"1#{n} GB|#{n} GB",kilobit:"1#{n} kb|#{n} kb",kilobyte:"1#{n} kB|#{n} kB",megabit:"1#{n} Mb|#{n} Mb",megabyte:"1#{n} MB|#{n} MB",terabit:"1#{n} Tb|#{n} Tb",terabyte:"1#{n} TB|#{n} TB",day:"1#{n} day|#{n} days",hour:"1#{n} hr|#{n} hrs",microsecond:"1#{n} \u03bcs|#{n} \u03bcs",
millisecond:"1#{n} ms|#{n} ms",minute:"1#{n} min|#{n} mins",month:"1#{n} mth|#{n} mths",nanosecond:"1#{n} ns|#{n} ns",second:"1#{n} sec|#{n} secs",week:"1#{n} wk|#{n} wks",year:"1#{n} yr|#{n} yrs",ampere:"1#{n} A|#{n} A",milliampere:"1#{n} mA|#{n} mA",ohm:"1#{n} \u03a9|#{n} \u03a9",volt:"1#{n} V|#{n} V",calorie:"1#{n} Cal|#{n} Cal",joule:"1#{n} J|#{n} J",kilocalorie:"1#{n} kcal|#{n} kcal",kilojoule:"1#{n} kJ|#{n} kJ","kilowatt hour":"1#{n} kWh|#{n} kWh",gigahertz:"1#{n} GHz|#{n} GHz",hertz:"1#{n} Hz|#{n} Hz",
kilohertz:"1#{n} kHz|#{n} kHz",megahertz:"1#{n} MHz|#{n} MHz","astronomical-unit":"1#{n} au|#{n} au",centimeter:"1#{n} cm|#{n} cm",decimeter:"1#{n} dm|#{n} dm",fathom:"1#{n} ftm|#{n} ftm",foot:"1#{n} ft|#{n} ft",furlong:"1#{n} fur|#{n} fur",inch:"1#{n} in|#{n} in",kilometer:"1#{n} km|#{n} km","light-year":"1#{n} ly|#{n} ly",meter:"1#{n} m|#{n} m",micrometer:"1#{n} \u00b5m|#{n} \u00b5m",mile:"1#{n} mi|#{n} mi",millimeter:"1#{n} mm|#{n} mm",nanometer:"1#{n} nm|#{n} nm",nauticalmile:"1#{n} nmi|#{n} nmi",
parsec:"1#{n} pc|#{n} pc",picometer:"1#{n} pm|#{n} pm",yard:"1#{n} yd|#{n} yd",lux:"1#{n} lx|#{n} lx",carat:"1#{n} CD|#{n} CD",gram:"1#{n} g|#{n} g",kilogram:"1#{n} kg|#{n} kg","metric ton":"1#{n} t|#{n} t",microgram:"1#{n} \u00b5g|#{n} \u00b5g",milligram:"1#{n} mg|#{n} mg",ounce:"1#{n} oz|#{n} oz","ounce-troy":"1#{n} oz t|#{n} oz t",pound:"1#{n} lb|#{n} lb",stone:"1#{n} st|#{n} st","long ton":"1#{n} tn|#{n} tn",gigawatt:"1#{n} GW|#{n} GW",horsepower:"1#{n} hp|#{n} hp",kilowatt:"1#{n} kW|#{n} kW",
megawatt:"1#{n} MW|#{n} MW",milliwatt:"1#{n} mW|#{n} mW",watt:"1#{n} W|#{n} W",hectopascal:"1#{n} hPa|#{n} hPa","inch-hg":"1#{n} inHg|#{n} inHg",millibar:"1#{n} mbar|#{n} mbar","millimeter-of-mercury":"1#{n} mm Hg|#{n} mm Hg","pound-per-square-inch":"1#{n} psi|#{n} psi",karat:"1#{n} kt|#{n} kt","kilometer/hour":"1#{n} kph|#{n} kph","meters/second":"1#{n} m/s|#{n} m/s","miles/hour":"1#{n} mph|#{n} mph",celsius:"1#{n}\u00b0C|#{n}\u00b0C",fahrenheit:"1#{n}\u00b0F|#{n}\u00b0F",kelvin:"1#{n} K|#{n} K",
"acre-foot":"1#{n} ac ft|#{n} ac ft",bushel:"1#{n} bu|#{n} bu",centiliter:"1#{n} cL|#{n} cL","cubic-centimeter":"1#{n} cm\u00b3|#{n} cm\u00b3","cubic foot":"1#{n} ft\u00b3|#{n} ft\u00b3","cubic inch":"1#{n} in\u00b3|#{n} in\u00b3","cubic-kilometer":"1#{n} km\u00b3|#{n} km\u00b3","cubic meter":"1#{n} m\u00b3|#{n} m\u00b3","cubic-mile":"1#{n} mi\u00b3|#{n} mi\u00b3","cubic-yard":"1#{n} yd\u00b3|#{n} yd\u00b3",cup:"1#{n} c|#{n} c",deciliter:"1#{n} dL|#{n} dL","us ounce":"1#{n} fl oz|#{n} fl oz",gallon:"1#{n} gal|#{n} gal",
hectoliter:"1#{n} hL|#{n} hL",liter:"1#{n} L|#{n} L",megaliter:"1#{n} ML|#{n} ML",milliliter:"1#{n} mL|#{n} mL",pint:"1#{n} pt|#{n} pt",quart:"1#{n} qt|#{n} qt",tbsp:"1#{n} tbsp|#{n} tbsp",tsp:"1#{n} tsp|#{n} tsp",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",
gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp",
"imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_de={unitfmt:{"long":{"g-force":"1#{n}-fache Erdbeschleunigung|#{n}-fache Erdbeschleunigung","meter-per-second-squared":"1#{n} m/s\u00b2|#{n} m/s\u00b2","arc-minute":"1#{n} Winkelminute|#{n} Winkelminuten","arc-second":"1#{n} Winkelsekunde|#{n} Winkelsekunden",degree:"1#{n} Grad|#{n} Grad",radian:"1#{n}\u00a0Radiant|#{n}\u00a0Radianten",acre:"1#{n} Acre|#{n} Acres",hectare:"1#{n} Hektar|#{n} Hektar","square centimeter":"1#{n}\u00a0Quadratzentimeter|#{n}\u00a0Quadratzentimeter","square foot":"1#{n} Quadratfu\u00df|#{n} Quadratfu\u00df",
"square inch":"1#{n}\u00a0Quadratzoll|#{n}\u00a0Quadratzoll","square km":"1#{n} Quadratkilometer|#{n} Quadratkilometer","square meter":"1#{n} Quadratmeter|#{n} Quadratmeter","square mile":"1#{n} Quadratmeile|#{n} Quadratmeilen","square yard":"1#{n}\u00a0Quadratyard|#{n}\u00a0Quadratyards","liter-per-kilometer":"1#{n}\u00a0Liter pro Kilometer|#{n}\u00a0Liter pro Kilometer",mpg:"1#{n}\u00a0Meile pro Gallone|#{n}\u00a0Meilen pro Gallone",bit:"1#{n}\u00a0Bit|#{n}\u00a0Bits","byte":"1#{n}\u00a0Byte|#{n}\u00a0Bytes",
gigabit:"1#{n}\u00a0Gigabit|#{n}\u00a0Gigabits",gigabyte:"1#{n}\u00a0Gigabyte|#{n}\u00a0Gigabytes",kilobit:"1#{n}\u00a0Kilobit|#{n}\u00a0Kilobits",kilobyte:"1#{n}\u00a0Kilobyte|#{n}\u00a0Kilobytes",megabit:"1#{n}\u00a0Megabit|#{n}\u00a0Megabits",megabyte:"1#{n}\u00a0Megabyte|#{n}\u00a0Megabytes",terabit:"1#{n}\u00a0Terabit|#{n}\u00a0Terabits",terabyte:"1#{n}\u00a0Terabyte|#{n}\u00a0Terabytes",day:"1#{n} Tag|#{n} Tage",hour:"1#{n} Stunde|#{n} Stunden",microsecond:"1#{n} Mikrosekunde|#{n} Mikrosekunden",
millisecond:"1#{n} Millisekunde|#{n} Millisekunden",minute:"1#{n} Minute|#{n} Minuten",month:"1#{n} Monat|#{n} Monate",nanosecond:"1#{n} Nanosekunde|#{n} Nanosekunden",second:"1#{n} Sekunde|#{n} Sekunden",week:"1#{n} Woche|#{n} Wochen",year:"1#{n} Jahr|#{n} Jahre",ampere:"1#{n}\u00a0Ampere|#{n}\u00a0Ampere",milliampere:"1#{n}\u00a0Milliampere|#{n}\u00a0Milliampere",ohm:"1#{n}\u00a0Ohm|#{n}\u00a0Ohm",volt:"1#{n}\u00a0Volt|#{n}\u00a0Volt",calorie:"1#{n} Cal|#{n}\u00a0Kilokalorien",joule:"1#{n}\u00a0Joule|#{n}\u00a0Joule",
kilocalorie:"1#{n}\u00a0Kilokalorie|#{n}\u00a0Kilokalorien",kilojoule:"1#{n}\u00a0Kilojoule|#{n}\u00a0Kilojoule","kilowatt hour":"1#{n}\u00a0Kilowattstunde|#{n}\u00a0Kilowattstunden",gigahertz:"1#{n}\u00a0Gigahertz|#{n}\u00a0Gigahertz",hertz:"1#{n}\u00a0Hertz|#{n}\u00a0Hertz",kilohertz:"1#{n}\u00a0Kilohertz|#{n}\u00a0Kilohertz",megahertz:"1#{n}\u00a0Megahertz|#{n}\u00a0Megahertz","astronomical-unit":"1#{n}\u00a0AE|#{n}\u00a0AE",centimeter:"1#{n} Zentimeter|#{n} Zentimeter",decimeter:"1#{n}\u00a0Dezimeter|#{n}\u00a0Dezimeter",
fathom:"1#{n} Faden|#{n}\u00a0Faden",foot:"1#{n} Fu\u00df|#{n} Fu\u00df",furlong:"1#{n} Furlong|#{n} Furlong",inch:"1#{n} Zoll|#{n} Zoll",kilometer:"1#{n} Kilometer|#{n} Kilometer","light-year":"1#{n} Lichtjahr|#{n} Lichtjahre",meter:"1#{n} Meter|#{n} Meter",micrometer:"1#{n}\u00a0Mikrometer|#{n}\u00a0Mikrometer",mile:"1#{n} Meile|#{n} Meilen",millimeter:"1#{n} Millimeter|#{n} Millimeter",nanometer:"1#{n}\u00a0Nanometer|#{n}\u00a0Nanometer",nauticalmile:"1#{n}\u00a0Seemeile|#{n}\u00a0Seemeilen",parsec:"1#{n}\u00a0Parsec|#{n}\u00a0Parsec",
picometer:"1#{n} Pikometer|#{n} Pikometer",yard:"1#{n} Yard|#{n} Yards",lux:"1#{n}\u00a0Lux|#{n}\u00a0Lux",carat:"1#{n}\u00a0Karat|#{n}\u00a0Karat",gram:"1#{n} Gramm|#{n} Gramm",kilogram:"1#{n} Kilogramm|#{n} Kilogramm","metric ton":"1#{n}\u00a0Tonne|#{n}\u00a0Tonnen",microgram:"1#{n}\u00a0Mikrogramm|#{n}\u00a0Mikrogramm",milligram:"1#{n}\u00a0Milligramm|#{n}\u00a0Milligramm",ounce:"1#{n} Unze|#{n} Unzen","ounce-troy":"1#{n}\u00a0Feinunze|#{n}\u00a0Feinunzen",pound:"1#{n} Pfund|#{n} Pfund",stone:"1#{n}\u00a0Stone|#{n}\u00a0Stones",
"long ton":"1#{n}\u00a0Short Ton|#{n}\u00a0Short Tons",gigawatt:"1#{n}\u00a0Gigawatt|#{n}\u00a0Gigawatt",horsepower:"1#{n} Pferdest\u00e4rke|#{n} Pferdest\u00e4rken",kilowatt:"1#{n} Kilowatt|#{n} Kilowatt",megawatt:"1#{n}\u00a0Megawatt|#{n}\u00a0Megawatt",milliwatt:"1#{n}\u00a0Milliwatt|#{n}\u00a0Milliwatt",watt:"1#{n} Watt|#{n} Watt",hectopascal:"1#{n} Hektopascal|#{n} Hektopascal","inch-hg":"1#{n} Zoll Quecksilbers\u00e4ule|#{n} Zoll Quecksilbers\u00e4ule",millibar:"1#{n} Millibar|#{n} Millibar",
"millimeter-of-mercury":"1#{n}\u00a0Millimeter Quecksilbers\u00e4ule|#{n}\u00a0Millimeter Quecksilbers\u00e4ule","pound-per-square-inch":"1#{n} Pfund pro Quadratzoll|#{n} Pfund pro Quadratzoll",karat:"1#{n}\u00a0Karat|#{n}\u00a0Karat","kilometer/hour":"1#{n} Kilometer pro Stunde|#{n} Kilometer pro Stunde","meters/second":"1#{n} Meter pro Sekunde|#{n} Meter pro Sekunde","miles/hour":"1#{n} Meile pro Stunde|#{n} Meilen pro Stunde",celsius:"1#{n} Grad Celsius|#{n} Grad Celsius",fahrenheit:"1#{n} Grad Fahrenheit|#{n} Grad Fahrenheit",
kelvin:"1#{n} Kelvin|#{n} Kelvin","acre-foot":"1#{n}\u00a0Acre-Foot|#{n}\u00a0Acre-Feet",bushel:"1#{n}\u00a0Bushel|#{n}\u00a0Bushel",centiliter:"1#{n}\u00a0Zentiliter|#{n}\u00a0Zentiliter","cubic-centimeter":"1#{n}\u00a0Kubikzentimeter|#{n}\u00a0Kubikzentimeter","cubic foot":"1#{n}\u00a0Kubikfu\u00df|#{n}\u00a0Kubikfu\u00df","cubic inch":"1#{n}\u00a0Kubikzoll|#{n}\u00a0Kubikzoll","cubic-kilometer":"1#{n} Kubikkilometer|#{n} Kubikkilometer","cubic meter":"1#{n}\u00a0Kubikmeter|#{n}\u00a0Kubikmeter",
"cubic-mile":"1#{n} Kubikmeile|#{n} Kubikmeilen","cubic-yard":"1#{n}\u00a0Kubikyard|#{n}\u00a0Kubikyards",cup:"1#{n}\u00a0Cup|#{n}\u00a0Cups",deciliter:"1#{n}\u00a0Deziliter|#{n}\u00a0Deziliter","us ounce":"1#{n}\u00a0Fl\u00fcssigunze|#{n}\u00a0Fl\u00fcssigunzen",gallon:"1#{n}\u00a0Gallone|#{n}\u00a0Gallonen",hectoliter:"1#{n}\u00a0Hektoliter|#{n}\u00a0Hektoliter",liter:"1#{n} Liter|#{n} Liter",megaliter:"1#{n}\u00a0Megaliter|#{n}\u00a0Megaliter",milliliter:"1#{n}\u00a0Milliliter|#{n}\u00a0Milliliter",
pint:"1#{n}\u00a0Pint|#{n}\u00a0Pints",quart:"1#{n}\u00a0Quart|#{n}\u00a0Quart",tbsp:"1#{n}\u00a0Essl\u00f6ffel|#{n}\u00a0Essl\u00f6ffel",tsp:"1#{n}\u00a0Teel\u00f6ffel|#{n}\u00a0Teel\u00f6ffel",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules",
"watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",
knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second","miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts",
"imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},"short":{"g-force":"1#{n} G|#{n} G","meter-per-second-squared":"1#{n} m/s\u00b2|#{n} m/s\u00b2","arc-minute":"1#{n}\u2032|#{n}\u2032","arc-second":"1#{n}\u2033|#{n}\u2033",degree:"1#{n}\u00b0|#{n}\u00b0",radian:"1#{n} rad|#{n} rad",acre:"1#{n} ac|#{n} ac",hectare:"1#{n} ha|#{n} ha","square centimeter":"1#{n} cm\u00b2|#{n} cm\u00b2","square foot":"1#{n} ft\u00b2|#{n} ft\u00b2","square inch":"1#{n} in\u00b2|#{n} in\u00b2","square km":"1#{n} km\u00b2|#{n} km\u00b2",
"square meter":"1#{n} m\u00b2|#{n} m\u00b2","square mile":"1#{n} mi\u00b2|#{n} mi\u00b2","square yard":"1#{n} yd\u00b2|#{n} yd\u00b2","liter-per-kilometer":"1#{n}\u00a0l/km|#{n}\u00a0l/km",mpg:"1#{n} mpg|#{n} mpg",bit:"1#{n}\u00a0Bit|#{n}\u00a0Bits","byte":"1#{n}\u00a0Byte|#{n}\u00a0Bytes",gigabit:"1#{n}\u00a0Gb|#{n}\u00a0Gb",gigabyte:"1#{n}\u00a0GB|#{n}\u00a0GB",kilobit:"1#{n} kb|#{n} kb",kilobyte:"1#{n} kB|#{n} kB",megabit:"1#{n} Mb|#{n} Mb",megabyte:"1#{n} MB|#{n} MB",terabit:"1#{n} Tb|#{n} Tb",
terabyte:"1#{n} TB|#{n} TB",day:"1#{n} T|#{n} T",hour:"1#{n} Std.|#{n} Std.",microsecond:"1#{n} \u03bcs|#{n} \u03bcs",millisecond:"1#{n} ms|#{n} ms",minute:"1#{n} Min.|#{n} Min.",month:"1#{n} Mon|#{n} Mon",nanosecond:"1#{n} ns|#{n} ns",second:"1#{n} Sek.|#{n} Sek.",week:"1#{n} W|#{n} W",year:"1#{n} J|#{n} J",ampere:"1#{n} A|#{n} A",milliampere:"1#{n} mA|#{n} mA",ohm:"1#{n} \u03a9|#{n} \u03a9",volt:"1#{n} V|#{n} V",calorie:"1#{n}\u00a0kcal|#{n}\u00a0kcal",joule:"1#{n}\u00a0J|#{n}\u00a0J",kilocalorie:"1#{n} kcal|#{n} kcal",
kilojoule:"1#{n} kJ|#{n} kJ","kilowatt hour":"1#{n} kWh|#{n} kWh",gigahertz:"1#{n} GHz|#{n} GHz",hertz:"1#{n} Hz|#{n} Hz",kilohertz:"1#{n} kHz|#{n} kHz",megahertz:"1#{n} MHz|#{n} MHz","astronomical-unit":"1#{n}\u00a0AE|#{n} AE",centimeter:"1#{n} cm|#{n} cm",decimeter:"1#{n} dm|#{n} dm",fathom:"1#{n} fm|#{n} fm",foot:"1#{n} ft|#{n} ft",furlong:"1#{n} fur|#{n} fur",inch:"1#{n} in|#{n} in",kilometer:"1#{n} km|#{n} km","light-year":"1#{n}\u00a0Lj|#{n}\u00a0Lj",meter:"1#{n} m|#{n} m",micrometer:"1#{n} \u00b5m|#{n} \u00b5m",
mile:"1#{n} mi|#{n} mi",millimeter:"1#{n} mm|#{n} mm",nanometer:"1#{n} nm|#{n} nm",nauticalmile:"1#{n}\u00a0sm|#{n}\u00a0sm",parsec:"1#{n} pc|#{n} pc",picometer:"1#{n} pm|#{n} pm",yard:"1#{n} yd|#{n} yd",lux:"1#{n} lx|#{n} lx",carat:"1#{n}\u00a0Kt|#{n}\u00a0Kt",gram:"1#{n} g|#{n} g",kilogram:"1#{n} kg|#{n} kg","metric ton":"1#{n} t|#{n} t",microgram:"1#{n} \u00b5g|#{n} \u00b5g",milligram:"1#{n} mg|#{n} mg",ounce:"1#{n} oz|#{n} oz","ounce-troy":"1#{n}\u00a0oz.tr.|#{n} oz.tr.",pound:"1#{n} lb|#{n} lb",
stone:"1#{n} st|#{n} st","long ton":"1#{n} tn|#{n} tn",gigawatt:"1#{n} GW|#{n} GW",horsepower:"1#{n} PS|#{n} PS",kilowatt:"1#{n} kW|#{n} kW",megawatt:"1#{n} MW|#{n} MW",milliwatt:"1#{n} mW|#{n} mW",watt:"1#{n} W|#{n} W",hectopascal:"1#{n} hPa|#{n} hPa","inch-hg":"1#{n} inHg|#{n} inHg",millibar:"1#{n} mbar|#{n} mbar","millimeter-of-mercury":"1#{n} mm Hg|#{n} mm Hg","pound-per-square-inch":"1#{n} psi|#{n} psi",karat:"1#{n} kt|#{n} kt","kilometer/hour":"1#{n} km/h|#{n} km/h","meters/second":"1#{n} m/s|#{n} m/s",
"miles/hour":"1#{n} mi/h|#{n} mi/h",celsius:"1#{n} \u00b0C|#{n} \u00b0C",fahrenheit:"1#{n}\u00b0F|#{n}\u00b0F",kelvin:"1#{n} K|#{n} K","acre-foot":"1#{n} ac ft|#{n} ac ft",bushel:"1#{n} bu|#{n} bu",centiliter:"1#{n}\u00a0cl|#{n}\u00a0cl","cubic-centimeter":"1#{n} cm\u00b3|#{n} cm\u00b3","cubic foot":"1#{n} ft\u00b3|#{n} ft\u00b3","cubic inch":"1#{n} in\u00b3|#{n} in\u00b3","cubic-kilometer":"1#{n} km\u00b3|#{n} km\u00b3","cubic meter":"1#{n} m\u00b3|#{n} m\u00b3","cubic-mile":"1#{n} mi\u00b3|#{n} mi\u00b3",
"cubic-yard":"1#{n} yd\u00b3|#{n} yd\u00b3",cup:"1#{n}\u00a0Cup|#{n}\u00a0Cups",deciliter:"1#{n}\u00a0dl|#{n}\u00a0dl","us ounce":"1#{n} fl oz|#{n} fl oz",gallon:"1#{n} gal|#{n} gal",hectoliter:"1#{n}\u00a0hl|#{n}\u00a0hl",liter:"1#{n} l|#{n} l",megaliter:"1#{n}\u00a0Ml|#{n}\u00a0Ml",milliliter:"1#{n}\u00a0ml|#{n}\u00a0ml",pint:"1#{n} pt|#{n} pt",quart:"1#{n} qt|#{n} qt",tbsp:"1#{n}\u00a0EL|#{n}\u00a0EL",tsp:"1#{n}\u00a0TL|#{n}\u00a0TL",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",
megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",
knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp","imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_de_DE={unitfmt:{"long":{"g-force":"1#{n}-fache Erdbeschleunigung|#{n}-fache Erdbeschleunigung","meter-per-second-squared":"1#{n} m/s\u00b2|#{n} m/s\u00b2","arc-minute":"1#{n} Winkelminute|#{n} Winkelminuten","arc-second":"1#{n} Winkelsekunde|#{n} Winkelsekunden",degree:"1#{n} Grad|#{n} Grad",radian:"1#{n}\u00a0Radiant|#{n}\u00a0Radianten",acre:"1#{n} Acre|#{n} Acres",hectare:"1#{n} Hektar|#{n} Hektar","square centimeter":"1#{n}\u00a0Quadratzentimeter|#{n}\u00a0Quadratzentimeter",
"square foot":"1#{n} Quadratfu\u00df|#{n} Quadratfu\u00df","square inch":"1#{n}\u00a0Quadratzoll|#{n}\u00a0Quadratzoll","square km":"1#{n} Quadratkilometer|#{n} Quadratkilometer","square meter":"1#{n} Quadratmeter|#{n} Quadratmeter","square mile":"1#{n} Quadratmeile|#{n} Quadratmeilen","square yard":"1#{n}\u00a0Quadratyard|#{n}\u00a0Quadratyards","liter-per-kilometer":"1#{n}\u00a0Liter pro Kilometer|#{n}\u00a0Liter pro Kilometer",mpg:"1#{n}\u00a0Meile pro Gallone|#{n}\u00a0Meilen pro Gallone",bit:"1#{n}\u00a0Bit|#{n}\u00a0Bits",
"byte":"1#{n}\u00a0Byte|#{n}\u00a0Bytes",gigabit:"1#{n}\u00a0Gigabit|#{n}\u00a0Gigabits",gigabyte:"1#{n}\u00a0Gigabyte|#{n}\u00a0Gigabytes",kilobit:"1#{n}\u00a0Kilobit|#{n}\u00a0Kilobits",kilobyte:"1#{n}\u00a0Kilobyte|#{n}\u00a0Kilobytes",megabit:"1#{n}\u00a0Megabit|#{n}\u00a0Megabits",megabyte:"1#{n}\u00a0Megabyte|#{n}\u00a0Megabytes",terabit:"1#{n}\u00a0Terabit|#{n}\u00a0Terabits",terabyte:"1#{n}\u00a0Terabyte|#{n}\u00a0Terabytes",day:"1#{n} Tag|#{n} Tage",hour:"1#{n} Stunde|#{n} Stunden",microsecond:"1#{n} Mikrosekunde|#{n} Mikrosekunden",
millisecond:"1#{n} Millisekunde|#{n} Millisekunden",minute:"1#{n} Minute|#{n} Minuten",month:"1#{n} Monat|#{n} Monate",nanosecond:"1#{n} Nanosekunde|#{n} Nanosekunden",second:"1#{n} Sekunde|#{n} Sekunden",week:"1#{n} Woche|#{n} Wochen",year:"1#{n} Jahr|#{n} Jahre",ampere:"1#{n}\u00a0Ampere|#{n}\u00a0Ampere",milliampere:"1#{n}\u00a0Milliampere|#{n}\u00a0Milliampere",ohm:"1#{n}\u00a0Ohm|#{n}\u00a0Ohm",volt:"1#{n}\u00a0Volt|#{n}\u00a0Volt",calorie:"1#{n} Cal|#{n}\u00a0Kilokalorien",joule:"1#{n}\u00a0Joule|#{n}\u00a0Joule",
kilocalorie:"1#{n}\u00a0Kilokalorie|#{n}\u00a0Kilokalorien",kilojoule:"1#{n}\u00a0Kilojoule|#{n}\u00a0Kilojoule","kilowatt hour":"1#{n}\u00a0Kilowattstunde|#{n}\u00a0Kilowattstunden",gigahertz:"1#{n}\u00a0Gigahertz|#{n}\u00a0Gigahertz",hertz:"1#{n}\u00a0Hertz|#{n}\u00a0Hertz",kilohertz:"1#{n}\u00a0Kilohertz|#{n}\u00a0Kilohertz",megahertz:"1#{n}\u00a0Megahertz|#{n}\u00a0Megahertz","astronomical-unit":"1#{n}\u00a0AE|#{n}\u00a0AE",centimeter:"1#{n} Zentimeter|#{n} Zentimeter",decimeter:"1#{n}\u00a0Dezimeter|#{n}\u00a0Dezimeter",
fathom:"1#{n} Faden|#{n}\u00a0Faden",foot:"1#{n} Fu\u00df|#{n} Fu\u00df",furlong:"1#{n} Furlong|#{n} Furlong",inch:"1#{n} Zoll|#{n} Zoll",kilometer:"1#{n} Kilometer|#{n} Kilometer","light-year":"1#{n} Lichtjahr|#{n} Lichtjahre",meter:"1#{n} Meter|#{n} Meter",micrometer:"1#{n}\u00a0Mikrometer|#{n}\u00a0Mikrometer",mile:"1#{n} Meile|#{n} Meilen",millimeter:"1#{n} Millimeter|#{n} Millimeter",nanometer:"1#{n}\u00a0Nanometer|#{n}\u00a0Nanometer",nauticalmile:"1#{n}\u00a0Seemeile|#{n}\u00a0Seemeilen",parsec:"1#{n}\u00a0Parsec|#{n}\u00a0Parsec",
picometer:"1#{n} Pikometer|#{n} Pikometer",yard:"1#{n} Yard|#{n} Yards",lux:"1#{n}\u00a0Lux|#{n}\u00a0Lux",carat:"1#{n}\u00a0Karat|#{n}\u00a0Karat",gram:"1#{n} Gramm|#{n} Gramm",kilogram:"1#{n} Kilogramm|#{n} Kilogramm","metric ton":"1#{n}\u00a0Tonne|#{n}\u00a0Tonnen",microgram:"1#{n}\u00a0Mikrogramm|#{n}\u00a0Mikrogramm",milligram:"1#{n}\u00a0Milligramm|#{n}\u00a0Milligramm",ounce:"1#{n} Unze|#{n} Unzen","ounce-troy":"1#{n}\u00a0Feinunze|#{n}\u00a0Feinunzen",pound:"1#{n} Pfund|#{n} Pfund",stone:"1#{n}\u00a0Stone|#{n}\u00a0Stones",
"long ton":"1#{n}\u00a0Short Ton|#{n}\u00a0Short Tons",gigawatt:"1#{n}\u00a0Gigawatt|#{n}\u00a0Gigawatt",horsepower:"1#{n} Pferdest\u00e4rke|#{n} Pferdest\u00e4rken",kilowatt:"1#{n} Kilowatt|#{n} Kilowatt",megawatt:"1#{n}\u00a0Megawatt|#{n}\u00a0Megawatt",milliwatt:"1#{n}\u00a0Milliwatt|#{n}\u00a0Milliwatt",watt:"1#{n} Watt|#{n} Watt",hectopascal:"1#{n} Hektopascal|#{n} Hektopascal","inch-hg":"1#{n} Zoll Quecksilbers\u00e4ule|#{n} Zoll Quecksilbers\u00e4ule",millibar:"1#{n} Millibar|#{n} Millibar",
"millimeter-of-mercury":"1#{n}\u00a0Millimeter Quecksilbers\u00e4ule|#{n}\u00a0Millimeter Quecksilbers\u00e4ule","pound-per-square-inch":"1#{n} Pfund pro Quadratzoll|#{n} Pfund pro Quadratzoll",karat:"1#{n}\u00a0Karat|#{n}\u00a0Karat","kilometer/hour":"1#{n} Kilometer pro Stunde|#{n} Kilometer pro Stunde","meters/second":"1#{n} Meter pro Sekunde|#{n} Meter pro Sekunde","miles/hour":"1#{n} Meile pro Stunde|#{n} Meilen pro Stunde",celsius:"1#{n} Grad Celsius|#{n} Grad Celsius",fahrenheit:"1#{n} Grad Fahrenheit|#{n} Grad Fahrenheit",
kelvin:"1#{n} Kelvin|#{n} Kelvin","acre-foot":"1#{n}\u00a0Acre-Foot|#{n}\u00a0Acre-Feet",bushel:"1#{n}\u00a0Bushel|#{n}\u00a0Bushel",centiliter:"1#{n}\u00a0Zentiliter|#{n}\u00a0Zentiliter","cubic-centimeter":"1#{n}\u00a0Kubikzentimeter|#{n}\u00a0Kubikzentimeter","cubic foot":"1#{n}\u00a0Kubikfu\u00df|#{n}\u00a0Kubikfu\u00df","cubic inch":"1#{n}\u00a0Kubikzoll|#{n}\u00a0Kubikzoll","cubic-kilometer":"1#{n} Kubikkilometer|#{n} Kubikkilometer","cubic meter":"1#{n}\u00a0Kubikmeter|#{n}\u00a0Kubikmeter",
"cubic-mile":"1#{n} Kubikmeile|#{n} Kubikmeilen","cubic-yard":"1#{n}\u00a0Kubikyard|#{n}\u00a0Kubikyards",cup:"1#{n}\u00a0Cup|#{n}\u00a0Cups",deciliter:"1#{n}\u00a0Deziliter|#{n}\u00a0Deziliter","us ounce":"1#{n}\u00a0Fl\u00fcssigunze|#{n}\u00a0Fl\u00fcssigunzen",gallon:"1#{n}\u00a0Gallone|#{n}\u00a0Gallonen",hectoliter:"1#{n}\u00a0Hektoliter|#{n}\u00a0Hektoliter",liter:"1#{n} Liter|#{n} Liter",megaliter:"1#{n}\u00a0Megaliter|#{n}\u00a0Megaliter",milliliter:"1#{n}\u00a0Milliliter|#{n}\u00a0Milliliter",
pint:"1#{n}\u00a0Pint|#{n}\u00a0Pints",quart:"1#{n}\u00a0Quart|#{n}\u00a0Quart",tbsp:"1#{n}\u00a0Essl\u00f6ffel|#{n}\u00a0Essl\u00f6ffel",tsp:"1#{n}\u00a0Teel\u00f6ffel|#{n}\u00a0Teel\u00f6ffel",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules",
"watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",
knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second","miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts",
"imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},"short":{"g-force":"1#{n} G|#{n} G","meter-per-second-squared":"1#{n} m/s\u00b2|#{n} m/s\u00b2","arc-minute":"1#{n}\u2032|#{n}\u2032","arc-second":"1#{n}\u2033|#{n}\u2033",degree:"1#{n}\u00b0|#{n}\u00b0",radian:"1#{n} rad|#{n} rad",acre:"1#{n} ac|#{n} ac",hectare:"1#{n} ha|#{n} ha","square centimeter":"1#{n} cm\u00b2|#{n} cm\u00b2","square foot":"1#{n} ft\u00b2|#{n} ft\u00b2","square inch":"1#{n} in\u00b2|#{n} in\u00b2","square km":"1#{n} km\u00b2|#{n} km\u00b2",
"square meter":"1#{n} m\u00b2|#{n} m\u00b2","square mile":"1#{n} mi\u00b2|#{n} mi\u00b2","square yard":"1#{n} yd\u00b2|#{n} yd\u00b2","liter-per-kilometer":"1#{n}\u00a0l/km|#{n}\u00a0l/km",mpg:"1#{n} mpg|#{n} mpg",bit:"1#{n}\u00a0Bit|#{n}\u00a0Bits","byte":"1#{n}\u00a0Byte|#{n}\u00a0Bytes",gigabit:"1#{n}\u00a0Gb|#{n}\u00a0Gb",gigabyte:"1#{n}\u00a0GB|#{n}\u00a0GB",kilobit:"1#{n} kb|#{n} kb",kilobyte:"1#{n} kB|#{n} kB",megabit:"1#{n} Mb|#{n} Mb",megabyte:"1#{n} MB|#{n} MB",terabit:"1#{n} Tb|#{n} Tb",
terabyte:"1#{n} TB|#{n} TB",day:"1#{n} T|#{n} T",hour:"1#{n} Std.|#{n} Std.",microsecond:"1#{n} \u03bcs|#{n} \u03bcs",millisecond:"1#{n} ms|#{n} ms",minute:"1#{n} Min.|#{n} Min.",month:"1#{n} Mon|#{n} Mon",nanosecond:"1#{n} ns|#{n} ns",second:"1#{n} Sek.|#{n} Sek.",week:"1#{n} W|#{n} W",year:"1#{n} J|#{n} J",ampere:"1#{n} A|#{n} A",milliampere:"1#{n} mA|#{n} mA",ohm:"1#{n} \u03a9|#{n} \u03a9",volt:"1#{n} V|#{n} V",calorie:"1#{n}\u00a0kcal|#{n}\u00a0kcal",joule:"1#{n}\u00a0J|#{n}\u00a0J",kilocalorie:"1#{n} kcal|#{n} kcal",
kilojoule:"1#{n} kJ|#{n} kJ","kilowatt hour":"1#{n} kWh|#{n} kWh",gigahertz:"1#{n} GHz|#{n} GHz",hertz:"1#{n} Hz|#{n} Hz",kilohertz:"1#{n} kHz|#{n} kHz",megahertz:"1#{n} MHz|#{n} MHz","astronomical-unit":"1#{n}\u00a0AE|#{n} AE",centimeter:"1#{n} cm|#{n} cm",decimeter:"1#{n} dm|#{n} dm",fathom:"1#{n} fm|#{n} fm",foot:"1#{n} ft|#{n} ft",furlong:"1#{n} fur|#{n} fur",inch:"1#{n} in|#{n} in",kilometer:"1#{n} km|#{n} km","light-year":"1#{n}\u00a0Lj|#{n}\u00a0Lj",meter:"1#{n} m|#{n} m",micrometer:"1#{n} \u00b5m|#{n} \u00b5m",
mile:"1#{n} mi|#{n} mi",millimeter:"1#{n} mm|#{n} mm",nanometer:"1#{n} nm|#{n} nm",nauticalmile:"1#{n}\u00a0sm|#{n}\u00a0sm",parsec:"1#{n} pc|#{n} pc",picometer:"1#{n} pm|#{n} pm",yard:"1#{n} yd|#{n} yd",lux:"1#{n} lx|#{n} lx",carat:"1#{n}\u00a0Kt|#{n}\u00a0Kt",gram:"1#{n} g|#{n} g",kilogram:"1#{n} kg|#{n} kg","metric ton":"1#{n} t|#{n} t",microgram:"1#{n} \u00b5g|#{n} \u00b5g",milligram:"1#{n} mg|#{n} mg",ounce:"1#{n} oz|#{n} oz","ounce-troy":"1#{n}\u00a0oz.tr.|#{n} oz.tr.",pound:"1#{n} lb|#{n} lb",
stone:"1#{n} st|#{n} st","long ton":"1#{n} tn|#{n} tn",gigawatt:"1#{n} GW|#{n} GW",horsepower:"1#{n} PS|#{n} PS",kilowatt:"1#{n} kW|#{n} kW",megawatt:"1#{n} MW|#{n} MW",milliwatt:"1#{n} mW|#{n} mW",watt:"1#{n} W|#{n} W",hectopascal:"1#{n} hPa|#{n} hPa","inch-hg":"1#{n} inHg|#{n} inHg",millibar:"1#{n} mbar|#{n} mbar","millimeter-of-mercury":"1#{n} mm Hg|#{n} mm Hg","pound-per-square-inch":"1#{n} psi|#{n} psi",karat:"1#{n} kt|#{n} kt","kilometer/hour":"1#{n} km/h|#{n} km/h","meters/second":"1#{n} m/s|#{n} m/s",
"miles/hour":"1#{n} mi/h|#{n} mi/h",celsius:"1#{n} \u00b0C|#{n} \u00b0C",fahrenheit:"1#{n}\u00b0F|#{n}\u00b0F",kelvin:"1#{n} K|#{n} K","acre-foot":"1#{n} ac ft|#{n} ac ft",bushel:"1#{n} bu|#{n} bu",centiliter:"1#{n}\u00a0cl|#{n}\u00a0cl","cubic-centimeter":"1#{n} cm\u00b3|#{n} cm\u00b3","cubic foot":"1#{n} ft\u00b3|#{n} ft\u00b3","cubic inch":"1#{n} in\u00b3|#{n} in\u00b3","cubic-kilometer":"1#{n} km\u00b3|#{n} km\u00b3","cubic meter":"1#{n} m\u00b3|#{n} m\u00b3","cubic-mile":"1#{n} mi\u00b3|#{n} mi\u00b3",
"cubic-yard":"1#{n} yd\u00b3|#{n} yd\u00b3",cup:"1#{n}\u00a0Cup|#{n}\u00a0Cups",deciliter:"1#{n}\u00a0dl|#{n}\u00a0dl","us ounce":"1#{n} fl oz|#{n} fl oz",gallon:"1#{n} gal|#{n} gal",hectoliter:"1#{n}\u00a0hl|#{n}\u00a0hl",liter:"1#{n} l|#{n} l",megaliter:"1#{n}\u00a0Ml|#{n}\u00a0Ml",milliliter:"1#{n}\u00a0ml|#{n}\u00a0ml",pint:"1#{n} pt|#{n} pt",quart:"1#{n} qt|#{n} qt",tbsp:"1#{n}\u00a0EL|#{n}\u00a0EL",tsp:"1#{n}\u00a0TL|#{n}\u00a0TL",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",
megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",
knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp","imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_fr={unitfmt:{"long":{"g-force":"1#{n} fois la gravitation terrestre|#{n} fois la gravitation terrestre","meter-per-second-squared":"1#{n} m\u00e8tre par seconde carr\u00e9e|#{n} m\u00e8tres par seconde carr\u00e9e","arc-minute":"1#{n} minute d\u2019arc|#{n} minutes d\u2019arc","arc-second":"1#{n} seconde d\u2019angle|#{n} secondes d\u2019angle",degree:"1#{n} degr\u00e9|#{n} degr\u00e9s",radian:"1#{n} radian|#{n} radians",acre:"1#{n} acre anglo-saxonne|#{n} acres anglo-saxonnes",
hectare:"1#{n} hectare|#{n} hectares","square centimeter":"1#{n} centim\u00e8tre carr\u00e9|#{n} centim\u00e8tres carr\u00e9s","square foot":"1#{n} pied carr\u00e9|#{n} pieds carr\u00e9s","square inch":"1#{n} pouce carr\u00e9|#{n} pouces carr\u00e9s","square km":"1#{n} kilom\u00e8tre carr\u00e9|#{n} kilom\u00e8tres carr\u00e9s","square meter":"1#{n} m\u00e8tre carr\u00e9|#{n} m\u00e8tres carr\u00e9s","square mile":"1#{n} mille anglais carr\u00e9|#{n} milles anglais carr\u00e9s","square yard":"1#{n} yard carr\u00e9|#{n} yards carr\u00e9s",
"liter-per-kilometer":"1#{n} litre au kilom\u00e8tre|#{n} litres au kilom\u00e8tre",mpg:"1#{n} mile par gallon|#{n} miles par gallon",bit:"1#{n} bit|#{n} bits","byte":"1#{n} octet|#{n} octets",gigabit:"1#{n} gigabit|#{n} gigabits",gigabyte:"1#{n} gigaoctet|#{n} gigaoctets",kilobit:"1#{n} kilobit|#{n} kilobits",kilobyte:"1#{n} kilooctet|#{n} kilooctets",megabit:"1#{n} m\u00e9gabit|#{n} m\u00e9gabits",megabyte:"1#{n} m\u00e9gaoctet|#{n} m\u00e9gaoctets",terabit:"1#{n} t\u00e9rabit|#{n} t\u00e9rabits",
terabyte:"1#{n} t\u00e9raoctet|#{n} t\u00e9raoctets",day:"1#{n} jour|#{n} jours",hour:"1#{n} heure|#{n} heures",microsecond:"1#{n} microseconde|#{n} microsecondes",millisecond:"1#{n} milliseconde|#{n} millisecondes",minute:"1#{n} minute|#{n} minutes",month:"1#{n} mois|#{n} mois",nanosecond:"1#{n} nanoseconde|#{n} nanosecondes",second:"1#{n} seconde|#{n} secondes",week:"1#{n} semaine|#{n} semaines",year:"1#{n} an|#{n} ans",ampere:"1#{n}\u00a0amp\u00e8re|#{n} amp\u00e8res",milliampere:"1#{n} milliamp\u00e8re|#{n} milliamp\u00e8res",
ohm:"1#{n} ohm|#{n} ohms",volt:"1#{n} volt|#{n} volts",calorie:"1#{n} grande calorie|#{n} grandes calories",joule:"1#{n} joule|#{n} joules",kilocalorie:"1#{n} kilocalorie|#{n} kilocalories",kilojoule:"1#{n} kilojoule|#{n} kilojoules","kilowatt hour":"1#{n} kilowattheure|#{n} kilowattheures",gigahertz:"1#{n} gigahertz|#{n} gigahertz",hertz:"1#{n} hertz|#{n} hertz",kilohertz:"1#{n} kilohertz|#{n} kilohertz",megahertz:"1#{n} m\u00e9gahertz|#{n} m\u00e9gahertz","astronomical-unit":"1#{n} unit\u00e9 astronomique|#{n} unit\u00e9s astronomiques",
centimeter:"1#{n} centim\u00e8tre|#{n} centim\u00e8tres",decimeter:"1#{n} d\u00e9cim\u00e8tre|#{n} d\u00e9cim\u00e8tres",fathom:"1#{n} fathom|#{n} fathoms",foot:"1#{n} pied|#{n} pieds",furlong:"1#{n} sillon|#{n} sillons",inch:"1#{n} pouce|#{n} pouces",kilometer:"1#{n} kilom\u00e8tre|#{n} kilom\u00e8tres","light-year":"1#{n} ann\u00e9e-lumi\u00e8re|#{n} ann\u00e9es-lumi\u00e8re",meter:"1#{n} m\u00e8tre|#{n} m\u00e8tres",micrometer:"1#{n} microm\u00e8tre|#{n} microm\u00e8tres",mile:"1#{n} mille anglais|#{n} milles anglais",
millimeter:"1#{n} millim\u00e8tre|#{n} millim\u00e8tres",nanometer:"1#{n} nanom\u00e8tre|#{n} nanom\u00e8tres",nauticalmile:"1#{n} mille marin|#{n} milles marins",parsec:"1#{n} parsec|#{n} parsecs",picometer:"1#{n} picom\u00e8tre|#{n} picom\u00e8tres",yard:"1#{n} yard|#{n} yards",lux:"1#{n} lux|#{n} lux",carat:"1#{n} carat|#{n} carats",gram:"1#{n} gramme|#{n} grammes",kilogram:"1#{n} kilogramme|#{n} kilogrammes","metric ton":"1#{n} tonne|#{n} tonnes",microgram:"1#{n} microgramme|#{n} microgrammes",
milligram:"1#{n} milligramme|#{n} milligrammes",ounce:"1#{n} once|#{n} onces","ounce-troy":"1#{n} once troy|#{n} onces troy",pound:"1#{n} livre|#{n} livres",stone:"1#{n} stone|#{n} stone","long ton":"1#{n} tonne courte|#{n} tonnes courtes",gigawatt:"1#{n} gigawatt|#{n} gigawatts",horsepower:"1#{n} cheval-vapeur|#{n} chevaux-vapeur",kilowatt:"1#{n} kilowatt|#{n} kilowatts",megawatt:"1#{n} m\u00e9gawatt|#{n} m\u00e9gawatts",milliwatt:"1#{n} milliwatt|#{n} milliwatts",watt:"1#{n} watt|#{n} watts",hectopascal:"1#{n} hectopascal|#{n} hectopascals",
"inch-hg":"1#{n} pouce de mercure|#{n} pouces de mercure",millibar:"1#{n} millibar|#{n} millibars","millimeter-of-mercury":"1#{n}\u00a0millim\u00e8tre de mercure|#{n}\u00a0millim\u00e8tres de mercure","pound-per-square-inch":"1#{n}\u00a0livre par pouce carr\u00e9|#{n}\u00a0livres par pouce carr\u00e9",karat:"1#{n} carat|#{n} carats","kilometer/hour":"1#{n} kilom\u00e8tre par heure|#{n} kilom\u00e8tres par heure","meters/second":"1#{n} m\u00e8tre par seconde|#{n} m\u00e8tres par seconde","miles/hour":"1#{n} mille anglais par heure|#{n} milles anglais par heure",
celsius:"1#{n} degr\u00e9 Celsius|#{n} degr\u00e9s Celsius",fahrenheit:"1#{n} degr\u00e9 Fahrenheit|#{n} degr\u00e9s Fahrenheit",kelvin:"1#{n}\u00a0kelvin|#{n}\u00a0kelvins","acre-foot":"1#{n} acre-pied|#{n} acres-pieds",bushel:"1#{n} boisseau|#{n} boisseaux",centiliter:"1#{n} centilitre|#{n} centilitres","cubic-centimeter":"1#{n} centim\u00e8tre cube|#{n} centim\u00e8tres cubes","cubic foot":"1#{n} pied cube|#{n} pieds cubes","cubic inch":"1#{n} pouce cube|#{n} pouces cubes","cubic-kilometer":"1#{n} kilom\u00e8tre cube|#{n} kilom\u00e8tres cubes",
"cubic meter":"1#{n} m\u00e8tre cube|#{n} m\u00e8tres cubes","cubic-mile":"1#{n} mille anglais cube|#{n} milles anglais cubes","cubic-yard":"1#{n} yard cube|#{n} yards cubes",cup:"1#{n} tasse|#{n} tasses",deciliter:"1#{n} d\u00e9cilitre|#{n} d\u00e9cilitres","us ounce":"1#{n} once liquide|#{n} onces liquides",gallon:"1#{n} gallon|#{n} gallons",hectoliter:"1#{n} hectolitre|#{n} hectolitres",liter:"1#{n} litre|#{n} litres",megaliter:"1#{n} m\u00e9galitre|#{n} m\u00e9galitres",milliliter:"1#{n} millilitre|#{n} millilitres",
pint:"1#{n} pinte|#{n} pintes",quart:"1#{n} quart|#{n} quarts",tbsp:"1#{n} cuill\u00e8re \u00e0 soupe|#{n} cuill\u00e8res \u00e0 soupe",tsp:"1#{n} cuill\u00e8re \u00e0 caf\u00e9|#{n} cuill\u00e8res \u00e0 caf\u00e9",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules",
"watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",
knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second","miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts",
"imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},"short":{"g-force":"1#{n} G|#{n} G","meter-per-second-squared":"1#{n} m/s\u00b2|#{n} m/s\u00b2","arc-minute":"1#{n}\u2032|#{n}\u2032","arc-second":"1#{n}\u2033|#{n}\u2033",degree:"1#{n}\u00b0|#{n}\u00b0",radian:"1#{n} rad|#{n} rad",acre:"1#{n} ac|#{n} ac",hectare:"1#{n} ha|#{n} ha","square centimeter":"1#{n} cm\u00b2|#{n} cm\u00b2","square foot":"1#{n} pi\u00b2|#{n} pi\u00b2","square inch":"1#{n} po\u00b2|#{n} po\u00b2","square km":"1#{n} km\u00b2|#{n} km\u00b2",
"square meter":"1#{n} m\u00b2|#{n} m\u00b2","square mile":"1#{n} mi\u00b2|#{n} mi\u00b2","square yard":"1#{n} yd\u00b2|#{n} yd\u00b2","liter-per-kilometer":"1#{n} L/km|#{n} L/km",mpg:"1#{n} mi/gal|#{n} mi/gal",bit:"1#{n} bit|#{n} bit","byte":"1#{n} octet|#{n} octet",gigabit:"1#{n} Gb|#{n} Gb",gigabyte:"1#{n} Go|#{n} Go",kilobit:"1#{n} kb|#{n} kb",kilobyte:"1#{n} ko|#{n} ko",megabit:"1#{n} Mb|#{n} Mb",megabyte:"1#{n} Mo|#{n} Mo",terabit:"1#{n} Tb|#{n} Tb",terabyte:"1#{n} To|#{n} To",day:"1#{n} j|#{n} j",
hour:"1#{n} h|#{n} h",microsecond:"1#{n} \u03bcs|#{n} \u03bcs",millisecond:"1#{n} ms|#{n} ms",minute:"1#{n} min|#{n} min",month:"1#{n} m|#{n} m",nanosecond:"1#{n} ns|#{n} ns",second:"1#{n} s|#{n} s",week:"1#{n} sem.|#{n} sem.",year:"1#{n} an|#{n} ans",ampere:"1#{n} A|#{n} A",milliampere:"1#{n} mA|#{n} mA",ohm:"1#{n} \u03a9|#{n} \u03a9",volt:"1#{n} V|#{n} V",calorie:"1#{n} Cal|#{n} Cal",joule:"1#{n} J|#{n} J",kilocalorie:"1#{n} kcal|#{n} kcal",kilojoule:"1#{n} kJ|#{n} kJ","kilowatt hour":"1#{n} kWh|#{n} kWh",
gigahertz:"1#{n} GHz|#{n} GHz",hertz:"1#{n} Hz|#{n} Hz",kilohertz:"1#{n} kHz|#{n} kHz",megahertz:"1#{n} MHz|#{n} MHz","astronomical-unit":"1#{n} ua|#{n} ua",centimeter:"1#{n} cm|#{n} cm",decimeter:"1#{n} dm|#{n} dm",fathom:"1#{n} fat|#{n} fat",foot:"1#{n} ft|#{n} ft",furlong:"1#{n} sil|#{n} sil",inch:"1#{n} po|#{n} po",kilometer:"1#{n} km|#{n} km","light-year":"1#{n} a.l.|#{n} a.l.",meter:"1#{n} m|#{n} m",micrometer:"1#{n} \u00b5m|#{n} \u00b5m",mile:"1#{n} mi|#{n} mi",millimeter:"1#{n} mm|#{n} mm",
nanometer:"1#{n} nm|#{n} nm",nauticalmile:"1#{n} nmi|#{n} nmi",parsec:"1#{n} pc|#{n} pc",picometer:"1#{n} pm|#{n} pm",yard:"1#{n} yd|#{n} yd",lux:"1#{n} lx|#{n} lx",carat:"1#{n} ct|#{n} ct",gram:"1#{n} g|#{n} g",kilogram:"1#{n} kg|#{n} kg","metric ton":"1#{n} t|#{n} t",microgram:"1#{n} \u00b5g|#{n} \u00b5g",milligram:"1#{n} mg|#{n} mg",ounce:"1#{n} oz|#{n} oz","ounce-troy":"1#{n} oz t|#{n} oz t",pound:"1#{n} lb|#{n} lb",stone:"1#{n} st|#{n} st","long ton":"1#{n} sh tn|#{n} sh tn",gigawatt:"1#{n} GW|#{n} GW",
horsepower:"1#{n} ch|#{n} ch",kilowatt:"1#{n} kW|#{n} kW",megawatt:"1#{n} MW|#{n} MW",milliwatt:"1#{n} mW|#{n} mW",watt:"1#{n} W|#{n} W",hectopascal:"1#{n} hPa|#{n} hPa","inch-hg":"1#{n} inHg|#{n} inHg",millibar:"1#{n} mbar|#{n} mbar","millimeter-of-mercury":"1#{n} mm Hg|#{n} mm Hg","pound-per-square-inch":"1#{n} lb/po\u00b2|#{n} lb/po\u00b2",karat:"1#{n} ct|#{n} ct","kilometer/hour":"1#{n} km/h|#{n} km/h","meters/second":"1#{n} m/s|#{n} m/s","miles/hour":"1#{n} mi/h|#{n} mi/h",celsius:"1#{n} \u00b0C|#{n} \u00b0C",
fahrenheit:"1#{n} \u00b0F|#{n} \u00b0F",kelvin:"1#{n} K|#{n} K","acre-foot":"1#{n} ac pi|#{n} ac pi",bushel:"1#{n} bu|#{n} bu",centiliter:"1#{n} cl|#{n} cl","cubic-centimeter":"1#{n} cm\u00b3|#{n} cm\u00b3","cubic foot":"1#{n} pi\u00b3|#{n} pi\u00b3","cubic inch":"1#{n} po\u00b3|#{n} po\u00b3","cubic-kilometer":"1#{n} km\u00b3|#{n} km\u00b3","cubic meter":"1#{n} m\u00b3|#{n} m\u00b3","cubic-mile":"1#{n} mi\u00b3|#{n} mi\u00b3","cubic-yard":"1#{n} yd\u00b3|#{n} yd\u00b3",cup:"1#{n} tasse|#{n} tasses",
deciliter:"1#{n} dl|#{n} dl","us ounce":"1#{n} fl oz|#{n} fl oz",gallon:"1#{n} gal|#{n} gal",hectoliter:"1#{n} hl|#{n} hl",liter:"1#{n} L|#{n} L",megaliter:"1#{n} Ml|#{n} Ml",milliliter:"1#{n} ml|#{n} ml",pint:"1#{n} pte|#{n} pte",quart:"1#{n} qt|#{n} qt",tbsp:"1#{n} c. \u00e0 s.|#{n} c. \u00e0 s.",tsp:"1#{n} c. \u00e0 c.|#{n} c. \u00e0 c.",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",
BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",
decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp","imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_fr_CA={unitfmt:{"long":{"g-force":"1#{n} fois la gravitation terrestre|#{n} fois la gravitation terrestre","meter-per-second-squared":"1#{n} m\u00e8tre par seconde carr\u00e9e|#{n} m\u00e8tres par seconde carr\u00e9e","arc-minute":"1#{n} minute d\u2019angle|#{n} minutes d\u2019angle","arc-second":"1#{n} seconde d\u2019angle|#{n} secondes d\u2019angle",degree:"1#{n} degr\u00e9|#{n} degr\u00e9s",radian:"1#{n} radian|#{n} radians",acre:"1#{n} acre|#{n} acres",hectare:"1#{n} hectare|#{n} hectares",
"square centimeter":"1#{n} centim\u00e8tre carr\u00e9|#{n} centim\u00e8tres carr\u00e9s","square foot":"1#{n} pied carr\u00e9|#{n} pieds carr\u00e9s","square inch":"1#{n} pouce carr\u00e9|#{n} pouces carr\u00e9s","square km":"1#{n} kilom\u00e8tre carr\u00e9|#{n} kilom\u00e8tres carr\u00e9s","square meter":"1#{n} m\u00e8tre carr\u00e9|#{n} m\u00e8tres carr\u00e9s","square mile":"1#{n} mille carr\u00e9|#{n} milles carr\u00e9s","square yard":"1#{n} verge carr\u00e9e|#{n} verges carr\u00e9es","liter-per-kilometer":"1#{n} litre au kilom\u00e8tre|#{n} litres au kilom\u00e8tre",
mpg:"1#{n} mille au gallon|#{n} milles au gallon",bit:"1#{n} bit|#{n} bits","byte":"1#{n} octet|#{n} octets",gigabit:"1#{n} gigabit|#{n} gigabits",gigabyte:"1#{n} gigaoctet|#{n} gigaoctets",kilobit:"1#{n} kilobit|#{n} kilobits",kilobyte:"1#{n} kilooctet|#{n} kilooctets",megabit:"1#{n} m\u00e9gabit|#{n} m\u00e9gabits",megabyte:"1#{n} m\u00e9gaoctet|#{n} m\u00e9gaoctets",terabit:"1#{n} t\u00e9rabit|#{n} t\u00e9rabits",terabyte:"1#{n} t\u00e9raoctet|#{n} t\u00e9raoctets",day:"1#{n} jour|#{n} jours",
hour:"1#{n} heure|#{n} heures",microsecond:"1#{n} microseconde|#{n} microsecondes",millisecond:"1#{n} milliseconde|#{n} millisecondes",minute:"1#{n} minute|#{n} minutes",month:"1#{n} mois|#{n} mois",nanosecond:"1#{n} nanoseconde|#{n} nanosecondes",second:"1#{n} seconde|#{n} secondes",week:"1#{n} semaine|#{n} semaines",year:"1#{n} an|#{n} ans",ampere:"1#{n}\u00a0amp\u00e8re|#{n} amp\u00e8res",milliampere:"1#{n} milliamp\u00e8re|#{n} milliamp\u00e8res",ohm:"1#{n} ohm|#{n} ohms",volt:"1#{n} volt|#{n} volts",
calorie:"1#{n} kilocalorie|#{n} kilocalories",joule:"1#{n} joule|#{n} joules",kilocalorie:"1#{n} kilocalorie|#{n} kilocalories",kilojoule:"1#{n} kilojoule|#{n} kilojoules","kilowatt hour":"1#{n} kilowattheure|#{n} kilowattheures",gigahertz:"1#{n} gigahertz|#{n} gigahertz",hertz:"1#{n} hertz|#{n} hertz",kilohertz:"1#{n} kilohertz|#{n} kilohertz",megahertz:"1#{n} m\u00e9gahertz|#{n} m\u00e9gahertz","astronomical-unit":"1#{n} unit\u00e9 astronomique|#{n} unit\u00e9s astronomiques",centimeter:"1#{n} centim\u00e8tre|#{n} centim\u00e8tres",
decimeter:"1#{n} d\u00e9cim\u00e8tre|#{n} d\u00e9cim\u00e8tres",fathom:"1#{n} fathom|#{n} fathoms",foot:"1#{n} pied|#{n} pieds",furlong:"1#{n} sillon|#{n} sillons",inch:"1#{n} pouce|#{n} pouces",kilometer:"1#{n} kilom\u00e8tre|#{n} kilom\u00e8tres","light-year":"1#{n} ann\u00e9e-lumi\u00e8re|#{n} ann\u00e9es-lumi\u00e8re",meter:"1#{n} m\u00e8tre|#{n} m\u00e8tres",micrometer:"1#{n} microm\u00e8tre|#{n} microm\u00e8tres",mile:"1#{n} mille|#{n} milles",millimeter:"1#{n} millim\u00e8tre|#{n} millim\u00e8tres",
nanometer:"1#{n} nanom\u00e8tre|#{n} nanom\u00e8tres",nauticalmile:"1#{n} mille marin|#{n} milles marins",parsec:"1#{n} parsec|#{n} parsecs",picometer:"1#{n} picom\u00e8tre|#{n} picom\u00e8tres",yard:"1#{n}\u00a0verge|#{n} verges",lux:"1#{n} lux|#{n} lux",carat:"1#{n} carat|#{n} carats",gram:"1#{n} gramme|#{n} grammes",kilogram:"1#{n} kilogramme|#{n} kilogrammes","metric ton":"1#{n} tonne|#{n} tonnes",microgram:"1#{n} microgramme|#{n} microgrammes",milligram:"1#{n} milligramme|#{n} milligrammes",
ounce:"1#{n} once|#{n} onces","ounce-troy":"1#{n} once troy|#{n} onces troy",pound:"1#{n} livre|#{n} livres",stone:"1#{n} stone|#{n} stone","long ton":"1#{n} tonne courte|#{n} tonnes courtes",gigawatt:"1#{n} gigawatt|#{n} gigawatts",horsepower:"1#{n} cheval-vapeur|#{n} chevaux-vapeur",kilowatt:"1#{n} kilowatt|#{n} kilowatts",megawatt:"1#{n} m\u00e9gawatt|#{n} m\u00e9gawatts",milliwatt:"1#{n} milliwatt|#{n} milliwatts",watt:"1#{n} watt|#{n} watts",hectopascal:"1#{n} hectopascal|#{n} hectopascals",
"inch-hg":"1#{n} pouce de mercure|#{n} pouces de mercure",millibar:"1#{n} millibar|#{n} millibars","millimeter-of-mercury":"1#{n}\u00a0millim\u00e8tre de mercure|#{n}\u00a0millim\u00e8tres de mercure","pound-per-square-inch":"1#{n}\u00a0livre par pouce carr\u00e9|#{n}\u00a0livres par pouce carr\u00e9",karat:"1#{n} carat|#{n} carats","kilometer/hour":"1#{n} kilom\u00e8tre par heure|#{n} kilom\u00e8tres par heure","meters/second":"1#{n} m\u00e8tre par seconde|#{n} m\u00e8tres par seconde","miles/hour":"1#{n} mille par heure|#{n} milles par heure",
celsius:"1#{n} degr\u00e9 Celsius|#{n} degr\u00e9s Celsius",fahrenheit:"1#{n} degr\u00e9 Fahrenheit|#{n} degr\u00e9s Fahrenheit",kelvin:"1#{n}\u00a0kelvin|#{n}\u00a0kelvins","acre-foot":"1#{n} acre-pied|#{n} acres-pieds",bushel:"1#{n} boisseau|#{n} boisseaux",centiliter:"1#{n} centilitre|#{n} centilitres","cubic-centimeter":"1#{n} centim\u00e8tre cube|#{n} centim\u00e8tres cubes","cubic foot":"1#{n} pied cube|#{n} pieds cubes","cubic inch":"1#{n} pouce cube|#{n} pouces cubes","cubic-kilometer":"1#{n} kilom\u00e8tre cube|#{n} kilom\u00e8tres cubes",
"cubic meter":"1#{n} m\u00e8tre cube|#{n} m\u00e8tres cubes","cubic-mile":"1#{n} mille cube|#{n} milles cubes","cubic-yard":"1#{n}\u00a0verge cube|#{n} verges cubes",cup:"1#{n} tasse|#{n} tasses",deciliter:"1#{n} d\u00e9cilitre|#{n} d\u00e9cilitres","us ounce":"1#{n} once liquide|#{n} onces liquides",gallon:"1#{n} gallon|#{n} gallons",hectoliter:"1#{n} hectolitre|#{n} hectolitres",liter:"1#{n} litre|#{n} litres",megaliter:"1#{n} m\u00e9galitre|#{n} m\u00e9galitres",milliliter:"1#{n} millilitre|#{n} millilitres",
pint:"1#{n} chopine|#{n} chopines",quart:"1#{n} pinte|#{n} pintes",tbsp:"1#{n} cuill\u00e8re \u00e0 soupe|#{n} cuill\u00e8res \u00e0 soupe",tsp:"1#{n} cuill\u00e8re \u00e0 th\u00e9|#{n} cuill\u00e8res \u00e0 th\u00e9",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",
millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons",
"feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second","miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints",
"imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},"short":{"g-force":"1#{n} G|#{n} G","meter-per-second-squared":"1#{n} m/s\u00b2|#{n} m/s\u00b2","arc-minute":"1#{n}\u2032|#{n}\u2032","arc-second":"1#{n}\u2033|#{n}\u2033",degree:"1#{n}\u00b0|#{n}\u00b0",radian:"1#{n} rad|#{n} rad",acre:"1#{n} ac|#{n} ac",hectare:"1#{n} ha|#{n} ha","square centimeter":"1#{n} cm\u00b2|#{n} cm\u00b2","square foot":"1#{n}\u00a0pi\u00b2|#{n} pi\u00b2",
"square inch":"1#{n} po\u00b2|#{n} po\u00b2","square km":"1#{n} km\u00b2|#{n} km\u00b2","square meter":"1#{n} m\u00b2|#{n} m\u00b2","square mile":"1#{n} mi\u00b2|#{n} mi\u00b2","square yard":"1#{n} vg\u00b2|#{n} vg\u00b2","liter-per-kilometer":"1#{n} L/km|#{n} L/km",mpg:"1#{n} mi/gal|#{n} mi/gal",bit:"1#{n} bit|#{n} bit","byte":"1#{n} octet|#{n} octet",gigabit:"1#{n} Gb|#{n} Gb",gigabyte:"1#{n} Go|#{n} Go",kilobit:"1#{n} kb|#{n} kb",kilobyte:"1#{n} ko|#{n} ko",megabit:"1#{n} Mb|#{n} Mb",megabyte:"1#{n} Mo|#{n} Mo",
terabit:"1#{n} Tb|#{n} Tb",terabyte:"1#{n} To|#{n} To",day:"1#{n} j|#{n} j",hour:"1#{n} h|#{n} h",microsecond:"1#{n} \u03bcs|#{n} \u03bcs",millisecond:"1#{n} ms|#{n} ms",minute:"1#{n} min|#{n} min",month:"1#{n} m.|#{n} m.",nanosecond:"1#{n} ns|#{n} ns",second:"1#{n} s|#{n} s",week:"1#{n} sem.|#{n} sem.",year:"1#{n} an|#{n} ans",ampere:"1#{n} A|#{n} A",milliampere:"1#{n} mA|#{n} mA",ohm:"1#{n} \u03a9|#{n} \u03a9",volt:"1#{n} V|#{n} V",calorie:"1#{n} kcal|#{n} kcal",joule:"1#{n} J|#{n} J",kilocalorie:"1#{n} kcal|#{n} kcal",
kilojoule:"1#{n} kJ|#{n} kJ","kilowatt hour":"1#{n} kWh|#{n} kWh",gigahertz:"1#{n} GHz|#{n} GHz",hertz:"1#{n} Hz|#{n} Hz",kilohertz:"1#{n} kHz|#{n} kHz",megahertz:"1#{n} MHz|#{n} MHz","astronomical-unit":"1#{n}\u00a0ua|#{n} ua",centimeter:"1#{n} cm|#{n} cm",decimeter:"1#{n} dm|#{n} dm",fathom:"1#{n} fat|#{n} fat",foot:"1#{n}\u00a0pi|#{n} pi",furlong:"1#{n} sil|#{n} sil",inch:"1#{n} po|#{n} po",kilometer:"1#{n} km|#{n} km","light-year":"1#{n} al|#{n} al",meter:"1#{n} m|#{n} m",micrometer:"1#{n} \u00b5m|#{n} \u00b5m",
mile:"1#{n} mi|#{n} mi",millimeter:"1#{n} mm|#{n} mm",nanometer:"1#{n} nm|#{n} nm",nauticalmile:"1#{n}\u00a0NM|#{n} NM",parsec:"1#{n} pc|#{n} pc",picometer:"1#{n} pm|#{n} pm",yard:"1#{n}\u00a0vg|#{n} vg",lux:"1#{n} lx|#{n} lx",carat:"1#{n} ct|#{n} ct",gram:"1#{n} g|#{n} g",kilogram:"1#{n} kg|#{n} kg","metric ton":"1#{n} t|#{n} t",microgram:"1#{n} \u00b5g|#{n} \u00b5g",milligram:"1#{n} mg|#{n} mg",ounce:"1#{n} oz|#{n} oz","ounce-troy":"1#{n} oz t|#{n} oz t",pound:"1#{n} lb|#{n} lb",stone:"1#{n} st|#{n} st",
"long ton":"1#{n} tc|#{n} tc",gigawatt:"1#{n} GW|#{n} GW",horsepower:"1#{n} ch|#{n} ch",kilowatt:"1#{n} kW|#{n} kW",megawatt:"1#{n} MW|#{n} MW",milliwatt:"1#{n} mW|#{n} mW",watt:"1#{n} W|#{n} W",hectopascal:"1#{n} hPa|#{n} hPa","inch-hg":"1#{n}\u00a0po Hg|#{n}\u00a0po Hg",millibar:"1#{n} mbar|#{n} mbar","millimeter-of-mercury":"1#{n} mm Hg|#{n} mm Hg","pound-per-square-inch":"1#{n} psi|#{n} psi",karat:"1#{n} ct|#{n} ct","kilometer/hour":"1#{n} km/h|#{n} km/h","meters/second":"1#{n} m/s|#{n} m/s",
"miles/hour":"1#{n} mi/h|#{n} mi/h",celsius:"1#{n} \u00b0C|#{n} \u00b0C",fahrenheit:"1#{n} \u00b0F|#{n} \u00b0F",kelvin:"1#{n} K|#{n} K","acre-foot":"1#{n}\u00a0ac-pi|#{n} ac-pi",bushel:"1#{n} bu|#{n} bu",centiliter:"1#{n} cL|#{n} cL","cubic-centimeter":"1#{n} cm\u00b3|#{n} cm\u00b3","cubic foot":"1#{n}\u00a0pi\u00b3|#{n}\u00a0pi\u00b3","cubic inch":"1#{n} po\u00b3|#{n} po\u00b3","cubic-kilometer":"1#{n} km\u00b3|#{n} km\u00b3","cubic meter":"1#{n} m\u00b3|#{n} m\u00b3","cubic-mile":"1#{n} mi\u00b3|#{n} mi\u00b3",
"cubic-yard":"1#{n}\u00a0vg\u00b3|#{n} vg\u00b3",cup:"1#{n} tasse|#{n} tasses",deciliter:"1#{n} dL|#{n} dL","us ounce":"1#{n}\u00a0oz liq.|#{n} oz liq.",gallon:"1#{n} gal|#{n} gal",hectoliter:"1#{n} hL|#{n} hL",liter:"1#{n} L|#{n} L",megaliter:"1#{n} ML|#{n} ML",milliliter:"1#{n} mL|#{n} mL",pint:"1#{n} chop|#{n} chop",quart:"1#{n}\u00a0pte|#{n} pte",tbsp:"1#{n} c. \u00e0 s.|#{n} c. \u00e0 s.",tsp:"1#{n}\u00a0c. \u00e0 t.|#{n} c. \u00e0 t.",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",
megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",
knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp","imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_fr_FR={unitfmt:{"long":{"g-force":"1#{n} fois la gravitation terrestre|#{n} fois la gravitation terrestre","meter-per-second-squared":"1#{n} m\u00e8tre par seconde carr\u00e9e|#{n} m\u00e8tres par seconde carr\u00e9e","arc-minute":"1#{n} minute d\u2019arc|#{n} minutes d\u2019arc","arc-second":"1#{n} seconde d\u2019angle|#{n} secondes d\u2019angle",degree:"1#{n} degr\u00e9|#{n} degr\u00e9s",radian:"1#{n} radian|#{n} radians",acre:"1#{n} acre anglo-saxonne|#{n} acres anglo-saxonnes",
hectare:"1#{n} hectare|#{n} hectares","square centimeter":"1#{n} centim\u00e8tre carr\u00e9|#{n} centim\u00e8tres carr\u00e9s","square foot":"1#{n} pied carr\u00e9|#{n} pieds carr\u00e9s","square inch":"1#{n} pouce carr\u00e9|#{n} pouces carr\u00e9s","square km":"1#{n} kilom\u00e8tre carr\u00e9|#{n} kilom\u00e8tres carr\u00e9s","square meter":"1#{n} m\u00e8tre carr\u00e9|#{n} m\u00e8tres carr\u00e9s","square mile":"1#{n} mille anglais carr\u00e9|#{n} milles anglais carr\u00e9s","square yard":"1#{n} yard carr\u00e9|#{n} yards carr\u00e9s",
"liter-per-kilometer":"1#{n} litre au kilom\u00e8tre|#{n} litres au kilom\u00e8tre",mpg:"1#{n} mile par gallon|#{n} miles par gallon",bit:"1#{n} bit|#{n} bits","byte":"1#{n} octet|#{n} octets",gigabit:"1#{n} gigabit|#{n} gigabits",gigabyte:"1#{n} gigaoctet|#{n} gigaoctets",kilobit:"1#{n} kilobit|#{n} kilobits",kilobyte:"1#{n} kilooctet|#{n} kilooctets",megabit:"1#{n} m\u00e9gabit|#{n} m\u00e9gabits",megabyte:"1#{n} m\u00e9gaoctet|#{n} m\u00e9gaoctets",terabit:"1#{n} t\u00e9rabit|#{n} t\u00e9rabits",
terabyte:"1#{n} t\u00e9raoctet|#{n} t\u00e9raoctets",day:"1#{n} jour|#{n} jours",hour:"1#{n} heure|#{n} heures",microsecond:"1#{n} microseconde|#{n} microsecondes",millisecond:"1#{n} milliseconde|#{n} millisecondes",minute:"1#{n} minute|#{n} minutes",month:"1#{n} mois|#{n} mois",nanosecond:"1#{n} nanoseconde|#{n} nanosecondes",second:"1#{n} seconde|#{n} secondes",week:"1#{n} semaine|#{n} semaines",year:"1#{n} an|#{n} ans",ampere:"1#{n}\u00a0amp\u00e8re|#{n} amp\u00e8res",milliampere:"1#{n} milliamp\u00e8re|#{n} milliamp\u00e8res",
ohm:"1#{n} ohm|#{n} ohms",volt:"1#{n} volt|#{n} volts",calorie:"1#{n} grande calorie|#{n} grandes calories",joule:"1#{n} joule|#{n} joules",kilocalorie:"1#{n} kilocalorie|#{n} kilocalories",kilojoule:"1#{n} kilojoule|#{n} kilojoules","kilowatt hour":"1#{n} kilowattheure|#{n} kilowattheures",gigahertz:"1#{n} gigahertz|#{n} gigahertz",hertz:"1#{n} hertz|#{n} hertz",kilohertz:"1#{n} kilohertz|#{n} kilohertz",megahertz:"1#{n} m\u00e9gahertz|#{n} m\u00e9gahertz","astronomical-unit":"1#{n} unit\u00e9 astronomique|#{n} unit\u00e9s astronomiques",
centimeter:"1#{n} centim\u00e8tre|#{n} centim\u00e8tres",decimeter:"1#{n} d\u00e9cim\u00e8tre|#{n} d\u00e9cim\u00e8tres",fathom:"1#{n} fathom|#{n} fathoms",foot:"1#{n} pied|#{n} pieds",furlong:"1#{n} sillon|#{n} sillons",inch:"1#{n} pouce|#{n} pouces",kilometer:"1#{n} kilom\u00e8tre|#{n} kilom\u00e8tres","light-year":"1#{n} ann\u00e9e-lumi\u00e8re|#{n} ann\u00e9es-lumi\u00e8re",meter:"1#{n} m\u00e8tre|#{n} m\u00e8tres",micrometer:"1#{n} microm\u00e8tre|#{n} microm\u00e8tres",mile:"1#{n} mille anglais|#{n} milles anglais",
millimeter:"1#{n} millim\u00e8tre|#{n} millim\u00e8tres",nanometer:"1#{n} nanom\u00e8tre|#{n} nanom\u00e8tres",nauticalmile:"1#{n} mille marin|#{n} milles marins",parsec:"1#{n} parsec|#{n} parsecs",picometer:"1#{n} picom\u00e8tre|#{n} picom\u00e8tres",yard:"1#{n} yard|#{n} yards",lux:"1#{n} lux|#{n} lux",carat:"1#{n} carat|#{n} carats",gram:"1#{n} gramme|#{n} grammes",kilogram:"1#{n} kilogramme|#{n} kilogrammes","metric ton":"1#{n} tonne|#{n} tonnes",microgram:"1#{n} microgramme|#{n} microgrammes",
milligram:"1#{n} milligramme|#{n} milligrammes",ounce:"1#{n} once|#{n} onces","ounce-troy":"1#{n} once troy|#{n} onces troy",pound:"1#{n} livre|#{n} livres",stone:"1#{n} stone|#{n} stone","long ton":"1#{n} tonne courte|#{n} tonnes courtes",gigawatt:"1#{n} gigawatt|#{n} gigawatts",horsepower:"1#{n} cheval-vapeur|#{n} chevaux-vapeur",kilowatt:"1#{n} kilowatt|#{n} kilowatts",megawatt:"1#{n} m\u00e9gawatt|#{n} m\u00e9gawatts",milliwatt:"1#{n} milliwatt|#{n} milliwatts",watt:"1#{n} watt|#{n} watts",hectopascal:"1#{n} hectopascal|#{n} hectopascals",
"inch-hg":"1#{n} pouce de mercure|#{n} pouces de mercure",millibar:"1#{n} millibar|#{n} millibars","millimeter-of-mercury":"1#{n}\u00a0millim\u00e8tre de mercure|#{n}\u00a0millim\u00e8tres de mercure","pound-per-square-inch":"1#{n}\u00a0livre par pouce carr\u00e9|#{n}\u00a0livres par pouce carr\u00e9",karat:"1#{n} carat|#{n} carats","kilometer/hour":"1#{n} kilom\u00e8tre par heure|#{n} kilom\u00e8tres par heure","meters/second":"1#{n} m\u00e8tre par seconde|#{n} m\u00e8tres par seconde","miles/hour":"1#{n} mille anglais par heure|#{n} milles anglais par heure",
celsius:"1#{n} degr\u00e9 Celsius|#{n} degr\u00e9s Celsius",fahrenheit:"1#{n} degr\u00e9 Fahrenheit|#{n} degr\u00e9s Fahrenheit",kelvin:"1#{n}\u00a0kelvin|#{n}\u00a0kelvins","acre-foot":"1#{n} acre-pied|#{n} acres-pieds",bushel:"1#{n} boisseau|#{n} boisseaux",centiliter:"1#{n} centilitre|#{n} centilitres","cubic-centimeter":"1#{n} centim\u00e8tre cube|#{n} centim\u00e8tres cubes","cubic foot":"1#{n} pied cube|#{n} pieds cubes","cubic inch":"1#{n} pouce cube|#{n} pouces cubes","cubic-kilometer":"1#{n} kilom\u00e8tre cube|#{n} kilom\u00e8tres cubes",
"cubic meter":"1#{n} m\u00e8tre cube|#{n} m\u00e8tres cubes","cubic-mile":"1#{n} mille anglais cube|#{n} milles anglais cubes","cubic-yard":"1#{n} yard cube|#{n} yards cubes",cup:"1#{n} tasse|#{n} tasses",deciliter:"1#{n} d\u00e9cilitre|#{n} d\u00e9cilitres","us ounce":"1#{n} once liquide|#{n} onces liquides",gallon:"1#{n} gallon|#{n} gallons",hectoliter:"1#{n} hectolitre|#{n} hectolitres",liter:"1#{n} litre|#{n} litres",megaliter:"1#{n} m\u00e9galitre|#{n} m\u00e9galitres",milliliter:"1#{n} millilitre|#{n} millilitres",
pint:"1#{n} pinte|#{n} pintes",quart:"1#{n} quart|#{n} quarts",tbsp:"1#{n} cuill\u00e8re \u00e0 soupe|#{n} cuill\u00e8res \u00e0 soupe",tsp:"1#{n} cuill\u00e8re \u00e0 caf\u00e9|#{n} cuill\u00e8res \u00e0 caf\u00e9",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules",
"watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",
knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second","miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts",
"imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},"short":{"g-force":"1#{n} G|#{n} G","meter-per-second-squared":"1#{n} m/s\u00b2|#{n} m/s\u00b2","arc-minute":"1#{n}\u2032|#{n}\u2032","arc-second":"1#{n}\u2033|#{n}\u2033",degree:"1#{n}\u00b0|#{n}\u00b0",radian:"1#{n} rad|#{n} rad",acre:"1#{n} ac|#{n} ac",hectare:"1#{n} ha|#{n} ha","square centimeter":"1#{n} cm\u00b2|#{n} cm\u00b2","square foot":"1#{n} pi\u00b2|#{n} pi\u00b2","square inch":"1#{n} po\u00b2|#{n} po\u00b2","square km":"1#{n} km\u00b2|#{n} km\u00b2",
"square meter":"1#{n} m\u00b2|#{n} m\u00b2","square mile":"1#{n} mi\u00b2|#{n} mi\u00b2","square yard":"1#{n} yd\u00b2|#{n} yd\u00b2","liter-per-kilometer":"1#{n} L/km|#{n} L/km",mpg:"1#{n} mi/gal|#{n} mi/gal",bit:"1#{n} bit|#{n} bit","byte":"1#{n} octet|#{n} octet",gigabit:"1#{n} Gb|#{n} Gb",gigabyte:"1#{n} Go|#{n} Go",kilobit:"1#{n} kb|#{n} kb",kilobyte:"1#{n} ko|#{n} ko",megabit:"1#{n} Mb|#{n} Mb",megabyte:"1#{n} Mo|#{n} Mo",terabit:"1#{n} Tb|#{n} Tb",terabyte:"1#{n} To|#{n} To",day:"1#{n} j|#{n} j",
hour:"1#{n} h|#{n} h",microsecond:"1#{n} \u03bcs|#{n} \u03bcs",millisecond:"1#{n} ms|#{n} ms",minute:"1#{n} min|#{n} min",month:"1#{n} m|#{n} m",nanosecond:"1#{n} ns|#{n} ns",second:"1#{n} s|#{n} s",week:"1#{n} sem.|#{n} sem.",year:"1#{n} an|#{n} ans",ampere:"1#{n} A|#{n} A",milliampere:"1#{n} mA|#{n} mA",ohm:"1#{n} \u03a9|#{n} \u03a9",volt:"1#{n} V|#{n} V",calorie:"1#{n} Cal|#{n} Cal",joule:"1#{n} J|#{n} J",kilocalorie:"1#{n} kcal|#{n} kcal",kilojoule:"1#{n} kJ|#{n} kJ","kilowatt hour":"1#{n} kWh|#{n} kWh",
gigahertz:"1#{n} GHz|#{n} GHz",hertz:"1#{n} Hz|#{n} Hz",kilohertz:"1#{n} kHz|#{n} kHz",megahertz:"1#{n} MHz|#{n} MHz","astronomical-unit":"1#{n} ua|#{n} ua",centimeter:"1#{n} cm|#{n} cm",decimeter:"1#{n} dm|#{n} dm",fathom:"1#{n} fat|#{n} fat",foot:"1#{n} ft|#{n} ft",furlong:"1#{n} sil|#{n} sil",inch:"1#{n} po|#{n} po",kilometer:"1#{n} km|#{n} km","light-year":"1#{n} a.l.|#{n} a.l.",meter:"1#{n} m|#{n} m",micrometer:"1#{n} \u00b5m|#{n} \u00b5m",mile:"1#{n} mi|#{n} mi",millimeter:"1#{n} mm|#{n} mm",
nanometer:"1#{n} nm|#{n} nm",nauticalmile:"1#{n} nmi|#{n} nmi",parsec:"1#{n} pc|#{n} pc",picometer:"1#{n} pm|#{n} pm",yard:"1#{n} yd|#{n} yd",lux:"1#{n} lx|#{n} lx",carat:"1#{n} ct|#{n} ct",gram:"1#{n} g|#{n} g",kilogram:"1#{n} kg|#{n} kg","metric ton":"1#{n} t|#{n} t",microgram:"1#{n} \u00b5g|#{n} \u00b5g",milligram:"1#{n} mg|#{n} mg",ounce:"1#{n} oz|#{n} oz","ounce-troy":"1#{n} oz t|#{n} oz t",pound:"1#{n} lb|#{n} lb",stone:"1#{n} st|#{n} st","long ton":"1#{n} sh tn|#{n} sh tn",gigawatt:"1#{n} GW|#{n} GW",
horsepower:"1#{n} ch|#{n} ch",kilowatt:"1#{n} kW|#{n} kW",megawatt:"1#{n} MW|#{n} MW",milliwatt:"1#{n} mW|#{n} mW",watt:"1#{n} W|#{n} W",hectopascal:"1#{n} hPa|#{n} hPa","inch-hg":"1#{n} inHg|#{n} inHg",millibar:"1#{n} mbar|#{n} mbar","millimeter-of-mercury":"1#{n} mm Hg|#{n} mm Hg","pound-per-square-inch":"1#{n} lb/po\u00b2|#{n} lb/po\u00b2",karat:"1#{n} ct|#{n} ct","kilometer/hour":"1#{n} km/h|#{n} km/h","meters/second":"1#{n} m/s|#{n} m/s","miles/hour":"1#{n} mi/h|#{n} mi/h",celsius:"1#{n} \u00b0C|#{n} \u00b0C",
fahrenheit:"1#{n} \u00b0F|#{n} \u00b0F",kelvin:"1#{n} K|#{n} K","acre-foot":"1#{n} ac pi|#{n} ac pi",bushel:"1#{n} bu|#{n} bu",centiliter:"1#{n} cl|#{n} cl","cubic-centimeter":"1#{n} cm\u00b3|#{n} cm\u00b3","cubic foot":"1#{n} pi\u00b3|#{n} pi\u00b3","cubic inch":"1#{n} po\u00b3|#{n} po\u00b3","cubic-kilometer":"1#{n} km\u00b3|#{n} km\u00b3","cubic meter":"1#{n} m\u00b3|#{n} m\u00b3","cubic-mile":"1#{n} mi\u00b3|#{n} mi\u00b3","cubic-yard":"1#{n} yd\u00b3|#{n} yd\u00b3",cup:"1#{n} tasse|#{n} tasses",
deciliter:"1#{n} dl|#{n} dl","us ounce":"1#{n} fl oz|#{n} fl oz",gallon:"1#{n} gal|#{n} gal",hectoliter:"1#{n} hl|#{n} hl",liter:"1#{n} L|#{n} L",megaliter:"1#{n} Ml|#{n} Ml",milliliter:"1#{n} ml|#{n} ml",pint:"1#{n} pte|#{n} pte",quart:"1#{n} qt|#{n} qt",tbsp:"1#{n} c. \u00e0 s.|#{n} c. \u00e0 s.",tsp:"1#{n} c. \u00e0 c.|#{n} c. \u00e0 c.",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",
BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",
decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp","imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_es={unitfmt:{"long":{"g-force":"1#{n} unidad de fuerza gravitacional|#{n} unidades de fuerza gravitacional","meter-per-second-squared":"1#{n} metro por segundo al cuadrado|#{n} metros por segundo al cuadrado","arc-minute":"1#{n} minuto de arco|#{n} minutos de arco","arc-second":"1#{n} segundo de arco|#{n} segundos de arco",degree:"1#{n} grado|#{n} grados",radian:"1#{n} radi\u00e1n|#{n} radianes",acre:"1#{n} acre|#{n} acres",hectare:"1#{n} hect\u00e1rea|#{n} hect\u00e1reas","square centimeter":"1#{n} cent\u00edmetro cuadrado|#{n} cent\u00edmetros cuadrados",
"square foot":"1#{n} pie cuadrado|#{n} pies cuadrados","square inch":"1#{n} pulgada cuadrada|#{n} pulgadas cuadradas","square km":"1#{n} kil\u00f3metro cuadrado|#{n} kil\u00f3metros cuadrados","square meter":"1#{n} metro cuadrado|#{n} metros cuadrados","square mile":"1#{n} milla cuadrada|#{n} millas cuadradas","square yard":"1#{n} yarda cuadrada|#{n} yardas cuadradas","liter-per-kilometer":"1#{n} litro por kil\u00f3metro|#{n} litros por kil\u00f3metro",mpg:"1#{n} milla por gal\u00f3n|#{n} millas por gal\u00f3n",
bit:"1#{n} bit|#{n} bits","byte":"1#{n} byte|#{n} bytes",gigabit:"1#{n} gigabit|#{n} gigabits",gigabyte:"1#{n} gigabyte|#{n} gigabytes",kilobit:"1#{n} kilobit|#{n} kilobits",kilobyte:"1#{n} kilobyte|#{n} kilobytes",megabit:"1#{n} megabit|#{n} megabits",megabyte:"1#{n} megabyte|#{n} megabytes",terabit:"1#{n} terabit|#{n} terabits",terabyte:"1#{n} terabyte|#{n} terabytes",day:"1#{n} d\u00eda|#{n} d\u00edas",hour:"1#{n} hora|#{n} horas",microsecond:"1#{n} microsegundo|#{n} microsegundos",millisecond:"1#{n} milisegundo|#{n} milisegundos",
minute:"1#{n} minuto|#{n} minutos",month:"1#{n} mes|#{n} meses",nanosecond:"1#{n} nanosegundo|#{n} nanosegundos",second:"1#{n} segundo|#{n} segundos",week:"1#{n} semana|#{n} semanas",year:"1#{n} a\u00f1o|#{n} a\u00f1os",ampere:"1#{n} amperio|#{n} amperios",milliampere:"1#{n} miliamperio|#{n} miliamperios",ohm:"1#{n} ohmio|#{n} ohmios",volt:"1#{n} voltio|#{n} voltios",calorie:"1#{n} calor\u00eda|#{n} calor\u00edas",joule:"1#{n} julio|#{n} julios",kilocalorie:"1#{n} kilocalor\u00eda|#{n} kilocalor\u00edas",
kilojoule:"1#{n} kilojulio|#{n} kilojulios","kilowatt hour":"1#{n} kilovatio hora|#{n} kilovatios hora",gigahertz:"1#{n} gigahercio|#{n} gigahercios",hertz:"1#{n} hercio|#{n} hercios",kilohertz:"1#{n} kilohercio|#{n} kilohercios",megahertz:"1#{n} megahercio|#{n} megahercios","astronomical-unit":"1#{n} unidad astron\u00f3mica|#{n} unidades astron\u00f3micas",centimeter:"1#{n} cent\u00edmetro|#{n} cent\u00edmetros",decimeter:"1#{n} dec\u00edmetro|#{n} dec\u00edmetros",fathom:"#{n} fm",foot:"1#{n} pie|#{n} pies",
furlong:"#{n} fur",inch:"1#{n} pulgada|#{n} pulgadas",kilometer:"1#{n} kil\u00f3metro|#{n} kil\u00f3metros","light-year":"1#{n} a\u00f1o luz|#{n} a\u00f1os luz",meter:"1#{n} metro|#{n} metros",micrometer:"1#{n} micr\u00f3metro|#{n} micr\u00f3metros",mile:"1#{n} milla|#{n} millas",millimeter:"1#{n} mil\u00edmetro|#{n} mil\u00edmetros",nanometer:"1#{n} nan\u00f3metro|#{n} nan\u00f3metros",nauticalmile:"1#{n} milla n\u00e1utica|#{n} millas n\u00e1uticas",parsec:"1#{n} parsec|#{n} parsecs",picometer:"1#{n} pic\u00f3metro|#{n} pic\u00f3metros",
yard:"1#{n} yarda|#{n} yardas",lux:"1#{n} lux|#{n} luxes",carat:"1#{n} quilate|#{n} quilates",gram:"1#{n} gramo|#{n} gramos",kilogram:"1#{n} kilogramo|#{n} kilogramos","metric ton":"1#{n} tonelada m\u00e9trica|#{n} toneladas m\u00e9tricas",microgram:"1#{n} microgramo|#{n} microgramos",milligram:"1#{n} miligramo|#{n} miligramos",ounce:"1#{n} onza|#{n} onzas","ounce-troy":"1#{n} onza troy|#{n} onzas troy",pound:"1#{n} libra|#{n} libras",stone:"#{n} st","long ton":"1#{n} tonelada|#{n} toneladas",gigawatt:"1#{n} gigavatio|#{n} gigavatios",
horsepower:"1#{n} caballo de vapor|#{n} caballos de vapor",kilowatt:"1#{n} kilovatio|#{n} kilovatios",megawatt:"1#{n} megavatio|#{n} megavatios",milliwatt:"1#{n} milivatio|#{n} milivatios",watt:"1#{n} vatio|#{n} vatios",hectopascal:"1#{n} hectopascal|#{n} hectopascales","inch-hg":"1#{n} pulgada de mercurio|#{n} pulgadas de mercurio",millibar:"1#{n} milibar|#{n} milibares","millimeter-of-mercury":"1#{n} mil\u00edmetro de mercurio|#{n} mil\u00edmetros de mercurio","pound-per-square-inch":"1#{n} libra por pulgada cuadrada|#{n} libras por pulgada cuadrada",
karat:"1#{n} quilate|#{n} quilates","kilometer/hour":"1#{n} kil\u00f3metro por hora|#{n} kil\u00f3metros por hora","meters/second":"1#{n} metro por segundo|#{n} metros por segundo","miles/hour":"1#{n} milla por hora|#{n} millas por hora",celsius:"1#{n} grado Celsius|#{n} grados Celsius",fahrenheit:"1#{n} grado Fahrenheit|#{n} grados Fahrenheit",kelvin:"1#{n} kelvin|#{n} kelvin","acre-foot":"1#{n} acre pie|#{n} acres pies",bushel:"#{n} bu",centiliter:"1#{n} centilitro|#{n} centilitros","cubic-centimeter":"1#{n} cent\u00edmetro c\u00fabico|#{n} cent\u00edmetros c\u00fabicos",
"cubic foot":"1#{n} pie c\u00fabico|#{n} pies c\u00fabicos","cubic inch":"1#{n} pulgada c\u00fabica|#{n} pulgadas c\u00fabicas","cubic-kilometer":"1#{n} kil\u00f3metro c\u00fabico|#{n} kil\u00f3metros c\u00fabicos","cubic meter":"1#{n} metro c\u00fabico|#{n} metros c\u00fabicos","cubic-mile":"1#{n} milla c\u00fabica|#{n} millas c\u00fabicas","cubic-yard":"1#{n} yarda c\u00fabica|#{n} yardas c\u00fabicas",cup:"1#{n} taza|#{n} tazas",deciliter:"1#{n} decilitro|#{n} decilitros","us ounce":"1#{n} onza fluida|#{n} onzas fluidas",
gallon:"1#{n} gal\u00f3n|#{n} galones",hectoliter:"1#{n} hectolitro|#{n} hectolitros",liter:"1#{n} litro|#{n} litros",megaliter:"1#{n} megalitro|#{n} megalitros",milliliter:"1#{n} mililitro|#{n} mililitros",pint:"1#{n} pinta|#{n} pintas",quart:"1#{n} cuarto|#{n} cuartos",tbsp:"1#{n} cucharada|#{n} cucharadas",tsp:"1#{n} cucharadita|#{n} cucharaditas",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",
petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km",
"mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second","miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons",
"imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},"short":{"g-force":"1#{n} Fg|#{n} Fg","meter-per-second-squared":"1#{n} m/s\u00b2|#{n} m/s\u00b2","arc-minute":"1#{n} arcmin|#{n} arcmin","arc-second":"1#{n} arcsec|#{n} arcsec",degree:"1#{n}\u00b0|#{n}\u00b0",radian:"1#{n} rad|#{n} rad",acre:"1#{n} ac|#{n} ac",
hectare:"1#{n} ha|#{n} ha","square centimeter":"1#{n} cm\u00b2|#{n} cm\u00b2","square foot":"1#{n} ft\u00b2|#{n} ft\u00b2","square inch":"1#{n} in\u00b2|#{n} in\u00b2","square km":"1#{n} km\u00b2|#{n} km\u00b2","square meter":"1#{n} m\u00b2|#{n} m\u00b2","square mile":"1#{n} mi\u00b2|#{n} mi\u00b2","square yard":"1#{n} yd\u00b2|#{n} yd\u00b2","liter-per-kilometer":"1#{n} l/km|#{n} l/km",mpg:"1#{n} mi/gal|#{n} mi/gal",bit:"1#{n} b|#{n} b","byte":"1#{n} B|#{n} B",gigabit:"1#{n} Gb|#{n} Gb",gigabyte:"1#{n} GB|#{n} GB",
kilobit:"1#{n} kb|#{n} kb",kilobyte:"1#{n} kB|#{n} kB",megabit:"1#{n} Mb|#{n} Mb",megabyte:"1#{n} MB|#{n} MB",terabit:"1#{n} Tb|#{n} Tb",terabyte:"1#{n} TB|#{n} TB",day:"1#{n} d|#{n} d",hour:"1#{n} h|#{n} h",microsecond:"1#{n} \u03bcs|#{n} \u03bcs",millisecond:"1#{n} ms|#{n} ms",minute:"1#{n} min|#{n} min",month:"1#{n} m|#{n} m",nanosecond:"1#{n} ns|#{n} ns",second:"1#{n} s|#{n} s",week:"1#{n} sem|#{n} sem",year:"1#{n} a|#{n} a",ampere:"1#{n} A|#{n} A",milliampere:"1#{n} mA|#{n} mA",ohm:"1#{n} \u03a9|#{n} \u03a9",
volt:"1#{n} V|#{n} V",calorie:"1#{n} cal|#{n} cal",joule:"1#{n} J|#{n} J",kilocalorie:"1#{n} kcal|#{n} kcal",kilojoule:"1#{n} kJ|#{n} kJ","kilowatt hour":"1#{n} kWh|#{n} kWh",gigahertz:"1#{n} GHz|#{n} GHz",hertz:"1#{n} Hz|#{n} Hz",kilohertz:"1#{n} kHz|#{n} kHz",megahertz:"1#{n} MHz|#{n} MHz","astronomical-unit":"1#{n} au|#{n} au",centimeter:"1#{n} cm|#{n} cm",decimeter:"1#{n} dm|#{n} dm",fathom:"#{n} fm",foot:"1#{n} ft|#{n} ft",furlong:"#{n} fur",inch:"1#{n} in|#{n} in",kilometer:"1#{n} km|#{n} km",
"light-year":"1#{n} a. l.|#{n} a. l.",meter:"1#{n} m|#{n} m",micrometer:"1#{n} \u00b5m|#{n} \u00b5m",mile:"1#{n} mi|#{n} mi",millimeter:"1#{n} mm|#{n} mm",nanometer:"1#{n} nm|#{n} nm",nauticalmile:"1#{n} M|#{n} M",parsec:"1#{n} pc|#{n} pc",picometer:"1#{n} pm|#{n} pm",yard:"1#{n} yd|#{n} yd",lux:"1#{n} lx|#{n} lx",carat:"1#{n} c|#{n} c",gram:"1#{n} g|#{n} g",kilogram:"1#{n} kg|#{n} kg","metric ton":"1#{n} t|#{n} t",microgram:"1#{n} \u00b5g|#{n} \u00b5g",milligram:"1#{n} mg|#{n} mg",ounce:"1#{n} oz|#{n} oz",
"ounce-troy":"1#{n} oz tr|#{n} oz tr",pound:"1#{n} lb|#{n} lb",stone:"#{n} st","long ton":"1#{n} ton|#{n} ton",gigawatt:"1#{n} GW|#{n} GW",horsepower:"1#{n} CV|#{n} CV",kilowatt:"1#{n} kW|#{n} kW",megawatt:"1#{n} MW|#{n} MW",milliwatt:"1#{n} mW|#{n} mW",watt:"1#{n} W|#{n} W",hectopascal:"1#{n} hPa|#{n} hPa","inch-hg":"1#{n} inHg|#{n} inHg",millibar:"1#{n} mbar|#{n} mbar","millimeter-of-mercury":"1#{n} mmHg|#{n} mmHg","pound-per-square-inch":"1#{n} psi|#{n} psi",karat:"1#{n} c|#{n} c","kilometer/hour":"1#{n} km/h|#{n} km/h",
"meters/second":"1#{n} m/s|#{n} m/s","miles/hour":"1#{n} mi/h|#{n} mi/h",celsius:"1#{n} \u00b0C|#{n} \u00b0C",fahrenheit:"1#{n} \u00b0F|#{n} \u00b0F",kelvin:"1#{n} K|#{n} K","acre-foot":"1#{n} ac ft|#{n} ac ft",bushel:"#{n} bu",centiliter:"1#{n} cl|#{n} cl","cubic-centimeter":"1#{n} cm\u00b3|#{n} cm\u00b3","cubic foot":"1#{n} ft\u00b3|#{n} ft\u00b3","cubic inch":"1#{n} in\u00b3|#{n} in\u00b3","cubic-kilometer":"1#{n} km\u00b3|#{n} km\u00b3","cubic meter":"1#{n} m\u00b3|#{n} m\u00b3","cubic-mile":"1#{n} mi\u00b3|#{n} mi\u00b3",
"cubic-yard":"1#{n} yd\u00b3|#{n} yd\u00b3",cup:"1#{n} tza.|#{n} tza.",deciliter:"1#{n} dl|#{n} dl","us ounce":"1#{n} fl oz|#{n} fl oz",gallon:"1#{n} gal|#{n} gal",hectoliter:"1#{n} hl|#{n} hl",liter:"1#{n} l|#{n} l",megaliter:"1#{n} Ml|#{n} Ml",milliliter:"1#{n} ml|#{n} ml",pint:"1#{n} pt|#{n} pt",quart:"1#{n} qt|#{n} qt",tbsp:"1#{n} cd.|#{n} cda.",tsp:"1#{n} cdta.|#{n} cdta.",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",
petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s",
"miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp","imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_es_AR={unitfmt:{"long":{"g-force":"1#{n} unidad de fuerza gravitacional|#{n} unidades de fuerza gravitacional","meter-per-second-squared":"1#{n} metro por segundo al cuadrado|#{n} metros por segundo al cuadrado","arc-minute":"1#{n} minuto de arco|#{n} minutos de arco","arc-second":"1#{n} segundo de arco|#{n} segundos de arco",degree:"1#{n} grado|#{n} grados",radian:"1#{n} radi\u00e1n|#{n} radianes",acre:"1#{n} acre|#{n} acres",hectare:"1#{n} hect\u00e1rea|#{n} hect\u00e1reas","square centimeter":"1#{n} cent\u00edmetro cuadrado|#{n} cent\u00edmetros cuadrados",
"square foot":"1#{n} pie cuadrado|#{n} pies cuadrados","square inch":"1#{n} pulgada cuadrada|#{n} pulgadas cuadradas","square km":"1#{n} kil\u00f3metro cuadrado|#{n} kil\u00f3metros cuadrados","square meter":"1#{n} metro cuadrado|#{n} metros cuadrados","square mile":"1#{n} milla cuadrada|#{n} millas cuadradas","square yard":"1#{n} yarda cuadrada|#{n} yardas cuadradas","liter-per-kilometer":"1#{n} litro por kil\u00f3metro|#{n} litros por kil\u00f3metro",mpg:"1#{n} milla por gal\u00f3n|#{n} millas por gal\u00f3n",
bit:"1#{n} bit|#{n} bits","byte":"1#{n} byte|#{n} bytes",gigabit:"1#{n} gigabit|#{n} gigabits",gigabyte:"1#{n} gigabyte|#{n} gigabytes",kilobit:"1#{n} kilobit|#{n} kilobits",kilobyte:"1#{n} kilobyte|#{n} kilobytes",megabit:"1#{n} megabit|#{n} megabits",megabyte:"1#{n} megabyte|#{n} megabytes",terabit:"1#{n} terabit|#{n} terabits",terabyte:"1#{n} terabyte|#{n} terabytes",day:"1#{n} d\u00eda|#{n} d\u00edas",hour:"1#{n} hora|#{n} horas",microsecond:"1#{n} microsegundo|#{n} microsegundos",millisecond:"1#{n} milisegundo|#{n} milisegundos",
minute:"1#{n} minuto|#{n} minutos",month:"1#{n} mes|#{n} meses",nanosecond:"1#{n} nanosegundo|#{n} nanosegundos",second:"1#{n} segundo|#{n} segundos",week:"1#{n} semana|#{n} semanas",year:"1#{n} a\u00f1o|#{n} a\u00f1os",ampere:"1#{n} amperio|#{n} amperios",milliampere:"1#{n} miliamperio|#{n} miliamperios",ohm:"1#{n} ohmio|#{n} ohmios",volt:"1#{n} voltio|#{n} voltios",calorie:"1#{n} calor\u00eda por kilogramo|#{n} calor\u00edas por kilogramo",joule:"1#{n} julio|#{n} julios",kilocalorie:"1#{n} kilocalor\u00eda|#{n} kilocalor\u00edas",
kilojoule:"1#{n} kilojulio|#{n} kilojulios","kilowatt hour":"1#{n} kilovatio hora|#{n} kilovatios hora",gigahertz:"1#{n} gigahercio|#{n} gigahercios",hertz:"1#{n} hercio|#{n} hercios",kilohertz:"1#{n} kilohercio|#{n} kilohercios",megahertz:"1#{n} megahercio|#{n} megahercios","astronomical-unit":"1#{n} unidad astron\u00f3mica|#{n} unidades astron\u00f3micas",centimeter:"1#{n} cent\u00edmetro|#{n} cent\u00edmetros",decimeter:"1#{n} dec\u00edmetro|#{n} dec\u00edmetros",fathom:"#{n} fm",foot:"1#{n} pie|#{n} pies",
furlong:"#{n} fur",inch:"1#{n} pulgada|#{n} pulgadas",kilometer:"1#{n} kil\u00f3metro|#{n} kil\u00f3metros","light-year":"1#{n} a\u00f1o luz|#{n} a\u00f1os luz",meter:"1#{n} metro|#{n} metros",micrometer:"1#{n} micr\u00f3metro|#{n} micr\u00f3metros",mile:"1#{n} milla|#{n} millas",millimeter:"1#{n} mil\u00edmetro|#{n} mil\u00edmetros",nanometer:"1#{n} nan\u00f3metro|#{n} nan\u00f3metros",nauticalmile:"1#{n} milla n\u00e1utica|#{n} millas n\u00e1uticas",parsec:"1#{n} parsec|#{n} parsecs",picometer:"1#{n} pic\u00f3metro|#{n} pic\u00f3metros",
yard:"1#{n} yarda|#{n} yardas",lux:"1#{n} lux|#{n} luxes",carat:"1#{n} quilate de gemolog\u00eda|#{n} quilates de gemolog\u00eda",gram:"1#{n} gramo|#{n} gramos",kilogram:"1#{n} kilogramo|#{n} kilogramos","metric ton":"1#{n} tonelada m\u00e9trica|#{n} toneladas m\u00e9tricas",microgram:"1#{n} microgramo|#{n} microgramos",milligram:"1#{n} miligramo|#{n} miligramos",ounce:"1#{n} onza|#{n} onzas","ounce-troy":"1#{n} onza troy|#{n} onzas troy",pound:"1#{n} libra|#{n} libras",stone:"#{n} st","long ton":"1#{n} tonelada|#{n} toneladas",
gigawatt:"1#{n} gigavatio|#{n} gigavatios",horsepower:"1#{n} caballo de vapor|#{n} caballos de vapor",kilowatt:"1#{n} kilovatio|#{n} kilovatios",megawatt:"1#{n} megavatio|#{n} megavatios",milliwatt:"1#{n} milivatio|#{n} milivatios",watt:"1#{n} vatio|#{n} vatios",hectopascal:"1#{n} hectopascal|#{n} hectopascales","inch-hg":"1#{n} pulgada de mercurio|#{n} pulgadas de mercurio",millibar:"1#{n} milibar|#{n} milibares","millimeter-of-mercury":"1#{n} mil\u00edmetro de mercurio|#{n} mil\u00edmetros de mercurio",
"pound-per-square-inch":"1#{n} libra por pulgada cuadrada|#{n} libras por pulgada cuadrada",karat:"1#{n} quilate de orfebrer\u00eda|#{n} quilates de orfebrer\u00eda","kilometer/hour":"1#{n} kil\u00f3metro por hora|#{n} kil\u00f3metros por hora","meters/second":"1#{n} metro por segundo|#{n} metros por segundo","miles/hour":"1#{n} milla por hora|#{n} millas por hora",celsius:"1#{n} grado Celsius|#{n} grados Celsius",fahrenheit:"1#{n} grado Fahrenheit|#{n} grados Fahrenheit",kelvin:"1#{n} grado Kelvin|#{n} grados Kelvin",
"acre-foot":"1#{n} acre pie|#{n} acres pies",bushel:"#{n} bu",centiliter:"1#{n} centilitro|#{n} centilitros","cubic-centimeter":"1#{n} cent\u00edmetro c\u00fabico|#{n} cent\u00edmetros c\u00fabicos","cubic foot":"1#{n} pie c\u00fabico|#{n} pies c\u00fabicos","cubic inch":"1#{n} pulgada c\u00fabica|#{n} pulgadas c\u00fabicas","cubic-kilometer":"1#{n} kil\u00f3metro c\u00fabico|#{n} kil\u00f3metros c\u00fabicos","cubic meter":"1#{n} metro c\u00fabico|#{n} metros c\u00fabicos","cubic-mile":"1#{n} milla c\u00fabica|#{n} millas c\u00fabicas",
"cubic-yard":"1#{n} yarda c\u00fabica|#{n} yardas c\u00fabicas",cup:"1#{n} taza|#{n} tazas",deciliter:"1#{n} decilitro|#{n} decilitros","us ounce":"1#{n} onza fluida|#{n} onzas fluidas",gallon:"1#{n} gal\u00f3n|#{n} galones",hectoliter:"1#{n} hectolitro|#{n} hectolitros",liter:"1#{n} litro|#{n} litros",megaliter:"1#{n} megalitro|#{n} megalitros",milliliter:"1#{n} mililitro|#{n} mililitros",pint:"1#{n} pinta|#{n} pintas",quart:"1#{n} cuarto|#{n} cuartos",tbsp:"1#{n} cucharada|#{n} cucharadas",tsp:"1#{n} cucharadita|#{n} cucharaditas",
decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours",
"gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second","miles/second":"1#{n} mile per second|#{n} miles per second",
decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},"short":{"g-force":"1#{n} Fg|#{n} Fg","meter-per-second-squared":"1#{n} m/s\u00b2|#{n} m/s\u00b2",
"arc-minute":"1#{n} arcmin|#{n} arcmin","arc-second":"1#{n} arcsec|#{n} arcsec",degree:"1#{n}\u00a0\u00b0|#{n}\u00a0\u00b0",radian:"1#{n} rad|#{n} rad",acre:"1#{n} ac|#{n} ac",hectare:"1#{n} ha|#{n} ha","square centimeter":"1#{n} cm\u00b2|#{n} cm\u00b2","square foot":"1#{n} ft\u00b2|#{n} ft\u00b2","square inch":"1#{n} in\u00b2|#{n} in\u00b2","square km":"1#{n} km\u00b2|#{n} km\u00b2","square meter":"1#{n} m\u00b2|#{n} m\u00b2","square mile":"1#{n} mi\u00b2|#{n} mi\u00b2","square yard":"1#{n} yd\u00b2|#{n} yd\u00b2",
"liter-per-kilometer":"1#{n} l/km|#{n} l/km",mpg:"1#{n} mi/gal|#{n} mi/gal",bit:"1#{n} b|#{n} b","byte":"1#{n} B|#{n} B",gigabit:"1#{n} Gb|#{n} Gb",gigabyte:"1#{n} GB|#{n} GB",kilobit:"1#{n} kb|#{n} kb",kilobyte:"1#{n} kB|#{n} kB",megabit:"1#{n} Mb|#{n} Mb",megabyte:"1#{n} MB|#{n} MB",terabit:"1#{n} Tb|#{n} Tb",terabyte:"1#{n} TB|#{n} TB",day:"1#{n} d.|#{n} dd.",hour:"1#{n} h|#{n} h",microsecond:"1#{n} \u03bcs|#{n} \u03bcs",millisecond:"1#{n} ms|#{n} ms",minute:"1#{n} min|#{n} min",month:"1#{n} m.|#{n} mm.",
nanosecond:"1#{n} ns|#{n} ns",second:"1#{n} s|#{n} s",week:"1#{n} sem.|#{n} sems.",year:"1#{n} a.|#{n} aa.",ampere:"1#{n} A|#{n} A",milliampere:"1#{n} mA|#{n} mA",ohm:"1#{n} \u03a9|#{n} \u03a9",volt:"1#{n} V|#{n} V",calorie:"1#{n} C|#{n} C",joule:"1#{n} j|#{n} j",kilocalorie:"1#{n} kcal|#{n} kcal",kilojoule:"1#{n} kJ|#{n} kJ","kilowatt hour":"1#{n} kWh|#{n} kWh",gigahertz:"1#{n} GHz|#{n} GHz",hertz:"1#{n} Hz|#{n} Hz",kilohertz:"1#{n} kHz|#{n} kHz",megahertz:"1#{n} MHz|#{n} MHz","astronomical-unit":"1#{n} au|#{n} au",
centimeter:"1#{n} cm|#{n} cm",decimeter:"1#{n} dm|#{n} dm",fathom:"#{n} fm",foot:"1#{n} ft|#{n} ft",furlong:"#{n} fur",inch:"1#{n} in|#{n} in",kilometer:"1#{n} km|#{n} km","light-year":"1#{n} a. l.|#{n} aa. l.",meter:"1#{n} m|#{n} m",micrometer:"1#{n} \u00b5m|#{n} \u00b5m",mile:"1#{n} mi|#{n} mi",millimeter:"1#{n} mm|#{n} mm",nanometer:"1#{n} nm|#{n} nm",nauticalmile:"1#{n} nmi|#{n} nmi",parsec:"1#{n} pc|#{n} pc",picometer:"1#{n} pm|#{n} pm",yard:"1#{n} yd|#{n} yd",lux:"1#{n} lx|#{n} lx",carat:"1#{n} CD|#{n} CD",
gram:"1#{n} g|#{n} g",kilogram:"1#{n} kg|#{n} kg","metric ton":"1#{n} t|#{n} t",microgram:"1#{n} \u00b5g|#{n} \u00b5g",milligram:"1#{n} mg|#{n} mg",ounce:"1#{n} oz|#{n} oz","ounce-troy":"1#{n} oz t|#{n} oz t",pound:"1#{n} lb|#{n} lb",stone:"#{n} st","long ton":"1#{n} tn|#{n} tn",gigawatt:"1#{n} GW|#{n} GW",horsepower:"1#{n} CV|#{n} CV",kilowatt:"1#{n} kW|#{n} kW",megawatt:"1#{n} MW|#{n} MW",milliwatt:"1#{n} mW|#{n} mW",watt:"1#{n} W|#{n} W",hectopascal:"1#{n} hPa|#{n} hPa","inch-hg":"1#{n} inHg|#{n} inHg",
millibar:"1#{n} mbar|#{n} mbar","millimeter-of-mercury":"1#{n} mmHg|#{n} mmHg","pound-per-square-inch":"1#{n} lb/in\u00b2|#{n} lb/in\u00b2",karat:"1#{n} kt|#{n} kt","kilometer/hour":"1#{n} km/h|#{n} km/h","meters/second":"1#{n} m/s|#{n} m/s","miles/hour":"1#{n} mi/h|#{n} mi/h",celsius:"1#{n} \u00b0C|#{n} \u00b0C",fahrenheit:"1#{n} \u00b0F|#{n} \u00b0F",kelvin:"1#{n} \u00b0K|#{n} \u00b0K","acre-foot":"1#{n} ac ft|#{n} ac ft",bushel:"#{n} bu",centiliter:"1#{n} cl|#{n} cl","cubic-centimeter":"1#{n} cm\u00b3|#{n} cm\u00b3",
"cubic foot":"1#{n} ft\u00b3|#{n} ft\u00b3","cubic inch":"1#{n} in\u00b3|#{n} in\u00b3","cubic-kilometer":"1#{n} km\u00b3|#{n} km\u00b3","cubic meter":"1#{n} m\u00b3|#{n} m\u00b3","cubic-mile":"1#{n} mi\u00b3|#{n} mi\u00b3","cubic-yard":"1#{n} yd\u00b3|#{n} yd\u00b3",cup:"1#{n} c|#{n} c",deciliter:"1#{n} dl|#{n} dl","us ounce":"1#{n} fl oz|#{n} fl oz",gallon:"1#{n} gal|#{n} gal",hectoliter:"1#{n} hl|#{n} hl",liter:"1#{n} l|#{n} l",megaliter:"1#{n} Ml|#{n} Ml",milliliter:"1#{n} ml|#{n} ml",pint:"1#{n} pt|#{n} pt",
quart:"1#{n} qt|#{n} qt",tbsp:"1#{n} cd.|#{n} cdas.",tsp:"1#{n} cdta.|#{n} cdtas.",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l",
"liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp","imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz",
"imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_es_ES={unitfmt:{"long":{"g-force":"1#{n} unidad de fuerza gravitacional|#{n} unidades de fuerza gravitacional","meter-per-second-squared":"1#{n} metro por segundo al cuadrado|#{n} metros por segundo al cuadrado","arc-minute":"1#{n} minuto de arco|#{n} minutos de arco","arc-second":"1#{n} segundo de arco|#{n} segundos de arco",degree:"1#{n} grado|#{n} grados",radian:"1#{n} radi\u00e1n|#{n} radianes",acre:"1#{n} acre|#{n} acres",hectare:"1#{n} hect\u00e1rea|#{n} hect\u00e1reas","square centimeter":"1#{n} cent\u00edmetro cuadrado|#{n} cent\u00edmetros cuadrados",
"square foot":"1#{n} pie cuadrado|#{n} pies cuadrados","square inch":"1#{n} pulgada cuadrada|#{n} pulgadas cuadradas","square km":"1#{n} kil\u00f3metro cuadrado|#{n} kil\u00f3metros cuadrados","square meter":"1#{n} metro cuadrado|#{n} metros cuadrados","square mile":"1#{n} milla cuadrada|#{n} millas cuadradas","square yard":"1#{n} yarda cuadrada|#{n} yardas cuadradas","liter-per-kilometer":"1#{n} litro por kil\u00f3metro|#{n} litros por kil\u00f3metro",mpg:"1#{n} milla por gal\u00f3n|#{n} millas por gal\u00f3n",
bit:"1#{n} bit|#{n} bits","byte":"1#{n} byte|#{n} bytes",gigabit:"1#{n} gigabit|#{n} gigabits",gigabyte:"1#{n} gigabyte|#{n} gigabytes",kilobit:"1#{n} kilobit|#{n} kilobits",kilobyte:"1#{n} kilobyte|#{n} kilobytes",megabit:"1#{n} megabit|#{n} megabits",megabyte:"1#{n} megabyte|#{n} megabytes",terabit:"1#{n} terabit|#{n} terabits",terabyte:"1#{n} terabyte|#{n} terabytes",day:"1#{n} d\u00eda|#{n} d\u00edas",hour:"1#{n} hora|#{n} horas",microsecond:"1#{n} microsegundo|#{n} microsegundos",millisecond:"1#{n} milisegundo|#{n} milisegundos",
minute:"1#{n} minuto|#{n} minutos",month:"1#{n} mes|#{n} meses",nanosecond:"1#{n} nanosegundo|#{n} nanosegundos",second:"1#{n} segundo|#{n} segundos",week:"1#{n} semana|#{n} semanas",year:"1#{n} a\u00f1o|#{n} a\u00f1os",ampere:"1#{n} amperio|#{n} amperios",milliampere:"1#{n} miliamperio|#{n} miliamperios",ohm:"1#{n} ohmio|#{n} ohmios",volt:"1#{n} voltio|#{n} voltios",calorie:"1#{n} calor\u00eda|#{n} calor\u00edas",joule:"1#{n} julio|#{n} julios",kilocalorie:"1#{n} kilocalor\u00eda|#{n} kilocalor\u00edas",
kilojoule:"1#{n} kilojulio|#{n} kilojulios","kilowatt hour":"1#{n} kilovatio hora|#{n} kilovatios hora",gigahertz:"1#{n} gigahercio|#{n} gigahercios",hertz:"1#{n} hercio|#{n} hercios",kilohertz:"1#{n} kilohercio|#{n} kilohercios",megahertz:"1#{n} megahercio|#{n} megahercios","astronomical-unit":"1#{n} unidad astron\u00f3mica|#{n} unidades astron\u00f3micas",centimeter:"1#{n} cent\u00edmetro|#{n} cent\u00edmetros",decimeter:"1#{n} dec\u00edmetro|#{n} dec\u00edmetros",fathom:"#{n} fm",foot:"1#{n} pie|#{n} pies",
furlong:"#{n} fur",inch:"1#{n} pulgada|#{n} pulgadas",kilometer:"1#{n} kil\u00f3metro|#{n} kil\u00f3metros","light-year":"1#{n} a\u00f1o luz|#{n} a\u00f1os luz",meter:"1#{n} metro|#{n} metros",micrometer:"1#{n} micr\u00f3metro|#{n} micr\u00f3metros",mile:"1#{n} milla|#{n} millas",millimeter:"1#{n} mil\u00edmetro|#{n} mil\u00edmetros",nanometer:"1#{n} nan\u00f3metro|#{n} nan\u00f3metros",nauticalmile:"1#{n} milla n\u00e1utica|#{n} millas n\u00e1uticas",parsec:"1#{n} parsec|#{n} parsecs",picometer:"1#{n} pic\u00f3metro|#{n} pic\u00f3metros",
yard:"1#{n} yarda|#{n} yardas",lux:"1#{n} lux|#{n} luxes",carat:"1#{n} quilate|#{n} quilates",gram:"1#{n} gramo|#{n} gramos",kilogram:"1#{n} kilogramo|#{n} kilogramos","metric ton":"1#{n} tonelada m\u00e9trica|#{n} toneladas m\u00e9tricas",microgram:"1#{n} microgramo|#{n} microgramos",milligram:"1#{n} miligramo|#{n} miligramos",ounce:"1#{n} onza|#{n} onzas","ounce-troy":"1#{n} onza troy|#{n} onzas troy",pound:"1#{n} libra|#{n} libras",stone:"#{n} st","long ton":"1#{n} tonelada|#{n} toneladas",gigawatt:"1#{n} gigavatio|#{n} gigavatios",
horsepower:"1#{n} caballo de vapor|#{n} caballos de vapor",kilowatt:"1#{n} kilovatio|#{n} kilovatios",megawatt:"1#{n} megavatio|#{n} megavatios",milliwatt:"1#{n} milivatio|#{n} milivatios",watt:"1#{n} vatio|#{n} vatios",hectopascal:"1#{n} hectopascal|#{n} hectopascales","inch-hg":"1#{n} pulgada de mercurio|#{n} pulgadas de mercurio",millibar:"1#{n} milibar|#{n} milibares","millimeter-of-mercury":"1#{n} mil\u00edmetro de mercurio|#{n} mil\u00edmetros de mercurio","pound-per-square-inch":"1#{n} libra por pulgada cuadrada|#{n} libras por pulgada cuadrada",
karat:"1#{n} quilate|#{n} quilates","kilometer/hour":"1#{n} kil\u00f3metro por hora|#{n} kil\u00f3metros por hora","meters/second":"1#{n} metro por segundo|#{n} metros por segundo","miles/hour":"1#{n} milla por hora|#{n} millas por hora",celsius:"1#{n} grado Celsius|#{n} grados Celsius",fahrenheit:"1#{n} grado Fahrenheit|#{n} grados Fahrenheit",kelvin:"1#{n} kelvin|#{n} kelvin","acre-foot":"1#{n} acre pie|#{n} acres pies",bushel:"#{n} bu",centiliter:"1#{n} centilitro|#{n} centilitros","cubic-centimeter":"1#{n} cent\u00edmetro c\u00fabico|#{n} cent\u00edmetros c\u00fabicos",
"cubic foot":"1#{n} pie c\u00fabico|#{n} pies c\u00fabicos","cubic inch":"1#{n} pulgada c\u00fabica|#{n} pulgadas c\u00fabicas","cubic-kilometer":"1#{n} kil\u00f3metro c\u00fabico|#{n} kil\u00f3metros c\u00fabicos","cubic meter":"1#{n} metro c\u00fabico|#{n} metros c\u00fabicos","cubic-mile":"1#{n} milla c\u00fabica|#{n} millas c\u00fabicas","cubic-yard":"1#{n} yarda c\u00fabica|#{n} yardas c\u00fabicas",cup:"1#{n} taza|#{n} tazas",deciliter:"1#{n} decilitro|#{n} decilitros","us ounce":"1#{n} onza fluida|#{n} onzas fluidas",
gallon:"1#{n} gal\u00f3n|#{n} galones",hectoliter:"1#{n} hectolitro|#{n} hectolitros",liter:"1#{n} litro|#{n} litros",megaliter:"1#{n} megalitro|#{n} megalitros",milliliter:"1#{n} mililitro|#{n} mililitros",pint:"1#{n} pinta|#{n} pintas",quart:"1#{n} cuarto|#{n} cuartos",tbsp:"1#{n} cucharada|#{n} cucharadas",tsp:"1#{n} cucharadita|#{n} cucharaditas",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",
petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km",
"mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second","miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons",
"imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},"short":{"g-force":"1#{n} Fg|#{n} Fg","meter-per-second-squared":"1#{n} m/s\u00b2|#{n} m/s\u00b2","arc-minute":"1#{n} arcmin|#{n} arcmin","arc-second":"1#{n} arcsec|#{n} arcsec",degree:"1#{n}\u00b0|#{n}\u00b0",radian:"1#{n} rad|#{n} rad",acre:"1#{n} ac|#{n} ac",
hectare:"1#{n} ha|#{n} ha","square centimeter":"1#{n} cm\u00b2|#{n} cm\u00b2","square foot":"1#{n} ft\u00b2|#{n} ft\u00b2","square inch":"1#{n} in\u00b2|#{n} in\u00b2","square km":"1#{n} km\u00b2|#{n} km\u00b2","square meter":"1#{n} m\u00b2|#{n} m\u00b2","square mile":"1#{n} mi\u00b2|#{n} mi\u00b2","square yard":"1#{n} yd\u00b2|#{n} yd\u00b2","liter-per-kilometer":"1#{n} l/km|#{n} l/km",mpg:"1#{n} mi/gal|#{n} mi/gal",bit:"1#{n} b|#{n} b","byte":"1#{n} B|#{n} B",gigabit:"1#{n} Gb|#{n} Gb",gigabyte:"1#{n} GB|#{n} GB",
kilobit:"1#{n} kb|#{n} kb",kilobyte:"1#{n} kB|#{n} kB",megabit:"1#{n} Mb|#{n} Mb",megabyte:"1#{n} MB|#{n} MB",terabit:"1#{n} Tb|#{n} Tb",terabyte:"1#{n} TB|#{n} TB",day:"1#{n} d|#{n} d",hour:"1#{n} h|#{n} h",microsecond:"1#{n} \u03bcs|#{n} \u03bcs",millisecond:"1#{n} ms|#{n} ms",minute:"1#{n} min|#{n} min",month:"1#{n} m|#{n} m",nanosecond:"1#{n} ns|#{n} ns",second:"1#{n} s|#{n} s",week:"1#{n} sem|#{n} sem",year:"1#{n} a|#{n} a",ampere:"1#{n} A|#{n} A",milliampere:"1#{n} mA|#{n} mA",ohm:"1#{n} \u03a9|#{n} \u03a9",
volt:"1#{n} V|#{n} V",calorie:"1#{n} cal|#{n} cal",joule:"1#{n} J|#{n} J",kilocalorie:"1#{n} kcal|#{n} kcal",kilojoule:"1#{n} kJ|#{n} kJ","kilowatt hour":"1#{n} kWh|#{n} kWh",gigahertz:"1#{n} GHz|#{n} GHz",hertz:"1#{n} Hz|#{n} Hz",kilohertz:"1#{n} kHz|#{n} kHz",megahertz:"1#{n} MHz|#{n} MHz","astronomical-unit":"1#{n} au|#{n} au",centimeter:"1#{n} cm|#{n} cm",decimeter:"1#{n} dm|#{n} dm",fathom:"#{n} fm",foot:"1#{n} ft|#{n} ft",furlong:"#{n} fur",inch:"1#{n} in|#{n} in",kilometer:"1#{n} km|#{n} km",
"light-year":"1#{n} a. l.|#{n} a. l.",meter:"1#{n} m|#{n} m",micrometer:"1#{n} \u00b5m|#{n} \u00b5m",mile:"1#{n} mi|#{n} mi",millimeter:"1#{n} mm|#{n} mm",nanometer:"1#{n} nm|#{n} nm",nauticalmile:"1#{n} M|#{n} M",parsec:"1#{n} pc|#{n} pc",picometer:"1#{n} pm|#{n} pm",yard:"1#{n} yd|#{n} yd",lux:"1#{n} lx|#{n} lx",carat:"1#{n} c|#{n} c",gram:"1#{n} g|#{n} g",kilogram:"1#{n} kg|#{n} kg","metric ton":"1#{n} t|#{n} t",microgram:"1#{n} \u00b5g|#{n} \u00b5g",milligram:"1#{n} mg|#{n} mg",ounce:"1#{n} oz|#{n} oz",
"ounce-troy":"1#{n} oz tr|#{n} oz tr",pound:"1#{n} lb|#{n} lb",stone:"#{n} st","long ton":"1#{n} ton|#{n} ton",gigawatt:"1#{n} GW|#{n} GW",horsepower:"1#{n} CV|#{n} CV",kilowatt:"1#{n} kW|#{n} kW",megawatt:"1#{n} MW|#{n} MW",milliwatt:"1#{n} mW|#{n} mW",watt:"1#{n} W|#{n} W",hectopascal:"1#{n} hPa|#{n} hPa","inch-hg":"1#{n} inHg|#{n} inHg",millibar:"1#{n} mbar|#{n} mbar","millimeter-of-mercury":"1#{n} mmHg|#{n} mmHg","pound-per-square-inch":"1#{n} psi|#{n} psi",karat:"1#{n} c|#{n} c","kilometer/hour":"1#{n} km/h|#{n} km/h",
"meters/second":"1#{n} m/s|#{n} m/s","miles/hour":"1#{n} mi/h|#{n} mi/h",celsius:"1#{n} \u00b0C|#{n} \u00b0C",fahrenheit:"1#{n} \u00b0F|#{n} \u00b0F",kelvin:"1#{n} K|#{n} K","acre-foot":"1#{n} ac ft|#{n} ac ft",bushel:"#{n} bu",centiliter:"1#{n} cl|#{n} cl","cubic-centimeter":"1#{n} cm\u00b3|#{n} cm\u00b3","cubic foot":"1#{n} ft\u00b3|#{n} ft\u00b3","cubic inch":"1#{n} in\u00b3|#{n} in\u00b3","cubic-kilometer":"1#{n} km\u00b3|#{n} km\u00b3","cubic meter":"1#{n} m\u00b3|#{n} m\u00b3","cubic-mile":"1#{n} mi\u00b3|#{n} mi\u00b3",
"cubic-yard":"1#{n} yd\u00b3|#{n} yd\u00b3",cup:"1#{n} tza.|#{n} tza.",deciliter:"1#{n} dl|#{n} dl","us ounce":"1#{n} fl oz|#{n} fl oz",gallon:"1#{n} gal|#{n} gal",hectoliter:"1#{n} hl|#{n} hl",liter:"1#{n} l|#{n} l",megaliter:"1#{n} Ml|#{n} Ml",milliliter:"1#{n} ml|#{n} ml",pint:"1#{n} pt|#{n} pt",quart:"1#{n} qt|#{n} qt",tbsp:"1#{n} cd.|#{n} cda.",tsp:"1#{n} cdta.|#{n} cdta.",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",
petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s",
"miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp","imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_es_MX={unitfmt:{"long":{"g-force":"1#{n} unidad de fuerza gravitacional|#{n} unidades de fuerza gravitacional","meter-per-second-squared":"1#{n} metro por segundo al cuadrado|#{n} metros por segundo al cuadrado","arc-minute":"1#{n} minuto|#{n} minutos","arc-second":"1#{n} segundo|#{n} segundos",degree:"1#{n} grado|#{n} grados",radian:"1#{n} radi\u00e1n|#{n} radianes",acre:"1#{n} acre|#{n} acres",hectare:"1#{n} hect\u00e1rea|#{n} hect\u00e1reas","square centimeter":"1#{n} cent\u00edmetro cuadrado|#{n} cent\u00edmetros cuadrados",
"square foot":"1#{n} pie cuadrado|#{n} pies cuadrados","square inch":"1#{n} pulgada cuadrada|#{n} pulgadas cuadradas","square km":"1#{n} kil\u00f3metro cuadrado|#{n} kil\u00f3metros cuadrados","square meter":"1#{n} metro cuadrado|#{n} metros cuadrados","square mile":"1#{n} milla cuadrada|#{n} millas cuadradas","square yard":"1#{n} yarda cuadrada|#{n} yardas cuadradas","liter-per-kilometer":"1#{n} litro por kil\u00f3metro|#{n} litros por kil\u00f3metro",mpg:"1#{n} milla por gal\u00f3n|#{n} millas por gal\u00f3n",
bit:"1#{n} bit|#{n} bits","byte":"1#{n} byte|#{n} bytes",gigabit:"1#{n} gigabit|#{n} gigabits",gigabyte:"1#{n} gigabyte|#{n} gigabytes",kilobit:"1#{n} kilobit|#{n} kilobits",kilobyte:"1#{n} kilobyte|#{n} kilobytes",megabit:"1#{n} megabit|#{n} megabits",megabyte:"1#{n} megabyte|#{n} megabytes",terabit:"1#{n} terabit|#{n} terabits",terabyte:"1#{n} terabyte|#{n} terabytes",day:"1#{n} d\u00eda|#{n} d\u00edas",hour:"1#{n} hora|#{n} horas",microsecond:"1#{n} microsegundo|#{n} microsegundos",millisecond:"1#{n} milisegundo|#{n} milisegundos",
minute:"1#{n} minuto|#{n} minutos",month:"1#{n} mes|#{n} meses",nanosecond:"1#{n} nanosegundo|#{n} nanosegundos",second:"1#{n} segundo|#{n} segundos",week:"1#{n} semana|#{n} semanas",year:"1#{n} a\u00f1o|#{n} a\u00f1os",ampere:"1#{n} amperio|#{n} amperios",milliampere:"1#{n} miliamperio|#{n} miliamperios",ohm:"1#{n} ohmio|#{n} ohmios",volt:"1#{n} voltio|#{n} voltios",calorie:"1#{n} calor\u00eda|#{n} calor\u00edas",joule:"1#{n} julio|#{n} julios",kilocalorie:"1#{n} kilocalor\u00eda|#{n} kilocalor\u00edas",
kilojoule:"1#{n} kilojulio|#{n} kilojulios","kilowatt hour":"1#kilowatt-hora|#{n} kilowatts-hora",gigahertz:"1#{n} gigahercio|#{n} gigahercios",hertz:"1#{n} hercio|#{n} hercios",kilohertz:"1#{n} kilohercio|#{n} kilohercios",megahertz:"1#{n} megahercio|#{n} megahercios","astronomical-unit":"1#{n} unidad astron\u00f3mica|#{n} unidades astron\u00f3micas",centimeter:"1#{n} cent\u00edmetro|#{n} cent\u00edmetros",decimeter:"1#{n} dec\u00edmetro|#{n} dec\u00edmetros",fathom:"#{n} fm",foot:"1#{n} pie|#{n} pies",
furlong:"#{n} fur",inch:"1#{n} pulgada|#{n} pulgadas",kilometer:"1#{n} kil\u00f3metro|#{n} kil\u00f3metros","light-year":"1#{n} a\u00f1o luz|#{n} a\u00f1os luz",meter:"1#{n} metro|#{n} metros",micrometer:"1#{n} micrometro|#{n} micrometros",mile:"1#{n} milla|#{n} millas",millimeter:"1#{n} mil\u00edmetro|#{n} mil\u00edmetros",nanometer:"1#{n} nan\u00f3metro|#{n} nan\u00f3metros",nauticalmile:"1#{n} milla na\u00fatica|#{n} millas na\u00faticas",parsec:"1#{n} p\u00e1rsec|#{n} p\u00e1rsecs",picometer:"1#{n} pic\u00f3metro|#{n} pic\u00f3metros",
yard:"1#{n} yarda|#{n} yardas",lux:"1#{n} lux|#{n} luxes",carat:"1#{n} quilate|#{n} quilates",gram:"1#{n} gramo|#{n} gramos",kilogram:"1#{n} kilogramo|#{n} kilogramos","metric ton":"1#{n} tonelada m\u00e9trica|#{n} toneladas m\u00e9tricas",microgram:"1#{n} microgramo|#{n} microgramos",milligram:"1#{n} miligramo|#{n} miligramos",ounce:"1#{n} onza|#{n} onzas","ounce-troy":"1#{n} onza troy|#{n} onzas troy",pound:"1#{n} libra|#{n} libras",stone:"#{n} st","long ton":"1#{n} tonelada|#{n} toneladas",gigawatt:"1#{n} gigavatio|#{n} gigavatios",
horsepower:"1#{n} caballo de vapor|#{n} caballos de vapor",kilowatt:"1#{n} kilovatio|#{n} kilovatios",megawatt:"1#{n} megavatio|#{n} megavatios",milliwatt:"1#{n} miliwatt|#{n} miliwatts",watt:"1#{n} vatio|#{n} vatios",hectopascal:"1#{n} hectopascal|#{n} hectopascales","inch-hg":"1#{n} pulgada de mercurio|#{n} pulgadas de mercurio",millibar:"1#{n} milibar|#{n} milibares","millimeter-of-mercury":"1#{n} mil\u00edmetro de mercurio|#{n} mil\u00edmetros de mercurio","pound-per-square-inch":"1#{n} libra por pulgada cuadrada|#{n} libras por pulgada cuadrada",
karat:"1#{n} quilate|#{n} quilates","kilometer/hour":"1#{n} kil\u00f3metro por hora|#{n} kil\u00f3metros por hora","meters/second":"1#{n} metro por segundo|#{n} metros por segundo","miles/hour":"1#{n} milla por hora|#{n} millas por hora",celsius:"1#{n} grado Celsius|#{n} grados Celsius",fahrenheit:"1#{n} grado Fahrenheit|#{n} grados Fahrenheit",kelvin:"1#kelvin|#{n} kelvines","acre-foot":"1#{n} acre-pie|#{n} acre-pies",bushel:"#{n} bu",centiliter:"1#{n} centilitro|#{n} centilitros","cubic-centimeter":"1#{n} cent\u00edmetro c\u00fabico|#{n} cent\u00edmetros c\u00fabicos",
"cubic foot":"1#{n} pie c\u00fabico|#{n} pies c\u00fabicos","cubic inch":"1#{n} pulgada c\u00fabica|#{n} pulgadas c\u00fabicas","cubic-kilometer":"1#{n} kil\u00f3metro c\u00fabico|#{n} kil\u00f3metros c\u00fabicos","cubic meter":"1#{n} metro c\u00fabico|#{n} metros c\u00fabicos","cubic-mile":"1#{n} milla c\u00fabica|#{n} millas c\u00fabicas","cubic-yard":"1#{n} yarda c\u00fabica|#{n} yardas c\u00fabicas",cup:"1#{n} taza|#{n} tazas",deciliter:"1#{n} decilitro|#{n} decilitros","us ounce":"1#{n} onza l\u00edquida|#{n} onzas l\u00edquidas",
gallon:"1#{n} gal\u00f3n|#{n} galones",hectoliter:"1#{n} hectolitro|#{n} hectolitros",liter:"1#{n} litro|#{n} litros",megaliter:"1#{n} megalitro|#{n} megalitros",milliliter:"1#{n} mililitro|#{n} mililitros",pint:"1#{n} pinta|#{n} pintas",quart:"1#{n} cuarto|#{n} cuartos",tbsp:"1#{n} cucharada|#{n} cucharadas",tsp:"1#{n} cucharadita|#{n} cucharaditas",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",
petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km",
"mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second","miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons",
"imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},"short":{"g-force":"1#{n} G|#{n} G","meter-per-second-squared":"1#{n} m/s\u00b2|#{n} m/s\u00b2","arc-minute":"1#{n} min|#{n} min","arc-second":"1#{n} s|#{n} s",degree:"1#{n}\u00b0|#{n}\u00b0",radian:"1#{n} rad|#{n} rad",acre:"1#{n} ac|#{n} ac",hectare:"1#{n} ha|#{n} ha",
"square centimeter":"1#{n} cm\u00b2|#{n} cm\u00b2","square foot":"1#{n} ft\u00b2|#{n} ft\u00b2","square inch":"1#{n} in\u00b2|#{n} in\u00b2","square km":"1#{n} km\u00b2|#{n} km\u00b2","square meter":"1#{n} m\u00b2|#{n} m\u00b2","square mile":"1#{n} mi\u00b2|#{n} mi\u00b2","square yard":"1#{n} yd\u00b2|#{n} yd\u00b2","liter-per-kilometer":"1#{n} l/km|#{n} l/km",mpg:"1#{n} mi/gal|#{n} mi/gal",bit:"1#{n} bit|#{n} bit","byte":"1#{n} byte|#{n} byte",gigabit:"1#{n} Gb|#{n} Gb",gigabyte:"1#{n} GB|#{n} GB",
kilobit:"1#{n} kb|#{n} kb",kilobyte:"1#{n} kB|#{n} kB",megabit:"1#{n} Mb|#{n} Mb",megabyte:"1#{n} MB|#{n} MB",terabit:"1#{n} Tb|#{n} Tb",terabyte:"1#{n} TB|#{n} TB",day:"1#{n} d\u00eda|#{n} d\u00edas",hour:"1#{n} h|#{n} h",microsecond:"1#{n} \u03bcs|#{n} \u03bcs",millisecond:"1#{n} ms|#{n} ms",minute:"1#{n} min|#{n} min",month:"1#{n} m|#{n} m",nanosecond:"1#{n} ns|#{n} ns",second:"1#{n} s|#{n} s",week:"1#{n} sem|#{n} sem",year:"1#{n} a|#{n} a",ampere:"1#{n} A|#{n} A",milliampere:"1#{n} mA|#{n} mA",
ohm:"1#{n} \u03a9|#{n} \u03a9",volt:"1#{n} V|#{n} V",calorie:"1#{n} cal|#{n} cal",joule:"1#{n} J|#{n} J",kilocalorie:"1#{n} kcal|#{n} kcal",kilojoule:"1#{n} kJ|#{n} kJ","kilowatt hour":"1#{n} kWh|#{n} kWh",gigahertz:"1#{n} GHz|#{n} GHz",hertz:"1#{n} Hz|#{n} Hz",kilohertz:"1#{n} kHz|#{n} kHz",megahertz:"1#{n} MHz|#{n} MHz","astronomical-unit":"1#{n} ua|#{n} ua",centimeter:"1#{n} cm|#{n} cm",decimeter:"1#{n} dm|#{n} dm",fathom:"#{n} fm",foot:"1#{n} ft|#{n} ft",furlong:"#{n} fur",inch:"1#{n} in|#{n} in",
kilometer:"1#{n} km|#{n} km","light-year":"1#{n} a. l.|#{n} a. l.",meter:"1#{n} m|#{n} m",micrometer:"1#{n} \u00b5m|#{n} \u00b5m",mile:"1#{n} mi|#{n} mi",millimeter:"1#{n} mm|#{n} mm",nanometer:"1#{n} Nm|#{n} Nm",nauticalmile:"1#{n} M|#{n} M",parsec:"1#{n} pc|#{n} pc",picometer:"1#{n} pm|#{n} pm",yard:"1#{n} yd|#{n} yd",lux:"1#{n} lx|#{n} lx",carat:"1#{n} CD|#{n} CD",gram:"1#{n} g|#{n} g",kilogram:"1#{n} kg|#{n} kg","metric ton":"1#{n} t|#{n} t",microgram:"1#{n} \u00b5g|#{n} \u00b5g",milligram:"1#{n} mg|#{n} mg",
ounce:"1#{n} oz|#{n} oz","ounce-troy":"1#{n} ozt|#{n} ozt",pound:"1#{n} lb|#{n} lb",stone:"#{n} st","long ton":"1#{n} tn|#{n} tn",gigawatt:"1#{n} GW|#{n} GW",horsepower:"1#{n} CV|#{n} CV",kilowatt:"1#{n} kW|#{n} kW",megawatt:"1#{n} MW|#{n} MW",milliwatt:"1#{n} mW|#{n} mW",watt:"1#{n} W|#{n} W",hectopascal:"1#{n} hPa|#{n} hPa","inch-hg":"1#{n} inHg|#{n} inHg",millibar:"1#{n} mbar|#{n} mbar","millimeter-of-mercury":"1#{n} mmHg|#{n} mmHg","pound-per-square-inch":"1#{n} psi|#{n} psi",karat:"1#{n} kt|#{n} kt",
"kilometer/hour":"1#{n} km/h|#{n} km/h","meters/second":"1#{n} m/s|#{n} m/s","miles/hour":"1#{n} mi/h|#{n} mi/h",celsius:"1#{n} \u00b0C|#{n} \u00b0C",fahrenheit:"1#{n} \u00b0F|#{n} \u00b0F",kelvin:"1#{n} K|#{n} K","acre-foot":"1#{n} ac ft|#{n} ac ft",bushel:"#{n} bu",centiliter:"1#{n} cl|#{n} cl","cubic-centimeter":"1#{n} cm\u00b3|#{n} cm\u00b3","cubic foot":"1#{n} ft\u00b3|#{n} ft\u00b3","cubic inch":"1#{n} in\u00b3|#{n} in\u00b3","cubic-kilometer":"1#{n} km\u00b3|#{n} km\u00b3","cubic meter":"1#{n} m\u00b3|#{n} m\u00b3",
"cubic-mile":"1#{n} mi\u00b3|#{n} mi\u00b3","cubic-yard":"1#{n} yd\u00b3|#{n} yd\u00b3",cup:"1#{n} tza.|#{n} tzas.",deciliter:"1#{n} dl|#{n} dl","us ounce":"1#{n} fl oz|#{n} fl oz",gallon:"1#{n} gal|#{n} gal",hectoliter:"1#{n} hl|#{n} hl",liter:"1#{n} l|#{n} l",megaliter:"1#{n} Ml|#{n} Ml",milliliter:"1#{n} ml|#{n} ml",pint:"1#{n} pt|#{n} pt",quart:"1#{n} qt|#{n} qt",tbsp:"1#{n} cda.|#{n} cdas.",tsp:"1#{n} cdta.|#{n} cdtas.",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",
gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",
knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp","imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_id={unitfmt:{"long":{"g-force":"#{n} g-force","meter-per-second-squared":"#{n} meter per detik persegi","arc-minute":"#{n} menit busur","arc-second":"#{n} detik busur",degree:"#{n} derajat",radian:"#{n} radian",acre:"#{n} acre",hectare:"#{n} hektar","square centimeter":"#{n} sentimeter persegi","square foot":"#{n} kaki persegi","square inch":"#{n} inci persegi","square km":"#{n} kilometer persegi","square meter":"#{n} meter persegi","square mile":"#{n} mil persegi","square yard":"#{n} yard persegi",
"liter-per-kilometer":"#{n} liter per kilometer",mpg:"#{n} mil per galon",bit:"#{n} bit","byte":"#{n} byte",gigabit:"#{n} gigabit",gigabyte:"#{n} gigabyte",kilobit:"#{n} kilobit",kilobyte:"#{n} kilobyte",megabit:"#{n} megabit",megabyte:"#{n} megabyte",terabit:"#{n} terabit",terabyte:"#{n} terabyte",day:"#{n} hari",hour:"#{n} jam",microsecond:"#{n} mikrodetik",millisecond:"#{n} milidetik",minute:"#{n} menit",month:"#{n} bulan",nanosecond:"#{n} nanodetik",second:"#{n} detik",week:"#{n} minggu",year:"#{n} tahun",
ampere:"#{n} ampere",milliampere:"#{n} miliampere",ohm:"#{n} ohm",volt:"#{n} volt",calorie:"#{n} Kalori",joule:"#{n} joule",kilocalorie:"#{n} kilokalori",kilojoule:"#{n} kilojoule","kilowatt hour":"#{n} kilowatt-jam",gigahertz:"#{n} gigahertz",hertz:"#{n} hertz",kilohertz:"#{n} kilohertz",megahertz:"#{n} megahertz","astronomical-unit":"#{n} satuan astronomi",centimeter:"#{n} sentimeter",decimeter:"#{n} desimeter",fathom:"#{n} fm",foot:"#{n} kaki",furlong:"#{n} fur",inch:"#{n} inci",kilometer:"#{n} kilometer",
"light-year":"#{n} tahun cahaya",meter:"#{n} meter",micrometer:"#{n} mikrometer",mile:"#{n} mil",millimeter:"#{n} milimeter",nanometer:"#{n} nanometer",nauticalmile:"#{n} mil laut",parsec:"#{n} parsec",picometer:"#{n} pikometer",yard:"#{n} yard",lux:"#{n} lux",carat:"#{n} karat",gram:"#{n} gram",kilogram:"#{n} kilogram","metric ton":"#{n} metrik ton",microgram:"#{n} mikrogram",milligram:"#{n} miligram",ounce:"#{n} ons","ounce-troy":"#{n} troy ons",pound:"#{n} pon",stone:"#{n} st","long ton":"#{n} ton",
gigawatt:"#{n} gigawatt",horsepower:"#{n} daya kuda",kilowatt:"#{n} kilowatt",megawatt:"#{n} megawatt",milliwatt:"#{n} miliwatt",watt:"#{n} watt",hectopascal:"#{n} hektopaskal","inch-hg":"#{n} inci merkuri",millibar:"#{n} milibar","millimeter-of-mercury":"#{n} milimeter merkuri","pound-per-square-inch":"#{n} pon per inci persegi",karat:"#{n} karat","kilometer/hour":"#{n} kilometer per jam","meters/second":"#{n} meter per detik","miles/hour":"#{n} mil per jam",celsius:"#{n} derajat Celsius",fahrenheit:"#{n} derajat Fahrenheit",
kelvin:"#{n} kelvin","acre-foot":"#{n} acre-feet",bushel:"#{n} bu",centiliter:"#{n} sentiliter","cubic-centimeter":"#{n} sentimeter kubik","cubic foot":"#{n} kaki kubik","cubic inch":"#{n} inci kubik","cubic-kilometer":"#{n} kilometer kubik","cubic meter":"#{n} meter kubik","cubic-mile":"#{n} mil kubik","cubic-yard":"#{n} yard kubik",cup:"#{n} cup",deciliter:"#{n} desiliter","us ounce":"#{n} fluid ounce",gallon:"#{n} galon",hectoliter:"#{n} hektoliter",liter:"#{n} liter",megaliter:"#{n} megaliter",
milliliter:"#{n} mililiter",pint:"#{n} pint",quart:"#{n} quart",tbsp:"#{n} sendok makan",tsp:"#{n} sendok teh",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",
gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second",
"miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},
"short":{"g-force":"#{n} G","meter-per-second-squared":"#{n} m/s\u00b2","arc-minute":"#{n} mnt busur","arc-second":"#{n} dtk busur",degree:"#{n}\u00b0",radian:"#{n} rad",acre:"#{n} ac",hectare:"#{n} ha","square centimeter":"#{n} cm\u00b2","square foot":"#{n} ft\u00b2","square inch":"#{n} in\u00b2","square km":"#{n} km\u00b2","square meter":"#{n} m\u00b2","square mile":"#{n} mi\u00b2","square yard":"#{n} yd\u00b2","liter-per-kilometer":"#{n} L/km",mpg:"#{n} mpg",bit:"#{n} bit","byte":"#{n} byte",gigabit:"#{n} Gb",
gigabyte:"#{n} GB",kilobit:"#{n} kb",kilobyte:"#{n} kB",megabit:"#{n} Mb",megabyte:"#{n} MB",terabit:"#{n} Tb",terabyte:"#{n} TB",day:"#{n} hr",hour:"#{n} j",microsecond:"#{n} \u03bcd",millisecond:"#{n} md",minute:"#{n} mnt",month:"#{n} bln",nanosecond:"#{n} ndtk",second:"#{n} dtk",week:"#{n} mgg",year:"#{n} thn",ampere:"#{n} A",milliampere:"#{n} mA",ohm:"#{n} \u03a9",volt:"#{n} V",calorie:"#{n} Kal",joule:"#{n} J",kilocalorie:"#{n} kkal",kilojoule:"#{n} kJ","kilowatt hour":"#{n} kWh",gigahertz:"#{n} GHz",
hertz:"#{n} Hz",kilohertz:"#{n} kHz",megahertz:"#{n} MHz","astronomical-unit":"#{n} sa",centimeter:"#{n} cm",decimeter:"#{n} dm",fathom:"#{n} fm",foot:"#{n} ft",furlong:"#{n} fur",inch:"#{n} in",kilometer:"#{n} km","light-year":"#{n} ly",meter:"#{n} m",micrometer:"#{n} \u00b5m",mile:"#{n} mi",millimeter:"#{n} mm",nanometer:"#{n} nm",nauticalmile:"#{n} nmi",parsec:"#{n} pc",picometer:"#{n} pm",yard:"#{n} yd",lux:"#{n} lx",carat:"#{n} CD",gram:"#{n} g",kilogram:"#{n} kg","metric ton":"#{n} t",microgram:"#{n} \u00b5g",
milligram:"#{n} mg",ounce:"#{n} oz","ounce-troy":"#{n} oz t",pound:"#{n} lb",stone:"#{n} st","long ton":"#{n} tn",gigawatt:"#{n} GW",horsepower:"#{n} hp",kilowatt:"#{n} kW",megawatt:"#{n} MW",milliwatt:"#{n} mW",watt:"#{n} W",hectopascal:"#{n} hPa","inch-hg":"#{n} inHg",millibar:"#{n} mbar","millimeter-of-mercury":"#{n} mm Hg","pound-per-square-inch":"#{n} psi",karat:"#{n} kt","kilometer/hour":"#{n} kph","meters/second":"#{n} m/s","miles/hour":"#{n} mph",celsius:"#{n}\u00b0C",fahrenheit:"#{n}\u00b0F",
kelvin:"#{n} K","acre-foot":"#{n} ac ft",bushel:"#{n} bu",centiliter:"#{n} cL","cubic-centimeter":"#{n} cm\u00b3","cubic foot":"#{n} ft\u00b3","cubic inch":"#{n} in\u00b3","cubic-kilometer":"#{n} km\u00b3","cubic meter":"#{n} m\u00b3","cubic-mile":"#{n} mi\u00b3","cubic-yard":"#{n} yd\u00b3",cup:"#{n} c",deciliter:"#{n} dL","us ounce":"#{n} fl oz",gallon:"#{n} gal",hectoliter:"#{n} hL",liter:"#{n} l",megaliter:"#{n} ML",milliliter:"#{n} mL",pint:"#{n} pt",quart:"#{n} qt",tbsp:"#{n} sdm",tsp:"#{n} sdt",
decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)",
"short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp","imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt",
"imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_id_ID={unitfmt:{"long":{"g-force":"#{n} g-force","meter-per-second-squared":"#{n} meter per detik persegi","arc-minute":"#{n} menit busur","arc-second":"#{n} detik busur",degree:"#{n} derajat",radian:"#{n} radian",acre:"#{n} acre",hectare:"#{n} hektar","square centimeter":"#{n} sentimeter persegi","square foot":"#{n} kaki persegi","square inch":"#{n} inci persegi","square km":"#{n} kilometer persegi","square meter":"#{n} meter persegi","square mile":"#{n} mil persegi","square yard":"#{n} yard persegi",
"liter-per-kilometer":"#{n} liter per kilometer",mpg:"#{n} mil per galon",bit:"#{n} bit","byte":"#{n} byte",gigabit:"#{n} gigabit",gigabyte:"#{n} gigabyte",kilobit:"#{n} kilobit",kilobyte:"#{n} kilobyte",megabit:"#{n} megabit",megabyte:"#{n} megabyte",terabit:"#{n} terabit",terabyte:"#{n} terabyte",day:"#{n} hari",hour:"#{n} jam",microsecond:"#{n} mikrodetik",millisecond:"#{n} milidetik",minute:"#{n} menit",month:"#{n} bulan",nanosecond:"#{n} nanodetik",second:"#{n} detik",week:"#{n} minggu",year:"#{n} tahun",
ampere:"#{n} ampere",milliampere:"#{n} miliampere",ohm:"#{n} ohm",volt:"#{n} volt",calorie:"#{n} Kalori",joule:"#{n} joule",kilocalorie:"#{n} kilokalori",kilojoule:"#{n} kilojoule","kilowatt hour":"#{n} kilowatt-jam",gigahertz:"#{n} gigahertz",hertz:"#{n} hertz",kilohertz:"#{n} kilohertz",megahertz:"#{n} megahertz","astronomical-unit":"#{n} satuan astronomi",centimeter:"#{n} sentimeter",decimeter:"#{n} desimeter",fathom:"#{n} fm",foot:"#{n} kaki",furlong:"#{n} fur",inch:"#{n} inci",kilometer:"#{n} kilometer",
"light-year":"#{n} tahun cahaya",meter:"#{n} meter",micrometer:"#{n} mikrometer",mile:"#{n} mil",millimeter:"#{n} milimeter",nanometer:"#{n} nanometer",nauticalmile:"#{n} mil laut",parsec:"#{n} parsec",picometer:"#{n} pikometer",yard:"#{n} yard",lux:"#{n} lux",carat:"#{n} karat",gram:"#{n} gram",kilogram:"#{n} kilogram","metric ton":"#{n} metrik ton",microgram:"#{n} mikrogram",milligram:"#{n} miligram",ounce:"#{n} ons","ounce-troy":"#{n} troy ons",pound:"#{n} pon",stone:"#{n} st","long ton":"#{n} ton",
gigawatt:"#{n} gigawatt",horsepower:"#{n} daya kuda",kilowatt:"#{n} kilowatt",megawatt:"#{n} megawatt",milliwatt:"#{n} miliwatt",watt:"#{n} watt",hectopascal:"#{n} hektopaskal","inch-hg":"#{n} inci merkuri",millibar:"#{n} milibar","millimeter-of-mercury":"#{n} milimeter merkuri","pound-per-square-inch":"#{n} pon per inci persegi",karat:"#{n} karat","kilometer/hour":"#{n} kilometer per jam","meters/second":"#{n} meter per detik","miles/hour":"#{n} mil per jam",celsius:"#{n} derajat Celsius",fahrenheit:"#{n} derajat Fahrenheit",
kelvin:"#{n} kelvin","acre-foot":"#{n} acre-feet",bushel:"#{n} bu",centiliter:"#{n} sentiliter","cubic-centimeter":"#{n} sentimeter kubik","cubic foot":"#{n} kaki kubik","cubic inch":"#{n} inci kubik","cubic-kilometer":"#{n} kilometer kubik","cubic meter":"#{n} meter kubik","cubic-mile":"#{n} mil kubik","cubic-yard":"#{n} yard kubik",cup:"#{n} cup",deciliter:"#{n} desiliter","us ounce":"#{n} fluid ounce",gallon:"#{n} galon",hectoliter:"#{n} hektoliter",liter:"#{n} liter",megaliter:"#{n} megaliter",
milliliter:"#{n} mililiter",pint:"#{n} pint",quart:"#{n} quart",tbsp:"#{n} sendok makan",tsp:"#{n} sendok teh",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",
gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second",
"miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},
"short":{"g-force":"#{n} G","meter-per-second-squared":"#{n} m/s\u00b2","arc-minute":"#{n} mnt busur","arc-second":"#{n} dtk busur",degree:"#{n}\u00b0",radian:"#{n} rad",acre:"#{n} ac",hectare:"#{n} ha","square centimeter":"#{n} cm\u00b2","square foot":"#{n} ft\u00b2","square inch":"#{n} in\u00b2","square km":"#{n} km\u00b2","square meter":"#{n} m\u00b2","square mile":"#{n} mi\u00b2","square yard":"#{n} yd\u00b2","liter-per-kilometer":"#{n} L/km",mpg:"#{n} mpg",bit:"#{n} bit","byte":"#{n} byte",gigabit:"#{n} Gb",
gigabyte:"#{n} GB",kilobit:"#{n} kb",kilobyte:"#{n} kB",megabit:"#{n} Mb",megabyte:"#{n} MB",terabit:"#{n} Tb",terabyte:"#{n} TB",day:"#{n} hr",hour:"#{n} j",microsecond:"#{n} \u03bcd",millisecond:"#{n} md",minute:"#{n} mnt",month:"#{n} bln",nanosecond:"#{n} ndtk",second:"#{n} dtk",week:"#{n} mgg",year:"#{n} thn",ampere:"#{n} A",milliampere:"#{n} mA",ohm:"#{n} \u03a9",volt:"#{n} V",calorie:"#{n} Kal",joule:"#{n} J",kilocalorie:"#{n} kkal",kilojoule:"#{n} kJ","kilowatt hour":"#{n} kWh",gigahertz:"#{n} GHz",
hertz:"#{n} Hz",kilohertz:"#{n} kHz",megahertz:"#{n} MHz","astronomical-unit":"#{n} sa",centimeter:"#{n} cm",decimeter:"#{n} dm",fathom:"#{n} fm",foot:"#{n} ft",furlong:"#{n} fur",inch:"#{n} in",kilometer:"#{n} km","light-year":"#{n} ly",meter:"#{n} m",micrometer:"#{n} \u00b5m",mile:"#{n} mi",millimeter:"#{n} mm",nanometer:"#{n} nm",nauticalmile:"#{n} nmi",parsec:"#{n} pc",picometer:"#{n} pm",yard:"#{n} yd",lux:"#{n} lx",carat:"#{n} CD",gram:"#{n} g",kilogram:"#{n} kg","metric ton":"#{n} t",microgram:"#{n} \u00b5g",
milligram:"#{n} mg",ounce:"#{n} oz","ounce-troy":"#{n} oz t",pound:"#{n} lb",stone:"#{n} st","long ton":"#{n} tn",gigawatt:"#{n} GW",horsepower:"#{n} hp",kilowatt:"#{n} kW",megawatt:"#{n} MW",milliwatt:"#{n} mW",watt:"#{n} W",hectopascal:"#{n} hPa","inch-hg":"#{n} inHg",millibar:"#{n} mbar","millimeter-of-mercury":"#{n} mm Hg","pound-per-square-inch":"#{n} psi",karat:"#{n} kt","kilometer/hour":"#{n} kph","meters/second":"#{n} m/s","miles/hour":"#{n} mph",celsius:"#{n}\u00b0C",fahrenheit:"#{n}\u00b0F",
kelvin:"#{n} K","acre-foot":"#{n} ac ft",bushel:"#{n} bu",centiliter:"#{n} cL","cubic-centimeter":"#{n} cm\u00b3","cubic foot":"#{n} ft\u00b3","cubic inch":"#{n} in\u00b3","cubic-kilometer":"#{n} km\u00b3","cubic meter":"#{n} m\u00b3","cubic-mile":"#{n} mi\u00b3","cubic-yard":"#{n} yd\u00b3",cup:"#{n} c",deciliter:"#{n} dL","us ounce":"#{n} fl oz",gallon:"#{n} gal",hectoliter:"#{n} hL",liter:"#{n} l",megaliter:"#{n} ML",milliliter:"#{n} mL",pint:"#{n} pt",quart:"#{n} qt",tbsp:"#{n} sdm",tsp:"#{n} sdt",
decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)",
"short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp","imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt",
"imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_it={unitfmt:{"long":{"g-force":"1#{n} forza g|#{n} forza g","meter-per-second-squared":"1#{n} metro al secondo quadrato|#{n} metri al secondo quadrato","arc-minute":"1#{n} primo d'arco|#{n} primi d'arco","arc-second":"1#{n} secondo d'arco|#{n} secondi d'arco",degree:"1#{n} grado|#{n} gradi",radian:"1#{n} radiante|#{n} radianti",acre:"1#{n} acro|#{n} acri",hectare:"1#{n} ettaro|#{n} ettari","square centimeter":"1#{n} centimetro quadrato|#{n} centimetri quadrati","square foot":"1#{n} piede quadrato|#{n} piedi quadrati",
"square inch":"1#{n} pollice quadrato|#{n} pollici quadrati","square km":"1#{n} chilometro quadrato|#{n} chilometri quadrati","square meter":"1#{n} metro quadrato|#{n} metri quadrati","square mile":"1#{n} miglio quadrato|#{n} miglia quadrate","square yard":"1#{n} iarda quadrata|#{n} iarde quadrate","liter-per-kilometer":"1#{n} litro per chilometro|#{n} litri per chilometro",mpg:"1#{n} miglio per gallone|#{n} miglia per gallone",bit:"1#{n} bit|#{n} bit","byte":"1#{n} byte|#{n} byte",gigabit:"1#{n} gigabit|#{n} gigabit",
gigabyte:"1#{n} gigabyte|#{n} gigabyte",kilobit:"1#{n} kilobit|#{n} kilobit",kilobyte:"1#{n} kilobyte|#{n} kilobyte",megabit:"1#{n} megabit|#{n} megabit",megabyte:"1#{n} megabyte|#{n} megabyte",terabit:"1#{n} terabit|#{n} terabit",terabyte:"1#{n} terabyte|#{n} terabyte",day:"1#{n} giorno|#{n} giorni",hour:"1#{n} ora|#{n} ore",microsecond:"1#{n} microsecondo|#{n} microsecondi",millisecond:"1#{n} millisecondo|#{n} millisecondi",minute:"1#{n} minuto|#{n} minuti",month:"1#{n} mese|#{n} mesi",nanosecond:"1#{n} nanosecondo|#{n} nanosecondi",
second:"1#{n} secondo|#{n} secondi",week:"1#{n} settimana|#{n} settimane",year:"1#{n} anno|#{n} anni",ampere:"1#{n} ampere|#{n} ampere",milliampere:"1#{n} milliampere|#{n} milliampere",ohm:"1#{n} ohm|#{n} ohm",volt:"1#{n} volt|#{n} volt",calorie:"1#{n} caloria|#{n} calorie",joule:"1#{n} joule|#{n} joule",kilocalorie:"1#{n} chilocaloria|#{n} chilocalorie",kilojoule:"1#{n} kilojoule|#{n} kilojoule","kilowatt hour":"1#{n} chilowattora|#{n} chilowattora",gigahertz:"1#{n} gigahertz|#{n} gigahertz",hertz:"1#{n} hertz|#{n} hertz",
kilohertz:"1#{n} kilohertz|#{n} kilohertz",megahertz:"1#{n} megahertz|#{n} megahertz","astronomical-unit":"1#{n} unit\u00e0 astronomica|#{n} unit\u00e0 astronomiche",centimeter:"1#{n} centimetro|#{n} centimetri",decimeter:"1#{n} decimetro|#{n} decimetri",fathom:"#{n} fm",foot:"1#{n} piede|#{n} piedi",furlong:"#{n} fur",inch:"1#{n} pollice|#{n} pollici",kilometer:"1#{n} chilometro|#{n} chilometri","light-year":"1#{n} anno luce|#{n} anni luce",meter:"1#{n} metro|#{n} metri",micrometer:"1#{n} micrometro|#{n} micrometri",
mile:"1#{n} miglio|#{n} miglia",millimeter:"1#{n} millimetro|#{n} millimetri",nanometer:"1#{n} nanometro|#{n} nanometri",nauticalmile:"1#{n} miglio nautico|#{n} miglia nautiche",parsec:"1#{n} parsec|#{n} parsec",picometer:"1#{n} picometro|#{n} picometri",yard:"1#{n} iarda|#{n} iarde",lux:"1#{n} lux|#{n} lux",carat:"1#{n} carato|#{n} carati",gram:"1#{n} grammo|#{n} grammi",kilogram:"1#{n} chilogrammo|#{n} chilogrammi","metric ton":"1#{n} tonnellata metrica|#{n} tonnellate metriche",microgram:"1#{n} microgrammo|#{n} microgrammi",
milligram:"1#{n} milligrammo|#{n} milligrammi",ounce:"1#{n} oncia|#{n} once","ounce-troy":"1#{n} oncia troy|#{n} once troy",pound:"1#{n} libbra|#{n} libbre",stone:"#{n} st","long ton":"1#{n} tonnellata|#{n} tonnellate",gigawatt:"1#{n} gigawatt|#{n} gigawatt",horsepower:"1#{n} cavallo vapore|#{n} cavalli vapore",kilowatt:"1#{n} kilowatt|#{n} kilowatt",megawatt:"1#{n} megawatt|#{n} megawatt",milliwatt:"1#{n} milliwatt|#{n} milliwatt",watt:"1#{n} watt|#{n} watt",hectopascal:"1#{n} ettopascal|#{n} ettopascal",
"inch-hg":"1#{n} pollice di mercurio|#{n} pollici di mercurio",millibar:"1#{n} millibar|#{n} millibar","millimeter-of-mercury":"1#{n} millimetro di mercurio|#{n} millimetri di mercurio","pound-per-square-inch":"1#{n} libbra per pollice quadrato|#{n} libbre per pollice quadrato",karat:"1#{n} carato|#{n} carati","kilometer/hour":"1#{n} chilometro orario|#{n} chilometri orari","meters/second":"1#{n} metro al secondo|#{n} metri al secondo","miles/hour":"1#{n} miglio all\u2019ora|#{n} miglia all\u2019ora",
celsius:"1#{n} grado Celsius|#{n} gradi Celsius",fahrenheit:"1#{n} grado Fahrenheit|#{n} gradi Fahrenheit",kelvin:"1#{n} Kelvin|#{n} Kelvin","acre-foot":"1#{n} acre-foot|#{n} acre-feet",bushel:"#{n} bu",centiliter:"1#{n} centilitro|#{n} centilitri","cubic-centimeter":"1#{n} centimetro cubo|#{n} centimetri cubi","cubic foot":"1#{n} piede cubo|#{n} piedi cubi","cubic inch":"1#{n} pollice cubo|#{n} pollici cubi","cubic-kilometer":"1#{n} chilometro cubo|#{n} chilometri cubi","cubic meter":"1#{n} metro cubo|#{n} metri cubi",
"cubic-mile":"1#{n} miglio cubo|#{n} miglia cube","cubic-yard":"1#{n} iarda cubica|#{n} iarde cubiche",cup:"1#{n} tazza|#{n} tazze",deciliter:"1#{n} decilitro|#{n} decilitri","us ounce":"1#{n} oncia fluida|#{n} once fluide",gallon:"1#{n} gallone|#{n} galloni",hectoliter:"1#{n} ettolitro|#{n} ettolitri",liter:"1#{n} litro|#{n} litri",megaliter:"1#{n} megalitro|#{n} megalitri",milliliter:"1#{n} millilitro|#{n} millilitri",pint:"1#{n} pinta|#{n} pinte",quart:"1#{n} quarto|#{n} quarti",tbsp:"1#{n} cucchiaio da tavola|#{n} cucchiai da tavola",
tsp:"1#{n} cucchiaio da t\u00e8|#{n} cucchiai da t\u00e8",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",gigajoule:"1#{n} gigajoule|#{n} gigajoules",
"megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second",
"miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},
"short":{"g-force":"1#{n} G|#{n} G","meter-per-second-squared":"1#{n} m/s\u00b2|#{n} m/s\u00b2","arc-minute":"1#{n}\u2032|#{n}\u2032","arc-second":"1#{n}\u2033|#{n}\u2033",degree:"1#{n}\u00b0|#{n}\u00b0",radian:"1#{n} rad|#{n} rad",acre:"1#{n} ac|#{n} ac",hectare:"1#{n} ha|#{n} ha","square centimeter":"1#{n} cm\u00b2|#{n} cm\u00b2","square foot":"1#{n} ft\u00b2|#{n} ft\u00b2","square inch":"1#{n} in\u00b2|#{n} in\u00b2","square km":"1#{n} km\u00b2|#{n} km\u00b2","square meter":"1#{n} m\u00b2|#{n} m\u00b2",
"square mile":"1#{n} mi\u00b2|#{n} mi\u00b2","square yard":"1#{n} yd\u00b2|#{n} yd\u00b2","liter-per-kilometer":"1#{n} L/km|#{n} L/km",mpg:"1#{n} mpg|#{n} mpg",bit:"1#{n} bit|#{n} bit","byte":"1#{n} byte|#{n} byte",gigabit:"1#{n} Gb|#{n} Gb",gigabyte:"1#{n} GB|#{n} GB",kilobit:"1#{n} kb|#{n} kb",kilobyte:"1#{n} kB|#{n} kB",megabit:"1#{n} Mb|#{n} Mb",megabyte:"1#{n} MB|#{n} MB",terabit:"1#{n} Tb|#{n} Tb",terabyte:"1#{n} TB|#{n} TB",day:"1#{n} giorno|#{n} giorni",hour:"1#{n} h|#{n} h",microsecond:"1#{n} \u03bcs|#{n} \u03bcs",
millisecond:"1#{n} ms|#{n} ms",minute:"1#{n} min|#{n} min",month:"1#{n} mese|#{n} mesi",nanosecond:"1#{n} ns|#{n} ns",second:"1#{n} sec|#{n} sec",week:"1#{n} settimana|#{n} settimane",year:"1#{n} anno|#{n} anni",ampere:"1#{n} A|#{n} A",milliampere:"1#{n} mA|#{n} mA",ohm:"1#{n} \u03a9|#{n} \u03a9",volt:"1#{n} V|#{n} V",calorie:"1#{n} Cal|#{n} Cal",joule:"1#{n} J|#{n} J",kilocalorie:"1#{n} kcal|#{n} kcal",kilojoule:"1#{n} kJ|#{n} kJ","kilowatt hour":"1#{n} kWh|#{n} kWh",gigahertz:"1#{n} GHz|#{n} GHz",
hertz:"1#{n} Hz|#{n} Hz",kilohertz:"1#{n} kHz|#{n} kHz",megahertz:"1#{n} MHz|#{n} MHz","astronomical-unit":"1#{n} au|#{n} au",centimeter:"1#{n} cm|#{n} cm",decimeter:"1#{n} dm|#{n} dm",fathom:"#{n} fm",foot:"1#{n} ft|#{n} ft",furlong:"#{n} fur",inch:"1#{n} in|#{n} in",kilometer:"1#{n} km|#{n} km","light-year":"1#{n} al|#{n} al",meter:"1#{n} m|#{n} m",micrometer:"1#{n} \u00b5m|#{n} \u00b5m",mile:"1#{n} mi|#{n} mi",millimeter:"1#{n} mm|#{n} mm",nanometer:"1#{n} nm|#{n} nm",nauticalmile:"1#{n} nmi|#{n} nmi",
parsec:"1#{n} pc|#{n} pc",picometer:"1#{n} pm|#{n} pm",yard:"1#{n} yd|#{n} yd",lux:"1#{n} lx|#{n} lx",carat:"1#{n} kt|#{n} kt",gram:"1#{n} g|#{n} g",kilogram:"1#{n} kg|#{n} kg","metric ton":"1#{n} t|#{n} t",microgram:"1#{n} \u00b5g|#{n} \u00b5g",milligram:"1#{n} mg|#{n} mg",ounce:"1#{n} oz|#{n} oz","ounce-troy":"1#{n} ozt|#{n} ozt",pound:"1#{n} lb|#{n} lb",stone:"#{n} st","long ton":"1#{n} tn|#{n} tn",gigawatt:"1#{n} GW|#{n} GW",horsepower:"1#{n} hp|#{n} hp",kilowatt:"1#{n} kW|#{n} kW",megawatt:"1#{n} MW|#{n} MW",
milliwatt:"1#{n} mW|#{n} mW",watt:"1#{n} W|#{n} W",hectopascal:"1#{n} hPa|#{n} hPa","inch-hg":"1#{n} inHg|#{n} inHg",millibar:"1#{n} mbar|#{n} mbar","millimeter-of-mercury":"1#{n} mm Hg|#{n} mm Hg","pound-per-square-inch":"1#{n} psi|#{n} psi",karat:"1#{n} kt|#{n} kt","kilometer/hour":"1#{n} km/h|#{n} km/h","meters/second":"1#{n} m/s|#{n} m/s","miles/hour":"1#{n} mi/h|#{n} mi/h",celsius:"1#{n} \u00b0C|#{n} \u00b0C",fahrenheit:"1#{n} \u00b0F|#{n} \u00b0F",kelvin:"1#{n} K|#{n} K","acre-foot":"1#{n} ac ft|#{n} ac ft",
bushel:"#{n} bu",centiliter:"1#{n} cl|#{n} cl","cubic-centimeter":"1#{n} cm\u00b3|#{n} cm\u00b3","cubic foot":"1#{n} ft\u00b3|#{n} ft\u00b3","cubic inch":"1#{n} in\u00b3|#{n} in\u00b3","cubic-kilometer":"1#{n} km\u00b3|#{n} km\u00b3","cubic meter":"1#{n} m\u00b3|#{n} m\u00b3","cubic-mile":"1#{n} mi\u00b3|#{n} mi\u00b3","cubic-yard":"1#{n} yd\u00b3|#{n} yd\u00b3",cup:"1#{n} c|#{n} c",deciliter:"1#{n} dl|#{n} dl","us ounce":"1#{n} fl oz|#{n} fl oz",gallon:"1#{n} gal|#{n} gal",hectoliter:"1#{n} hl|#{n} hl",
liter:"1#{n} l|#{n} l",megaliter:"1#{n} Ml|#{n} Ml",milliliter:"1#{n} ml|#{n} ml",pint:"1#{n} pt|#{n} pt",quart:"1#{n} qt|#{n} qt",tbsp:"1#{n} tbsp|#{n} tbsp",tsp:"1#{n} tsp|#{n} tsp",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",gigajoule:"1#{n} GJ|#{n} GJ",
"megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp",
"imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_it_IT={unitfmt:{"long":{"g-force":"1#{n} forza g|#{n} forza g","meter-per-second-squared":"1#{n} metro al secondo quadrato|#{n} metri al secondo quadrato","arc-minute":"1#{n} primo d'arco|#{n} primi d'arco","arc-second":"1#{n} secondo d'arco|#{n} secondi d'arco",degree:"1#{n} grado|#{n} gradi",radian:"1#{n} radiante|#{n} radianti",acre:"1#{n} acro|#{n} acri",hectare:"1#{n} ettaro|#{n} ettari","square centimeter":"1#{n} centimetro quadrato|#{n} centimetri quadrati","square foot":"1#{n} piede quadrato|#{n} piedi quadrati",
"square inch":"1#{n} pollice quadrato|#{n} pollici quadrati","square km":"1#{n} chilometro quadrato|#{n} chilometri quadrati","square meter":"1#{n} metro quadrato|#{n} metri quadrati","square mile":"1#{n} miglio quadrato|#{n} miglia quadrate","square yard":"1#{n} iarda quadrata|#{n} iarde quadrate","liter-per-kilometer":"1#{n} litro per chilometro|#{n} litri per chilometro",mpg:"1#{n} miglio per gallone|#{n} miglia per gallone",bit:"1#{n} bit|#{n} bit","byte":"1#{n} byte|#{n} byte",gigabit:"1#{n} gigabit|#{n} gigabit",
gigabyte:"1#{n} gigabyte|#{n} gigabyte",kilobit:"1#{n} kilobit|#{n} kilobit",kilobyte:"1#{n} kilobyte|#{n} kilobyte",megabit:"1#{n} megabit|#{n} megabit",megabyte:"1#{n} megabyte|#{n} megabyte",terabit:"1#{n} terabit|#{n} terabit",terabyte:"1#{n} terabyte|#{n} terabyte",day:"1#{n} giorno|#{n} giorni",hour:"1#{n} ora|#{n} ore",microsecond:"1#{n} microsecondo|#{n} microsecondi",millisecond:"1#{n} millisecondo|#{n} millisecondi",minute:"1#{n} minuto|#{n} minuti",month:"1#{n} mese|#{n} mesi",nanosecond:"1#{n} nanosecondo|#{n} nanosecondi",
second:"1#{n} secondo|#{n} secondi",week:"1#{n} settimana|#{n} settimane",year:"1#{n} anno|#{n} anni",ampere:"1#{n} ampere|#{n} ampere",milliampere:"1#{n} milliampere|#{n} milliampere",ohm:"1#{n} ohm|#{n} ohm",volt:"1#{n} volt|#{n} volt",calorie:"1#{n} caloria|#{n} calorie",joule:"1#{n} joule|#{n} joule",kilocalorie:"1#{n} chilocaloria|#{n} chilocalorie",kilojoule:"1#{n} kilojoule|#{n} kilojoule","kilowatt hour":"1#{n} chilowattora|#{n} chilowattora",gigahertz:"1#{n} gigahertz|#{n} gigahertz",hertz:"1#{n} hertz|#{n} hertz",
kilohertz:"1#{n} kilohertz|#{n} kilohertz",megahertz:"1#{n} megahertz|#{n} megahertz","astronomical-unit":"1#{n} unit\u00e0 astronomica|#{n} unit\u00e0 astronomiche",centimeter:"1#{n} centimetro|#{n} centimetri",decimeter:"1#{n} decimetro|#{n} decimetri",fathom:"#{n} fm",foot:"1#{n} piede|#{n} piedi",furlong:"#{n} fur",inch:"1#{n} pollice|#{n} pollici",kilometer:"1#{n} chilometro|#{n} chilometri","light-year":"1#{n} anno luce|#{n} anni luce",meter:"1#{n} metro|#{n} metri",micrometer:"1#{n} micrometro|#{n} micrometri",
mile:"1#{n} miglio|#{n} miglia",millimeter:"1#{n} millimetro|#{n} millimetri",nanometer:"1#{n} nanometro|#{n} nanometri",nauticalmile:"1#{n} miglio nautico|#{n} miglia nautiche",parsec:"1#{n} parsec|#{n} parsec",picometer:"1#{n} picometro|#{n} picometri",yard:"1#{n} iarda|#{n} iarde",lux:"1#{n} lux|#{n} lux",carat:"1#{n} carato|#{n} carati",gram:"1#{n} grammo|#{n} grammi",kilogram:"1#{n} chilogrammo|#{n} chilogrammi","metric ton":"1#{n} tonnellata metrica|#{n} tonnellate metriche",microgram:"1#{n} microgrammo|#{n} microgrammi",
milligram:"1#{n} milligrammo|#{n} milligrammi",ounce:"1#{n} oncia|#{n} once","ounce-troy":"1#{n} oncia troy|#{n} once troy",pound:"1#{n} libbra|#{n} libbre",stone:"#{n} st","long ton":"1#{n} tonnellata|#{n} tonnellate",gigawatt:"1#{n} gigawatt|#{n} gigawatt",horsepower:"1#{n} cavallo vapore|#{n} cavalli vapore",kilowatt:"1#{n} kilowatt|#{n} kilowatt",megawatt:"1#{n} megawatt|#{n} megawatt",milliwatt:"1#{n} milliwatt|#{n} milliwatt",watt:"1#{n} watt|#{n} watt",hectopascal:"1#{n} ettopascal|#{n} ettopascal",
"inch-hg":"1#{n} pollice di mercurio|#{n} pollici di mercurio",millibar:"1#{n} millibar|#{n} millibar","millimeter-of-mercury":"1#{n} millimetro di mercurio|#{n} millimetri di mercurio","pound-per-square-inch":"1#{n} libbra per pollice quadrato|#{n} libbre per pollice quadrato",karat:"1#{n} carato|#{n} carati","kilometer/hour":"1#{n} chilometro orario|#{n} chilometri orari","meters/second":"1#{n} metro al secondo|#{n} metri al secondo","miles/hour":"1#{n} miglio all\u2019ora|#{n} miglia all\u2019ora",
celsius:"1#{n} grado Celsius|#{n} gradi Celsius",fahrenheit:"1#{n} grado Fahrenheit|#{n} gradi Fahrenheit",kelvin:"1#{n} Kelvin|#{n} Kelvin","acre-foot":"1#{n} acre-foot|#{n} acre-feet",bushel:"#{n} bu",centiliter:"1#{n} centilitro|#{n} centilitri","cubic-centimeter":"1#{n} centimetro cubo|#{n} centimetri cubi","cubic foot":"1#{n} piede cubo|#{n} piedi cubi","cubic inch":"1#{n} pollice cubo|#{n} pollici cubi","cubic-kilometer":"1#{n} chilometro cubo|#{n} chilometri cubi","cubic meter":"1#{n} metro cubo|#{n} metri cubi",
"cubic-mile":"1#{n} miglio cubo|#{n} miglia cube","cubic-yard":"1#{n} iarda cubica|#{n} iarde cubiche",cup:"1#{n} tazza|#{n} tazze",deciliter:"1#{n} decilitro|#{n} decilitri","us ounce":"1#{n} oncia fluida|#{n} once fluide",gallon:"1#{n} gallone|#{n} galloni",hectoliter:"1#{n} ettolitro|#{n} ettolitri",liter:"1#{n} litro|#{n} litri",megaliter:"1#{n} megalitro|#{n} megalitri",milliliter:"1#{n} millilitro|#{n} millilitri",pint:"1#{n} pinta|#{n} pinte",quart:"1#{n} quarto|#{n} quarti",tbsp:"1#{n} cucchiaio da tavola|#{n} cucchiai da tavola",
tsp:"1#{n} cucchiaio da t\u00e8|#{n} cucchiai da t\u00e8",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",gigajoule:"1#{n} gigajoule|#{n} gigajoules",
"megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second",
"miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},
"short":{"g-force":"1#{n} G|#{n} G","meter-per-second-squared":"1#{n} m/s\u00b2|#{n} m/s\u00b2","arc-minute":"1#{n}\u2032|#{n}\u2032","arc-second":"1#{n}\u2033|#{n}\u2033",degree:"1#{n}\u00b0|#{n}\u00b0",radian:"1#{n} rad|#{n} rad",acre:"1#{n} ac|#{n} ac",hectare:"1#{n} ha|#{n} ha","square centimeter":"1#{n} cm\u00b2|#{n} cm\u00b2","square foot":"1#{n} ft\u00b2|#{n} ft\u00b2","square inch":"1#{n} in\u00b2|#{n} in\u00b2","square km":"1#{n} km\u00b2|#{n} km\u00b2","square meter":"1#{n} m\u00b2|#{n} m\u00b2",
"square mile":"1#{n} mi\u00b2|#{n} mi\u00b2","square yard":"1#{n} yd\u00b2|#{n} yd\u00b2","liter-per-kilometer":"1#{n} L/km|#{n} L/km",mpg:"1#{n} mpg|#{n} mpg",bit:"1#{n} bit|#{n} bit","byte":"1#{n} byte|#{n} byte",gigabit:"1#{n} Gb|#{n} Gb",gigabyte:"1#{n} GB|#{n} GB",kilobit:"1#{n} kb|#{n} kb",kilobyte:"1#{n} kB|#{n} kB",megabit:"1#{n} Mb|#{n} Mb",megabyte:"1#{n} MB|#{n} MB",terabit:"1#{n} Tb|#{n} Tb",terabyte:"1#{n} TB|#{n} TB",day:"1#{n} giorno|#{n} giorni",hour:"1#{n} h|#{n} h",microsecond:"1#{n} \u03bcs|#{n} \u03bcs",
millisecond:"1#{n} ms|#{n} ms",minute:"1#{n} min|#{n} min",month:"1#{n} mese|#{n} mesi",nanosecond:"1#{n} ns|#{n} ns",second:"1#{n} sec|#{n} sec",week:"1#{n} settimana|#{n} settimane",year:"1#{n} anno|#{n} anni",ampere:"1#{n} A|#{n} A",milliampere:"1#{n} mA|#{n} mA",ohm:"1#{n} \u03a9|#{n} \u03a9",volt:"1#{n} V|#{n} V",calorie:"1#{n} Cal|#{n} Cal",joule:"1#{n} J|#{n} J",kilocalorie:"1#{n} kcal|#{n} kcal",kilojoule:"1#{n} kJ|#{n} kJ","kilowatt hour":"1#{n} kWh|#{n} kWh",gigahertz:"1#{n} GHz|#{n} GHz",
hertz:"1#{n} Hz|#{n} Hz",kilohertz:"1#{n} kHz|#{n} kHz",megahertz:"1#{n} MHz|#{n} MHz","astronomical-unit":"1#{n} au|#{n} au",centimeter:"1#{n} cm|#{n} cm",decimeter:"1#{n} dm|#{n} dm",fathom:"#{n} fm",foot:"1#{n} ft|#{n} ft",furlong:"#{n} fur",inch:"1#{n} in|#{n} in",kilometer:"1#{n} km|#{n} km","light-year":"1#{n} al|#{n} al",meter:"1#{n} m|#{n} m",micrometer:"1#{n} \u00b5m|#{n} \u00b5m",mile:"1#{n} mi|#{n} mi",millimeter:"1#{n} mm|#{n} mm",nanometer:"1#{n} nm|#{n} nm",nauticalmile:"1#{n} nmi|#{n} nmi",
parsec:"1#{n} pc|#{n} pc",picometer:"1#{n} pm|#{n} pm",yard:"1#{n} yd|#{n} yd",lux:"1#{n} lx|#{n} lx",carat:"1#{n} kt|#{n} kt",gram:"1#{n} g|#{n} g",kilogram:"1#{n} kg|#{n} kg","metric ton":"1#{n} t|#{n} t",microgram:"1#{n} \u00b5g|#{n} \u00b5g",milligram:"1#{n} mg|#{n} mg",ounce:"1#{n} oz|#{n} oz","ounce-troy":"1#{n} ozt|#{n} ozt",pound:"1#{n} lb|#{n} lb",stone:"#{n} st","long ton":"1#{n} tn|#{n} tn",gigawatt:"1#{n} GW|#{n} GW",horsepower:"1#{n} hp|#{n} hp",kilowatt:"1#{n} kW|#{n} kW",megawatt:"1#{n} MW|#{n} MW",
milliwatt:"1#{n} mW|#{n} mW",watt:"1#{n} W|#{n} W",hectopascal:"1#{n} hPa|#{n} hPa","inch-hg":"1#{n} inHg|#{n} inHg",millibar:"1#{n} mbar|#{n} mbar","millimeter-of-mercury":"1#{n} mm Hg|#{n} mm Hg","pound-per-square-inch":"1#{n} psi|#{n} psi",karat:"1#{n} kt|#{n} kt","kilometer/hour":"1#{n} km/h|#{n} km/h","meters/second":"1#{n} m/s|#{n} m/s","miles/hour":"1#{n} mi/h|#{n} mi/h",celsius:"1#{n} \u00b0C|#{n} \u00b0C",fahrenheit:"1#{n} \u00b0F|#{n} \u00b0F",kelvin:"1#{n} K|#{n} K","acre-foot":"1#{n} ac ft|#{n} ac ft",
bushel:"#{n} bu",centiliter:"1#{n} cl|#{n} cl","cubic-centimeter":"1#{n} cm\u00b3|#{n} cm\u00b3","cubic foot":"1#{n} ft\u00b3|#{n} ft\u00b3","cubic inch":"1#{n} in\u00b3|#{n} in\u00b3","cubic-kilometer":"1#{n} km\u00b3|#{n} km\u00b3","cubic meter":"1#{n} m\u00b3|#{n} m\u00b3","cubic-mile":"1#{n} mi\u00b3|#{n} mi\u00b3","cubic-yard":"1#{n} yd\u00b3|#{n} yd\u00b3",cup:"1#{n} c|#{n} c",deciliter:"1#{n} dl|#{n} dl","us ounce":"1#{n} fl oz|#{n} fl oz",gallon:"1#{n} gal|#{n} gal",hectoliter:"1#{n} hl|#{n} hl",
liter:"1#{n} l|#{n} l",megaliter:"1#{n} Ml|#{n} Ml",milliliter:"1#{n} ml|#{n} ml",pint:"1#{n} pt|#{n} pt",quart:"1#{n} qt|#{n} qt",tbsp:"1#{n} tbsp|#{n} tbsp",tsp:"1#{n} tsp|#{n} tsp",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",gigajoule:"1#{n} GJ|#{n} GJ",
"megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp",
"imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_ja={unitfmt:{"long":{"g-force":"#{n} G \u30d5\u30a9\u30fc\u30b9","meter-per-second-squared":"#{n} \u30e1\u30fc\u30c8\u30eb\u6bce\u79d2\u6bce\u79d2","arc-minute":"#{n} \u5206","arc-second":"#{n} \u79d2",degree:"#{n} \u5ea6",radian:"#{n} \u30e9\u30b8\u30a2\u30f3",acre:"#{n} \u30a8\u30fc\u30ab\u30fc",hectare:"#{n} \u30d8\u30af\u30bf\u30fc\u30eb","square centimeter":"#{n} \u5e73\u65b9\u30bb\u30f3\u30c1\u30e1\u30fc\u30c8\u30eb","square foot":"#{n} \u5e73\u65b9\u30d5\u30a3\u30fc\u30c8",
"square inch":"#{n} \u5e73\u65b9\u30a4\u30f3\u30c1","square km":"#{n} \u5e73\u65b9\u30ad\u30ed\u30e1\u30fc\u30c8\u30eb","square meter":"#{n} \u5e73\u65b9\u30e1\u30fc\u30c8\u30eb","square mile":"#{n} \u5e73\u65b9\u30de\u30a4\u30eb","square yard":"#{n} \u5e73\u65b9\u30e4\u30fc\u30c9","liter-per-kilometer":"#{n} \u30ea\u30c3\u30c8\u30eb\u6bce\u30ad\u30ed\u30e1\u30fc\u30c8\u30eb",mpg:"#{n} \u30de\u30a4\u30eb\u6bce\u30ac\u30ed\u30f3",bit:"#{n} \u30d3\u30c3\u30c8","byte":"#{n} \u30d0\u30a4\u30c8",gigabit:"#{n} \u30ae\u30ac\u30d3\u30c3\u30c8",
gigabyte:"#{n} \u30ae\u30ac\u30d0\u30a4\u30c8",kilobit:"#{n} \u30ad\u30ed\u30d3\u30c3\u30c8",kilobyte:"#{n} \u30ad\u30ed\u30d0\u30a4\u30c8",megabit:"#{n} \u30e1\u30ac\u30d3\u30c3\u30c8",megabyte:"#{n} \u30e1\u30ac\u30d0\u30a4\u30c8",terabit:"#{n} \u30c6\u30e9\u30d3\u30c3\u30c8",terabyte:"#{n} \u30c6\u30e9\u30d0\u30a4\u30c8",day:"#{n} \u65e5",hour:"#{n} \u6642\u9593",microsecond:"#{n} \u30de\u30a4\u30af\u30ed\u79d2",millisecond:"#{n} \u30df\u30ea\u79d2",minute:"#{n} \u5206",month:"#{n} \u304b\u6708",
nanosecond:"#{n} \u30ca\u30ce\u79d2",second:"#{n} \u79d2",week:"#{n} \u9031\u9593",year:"#{n} \u5e74",ampere:"#{n} \u30a2\u30f3\u30da\u30a2",milliampere:"#{n} \u30df\u30ea\u30a2\u30f3\u30da\u30a2",ohm:"#{n} \u30aa\u30fc\u30e0",volt:"#{n} \u30dc\u30eb\u30c8",calorie:"#{n} \u30ab\u30ed\u30ea\u30fc",joule:"#{n} \u30b8\u30e5\u30fc\u30eb",kilocalorie:"#{n} \u30ad\u30ed\u30ab\u30ed\u30ea\u30fc",kilojoule:"#{n} \u30ad\u30ed\u30b8\u30e5\u30fc\u30eb","kilowatt hour":"#{n} \u30ad\u30ed\u30ef\u30c3\u30c8\u6642",
gigahertz:"#{n} \u30ae\u30ac\u30d8\u30eb\u30c4",hertz:"#{n} \u30d8\u30eb\u30c4",kilohertz:"#{n} \u30ad\u30ed\u30d8\u30eb\u30c4",megahertz:"#{n} \u30e1\u30ac\u30d8\u30eb\u30c4","astronomical-unit":"#{n} \u5929\u6587\u5358\u4f4d",centimeter:"#{n} \u30bb\u30f3\u30c1\u30e1\u30fc\u30c8\u30eb",decimeter:"#{n} \u30c7\u30b7\u30e1\u30fc\u30c8\u30eb",fathom:"#{n} \u30d5\u30a1\u30be\u30e0",foot:"#{n} \u30d5\u30a3\u30fc\u30c8",furlong:"#{n} \u30cf\u30ed\u30f3",inch:"#{n} \u30a4\u30f3\u30c1",kilometer:"#{n} \u30ad\u30ed\u30e1\u30fc\u30c8\u30eb",
"light-year":"#{n} \u5149\u5e74",meter:"#{n} \u30e1\u30fc\u30c8\u30eb",micrometer:"#{n} \u30de\u30a4\u30af\u30ed\u30e1\u30fc\u30c8\u30eb",mile:"#{n} \u30de\u30a4\u30eb",millimeter:"#{n} \u30df\u30ea\u30e1\u30fc\u30c8\u30eb",nanometer:"#{n} \u30ca\u30ce\u30e1\u30fc\u30c8\u30eb",nauticalmile:"#{n} \u6d77\u91cc",parsec:"#{n} \u30d1\u30fc\u30bb\u30af",picometer:"#{n} \u30d4\u30b3\u30e1\u30fc\u30c8\u30eb",yard:"#{n} \u30e4\u30fc\u30c9",lux:"#{n} \u30eb\u30af\u30b9",carat:"#{n} \u30ab\u30e9\u30c3\u30c8",
gram:"#{n} \u30b0\u30e9\u30e0",kilogram:"#{n} \u30ad\u30ed\u30b0\u30e9\u30e0","metric ton":"#{n} \u30e1\u30c8\u30ea\u30c3\u30af\u30c8\u30f3",microgram:"#{n} \u30de\u30a4\u30af\u30ed\u30b0\u30e9\u30e0",milligram:"#{n} \u30df\u30ea\u30b0\u30e9\u30e0",ounce:"#{n} \u30aa\u30f3\u30b9","ounce-troy":"#{n} \u30c8\u30ed\u30a4\u30aa\u30f3\u30b9",pound:"#{n} \u30dd\u30f3\u30c9",stone:"#{n} \u30b9\u30c8\u30fc\u30f3","long ton":"#{n} \u30c8\u30f3",gigawatt:"#{n} \u30ae\u30ac\u30ef\u30c3\u30c8",horsepower:"#{n} \u99ac\u529b",
kilowatt:"#{n} \u30ad\u30ed\u30ef\u30c3\u30c8",megawatt:"#{n} \u30e1\u30ac\u30ef\u30c3\u30c8",milliwatt:"#{n} \u30df\u30ea\u30ef\u30c3\u30c8",watt:"#{n} \u30ef\u30c3\u30c8",hectopascal:"#{n} \u30d8\u30af\u30c8\u30d1\u30b9\u30ab\u30eb","inch-hg":"#{n} \u6c34\u9280\u67f1\u30a4\u30f3\u30c1",millibar:"#{n} \u30df\u30ea\u30d0\u30fc\u30eb","millimeter-of-mercury":"#{n} \u6c34\u9280\u67f1\u30df\u30ea\u30e1\u30fc\u30c8\u30eb","pound-per-square-inch":"#{n} \u91cd\u91cf\u30dd\u30f3\u30c9\u6bce\u5e73\u65b9\u30a4\u30f3\u30c1",
karat:"#{n} \u91d1","kilometer/hour":"#\u6642\u901f {n} \u30ad\u30ed\u30e1\u30fc\u30c8\u30eb","meters/second":"#\u79d2\u901f {n} \u30e1\u30fc\u30c8\u30eb","miles/hour":"#\u6642\u901f {n} \u30de\u30a4\u30eb",celsius:"#\u6442\u6c0f {n} \u5ea6",fahrenheit:"#\u83ef\u6c0f {n} \u5ea6",kelvin:"#{n} \u30b1\u30eb\u30d3\u30f3","acre-foot":"#{n} \u30a8\u30fc\u30ab\u30fc\u30d5\u30a3\u30fc\u30c8",bushel:"#{n} \u30d6\u30c3\u30b7\u30a7\u30eb",centiliter:"#{n} \u30bb\u30f3\u30c1\u30ea\u30c3\u30c8\u30eb","cubic-centimeter":"#{n} \u7acb\u65b9\u30bb\u30f3\u30c1\u30e1\u30fc\u30c8\u30eb",
"cubic foot":"#{n} \u7acb\u65b9\u30d5\u30a3\u30fc\u30c8","cubic inch":"#{n} \u7acb\u65b9\u30a4\u30f3\u30c1","cubic-kilometer":"#{n} \u7acb\u65b9\u30ad\u30ed\u30e1\u30fc\u30c8\u30eb","cubic meter":"#{n} \u7acb\u65b9\u30e1\u30fc\u30c8\u30eb","cubic-mile":"#{n} \u7acb\u65b9\u30de\u30a4\u30eb","cubic-yard":"#{n} \u7acb\u65b9\u30e4\u30fc\u30c9",cup:"#{n} \u30ab\u30c3\u30d7",deciliter:"#{n} \u30c7\u30b7\u30ea\u30c3\u30c8\u30eb","us ounce":"#{n} \u6db2\u91cf\u30aa\u30f3\u30b9",gallon:"#{n} \u30ac\u30ed\u30f3",
hectoliter:"#{n} \u30d8\u30af\u30c8\u30ea\u30c3\u30c8\u30eb",liter:"#{n} \u30ea\u30c3\u30c8\u30eb",megaliter:"#{n} \u30e1\u30ac\u30ea\u30c3\u30c8\u30eb",milliliter:"#{n} \u30df\u30ea\u30ea\u30c3\u30c8\u30eb",pint:"#{n} \u30d1\u30a4\u30f3\u30c8",quart:"#{n} \u30af\u30a9\u30fc\u30c8",tbsp:"#\u5927\u3055\u3058 {n}",tsp:"#\u5c0f\u3055\u3058 {n}",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",
petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km",
"mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second","miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons",
"imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},"short":{"g-force":"#{n} G","meter-per-second-squared":"#{n} m/s\u00b2","arc-minute":"#{n} \u5206","arc-second":"#{n} \u79d2",degree:"#{n} \u5ea6",radian:"#{n} rad",acre:"#{n} ac",hectare:"#{n} ha","square centimeter":"#{n} cm\u00b2","square foot":"#{n} ft\u00b2",
"square inch":"#{n} in\u00b2","square km":"#{n} km\u00b2","square meter":"#{n} m\u00b2","square mile":"#{n} mi\u00b2","square yard":"#{n} yd\u00b2","liter-per-kilometer":"#{n} L/km",mpg:"#{n} mpg",bit:"#{n} bit","byte":"#{n} byte",gigabit:"#{n} Gb",gigabyte:"#{n} GB",kilobit:"#{n} kb",kilobyte:"#{n} KB",megabit:"#{n} Mb",megabyte:"#{n} MB",terabit:"#{n} Tb",terabyte:"#{n} TB",day:"#{n} \u65e5",hour:"#{n} \u6642\u9593",microsecond:"#{n} \u03bcs",millisecond:"#{n} ms",minute:"#{n} \u5206",month:"#{n} \u304b\u6708",
nanosecond:"#{n} ns",second:"#{n} \u79d2",week:"#{n} \u9031\u9593",year:"#{n} \u5e74",ampere:"#{n} A",milliampere:"#{n} mA",ohm:"#{n} \u03a9",volt:"#{n} V",calorie:"#{n} cal",joule:"#{n} J",kilocalorie:"#{n} kcal",kilojoule:"#{n} kJ","kilowatt hour":"#{n} kWh",gigahertz:"#{n} GHz",hertz:"#{n} Hz",kilohertz:"#{n} kHz",megahertz:"#{n} MHz","astronomical-unit":"#{n} au",centimeter:"#{n} cm",decimeter:"#{n} dm",fathom:"#{n} fm",foot:"#{n} ft",furlong:"#{n} fur",inch:"#{n} in",kilometer:"#{n} km","light-year":"#{n} \u5149\u5e74",
meter:"#{n} m",micrometer:"#{n} \u00b5m",mile:"#{n} mi",millimeter:"#{n} mm",nanometer:"#{n} nm",nauticalmile:"#{n} \u6d77\u91cc",parsec:"#{n} pc",picometer:"#{n} pm",yard:"#{n} yd",lux:"#{n} lx",carat:"#{n} ct",gram:"#{n} g",kilogram:"#{n} kg","metric ton":"#{n} MT",microgram:"#{n} \u00b5g",milligram:"#{n} mg",ounce:"#{n} oz","ounce-troy":"#{n} oz t",pound:"#{n} lb",stone:"#{n} st","long ton":"#{n} t",gigawatt:"#{n} GW",horsepower:"#{n} \u99ac\u529b",kilowatt:"#{n} kW",megawatt:"#{n} MW",milliwatt:"#{n} mW",
watt:"#{n} W",hectopascal:"#{n} hPa","inch-hg":"#{n} inHg",millibar:"#{n} mb","millimeter-of-mercury":"#{n} mm Hg","pound-per-square-inch":"#{n} psi",karat:"#{n} \u91d1","kilometer/hour":"#{n} km/h","meters/second":"#{n} m/s","miles/hour":"#{n} mi/h",celsius:"#{n}\u00b0C",fahrenheit:"#{n}\u00b0F",kelvin:"#{n} K","acre-foot":"#{n} ac ft",bushel:"#{n} bu",centiliter:"#{n} cL","cubic-centimeter":"#{n} cm\u00b3","cubic foot":"#{n} ft\u00b3","cubic inch":"#{n} in\u00b3","cubic-kilometer":"#{n} km\u00b3",
"cubic meter":"#{n} m\u00b3","cubic-mile":"#{n} mi\u00b3","cubic-yard":"#{n} yd\u00b3",cup:"#{n} \u30ab\u30c3\u30d7",deciliter:"#{n} dL","us ounce":"#{n} fl oz",gallon:"#{n} gal",hectoliter:"#{n} hL",liter:"#{n} l",megaliter:"#{n} ML",milliliter:"#{n} ml",pint:"#{n} pt",quart:"#{n} qt",tbsp:"#\u5927\u3055\u3058 {n}",tsp:"#\u5c0f\u3055\u3058 {n}",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",
BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",
decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp","imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_ja_JP={unitfmt:{"long":{"g-force":"#{n} G \u30d5\u30a9\u30fc\u30b9","meter-per-second-squared":"#{n} \u30e1\u30fc\u30c8\u30eb\u6bce\u79d2\u6bce\u79d2","arc-minute":"#{n} \u5206","arc-second":"#{n} \u79d2",degree:"#{n} \u5ea6",radian:"#{n} \u30e9\u30b8\u30a2\u30f3",acre:"#{n} \u30a8\u30fc\u30ab\u30fc",hectare:"#{n} \u30d8\u30af\u30bf\u30fc\u30eb","square centimeter":"#{n} \u5e73\u65b9\u30bb\u30f3\u30c1\u30e1\u30fc\u30c8\u30eb","square foot":"#{n} \u5e73\u65b9\u30d5\u30a3\u30fc\u30c8",
"square inch":"#{n} \u5e73\u65b9\u30a4\u30f3\u30c1","square km":"#{n} \u5e73\u65b9\u30ad\u30ed\u30e1\u30fc\u30c8\u30eb","square meter":"#{n} \u5e73\u65b9\u30e1\u30fc\u30c8\u30eb","square mile":"#{n} \u5e73\u65b9\u30de\u30a4\u30eb","square yard":"#{n} \u5e73\u65b9\u30e4\u30fc\u30c9","liter-per-kilometer":"#{n} \u30ea\u30c3\u30c8\u30eb\u6bce\u30ad\u30ed\u30e1\u30fc\u30c8\u30eb",mpg:"#{n} \u30de\u30a4\u30eb\u6bce\u30ac\u30ed\u30f3",bit:"#{n} \u30d3\u30c3\u30c8","byte":"#{n} \u30d0\u30a4\u30c8",gigabit:"#{n} \u30ae\u30ac\u30d3\u30c3\u30c8",
gigabyte:"#{n} \u30ae\u30ac\u30d0\u30a4\u30c8",kilobit:"#{n} \u30ad\u30ed\u30d3\u30c3\u30c8",kilobyte:"#{n} \u30ad\u30ed\u30d0\u30a4\u30c8",megabit:"#{n} \u30e1\u30ac\u30d3\u30c3\u30c8",megabyte:"#{n} \u30e1\u30ac\u30d0\u30a4\u30c8",terabit:"#{n} \u30c6\u30e9\u30d3\u30c3\u30c8",terabyte:"#{n} \u30c6\u30e9\u30d0\u30a4\u30c8",day:"#{n} \u65e5",hour:"#{n} \u6642\u9593",microsecond:"#{n} \u30de\u30a4\u30af\u30ed\u79d2",millisecond:"#{n} \u30df\u30ea\u79d2",minute:"#{n} \u5206",month:"#{n} \u304b\u6708",
nanosecond:"#{n} \u30ca\u30ce\u79d2",second:"#{n} \u79d2",week:"#{n} \u9031\u9593",year:"#{n} \u5e74",ampere:"#{n} \u30a2\u30f3\u30da\u30a2",milliampere:"#{n} \u30df\u30ea\u30a2\u30f3\u30da\u30a2",ohm:"#{n} \u30aa\u30fc\u30e0",volt:"#{n} \u30dc\u30eb\u30c8",calorie:"#{n} \u30ab\u30ed\u30ea\u30fc",joule:"#{n} \u30b8\u30e5\u30fc\u30eb",kilocalorie:"#{n} \u30ad\u30ed\u30ab\u30ed\u30ea\u30fc",kilojoule:"#{n} \u30ad\u30ed\u30b8\u30e5\u30fc\u30eb","kilowatt hour":"#{n} \u30ad\u30ed\u30ef\u30c3\u30c8\u6642",
gigahertz:"#{n} \u30ae\u30ac\u30d8\u30eb\u30c4",hertz:"#{n} \u30d8\u30eb\u30c4",kilohertz:"#{n} \u30ad\u30ed\u30d8\u30eb\u30c4",megahertz:"#{n} \u30e1\u30ac\u30d8\u30eb\u30c4","astronomical-unit":"#{n} \u5929\u6587\u5358\u4f4d",centimeter:"#{n} \u30bb\u30f3\u30c1\u30e1\u30fc\u30c8\u30eb",decimeter:"#{n} \u30c7\u30b7\u30e1\u30fc\u30c8\u30eb",fathom:"#{n} \u30d5\u30a1\u30be\u30e0",foot:"#{n} \u30d5\u30a3\u30fc\u30c8",furlong:"#{n} \u30cf\u30ed\u30f3",inch:"#{n} \u30a4\u30f3\u30c1",kilometer:"#{n} \u30ad\u30ed\u30e1\u30fc\u30c8\u30eb",
"light-year":"#{n} \u5149\u5e74",meter:"#{n} \u30e1\u30fc\u30c8\u30eb",micrometer:"#{n} \u30de\u30a4\u30af\u30ed\u30e1\u30fc\u30c8\u30eb",mile:"#{n} \u30de\u30a4\u30eb",millimeter:"#{n} \u30df\u30ea\u30e1\u30fc\u30c8\u30eb",nanometer:"#{n} \u30ca\u30ce\u30e1\u30fc\u30c8\u30eb",nauticalmile:"#{n} \u6d77\u91cc",parsec:"#{n} \u30d1\u30fc\u30bb\u30af",picometer:"#{n} \u30d4\u30b3\u30e1\u30fc\u30c8\u30eb",yard:"#{n} \u30e4\u30fc\u30c9",lux:"#{n} \u30eb\u30af\u30b9",carat:"#{n} \u30ab\u30e9\u30c3\u30c8",
gram:"#{n} \u30b0\u30e9\u30e0",kilogram:"#{n} \u30ad\u30ed\u30b0\u30e9\u30e0","metric ton":"#{n} \u30e1\u30c8\u30ea\u30c3\u30af\u30c8\u30f3",microgram:"#{n} \u30de\u30a4\u30af\u30ed\u30b0\u30e9\u30e0",milligram:"#{n} \u30df\u30ea\u30b0\u30e9\u30e0",ounce:"#{n} \u30aa\u30f3\u30b9","ounce-troy":"#{n} \u30c8\u30ed\u30a4\u30aa\u30f3\u30b9",pound:"#{n} \u30dd\u30f3\u30c9",stone:"#{n} \u30b9\u30c8\u30fc\u30f3","long ton":"#{n} \u30c8\u30f3",gigawatt:"#{n} \u30ae\u30ac\u30ef\u30c3\u30c8",horsepower:"#{n} \u99ac\u529b",
kilowatt:"#{n} \u30ad\u30ed\u30ef\u30c3\u30c8",megawatt:"#{n} \u30e1\u30ac\u30ef\u30c3\u30c8",milliwatt:"#{n} \u30df\u30ea\u30ef\u30c3\u30c8",watt:"#{n} \u30ef\u30c3\u30c8",hectopascal:"#{n} \u30d8\u30af\u30c8\u30d1\u30b9\u30ab\u30eb","inch-hg":"#{n} \u6c34\u9280\u67f1\u30a4\u30f3\u30c1",millibar:"#{n} \u30df\u30ea\u30d0\u30fc\u30eb","millimeter-of-mercury":"#{n} \u6c34\u9280\u67f1\u30df\u30ea\u30e1\u30fc\u30c8\u30eb","pound-per-square-inch":"#{n} \u91cd\u91cf\u30dd\u30f3\u30c9\u6bce\u5e73\u65b9\u30a4\u30f3\u30c1",
karat:"#{n} \u91d1","kilometer/hour":"#\u6642\u901f {n} \u30ad\u30ed\u30e1\u30fc\u30c8\u30eb","meters/second":"#\u79d2\u901f {n} \u30e1\u30fc\u30c8\u30eb","miles/hour":"#\u6642\u901f {n} \u30de\u30a4\u30eb",celsius:"#\u6442\u6c0f {n} \u5ea6",fahrenheit:"#\u83ef\u6c0f {n} \u5ea6",kelvin:"#{n} \u30b1\u30eb\u30d3\u30f3","acre-foot":"#{n} \u30a8\u30fc\u30ab\u30fc\u30d5\u30a3\u30fc\u30c8",bushel:"#{n} \u30d6\u30c3\u30b7\u30a7\u30eb",centiliter:"#{n} \u30bb\u30f3\u30c1\u30ea\u30c3\u30c8\u30eb","cubic-centimeter":"#{n} \u7acb\u65b9\u30bb\u30f3\u30c1\u30e1\u30fc\u30c8\u30eb",
"cubic foot":"#{n} \u7acb\u65b9\u30d5\u30a3\u30fc\u30c8","cubic inch":"#{n} \u7acb\u65b9\u30a4\u30f3\u30c1","cubic-kilometer":"#{n} \u7acb\u65b9\u30ad\u30ed\u30e1\u30fc\u30c8\u30eb","cubic meter":"#{n} \u7acb\u65b9\u30e1\u30fc\u30c8\u30eb","cubic-mile":"#{n} \u7acb\u65b9\u30de\u30a4\u30eb","cubic-yard":"#{n} \u7acb\u65b9\u30e4\u30fc\u30c9",cup:"#{n} \u30ab\u30c3\u30d7",deciliter:"#{n} \u30c7\u30b7\u30ea\u30c3\u30c8\u30eb","us ounce":"#{n} \u6db2\u91cf\u30aa\u30f3\u30b9",gallon:"#{n} \u30ac\u30ed\u30f3",
hectoliter:"#{n} \u30d8\u30af\u30c8\u30ea\u30c3\u30c8\u30eb",liter:"#{n} \u30ea\u30c3\u30c8\u30eb",megaliter:"#{n} \u30e1\u30ac\u30ea\u30c3\u30c8\u30eb",milliliter:"#{n} \u30df\u30ea\u30ea\u30c3\u30c8\u30eb",pint:"#{n} \u30d1\u30a4\u30f3\u30c8",quart:"#{n} \u30af\u30a9\u30fc\u30c8",tbsp:"#\u5927\u3055\u3058 {n}",tsp:"#\u5c0f\u3055\u3058 {n}",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",
petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km",
"mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second","miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons",
"imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},"short":{"g-force":"#{n} G","meter-per-second-squared":"#{n} m/s\u00b2","arc-minute":"#{n} \u5206","arc-second":"#{n} \u79d2",degree:"#{n} \u5ea6",radian:"#{n} rad",acre:"#{n} ac",hectare:"#{n} ha","square centimeter":"#{n} cm\u00b2","square foot":"#{n} ft\u00b2",
"square inch":"#{n} in\u00b2","square km":"#{n} km\u00b2","square meter":"#{n} m\u00b2","square mile":"#{n} mi\u00b2","square yard":"#{n} yd\u00b2","liter-per-kilometer":"#{n} L/km",mpg:"#{n} mpg",bit:"#{n} bit","byte":"#{n} byte",gigabit:"#{n} Gb",gigabyte:"#{n} GB",kilobit:"#{n} kb",kilobyte:"#{n} KB",megabit:"#{n} Mb",megabyte:"#{n} MB",terabit:"#{n} Tb",terabyte:"#{n} TB",day:"#{n} \u65e5",hour:"#{n} \u6642\u9593",microsecond:"#{n} \u03bcs",millisecond:"#{n} ms",minute:"#{n} \u5206",month:"#{n} \u304b\u6708",
nanosecond:"#{n} ns",second:"#{n} \u79d2",week:"#{n} \u9031\u9593",year:"#{n} \u5e74",ampere:"#{n} A",milliampere:"#{n} mA",ohm:"#{n} \u03a9",volt:"#{n} V",calorie:"#{n} cal",joule:"#{n} J",kilocalorie:"#{n} kcal",kilojoule:"#{n} kJ","kilowatt hour":"#{n} kWh",gigahertz:"#{n} GHz",hertz:"#{n} Hz",kilohertz:"#{n} kHz",megahertz:"#{n} MHz","astronomical-unit":"#{n} au",centimeter:"#{n} cm",decimeter:"#{n} dm",fathom:"#{n} fm",foot:"#{n} ft",furlong:"#{n} fur",inch:"#{n} in",kilometer:"#{n} km","light-year":"#{n} \u5149\u5e74",
meter:"#{n} m",micrometer:"#{n} \u00b5m",mile:"#{n} mi",millimeter:"#{n} mm",nanometer:"#{n} nm",nauticalmile:"#{n} \u6d77\u91cc",parsec:"#{n} pc",picometer:"#{n} pm",yard:"#{n} yd",lux:"#{n} lx",carat:"#{n} ct",gram:"#{n} g",kilogram:"#{n} kg","metric ton":"#{n} MT",microgram:"#{n} \u00b5g",milligram:"#{n} mg",ounce:"#{n} oz","ounce-troy":"#{n} oz t",pound:"#{n} lb",stone:"#{n} st","long ton":"#{n} t",gigawatt:"#{n} GW",horsepower:"#{n} \u99ac\u529b",kilowatt:"#{n} kW",megawatt:"#{n} MW",milliwatt:"#{n} mW",
watt:"#{n} W",hectopascal:"#{n} hPa","inch-hg":"#{n} inHg",millibar:"#{n} mb","millimeter-of-mercury":"#{n} mm Hg","pound-per-square-inch":"#{n} psi",karat:"#{n} \u91d1","kilometer/hour":"#{n} km/h","meters/second":"#{n} m/s","miles/hour":"#{n} mi/h",celsius:"#{n}\u00b0C",fahrenheit:"#{n}\u00b0F",kelvin:"#{n} K","acre-foot":"#{n} ac ft",bushel:"#{n} bu",centiliter:"#{n} cL","cubic-centimeter":"#{n} cm\u00b3","cubic foot":"#{n} ft\u00b3","cubic inch":"#{n} in\u00b3","cubic-kilometer":"#{n} km\u00b3",
"cubic meter":"#{n} m\u00b3","cubic-mile":"#{n} mi\u00b3","cubic-yard":"#{n} yd\u00b3",cup:"#{n} \u30ab\u30c3\u30d7",deciliter:"#{n} dL","us ounce":"#{n} fl oz",gallon:"#{n} gal",hectoliter:"#{n} hL",liter:"#{n} l",megaliter:"#{n} ML",milliliter:"#{n} ml",pint:"#{n} pt",quart:"#{n} qt",tbsp:"#\u5927\u3055\u3058 {n}",tsp:"#\u5c0f\u3055\u3058 {n}",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",
BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",
decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp","imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_ko={unitfmt:{"long":{"g-force":"#{n} \uc911\ub825\uac00\uc18d\ub3c4","meter-per-second-squared":"#{n}m/s\u00b2","arc-minute":"#{n}\ubd84\uac01","arc-second":"#{n}\uac01\ucd08",degree:"#{n}\ub3c4",radian:"#{n}\ub77c\ub514\uc548",acre:"#{n}\uc5d0\uc774\ucee4",hectare:"#{n}\ud5e5\ud0c0\ub974","square centimeter":"#{n}\uc81c\uacf1\uc13c\ud2f0\ubbf8\ud130","square foot":"#{n}\uc81c\uacf1\ud53c\ud2b8","square inch":"#{n}\uc81c\uacf1\uc778\uce58","square km":"#{n}\uc81c\uacf1\ud0ac\ub85c\ubbf8\ud130",
"square meter":"#{n}\uc81c\uacf1\ubbf8\ud130","square mile":"#{n}\uc81c\uacf1\ub9c8\uc77c","square yard":"#{n}\uc81c\uacf1\uc57c\ub4dc","liter-per-kilometer":"#\ud0ac\ub85c\ubbf8\ud130\ub2f9 {n}\ub9ac\ud130",mpg:"#\uac24\ub7f0\ub2f9 {n}\ub9c8\uc77c",bit:"#{n}\ube44\ud2b8","byte":"#{n}\ubc14\uc774\ud2b8",gigabit:"#{n}\uae30\uac00\ube44\ud2b8",gigabyte:"#{n}\uae30\uac00\ubc14\uc774\ud2b8",kilobit:"#{n}\ud0ac\ub85c\ube44\ud2b8",kilobyte:"#{n}\ud0ac\ub85c\ubc14\uc774\ud2b8",megabit:"#{n}\uba54\uac00\ube44\ud2b8",
megabyte:"#{n}\uba54\uac00\ubc14\uc774\ud2b8",terabit:"#{n}\ud14c\ub77c\ube44\ud2b8",terabyte:"#{n}\ud14c\ub77c\ubc14\uc774\ud2b8",day:"#{n}\uc77c",hour:"#{n}\uc2dc\uac04",microsecond:"#{n}\ub9c8\uc774\ud06c\ub85c\ucd08",millisecond:"#{n}\ubc00\ub9ac\ucd08",minute:"#{n}\ubd84",month:"#{n}\uac1c\uc6d4",nanosecond:"#{n}\ub098\ub178\ucd08",second:"#{n}\ucd08",week:"#{n}\uc8fc",year:"#{n}\ub144",ampere:"#{n}\uc554\ud398\uc5b4",milliampere:"#{n}\ubc00\ub9ac\uc554\ud398\uc5b4",ohm:"#{n}\uc634",volt:"#{n}\ubcfc\ud2b8",
calorie:"#{n}\uce7c\ub85c\ub9ac",joule:"#{n}\uc904",kilocalorie:"#{n}\ud0ac\ub85c\uce7c\ub85c\ub9ac",kilojoule:"#{n}\ud0ac\ub85c\uc904","kilowatt hour":"#{n}\ud0ac\ub85c\uc640\ud2b8\uc2dc",gigahertz:"#{n}\uae30\uac00\ud5e4\ub974\uce20",hertz:"#{n}\ud5e4\ub974\uce20",kilohertz:"#{n}\ud0ac\ub85c\ud5e4\ub974\uce20",megahertz:"#{n}\uba54\uac00\ud5e4\ub974\uce20","astronomical-unit":"#{n} \ucc9c\ubb38 \ub2e8\uc704",centimeter:"#{n}\uc13c\ud2f0\ubbf8\ud130",decimeter:"#{n}\ub370\uc2dc\ubbf8\ud130",fathom:"#{n} fm",
foot:"#{n}\ud53c\ud2b8",furlong:"#{n} fur",inch:"#{n}\uc778\uce58",kilometer:"#{n}\ud0ac\ub85c\ubbf8\ud130","light-year":"#{n}\uad11\ub144",meter:"#{n}\ubbf8\ud130",micrometer:"#{n}\ub9c8\uc774\ud06c\ub85c\ubbf8\ud130",mile:"#{n}\ub9c8\uc77c",millimeter:"#{n}\ubc00\ub9ac\ubbf8\ud130",nanometer:"#{n}\ub098\ub178\ubbf8\ud130",nauticalmile:"#{n}\ud574\ub9ac",parsec:"#{n}\ud30c\uc139",picometer:"#{n}\ud53c\ucf54\ubbf8\ud130",yard:"#{n}\uc57c\ub4dc",lux:"#{n}\ub8e9\uc2a4",carat:"#{n}\uce90\ub7ff",gram:"#{n}\uadf8\ub7a8",
kilogram:"#{n}\ud0ac\ub85c\uadf8\ub7a8","metric ton":"#{n}\uba54\ud2b8\ub9ad \ud1a4",microgram:"#{n}\ub9c8\uc774\ud06c\ub85c\uadf8\ub7a8",milligram:"#{n}\ubc00\ub9ac\uadf8\ub7a8",ounce:"#{n}\uc628\uc2a4","ounce-troy":"#{n}\ud2b8\ub85c\uc774 \uc628\uc2a4",pound:"#{n}\ud30c\uc6b4\ub4dc",stone:"#{n} st","long ton":"#{n}\ud1a4",gigawatt:"#{n}\uae30\uac00\uc640\ud2b8",horsepower:"#{n}\ub9c8\ub825",kilowatt:"#{n}\ud0ac\ub85c\uc640\ud2b8",megawatt:"#{n}\uba54\uac00\uc640\ud2b8",milliwatt:"#{n}\ubc00\ub9ac\uc640\ud2b8",
watt:"#{n}\uc640\ud2b8",hectopascal:"#{n}\ud5e5\ud1a0\ud30c\uc2a4\uce7c","inch-hg":"#{n}\uc218\uc740\uc8fc\uc778\uce58",millibar:"#{n}\ubc00\ub9ac\ubc14","millimeter-of-mercury":"#{n}\uc218\uc740\uc8fc\ubc00\ub9ac\ubbf8\ud130","pound-per-square-inch":"#{n}\uc81c\uacf1\uc778\uce58\ub2f9 \ud30c\uc6b4\ub4dc",karat:"#{n}\uce90\ub7ff","kilometer/hour":"#\uc2dc\uc18d {n}\ud0ac\ub85c\ubbf8\ud130","meters/second":"#\ucd08\uc18d {n}\ubbf8\ud130","miles/hour":"#\uc2dc\uc18d {n}\ub9c8\uc77c",celsius:"#\uc12d\uc528 {n}\ub3c4",
fahrenheit:"#\ud654\uc528 {n}\ub3c4",kelvin:"#{n}\ucf08\ube48","acre-foot":"#{n}\uc5d0\uc774\ucee4 \ud53c\ud2b8",bushel:"#{n} bu",centiliter:"#{n}\uc13c\ud2f0\ub9ac\ud130","cubic-centimeter":"#{n}\uc138\uc81c\uacf1\uc13c\ud2f0\ubbf8\ud130","cubic foot":"#{n}\uc138\uc81c\uacf1\ud53c\ud2b8","cubic inch":"#{n}\uc138\uc81c\uacf1\uc778\uce58","cubic-kilometer":"#{n}\uc138\uc81c\uacf1\ud0ac\ub85c\ubbf8\ud130","cubic meter":"#{n}\uc138\uc81c\uacf1\ubbf8\ud130","cubic-mile":"#{n}\uc138\uc81c\uacf1\ub9c8\uc77c",
"cubic-yard":"#{n}\uc138\uc81c\uacf1\uc57c\ub4dc",cup:"#{n}\ucef5",deciliter:"#{n}\ub370\uc2dc\ub9ac\ud130","us ounce":"#{n}\uc561\ub7c9 \uc628\uc2a4",gallon:"#{n}\uac24\ub7f0",hectoliter:"#{n}\ud5e5\ud1a0\ub9ac\ud130",liter:"#{n}\ub9ac\ud130",megaliter:"#{n}\uba54\uac00\ub9ac\ud130",milliliter:"#{n}\ubc00\ub9ac\ub9ac\ud130",pint:"#{n}\ud30c\uc778\ud2b8",quart:"#{n}\ucffc\ud2b8",tbsp:"#{n}\ud14c\uc774\ube14\uc2a4\ud47c",tsp:"#{n}\ud2f0\uc2a4\ud47c",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",
megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter",
"liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second","miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons",
"imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},"short":{"g-force":"#{n}G","meter-per-second-squared":"#{n}m/s\u00b2","arc-minute":"#{n}\u2032","arc-second":"#{n}\u2033",degree:"#{n}\u00b0",radian:"#{n}rad",acre:"#{n}\uc5d0\uc774\ucee4",
hectare:"#{n}ha","square centimeter":"#{n}cm\u00b2","square foot":"#{n}ft\u00b2","square inch":"#{n}in\u00b2","square km":"#{n}km\u00b2","square meter":"#{n}m\u00b2","square mile":"#{n}mi\u00b2","square yard":"#{n}yd\u00b2","liter-per-kilometer":"#{n}L/km",mpg:"#{n}mpg",bit:"#{n}bit","byte":"#{n}byte",gigabit:"#{n}Gb",gigabyte:"#{n}GB",kilobit:"#{n}kb",kilobyte:"#{n}kB",megabit:"#{n}Mb",megabyte:"#{n}MB",terabit:"#{n}Tb",terabyte:"#{n}TB",day:"#{n}\uc77c",hour:"#{n}\uc2dc\uac04",microsecond:"#{n}\u03bcs",
millisecond:"#{n}ms",minute:"#{n}\ubd84",month:"#{n}\uac1c\uc6d4",nanosecond:"#{n}ns",second:"#{n}\ucd08",week:"#{n}\uc8fc",year:"#{n}\ub144",ampere:"#{n}A",milliampere:"#{n}mA",ohm:"#{n}\u03a9",volt:"#{n}V",calorie:"#{n}Cal",joule:"#{n}\uc904",kilocalorie:"#{n}kcal",kilojoule:"#{n}kJ","kilowatt hour":"#{n}kWh",gigahertz:"#{n}GHz",hertz:"#{n}Hz",kilohertz:"#{n}kHz",megahertz:"#{n}MHz","astronomical-unit":"#{n}au",centimeter:"#{n}cm",decimeter:"#{n}dm",fathom:"#{n} fm",foot:"#{n}ft",furlong:"#{n} fur",
inch:"#{n}in",kilometer:"#{n}km","light-year":"#{n}ly",meter:"#{n}m",micrometer:"#{n}\u00b5m",mile:"#{n}mil",millimeter:"#{n}mm",nanometer:"#{n}nm",nauticalmile:"#{n}nmi",parsec:"#{n}pc",picometer:"#{n}pm",yard:"#{n}\uc57c\ub4dc",lux:"#{n}lx",carat:"#{n}CD",gram:"#{n}g",kilogram:"#{n}kg","metric ton":"#{n}t",microgram:"#{n}\u00b5g",milligram:"#{n}mg",ounce:"#{n}oz","ounce-troy":"#{n}oz t",pound:"#{n}lb",stone:"#{n} st","long ton":"#{n}tn",gigawatt:"#{n}GW",horsepower:"#{n}HP",kilowatt:"#{n}kW",megawatt:"#{n}MW",
milliwatt:"#{n}mW",watt:"#{n}W",hectopascal:"#{n}hPa","inch-hg":"#{n}inHg",millibar:"#{n}mb","millimeter-of-mercury":"#{n}mm Hg","pound-per-square-inch":"#{n}psi",karat:"#{n}kt","kilometer/hour":"#\uc2dc\uc18d {n}km","meters/second":"#\ucd08\uc18d {n}m","miles/hour":"#\uc2dc\uc18d {n}mi",celsius:"#{n}\u00b0C",fahrenheit:"#{n}\u00b0F",kelvin:"#{n}K","acre-foot":"#{n}ac ft",bushel:"#{n} bu",centiliter:"#{n}cL","cubic-centimeter":"#{n}cm\u00b3","cubic foot":"#{n}ft\u00b3","cubic inch":"#{n}in\u00b3",
"cubic-kilometer":"#{n}km\u00b3","cubic meter":"#{n}m\u00b3","cubic-mile":"#{n}mi\u00b3","cubic-yard":"#{n}yd\u00b3",cup:"#{n}\ucef5",deciliter:"#{n}dL","us ounce":"#{n}fl oz",gallon:"#{n}gal",hectoliter:"#{n}hL",liter:"#{n}L",megaliter:"#{n}ML",milliliter:"#{n}mL",pint:"#{n}pt",quart:"#{n}qt",tbsp:"#{n}tbsp",tsp:"#{n}tsp",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",
millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",
decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp","imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_ko_KR={unitfmt:{"long":{"g-force":"#{n} \uc911\ub825\uac00\uc18d\ub3c4","meter-per-second-squared":"#{n}m/s\u00b2","arc-minute":"#{n}\ubd84\uac01","arc-second":"#{n}\uac01\ucd08",degree:"#{n}\ub3c4",radian:"#{n}\ub77c\ub514\uc548",acre:"#{n}\uc5d0\uc774\ucee4",hectare:"#{n}\ud5e5\ud0c0\ub974","square centimeter":"#{n}\uc81c\uacf1\uc13c\ud2f0\ubbf8\ud130","square foot":"#{n}\uc81c\uacf1\ud53c\ud2b8","square inch":"#{n}\uc81c\uacf1\uc778\uce58","square km":"#{n}\uc81c\uacf1\ud0ac\ub85c\ubbf8\ud130",
"square meter":"#{n}\uc81c\uacf1\ubbf8\ud130","square mile":"#{n}\uc81c\uacf1\ub9c8\uc77c","square yard":"#{n}\uc81c\uacf1\uc57c\ub4dc","liter-per-kilometer":"#\ud0ac\ub85c\ubbf8\ud130\ub2f9 {n}\ub9ac\ud130",mpg:"#\uac24\ub7f0\ub2f9 {n}\ub9c8\uc77c",bit:"#{n}\ube44\ud2b8","byte":"#{n}\ubc14\uc774\ud2b8",gigabit:"#{n}\uae30\uac00\ube44\ud2b8",gigabyte:"#{n}\uae30\uac00\ubc14\uc774\ud2b8",kilobit:"#{n}\ud0ac\ub85c\ube44\ud2b8",kilobyte:"#{n}\ud0ac\ub85c\ubc14\uc774\ud2b8",megabit:"#{n}\uba54\uac00\ube44\ud2b8",
megabyte:"#{n}\uba54\uac00\ubc14\uc774\ud2b8",terabit:"#{n}\ud14c\ub77c\ube44\ud2b8",terabyte:"#{n}\ud14c\ub77c\ubc14\uc774\ud2b8",day:"#{n}\uc77c",hour:"#{n}\uc2dc\uac04",microsecond:"#{n}\ub9c8\uc774\ud06c\ub85c\ucd08",millisecond:"#{n}\ubc00\ub9ac\ucd08",minute:"#{n}\ubd84",month:"#{n}\uac1c\uc6d4",nanosecond:"#{n}\ub098\ub178\ucd08",second:"#{n}\ucd08",week:"#{n}\uc8fc",year:"#{n}\ub144",ampere:"#{n}\uc554\ud398\uc5b4",milliampere:"#{n}\ubc00\ub9ac\uc554\ud398\uc5b4",ohm:"#{n}\uc634",volt:"#{n}\ubcfc\ud2b8",
calorie:"#{n}\uce7c\ub85c\ub9ac",joule:"#{n}\uc904",kilocalorie:"#{n}\ud0ac\ub85c\uce7c\ub85c\ub9ac",kilojoule:"#{n}\ud0ac\ub85c\uc904","kilowatt hour":"#{n}\ud0ac\ub85c\uc640\ud2b8\uc2dc",gigahertz:"#{n}\uae30\uac00\ud5e4\ub974\uce20",hertz:"#{n}\ud5e4\ub974\uce20",kilohertz:"#{n}\ud0ac\ub85c\ud5e4\ub974\uce20",megahertz:"#{n}\uba54\uac00\ud5e4\ub974\uce20","astronomical-unit":"#{n} \ucc9c\ubb38 \ub2e8\uc704",centimeter:"#{n}\uc13c\ud2f0\ubbf8\ud130",decimeter:"#{n}\ub370\uc2dc\ubbf8\ud130",fathom:"#{n} fm",
foot:"#{n}\ud53c\ud2b8",furlong:"#{n} fur",inch:"#{n}\uc778\uce58",kilometer:"#{n}\ud0ac\ub85c\ubbf8\ud130","light-year":"#{n}\uad11\ub144",meter:"#{n}\ubbf8\ud130",micrometer:"#{n}\ub9c8\uc774\ud06c\ub85c\ubbf8\ud130",mile:"#{n}\ub9c8\uc77c",millimeter:"#{n}\ubc00\ub9ac\ubbf8\ud130",nanometer:"#{n}\ub098\ub178\ubbf8\ud130",nauticalmile:"#{n}\ud574\ub9ac",parsec:"#{n}\ud30c\uc139",picometer:"#{n}\ud53c\ucf54\ubbf8\ud130",yard:"#{n}\uc57c\ub4dc",lux:"#{n}\ub8e9\uc2a4",carat:"#{n}\uce90\ub7ff",gram:"#{n}\uadf8\ub7a8",
kilogram:"#{n}\ud0ac\ub85c\uadf8\ub7a8","metric ton":"#{n}\uba54\ud2b8\ub9ad \ud1a4",microgram:"#{n}\ub9c8\uc774\ud06c\ub85c\uadf8\ub7a8",milligram:"#{n}\ubc00\ub9ac\uadf8\ub7a8",ounce:"#{n}\uc628\uc2a4","ounce-troy":"#{n}\ud2b8\ub85c\uc774 \uc628\uc2a4",pound:"#{n}\ud30c\uc6b4\ub4dc",stone:"#{n} st","long ton":"#{n}\ud1a4",gigawatt:"#{n}\uae30\uac00\uc640\ud2b8",horsepower:"#{n}\ub9c8\ub825",kilowatt:"#{n}\ud0ac\ub85c\uc640\ud2b8",megawatt:"#{n}\uba54\uac00\uc640\ud2b8",milliwatt:"#{n}\ubc00\ub9ac\uc640\ud2b8",
watt:"#{n}\uc640\ud2b8",hectopascal:"#{n}\ud5e5\ud1a0\ud30c\uc2a4\uce7c","inch-hg":"#{n}\uc218\uc740\uc8fc\uc778\uce58",millibar:"#{n}\ubc00\ub9ac\ubc14","millimeter-of-mercury":"#{n}\uc218\uc740\uc8fc\ubc00\ub9ac\ubbf8\ud130","pound-per-square-inch":"#{n}\uc81c\uacf1\uc778\uce58\ub2f9 \ud30c\uc6b4\ub4dc",karat:"#{n}\uce90\ub7ff","kilometer/hour":"#\uc2dc\uc18d {n}\ud0ac\ub85c\ubbf8\ud130","meters/second":"#\ucd08\uc18d {n}\ubbf8\ud130","miles/hour":"#\uc2dc\uc18d {n}\ub9c8\uc77c",celsius:"#\uc12d\uc528 {n}\ub3c4",
fahrenheit:"#\ud654\uc528 {n}\ub3c4",kelvin:"#{n}\ucf08\ube48","acre-foot":"#{n}\uc5d0\uc774\ucee4 \ud53c\ud2b8",bushel:"#{n} bu",centiliter:"#{n}\uc13c\ud2f0\ub9ac\ud130","cubic-centimeter":"#{n}\uc138\uc81c\uacf1\uc13c\ud2f0\ubbf8\ud130","cubic foot":"#{n}\uc138\uc81c\uacf1\ud53c\ud2b8","cubic inch":"#{n}\uc138\uc81c\uacf1\uc778\uce58","cubic-kilometer":"#{n}\uc138\uc81c\uacf1\ud0ac\ub85c\ubbf8\ud130","cubic meter":"#{n}\uc138\uc81c\uacf1\ubbf8\ud130","cubic-mile":"#{n}\uc138\uc81c\uacf1\ub9c8\uc77c",
"cubic-yard":"#{n}\uc138\uc81c\uacf1\uc57c\ub4dc",cup:"#{n}\ucef5",deciliter:"#{n}\ub370\uc2dc\ub9ac\ud130","us ounce":"#{n}\uc561\ub7c9 \uc628\uc2a4",gallon:"#{n}\uac24\ub7f0",hectoliter:"#{n}\ud5e5\ud1a0\ub9ac\ud130",liter:"#{n}\ub9ac\ud130",megaliter:"#{n}\uba54\uac00\ub9ac\ud130",milliliter:"#{n}\ubc00\ub9ac\ub9ac\ud130",pint:"#{n}\ud30c\uc778\ud2b8",quart:"#{n}\ucffc\ud2b8",tbsp:"#{n}\ud14c\uc774\ube14\uc2a4\ud47c",tsp:"#{n}\ud2f0\uc2a4\ud47c",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",
megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter",
"liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second","miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons",
"imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},"short":{"g-force":"#{n}G","meter-per-second-squared":"#{n}m/s\u00b2","arc-minute":"#{n}\u2032","arc-second":"#{n}\u2033",degree:"#{n}\u00b0",radian:"#{n}rad",acre:"#{n}\uc5d0\uc774\ucee4",
hectare:"#{n}ha","square centimeter":"#{n}cm\u00b2","square foot":"#{n}ft\u00b2","square inch":"#{n}in\u00b2","square km":"#{n}km\u00b2","square meter":"#{n}m\u00b2","square mile":"#{n}mi\u00b2","square yard":"#{n}yd\u00b2","liter-per-kilometer":"#{n}L/km",mpg:"#{n}mpg",bit:"#{n}bit","byte":"#{n}byte",gigabit:"#{n}Gb",gigabyte:"#{n}GB",kilobit:"#{n}kb",kilobyte:"#{n}kB",megabit:"#{n}Mb",megabyte:"#{n}MB",terabit:"#{n}Tb",terabyte:"#{n}TB",day:"#{n}\uc77c",hour:"#{n}\uc2dc\uac04",microsecond:"#{n}\u03bcs",
millisecond:"#{n}ms",minute:"#{n}\ubd84",month:"#{n}\uac1c\uc6d4",nanosecond:"#{n}ns",second:"#{n}\ucd08",week:"#{n}\uc8fc",year:"#{n}\ub144",ampere:"#{n}A",milliampere:"#{n}mA",ohm:"#{n}\u03a9",volt:"#{n}V",calorie:"#{n}Cal",joule:"#{n}\uc904",kilocalorie:"#{n}kcal",kilojoule:"#{n}kJ","kilowatt hour":"#{n}kWh",gigahertz:"#{n}GHz",hertz:"#{n}Hz",kilohertz:"#{n}kHz",megahertz:"#{n}MHz","astronomical-unit":"#{n}au",centimeter:"#{n}cm",decimeter:"#{n}dm",fathom:"#{n} fm",foot:"#{n}ft",furlong:"#{n} fur",
inch:"#{n}in",kilometer:"#{n}km","light-year":"#{n}ly",meter:"#{n}m",micrometer:"#{n}\u00b5m",mile:"#{n}mil",millimeter:"#{n}mm",nanometer:"#{n}nm",nauticalmile:"#{n}nmi",parsec:"#{n}pc",picometer:"#{n}pm",yard:"#{n}\uc57c\ub4dc",lux:"#{n}lx",carat:"#{n}CD",gram:"#{n}g",kilogram:"#{n}kg","metric ton":"#{n}t",microgram:"#{n}\u00b5g",milligram:"#{n}mg",ounce:"#{n}oz","ounce-troy":"#{n}oz t",pound:"#{n}lb",stone:"#{n} st","long ton":"#{n}tn",gigawatt:"#{n}GW",horsepower:"#{n}HP",kilowatt:"#{n}kW",megawatt:"#{n}MW",
milliwatt:"#{n}mW",watt:"#{n}W",hectopascal:"#{n}hPa","inch-hg":"#{n}inHg",millibar:"#{n}mb","millimeter-of-mercury":"#{n}mm Hg","pound-per-square-inch":"#{n}psi",karat:"#{n}kt","kilometer/hour":"#\uc2dc\uc18d {n}km","meters/second":"#\ucd08\uc18d {n}m","miles/hour":"#\uc2dc\uc18d {n}mi",celsius:"#{n}\u00b0C",fahrenheit:"#{n}\u00b0F",kelvin:"#{n}K","acre-foot":"#{n}ac ft",bushel:"#{n} bu",centiliter:"#{n}cL","cubic-centimeter":"#{n}cm\u00b3","cubic foot":"#{n}ft\u00b3","cubic inch":"#{n}in\u00b3",
"cubic-kilometer":"#{n}km\u00b3","cubic meter":"#{n}m\u00b3","cubic-mile":"#{n}mi\u00b3","cubic-yard":"#{n}yd\u00b3",cup:"#{n}\ucef5",deciliter:"#{n}dL","us ounce":"#{n}fl oz",gallon:"#{n}gal",hectoliter:"#{n}hL",liter:"#{n}L",megaliter:"#{n}ML",milliliter:"#{n}mL",pint:"#{n}pt",quart:"#{n}qt",tbsp:"#{n}tbsp",tsp:"#{n}tsp",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",
millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",
decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp","imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_pt={unitfmt:{"long":{"g-force":"1#{n} for\u00e7a g|#{n} for\u00e7a g","meter-per-second-squared":"1#{n} metro por segundo ao quadrado|#{n} metros por segundo ao quadrado","arc-minute":"1#{n} minuto de arco|#{n} minutos de arco","arc-second":"1#{n} segundo de arco|#{n} segundos de arco",degree:"1#{n} grau|#{n} graus",radian:"1#{n} radiano|#{n} radianos",acre:"1#{n} acre|#{n} acres",hectare:"1#{n} hectare|#{n} hectares","square centimeter":"1#{n} cent\u00edmetro quadrado|#{n} cent\u00edmetros quadrados",
"square foot":"1#{n} p\u00e9 quadrado|#{n} p\u00e9s quadrados","square inch":"1#{n} polegada quadrada|#{n} polegadas quadradas","square km":"1#{n} quil\u00f4metro quadrado|#{n} quil\u00f4metros quadrados","square meter":"1#{n} metro quadrado|#{n} metros quadrados","square mile":"1#{n} milha quadrada|#{n} milhas quadradas","square yard":"1#{n} jarda quadrada|#{n} jardas quadradas","liter-per-kilometer":"1#{n} litro por quil\u00f4metro|#{n} litros por quil\u00f4metro",mpg:"1#{n} milha por gal\u00e3o|#{n} milhas por gal\u00e3o",
bit:"1#{n} bit|#{n} bits","byte":"1#{n} byte|#{n} bytes",gigabit:"1#{n} gigabit|#{n} gigabits",gigabyte:"1#{n} gigabyte|#{n} gigabytes",kilobit:"1#{n} kilobit|#{n} kilobits",kilobyte:"1#{n} kilobyte|#{n} kilobytes",megabit:"1#{n} megabit|#{n} megabits",megabyte:"1#{n} megabyte|#{n} megabytes",terabit:"1#{n} terabit|#{n} terabits",terabyte:"1#{n} terabyte|#{n} terabytes",day:"1#{n} dia|#{n} dias",hour:"1#{n} hora|#{n} horas",microsecond:"1#{n} microssegundo|#{n} microssegundos",millisecond:"1#{n} milissegundo|#{n} milissegundos",
minute:"1#{n} minuto|#{n} minutos",month:"1#{n} m\u00eas|#{n} meses",nanosecond:"1#{n} nanossegundo|#{n} nanossegundos",second:"1#{n} segundo|#{n} segundos",week:"1#{n} semana|#{n} semanas",year:"1#{n} ano|#{n} anos",ampere:"1#{n} ampere|#{n} amperes",milliampere:"1#{n} miliampere|#{n} miliamperes",ohm:"1#{n} ohm|#{n} ohms",volt:"1#{n} volt|#{n} volts",calorie:"1#{n} Caloria|#{n} Calorias",joule:"1#{n} joule|#{n} joules",kilocalorie:"1#{n} quilocaloria|#{n} quilocalorias",kilojoule:"1#{n} quilojoule|#{n} quilojoules",
"kilowatt hour":"1#{n} quilowatt-hora|#{n} quilowatts-hora",gigahertz:"1#{n} gigahertz|#{n} gigahertz",hertz:"1#{n} hertz|#{n} hertz",kilohertz:"1#{n} kilohertz|#{n} kilohertz",megahertz:"1#{n} megahertz|#{n} megahertz","astronomical-unit":"1#{n} unidade astron\u00f4mica|#{n} unidades astron\u00f4micas",centimeter:"1#{n} cent\u00edmetro|#{n} cent\u00edmetros",decimeter:"1#{n} dec\u00edmetro|#{n} dec\u00edmetros",fathom:"#{n} fm",foot:"1#{n} p\u00e9|#{n} p\u00e9s",furlong:"#{n} fur",inch:"1#{n} polegada|#{n} polegadas",
kilometer:"1#{n} quil\u00f4metro|#{n} quil\u00f4metros","light-year":"1#{n} ano-luz|#{n} anos-luz",meter:"1#{n} metro|#{n} metros",micrometer:"1#{n} micr\u00f4metro|#{n} micr\u00f4metros",mile:"1#{n} milha|#{n} milhas",millimeter:"1#{n} mil\u00edmetro|#{n} mil\u00edmetros",nanometer:"1#{n} nan\u00f4metro|#{n} nan\u00f4metros",nauticalmile:"1#{n} milha n\u00e1utica|#{n} milhas n\u00e1uticas",parsec:"1#{n} parsec|#{n} parsecs",picometer:"1#{n} pic\u00f4metro|#{n} pic\u00f4metros",yard:"1#{n} jarda|#{n} jardas",
lux:"1#{n} lux|#{n} lux",carat:"1#{n} quilate|#{n} quilates",gram:"1#{n} grama|#{n} gramas",kilogram:"1#{n} quilograma|#{n} quilogramas","metric ton":"1#{n} tonelada m\u00e9trica|#{n} toneladas m\u00e9tricas",microgram:"1#{n} micrograma|#{n} microgramas",milligram:"1#{n} miligrama|#{n} miligramas",ounce:"1#{n} on\u00e7a|#{n} on\u00e7as","ounce-troy":"1#{n} on\u00e7a troy|#{n} on\u00e7as troy",pound:"1#{n} libra|#{n} libras",stone:"#{n} st","long ton":"1#{n} tonelada|#{n} toneladas",gigawatt:"1#{n} gigawatt|#{n} gigawatts",
horsepower:"1#{n} cavalo-vapor|#{n} cavalos-vapor",kilowatt:"1#{n} quilowatt|#{n} quilowatts",megawatt:"1#{n} megawatt|#{n} megawatts",milliwatt:"1#{n} miliwatt|#{n} miliwatts",watt:"1#{n} watt|#{n} watts",hectopascal:"1#{n} hectopascal|#{n} hectopascais","inch-hg":"1#{n} polegada de merc\u00fario|#{n} polegadas de merc\u00fario",millibar:"1#{n} milibar|#{n} milibares","millimeter-of-mercury":"1#{n} mil\u00edmetro de merc\u00fario|#{n} mil\u00edmetros de merc\u00fario","pound-per-square-inch":"1#{n} psi|#{n} psi",
karat:"1#{n} kilate|#{n} kilates","kilometer/hour":"1#{n} quil\u00f4metro por hora|#{n} quil\u00f4metros por hora","meters/second":"1#{n} metro por segundo|#{n} metros por segundo","miles/hour":"1#{n} milha por hora|#{n} milhas por hora",celsius:"1#{n} grau Celsius|#{n} graus Celsius",fahrenheit:"1#{n} grau Fahrenheit|#{n} graus Fahrenheit",kelvin:"1#{n} kelvin|#{n} kelvins","acre-foot":"1#{n} acre-p\u00e9|#{n} acre-p\u00e9s",bushel:"#{n} bu",centiliter:"1#{n} centilitro|#{n} centilitros","cubic-centimeter":"1#{n} cent\u00edmetro c\u00fabico|#{n} cent\u00edmetros c\u00fabicos",
"cubic foot":"1#{n} p\u00e9 c\u00fabico|#{n} p\u00e9s c\u00fabicos","cubic inch":"1#{n} polegada c\u00fabica|#{n} polegadas c\u00fabicas","cubic-kilometer":"1#{n} quil\u00f4metro c\u00fabico|#{n} quil\u00f4metros c\u00fabicos","cubic meter":"1#{n} metro c\u00fabico|#{n} metros c\u00fabicos","cubic-mile":"1#{n} milha c\u00fabica|#{n} milhas c\u00fabicas","cubic-yard":"1#{n} jarda c\u00fabica|#{n} jardas c\u00fabicas",cup:"1#{n} x\u00edcara|#{n} x\u00edcaras",deciliter:"1#{n} decilitro|#{n} decilitros",
"us ounce":"1#{n} on\u00e7a fluida|#{n} on\u00e7as fluidas",gallon:"1#{n} gal\u00e3o|#{n} gal\u00f5es",hectoliter:"1#{n} hectolitro|#{n} hectolitros",liter:"1#{n} litro|#{n} litros",megaliter:"1#{n} megalitro|#{n} megalitros",milliliter:"1#{n} mililitro|#{n} mililitros",pint:"1#{n} pint|#{n} pints",quart:"1#{n} quarto|#{n} quartos",tbsp:"1#{n} colher de sopa|#{n} colheres de sopa",tsp:"1#{n} colher de ch\u00e1|#{n} colheres de ch\u00e1",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",
megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter",
"liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second","miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons",
"imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},"short":{"g-force":"1#{n} G|#{n} G","meter-per-second-squared":"1#{n} m/s\u00b2|#{n} m/s\u00b2","arc-minute":"1#{n} arcmin|#{n} arcmins","arc-second":"1#{n} arcseg|#{n} arcsegs",degree:"1#{n}\u00b0|#{n}\u00b0",
radian:"1#{n} rad|#{n} rad",acre:"1#{n} ac|#{n} ac",hectare:"1#{n} ha|#{n} ha","square centimeter":"1#{n} cm\u00b2|#{n} cm\u00b2","square foot":"1#{n} ft\u00b2|#{n} ft\u00b2","square inch":"1#{n} pol\u00b2|#{n} pol\u00b2","square km":"1#{n} km\u00b2|#{n} km\u00b2","square meter":"1#{n} m\u00b2|#{n} m\u00b2","square mile":"1#{n} mi\u00b2|#{n} mi\u00b2","square yard":"1#{n} yd\u00b2|#{n} yd\u00b2","liter-per-kilometer":"1#{n} l/km|#{n} l/km",mpg:"1#{n} mpg|#{n} mpg",bit:"1#{n} bit|#{n} bit","byte":"1#{n} byte|#{n} byte",
gigabit:"1#{n} Gb|#{n} Gb",gigabyte:"1#{n} GB|#{n} GB",kilobit:"1#{n} kb|#{n} kb",kilobyte:"1#{n} kB|#{n} kB",megabit:"1#{n} Mb|#{n} Mb",megabyte:"1#{n} MB|#{n} MB",terabit:"1#{n} Tb|#{n} Tb",terabyte:"1#{n} TB|#{n} TB",day:"1#{n} dia|#{n} dias",hour:"1#{n} h|#{n} h",microsecond:"1#{n} \u03bcs|#{n} \u03bcs",millisecond:"1#{n} ms|#{n} ms",minute:"1#{n} min|#{n} min",month:"1#{n} m\u00eas|#{n} meses",nanosecond:"1#{n} ns|#{n} ns",second:"1#{n} seg|#{n} seg",week:"1#{n} sem.|#{n} sem.",year:"1#{n} ano|#{n} anos",
ampere:"1#{n} A|#{n} A",milliampere:"1#{n} mA|#{n} mA",ohm:"1#{n} \u03a9|#{n} \u03a9",volt:"1#{n} V|#{n} V",calorie:"1#{n} Cal|#{n} Cal",joule:"1#{n} J|#{n} J",kilocalorie:"1#{n} kcal|#{n} kcal",kilojoule:"1#{n} kJ|#{n} kJ","kilowatt hour":"1#{n} kWh|#{n} kWh",gigahertz:"1#{n} GHz|#{n} GHz",hertz:"1#{n} Hz|#{n} Hz",kilohertz:"1#{n} kHz|#{n} kHz",megahertz:"1#{n} MHz|#{n} MHz","astronomical-unit":"1#{n} ua|#{n} ua",centimeter:"1#{n} cm|#{n} cm",decimeter:"1#{n} dm|#{n} dm",fathom:"#{n} fm",foot:"1#{n} p\u00e9|#{n} p\u00e9s",
furlong:"#{n} fur",inch:"1#{n} pol.|#{n} pol.",kilometer:"1#{n} km|#{n} km","light-year":"1#{n} ano-luz|#{n} anos-luz",meter:"1#{n} m|#{n} m",micrometer:"1#{n} \u00b5m|#{n} \u00b5m",mile:"1#{n} mi|#{n} mi",millimeter:"1#{n} mm|#{n} mm",nanometer:"1#{n} nm|#{n} nm",nauticalmile:"1#{n} mn|#{n} mn",parsec:"1#{n} pc|#{n} pc",picometer:"1#{n} pm|#{n} pm",yard:"1#{n} yd|#{n} yd",lux:"1#{n} lx|#{n} lx",carat:"1#{n} ql|#{n} ql",gram:"1#{n} g|#{n} g",kilogram:"1#{n} kg|#{n} kg","metric ton":"1#{n} t|#{n} t",
microgram:"1#{n} \u00b5g|#{n} \u00b5g",milligram:"1#{n} mg|#{n} mg",ounce:"1#{n} oz|#{n} oz","ounce-troy":"1#{n} oz t|#{n} oz t",pound:"1#{n} lb|#{n} lb",stone:"#{n} st","long ton":"1#{n} tn|#{n} tn",gigawatt:"1#{n} GW|#{n} GW",horsepower:"1#{n} cv|#{n} cv",kilowatt:"1#{n} kW|#{n} kW",megawatt:"1#{n} MW|#{n} MW",milliwatt:"1#{n} mW|#{n} mW",watt:"1#{n} W|#{n} W",hectopascal:"1#{n} hPa|#{n} hPa","inch-hg":"1#{n} pol Hg|#{n} pol Hg",millibar:"1#{n} mbar|#{n} mbar","millimeter-of-mercury":"1#{n} mm Hg|#{n} mm Hg",
"pound-per-square-inch":"1#{n} psi|#{n} psi",karat:"1#{n} k|#{n} k","kilometer/hour":"1#{n} km/h|#{n} km/h","meters/second":"1#{n} m/s|#{n} m/s","miles/hour":"1#{n} mph|#{n} mph",celsius:"1#{n}\u00b0C|#{n}\u00b0C",fahrenheit:"1#{n} \u00b0F|#{n} \u00b0F",kelvin:"1#{n} K|#{n} K","acre-foot":"1#{n} acre-p\u00e9|#{n} acre-p\u00e9s",bushel:"#{n} bu",centiliter:"1#{n} cl|#{n} cl","cubic-centimeter":"1#{n} cm\u00b3|#{n} cm\u00b3","cubic foot":"1#{n} ft\u00b3|#{n} ft\u00b3","cubic inch":"1#{n} pol\u00b3|#{n} pol\u00b3",
"cubic-kilometer":"1#{n} km\u00b3|#{n} km\u00b3","cubic meter":"1#{n} m\u00b3|#{n} m\u00b3","cubic-mile":"1#{n} mi\u00b3|#{n} mi\u00b3","cubic-yard":"1#{n} yd\u00b3|#{n} yd\u00b3",cup:"1#{n} x\u00edc.|#{n} x\u00edc.",deciliter:"1#{n} dl|#{n} dl","us ounce":"1#{n} fl oz|#{n} fl oz",gallon:"1#{n} gal|#{n} gal",hectoliter:"1#{n} hl|#{n} hl",liter:"1#{n} l|#{n} l",megaliter:"1#{n} ML|#{n} ML",milliliter:"1#{n} ml|#{n} ml",pint:"1#{n} pt|#{n} pt",quart:"1#{n} qt|#{n} qt",tbsp:"1#{n} CS|#{n} CS",tsp:"1#{n} cc|#{n} cc",
decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)",
"short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp","imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt",
"imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_pt_BR={unitfmt:{"long":{"g-force":"1#{n} for\u00e7a g|#{n} for\u00e7a g","meter-per-second-squared":"1#{n} metro por segundo ao quadrado|#{n} metros por segundo ao quadrado","arc-minute":"1#{n} minuto de arco|#{n} minutos de arco","arc-second":"1#{n} segundo de arco|#{n} segundos de arco",degree:"1#{n} grau|#{n} graus",radian:"1#{n} radiano|#{n} radianos",acre:"1#{n} acre|#{n} acres",hectare:"1#{n} hectare|#{n} hectares","square centimeter":"1#{n} cent\u00edmetro quadrado|#{n} cent\u00edmetros quadrados",
"square foot":"1#{n} p\u00e9 quadrado|#{n} p\u00e9s quadrados","square inch":"1#{n} polegada quadrada|#{n} polegadas quadradas","square km":"1#{n} quil\u00f4metro quadrado|#{n} quil\u00f4metros quadrados","square meter":"1#{n} metro quadrado|#{n} metros quadrados","square mile":"1#{n} milha quadrada|#{n} milhas quadradas","square yard":"1#{n} jarda quadrada|#{n} jardas quadradas","liter-per-kilometer":"1#{n} litro por quil\u00f4metro|#{n} litros por quil\u00f4metro",mpg:"1#{n} milha por gal\u00e3o|#{n} milhas por gal\u00e3o",
bit:"1#{n} bit|#{n} bits","byte":"1#{n} byte|#{n} bytes",gigabit:"1#{n} gigabit|#{n} gigabits",gigabyte:"1#{n} gigabyte|#{n} gigabytes",kilobit:"1#{n} kilobit|#{n} kilobits",kilobyte:"1#{n} kilobyte|#{n} kilobytes",megabit:"1#{n} megabit|#{n} megabits",megabyte:"1#{n} megabyte|#{n} megabytes",terabit:"1#{n} terabit|#{n} terabits",terabyte:"1#{n} terabyte|#{n} terabytes",day:"1#{n} dia|#{n} dias",hour:"1#{n} hora|#{n} horas",microsecond:"1#{n} microssegundo|#{n} microssegundos",millisecond:"1#{n} milissegundo|#{n} milissegundos",
minute:"1#{n} minuto|#{n} minutos",month:"1#{n} m\u00eas|#{n} meses",nanosecond:"1#{n} nanossegundo|#{n} nanossegundos",second:"1#{n} segundo|#{n} segundos",week:"1#{n} semana|#{n} semanas",year:"1#{n} ano|#{n} anos",ampere:"1#{n} ampere|#{n} amperes",milliampere:"1#{n} miliampere|#{n} miliamperes",ohm:"1#{n} ohm|#{n} ohms",volt:"1#{n} volt|#{n} volts",calorie:"1#{n} Caloria|#{n} Calorias",joule:"1#{n} joule|#{n} joules",kilocalorie:"1#{n} quilocaloria|#{n} quilocalorias",kilojoule:"1#{n} quilojoule|#{n} quilojoules",
"kilowatt hour":"1#{n} quilowatt-hora|#{n} quilowatts-hora",gigahertz:"1#{n} gigahertz|#{n} gigahertz",hertz:"1#{n} hertz|#{n} hertz",kilohertz:"1#{n} kilohertz|#{n} kilohertz",megahertz:"1#{n} megahertz|#{n} megahertz","astronomical-unit":"1#{n} unidade astron\u00f4mica|#{n} unidades astron\u00f4micas",centimeter:"1#{n} cent\u00edmetro|#{n} cent\u00edmetros",decimeter:"1#{n} dec\u00edmetro|#{n} dec\u00edmetros",fathom:"#{n} fm",foot:"1#{n} p\u00e9|#{n} p\u00e9s",furlong:"#{n} fur",inch:"1#{n} polegada|#{n} polegadas",
kilometer:"1#{n} quil\u00f4metro|#{n} quil\u00f4metros","light-year":"1#{n} ano-luz|#{n} anos-luz",meter:"1#{n} metro|#{n} metros",micrometer:"1#{n} micr\u00f4metro|#{n} micr\u00f4metros",mile:"1#{n} milha|#{n} milhas",millimeter:"1#{n} mil\u00edmetro|#{n} mil\u00edmetros",nanometer:"1#{n} nan\u00f4metro|#{n} nan\u00f4metros",nauticalmile:"1#{n} milha n\u00e1utica|#{n} milhas n\u00e1uticas",parsec:"1#{n} parsec|#{n} parsecs",picometer:"1#{n} pic\u00f4metro|#{n} pic\u00f4metros",yard:"1#{n} jarda|#{n} jardas",
lux:"1#{n} lux|#{n} lux",carat:"1#{n} quilate|#{n} quilates",gram:"1#{n} grama|#{n} gramas",kilogram:"1#{n} quilograma|#{n} quilogramas","metric ton":"1#{n} tonelada m\u00e9trica|#{n} toneladas m\u00e9tricas",microgram:"1#{n} micrograma|#{n} microgramas",milligram:"1#{n} miligrama|#{n} miligramas",ounce:"1#{n} on\u00e7a|#{n} on\u00e7as","ounce-troy":"1#{n} on\u00e7a troy|#{n} on\u00e7as troy",pound:"1#{n} libra|#{n} libras",stone:"#{n} st","long ton":"1#{n} tonelada|#{n} toneladas",gigawatt:"1#{n} gigawatt|#{n} gigawatts",
horsepower:"1#{n} cavalo-vapor|#{n} cavalos-vapor",kilowatt:"1#{n} quilowatt|#{n} quilowatts",megawatt:"1#{n} megawatt|#{n} megawatts",milliwatt:"1#{n} miliwatt|#{n} miliwatts",watt:"1#{n} watt|#{n} watts",hectopascal:"1#{n} hectopascal|#{n} hectopascais","inch-hg":"1#{n} polegada de merc\u00fario|#{n} polegadas de merc\u00fario",millibar:"1#{n} milibar|#{n} milibares","millimeter-of-mercury":"1#{n} mil\u00edmetro de merc\u00fario|#{n} mil\u00edmetros de merc\u00fario","pound-per-square-inch":"1#{n} psi|#{n} psi",
karat:"1#{n} kilate|#{n} kilates","kilometer/hour":"1#{n} quil\u00f4metro por hora|#{n} quil\u00f4metros por hora","meters/second":"1#{n} metro por segundo|#{n} metros por segundo","miles/hour":"1#{n} milha por hora|#{n} milhas por hora",celsius:"1#{n} grau Celsius|#{n} graus Celsius",fahrenheit:"1#{n} grau Fahrenheit|#{n} graus Fahrenheit",kelvin:"1#{n} kelvin|#{n} kelvins","acre-foot":"1#{n} acre-p\u00e9|#{n} acre-p\u00e9s",bushel:"#{n} bu",centiliter:"1#{n} centilitro|#{n} centilitros","cubic-centimeter":"1#{n} cent\u00edmetro c\u00fabico|#{n} cent\u00edmetros c\u00fabicos",
"cubic foot":"1#{n} p\u00e9 c\u00fabico|#{n} p\u00e9s c\u00fabicos","cubic inch":"1#{n} polegada c\u00fabica|#{n} polegadas c\u00fabicas","cubic-kilometer":"1#{n} quil\u00f4metro c\u00fabico|#{n} quil\u00f4metros c\u00fabicos","cubic meter":"1#{n} metro c\u00fabico|#{n} metros c\u00fabicos","cubic-mile":"1#{n} milha c\u00fabica|#{n} milhas c\u00fabicas","cubic-yard":"1#{n} jarda c\u00fabica|#{n} jardas c\u00fabicas",cup:"1#{n} x\u00edcara|#{n} x\u00edcaras",deciliter:"1#{n} decilitro|#{n} decilitros",
"us ounce":"1#{n} on\u00e7a fluida|#{n} on\u00e7as fluidas",gallon:"1#{n} gal\u00e3o|#{n} gal\u00f5es",hectoliter:"1#{n} hectolitro|#{n} hectolitros",liter:"1#{n} litro|#{n} litros",megaliter:"1#{n} megalitro|#{n} megalitros",milliliter:"1#{n} mililitro|#{n} mililitros",pint:"1#{n} pint|#{n} pints",quart:"1#{n} quarto|#{n} quartos",tbsp:"1#{n} colher de sopa|#{n} colheres de sopa",tsp:"1#{n} colher de ch\u00e1|#{n} colheres de ch\u00e1",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",
megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter",
"liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second","miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons",
"imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},"short":{"g-force":"1#{n} G|#{n} G","meter-per-second-squared":"1#{n} m/s\u00b2|#{n} m/s\u00b2","arc-minute":"1#{n} arcmin|#{n} arcmins","arc-second":"1#{n} arcseg|#{n} arcsegs",degree:"1#{n}\u00b0|#{n}\u00b0",
radian:"1#{n} rad|#{n} rad",acre:"1#{n} ac|#{n} ac",hectare:"1#{n} ha|#{n} ha","square centimeter":"1#{n} cm\u00b2|#{n} cm\u00b2","square foot":"1#{n} ft\u00b2|#{n} ft\u00b2","square inch":"1#{n} pol\u00b2|#{n} pol\u00b2","square km":"1#{n} km\u00b2|#{n} km\u00b2","square meter":"1#{n} m\u00b2|#{n} m\u00b2","square mile":"1#{n} mi\u00b2|#{n} mi\u00b2","square yard":"1#{n} yd\u00b2|#{n} yd\u00b2","liter-per-kilometer":"1#{n} l/km|#{n} l/km",mpg:"1#{n} mpg|#{n} mpg",bit:"1#{n} bit|#{n} bit","byte":"1#{n} byte|#{n} byte",
gigabit:"1#{n} Gb|#{n} Gb",gigabyte:"1#{n} GB|#{n} GB",kilobit:"1#{n} kb|#{n} kb",kilobyte:"1#{n} kB|#{n} kB",megabit:"1#{n} Mb|#{n} Mb",megabyte:"1#{n} MB|#{n} MB",terabit:"1#{n} Tb|#{n} Tb",terabyte:"1#{n} TB|#{n} TB",day:"1#{n} dia|#{n} dias",hour:"1#{n} h|#{n} h",microsecond:"1#{n} \u03bcs|#{n} \u03bcs",millisecond:"1#{n} ms|#{n} ms",minute:"1#{n} min|#{n} min",month:"1#{n} m\u00eas|#{n} meses",nanosecond:"1#{n} ns|#{n} ns",second:"1#{n} seg|#{n} seg",week:"1#{n} sem.|#{n} sem.",year:"1#{n} ano|#{n} anos",
ampere:"1#{n} A|#{n} A",milliampere:"1#{n} mA|#{n} mA",ohm:"1#{n} \u03a9|#{n} \u03a9",volt:"1#{n} V|#{n} V",calorie:"1#{n} Cal|#{n} Cal",joule:"1#{n} J|#{n} J",kilocalorie:"1#{n} kcal|#{n} kcal",kilojoule:"1#{n} kJ|#{n} kJ","kilowatt hour":"1#{n} kWh|#{n} kWh",gigahertz:"1#{n} GHz|#{n} GHz",hertz:"1#{n} Hz|#{n} Hz",kilohertz:"1#{n} kHz|#{n} kHz",megahertz:"1#{n} MHz|#{n} MHz","astronomical-unit":"1#{n} ua|#{n} ua",centimeter:"1#{n} cm|#{n} cm",decimeter:"1#{n} dm|#{n} dm",fathom:"#{n} fm",foot:"1#{n} p\u00e9|#{n} p\u00e9s",
furlong:"#{n} fur",inch:"1#{n} pol.|#{n} pol.",kilometer:"1#{n} km|#{n} km","light-year":"1#{n} ano-luz|#{n} anos-luz",meter:"1#{n} m|#{n} m",micrometer:"1#{n} \u00b5m|#{n} \u00b5m",mile:"1#{n} mi|#{n} mi",millimeter:"1#{n} mm|#{n} mm",nanometer:"1#{n} nm|#{n} nm",nauticalmile:"1#{n} mn|#{n} mn",parsec:"1#{n} pc|#{n} pc",picometer:"1#{n} pm|#{n} pm",yard:"1#{n} yd|#{n} yd",lux:"1#{n} lx|#{n} lx",carat:"1#{n} ql|#{n} ql",gram:"1#{n} g|#{n} g",kilogram:"1#{n} kg|#{n} kg","metric ton":"1#{n} t|#{n} t",
microgram:"1#{n} \u00b5g|#{n} \u00b5g",milligram:"1#{n} mg|#{n} mg",ounce:"1#{n} oz|#{n} oz","ounce-troy":"1#{n} oz t|#{n} oz t",pound:"1#{n} lb|#{n} lb",stone:"#{n} st","long ton":"1#{n} tn|#{n} tn",gigawatt:"1#{n} GW|#{n} GW",horsepower:"1#{n} cv|#{n} cv",kilowatt:"1#{n} kW|#{n} kW",megawatt:"1#{n} MW|#{n} MW",milliwatt:"1#{n} mW|#{n} mW",watt:"1#{n} W|#{n} W",hectopascal:"1#{n} hPa|#{n} hPa","inch-hg":"1#{n} pol Hg|#{n} pol Hg",millibar:"1#{n} mbar|#{n} mbar","millimeter-of-mercury":"1#{n} mm Hg|#{n} mm Hg",
"pound-per-square-inch":"1#{n} psi|#{n} psi",karat:"1#{n} k|#{n} k","kilometer/hour":"1#{n} km/h|#{n} km/h","meters/second":"1#{n} m/s|#{n} m/s","miles/hour":"1#{n} mph|#{n} mph",celsius:"1#{n}\u00b0C|#{n}\u00b0C",fahrenheit:"1#{n} \u00b0F|#{n} \u00b0F",kelvin:"1#{n} K|#{n} K","acre-foot":"1#{n} acre-p\u00e9|#{n} acre-p\u00e9s",bushel:"#{n} bu",centiliter:"1#{n} cl|#{n} cl","cubic-centimeter":"1#{n} cm\u00b3|#{n} cm\u00b3","cubic foot":"1#{n} ft\u00b3|#{n} ft\u00b3","cubic inch":"1#{n} pol\u00b3|#{n} pol\u00b3",
"cubic-kilometer":"1#{n} km\u00b3|#{n} km\u00b3","cubic meter":"1#{n} m\u00b3|#{n} m\u00b3","cubic-mile":"1#{n} mi\u00b3|#{n} mi\u00b3","cubic-yard":"1#{n} yd\u00b3|#{n} yd\u00b3",cup:"1#{n} x\u00edc.|#{n} x\u00edc.",deciliter:"1#{n} dl|#{n} dl","us ounce":"1#{n} fl oz|#{n} fl oz",gallon:"1#{n} gal|#{n} gal",hectoliter:"1#{n} hl|#{n} hl",liter:"1#{n} l|#{n} l",megaliter:"1#{n} ML|#{n} ML",milliliter:"1#{n} ml|#{n} ml",pint:"1#{n} pt|#{n} pt",quart:"1#{n} qt|#{n} qt",tbsp:"1#{n} CS|#{n} CS",tsp:"1#{n} cc|#{n} cc",
decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)",
"short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp","imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt",
"imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_ru={unitfmt:{"long":{"g-force":"1#{n} g|few#{n} g|many#{n} g|#{n} g","meter-per-second-squared":"1#{n} \u043c\u0435\u0442\u0440 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0443 \u0432 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0435|few#{n} \u043c\u0435\u0442\u0440\u0430 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0443 \u0432 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0435|many#{n} \u043c\u0435\u0442\u0440\u043e\u0432 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0443 \u0432 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0435|#{n} \u043c\u0435\u0442\u0440\u0430 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0443 \u0432 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0435","arc-minute":"1#{n} \u043c\u0438\u043d\u0443\u0442\u0430|few#{n} \u043c\u0438\u043d\u0443\u0442\u044b|many#{n} \u043c\u0438\u043d\u0443\u0442|#{n} \u043c\u0438\u043d\u0443\u0442\u044b",
"arc-second":"1#{n} \u0441\u0435\u043a\u0443\u043d\u0434\u0430|few#{n} \u0441\u0435\u043a\u0443\u043d\u0434\u044b|many#{n} \u0441\u0435\u043a\u0443\u043d\u0434|#{n} \u0441\u0435\u043a\u0443\u043d\u0434\u044b",degree:"1#{n}\u0433\u0440\u0430\u0434\u0443\u0441|few#{n} \u0433\u0440\u0430\u0434\u0443\u0441\u0430|many#{n} \u0433\u0440\u0430\u0434\u0443\u0441\u043e\u0432|#{n} \u0433\u0440\u0430\u0434\u0443\u0441\u0430",radian:"1#{n} \u0440\u0430\u0434\u0438\u0430\u043d|few#{n} \u0440\u0430\u0434\u0438\u0430\u043d\u0430|many#{n} \u0440\u0430\u0434\u0438\u0430\u043d|#{n} \u0440\u0430\u0434\u0438\u0430\u043d\u0430",
acre:"1#{n} \u0430\u043a\u0440|few#{n} \u0430\u043a\u0440\u0430|many#{n} \u0430\u043a\u0440\u043e\u0432|#{n} \u0430\u043a\u0440\u0430",hectare:"1#{n} \u0433\u0435\u043a\u0442\u0430\u0440|few#{n} \u0433\u0435\u043a\u0442\u0430\u0440\u0430|many#{n} \u0433\u0435\u043a\u0442\u0430\u0440|#{n} \u0433\u0435\u043a\u0442\u0430\u0440\u0430","square centimeter":"1#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u0441\u0430\u043d\u0442\u0438\u043c\u0435\u0442\u0440|few#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u0441\u0430\u043d\u0442\u0438\u043c\u0435\u0442\u0440\u0430|many#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u0441\u0430\u043d\u0442\u0438\u043c\u0435\u0442\u0440\u043e\u0432|#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0441\u0430\u043d\u0442\u0438\u043c\u0435\u0442\u0440\u0430",
"square foot":"1#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u0444\u0443\u0442|few#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u0444\u0443\u0442\u0430|many#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u0444\u0443\u0442\u043e\u0432|#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0444\u0443\u0442\u0430","square inch":"1#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u0434\u044e\u0439\u043c|few#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u0434\u044e\u0439\u043c\u0430|many#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u0434\u044e\u0439\u043c\u043e\u0432|#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0434\u044e\u0439\u043c\u0430",
"square km":"1#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440|few#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440\u0430|many#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440\u043e\u0432|#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440\u0430",
"square meter":"1#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u043c\u0435\u0442\u0440|few#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u043c\u0435\u0442\u0440\u0430|many#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u043c\u0435\u0442\u0440\u043e\u0432|#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u0440\u0430","square mile":"1#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u0430\u044f \u043c\u0438\u043b\u044f|few#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u043c\u0438\u043b\u0438|many#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u043c\u0438\u043b\u044c|#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0439 \u043c\u0438\u043b\u0438",
"square yard":"1#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u044f\u0440\u0434|few#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u044f\u0440\u0434\u0430|many#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u044f\u0440\u0434\u043e\u0432|#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u044f\u0440\u0434\u0430","liter-per-kilometer":"1#{n} \u043b\u0438\u0442\u0440 \u043d\u0430 \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440|few#{n} \u043b\u0438\u0442\u0440\u0430 \u043d\u0430 \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440|many#{n} \u043b\u0438\u0442\u0440\u043e\u0432 \u043d\u0430 \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440|#{n} \u043b\u0438\u0442\u0440\u0430 \u043d\u0430 \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440",
mpg:"1#{n} \u043c\u0438\u043b\u044f \u043d\u0430 \u0433\u0430\u043b\u043b\u043e\u043d|few#{n} \u043c\u0438\u043b\u0438 \u043d\u0430 \u0433\u0430\u043b\u043b\u043e\u043d|many#{n} \u043c\u0438\u043b\u044c \u043d\u0430 \u0433\u0430\u043b\u043b\u043e\u043d|#{n} \u043c\u0438\u043b\u0438 \u043d\u0430 \u0433\u0430\u043b\u043b\u043e\u043d",bit:"1#{n} \u0431\u0438\u0442|few#{n} \u0431\u0438\u0442\u0430|many#{n} \u0431\u0438\u0442|#{n} \u0431\u0438\u0442\u0430","byte":"1#{n} \u0431\u0430\u0439\u0442|few#{n} \u0431\u0430\u0439\u0442\u0430|many#{n} \u0431\u0430\u0439\u0442|#{n} \u0431\u0430\u0439\u0442\u0430",
gigabit:"1#{n} \u0433\u0438\u0433\u0430\u0431\u0438\u0442|few#{n} \u0433\u0438\u0433\u0430\u0431\u0438\u0442\u0430|many#{n} \u0433\u0438\u0433\u0430\u0431\u0438\u0442|#{n} \u0433\u0438\u0433\u0430\u0431\u0438\u0442\u0430",gigabyte:"1#{n} \u0433\u0438\u0433\u0430\u0431\u0430\u0439\u0442|few#{n} \u0433\u0438\u0433\u0430\u0431\u0430\u0439\u0442\u0430|many#{n} \u0433\u0438\u0433\u0430\u0431\u0430\u0439\u0442|#{n} \u0433\u0438\u0433\u0430\u0431\u0430\u0439\u0442\u0430",kilobit:"1#{n} \u043a\u0438\u043b\u043e\u0431\u0438\u0442|few#{n} \u043a\u0438\u043b\u043e\u0431\u0438\u0442\u0430|many#{n} \u043a\u0438\u043b\u043e\u0431\u0438\u0442|#{n} \u043a\u0438\u043b\u043e\u0431\u0438\u0442\u0430",
kilobyte:"1#{n} \u043a\u0438\u043b\u043e\u0431\u0430\u0439\u0442|few#{n} \u043a\u0438\u043b\u043e\u0431\u0430\u0439\u0442\u0430|many#{n} \u043a\u0438\u043b\u043e\u0431\u0430\u0439\u0442|#{n} \u043a\u0438\u043b\u043e\u0431\u0430\u0439\u0442\u0430",megabit:"1#{n} \u043c\u0435\u0433\u0430\u0431\u0438\u0442|few#{n} \u043c\u0435\u0433\u0430\u0431\u0438\u0442\u0430|many#{n} \u043c\u0435\u0433\u0430\u0431\u0438\u0442|#{n} \u043c\u0435\u0433\u0430\u0431\u0438\u0442\u0430",megabyte:"1#{n} \u043c\u0435\u0433\u0430\u0431\u0430\u0439\u0442|few#{n} \u043c\u0435\u0433\u0430\u0431\u0430\u0439\u0442\u0430|many#{n} \u043c\u0435\u0433\u0430\u0431\u0430\u0439\u0442|#{n} \u043c\u0435\u0433\u0430\u0431\u0430\u0439\u0442\u0430",
terabit:"1#{n} \u0442\u0435\u0440\u0430\u0431\u0438\u0442|few#{n} \u0442\u0435\u0440\u0430\u0431\u0438\u0442\u0430|many#{n} \u0442\u0435\u0440\u0430\u0431\u0438\u0442|#{n} \u0442\u0435\u0440\u0430\u0431\u0438\u0442\u0430",terabyte:"1#{n} \u0442\u0435\u0440\u0430\u0431\u0430\u0439\u0442|few#{n} \u0442\u0435\u0440\u0430\u0431\u0430\u0439\u0442\u0430|many#{n} \u0442\u0435\u0440\u0430\u0431\u0430\u0439\u0442|#{n} \u0442\u0435\u0440\u0430\u0431\u0430\u0439\u0442\u0430",day:"1#{n} \u0434\u0435\u043d\u044c|few#{n} \u0434\u043d\u044f|many#{n} \u0434\u043d\u0435\u0439|#{n} \u0434\u043d\u044f",
hour:"1#{n} \u0447\u0430\u0441|few#{n} \u0447\u0430\u0441\u0430|many#{n} \u0447\u0430\u0441\u043e\u0432|#{n} \u0447\u0430\u0441\u0430",microsecond:"1#{n} \u043c\u0438\u043a\u0440\u043e\u0441\u0435\u043a\u0443\u043d\u0434\u0430|few#{n} \u043c\u0438\u043a\u0440\u043e\u0441\u0435\u043a\u0443\u043d\u0434\u044b|many#{n} \u043c\u0438\u043a\u0440\u043e\u0441\u0435\u043a\u0443\u043d\u0434|#{n} \u043c\u0438\u043a\u0440\u043e\u0441\u0435\u043a\u0443\u043d\u0434\u044b",millisecond:"1#{n} \u043c\u0438\u043b\u043b\u0438\u0441\u0435\u043a\u0443\u043d\u0434\u0430|few#{n} \u043c\u0438\u043b\u043b\u0438\u0441\u0435\u043a\u0443\u043d\u0434\u044b|many#{n} \u043c\u0438\u043b\u043b\u0438\u0441\u0435\u043a\u0443\u043d\u0434|#{n} \u043c\u0438\u043b\u043b\u0438\u0441\u0435\u043a\u0443\u043d\u0434\u044b",
minute:"1#{n} \u043c\u0438\u043d\u0443\u0442\u0430|few#{n} \u043c\u0438\u043d\u0443\u0442\u044b|many#{n} \u043c\u0438\u043d\u0443\u0442|#{n} \u043c\u0438\u043d\u0443\u0442\u044b",month:"1#{n} \u043c\u0435\u0441\u044f\u0446|few#{n} \u043c\u0435\u0441\u044f\u0446\u0430|many#{n} \u043c\u0435\u0441\u044f\u0446\u0435\u0432|#{n} \u043c\u0435\u0441\u044f\u0446\u0430",nanosecond:"1#{n} \u043d\u0430\u043d\u043e\u0441\u0435\u043a\u0443\u043d\u0434\u0430|few#{n} \u043d\u0430\u043d\u043e\u0441\u0435\u043a\u0443\u043d\u0434\u044b|many#{n} \u043d\u0430\u043d\u043e\u0441\u0435\u043a\u0443\u043d\u0434|#{n} \u043d\u0430\u043d\u043e\u0441\u0435\u043a\u0443\u043d\u0434\u044b",
second:"1#{n} \u0441\u0435\u043a\u0443\u043d\u0434\u0430|few#{n} \u0441\u0435\u043a\u0443\u043d\u0434\u044b|many#{n} \u0441\u0435\u043a\u0443\u043d\u0434|#{n} \u0441\u0435\u043a\u0443\u043d\u0434\u044b",week:"1#{n} \u043d\u0435\u0434\u0435\u043b\u044f|few#{n} \u043d\u0435\u0434\u0435\u043b\u0438|many#{n} \u043d\u0435\u0434\u0435\u043b\u044c|#{n} \u043d\u0435\u0434\u0435\u043b\u0438",year:"1#{n} \u0433\u043e\u0434|few#{n} \u0433\u043e\u0434\u0430|many#{n} \u043b\u0435\u0442|#{n} \u0433\u043e\u0434\u0430",
ampere:"1#{n} \u0430\u043c\u043f\u0435\u0440|few#{n} \u0430\u043c\u043f\u0435\u0440\u0430|many#{n} \u0430\u043c\u043f\u0435\u0440|#{n} \u0430\u043c\u043f\u0435\u0440\u0430",milliampere:"1#{n} \u043c\u0438\u043b\u043b\u0438\u0430\u043c\u043f\u0435\u0440|few#{n} \u043c\u0438\u043b\u043b\u0438\u0430\u043c\u043f\u0435\u0440\u0430|many#{n} \u043c\u0438\u043b\u043b\u0438\u0430\u043c\u043f\u0435\u0440|#{n} \u043c\u0438\u043b\u043b\u0438\u0430\u043c\u043f\u0435\u0440\u0430",ohm:"1#{n} \u043e\u043c|few#{n} \u043e\u043c\u0430|many#{n} \u043e\u043c|#{n} \u043e\u043c\u0430",
volt:"1#{n} \u0432\u043e\u043b\u044c\u0442|few#{n} \u0432\u043e\u043b\u044c\u0442\u0430|many#{n} \u0432\u043e\u043b\u044c\u0442|#{n} \u0432\u043e\u043b\u044c\u0442\u0430",calorie:"1#{n} \u043a\u0430\u043b\u043e\u0440\u0438\u044f|few#{n} \u043a\u0430\u043b\u043e\u0440\u0438\u0438|many#{n} \u043a\u0430\u043b\u043e\u0440\u0438\u0439|#{n} \u043a\u0430\u043b\u043e\u0440\u0438\u0438",joule:"1#{n} \u0434\u0436\u043e\u0443\u043b\u044c|few#{n} \u0434\u0436\u043e\u0443\u043b\u044f|many#{n} \u0434\u0436\u043e\u0443\u043b\u0435\u0439|#{n} \u0434\u0436\u043e\u0443\u043b\u044f",
kilocalorie:"1#{n} \u043a\u0438\u043b\u043e\u043a\u0430\u043b\u043e\u0440\u0438\u044f|few#{n} \u043a\u0438\u043b\u043e\u043a\u0430\u043b\u043e\u0440\u0438\u0438|many#{n} \u043a\u0438\u043b\u043e\u043a\u0430\u043b\u043e\u0440\u0438\u0439|#{n} \u043a\u0438\u043b\u043e\u043a\u0430\u043b\u043e\u0440\u0438\u0438",kilojoule:"1#{n} \u043a\u0438\u043b\u043e\u0434\u0436\u043e\u0443\u043b\u044c|few#{n} \u043a\u0438\u043b\u043e\u0434\u0436\u043e\u0443\u043b\u044f|many#{n} \u043a\u0438\u043b\u043e\u0434\u0436\u043e\u0443\u043b\u0435\u0439|#{n} \u043a\u0438\u043b\u043e\u0434\u0436\u043e\u0443\u043b\u044f",
"kilowatt hour":"1#{n} \u043a\u0438\u043b\u043e\u0432\u0430\u0442\u0442-\u0447\u0430\u0441|few#{n} \u043a\u0438\u043b\u043e\u0432\u0430\u0442\u0442-\u0447\u0430\u0441\u0430|many#{n} \u043a\u0438\u043b\u043e\u0432\u0430\u0442\u0442-\u0447\u0430\u0441\u043e\u0432|#{n} \u043a\u0438\u043b\u043e\u0432\u0430\u0442\u0442-\u0447\u0430\u0441\u0430",gigahertz:"1#{n} \u0433\u0438\u0433\u0430\u0433\u0435\u0440\u0446|few#{n} \u0433\u0438\u0433\u0430\u0433\u0435\u0440\u0446\u0430|many#{n} \u0433\u0438\u0433\u0430\u0433\u0435\u0440\u0446|#{n} \u0433\u0438\u0433\u0430\u0433\u0435\u0440\u0446\u0430",
hertz:"1#{n} \u0433\u0435\u0440\u0446|few#{n} \u0433\u0435\u0440\u0446\u0430|many#{n} \u0433\u0435\u0440\u0446|#{n} \u0433\u0435\u0440\u0446\u0430",kilohertz:"1#{n} \u043a\u0438\u043b\u043e\u0433\u0435\u0440\u0446|few#{n} \u043a\u0438\u043b\u043e\u0433\u0435\u0440\u0446\u0430|many#{n} \u043a\u0438\u043b\u043e\u0433\u0435\u0440\u0446|#{n} \u043a\u0438\u043b\u043e\u0433\u0435\u0440\u0446\u0430",megahertz:"1#{n} \u043c\u0435\u0433\u0430\u0433\u0435\u0440\u0446|few#{n} \u043c\u0435\u0433\u0430\u0433\u0435\u0440\u0446\u0430|many#{n} \u043c\u0435\u0433\u0430\u0433\u0435\u0440\u0446|#{n} \u043c\u0435\u0433\u0430\u0433\u0435\u0440\u0446\u0430",
"astronomical-unit":"1#{n} \u0430\u0441\u0442\u0440\u043e\u043d\u043e\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0435\u0434\u0438\u043d\u0438\u0446\u0430|few#{n} \u0430\u0441\u0442\u0440\u043e\u043d\u043e\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0435\u0434\u0438\u043d\u0438\u0446\u044b|many#{n} \u0430\u0441\u0442\u0440\u043e\u043d\u043e\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0435\u0434\u0438\u043d\u0438\u0446|#{n} \u0430\u0441\u0442\u0440\u043e\u043d\u043e\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0435\u0434\u0438\u043d\u0438\u0446\u044b",
centimeter:"1#{n} \u0441\u0430\u043d\u0442\u0438\u043c\u0435\u0442\u0440|few#{n} \u0441\u0430\u043d\u0442\u0438\u043c\u0435\u0442\u0440\u0430|many#{n} \u0441\u0430\u043d\u0442\u0438\u043c\u0435\u0442\u0440\u043e\u0432|#{n} \u0441\u0430\u043d\u0442\u0438\u043c\u0435\u0442\u0440\u0430",decimeter:"1#{n} \u0434\u0435\u0446\u0438\u043c\u0435\u0442\u0440|few#{n} \u0434\u0435\u0446\u0438\u043c\u0435\u0442\u0440\u0430|many#{n} \u0434\u0435\u0446\u0438\u043c\u0435\u0442\u0440\u043e\u0432|#{n} \u0434\u0435\u0446\u0438\u043c\u0435\u0442\u0440\u0430",
fathom:"#{n} fm",foot:"1#{n} \u0444\u0443\u0442|few#{n} \u0444\u0443\u0442\u0430|many#{n} \u0444\u0443\u0442\u043e\u0432|#{n} \u0444\u0443\u0442\u0430",furlong:"#{n} fur",inch:"1#{n} \u0434\u044e\u0439\u043c|few#{n} \u0434\u044e\u0439\u043c\u0430|many#{n} \u0434\u044e\u0439\u043c\u043e\u0432|#{n} \u0434\u044e\u0439\u043c\u0430",kilometer:"1#{n} \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440|few#{n} \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440\u0430|many#{n} \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440\u043e\u0432|#{n} \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440\u0430",
"light-year":"1#{n} \u0441\u0432\u0435\u0442\u043e\u0432\u043e\u0439 \u0433\u043e\u0434|few#{n} \u0441\u0432\u0435\u0442\u043e\u0432\u044b\u0445 \u0433\u043e\u0434\u0430|many#{n} \u0441\u0432\u0435\u0442\u043e\u0432\u044b\u0445 \u043b\u0435\u0442|#{n} \u0441\u0432\u0435\u0442\u043e\u0432\u044b\u0445 \u0433\u043e\u0434\u0430",meter:"1#{n} \u043c\u0435\u0442\u0440|few#{n} \u043c\u0435\u0442\u0440\u0430|many#{n} \u043c\u0435\u0442\u0440\u043e\u0432|#{n} \u043c\u0435\u0442\u0440\u0430",micrometer:"1#{n} \u043c\u0438\u043a\u0440\u043e\u043c\u0435\u0442\u0440|few#{n} \u043c\u0438\u043a\u0440\u043e\u043c\u0435\u0442\u0440\u0430|many#{n} \u043c\u0438\u043a\u0440\u043e\u043c\u0435\u0442\u0440\u043e\u0432|#{n} \u043c\u0438\u043a\u0440\u043e\u043c\u0435\u0442\u0440\u0430",
mile:"1#{n} \u043c\u0438\u043b\u044f|few#{n} \u043c\u0438\u043b\u0438|many#{n} \u043c\u0438\u043b\u044c|#{n} \u043c\u0438\u043b\u0438",millimeter:"1#{n} \u043c\u0438\u043b\u043b\u0438\u043c\u0435\u0442\u0440|few#{n} \u043c\u0438\u043b\u043b\u0438\u043c\u0435\u0442\u0440\u0430|many#{n} \u043c\u0438\u043b\u043b\u0438\u043c\u0435\u0442\u0440\u043e\u0432|#{n} \u043c\u0438\u043b\u043b\u0438\u043c\u0435\u0442\u0440\u0430",nanometer:"1#{n} \u043d\u0430\u043d\u043e\u043c\u0435\u0442\u0440|few#{n} \u043d\u0430\u043d\u043e\u043c\u0435\u0442\u0440\u0430|many#{n} \u043d\u0430\u043d\u043e\u043c\u0435\u0442\u0440\u043e\u0432|#{n} \u043d\u0430\u043d\u043e\u043c\u0435\u0442\u0440\u0430",
nauticalmile:"1#{n} \u043c\u043e\u0440\u0441\u043a\u0430\u044f \u043c\u0438\u043b\u044f|few#{n} \u043c\u043e\u0440\u0441\u043a\u0438\u0435 \u043c\u0438\u043b\u0438|many#{n} \u043c\u043e\u0440\u0441\u043a\u0438\u0445 \u043c\u0438\u043b\u044c|#{n} \u043c\u043e\u0440\u0441\u043a\u043e\u0439 \u043c\u0438\u043b\u0438",parsec:"1#{n} \u043f\u0430\u0440\u0441\u0435\u043a|few#{n} \u043f\u0430\u0440\u0441\u0435\u043a\u0430|many#{n} \u043f\u0430\u0440\u0441\u0435\u043a\u043e\u0432|#{n} \u043f\u0430\u0440\u0441\u0435\u043a\u0430",
picometer:"1#{n} \u043f\u0438\u043a\u043e\u043c\u0435\u0442\u0440|few#{n} \u043f\u0438\u043a\u043e\u043c\u0435\u0442\u0440\u0430|many#{n} \u043f\u0438\u043a\u043e\u043c\u0435\u0442\u0440\u043e\u0432|#{n} \u043f\u0438\u043a\u043e\u043c\u0435\u0442\u0440\u0430",yard:"1#{n} \u044f\u0440\u0434|few#{n} \u044f\u0440\u0434\u0430|many#{n} \u044f\u0440\u0434\u043e\u0432|#{n} \u044f\u0440\u0434\u0430",lux:"1#{n} \u043b\u044e\u043a\u0441|few#{n} \u043b\u044e\u043a\u0441\u0430|many#{n} \u043b\u044e\u043a\u0441|#{n} \u043b\u044e\u043a\u0441\u0430",
carat:"1#{n} \u043a\u0430\u0440\u0430\u0442|few#{n} \u043a\u0430\u0440\u0430\u0442\u0430|many#{n} \u043a\u0430\u0440\u0430\u0442|#{n} \u043a\u0430\u0440\u0430\u0442\u0430",gram:"1#{n} \u0433\u0440\u0430\u043c\u043c|few#{n} \u0433\u0440\u0430\u043c\u043c\u0430|many#{n} \u0433\u0440\u0430\u043c\u043c|#{n} \u0433\u0440\u0430\u043c\u043c\u0430",kilogram:"1#{n} \u043a\u0438\u043b\u043e\u0433\u0440\u0430\u043c\u043c|few#{n} \u043a\u0438\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430|many#{n} \u043a\u0438\u043b\u043e\u0433\u0440\u0430\u043c\u043c|#{n} \u043a\u0438\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430",
"metric ton":"1#{n} \u0442\u043e\u043d\u043d\u0430|few#{n} \u0442\u043e\u043d\u043d\u044b|many#{n} \u0442\u043e\u043d\u043d|#{n} \u0442\u043e\u043d\u043d\u044b",microgram:"1#{n} \u043c\u0438\u043a\u0440\u043e\u0433\u0440\u0430\u043c\u043c|few#{n} \u043c\u0438\u043a\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430|many#{n} \u043c\u0438\u043a\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043e\u0432|#{n} \u043c\u0438\u043a\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430",milligram:"1#{n} \u043c\u0438\u043b\u043b\u0438\u0433\u0440\u0430\u043c\u043c|few#{n} \u043c\u0438\u043b\u043b\u0438\u0433\u0440\u0430\u043c\u043c\u0430|many#{n} \u043c\u0438\u043b\u043b\u0438\u0433\u0440\u0430\u043c\u043c\u043e\u0432|#{n} \u043c\u0438\u043b\u043b\u0438\u0433\u0440\u0430\u043c\u043c\u0430",
ounce:"1#{n} \u0443\u043d\u0446\u0438\u044f|few#{n} \u0443\u043d\u0446\u0438\u0438|many#{n} \u0443\u043d\u0446\u0438\u0439|#{n} \u0443\u043d\u0446\u0438\u0438","ounce-troy":"1#{n} \u0442\u0440\u043e\u0439\u0441\u043a\u0430\u044f \u0443\u043d\u0446\u0438\u044f|few#{n} \u0442\u0440\u043e\u0439\u0441\u043a\u0438\u0435 \u0443\u043d\u0446\u0438\u0438|many#{n} \u0442\u0440\u043e\u0439\u0441\u043a\u0438\u0445 \u0443\u043d\u0446\u0438\u0439|#{n} \u0442\u0440\u043e\u0439\u0441\u043a\u043e\u0439 \u0443\u043d\u0446\u0438\u0438",
pound:"1#{n} \u0444\u0443\u043d\u0442|few#{n} \u0444\u0443\u043d\u0442\u0430|many#{n} \u0444\u0443\u043d\u0442\u043e\u0432|#{n} \u0444\u0443\u043d\u0442\u0430",stone:"#{n} st","long ton":"1#{n} \u0430\u043c\u0435\u0440\u0438\u043a\u0430\u043d\u0441\u043a\u0430\u044f \u0442\u043e\u043d\u043d\u0430|few#{n} \u0430\u043c\u0435\u0440\u0438\u043a\u0430\u043d\u0441\u043a\u0438\u0435 \u0442\u043e\u043d\u043d\u044b|many#{n} \u0430\u043c\u0435\u0440\u0438\u043a\u0430\u043d\u0441\u043a\u0438\u0445 \u0442\u043e\u043d\u043d|#{n} \u0430\u043c\u0435\u0440\u0438\u043a\u0430\u043d\u0441\u043a\u043e\u0439 \u0442\u043e\u043d\u043d\u044b",
gigawatt:"1#{n} \u0433\u0438\u0433\u0430\u0432\u0430\u0442\u0442|few#{n} \u0433\u0438\u0433\u0430\u0432\u0430\u0442\u0442\u0430|many#{n} \u0433\u0438\u0433\u0430\u0432\u0430\u0442\u0442|#{n} \u0433\u0438\u0433\u0430\u0432\u0430\u0442\u0442\u0430",horsepower:"1#{n} \u043b\u043e\u0448\u0430\u0434\u0438\u043d\u0430\u044f \u0441\u0438\u043b\u0430|few#{n} \u043b\u043e\u0448\u0430\u0434\u0438\u043d\u044b\u0445 \u0441\u0438\u043b\u044b|many#{n} \u043b\u043e\u0448\u0430\u0434\u0438\u043d\u044b\u0445 \u0441\u0438\u043b|#{n} \u043b\u043e\u0448\u0430\u0434\u0438\u043d\u043e\u0439 \u0441\u0438\u043b\u044b",
kilowatt:"1#{n} \u043a\u0438\u043b\u043e\u0432\u0430\u0442\u0442|few#{n} \u043a\u0438\u043b\u043e\u0432\u0430\u0442\u0442\u0430|many#{n} \u043a\u0438\u043b\u043e\u0432\u0430\u0442\u0442|#{n} \u043a\u0438\u043b\u043e\u0432\u0430\u0442\u0442\u0430",megawatt:"1#{n} \u043c\u0435\u0433\u0430\u0432\u0430\u0442\u0442|few#{n} \u043c\u0435\u0433\u0430\u0432\u0430\u0442\u0442\u0430|many#{n} \u043c\u0435\u0433\u0430\u0432\u0430\u0442\u0442|#{n} \u043c\u0435\u0433\u0430\u0432\u0430\u0442\u0442\u0430",milliwatt:"1#{n} \u043c\u0438\u043b\u043b\u0438\u0432\u0430\u0442\u0442|few#{n} \u043c\u0438\u043b\u043b\u0438\u0432\u0430\u0442\u0442\u0430|many#{n} \u043c\u0438\u043b\u043b\u0438\u0432\u0430\u0442\u0442|#{n} \u043c\u0438\u043b\u043b\u0438\u0432\u0430\u0442\u0442\u0430",
watt:"1#{n} \u0432\u0430\u0442\u0442|few#{n} \u0432\u0430\u0442\u0442\u0430|many#{n} \u0432\u0430\u0442\u0442|#{n} \u0432\u0430\u0442\u0442\u0430",hectopascal:"1#{n} \u0433\u0435\u043a\u0442\u043e\u043f\u0430\u0441\u043a\u0430\u043b\u044c|few#{n} \u0433\u0435\u043a\u0442\u043e\u043f\u0430\u0441\u043a\u0430\u043b\u044f|many#{n} \u0433\u0435\u043a\u0442\u043e\u043f\u0430\u0441\u043a\u0430\u043b\u0435\u0439|#{n} \u0433\u0435\u043a\u0442\u043e\u043f\u0430\u0441\u043a\u0430\u043b\u044f","inch-hg":"1#{n} \u0434\u044e\u0439\u043c \u0440\u0442\u0443\u0442\u043d\u043e\u0433\u043e \u0441\u0442\u043e\u043b\u0431\u0430|few#{n} \u0434\u044e\u0439\u043c\u0430 \u0440\u0442\u0443\u0442\u043d\u043e\u0433\u043e \u0441\u0442\u043e\u043b\u0431\u0430|many#{n} \u0434\u044e\u0439\u043c\u043e\u0432 \u0440\u0442\u0443\u0442\u043d\u043e\u0433\u043e \u0441\u0442\u043e\u043b\u0431\u0430|#{n}\u0434\u044e\u0439\u043c\u0430 \u0440\u0442\u0443\u0442\u043d\u043e\u0433\u043e \u0441\u0442\u043e\u043b\u0431\u0430",
millibar:"1#{n} \u043c\u0438\u043b\u043b\u0438\u0431\u0430\u0440|few#{n} \u043c\u0438\u043b\u043b\u0438\u0431\u0430\u0440\u0430|many#{n} \u043c\u0438\u043b\u043b\u0438\u0431\u0430\u0440|#{n} \u043c\u0438\u043b\u043b\u0438\u0431\u0430\u0440\u0430","millimeter-of-mercury":"1#{n} \u043c\u0438\u043b\u043b\u0438\u043c\u0435\u0442\u0440 \u0440\u0442\u0443\u0442\u043d\u043e\u0433\u043e \u0441\u0442\u043e\u043b\u0431\u0430|few#{n} \u043c\u0438\u043b\u043b\u0438\u043c\u0435\u0442\u0440\u0430 \u0440\u0442\u0443\u0442\u043d\u043e\u0433\u043e \u0441\u0442\u043e\u043b\u0431\u0430|many#{n} \u043c\u0438\u043b\u043b\u0438\u043c\u0435\u0442\u0440\u043e\u0432 \u0440\u0442\u0443\u0442\u043d\u043e\u0433\u043e \u0441\u0442\u043e\u043b\u0431\u0430|#{n} \u043c\u0438\u043b\u043b\u0438\u043c\u0435\u0442\u0440\u0430 \u0440\u0442\u0443\u0442\u043d\u043e\u0433\u043e \u0441\u0442\u043e\u043b\u0431\u0430",
"pound-per-square-inch":"1#{n} \u0444\u0443\u043d\u0442 \u043d\u0430 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u0434\u044e\u0439\u043c|few#{n} \u0444\u0443\u043d\u0442\u0430 \u043d\u0430 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u0434\u044e\u0439\u043c|many#{n} \u0444\u0443\u043d\u0442\u043e\u0432 \u043d\u0430 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u0434\u044e\u0439\u043c|#{n} \u0444\u0443\u043d\u0442\u0430 \u043d\u0430 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u0434\u044e\u0439\u043c",
karat:"1#{n} \u043a\u0430\u0440\u0430\u0442|few#{n} \u043a\u0430\u0440\u0430\u0442\u0430|many#{n} \u043a\u0430\u0440\u0430\u0442|#{n} \u043a\u0430\u0440\u0430\u0442\u0430","kilometer/hour":"1#{n} \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440 \u0432 \u0447\u0430\u0441|few#{n} \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440\u0430 \u0432 \u0447\u0430\u0441|many#{n} \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440\u043e\u0432 \u0432 \u0447\u0430\u0441|#{n} \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440\u0430 \u0432 \u0447\u0430\u0441",
"meters/second":"1#{n} \u043c\u0435\u0442\u0440 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0443|few#{n} \u043c\u0435\u0442\u0440\u0430 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u044b\u0443|many#{n} \u043c\u0435\u0442\u0440\u043e\u0432 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0443|#{n} \u043c\u0435\u0442\u0440\u0430 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0443","miles/hour":"1#{n} \u043c\u0438\u043b\u044f \u0432 \u0447\u0430\u0441|few#{n} \u043c\u0438\u043b\u0438 \u0432 \u0447\u0430\u0441|many#{n} \u043c\u0438\u043b\u044c \u0432 \u0447\u0430\u0441|#{n} \u043c\u0438\u043b\u0438 \u0432 \u0447\u0430\u0441",
celsius:"1#{n}\u0433\u0440\u0430\u0434\u0443\u0441 \u0426\u0435\u043b\u044c\u0441\u0438\u044f|few#{n} \u0433\u0440\u0430\u0434\u0443\u0441\u0430 \u0426\u0435\u043b\u044c\u0441\u0438\u044f|many#{n}\u0433\u0440\u0430\u0434\u0443\u0441\u043e\u0432 \u0426\u0435\u043b\u044c\u0441\u0438\u044f|#{n}\u0433\u0440\u0430\u0434\u0443\u0441\u0430 \u0426\u0435\u043b\u044c\u0441\u0438\u044f",fahrenheit:"1#{n} \u0433\u0440\u0430\u0434\u0443\u0441 \u043f\u043e \u0424\u0430\u0440\u0435\u043d\u0433\u0435\u0439\u0442\u0443|few#{n} \u0433\u0440\u0430\u0434\u0443\u0441\u0430 \u043f\u043e \u0424\u0430\u0440\u0435\u043d\u0433\u0435\u0439\u0442\u0443|many#{n} \u0433\u0440\u0430\u0434\u0443\u0441\u043e\u0432 \u043f\u043e \u0424\u0430\u0440\u0435\u043d\u0433\u0435\u0439\u0442\u0443|#{n} \u0433\u0440\u0430\u0434\u0443\u0441\u0430 \u043f\u043e \u0424\u0430\u0440\u0435\u043d\u0433\u0435\u0439\u0442\u0443",
kelvin:"1#{n} \u0433\u0440\u0430\u0434\u0443\u0441 \u043f\u043e \u041a\u0435\u043b\u044c\u0432\u0438\u043d\u0443|few#{n} \u0433\u0440\u0430\u0434\u0443\u0441\u0430 \u043f\u043e \u041a\u0435\u043b\u044c\u0432\u0438\u043d\u0443|many#{n} \u0433\u0440\u0430\u0434\u0443\u0441\u043e\u0432 \u043f\u043e \u041a\u0435\u043b\u044c\u0432\u0438\u043d\u0443|#{n} \u0433\u0440\u0430\u0434\u0443\u0441\u0430 \u043f\u043e \u041a\u0435\u043b\u044c\u0432\u0438\u043d\u0443","acre-foot":"1#{n} \u0430\u043a\u0440\u043e\u0444\u0443\u0442|few#{n} \u0430\u043a\u0440\u043e\u0444\u0443\u0442\u0430|many#{n} \u0430\u043a\u0440\u043e\u0444\u0443\u0442\u043e\u0432|#{n} \u0430\u043a\u0440\u043e\u0444\u0443\u0442\u0430",
bushel:"#{n} bu",centiliter:"1#{n} \u0441\u0430\u043d\u0442\u0438\u043b\u0438\u0442\u0440|few#{n} \u0441\u0430\u043d\u0442\u0438\u043b\u0438\u0442\u0440\u0430|many#{n} \u0441\u0430\u043d\u0442\u0438\u043b\u0438\u0442\u0440\u043e\u0432|#{n} \u0441\u0430\u043d\u0442\u0438\u043b\u0438\u0442\u0440\u0430","cubic-centimeter":"1#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0441\u0430\u043d\u0442\u0438\u043c\u0435\u0442\u0440|few#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0441\u0430\u043d\u0442\u0438\u043c\u0435\u0442\u0440\u0430|many#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0441\u0430\u043d\u0442\u0438\u043c\u0435\u0442\u0440\u043e\u0432|#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0441\u0430\u043d\u0442\u0438\u043c\u0435\u0442\u0440\u0430",
"cubic foot":"1#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0444\u0443\u0442|few#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0444\u0443\u0442\u0430|many#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0444\u0443\u0442\u043e\u0432|#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0444\u0443\u0442\u0430","cubic inch":"1#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0434\u044e\u0439\u043c|few#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0434\u044e\u0439\u043c\u0430|many#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0434\u044e\u0439\u043c\u043e\u0432|#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0434\u044e\u0439\u043c\u0430",
"cubic-kilometer":"1#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440|few#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440\u0430|many#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440\u043e\u0432|#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440\u0430",
"cubic meter":"1#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043c\u0435\u0442\u0440|few#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043c\u0435\u0442\u0440\u0430|many#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043c\u0435\u0442\u0440\u043e\u0432|#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043c\u0435\u0442\u0440\u0430","cubic-mile":"1#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043c\u0438\u043b\u044f|few#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043c\u0438\u043b\u0438|many#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043c\u0438\u043b\u044c|#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043c\u0438\u043b\u0438",
"cubic-yard":"1#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u044f\u0440\u0434|few#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u044f\u0440\u0434\u0430|many#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u044f\u0440\u0434\u043e\u0432|#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u044f\u0440\u0434\u0430",cup:"1#{n} \u0447\u0430\u0448\u043a\u0430|few#{n} \u0447\u0430\u0448\u043a\u0438|many#{n} \u0447\u0430\u0448\u0435\u043a|#{n} \u0447\u0430\u0448\u043a\u0438",
deciliter:"1#{n} \u0434\u0435\u0446\u0438\u043b\u0438\u0442\u0440|few#{n} \u0434\u0435\u0446\u0438\u043b\u0438\u0442\u0440\u0430|many#{n} \u0434\u0435\u0446\u0438\u043b\u0438\u0442\u0440\u043e\u0432|#{n} \u0434\u0435\u0446\u0438\u043b\u0438\u0442\u0440\u0430","us ounce":"1#{n} \u0436\u0438\u0434\u043a\u0430\u044f \u0443\u043d\u0446\u0438\u044f|few#{n} \u0436\u0438\u0434\u043a\u0438\u0435 \u0443\u043d\u0446\u0438\u0438|many#{n} \u0436\u0438\u0434\u043a\u0438\u0445 \u0443\u043d\u0446\u0438\u0439|#{n} \u0436\u0438\u0434\u043a\u043e\u0439 \u0443\u043d\u0446\u0438\u0438",
gallon:"1#{n} \u0433\u0430\u043b\u043b\u043e\u043d|few#{n} \u0433\u0430\u043b\u043b\u043e\u043d\u0430|many#{n} \u0433\u0430\u043b\u043b\u043e\u043d\u043e\u0432|#{n} \u0433\u0430\u043b\u043b\u043e\u043d\u0430",hectoliter:"1#{n} \u0433\u0435\u043a\u0442\u043e\u043b\u0438\u0442\u0440|few#{n} \u0433\u0435\u043a\u0442\u043e\u043b\u0438\u0442\u0440\u0430|many#{n} \u0433\u0435\u043a\u0442\u043e\u043b\u0438\u0442\u0440\u043e\u0432|#{n} \u0433\u0435\u043a\u0442\u043e\u043b\u0438\u0442\u0440\u0430",liter:"1#{n} \u043b\u0438\u0442\u0440|few#{n} \u043b\u0438\u0442\u0440\u0430|many#{n} \u043b\u0438\u0442\u0440\u0430|#{n} \u043b\u0438\u0442\u0440\u0430",
megaliter:"1#{n} \u043c\u0435\u0433\u0430\u043b\u0438\u0442\u0440|few#{n} \u043c\u0435\u0433\u0430\u043b\u0438\u0442\u0440\u0430|many#{n} \u043c\u0435\u0433\u0430\u043b\u0438\u0442\u0440\u043e\u0432|#{n} \u043c\u0435\u0433\u0430\u043b\u0438\u0442\u0440\u0430",milliliter:"1#{n} \u043c\u0438\u043b\u043b\u0438\u043b\u0438\u0442\u0440|few#{n} \u043c\u0438\u043b\u043b\u0438\u043b\u0438\u0442\u0440\u0430|many#{n} \u043c\u0438\u043b\u043b\u0438\u043b\u0438\u0442\u0440\u043e\u0432|#{n} \u043c\u0438\u043b\u043b\u0438\u043b\u0438\u0442\u0440\u0430",
pint:"1#{n} \u043f\u0438\u043d\u0442\u0430|few#{n} \u043f\u0438\u043d\u0442\u044b|many#{n} \u043f\u0438\u043d\u0442|#{n} \u043f\u0438\u043d\u0442\u044b",quart:"1#{n} \u043a\u0432\u0430\u0440\u0442\u0430|few#{n} \u043a\u0432\u0430\u0440\u0442\u044b|many#{n} \u043a\u0432\u0430\u0440\u0442|#{n} \u043a\u0432\u0430\u0440\u0442\u044b",tbsp:"1#{n} \u0441\u0442\u043e\u043b\u043e\u0432\u0430\u044f \u043b\u043e\u0436\u043a\u0430|few#{n} \u0441\u0442\u043e\u043b\u043e\u0432\u044b\u0435 \u043b\u043e\u0436\u043a\u0438|many#{n} \u0441\u0442\u043e\u043b\u043e\u0432\u044b\u0445 \u043b\u043e\u0436\u0435\u043a|#{n} \u0441\u0442\u043e\u043b\u043e\u0432\u043e\u0439 \u043b\u043e\u0436\u043a\u0438",
tsp:"1#{n} \u0447\u0430\u0439\u043d\u0430\u044f \u043b\u043e\u0436\u043a\u0430|few#{n} \u0447\u0430\u0439\u043d\u044b\u0435 \u043b\u043e\u0436\u043a\u0438|many#{n} \u0447\u0430\u0439\u043d\u044b\u0445 \u043b\u043e\u0436\u0435\u043a|#{n} \u0447\u0430\u0439\u043d\u043e\u0439 \u043b\u043e\u0436\u043a\u0438",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",
petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)",
"short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second","miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces",
"imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},"short":{"g-force":"1#{n} g|few#{n} g|many#{n} g|#{n} g","meter-per-second-squared":"1#{n} \u043c/\u0441\u00b2|few#{n} \u043c/\u0441\u00b2|many#{n} \u043c/\u0441\u00b2|#{n} \u043c/\u0441\u00b2","arc-minute":"1#{n}\u2032|few#{n}\u2032|many#{n}\u2032|#{n}\u2032","arc-second":"1#{n}\u2033|few#{n}\u2033|many#{n}\u2033|#{n}\u2033",
degree:"1#{n}\u00b0|few#{n}\u00b0|many#{n}\u00b0|#{n}\u00b0",radian:"1#{n} \u0440\u0430\u0434|few#{n} \u0440\u0430\u0434|many#{n} \u0440\u0430\u0434|#{n} \u0440\u0430\u0434",acre:"1#{n} \u0430\u043a\u0440|few#{n} \u0430\u043a\u0440\u0430|many#{n} \u0430\u043a\u0440\u043e\u0432|#{n} \u0430\u043a\u0440\u0430",hectare:"1#{n} \u0433\u0430|few#{n} \u0433\u0430|many#{n} \u0433\u0430|#{n} \u0433\u0430","square centimeter":"1#{n} \u0441\u043c\u00b2|few#{n} \u0441\u043c\u00b2|many#{n} \u0441\u043c\u00b2|#{n} \u0441\u043c\u00b2",
"square foot":"1#{n} \u043a\u0432. \u0444\u0443\u0442|few#{n} \u043a\u0432. \u0444\u0443\u0442\u0430|many#{n} \u043a\u0432. \u0444\u0443\u0442\u043e\u0432|#{n} \u043a\u0432. \u0444\u0443\u0442\u0430","square inch":"1#{n} \u043a\u0432. \u0434\u044e\u0439\u043c|few#{n} \u043a\u0432. \u0434\u044e\u0439\u043c.|many#{n} \u043a\u0432. \u0434\u044e\u0439\u043c.|#{n} \u043a\u0432. \u0434\u044e\u0439\u043c.","square km":"1#{n} \u043a\u043c\u00b2|few#{n} \u043a\u043c\u00b2|many#{n} \u043a\u043c\u00b2|#{n} \u043a\u043c\u00b2",
"square meter":"1#{n} \u043c\u00b2|few#{n} \u043c\u00b2|many#{n} \u043c\u00b2|#{n} \u043c\u00b2","square mile":"1#{n} \u043a\u0432. \u043c\u0438\u043b\u044f|few#{n} \u043a\u0432. \u043c\u0438\u043b\u0438|many#{n} \u043a\u0432. \u043c\u0438\u043b\u044c|#{n} \u043a\u0432. \u043c\u0438\u043b\u0438","square yard":"1#{n} \u043a\u0432. \u044f\u0440\u0434|few#{n} \u043a\u0432. \u044f\u0440\u0434\u0430|many#{n} \u043a\u0432. \u044f\u0440\u0434\u043e\u0432|#{n} \u043a\u0432. \u044f\u0440\u0434\u0430","liter-per-kilometer":"1#{n} \u043b/\u043a\u043c|few#{n} \u043b/\u043a\u043c|many#{n} \u043b/\u043a\u043c|#{n} \u043b/\u043a\u043c",
mpg:"1#{n} \u043c\u0438\u043b\u044f/\u0433\u0430\u043b\u043b.|few#{n} \u043c\u0438\u043b\u0438/\u0433\u0430\u043b\u043b.|many#{n} \u043c\u0438\u043b\u044c/\u0433\u0430\u043b\u043b.|#{n} \u043c\u0438\u043b\u0438/\u0433\u0430\u043b\u043b.",bit:"1#{n} \u0431\u0438\u0442|few#{n} \u0431\u0438\u0442\u0430|many#{n} \u0431\u0438\u0442|#{n} \u0431\u0438\u0442\u0430","byte":"1#{n} \u0411|few#{n} \u0411|many#{n} \u0411|#{n} \u0411",gigabit:"1#{n} \u0413\u0431\u0438\u0442|few#{n} \u0413\u0431\u0438\u0442|many#{n} \u0413\u0431\u0438\u0442|#{n} \u0413\u0431\u0438\u0442",
gigabyte:"1#{n} \u0413\u0411|few#{n} \u0413\u0411|many#{n} \u0413\u0411|#{n} \u0413\u0411",kilobit:"1#{n} \u043a\u0431\u0438\u0442|few#{n} \u043a\u0431\u0438\u0442|many#{n} \u043a\u0431\u0438\u0442|#{n} \u043a\u0431\u0438\u0442",kilobyte:"1#{n} \u043a\u0411|few#{n} \u043a\u0411|many#{n} \u043a\u0411|#{n} \u043a\u0411",megabit:"1#{n} \u041c\u0431\u0438\u0442|few#{n} \u041c\u0431\u0438\u0442|many#{n} \u041c\u0431\u0438\u0442|#{n} \u041c\u0431\u0438\u0442",megabyte:"1#{n} \u041c\u0411|few#{n} \u041c\u0411|many#{n} \u041c\u0411|#{n} \u041c\u0411",
terabit:"1#{n} \u0422\u0431\u0438\u0442|few#{n} \u0422\u0431\u0438\u0442|many#{n} \u0422\u0431\u0438\u0442|#{n} \u0422\u0431\u0438\u0442",terabyte:"1#{n} \u0422\u0411|few#{n} \u0422\u0411|many#{n} \u0422\u0411|#{n} \u0422\u0411",day:"1#{n} \u0434\u043d|few#{n} \u0434\u043d|many#{n} \u0434\u043d|#{n} \u0434\u043d",hour:"1#{n} \u0447|few#{n} \u0447|many#{n} \u0447|#{n} \u0447",microsecond:"1#{n} \u043c\u043a\u0441|few#{n} \u043c\u043a\u0441|many#{n} \u043c\u043a\u0441|#{n} \u043c\u043a\u0441",millisecond:"1#{n} \u043c\u0441|few#{n} \u043c\u0441|many#{n} \u043c\u0441|#{n} \u043c\u0441",
minute:"1#{n} \u043c\u0438\u043d|few#{n} \u043c\u0438\u043d|many#{n} \u043c\u0438\u043d|#{n} \u043c\u0438\u043d",month:"1#{n} \u043c\u0435\u0441|few#{n} \u043c\u0435\u0441|many#{n} \u043c\u0435\u0441|#{n} \u043c\u0435\u0441",nanosecond:"1#{n} \u043d\u0441|few#{n} \u043d\u0441|many#{n} \u043d\u0441|#{n} \u043d\u0441",second:"1#{n} \u0441\u0435\u043a|few#{n} \u0441\u0435\u043a|many#{n} \u0441\u0435\u043a|#{n} \u0441\u0435\u043a",week:"1#{n} \u043d\u0435\u0434|few#{n} \u043d\u0435\u0434|many#{n} \u043d\u0435\u0434|#{n} \u043d\u0435\u0434",
year:"1#{n} \u0433.|few#{n} \u0433.|many#{n} \u043b.|#{n} \u0433.",ampere:"1#{n} \u0410|few#{n} \u0410|many#{n} \u0410|#{n} \u0410",milliampere:"1#{n} \u043c\u0410|few#{n} \u043c\u0410|many#{n} \u043c\u0410|#{n} \u043c\u0410",ohm:"1#{n} \u041e\u043c|few#{n} \u041e\u043c|many#{n} \u041e\u043c|#{n} \u041e\u043c",volt:"1#{n} \u0412|few#{n} \u0412|many#{n} \u0412|#{n} \u0412",calorie:"1#{n} \u043a\u0430\u043b|few#{n} \u043a\u0430\u043b|many#{n} \u043a\u0430\u043b|#{n} \u043a\u0430\u043b",joule:"1#{n} \u0414\u0436|few#{n} \u0414\u0436|many#{n} \u0414\u0436|#{n} \u0414\u0436",
kilocalorie:"1#{n} \u043a\u043a\u0430\u043b|few#{n} \u043a\u043a\u0430\u043b|many#{n} \u043a\u043a\u0430\u043b|#{n} \u043a\u043a\u0430\u043b",kilojoule:"1#{n} \u043a\u0414\u0436|few#{n} \u043a\u0414\u0436|many#{n} \u043a\u0414\u0436|#{n} \u043a\u0414\u0436","kilowatt hour":"1#{n} \u043a\u0412\u0442\u22c5\u0447|few#{n} \u043a\u0412\u0442\u22c5\u0447|many#{n} \u043a\u0412\u0442\u22c5\u0447|#{n} \u043a\u0412\u0442\u22c5\u0447",gigahertz:"1#{n} \u0413\u0413\u0446|few#{n} \u0413\u0413\u0446|many#{n} \u0413\u0413\u0446|#{n} \u0413\u0413\u0446",
hertz:"1#{n} \u0413\u0446|few#{n} \u0413\u0446|many#{n} \u0413\u0446|#{n} \u0413\u0446",kilohertz:"1#{n} \u043a\u0413\u0446|few#{n} \u043a\u0413\u0446|many#{n} \u043a\u0413\u0446|#{n} \u043a\u0413\u0446",megahertz:"1#{n} \u041c\u0413\u0446|few#{n} \u041c\u0413\u0446|many#{n} \u041c\u0413\u0446|#{n} \u041c\u0413\u0446","astronomical-unit":"1#{n} \u0430.\u00a0\u0435.|few#{n} \u0430.\u00a0\u0435.|many#{n} \u0430.\u00a0\u0435.|#{n} \u0430.\u00a0\u0435.",centimeter:"1#{n} \u0441\u043c|few#{n} \u0441\u043c|many#{n} \u0441\u043c|#{n} \u0441\u043c",
decimeter:"1#{n} \u0434\u043c|few#{n} \u0434\u043c|many#{n} \u0434\u043c|#{n} \u0434\u043c",fathom:"#{n} fm",foot:"1#{n} \u0444\u0443\u0442|few#{n} \u0444\u0443\u0442\u0430|many#{n} \u0444\u0443\u0442\u043e\u0432|#{n} \u0444\u0443\u0442\u0430",furlong:"#{n} fur",inch:"1#{n} \u0434\u044e\u0439\u043c|few#{n} \u0434\u044e\u0439\u043c.|many#{n} \u0434\u044e\u0439\u043c.|#{n} \u0434\u044e\u0439\u043c.",kilometer:"1#{n} \u043a\u043c|few#{n} \u043a\u043c|many#{n} \u043a\u043c|#{n} \u043a\u043c","light-year":"1#{n} \u0441\u0432. \u0433.|few#{n} \u0441\u0432. \u0433.|many#{n} \u0441\u0432. \u043b.|#{n} \u0441\u0432. \u0433.",
meter:"1#{n} \u043c|few#{n} \u043c|many#{n} \u043c|#{n} \u043c",micrometer:"1#{n} \u043c\u043a\u043c|few#{n} \u043c\u043a\u043c|many#{n} \u043c\u043a\u043c|#{n} \u043c\u043a\u043c",mile:"1#{n} \u043c\u0438\u043b\u044f|few#{n} \u043c\u0438\u043b\u0438|many#{n} \u043c\u0438\u043b\u044c|#{n} \u043c\u0438\u043b\u0438",millimeter:"1#{n} \u043c\u043c|few#{n} \u043c\u043c|many#{n} \u043c\u043c|#{n} \u043c\u043c",nanometer:"1#{n} \u043d\u043c|few#{n} \u043d\u043c|many#{n} \u043d\u043c|#{n} \u043d\u043c",
nauticalmile:"1#{n} \u043c\u043e\u0440. \u043c\u0438\u043b\u044f|few#{n} \u043c\u043e\u0440. \u043c\u0438\u043b\u0438|many#{n} \u043c\u043e\u0440. \u043c\u0438\u043b\u044c|#{n} \u043c\u043e\u0440. \u043c\u0438\u043b\u0438",parsec:"1#{n} \u043f\u043a|few#{n} \u043f\u043a|many#{n} \u043f\u043a|#{n} \u043f\u043a",picometer:"1#{n} \u043f\u043c|few#{n} \u043f\u043c|many#{n} \u043f\u043c|#{n} \u043f\u043c",yard:"1#{n} \u044f\u0440\u0434|few#{n} \u044f\u0440\u0434\u0430|many#{n} \u044f\u0440\u0434\u043e\u0432|#{n} \u044f\u0440\u0434\u0430",
lux:"1#{n} \u043b\u043a|few#{n} \u043b\u043a|many#{n} \u043b\u043a|#{n} \u043b\u043a",carat:"1#{n} \u043a\u0430\u0440|few#{n} \u043a\u0430\u0440|many#{n} \u043a\u0430\u0440|#{n} \u043a\u0430\u0440",gram:"1#{n} \u0433|few#{n} \u0433|many#{n} \u0433|#{n} \u0433",kilogram:"1#{n} \u043a\u0433|few#{n} \u043a\u0433|many#{n} \u043a\u0433|#{n} \u043a\u0433","metric ton":"1#{n} \u0442|few#{n} \u0442|many#{n} \u0442|#{n} \u0442",microgram:"1#{n} \u043c\u043a\u0433|few#{n} \u043c\u043a\u0433|many#{n} \u043c\u043a\u0433|#{n} \u043c\u043a\u0433",
milligram:"1#{n} \u043c\u0433|few#{n} \u043c\u0433|many#{n} \u043c\u0433|#{n} \u043c\u0433",ounce:"1#{n} \u0443\u043d\u0446.|few#{n} \u0443\u043d\u0446.|many#{n} \u0443\u043d\u0446.|#{n} \u0443\u043d\u0446.","ounce-troy":"1#{n} \u0442\u0440. \u0443\u043d\u0446.|few#{n} \u0442\u0440. \u0443\u043d\u0446.|many#{n} \u0442\u0440. \u0443\u043d\u0446.|#{n} \u0442\u0440. \u0443\u043d\u0446.",pound:"1#{n} \u0444\u0443\u043d\u0442.|few#{n} \u0444\u0443\u043d\u0442.|many#{n} \u0444\u0443\u043d\u0442.|#{n} \u0444\u0443\u043d\u0442.",
stone:"#{n} st","long ton":"1#{n} \u0430\u043c\u0435\u0440. \u0442|few#{n} \u0430\u043c\u0435\u0440. \u0442|many#{n} \u0430\u043c\u0435\u0440. \u0442|#{n} \u0430\u043c\u0435\u0440. \u0442",gigawatt:"1#{n} \u0413\u0412\u0442|few#{n} \u0413\u0412\u0442|many#{n} \u0413\u0412\u0442|#{n} \u0413\u0412\u0442",horsepower:"1#{n} \u043b.\u0441.|few#{n} \u043b.\u0441.|many#{n} \u043b.\u0441.|#{n} \u043b.\u0441.",kilowatt:"1#{n} \u043a\u0412\u0442|few#{n} \u043a\u0412\u0442|many#{n} \u043a\u0412\u0442|#{n} \u043a\u0412\u0442",
megawatt:"1#{n} \u041c\u0412\u0442|few#{n} \u041c\u0412\u0442|many#{n} \u041c\u0412\u0442|#{n} \u041c\u0412\u0442",milliwatt:"1#{n} \u043c\u0412\u0442|few#{n} \u043c\u0412\u0442|many#{n} \u043c\u0412\u0442|#{n} \u043c\u0412\u0442",watt:"1#{n} \u0412\u0442|few#{n} \u0412\u0442|many#{n} \u0412\u0442|#{n} \u0412\u0442",hectopascal:"1#{n} \u0433\u041f\u0430|few#{n} \u0433\u041f\u0430|many#{n} \u0433\u041f\u0430|#{n} \u0433\u041f\u0430","inch-hg":"1#{n} \u0434. \u0440\u0442. \u0441\u0442.|few#{n} \u0434. \u0440\u0442. \u0441\u0442.|many#{n} \u0434. \u0440\u0442. \u0441\u0442.|#{n} \u0434. \u0440\u0442. \u0441\u0442.",
millibar:"1#{n} \u043c\u0431\u0430\u0440|few#{n} \u043c\u0431\u0430\u0440|many#{n} \u043c\u0431\u0430\u0440|#{n} \u043c\u0431\u0430\u0440","millimeter-of-mercury":"1#{n} \u043c\u043c \u0440\u0442. \u0441\u0442.|few#{n} \u043c\u043c \u0440\u0442. \u0441\u0442.|many#{n} \u043c\u043c \u0440\u0442. \u0441\u0442.|#{n} \u043c\u043c \u0440\u0442. \u0441\u0442.","pound-per-square-inch":"1#{n} \u0444./\u043a\u0432. \u0434.|few#{n} \u0444./\u043a\u0432. \u0434.|many#{n} \u0444./\u043a\u0432. \u0434.|#{n} \u0444./\u043a\u0432. \u0434.",
karat:"1#{n} \u043a\u0430\u0440|few#{n} \u043a\u0430\u0440|many#{n} \u043a\u0430\u0440|#{n} \u043a\u0430\u0440","kilometer/hour":"1#{n} \u043a\u043c/\u0447|few#{n} \u043a\u043c/\u0447|many#{n} \u043a\u043c/\u0447|#{n} \u043a\u043c/\u0447","meters/second":"1#{n} \u043c/\u0441|few#{n} \u043c/\u0441|many#{n} \u043c/\u0441|#{n} \u043c/\u0441","miles/hour":"1#{n} \u043c\u0438\u043b\u044c/\u0447\u0430\u0441|few#{n} \u043c\u0438\u043b\u0438/\u0447\u0430\u0441|many#{n} \u043c\u0438\u043b\u044c/\u0447\u0430\u0441|#{n} \u043c\u0438\u043b\u0438/\u0447\u0430\u0441",
celsius:"1#{n} \u00b0C|few#{n} \u00b0C|many#{n} \u00b0C|#{n} \u00b0C",fahrenheit:"1#{n}\u00b0F|few#{n}\u00b0F|many#{n}\u00b0F|#{n}\u00b0F",kelvin:"1#{n} K|few#{n} K|many#{n} K|#{n} K","acre-foot":"1#{n} \u0430\u043a\u0440\u043e\u0444\u0443\u0442|few#{n} \u0430\u043a\u0440\u043e\u0444\u0443\u0442\u0430|many#{n} \u0430\u043a\u0440\u043e\u0444\u0443\u0442\u043e\u0432|#{n} \u0430\u043a\u0440\u043e\u0444\u0443\u0442\u0430",bushel:"#{n} bu",centiliter:"1#{n} \u0441\u043b|few#{n} \u0441\u043b|many#{n} \u0441\u043b|#{n} \u0441\u043b",
"cubic-centimeter":"1#{n} \u0441\u043c\u00b3|few#{n} \u0441\u043c\u00b3|many#{n} \u0441\u043c\u00b3|#{n} \u0441\u043c\u00b3","cubic foot":"1#{n} \u043a\u0443\u0431. \u0444\u0443\u0442|few#{n} \u043a\u0443\u0431. \u0444\u0443\u0442\u0430|many#{n} \u043a\u0443\u0431. \u0444\u0443\u0442\u043e\u0432|#{n} \u043a\u0443\u0431. \u0444\u0443\u0442\u0430","cubic inch":"1#{n} \u043a\u0443\u0431. \u0434\u044e\u0439\u043c|few#{n} \u043a\u0443\u0431. \u0434\u044e\u0439\u043c\u0430|many#{n} \u043a\u0443\u0431. \u0434\u044e\u0439\u043c\u043e\u0432|#{n} \u043a\u0443\u0431. \u0434\u044e\u0439\u043c\u0430",
"cubic-kilometer":"1#{n} \u043a\u043c\u00b3|few#{n} \u043a\u043c\u00b3|many#{n} \u043a\u043c\u00b3|#{n} \u043a\u043c\u00b3","cubic meter":"1#{n} \u043c\u00b3|few#{n} \u043c\u00b3|many#{n} \u043c\u00b3|#{n} \u043c\u00b3","cubic-mile":"1#{n} \u043a\u0443\u0431. \u043c\u0438\u043b\u044f|few#{n} \u043a\u0443\u0431. \u043c\u0438\u043b\u0438|many#{n} \u043a\u0443\u0431. \u043c\u0438\u043b\u0438|#{n} \u043a\u0443\u0431. \u043c\u0438\u043b\u0438","cubic-yard":"1#{n} \u043a\u0443\u0431. \u044f\u0440\u0434|few#{n} \u043a\u0443\u0431. \u044f\u0440\u0434\u0430|many#{n} \u043a\u0443\u0431. \u044f\u0440\u0434\u043e\u0432|#{n} \u043a\u0443\u0431. \u044f\u0440\u0434\u0430",
cup:"1#{n} \u0447\u0430\u0448.|few#{n} \u0447\u0430\u0448.|many#{n} \u0447\u0430\u0448.|#{n} \u0447\u0430\u0448.",deciliter:"1#{n} \u0434\u043b|few#{n} \u0434\u043b|many#{n} \u0434\u043b|#{n} \u0434\u043b","us ounce":"1#{n} \u0436\u0438\u0434\u043a. \u0443\u043d\u0446.|few#{n} \u0436\u0438\u0434\u043a. \u0443\u043d\u0446.|many#{n} \u0436\u0438\u0434\u043a. \u0443\u043d\u0446.|#{n} \u0436\u0438\u0434\u043a. \u0443\u043d\u0446.",gallon:"1#{n} \u0433\u0430\u043b.|few#{n} \u0433\u0430\u043b.|many#{n} \u0433\u0430\u043b.|#{n} \u0433\u0430\u043b.",
hectoliter:"1#{n} \u0433\u043b|few#{n} \u0433\u043b|many#{n} \u0433\u043b|#{n} \u0433\u043b",liter:"1#{n} \u043b|few#{n} \u043b|many#{n} \u043b|#{n} \u043b",megaliter:"1#{n} \u041c\u043b|few#{n} \u041c\u043b|many#{n} \u041c\u043b|#{n} \u041c\u043b",milliliter:"1#{n} \u043c\u043b|few#{n} \u043c\u043b|many#{n} \u043c\u043b|#{n} \u043c\u043b",pint:"1#{n} \u043f\u0438\u043d\u0442.|few#{n} \u043f\u0438\u043d\u0442.|many#{n} \u043f\u0438\u043d\u0442.|#{n} \u043f\u0438\u043d\u0442.",quart:"1#{n} \u043a\u0432\u0430\u0440\u0442.|few#{n} \u043a\u0432\u0430\u0440\u0442.|many#{n} \u043a\u0432\u0430\u0440\u0442.|#{n} \u043a\u0432\u0430\u0440\u0442.",
tbsp:"1#{n} \u0441\u0442. \u043b.|few#{n} \u0441\u0442. \u043b.|many#{n} \u0441\u0442. \u043b.|#{n} \u0441\u0442. \u043b.",tsp:"1#{n} \u0447.\u043b.|few#{n} \u0447.\u043b.|many#{n} \u0447.\u043b.|#{n} \u0447.\u043b.",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",
gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp",
"imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_ru_RU={unitfmt:{"long":{"g-force":"1#{n} g|few#{n} g|many#{n} g|#{n} g","meter-per-second-squared":"1#{n} \u043c\u0435\u0442\u0440 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0443 \u0432 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0435|few#{n} \u043c\u0435\u0442\u0440\u0430 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0443 \u0432 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0435|many#{n} \u043c\u0435\u0442\u0440\u043e\u0432 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0443 \u0432 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0435|#{n} \u043c\u0435\u0442\u0440\u0430 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0443 \u0432 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0435","arc-minute":"1#{n} \u043c\u0438\u043d\u0443\u0442\u0430|few#{n} \u043c\u0438\u043d\u0443\u0442\u044b|many#{n} \u043c\u0438\u043d\u0443\u0442|#{n} \u043c\u0438\u043d\u0443\u0442\u044b",
"arc-second":"1#{n} \u0441\u0435\u043a\u0443\u043d\u0434\u0430|few#{n} \u0441\u0435\u043a\u0443\u043d\u0434\u044b|many#{n} \u0441\u0435\u043a\u0443\u043d\u0434|#{n} \u0441\u0435\u043a\u0443\u043d\u0434\u044b",degree:"1#{n}\u0433\u0440\u0430\u0434\u0443\u0441|few#{n} \u0433\u0440\u0430\u0434\u0443\u0441\u0430|many#{n} \u0433\u0440\u0430\u0434\u0443\u0441\u043e\u0432|#{n} \u0433\u0440\u0430\u0434\u0443\u0441\u0430",radian:"1#{n} \u0440\u0430\u0434\u0438\u0430\u043d|few#{n} \u0440\u0430\u0434\u0438\u0430\u043d\u0430|many#{n} \u0440\u0430\u0434\u0438\u0430\u043d|#{n} \u0440\u0430\u0434\u0438\u0430\u043d\u0430",
acre:"1#{n} \u0430\u043a\u0440|few#{n} \u0430\u043a\u0440\u0430|many#{n} \u0430\u043a\u0440\u043e\u0432|#{n} \u0430\u043a\u0440\u0430",hectare:"1#{n} \u0433\u0435\u043a\u0442\u0430\u0440|few#{n} \u0433\u0435\u043a\u0442\u0430\u0440\u0430|many#{n} \u0433\u0435\u043a\u0442\u0430\u0440|#{n} \u0433\u0435\u043a\u0442\u0430\u0440\u0430","square centimeter":"1#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u0441\u0430\u043d\u0442\u0438\u043c\u0435\u0442\u0440|few#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u0441\u0430\u043d\u0442\u0438\u043c\u0435\u0442\u0440\u0430|many#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u0441\u0430\u043d\u0442\u0438\u043c\u0435\u0442\u0440\u043e\u0432|#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0441\u0430\u043d\u0442\u0438\u043c\u0435\u0442\u0440\u0430",
"square foot":"1#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u0444\u0443\u0442|few#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u0444\u0443\u0442\u0430|many#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u0444\u0443\u0442\u043e\u0432|#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0444\u0443\u0442\u0430","square inch":"1#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u0434\u044e\u0439\u043c|few#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u0434\u044e\u0439\u043c\u0430|many#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u0434\u044e\u0439\u043c\u043e\u0432|#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0434\u044e\u0439\u043c\u0430",
"square km":"1#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440|few#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440\u0430|many#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440\u043e\u0432|#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440\u0430",
"square meter":"1#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u043c\u0435\u0442\u0440|few#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u043c\u0435\u0442\u0440\u0430|many#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u043c\u0435\u0442\u0440\u043e\u0432|#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u0440\u0430","square mile":"1#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u0430\u044f \u043c\u0438\u043b\u044f|few#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u043c\u0438\u043b\u0438|many#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u043c\u0438\u043b\u044c|#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0439 \u043c\u0438\u043b\u0438",
"square yard":"1#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u044f\u0440\u0434|few#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u044f\u0440\u0434\u0430|many#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u044f\u0440\u0434\u043e\u0432|#{n} \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u044f\u0440\u0434\u0430","liter-per-kilometer":"1#{n} \u043b\u0438\u0442\u0440 \u043d\u0430 \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440|few#{n} \u043b\u0438\u0442\u0440\u0430 \u043d\u0430 \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440|many#{n} \u043b\u0438\u0442\u0440\u043e\u0432 \u043d\u0430 \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440|#{n} \u043b\u0438\u0442\u0440\u0430 \u043d\u0430 \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440",
mpg:"1#{n} \u043c\u0438\u043b\u044f \u043d\u0430 \u0433\u0430\u043b\u043b\u043e\u043d|few#{n} \u043c\u0438\u043b\u0438 \u043d\u0430 \u0433\u0430\u043b\u043b\u043e\u043d|many#{n} \u043c\u0438\u043b\u044c \u043d\u0430 \u0433\u0430\u043b\u043b\u043e\u043d|#{n} \u043c\u0438\u043b\u0438 \u043d\u0430 \u0433\u0430\u043b\u043b\u043e\u043d",bit:"1#{n} \u0431\u0438\u0442|few#{n} \u0431\u0438\u0442\u0430|many#{n} \u0431\u0438\u0442|#{n} \u0431\u0438\u0442\u0430","byte":"1#{n} \u0431\u0430\u0439\u0442|few#{n} \u0431\u0430\u0439\u0442\u0430|many#{n} \u0431\u0430\u0439\u0442|#{n} \u0431\u0430\u0439\u0442\u0430",
gigabit:"1#{n} \u0433\u0438\u0433\u0430\u0431\u0438\u0442|few#{n} \u0433\u0438\u0433\u0430\u0431\u0438\u0442\u0430|many#{n} \u0433\u0438\u0433\u0430\u0431\u0438\u0442|#{n} \u0433\u0438\u0433\u0430\u0431\u0438\u0442\u0430",gigabyte:"1#{n} \u0433\u0438\u0433\u0430\u0431\u0430\u0439\u0442|few#{n} \u0433\u0438\u0433\u0430\u0431\u0430\u0439\u0442\u0430|many#{n} \u0433\u0438\u0433\u0430\u0431\u0430\u0439\u0442|#{n} \u0433\u0438\u0433\u0430\u0431\u0430\u0439\u0442\u0430",kilobit:"1#{n} \u043a\u0438\u043b\u043e\u0431\u0438\u0442|few#{n} \u043a\u0438\u043b\u043e\u0431\u0438\u0442\u0430|many#{n} \u043a\u0438\u043b\u043e\u0431\u0438\u0442|#{n} \u043a\u0438\u043b\u043e\u0431\u0438\u0442\u0430",
kilobyte:"1#{n} \u043a\u0438\u043b\u043e\u0431\u0430\u0439\u0442|few#{n} \u043a\u0438\u043b\u043e\u0431\u0430\u0439\u0442\u0430|many#{n} \u043a\u0438\u043b\u043e\u0431\u0430\u0439\u0442|#{n} \u043a\u0438\u043b\u043e\u0431\u0430\u0439\u0442\u0430",megabit:"1#{n} \u043c\u0435\u0433\u0430\u0431\u0438\u0442|few#{n} \u043c\u0435\u0433\u0430\u0431\u0438\u0442\u0430|many#{n} \u043c\u0435\u0433\u0430\u0431\u0438\u0442|#{n} \u043c\u0435\u0433\u0430\u0431\u0438\u0442\u0430",megabyte:"1#{n} \u043c\u0435\u0433\u0430\u0431\u0430\u0439\u0442|few#{n} \u043c\u0435\u0433\u0430\u0431\u0430\u0439\u0442\u0430|many#{n} \u043c\u0435\u0433\u0430\u0431\u0430\u0439\u0442|#{n} \u043c\u0435\u0433\u0430\u0431\u0430\u0439\u0442\u0430",
terabit:"1#{n} \u0442\u0435\u0440\u0430\u0431\u0438\u0442|few#{n} \u0442\u0435\u0440\u0430\u0431\u0438\u0442\u0430|many#{n} \u0442\u0435\u0440\u0430\u0431\u0438\u0442|#{n} \u0442\u0435\u0440\u0430\u0431\u0438\u0442\u0430",terabyte:"1#{n} \u0442\u0435\u0440\u0430\u0431\u0430\u0439\u0442|few#{n} \u0442\u0435\u0440\u0430\u0431\u0430\u0439\u0442\u0430|many#{n} \u0442\u0435\u0440\u0430\u0431\u0430\u0439\u0442|#{n} \u0442\u0435\u0440\u0430\u0431\u0430\u0439\u0442\u0430",day:"1#{n} \u0434\u0435\u043d\u044c|few#{n} \u0434\u043d\u044f|many#{n} \u0434\u043d\u0435\u0439|#{n} \u0434\u043d\u044f",
hour:"1#{n} \u0447\u0430\u0441|few#{n} \u0447\u0430\u0441\u0430|many#{n} \u0447\u0430\u0441\u043e\u0432|#{n} \u0447\u0430\u0441\u0430",microsecond:"1#{n} \u043c\u0438\u043a\u0440\u043e\u0441\u0435\u043a\u0443\u043d\u0434\u0430|few#{n} \u043c\u0438\u043a\u0440\u043e\u0441\u0435\u043a\u0443\u043d\u0434\u044b|many#{n} \u043c\u0438\u043a\u0440\u043e\u0441\u0435\u043a\u0443\u043d\u0434|#{n} \u043c\u0438\u043a\u0440\u043e\u0441\u0435\u043a\u0443\u043d\u0434\u044b",millisecond:"1#{n} \u043c\u0438\u043b\u043b\u0438\u0441\u0435\u043a\u0443\u043d\u0434\u0430|few#{n} \u043c\u0438\u043b\u043b\u0438\u0441\u0435\u043a\u0443\u043d\u0434\u044b|many#{n} \u043c\u0438\u043b\u043b\u0438\u0441\u0435\u043a\u0443\u043d\u0434|#{n} \u043c\u0438\u043b\u043b\u0438\u0441\u0435\u043a\u0443\u043d\u0434\u044b",
minute:"1#{n} \u043c\u0438\u043d\u0443\u0442\u0430|few#{n} \u043c\u0438\u043d\u0443\u0442\u044b|many#{n} \u043c\u0438\u043d\u0443\u0442|#{n} \u043c\u0438\u043d\u0443\u0442\u044b",month:"1#{n} \u043c\u0435\u0441\u044f\u0446|few#{n} \u043c\u0435\u0441\u044f\u0446\u0430|many#{n} \u043c\u0435\u0441\u044f\u0446\u0435\u0432|#{n} \u043c\u0435\u0441\u044f\u0446\u0430",nanosecond:"1#{n} \u043d\u0430\u043d\u043e\u0441\u0435\u043a\u0443\u043d\u0434\u0430|few#{n} \u043d\u0430\u043d\u043e\u0441\u0435\u043a\u0443\u043d\u0434\u044b|many#{n} \u043d\u0430\u043d\u043e\u0441\u0435\u043a\u0443\u043d\u0434|#{n} \u043d\u0430\u043d\u043e\u0441\u0435\u043a\u0443\u043d\u0434\u044b",
second:"1#{n} \u0441\u0435\u043a\u0443\u043d\u0434\u0430|few#{n} \u0441\u0435\u043a\u0443\u043d\u0434\u044b|many#{n} \u0441\u0435\u043a\u0443\u043d\u0434|#{n} \u0441\u0435\u043a\u0443\u043d\u0434\u044b",week:"1#{n} \u043d\u0435\u0434\u0435\u043b\u044f|few#{n} \u043d\u0435\u0434\u0435\u043b\u0438|many#{n} \u043d\u0435\u0434\u0435\u043b\u044c|#{n} \u043d\u0435\u0434\u0435\u043b\u0438",year:"1#{n} \u0433\u043e\u0434|few#{n} \u0433\u043e\u0434\u0430|many#{n} \u043b\u0435\u0442|#{n} \u0433\u043e\u0434\u0430",
ampere:"1#{n} \u0430\u043c\u043f\u0435\u0440|few#{n} \u0430\u043c\u043f\u0435\u0440\u0430|many#{n} \u0430\u043c\u043f\u0435\u0440|#{n} \u0430\u043c\u043f\u0435\u0440\u0430",milliampere:"1#{n} \u043c\u0438\u043b\u043b\u0438\u0430\u043c\u043f\u0435\u0440|few#{n} \u043c\u0438\u043b\u043b\u0438\u0430\u043c\u043f\u0435\u0440\u0430|many#{n} \u043c\u0438\u043b\u043b\u0438\u0430\u043c\u043f\u0435\u0440|#{n} \u043c\u0438\u043b\u043b\u0438\u0430\u043c\u043f\u0435\u0440\u0430",ohm:"1#{n} \u043e\u043c|few#{n} \u043e\u043c\u0430|many#{n} \u043e\u043c|#{n} \u043e\u043c\u0430",
volt:"1#{n} \u0432\u043e\u043b\u044c\u0442|few#{n} \u0432\u043e\u043b\u044c\u0442\u0430|many#{n} \u0432\u043e\u043b\u044c\u0442|#{n} \u0432\u043e\u043b\u044c\u0442\u0430",calorie:"1#{n} \u043a\u0430\u043b\u043e\u0440\u0438\u044f|few#{n} \u043a\u0430\u043b\u043e\u0440\u0438\u0438|many#{n} \u043a\u0430\u043b\u043e\u0440\u0438\u0439|#{n} \u043a\u0430\u043b\u043e\u0440\u0438\u0438",joule:"1#{n} \u0434\u0436\u043e\u0443\u043b\u044c|few#{n} \u0434\u0436\u043e\u0443\u043b\u044f|many#{n} \u0434\u0436\u043e\u0443\u043b\u0435\u0439|#{n} \u0434\u0436\u043e\u0443\u043b\u044f",
kilocalorie:"1#{n} \u043a\u0438\u043b\u043e\u043a\u0430\u043b\u043e\u0440\u0438\u044f|few#{n} \u043a\u0438\u043b\u043e\u043a\u0430\u043b\u043e\u0440\u0438\u0438|many#{n} \u043a\u0438\u043b\u043e\u043a\u0430\u043b\u043e\u0440\u0438\u0439|#{n} \u043a\u0438\u043b\u043e\u043a\u0430\u043b\u043e\u0440\u0438\u0438",kilojoule:"1#{n} \u043a\u0438\u043b\u043e\u0434\u0436\u043e\u0443\u043b\u044c|few#{n} \u043a\u0438\u043b\u043e\u0434\u0436\u043e\u0443\u043b\u044f|many#{n} \u043a\u0438\u043b\u043e\u0434\u0436\u043e\u0443\u043b\u0435\u0439|#{n} \u043a\u0438\u043b\u043e\u0434\u0436\u043e\u0443\u043b\u044f",
"kilowatt hour":"1#{n} \u043a\u0438\u043b\u043e\u0432\u0430\u0442\u0442-\u0447\u0430\u0441|few#{n} \u043a\u0438\u043b\u043e\u0432\u0430\u0442\u0442-\u0447\u0430\u0441\u0430|many#{n} \u043a\u0438\u043b\u043e\u0432\u0430\u0442\u0442-\u0447\u0430\u0441\u043e\u0432|#{n} \u043a\u0438\u043b\u043e\u0432\u0430\u0442\u0442-\u0447\u0430\u0441\u0430",gigahertz:"1#{n} \u0433\u0438\u0433\u0430\u0433\u0435\u0440\u0446|few#{n} \u0433\u0438\u0433\u0430\u0433\u0435\u0440\u0446\u0430|many#{n} \u0433\u0438\u0433\u0430\u0433\u0435\u0440\u0446|#{n} \u0433\u0438\u0433\u0430\u0433\u0435\u0440\u0446\u0430",
hertz:"1#{n} \u0433\u0435\u0440\u0446|few#{n} \u0433\u0435\u0440\u0446\u0430|many#{n} \u0433\u0435\u0440\u0446|#{n} \u0433\u0435\u0440\u0446\u0430",kilohertz:"1#{n} \u043a\u0438\u043b\u043e\u0433\u0435\u0440\u0446|few#{n} \u043a\u0438\u043b\u043e\u0433\u0435\u0440\u0446\u0430|many#{n} \u043a\u0438\u043b\u043e\u0433\u0435\u0440\u0446|#{n} \u043a\u0438\u043b\u043e\u0433\u0435\u0440\u0446\u0430",megahertz:"1#{n} \u043c\u0435\u0433\u0430\u0433\u0435\u0440\u0446|few#{n} \u043c\u0435\u0433\u0430\u0433\u0435\u0440\u0446\u0430|many#{n} \u043c\u0435\u0433\u0430\u0433\u0435\u0440\u0446|#{n} \u043c\u0435\u0433\u0430\u0433\u0435\u0440\u0446\u0430",
"astronomical-unit":"1#{n} \u0430\u0441\u0442\u0440\u043e\u043d\u043e\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0435\u0434\u0438\u043d\u0438\u0446\u0430|few#{n} \u0430\u0441\u0442\u0440\u043e\u043d\u043e\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0435\u0434\u0438\u043d\u0438\u0446\u044b|many#{n} \u0430\u0441\u0442\u0440\u043e\u043d\u043e\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0435\u0434\u0438\u043d\u0438\u0446|#{n} \u0430\u0441\u0442\u0440\u043e\u043d\u043e\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0435\u0434\u0438\u043d\u0438\u0446\u044b",
centimeter:"1#{n} \u0441\u0430\u043d\u0442\u0438\u043c\u0435\u0442\u0440|few#{n} \u0441\u0430\u043d\u0442\u0438\u043c\u0435\u0442\u0440\u0430|many#{n} \u0441\u0430\u043d\u0442\u0438\u043c\u0435\u0442\u0440\u043e\u0432|#{n} \u0441\u0430\u043d\u0442\u0438\u043c\u0435\u0442\u0440\u0430",decimeter:"1#{n} \u0434\u0435\u0446\u0438\u043c\u0435\u0442\u0440|few#{n} \u0434\u0435\u0446\u0438\u043c\u0435\u0442\u0440\u0430|many#{n} \u0434\u0435\u0446\u0438\u043c\u0435\u0442\u0440\u043e\u0432|#{n} \u0434\u0435\u0446\u0438\u043c\u0435\u0442\u0440\u0430",
fathom:"#{n} fm",foot:"1#{n} \u0444\u0443\u0442|few#{n} \u0444\u0443\u0442\u0430|many#{n} \u0444\u0443\u0442\u043e\u0432|#{n} \u0444\u0443\u0442\u0430",furlong:"#{n} fur",inch:"1#{n} \u0434\u044e\u0439\u043c|few#{n} \u0434\u044e\u0439\u043c\u0430|many#{n} \u0434\u044e\u0439\u043c\u043e\u0432|#{n} \u0434\u044e\u0439\u043c\u0430",kilometer:"1#{n} \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440|few#{n} \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440\u0430|many#{n} \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440\u043e\u0432|#{n} \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440\u0430",
"light-year":"1#{n} \u0441\u0432\u0435\u0442\u043e\u0432\u043e\u0439 \u0433\u043e\u0434|few#{n} \u0441\u0432\u0435\u0442\u043e\u0432\u044b\u0445 \u0433\u043e\u0434\u0430|many#{n} \u0441\u0432\u0435\u0442\u043e\u0432\u044b\u0445 \u043b\u0435\u0442|#{n} \u0441\u0432\u0435\u0442\u043e\u0432\u044b\u0445 \u0433\u043e\u0434\u0430",meter:"1#{n} \u043c\u0435\u0442\u0440|few#{n} \u043c\u0435\u0442\u0440\u0430|many#{n} \u043c\u0435\u0442\u0440\u043e\u0432|#{n} \u043c\u0435\u0442\u0440\u0430",micrometer:"1#{n} \u043c\u0438\u043a\u0440\u043e\u043c\u0435\u0442\u0440|few#{n} \u043c\u0438\u043a\u0440\u043e\u043c\u0435\u0442\u0440\u0430|many#{n} \u043c\u0438\u043a\u0440\u043e\u043c\u0435\u0442\u0440\u043e\u0432|#{n} \u043c\u0438\u043a\u0440\u043e\u043c\u0435\u0442\u0440\u0430",
mile:"1#{n} \u043c\u0438\u043b\u044f|few#{n} \u043c\u0438\u043b\u0438|many#{n} \u043c\u0438\u043b\u044c|#{n} \u043c\u0438\u043b\u0438",millimeter:"1#{n} \u043c\u0438\u043b\u043b\u0438\u043c\u0435\u0442\u0440|few#{n} \u043c\u0438\u043b\u043b\u0438\u043c\u0435\u0442\u0440\u0430|many#{n} \u043c\u0438\u043b\u043b\u0438\u043c\u0435\u0442\u0440\u043e\u0432|#{n} \u043c\u0438\u043b\u043b\u0438\u043c\u0435\u0442\u0440\u0430",nanometer:"1#{n} \u043d\u0430\u043d\u043e\u043c\u0435\u0442\u0440|few#{n} \u043d\u0430\u043d\u043e\u043c\u0435\u0442\u0440\u0430|many#{n} \u043d\u0430\u043d\u043e\u043c\u0435\u0442\u0440\u043e\u0432|#{n} \u043d\u0430\u043d\u043e\u043c\u0435\u0442\u0440\u0430",
nauticalmile:"1#{n} \u043c\u043e\u0440\u0441\u043a\u0430\u044f \u043c\u0438\u043b\u044f|few#{n} \u043c\u043e\u0440\u0441\u043a\u0438\u0435 \u043c\u0438\u043b\u0438|many#{n} \u043c\u043e\u0440\u0441\u043a\u0438\u0445 \u043c\u0438\u043b\u044c|#{n} \u043c\u043e\u0440\u0441\u043a\u043e\u0439 \u043c\u0438\u043b\u0438",parsec:"1#{n} \u043f\u0430\u0440\u0441\u0435\u043a|few#{n} \u043f\u0430\u0440\u0441\u0435\u043a\u0430|many#{n} \u043f\u0430\u0440\u0441\u0435\u043a\u043e\u0432|#{n} \u043f\u0430\u0440\u0441\u0435\u043a\u0430",
picometer:"1#{n} \u043f\u0438\u043a\u043e\u043c\u0435\u0442\u0440|few#{n} \u043f\u0438\u043a\u043e\u043c\u0435\u0442\u0440\u0430|many#{n} \u043f\u0438\u043a\u043e\u043c\u0435\u0442\u0440\u043e\u0432|#{n} \u043f\u0438\u043a\u043e\u043c\u0435\u0442\u0440\u0430",yard:"1#{n} \u044f\u0440\u0434|few#{n} \u044f\u0440\u0434\u0430|many#{n} \u044f\u0440\u0434\u043e\u0432|#{n} \u044f\u0440\u0434\u0430",lux:"1#{n} \u043b\u044e\u043a\u0441|few#{n} \u043b\u044e\u043a\u0441\u0430|many#{n} \u043b\u044e\u043a\u0441|#{n} \u043b\u044e\u043a\u0441\u0430",
carat:"1#{n} \u043a\u0430\u0440\u0430\u0442|few#{n} \u043a\u0430\u0440\u0430\u0442\u0430|many#{n} \u043a\u0430\u0440\u0430\u0442|#{n} \u043a\u0430\u0440\u0430\u0442\u0430",gram:"1#{n} \u0433\u0440\u0430\u043c\u043c|few#{n} \u0433\u0440\u0430\u043c\u043c\u0430|many#{n} \u0433\u0440\u0430\u043c\u043c|#{n} \u0433\u0440\u0430\u043c\u043c\u0430",kilogram:"1#{n} \u043a\u0438\u043b\u043e\u0433\u0440\u0430\u043c\u043c|few#{n} \u043a\u0438\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430|many#{n} \u043a\u0438\u043b\u043e\u0433\u0440\u0430\u043c\u043c|#{n} \u043a\u0438\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430",
"metric ton":"1#{n} \u0442\u043e\u043d\u043d\u0430|few#{n} \u0442\u043e\u043d\u043d\u044b|many#{n} \u0442\u043e\u043d\u043d|#{n} \u0442\u043e\u043d\u043d\u044b",microgram:"1#{n} \u043c\u0438\u043a\u0440\u043e\u0433\u0440\u0430\u043c\u043c|few#{n} \u043c\u0438\u043a\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430|many#{n} \u043c\u0438\u043a\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043e\u0432|#{n} \u043c\u0438\u043a\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430",milligram:"1#{n} \u043c\u0438\u043b\u043b\u0438\u0433\u0440\u0430\u043c\u043c|few#{n} \u043c\u0438\u043b\u043b\u0438\u0433\u0440\u0430\u043c\u043c\u0430|many#{n} \u043c\u0438\u043b\u043b\u0438\u0433\u0440\u0430\u043c\u043c\u043e\u0432|#{n} \u043c\u0438\u043b\u043b\u0438\u0433\u0440\u0430\u043c\u043c\u0430",
ounce:"1#{n} \u0443\u043d\u0446\u0438\u044f|few#{n} \u0443\u043d\u0446\u0438\u0438|many#{n} \u0443\u043d\u0446\u0438\u0439|#{n} \u0443\u043d\u0446\u0438\u0438","ounce-troy":"1#{n} \u0442\u0440\u043e\u0439\u0441\u043a\u0430\u044f \u0443\u043d\u0446\u0438\u044f|few#{n} \u0442\u0440\u043e\u0439\u0441\u043a\u0438\u0435 \u0443\u043d\u0446\u0438\u0438|many#{n} \u0442\u0440\u043e\u0439\u0441\u043a\u0438\u0445 \u0443\u043d\u0446\u0438\u0439|#{n} \u0442\u0440\u043e\u0439\u0441\u043a\u043e\u0439 \u0443\u043d\u0446\u0438\u0438",
pound:"1#{n} \u0444\u0443\u043d\u0442|few#{n} \u0444\u0443\u043d\u0442\u0430|many#{n} \u0444\u0443\u043d\u0442\u043e\u0432|#{n} \u0444\u0443\u043d\u0442\u0430",stone:"#{n} st","long ton":"1#{n} \u0430\u043c\u0435\u0440\u0438\u043a\u0430\u043d\u0441\u043a\u0430\u044f \u0442\u043e\u043d\u043d\u0430|few#{n} \u0430\u043c\u0435\u0440\u0438\u043a\u0430\u043d\u0441\u043a\u0438\u0435 \u0442\u043e\u043d\u043d\u044b|many#{n} \u0430\u043c\u0435\u0440\u0438\u043a\u0430\u043d\u0441\u043a\u0438\u0445 \u0442\u043e\u043d\u043d|#{n} \u0430\u043c\u0435\u0440\u0438\u043a\u0430\u043d\u0441\u043a\u043e\u0439 \u0442\u043e\u043d\u043d\u044b",
gigawatt:"1#{n} \u0433\u0438\u0433\u0430\u0432\u0430\u0442\u0442|few#{n} \u0433\u0438\u0433\u0430\u0432\u0430\u0442\u0442\u0430|many#{n} \u0433\u0438\u0433\u0430\u0432\u0430\u0442\u0442|#{n} \u0433\u0438\u0433\u0430\u0432\u0430\u0442\u0442\u0430",horsepower:"1#{n} \u043b\u043e\u0448\u0430\u0434\u0438\u043d\u0430\u044f \u0441\u0438\u043b\u0430|few#{n} \u043b\u043e\u0448\u0430\u0434\u0438\u043d\u044b\u0445 \u0441\u0438\u043b\u044b|many#{n} \u043b\u043e\u0448\u0430\u0434\u0438\u043d\u044b\u0445 \u0441\u0438\u043b|#{n} \u043b\u043e\u0448\u0430\u0434\u0438\u043d\u043e\u0439 \u0441\u0438\u043b\u044b",
kilowatt:"1#{n} \u043a\u0438\u043b\u043e\u0432\u0430\u0442\u0442|few#{n} \u043a\u0438\u043b\u043e\u0432\u0430\u0442\u0442\u0430|many#{n} \u043a\u0438\u043b\u043e\u0432\u0430\u0442\u0442|#{n} \u043a\u0438\u043b\u043e\u0432\u0430\u0442\u0442\u0430",megawatt:"1#{n} \u043c\u0435\u0433\u0430\u0432\u0430\u0442\u0442|few#{n} \u043c\u0435\u0433\u0430\u0432\u0430\u0442\u0442\u0430|many#{n} \u043c\u0435\u0433\u0430\u0432\u0430\u0442\u0442|#{n} \u043c\u0435\u0433\u0430\u0432\u0430\u0442\u0442\u0430",milliwatt:"1#{n} \u043c\u0438\u043b\u043b\u0438\u0432\u0430\u0442\u0442|few#{n} \u043c\u0438\u043b\u043b\u0438\u0432\u0430\u0442\u0442\u0430|many#{n} \u043c\u0438\u043b\u043b\u0438\u0432\u0430\u0442\u0442|#{n} \u043c\u0438\u043b\u043b\u0438\u0432\u0430\u0442\u0442\u0430",
watt:"1#{n} \u0432\u0430\u0442\u0442|few#{n} \u0432\u0430\u0442\u0442\u0430|many#{n} \u0432\u0430\u0442\u0442|#{n} \u0432\u0430\u0442\u0442\u0430",hectopascal:"1#{n} \u0433\u0435\u043a\u0442\u043e\u043f\u0430\u0441\u043a\u0430\u043b\u044c|few#{n} \u0433\u0435\u043a\u0442\u043e\u043f\u0430\u0441\u043a\u0430\u043b\u044f|many#{n} \u0433\u0435\u043a\u0442\u043e\u043f\u0430\u0441\u043a\u0430\u043b\u0435\u0439|#{n} \u0433\u0435\u043a\u0442\u043e\u043f\u0430\u0441\u043a\u0430\u043b\u044f","inch-hg":"1#{n} \u0434\u044e\u0439\u043c \u0440\u0442\u0443\u0442\u043d\u043e\u0433\u043e \u0441\u0442\u043e\u043b\u0431\u0430|few#{n} \u0434\u044e\u0439\u043c\u0430 \u0440\u0442\u0443\u0442\u043d\u043e\u0433\u043e \u0441\u0442\u043e\u043b\u0431\u0430|many#{n} \u0434\u044e\u0439\u043c\u043e\u0432 \u0440\u0442\u0443\u0442\u043d\u043e\u0433\u043e \u0441\u0442\u043e\u043b\u0431\u0430|#{n}\u0434\u044e\u0439\u043c\u0430 \u0440\u0442\u0443\u0442\u043d\u043e\u0433\u043e \u0441\u0442\u043e\u043b\u0431\u0430",
millibar:"1#{n} \u043c\u0438\u043b\u043b\u0438\u0431\u0430\u0440|few#{n} \u043c\u0438\u043b\u043b\u0438\u0431\u0430\u0440\u0430|many#{n} \u043c\u0438\u043b\u043b\u0438\u0431\u0430\u0440|#{n} \u043c\u0438\u043b\u043b\u0438\u0431\u0430\u0440\u0430","millimeter-of-mercury":"1#{n} \u043c\u0438\u043b\u043b\u0438\u043c\u0435\u0442\u0440 \u0440\u0442\u0443\u0442\u043d\u043e\u0433\u043e \u0441\u0442\u043e\u043b\u0431\u0430|few#{n} \u043c\u0438\u043b\u043b\u0438\u043c\u0435\u0442\u0440\u0430 \u0440\u0442\u0443\u0442\u043d\u043e\u0433\u043e \u0441\u0442\u043e\u043b\u0431\u0430|many#{n} \u043c\u0438\u043b\u043b\u0438\u043c\u0435\u0442\u0440\u043e\u0432 \u0440\u0442\u0443\u0442\u043d\u043e\u0433\u043e \u0441\u0442\u043e\u043b\u0431\u0430|#{n} \u043c\u0438\u043b\u043b\u0438\u043c\u0435\u0442\u0440\u0430 \u0440\u0442\u0443\u0442\u043d\u043e\u0433\u043e \u0441\u0442\u043e\u043b\u0431\u0430",
"pound-per-square-inch":"1#{n} \u0444\u0443\u043d\u0442 \u043d\u0430 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u0434\u044e\u0439\u043c|few#{n} \u0444\u0443\u043d\u0442\u0430 \u043d\u0430 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u0434\u044e\u0439\u043c|many#{n} \u0444\u0443\u043d\u0442\u043e\u0432 \u043d\u0430 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u0434\u044e\u0439\u043c|#{n} \u0444\u0443\u043d\u0442\u0430 \u043d\u0430 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u0434\u044e\u0439\u043c",
karat:"1#{n} \u043a\u0430\u0440\u0430\u0442|few#{n} \u043a\u0430\u0440\u0430\u0442\u0430|many#{n} \u043a\u0430\u0440\u0430\u0442|#{n} \u043a\u0430\u0440\u0430\u0442\u0430","kilometer/hour":"1#{n} \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440 \u0432 \u0447\u0430\u0441|few#{n} \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440\u0430 \u0432 \u0447\u0430\u0441|many#{n} \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440\u043e\u0432 \u0432 \u0447\u0430\u0441|#{n} \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440\u0430 \u0432 \u0447\u0430\u0441",
"meters/second":"1#{n} \u043c\u0435\u0442\u0440 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0443|few#{n} \u043c\u0435\u0442\u0440\u0430 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u044b\u0443|many#{n} \u043c\u0435\u0442\u0440\u043e\u0432 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0443|#{n} \u043c\u0435\u0442\u0440\u0430 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0443","miles/hour":"1#{n} \u043c\u0438\u043b\u044f \u0432 \u0447\u0430\u0441|few#{n} \u043c\u0438\u043b\u0438 \u0432 \u0447\u0430\u0441|many#{n} \u043c\u0438\u043b\u044c \u0432 \u0447\u0430\u0441|#{n} \u043c\u0438\u043b\u0438 \u0432 \u0447\u0430\u0441",
celsius:"1#{n}\u0433\u0440\u0430\u0434\u0443\u0441 \u0426\u0435\u043b\u044c\u0441\u0438\u044f|few#{n} \u0433\u0440\u0430\u0434\u0443\u0441\u0430 \u0426\u0435\u043b\u044c\u0441\u0438\u044f|many#{n}\u0433\u0440\u0430\u0434\u0443\u0441\u043e\u0432 \u0426\u0435\u043b\u044c\u0441\u0438\u044f|#{n}\u0433\u0440\u0430\u0434\u0443\u0441\u0430 \u0426\u0435\u043b\u044c\u0441\u0438\u044f",fahrenheit:"1#{n} \u0433\u0440\u0430\u0434\u0443\u0441 \u043f\u043e \u0424\u0430\u0440\u0435\u043d\u0433\u0435\u0439\u0442\u0443|few#{n} \u0433\u0440\u0430\u0434\u0443\u0441\u0430 \u043f\u043e \u0424\u0430\u0440\u0435\u043d\u0433\u0435\u0439\u0442\u0443|many#{n} \u0433\u0440\u0430\u0434\u0443\u0441\u043e\u0432 \u043f\u043e \u0424\u0430\u0440\u0435\u043d\u0433\u0435\u0439\u0442\u0443|#{n} \u0433\u0440\u0430\u0434\u0443\u0441\u0430 \u043f\u043e \u0424\u0430\u0440\u0435\u043d\u0433\u0435\u0439\u0442\u0443",
kelvin:"1#{n} \u0433\u0440\u0430\u0434\u0443\u0441 \u043f\u043e \u041a\u0435\u043b\u044c\u0432\u0438\u043d\u0443|few#{n} \u0433\u0440\u0430\u0434\u0443\u0441\u0430 \u043f\u043e \u041a\u0435\u043b\u044c\u0432\u0438\u043d\u0443|many#{n} \u0433\u0440\u0430\u0434\u0443\u0441\u043e\u0432 \u043f\u043e \u041a\u0435\u043b\u044c\u0432\u0438\u043d\u0443|#{n} \u0433\u0440\u0430\u0434\u0443\u0441\u0430 \u043f\u043e \u041a\u0435\u043b\u044c\u0432\u0438\u043d\u0443","acre-foot":"1#{n} \u0430\u043a\u0440\u043e\u0444\u0443\u0442|few#{n} \u0430\u043a\u0440\u043e\u0444\u0443\u0442\u0430|many#{n} \u0430\u043a\u0440\u043e\u0444\u0443\u0442\u043e\u0432|#{n} \u0430\u043a\u0440\u043e\u0444\u0443\u0442\u0430",
bushel:"#{n} bu",centiliter:"1#{n} \u0441\u0430\u043d\u0442\u0438\u043b\u0438\u0442\u0440|few#{n} \u0441\u0430\u043d\u0442\u0438\u043b\u0438\u0442\u0440\u0430|many#{n} \u0441\u0430\u043d\u0442\u0438\u043b\u0438\u0442\u0440\u043e\u0432|#{n} \u0441\u0430\u043d\u0442\u0438\u043b\u0438\u0442\u0440\u0430","cubic-centimeter":"1#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0441\u0430\u043d\u0442\u0438\u043c\u0435\u0442\u0440|few#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0441\u0430\u043d\u0442\u0438\u043c\u0435\u0442\u0440\u0430|many#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0441\u0430\u043d\u0442\u0438\u043c\u0435\u0442\u0440\u043e\u0432|#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0441\u0430\u043d\u0442\u0438\u043c\u0435\u0442\u0440\u0430",
"cubic foot":"1#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0444\u0443\u0442|few#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0444\u0443\u0442\u0430|many#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0444\u0443\u0442\u043e\u0432|#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0444\u0443\u0442\u0430","cubic inch":"1#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0434\u044e\u0439\u043c|few#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0434\u044e\u0439\u043c\u0430|many#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0434\u044e\u0439\u043c\u043e\u0432|#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0434\u044e\u0439\u043c\u0430",
"cubic-kilometer":"1#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440|few#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440\u0430|many#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440\u043e\u0432|#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440\u0430",
"cubic meter":"1#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043c\u0435\u0442\u0440|few#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043c\u0435\u0442\u0440\u0430|many#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043c\u0435\u0442\u0440\u043e\u0432|#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043c\u0435\u0442\u0440\u0430","cubic-mile":"1#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043c\u0438\u043b\u044f|few#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043c\u0438\u043b\u0438|many#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043c\u0438\u043b\u044c|#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043c\u0438\u043b\u0438",
"cubic-yard":"1#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u044f\u0440\u0434|few#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u044f\u0440\u0434\u0430|many#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u044f\u0440\u0434\u043e\u0432|#{n} \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u044f\u0440\u0434\u0430",cup:"1#{n} \u0447\u0430\u0448\u043a\u0430|few#{n} \u0447\u0430\u0448\u043a\u0438|many#{n} \u0447\u0430\u0448\u0435\u043a|#{n} \u0447\u0430\u0448\u043a\u0438",
deciliter:"1#{n} \u0434\u0435\u0446\u0438\u043b\u0438\u0442\u0440|few#{n} \u0434\u0435\u0446\u0438\u043b\u0438\u0442\u0440\u0430|many#{n} \u0434\u0435\u0446\u0438\u043b\u0438\u0442\u0440\u043e\u0432|#{n} \u0434\u0435\u0446\u0438\u043b\u0438\u0442\u0440\u0430","us ounce":"1#{n} \u0436\u0438\u0434\u043a\u0430\u044f \u0443\u043d\u0446\u0438\u044f|few#{n} \u0436\u0438\u0434\u043a\u0438\u0435 \u0443\u043d\u0446\u0438\u0438|many#{n} \u0436\u0438\u0434\u043a\u0438\u0445 \u0443\u043d\u0446\u0438\u0439|#{n} \u0436\u0438\u0434\u043a\u043e\u0439 \u0443\u043d\u0446\u0438\u0438",
gallon:"1#{n} \u0433\u0430\u043b\u043b\u043e\u043d|few#{n} \u0433\u0430\u043b\u043b\u043e\u043d\u0430|many#{n} \u0433\u0430\u043b\u043b\u043e\u043d\u043e\u0432|#{n} \u0433\u0430\u043b\u043b\u043e\u043d\u0430",hectoliter:"1#{n} \u0433\u0435\u043a\u0442\u043e\u043b\u0438\u0442\u0440|few#{n} \u0433\u0435\u043a\u0442\u043e\u043b\u0438\u0442\u0440\u0430|many#{n} \u0433\u0435\u043a\u0442\u043e\u043b\u0438\u0442\u0440\u043e\u0432|#{n} \u0433\u0435\u043a\u0442\u043e\u043b\u0438\u0442\u0440\u0430",liter:"1#{n} \u043b\u0438\u0442\u0440|few#{n} \u043b\u0438\u0442\u0440\u0430|many#{n} \u043b\u0438\u0442\u0440\u0430|#{n} \u043b\u0438\u0442\u0440\u0430",
megaliter:"1#{n} \u043c\u0435\u0433\u0430\u043b\u0438\u0442\u0440|few#{n} \u043c\u0435\u0433\u0430\u043b\u0438\u0442\u0440\u0430|many#{n} \u043c\u0435\u0433\u0430\u043b\u0438\u0442\u0440\u043e\u0432|#{n} \u043c\u0435\u0433\u0430\u043b\u0438\u0442\u0440\u0430",milliliter:"1#{n} \u043c\u0438\u043b\u043b\u0438\u043b\u0438\u0442\u0440|few#{n} \u043c\u0438\u043b\u043b\u0438\u043b\u0438\u0442\u0440\u0430|many#{n} \u043c\u0438\u043b\u043b\u0438\u043b\u0438\u0442\u0440\u043e\u0432|#{n} \u043c\u0438\u043b\u043b\u0438\u043b\u0438\u0442\u0440\u0430",
pint:"1#{n} \u043f\u0438\u043d\u0442\u0430|few#{n} \u043f\u0438\u043d\u0442\u044b|many#{n} \u043f\u0438\u043d\u0442|#{n} \u043f\u0438\u043d\u0442\u044b",quart:"1#{n} \u043a\u0432\u0430\u0440\u0442\u0430|few#{n} \u043a\u0432\u0430\u0440\u0442\u044b|many#{n} \u043a\u0432\u0430\u0440\u0442|#{n} \u043a\u0432\u0430\u0440\u0442\u044b",tbsp:"1#{n} \u0441\u0442\u043e\u043b\u043e\u0432\u0430\u044f \u043b\u043e\u0436\u043a\u0430|few#{n} \u0441\u0442\u043e\u043b\u043e\u0432\u044b\u0435 \u043b\u043e\u0436\u043a\u0438|many#{n} \u0441\u0442\u043e\u043b\u043e\u0432\u044b\u0445 \u043b\u043e\u0436\u0435\u043a|#{n} \u0441\u0442\u043e\u043b\u043e\u0432\u043e\u0439 \u043b\u043e\u0436\u043a\u0438",
tsp:"1#{n} \u0447\u0430\u0439\u043d\u0430\u044f \u043b\u043e\u0436\u043a\u0430|few#{n} \u0447\u0430\u0439\u043d\u044b\u0435 \u043b\u043e\u0436\u043a\u0438|many#{n} \u0447\u0430\u0439\u043d\u044b\u0445 \u043b\u043e\u0436\u0435\u043a|#{n} \u0447\u0430\u0439\u043d\u043e\u0439 \u043b\u043e\u0436\u043a\u0438",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",
petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)",
"short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second","miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces",
"imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},"short":{"g-force":"1#{n} g|few#{n} g|many#{n} g|#{n} g","meter-per-second-squared":"1#{n} \u043c/\u0441\u00b2|few#{n} \u043c/\u0441\u00b2|many#{n} \u043c/\u0441\u00b2|#{n} \u043c/\u0441\u00b2","arc-minute":"1#{n}\u2032|few#{n}\u2032|many#{n}\u2032|#{n}\u2032","arc-second":"1#{n}\u2033|few#{n}\u2033|many#{n}\u2033|#{n}\u2033",
degree:"1#{n}\u00b0|few#{n}\u00b0|many#{n}\u00b0|#{n}\u00b0",radian:"1#{n} \u0440\u0430\u0434|few#{n} \u0440\u0430\u0434|many#{n} \u0440\u0430\u0434|#{n} \u0440\u0430\u0434",acre:"1#{n} \u0430\u043a\u0440|few#{n} \u0430\u043a\u0440\u0430|many#{n} \u0430\u043a\u0440\u043e\u0432|#{n} \u0430\u043a\u0440\u0430",hectare:"1#{n} \u0433\u0430|few#{n} \u0433\u0430|many#{n} \u0433\u0430|#{n} \u0433\u0430","square centimeter":"1#{n} \u0441\u043c\u00b2|few#{n} \u0441\u043c\u00b2|many#{n} \u0441\u043c\u00b2|#{n} \u0441\u043c\u00b2",
"square foot":"1#{n} \u043a\u0432. \u0444\u0443\u0442|few#{n} \u043a\u0432. \u0444\u0443\u0442\u0430|many#{n} \u043a\u0432. \u0444\u0443\u0442\u043e\u0432|#{n} \u043a\u0432. \u0444\u0443\u0442\u0430","square inch":"1#{n} \u043a\u0432. \u0434\u044e\u0439\u043c|few#{n} \u043a\u0432. \u0434\u044e\u0439\u043c.|many#{n} \u043a\u0432. \u0434\u044e\u0439\u043c.|#{n} \u043a\u0432. \u0434\u044e\u0439\u043c.","square km":"1#{n} \u043a\u043c\u00b2|few#{n} \u043a\u043c\u00b2|many#{n} \u043a\u043c\u00b2|#{n} \u043a\u043c\u00b2",
"square meter":"1#{n} \u043c\u00b2|few#{n} \u043c\u00b2|many#{n} \u043c\u00b2|#{n} \u043c\u00b2","square mile":"1#{n} \u043a\u0432. \u043c\u0438\u043b\u044f|few#{n} \u043a\u0432. \u043c\u0438\u043b\u0438|many#{n} \u043a\u0432. \u043c\u0438\u043b\u044c|#{n} \u043a\u0432. \u043c\u0438\u043b\u0438","square yard":"1#{n} \u043a\u0432. \u044f\u0440\u0434|few#{n} \u043a\u0432. \u044f\u0440\u0434\u0430|many#{n} \u043a\u0432. \u044f\u0440\u0434\u043e\u0432|#{n} \u043a\u0432. \u044f\u0440\u0434\u0430","liter-per-kilometer":"1#{n} \u043b/\u043a\u043c|few#{n} \u043b/\u043a\u043c|many#{n} \u043b/\u043a\u043c|#{n} \u043b/\u043a\u043c",
mpg:"1#{n} \u043c\u0438\u043b\u044f/\u0433\u0430\u043b\u043b.|few#{n} \u043c\u0438\u043b\u0438/\u0433\u0430\u043b\u043b.|many#{n} \u043c\u0438\u043b\u044c/\u0433\u0430\u043b\u043b.|#{n} \u043c\u0438\u043b\u0438/\u0433\u0430\u043b\u043b.",bit:"1#{n} \u0431\u0438\u0442|few#{n} \u0431\u0438\u0442\u0430|many#{n} \u0431\u0438\u0442|#{n} \u0431\u0438\u0442\u0430","byte":"1#{n} \u0411|few#{n} \u0411|many#{n} \u0411|#{n} \u0411",gigabit:"1#{n} \u0413\u0431\u0438\u0442|few#{n} \u0413\u0431\u0438\u0442|many#{n} \u0413\u0431\u0438\u0442|#{n} \u0413\u0431\u0438\u0442",
gigabyte:"1#{n} \u0413\u0411|few#{n} \u0413\u0411|many#{n} \u0413\u0411|#{n} \u0413\u0411",kilobit:"1#{n} \u043a\u0431\u0438\u0442|few#{n} \u043a\u0431\u0438\u0442|many#{n} \u043a\u0431\u0438\u0442|#{n} \u043a\u0431\u0438\u0442",kilobyte:"1#{n} \u043a\u0411|few#{n} \u043a\u0411|many#{n} \u043a\u0411|#{n} \u043a\u0411",megabit:"1#{n} \u041c\u0431\u0438\u0442|few#{n} \u041c\u0431\u0438\u0442|many#{n} \u041c\u0431\u0438\u0442|#{n} \u041c\u0431\u0438\u0442",megabyte:"1#{n} \u041c\u0411|few#{n} \u041c\u0411|many#{n} \u041c\u0411|#{n} \u041c\u0411",
terabit:"1#{n} \u0422\u0431\u0438\u0442|few#{n} \u0422\u0431\u0438\u0442|many#{n} \u0422\u0431\u0438\u0442|#{n} \u0422\u0431\u0438\u0442",terabyte:"1#{n} \u0422\u0411|few#{n} \u0422\u0411|many#{n} \u0422\u0411|#{n} \u0422\u0411",day:"1#{n} \u0434\u043d|few#{n} \u0434\u043d|many#{n} \u0434\u043d|#{n} \u0434\u043d",hour:"1#{n} \u0447|few#{n} \u0447|many#{n} \u0447|#{n} \u0447",microsecond:"1#{n} \u043c\u043a\u0441|few#{n} \u043c\u043a\u0441|many#{n} \u043c\u043a\u0441|#{n} \u043c\u043a\u0441",millisecond:"1#{n} \u043c\u0441|few#{n} \u043c\u0441|many#{n} \u043c\u0441|#{n} \u043c\u0441",
minute:"1#{n} \u043c\u0438\u043d|few#{n} \u043c\u0438\u043d|many#{n} \u043c\u0438\u043d|#{n} \u043c\u0438\u043d",month:"1#{n} \u043c\u0435\u0441|few#{n} \u043c\u0435\u0441|many#{n} \u043c\u0435\u0441|#{n} \u043c\u0435\u0441",nanosecond:"1#{n} \u043d\u0441|few#{n} \u043d\u0441|many#{n} \u043d\u0441|#{n} \u043d\u0441",second:"1#{n} \u0441\u0435\u043a|few#{n} \u0441\u0435\u043a|many#{n} \u0441\u0435\u043a|#{n} \u0441\u0435\u043a",week:"1#{n} \u043d\u0435\u0434|few#{n} \u043d\u0435\u0434|many#{n} \u043d\u0435\u0434|#{n} \u043d\u0435\u0434",
year:"1#{n} \u0433.|few#{n} \u0433.|many#{n} \u043b.|#{n} \u0433.",ampere:"1#{n} \u0410|few#{n} \u0410|many#{n} \u0410|#{n} \u0410",milliampere:"1#{n} \u043c\u0410|few#{n} \u043c\u0410|many#{n} \u043c\u0410|#{n} \u043c\u0410",ohm:"1#{n} \u041e\u043c|few#{n} \u041e\u043c|many#{n} \u041e\u043c|#{n} \u041e\u043c",volt:"1#{n} \u0412|few#{n} \u0412|many#{n} \u0412|#{n} \u0412",calorie:"1#{n} \u043a\u0430\u043b|few#{n} \u043a\u0430\u043b|many#{n} \u043a\u0430\u043b|#{n} \u043a\u0430\u043b",joule:"1#{n} \u0414\u0436|few#{n} \u0414\u0436|many#{n} \u0414\u0436|#{n} \u0414\u0436",
kilocalorie:"1#{n} \u043a\u043a\u0430\u043b|few#{n} \u043a\u043a\u0430\u043b|many#{n} \u043a\u043a\u0430\u043b|#{n} \u043a\u043a\u0430\u043b",kilojoule:"1#{n} \u043a\u0414\u0436|few#{n} \u043a\u0414\u0436|many#{n} \u043a\u0414\u0436|#{n} \u043a\u0414\u0436","kilowatt hour":"1#{n} \u043a\u0412\u0442\u22c5\u0447|few#{n} \u043a\u0412\u0442\u22c5\u0447|many#{n} \u043a\u0412\u0442\u22c5\u0447|#{n} \u043a\u0412\u0442\u22c5\u0447",gigahertz:"1#{n} \u0413\u0413\u0446|few#{n} \u0413\u0413\u0446|many#{n} \u0413\u0413\u0446|#{n} \u0413\u0413\u0446",
hertz:"1#{n} \u0413\u0446|few#{n} \u0413\u0446|many#{n} \u0413\u0446|#{n} \u0413\u0446",kilohertz:"1#{n} \u043a\u0413\u0446|few#{n} \u043a\u0413\u0446|many#{n} \u043a\u0413\u0446|#{n} \u043a\u0413\u0446",megahertz:"1#{n} \u041c\u0413\u0446|few#{n} \u041c\u0413\u0446|many#{n} \u041c\u0413\u0446|#{n} \u041c\u0413\u0446","astronomical-unit":"1#{n} \u0430.\u00a0\u0435.|few#{n} \u0430.\u00a0\u0435.|many#{n} \u0430.\u00a0\u0435.|#{n} \u0430.\u00a0\u0435.",centimeter:"1#{n} \u0441\u043c|few#{n} \u0441\u043c|many#{n} \u0441\u043c|#{n} \u0441\u043c",
decimeter:"1#{n} \u0434\u043c|few#{n} \u0434\u043c|many#{n} \u0434\u043c|#{n} \u0434\u043c",fathom:"#{n} fm",foot:"1#{n} \u0444\u0443\u0442|few#{n} \u0444\u0443\u0442\u0430|many#{n} \u0444\u0443\u0442\u043e\u0432|#{n} \u0444\u0443\u0442\u0430",furlong:"#{n} fur",inch:"1#{n} \u0434\u044e\u0439\u043c|few#{n} \u0434\u044e\u0439\u043c.|many#{n} \u0434\u044e\u0439\u043c.|#{n} \u0434\u044e\u0439\u043c.",kilometer:"1#{n} \u043a\u043c|few#{n} \u043a\u043c|many#{n} \u043a\u043c|#{n} \u043a\u043c","light-year":"1#{n} \u0441\u0432. \u0433.|few#{n} \u0441\u0432. \u0433.|many#{n} \u0441\u0432. \u043b.|#{n} \u0441\u0432. \u0433.",
meter:"1#{n} \u043c|few#{n} \u043c|many#{n} \u043c|#{n} \u043c",micrometer:"1#{n} \u043c\u043a\u043c|few#{n} \u043c\u043a\u043c|many#{n} \u043c\u043a\u043c|#{n} \u043c\u043a\u043c",mile:"1#{n} \u043c\u0438\u043b\u044f|few#{n} \u043c\u0438\u043b\u0438|many#{n} \u043c\u0438\u043b\u044c|#{n} \u043c\u0438\u043b\u0438",millimeter:"1#{n} \u043c\u043c|few#{n} \u043c\u043c|many#{n} \u043c\u043c|#{n} \u043c\u043c",nanometer:"1#{n} \u043d\u043c|few#{n} \u043d\u043c|many#{n} \u043d\u043c|#{n} \u043d\u043c",
nauticalmile:"1#{n} \u043c\u043e\u0440. \u043c\u0438\u043b\u044f|few#{n} \u043c\u043e\u0440. \u043c\u0438\u043b\u0438|many#{n} \u043c\u043e\u0440. \u043c\u0438\u043b\u044c|#{n} \u043c\u043e\u0440. \u043c\u0438\u043b\u0438",parsec:"1#{n} \u043f\u043a|few#{n} \u043f\u043a|many#{n} \u043f\u043a|#{n} \u043f\u043a",picometer:"1#{n} \u043f\u043c|few#{n} \u043f\u043c|many#{n} \u043f\u043c|#{n} \u043f\u043c",yard:"1#{n} \u044f\u0440\u0434|few#{n} \u044f\u0440\u0434\u0430|many#{n} \u044f\u0440\u0434\u043e\u0432|#{n} \u044f\u0440\u0434\u0430",
lux:"1#{n} \u043b\u043a|few#{n} \u043b\u043a|many#{n} \u043b\u043a|#{n} \u043b\u043a",carat:"1#{n} \u043a\u0430\u0440|few#{n} \u043a\u0430\u0440|many#{n} \u043a\u0430\u0440|#{n} \u043a\u0430\u0440",gram:"1#{n} \u0433|few#{n} \u0433|many#{n} \u0433|#{n} \u0433",kilogram:"1#{n} \u043a\u0433|few#{n} \u043a\u0433|many#{n} \u043a\u0433|#{n} \u043a\u0433","metric ton":"1#{n} \u0442|few#{n} \u0442|many#{n} \u0442|#{n} \u0442",microgram:"1#{n} \u043c\u043a\u0433|few#{n} \u043c\u043a\u0433|many#{n} \u043c\u043a\u0433|#{n} \u043c\u043a\u0433",
milligram:"1#{n} \u043c\u0433|few#{n} \u043c\u0433|many#{n} \u043c\u0433|#{n} \u043c\u0433",ounce:"1#{n} \u0443\u043d\u0446.|few#{n} \u0443\u043d\u0446.|many#{n} \u0443\u043d\u0446.|#{n} \u0443\u043d\u0446.","ounce-troy":"1#{n} \u0442\u0440. \u0443\u043d\u0446.|few#{n} \u0442\u0440. \u0443\u043d\u0446.|many#{n} \u0442\u0440. \u0443\u043d\u0446.|#{n} \u0442\u0440. \u0443\u043d\u0446.",pound:"1#{n} \u0444\u0443\u043d\u0442.|few#{n} \u0444\u0443\u043d\u0442.|many#{n} \u0444\u0443\u043d\u0442.|#{n} \u0444\u0443\u043d\u0442.",
stone:"#{n} st","long ton":"1#{n} \u0430\u043c\u0435\u0440. \u0442|few#{n} \u0430\u043c\u0435\u0440. \u0442|many#{n} \u0430\u043c\u0435\u0440. \u0442|#{n} \u0430\u043c\u0435\u0440. \u0442",gigawatt:"1#{n} \u0413\u0412\u0442|few#{n} \u0413\u0412\u0442|many#{n} \u0413\u0412\u0442|#{n} \u0413\u0412\u0442",horsepower:"1#{n} \u043b.\u0441.|few#{n} \u043b.\u0441.|many#{n} \u043b.\u0441.|#{n} \u043b.\u0441.",kilowatt:"1#{n} \u043a\u0412\u0442|few#{n} \u043a\u0412\u0442|many#{n} \u043a\u0412\u0442|#{n} \u043a\u0412\u0442",
megawatt:"1#{n} \u041c\u0412\u0442|few#{n} \u041c\u0412\u0442|many#{n} \u041c\u0412\u0442|#{n} \u041c\u0412\u0442",milliwatt:"1#{n} \u043c\u0412\u0442|few#{n} \u043c\u0412\u0442|many#{n} \u043c\u0412\u0442|#{n} \u043c\u0412\u0442",watt:"1#{n} \u0412\u0442|few#{n} \u0412\u0442|many#{n} \u0412\u0442|#{n} \u0412\u0442",hectopascal:"1#{n} \u0433\u041f\u0430|few#{n} \u0433\u041f\u0430|many#{n} \u0433\u041f\u0430|#{n} \u0433\u041f\u0430","inch-hg":"1#{n} \u0434. \u0440\u0442. \u0441\u0442.|few#{n} \u0434. \u0440\u0442. \u0441\u0442.|many#{n} \u0434. \u0440\u0442. \u0441\u0442.|#{n} \u0434. \u0440\u0442. \u0441\u0442.",
millibar:"1#{n} \u043c\u0431\u0430\u0440|few#{n} \u043c\u0431\u0430\u0440|many#{n} \u043c\u0431\u0430\u0440|#{n} \u043c\u0431\u0430\u0440","millimeter-of-mercury":"1#{n} \u043c\u043c \u0440\u0442. \u0441\u0442.|few#{n} \u043c\u043c \u0440\u0442. \u0441\u0442.|many#{n} \u043c\u043c \u0440\u0442. \u0441\u0442.|#{n} \u043c\u043c \u0440\u0442. \u0441\u0442.","pound-per-square-inch":"1#{n} \u0444./\u043a\u0432. \u0434.|few#{n} \u0444./\u043a\u0432. \u0434.|many#{n} \u0444./\u043a\u0432. \u0434.|#{n} \u0444./\u043a\u0432. \u0434.",
karat:"1#{n} \u043a\u0430\u0440|few#{n} \u043a\u0430\u0440|many#{n} \u043a\u0430\u0440|#{n} \u043a\u0430\u0440","kilometer/hour":"1#{n} \u043a\u043c/\u0447|few#{n} \u043a\u043c/\u0447|many#{n} \u043a\u043c/\u0447|#{n} \u043a\u043c/\u0447","meters/second":"1#{n} \u043c/\u0441|few#{n} \u043c/\u0441|many#{n} \u043c/\u0441|#{n} \u043c/\u0441","miles/hour":"1#{n} \u043c\u0438\u043b\u044c/\u0447\u0430\u0441|few#{n} \u043c\u0438\u043b\u0438/\u0447\u0430\u0441|many#{n} \u043c\u0438\u043b\u044c/\u0447\u0430\u0441|#{n} \u043c\u0438\u043b\u0438/\u0447\u0430\u0441",
celsius:"1#{n} \u00b0C|few#{n} \u00b0C|many#{n} \u00b0C|#{n} \u00b0C",fahrenheit:"1#{n}\u00b0F|few#{n}\u00b0F|many#{n}\u00b0F|#{n}\u00b0F",kelvin:"1#{n} K|few#{n} K|many#{n} K|#{n} K","acre-foot":"1#{n} \u0430\u043a\u0440\u043e\u0444\u0443\u0442|few#{n} \u0430\u043a\u0440\u043e\u0444\u0443\u0442\u0430|many#{n} \u0430\u043a\u0440\u043e\u0444\u0443\u0442\u043e\u0432|#{n} \u0430\u043a\u0440\u043e\u0444\u0443\u0442\u0430",bushel:"#{n} bu",centiliter:"1#{n} \u0441\u043b|few#{n} \u0441\u043b|many#{n} \u0441\u043b|#{n} \u0441\u043b",
"cubic-centimeter":"1#{n} \u0441\u043c\u00b3|few#{n} \u0441\u043c\u00b3|many#{n} \u0441\u043c\u00b3|#{n} \u0441\u043c\u00b3","cubic foot":"1#{n} \u043a\u0443\u0431. \u0444\u0443\u0442|few#{n} \u043a\u0443\u0431. \u0444\u0443\u0442\u0430|many#{n} \u043a\u0443\u0431. \u0444\u0443\u0442\u043e\u0432|#{n} \u043a\u0443\u0431. \u0444\u0443\u0442\u0430","cubic inch":"1#{n} \u043a\u0443\u0431. \u0434\u044e\u0439\u043c|few#{n} \u043a\u0443\u0431. \u0434\u044e\u0439\u043c\u0430|many#{n} \u043a\u0443\u0431. \u0434\u044e\u0439\u043c\u043e\u0432|#{n} \u043a\u0443\u0431. \u0434\u044e\u0439\u043c\u0430",
"cubic-kilometer":"1#{n} \u043a\u043c\u00b3|few#{n} \u043a\u043c\u00b3|many#{n} \u043a\u043c\u00b3|#{n} \u043a\u043c\u00b3","cubic meter":"1#{n} \u043c\u00b3|few#{n} \u043c\u00b3|many#{n} \u043c\u00b3|#{n} \u043c\u00b3","cubic-mile":"1#{n} \u043a\u0443\u0431. \u043c\u0438\u043b\u044f|few#{n} \u043a\u0443\u0431. \u043c\u0438\u043b\u0438|many#{n} \u043a\u0443\u0431. \u043c\u0438\u043b\u0438|#{n} \u043a\u0443\u0431. \u043c\u0438\u043b\u0438","cubic-yard":"1#{n} \u043a\u0443\u0431. \u044f\u0440\u0434|few#{n} \u043a\u0443\u0431. \u044f\u0440\u0434\u0430|many#{n} \u043a\u0443\u0431. \u044f\u0440\u0434\u043e\u0432|#{n} \u043a\u0443\u0431. \u044f\u0440\u0434\u0430",
cup:"1#{n} \u0447\u0430\u0448.|few#{n} \u0447\u0430\u0448.|many#{n} \u0447\u0430\u0448.|#{n} \u0447\u0430\u0448.",deciliter:"1#{n} \u0434\u043b|few#{n} \u0434\u043b|many#{n} \u0434\u043b|#{n} \u0434\u043b","us ounce":"1#{n} \u0436\u0438\u0434\u043a. \u0443\u043d\u0446.|few#{n} \u0436\u0438\u0434\u043a. \u0443\u043d\u0446.|many#{n} \u0436\u0438\u0434\u043a. \u0443\u043d\u0446.|#{n} \u0436\u0438\u0434\u043a. \u0443\u043d\u0446.",gallon:"1#{n} \u0433\u0430\u043b.|few#{n} \u0433\u0430\u043b.|many#{n} \u0433\u0430\u043b.|#{n} \u0433\u0430\u043b.",
hectoliter:"1#{n} \u0433\u043b|few#{n} \u0433\u043b|many#{n} \u0433\u043b|#{n} \u0433\u043b",liter:"1#{n} \u043b|few#{n} \u043b|many#{n} \u043b|#{n} \u043b",megaliter:"1#{n} \u041c\u043b|few#{n} \u041c\u043b|many#{n} \u041c\u043b|#{n} \u041c\u043b",milliliter:"1#{n} \u043c\u043b|few#{n} \u043c\u043b|many#{n} \u043c\u043b|#{n} \u043c\u043b",pint:"1#{n} \u043f\u0438\u043d\u0442.|few#{n} \u043f\u0438\u043d\u0442.|many#{n} \u043f\u0438\u043d\u0442.|#{n} \u043f\u0438\u043d\u0442.",quart:"1#{n} \u043a\u0432\u0430\u0440\u0442.|few#{n} \u043a\u0432\u0430\u0440\u0442.|many#{n} \u043a\u0432\u0430\u0440\u0442.|#{n} \u043a\u0432\u0430\u0440\u0442.",
tbsp:"1#{n} \u0441\u0442. \u043b.|few#{n} \u0441\u0442. \u043b.|many#{n} \u0441\u0442. \u043b.|#{n} \u0441\u0442. \u043b.",tsp:"1#{n} \u0447.\u043b.|few#{n} \u0447.\u043b.|many#{n} \u0447.\u043b.|#{n} \u0447.\u043b.",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",
gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp",
"imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_tr={unitfmt:{"long":{"g-force":"1#{n} g kuvveti|#{n} g kuvveti","meter-per-second-squared":"1#{n} metre/saniye\u00b2|#{n} metre/saniye\u00b2","arc-minute":"1#{n} a\u00e7\u0131sal dakika|#{n} a\u00e7\u0131sal dakika","arc-second":"1#{n} a\u00e7\u0131sal saniye|#{n} a\u00e7\u0131sal saniye",degree:"1#{n} derece|#{n} derece",radian:"1#{n} radyan|#{n} radyan",acre:"1#{n} akre|#{n} akre",hectare:"1#{n} hektar|#{n} hektar","square centimeter":"1#{n} santimetrekare|#{n} santimetrekare",
"square foot":"1#{n} fit kare|#{n} fit kare","square inch":"1#{n} in\u00e7 kare|#{n} in\u00e7 kare","square km":"1#{n} kilometrekare|#{n} kilometrekare","square meter":"1#{n} metrekare|#{n} metrekare","square mile":"1#{n} mil kare|#{n} mil kare","square yard":"1#{n} yarda kare|#{n} yarda kare","liter-per-kilometer":"1#{n} litre/kilometre|#{n} litre/kilometre",mpg:"1#{n} mil/galon|#{n} mil/galon",bit:"1#{n} bit|#{n} bit","byte":"1#{n} bayt|#{n} bayt",gigabit:"1#{n} gigabit|#{n} gigabit",gigabyte:"1#{n} gigabayt|#{n} gigabayt",
kilobit:"1#{n} kilobit|#{n} kilobit",kilobyte:"1#{n} kilobayt|#{n} kilobyte",megabit:"1#{n} megabit|#{n} megabit",megabyte:"1#{n} megabayt|#{n} megabayt",terabit:"1#{n} terabit|#{n} terabit",terabyte:"1#{n} terabayt|#{n} terabayt",day:"1#{n} g\u00fcn|#{n} g\u00fcn",hour:"1#{n} saat|#{n} saat",microsecond:"1#{n} mikrosaniye|#{n} mikrosaniye",millisecond:"1#{n} milisaniye|#{n} milisaniye",minute:"1#{n} dakika|#{n} dakika",month:"1#{n} ay|#{n} ay",nanosecond:"1#{n} nanosaniye|#{n} nanosaniye",second:"1#{n} saniye|#{n} saniye",
week:"1#{n} hafta|#{n} hafta",year:"1#{n} y\u0131l|#{n} y\u0131l",ampere:"1#{n} amper|#{n} amper",milliampere:"1#{n} miliamper|#{n} miliamper",ohm:"1#{n} ohm|#{n} ohm",volt:"1#{n} volt|#{n} volt",calorie:"1#{n} kilokalori|#{n} kilokalori",joule:"1#{n} jul|#{n} jul",kilocalorie:"1#{n} kilokalori|#{n} kilokalori",kilojoule:"1#{n} kilojul|#{n} kilojul","kilowatt hour":"1#{n} kilovatsaat|#{n} kilovatsaat",gigahertz:"1#{n} gigahertz|#{n} gigahertz",hertz:"1#{n} hertz|#{n} hertz",kilohertz:"1#{n} kilohertz|#{n} kilohertz",
megahertz:"1#{n} megahertz|#{n} megahertz","astronomical-unit":"1#{n} astronomik birim|#{n} astronomik birim",centimeter:"1#{n} santimetre|#{n} santimetre",decimeter:"1#{n} desimetre|#{n} desimetre",fathom:"1#{n} fathom|#{n} fathom",foot:"1#{n} fit|#{n} fit",furlong:"1#{n} furlong|#{n} furlong",inch:"1#{n} in\u00e7|#{n} in\u00e7",kilometer:"1#{n} kilometre|#{n} kilometre","light-year":"1#{n} \u0131\u015f\u0131k y\u0131l\u0131|#{n} \u0131\u015f\u0131k y\u0131l\u0131",meter:"1#{n} metre|#{n} metre",
micrometer:"1#{n} mikrometre|#{n} mikrometre",mile:"1#{n} mil|#{n} mil",millimeter:"1#{n} milimetre|#{n} milimetre",nanometer:"1#{n} nanometre|#{n} nanometre",nauticalmile:"1#{n} deniz mili|#{n} deniz mili",parsec:"1#{n} parsek|#{n} parsek",picometer:"1#{n} pikometre|#{n} pikometre",yard:"1#{n} yarda|#{n} yarda",lux:"1#{n} l\u00fcks|#{n} l\u00fcks",carat:"1#{n} karat|#{n} karat",gram:"1#{n} gram|#{n} gram",kilogram:"1#{n} kilogram|#{n} kilogram","metric ton":"1#{n} ton|#{n} ton",microgram:"1#{n} mikrogram|#{n} mikrogram",
milligram:"1#{n} miligram|#{n} miligram",ounce:"1#{n} ons|#{n} ons","ounce-troy":"1#{n} troy ons|#{n} troy ons",pound:"1#{n} libre|#{n} libre",stone:"1#{n} stone|#{n} stone","long ton":"1#{n} Amerikan tonu|#{n} Amerikan tonu",gigawatt:"1#{n} gigavat|#{n} gigavat",horsepower:"1#{n} beygir g\u00fcc\u00fc|#{n} beygir g\u00fcc\u00fc",kilowatt:"1#{n} kilovat|#{n} kilovat",megawatt:"1#{n} megavat|#{n} megavat",milliwatt:"1#{n} milivat|#{n} milivat",watt:"1#{n} vat|#{n} vat",hectopascal:"1#{n} hektopaskal|#{n} hektopaskal",
"inch-hg":"1#{n} in\u00e7 c\u0131va|#{n} in\u00e7 c\u0131va",millibar:"1#{n} milibar|#{n} milibar","millimeter-of-mercury":"1#{n} milimetre c\u0131va|#{n} milimetre c\u0131va","pound-per-square-inch":"1#{n} libre/in\u00e7 kare|#{n} libre/in\u00e7 kare",karat:"1#{n} ayar|#{n} ayar","kilometer/hour":"1#{n} kilometre/saat|#{n} kilometre/saat","meters/second":"1#{n} metre/saniye|#{n} metre/saniye","miles/hour":"1#{n} mil/saat|#{n} mil/saat",celsius:"1#{n} santigrat derece|#{n} santigrat derece",fahrenheit:"1#{n} fahrenhayt derece|#{n} fahrenhayt derece",
kelvin:"1#{n} kelvin|#{n} kelvin","acre-foot":"1#{n} akre fit|#{n} akre fit",bushel:"1#{n} bu\u015fel|#{n} bu\u015fel",centiliter:"1#{n} santilitre|#{n} santilitre","cubic-centimeter":"1#{n} santimetrek\u00fcp|#{n} santimetrek\u00fcp","cubic foot":"1#{n} fit k\u00fcp|#{n} fit k\u00fcp","cubic inch":"1#{n} in\u00e7 k\u00fcp|#{n} in\u00e7 k\u00fcp","cubic-kilometer":"1#{n} kilometre k\u00fcp|#{n} kilometre k\u00fcp","cubic meter":"1#{n} metrek\u00fcp|#{n} metrek\u00fcp","cubic-mile":"1#{n} mil k\u00fcp|#{n} mil k\u00fcp",
"cubic-yard":"1#{n} yarda k\u00fcp|#{n} yarda k\u00fcp",cup:"1#{n} su barda\u011f\u0131|#{n} su barda\u011f\u0131",deciliter:"1#{n} desilitre|#{n} desilitre","us ounce":"1#{n} s\u0131v\u0131 ons|#{n} s\u0131v\u0131 ons",gallon:"1#{n} galon|#{n} galon",hectoliter:"1#{n} hektolitre|#{n} hektolitre",liter:"1#{n} litre|#{n} litre",megaliter:"1#{n} megalitre|#{n} megalitre",milliliter:"1#{n} mililitre|#{n} mililitre",pint:"1#{n} pint|#{n} pint",quart:"1#{n} quart|#{n} quart",tbsp:"1#{n} yemek ka\u015f\u0131\u011f\u0131|#{n} yemek ka\u015f\u0131\u011f\u0131",
tsp:"1#{n} \u00e7ay ka\u015f\u0131\u011f\u0131|#{n} \u00e7ay ka\u015f\u0131\u011f\u0131",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",
gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second",
"miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},
"short":{"g-force":"1#{n} G|#{n} G","meter-per-second-squared":"1#{n} m/sn\u00b2|#{n} m/sn\u00b2","arc-minute":"1#{n} dk.|#{n} dk.","arc-second":"1#{n} sn.|#{n} sn.",degree:"1#{n}\u00b0|#{n}\u00b0",radian:"1#{n} rad|#{n} rad",acre:"1#{n} ac|#{n} ac",hectare:"1#{n} ha|#{n} ha","square centimeter":"1#{n} cm\u00b2|#{n} cm\u00b2","square foot":"1#{n} ft\u00b2|#{n} ft\u00b2","square inch":"1#{n} in\u00b2|#{n} in\u00b2","square km":"1#{n} km\u00b2|#{n} km\u00b2","square meter":"1#{n} m\u00b2|#{n} m\u00b2",
"square mile":"1#{n} mi\u00b2|#{n} mi\u00b2","square yard":"1#{n} yd\u00b2|#{n} yd\u00b2","liter-per-kilometer":"1#{n} l/km|#{n} l/km",mpg:"1#{n} mpg|#{n} mpg",bit:"1#{n} bit|#{n} bit","byte":"1#{n} bayt|#{n} bayt",gigabit:"1#{n} Gb|#{n} Gb",gigabyte:"1#{n} GB|#{n} GB",kilobit:"1#{n} kb|#{n} kb",kilobyte:"1#{n} kB|#{n} kB",megabit:"1#{n} Mb|#{n} Mb",megabyte:"1#{n} MB|#{n} MB",terabit:"1#{n} Tb|#{n} Tb",terabyte:"1#{n} TB|#{n} TB",day:"1#{n} g\u00fcn|#{n} g\u00fcn",hour:"1#{n} sa.|#{n} sa.",microsecond:"1#{n} \u03bcsn|#{n} \u03bcsn",
millisecond:"1#{n} msn|#{n} msn",minute:"1#{n} dk.|#{n} dk.",month:"1#{n} ay|#{n} ay",nanosecond:"1#{n} nsn|#{n} nsn",second:"1#{n} sn.|#{n} sn.",week:"1#{n} hf.|#{n} hf.",year:"1#{n} y\u0131l|#{n} y\u0131l",ampere:"1#{n} A|#{n} A",milliampere:"1#{n} mA|#{n} mA",ohm:"1#{n} \u03a9|#{n} \u03a9",volt:"1#{n} V|#{n} V",calorie:"1#{n} kcal|#{n} kcal",joule:"1#{n} J|#{n} J",kilocalorie:"1#{n} kcal|#{n} kcal",kilojoule:"1#{n} kJ|#{n} kJ","kilowatt hour":"1#{n} kWh|#{n} kWh",gigahertz:"1#{n} GHz|#{n} GHz",
hertz:"1#{n} Hz|#{n} Hz",kilohertz:"1#{n} kHz|#{n} kHz",megahertz:"1#{n} MHz|#{n} MHz","astronomical-unit":"1#{n} AU|#{n} AU",centimeter:"1#{n} cm|#{n} cm",decimeter:"1#{n} dm|#{n} dm",fathom:"1#{n} fm|#{n} fm",foot:"1#{n} fit|#{n} fit",furlong:"1#{n} fur|#{n} fur",inch:"1#{n} in\u00e7|#{n} in\u00e7",kilometer:"1#{n} km|#{n} km","light-year":"1#{n} IY|#{n} IY",meter:"1#{n} m|#{n} m",micrometer:"1#{n} \u00b5m|#{n} \u00b5m",mile:"1#{n} mil|#{n} mil",millimeter:"1#{n} mm|#{n} mm",nanometer:"1#{n} nm|#{n} nm",
nauticalmile:"1#{n} nmi|#{n} nmi",parsec:"1#{n} pc|#{n} pc",picometer:"1#{n} pm|#{n} pm",yard:"1#{n} yd|#{n} yd",lux:"1#{n} l\u00fcks|#{n} l\u00fcks",carat:"1#{n} ct|#{n} ct",gram:"1#{n} g|#{n} g",kilogram:"1#{n} kg|#{n} kg","metric ton":"1#{n} t|#{n} t",microgram:"1#{n} \u00b5g|#{n} \u00b5g",milligram:"1#{n} mg|#{n} mg",ounce:"1#{n} oz|#{n} oz","ounce-troy":"1#{n} oz t|#{n} oz t",pound:"1#{n} lb|#{n} lb",stone:"1#{n} st|#{n} st","long ton":"1#{n} k\u0131sa ton|#{n} k\u0131sa ton",gigawatt:"1#{n} GW|#{n} GW",
horsepower:"1#{n} bg|#{n} bg",kilowatt:"1#{n} kW|#{n} kW",megawatt:"1#{n} MW|#{n} MW",milliwatt:"1#{n} mW|#{n} mW",watt:"1#{n} W|#{n} W",hectopascal:"1#{n} hPa|#{n} hPa","inch-hg":"1#{n} inHg|#{n} inHg",millibar:"1#{n} mbar|#{n} mbar","millimeter-of-mercury":"1#{n} mm Hg|#{n} mm Hg","pound-per-square-inch":"1#{n} lb/in\u00b2|#{n} lb/in\u00b2",karat:"1#{n} ayar|#{n} ayar","kilometer/hour":"1#{n} km/sa|#{n} km/sa","meters/second":"1#{n} m/sn|#{n} m/sn","miles/hour":"1#{n} mil/sa|#{n} mil/sa",celsius:"1#{n}\u00b0C|#{n}\u00b0C",
fahrenheit:"1#{n}\u00b0F|#{n}\u00b0F",kelvin:"1#{n}K|#{n}K","acre-foot":"1#{n} akre fit|#{n} akre fit",bushel:"1#{n} bu|#{n} bu",centiliter:"1#{n} cl|#{n} cl","cubic-centimeter":"1#{n} cm\u00b3|#{n} cm\u00b3","cubic foot":"1#{n} fit\u00b3|#{n} fit\u00b3","cubic inch":"1#{n} in\u00e7\u00b3|#{n} in\u00e7\u00b3","cubic-kilometer":"1#{n} km\u00b3|#{n} km\u00b3","cubic meter":"1#{n} m\u00b3|#{n} m\u00b3","cubic-mile":"1#{n} mil\u00b3|#{n} mil\u00b3","cubic-yard":"1#{n} yarda\u00b3|#{n} yarda\u00b3",cup:"1#{n} sb|#{n} sb",
deciliter:"1#{n} dl|#{n} dl","us ounce":"1#{n} s\u0131v\u0131 ons|#{n} s\u0131v\u0131 ons",gallon:"1#{n} galon|#{n} galon",hectoliter:"1#{n} hl|#{n} hl",liter:"1#{n} l|#{n} l",megaliter:"1#{n} Ml|#{n} Ml",milliliter:"1#{n} ml|#{n} ml",pint:"1#{n} pint|#{n} pint",quart:"1#{n} quart|#{n} quart",tbsp:"1#{n} yk|#{n} yk",tsp:"1#{n} \u00e7k|#{n} \u00e7k",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",
BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",
decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp","imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_tr_TR={unitfmt:{"long":{"g-force":"1#{n} g kuvveti|#{n} g kuvveti","meter-per-second-squared":"1#{n} metre/saniye\u00b2|#{n} metre/saniye\u00b2","arc-minute":"1#{n} a\u00e7\u0131sal dakika|#{n} a\u00e7\u0131sal dakika","arc-second":"1#{n} a\u00e7\u0131sal saniye|#{n} a\u00e7\u0131sal saniye",degree:"1#{n} derece|#{n} derece",radian:"1#{n} radyan|#{n} radyan",acre:"1#{n} akre|#{n} akre",hectare:"1#{n} hektar|#{n} hektar","square centimeter":"1#{n} santimetrekare|#{n} santimetrekare",
"square foot":"1#{n} fit kare|#{n} fit kare","square inch":"1#{n} in\u00e7 kare|#{n} in\u00e7 kare","square km":"1#{n} kilometrekare|#{n} kilometrekare","square meter":"1#{n} metrekare|#{n} metrekare","square mile":"1#{n} mil kare|#{n} mil kare","square yard":"1#{n} yarda kare|#{n} yarda kare","liter-per-kilometer":"1#{n} litre/kilometre|#{n} litre/kilometre",mpg:"1#{n} mil/galon|#{n} mil/galon",bit:"1#{n} bit|#{n} bit","byte":"1#{n} bayt|#{n} bayt",gigabit:"1#{n} gigabit|#{n} gigabit",gigabyte:"1#{n} gigabayt|#{n} gigabayt",
kilobit:"1#{n} kilobit|#{n} kilobit",kilobyte:"1#{n} kilobayt|#{n} kilobyte",megabit:"1#{n} megabit|#{n} megabit",megabyte:"1#{n} megabayt|#{n} megabayt",terabit:"1#{n} terabit|#{n} terabit",terabyte:"1#{n} terabayt|#{n} terabayt",day:"1#{n} g\u00fcn|#{n} g\u00fcn",hour:"1#{n} saat|#{n} saat",microsecond:"1#{n} mikrosaniye|#{n} mikrosaniye",millisecond:"1#{n} milisaniye|#{n} milisaniye",minute:"1#{n} dakika|#{n} dakika",month:"1#{n} ay|#{n} ay",nanosecond:"1#{n} nanosaniye|#{n} nanosaniye",second:"1#{n} saniye|#{n} saniye",
week:"1#{n} hafta|#{n} hafta",year:"1#{n} y\u0131l|#{n} y\u0131l",ampere:"1#{n} amper|#{n} amper",milliampere:"1#{n} miliamper|#{n} miliamper",ohm:"1#{n} ohm|#{n} ohm",volt:"1#{n} volt|#{n} volt",calorie:"1#{n} kilokalori|#{n} kilokalori",joule:"1#{n} jul|#{n} jul",kilocalorie:"1#{n} kilokalori|#{n} kilokalori",kilojoule:"1#{n} kilojul|#{n} kilojul","kilowatt hour":"1#{n} kilovatsaat|#{n} kilovatsaat",gigahertz:"1#{n} gigahertz|#{n} gigahertz",hertz:"1#{n} hertz|#{n} hertz",kilohertz:"1#{n} kilohertz|#{n} kilohertz",
megahertz:"1#{n} megahertz|#{n} megahertz","astronomical-unit":"1#{n} astronomik birim|#{n} astronomik birim",centimeter:"1#{n} santimetre|#{n} santimetre",decimeter:"1#{n} desimetre|#{n} desimetre",fathom:"1#{n} fathom|#{n} fathom",foot:"1#{n} fit|#{n} fit",furlong:"1#{n} furlong|#{n} furlong",inch:"1#{n} in\u00e7|#{n} in\u00e7",kilometer:"1#{n} kilometre|#{n} kilometre","light-year":"1#{n} \u0131\u015f\u0131k y\u0131l\u0131|#{n} \u0131\u015f\u0131k y\u0131l\u0131",meter:"1#{n} metre|#{n} metre",
micrometer:"1#{n} mikrometre|#{n} mikrometre",mile:"1#{n} mil|#{n} mil",millimeter:"1#{n} milimetre|#{n} milimetre",nanometer:"1#{n} nanometre|#{n} nanometre",nauticalmile:"1#{n} deniz mili|#{n} deniz mili",parsec:"1#{n} parsek|#{n} parsek",picometer:"1#{n} pikometre|#{n} pikometre",yard:"1#{n} yarda|#{n} yarda",lux:"1#{n} l\u00fcks|#{n} l\u00fcks",carat:"1#{n} karat|#{n} karat",gram:"1#{n} gram|#{n} gram",kilogram:"1#{n} kilogram|#{n} kilogram","metric ton":"1#{n} ton|#{n} ton",microgram:"1#{n} mikrogram|#{n} mikrogram",
milligram:"1#{n} miligram|#{n} miligram",ounce:"1#{n} ons|#{n} ons","ounce-troy":"1#{n} troy ons|#{n} troy ons",pound:"1#{n} libre|#{n} libre",stone:"1#{n} stone|#{n} stone","long ton":"1#{n} Amerikan tonu|#{n} Amerikan tonu",gigawatt:"1#{n} gigavat|#{n} gigavat",horsepower:"1#{n} beygir g\u00fcc\u00fc|#{n} beygir g\u00fcc\u00fc",kilowatt:"1#{n} kilovat|#{n} kilovat",megawatt:"1#{n} megavat|#{n} megavat",milliwatt:"1#{n} milivat|#{n} milivat",watt:"1#{n} vat|#{n} vat",hectopascal:"1#{n} hektopaskal|#{n} hektopaskal",
"inch-hg":"1#{n} in\u00e7 c\u0131va|#{n} in\u00e7 c\u0131va",millibar:"1#{n} milibar|#{n} milibar","millimeter-of-mercury":"1#{n} milimetre c\u0131va|#{n} milimetre c\u0131va","pound-per-square-inch":"1#{n} libre/in\u00e7 kare|#{n} libre/in\u00e7 kare",karat:"1#{n} ayar|#{n} ayar","kilometer/hour":"1#{n} kilometre/saat|#{n} kilometre/saat","meters/second":"1#{n} metre/saniye|#{n} metre/saniye","miles/hour":"1#{n} mil/saat|#{n} mil/saat",celsius:"1#{n} santigrat derece|#{n} santigrat derece",fahrenheit:"1#{n} fahrenhayt derece|#{n} fahrenhayt derece",
kelvin:"1#{n} kelvin|#{n} kelvin","acre-foot":"1#{n} akre fit|#{n} akre fit",bushel:"1#{n} bu\u015fel|#{n} bu\u015fel",centiliter:"1#{n} santilitre|#{n} santilitre","cubic-centimeter":"1#{n} santimetrek\u00fcp|#{n} santimetrek\u00fcp","cubic foot":"1#{n} fit k\u00fcp|#{n} fit k\u00fcp","cubic inch":"1#{n} in\u00e7 k\u00fcp|#{n} in\u00e7 k\u00fcp","cubic-kilometer":"1#{n} kilometre k\u00fcp|#{n} kilometre k\u00fcp","cubic meter":"1#{n} metrek\u00fcp|#{n} metrek\u00fcp","cubic-mile":"1#{n} mil k\u00fcp|#{n} mil k\u00fcp",
"cubic-yard":"1#{n} yarda k\u00fcp|#{n} yarda k\u00fcp",cup:"1#{n} su barda\u011f\u0131|#{n} su barda\u011f\u0131",deciliter:"1#{n} desilitre|#{n} desilitre","us ounce":"1#{n} s\u0131v\u0131 ons|#{n} s\u0131v\u0131 ons",gallon:"1#{n} galon|#{n} galon",hectoliter:"1#{n} hektolitre|#{n} hektolitre",liter:"1#{n} litre|#{n} litre",megaliter:"1#{n} megalitre|#{n} megalitre",milliliter:"1#{n} mililitre|#{n} mililitre",pint:"1#{n} pint|#{n} pint",quart:"1#{n} quart|#{n} quart",tbsp:"1#{n} yemek ka\u015f\u0131\u011f\u0131|#{n} yemek ka\u015f\u0131\u011f\u0131",
tsp:"1#{n} \u00e7ay ka\u015f\u0131\u011f\u0131|#{n} \u00e7ay ka\u015f\u0131\u011f\u0131",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",
gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second",
"miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},
"short":{"g-force":"1#{n} G|#{n} G","meter-per-second-squared":"1#{n} m/sn\u00b2|#{n} m/sn\u00b2","arc-minute":"1#{n} dk.|#{n} dk.","arc-second":"1#{n} sn.|#{n} sn.",degree:"1#{n}\u00b0|#{n}\u00b0",radian:"1#{n} rad|#{n} rad",acre:"1#{n} ac|#{n} ac",hectare:"1#{n} ha|#{n} ha","square centimeter":"1#{n} cm\u00b2|#{n} cm\u00b2","square foot":"1#{n} ft\u00b2|#{n} ft\u00b2","square inch":"1#{n} in\u00b2|#{n} in\u00b2","square km":"1#{n} km\u00b2|#{n} km\u00b2","square meter":"1#{n} m\u00b2|#{n} m\u00b2",
"square mile":"1#{n} mi\u00b2|#{n} mi\u00b2","square yard":"1#{n} yd\u00b2|#{n} yd\u00b2","liter-per-kilometer":"1#{n} l/km|#{n} l/km",mpg:"1#{n} mpg|#{n} mpg",bit:"1#{n} bit|#{n} bit","byte":"1#{n} bayt|#{n} bayt",gigabit:"1#{n} Gb|#{n} Gb",gigabyte:"1#{n} GB|#{n} GB",kilobit:"1#{n} kb|#{n} kb",kilobyte:"1#{n} kB|#{n} kB",megabit:"1#{n} Mb|#{n} Mb",megabyte:"1#{n} MB|#{n} MB",terabit:"1#{n} Tb|#{n} Tb",terabyte:"1#{n} TB|#{n} TB",day:"1#{n} g\u00fcn|#{n} g\u00fcn",hour:"1#{n} sa.|#{n} sa.",microsecond:"1#{n} \u03bcsn|#{n} \u03bcsn",
millisecond:"1#{n} msn|#{n} msn",minute:"1#{n} dk.|#{n} dk.",month:"1#{n} ay|#{n} ay",nanosecond:"1#{n} nsn|#{n} nsn",second:"1#{n} sn.|#{n} sn.",week:"1#{n} hf.|#{n} hf.",year:"1#{n} y\u0131l|#{n} y\u0131l",ampere:"1#{n} A|#{n} A",milliampere:"1#{n} mA|#{n} mA",ohm:"1#{n} \u03a9|#{n} \u03a9",volt:"1#{n} V|#{n} V",calorie:"1#{n} kcal|#{n} kcal",joule:"1#{n} J|#{n} J",kilocalorie:"1#{n} kcal|#{n} kcal",kilojoule:"1#{n} kJ|#{n} kJ","kilowatt hour":"1#{n} kWh|#{n} kWh",gigahertz:"1#{n} GHz|#{n} GHz",
hertz:"1#{n} Hz|#{n} Hz",kilohertz:"1#{n} kHz|#{n} kHz",megahertz:"1#{n} MHz|#{n} MHz","astronomical-unit":"1#{n} AU|#{n} AU",centimeter:"1#{n} cm|#{n} cm",decimeter:"1#{n} dm|#{n} dm",fathom:"1#{n} fm|#{n} fm",foot:"1#{n} fit|#{n} fit",furlong:"1#{n} fur|#{n} fur",inch:"1#{n} in\u00e7|#{n} in\u00e7",kilometer:"1#{n} km|#{n} km","light-year":"1#{n} IY|#{n} IY",meter:"1#{n} m|#{n} m",micrometer:"1#{n} \u00b5m|#{n} \u00b5m",mile:"1#{n} mil|#{n} mil",millimeter:"1#{n} mm|#{n} mm",nanometer:"1#{n} nm|#{n} nm",
nauticalmile:"1#{n} nmi|#{n} nmi",parsec:"1#{n} pc|#{n} pc",picometer:"1#{n} pm|#{n} pm",yard:"1#{n} yd|#{n} yd",lux:"1#{n} l\u00fcks|#{n} l\u00fcks",carat:"1#{n} ct|#{n} ct",gram:"1#{n} g|#{n} g",kilogram:"1#{n} kg|#{n} kg","metric ton":"1#{n} t|#{n} t",microgram:"1#{n} \u00b5g|#{n} \u00b5g",milligram:"1#{n} mg|#{n} mg",ounce:"1#{n} oz|#{n} oz","ounce-troy":"1#{n} oz t|#{n} oz t",pound:"1#{n} lb|#{n} lb",stone:"1#{n} st|#{n} st","long ton":"1#{n} k\u0131sa ton|#{n} k\u0131sa ton",gigawatt:"1#{n} GW|#{n} GW",
horsepower:"1#{n} bg|#{n} bg",kilowatt:"1#{n} kW|#{n} kW",megawatt:"1#{n} MW|#{n} MW",milliwatt:"1#{n} mW|#{n} mW",watt:"1#{n} W|#{n} W",hectopascal:"1#{n} hPa|#{n} hPa","inch-hg":"1#{n} inHg|#{n} inHg",millibar:"1#{n} mbar|#{n} mbar","millimeter-of-mercury":"1#{n} mm Hg|#{n} mm Hg","pound-per-square-inch":"1#{n} lb/in\u00b2|#{n} lb/in\u00b2",karat:"1#{n} ayar|#{n} ayar","kilometer/hour":"1#{n} km/sa|#{n} km/sa","meters/second":"1#{n} m/sn|#{n} m/sn","miles/hour":"1#{n} mil/sa|#{n} mil/sa",celsius:"1#{n}\u00b0C|#{n}\u00b0C",
fahrenheit:"1#{n}\u00b0F|#{n}\u00b0F",kelvin:"1#{n}K|#{n}K","acre-foot":"1#{n} akre fit|#{n} akre fit",bushel:"1#{n} bu|#{n} bu",centiliter:"1#{n} cl|#{n} cl","cubic-centimeter":"1#{n} cm\u00b3|#{n} cm\u00b3","cubic foot":"1#{n} fit\u00b3|#{n} fit\u00b3","cubic inch":"1#{n} in\u00e7\u00b3|#{n} in\u00e7\u00b3","cubic-kilometer":"1#{n} km\u00b3|#{n} km\u00b3","cubic meter":"1#{n} m\u00b3|#{n} m\u00b3","cubic-mile":"1#{n} mil\u00b3|#{n} mil\u00b3","cubic-yard":"1#{n} yarda\u00b3|#{n} yarda\u00b3",cup:"1#{n} sb|#{n} sb",
deciliter:"1#{n} dl|#{n} dl","us ounce":"1#{n} s\u0131v\u0131 ons|#{n} s\u0131v\u0131 ons",gallon:"1#{n} galon|#{n} galon",hectoliter:"1#{n} hl|#{n} hl",liter:"1#{n} l|#{n} l",megaliter:"1#{n} Ml|#{n} Ml",milliliter:"1#{n} ml|#{n} ml",pint:"1#{n} pint|#{n} pint",quart:"1#{n} quart|#{n} quart",tbsp:"1#{n} yk|#{n} yk",tsp:"1#{n} \u00e7k|#{n} \u00e7k",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",
BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",
decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp","imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_vi={unitfmt:{"long":{"g-force":"#{n} l\u1ef1c g","meter-per-second-squared":"#{n} m/s\u00b2","arc-minute":"#{n} ph\u00fat","arc-second":"#{n} gi\u00e2y",degree:"#{n} \u0111\u1ed9",radian:"#{n} radian",acre:"#{n} m\u1eabu",hectare:"#{n} h\u00e9c-ta","square centimeter":"#{n} xentim\u00e9t vu\u00f4ng","square foot":"#{n} feet vu\u00f4ng","square inch":"#{n} inch vu\u00f4ng","square km":"#{n} kil\u00f4m\u00e9t vu\u00f4ng","square meter":"#{n} m\u00e9t vu\u00f4ng","square mile":"#{n} d\u1eb7m vu\u00f4ng",
"square yard":"#{n} yard vu\u00f4ng","liter-per-kilometer":"#{n} l\u00edt/km",mpg:"#{n} d\u1eb7m/gallon",bit:"#{n} bit","byte":"#{n} byte",gigabit:"#{n} gigabit",gigabyte:"#{n} gigabyte",kilobit:"#{n} kilobit",kilobyte:"#{n} kilobyte",megabit:"#{n} megabit",megabyte:"#{n} megabyte",terabit:"#{n} terabit",terabyte:"#{n} terabyte",day:"#{n} ng\u00e0y",hour:"#{n} gi\u1edd",microsecond:"#{n} micr\u00f4 gi\u00e2y",millisecond:"#{n} mili gi\u00e2y",minute:"#{n} ph\u00fat",month:"#{n} th\u00e1ng",nanosecond:"#{n} nano gi\u00e2y",
second:"#{n} gi\u00e2y",week:"#{n} tu\u1ea7n",year:"#{n} n\u0103m",ampere:"#{n} ampe",milliampere:"#{n} mili ampe",ohm:"#{n} ohm",volt:"#{n} v\u00f4n",calorie:"#{n} Calo",joule:"#{n} jun",kilocalorie:"#{n} kil\u00f4 calo",kilojoule:"#{n} kil\u00f4 jun","kilowatt hour":"#{n} kil\u00f4o\u00e1t gi\u1edd",gigahertz:"#{n} GHz",hertz:"#{n} Hz",kilohertz:"#{n} kHz",megahertz:"#{n} MHz","astronomical-unit":"#{n} au",centimeter:"#{n} xentim\u00e9t",decimeter:"#{n} \u0111\u1ec1xim\u00e9t",fathom:"#{n} fm",
foot:"#{n} feet",furlong:"#{n} fur",inch:"#{n} inch",kilometer:"#{n} kil\u00f4m\u00e9t","light-year":"#{n} n\u0103m \u00e1nh s\u00e1ng",meter:"#{n} m\u00e9t",micrometer:"#{n} micr\u00f4m\u00e9t",mile:"#{n} d\u1eb7m",millimeter:"#{n} milim\u00e9t",nanometer:"#{n} nanom\u00e9t",nauticalmile:"#{n} h\u1ea3i l\u00fd",parsec:"#{n} parsec",picometer:"#{n} pic\u00f4m\u00e9t",yard:"#{n} yard",lux:"#{n} lux",carat:"#{n} carat",gram:"#{n} gam",kilogram:"#{n} kil\u00f4gam","metric ton":"#{n} MT",microgram:"#{n} micr\u00f4 gam",
milligram:"#{n} miligam",ounce:"#{n} ao-x\u01a1","ounce-troy":"#{n} oz t",pound:"#{n} pao",stone:"#{n} st","long ton":"#{n} t\u1ea5n",gigawatt:"#{n} gigao\u00e1t",horsepower:"#{n} m\u00e3 l\u1ef1c",kilowatt:"#{n} kil\u00f4o\u00e1t",megawatt:"#{n} Megao\u00e1t",milliwatt:"#{n} milio\u00e1t",watt:"#{n} o\u00e1t",hectopascal:"#{n} h\u00e9ct\u00f4 pascal","inch-hg":"#{n} inch th\u1ee7y ng\u00e2n",millibar:"#{n} millibar","millimeter-of-mercury":"#{n} mm Hg","pound-per-square-inch":"#{n} psi",karat:"#{n} karat",
"kilometer/hour":"#{n} kil\u00f4m\u00e9t/gi\u1edd","meters/second":"#{n} m\u00e9t/gi\u00e2y","miles/hour":"#{n} d\u1eb7m/gi\u1edd",celsius:"#{n} \u0111\u1ed9 C",fahrenheit:"#{n} \u0111\u1ed9 F",kelvin:"#{n} \u0111\u1ed9 K","acre-foot":"#{n} ac ft",bushel:"#{n} bu",centiliter:"#{n} xentil\u00edt","cubic-centimeter":"#{n} xentim\u00e9t kh\u1ed1i","cubic foot":"#{n} foot kh\u1ed1i","cubic inch":"#{n} inch kh\u1ed1i","cubic-kilometer":"#{n} kil\u00f4m\u00e9t kh\u1ed1i","cubic meter":"#{n} m\u00e9t kh\u1ed1i",
"cubic-mile":"#{n} d\u1eb7m kh\u1ed1i","cubic-yard":"#{n} yard kh\u1ed1i",cup:"#{n} cup",deciliter:"#{n} \u0111\u1ec1xil\u00edt","us ounce":"#{n} fl oz",gallon:"#{n} gallon",hectoliter:"#{n} hectolit",liter:"#{n} l\u00edt",megaliter:"#{n} megal\u00edt",milliliter:"#{n} milil\u00edt",pint:"#{n} pint",quart:"#{n} quart",tbsp:"#{n} mu\u1ed7ng canh",tsp:"#{n} mu\u1ed7ng c\u00e0 ph\u00ea",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",
gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter",
"liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second","miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons",
"imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},"short":{"g-force":"#{n} G","meter-per-second-squared":"#{n} m/s\u00b2","arc-minute":"#{n}\u2032","arc-second":"#{n}\u2033",degree:"#{n}\u00b0",radian:"#{n} rad",acre:"#{n} m\u1eabu",hectare:"#{n} ha",
"square centimeter":"#{n} cm\u00b2","square foot":"#{n} feet vu\u00f4ng","square inch":"#{n} in\u00b2","square km":"#{n} km\u00b2","square meter":"#{n} m\u00b2","square mile":"#{n} d\u1eb7m vu\u00f4ng","square yard":"#{n} yd\u00b2","liter-per-kilometer":"#{n} l/km",mpg:"#{n} mpg",bit:"#{n} bit","byte":"#{n} byte",gigabit:"#{n} Gb",gigabyte:"#{n} GB",kilobit:"#{n} kb",kilobyte:"#{n} kB",megabit:"#{n} Mb",megabyte:"#{n} MB",terabit:"#{n} Tb",terabyte:"#{n} TB",day:"#{n} ng\u00e0y",hour:"#{n} gi\u1edd",
microsecond:"#{n} \u03bcs",millisecond:"#{n} ms",minute:"#{n} ph\u00fat",month:"#{n} th\u00e1ng",nanosecond:"#{n} ns",second:"#{n} gi\u00e2y",week:"#{n} tu\u1ea7n",year:"#{n} n\u0103m",ampere:"#{n} A",milliampere:"#{n} mA",ohm:"#{n} \u03a9",volt:"#{n} V",calorie:"#{n} Cal",joule:"#{n} J",kilocalorie:"#{n} kcal",kilojoule:"#{n} kJ","kilowatt hour":"#{n} kWh",gigahertz:"#{n} GHz",hertz:"#{n} Hz",kilohertz:"#{n} kHz",megahertz:"#{n} MHz","astronomical-unit":"#{n} au",centimeter:"#{n} cm",decimeter:"#{n} dm",
fathom:"#{n} fm",foot:"#{n} ft",furlong:"#{n} fur",inch:"#{n} inch",kilometer:"#{n} km","light-year":"#{n} ly",meter:"#{n} m",micrometer:"#{n} \u00b5m",mile:"#{n} d\u1eb7m",millimeter:"#{n} mm",nanometer:"#{n} nm",nauticalmile:"#{n} h\u1ea3i l\u00fd",parsec:"#{n} pc",picometer:"#{n} pm",yard:"#{n} yd",lux:"#{n} lx",carat:"#{n} CD",gram:"#{n} g",kilogram:"#{n} kg","metric ton":"#{n} t",microgram:"#{n} \u00b5g",milligram:"#{n} mg",ounce:"#{n} oz","ounce-troy":"#{n} oz t",pound:"#{n} lb",stone:"#{n} st",
"long ton":"#{n} tn",gigawatt:"#{n} GW",horsepower:"#{n} hp",kilowatt:"#{n} kW",megawatt:"#{n} MW",milliwatt:"#{n} mW",watt:"#{n} W",hectopascal:"#{n} hPa","inch-hg":"#{n} inHg",millibar:"#{n} mbar","millimeter-of-mercury":"#{n} mm Hg","pound-per-square-inch":"#{n} psi",karat:"#{n} kt","kilometer/hour":"#{n} km/h","meters/second":"#{n} m/s","miles/hour":"#{n} mph",celsius:"#{n}\u00b0C",fahrenheit:"#{n}\u00b0F",kelvin:"#{n} K","acre-foot":"#{n} ac ft",bushel:"#{n} bu",centiliter:"#{n} cL","cubic-centimeter":"#{n} cm\u00b3",
"cubic foot":"#{n} ft\u00b3","cubic inch":"#{n} in\u00b3","cubic-kilometer":"#{n} km\u00b3","cubic meter":"#{n} m\u00b3","cubic-mile":"#{n} mi\u00b3","cubic-yard":"#{n} yd\u00b3",cup:"#{n} c",deciliter:"#{n} dL","us ounce":"#{n} fl oz",gallon:"#{n} gal",hectoliter:"#{n} hL",liter:"#{n} l",megaliter:"#{n} ML",milliliter:"#{n} mL",pint:"#{n} pt",quart:"#{n} qt",tbsp:"#{n} tbsp",tsp:"#{n} tsp",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",
petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn",
"kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp","imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_vi_VN={unitfmt:{"long":{"g-force":"#{n} l\u1ef1c g","meter-per-second-squared":"#{n} m/s\u00b2","arc-minute":"#{n} ph\u00fat","arc-second":"#{n} gi\u00e2y",degree:"#{n} \u0111\u1ed9",radian:"#{n} radian",acre:"#{n} m\u1eabu",hectare:"#{n} h\u00e9c-ta","square centimeter":"#{n} xentim\u00e9t vu\u00f4ng","square foot":"#{n} feet vu\u00f4ng","square inch":"#{n} inch vu\u00f4ng","square km":"#{n} kil\u00f4m\u00e9t vu\u00f4ng","square meter":"#{n} m\u00e9t vu\u00f4ng","square mile":"#{n} d\u1eb7m vu\u00f4ng",
"square yard":"#{n} yard vu\u00f4ng","liter-per-kilometer":"#{n} l\u00edt/km",mpg:"#{n} d\u1eb7m/gallon",bit:"#{n} bit","byte":"#{n} byte",gigabit:"#{n} gigabit",gigabyte:"#{n} gigabyte",kilobit:"#{n} kilobit",kilobyte:"#{n} kilobyte",megabit:"#{n} megabit",megabyte:"#{n} megabyte",terabit:"#{n} terabit",terabyte:"#{n} terabyte",day:"#{n} ng\u00e0y",hour:"#{n} gi\u1edd",microsecond:"#{n} micr\u00f4 gi\u00e2y",millisecond:"#{n} mili gi\u00e2y",minute:"#{n} ph\u00fat",month:"#{n} th\u00e1ng",nanosecond:"#{n} nano gi\u00e2y",
second:"#{n} gi\u00e2y",week:"#{n} tu\u1ea7n",year:"#{n} n\u0103m",ampere:"#{n} ampe",milliampere:"#{n} mili ampe",ohm:"#{n} ohm",volt:"#{n} v\u00f4n",calorie:"#{n} Calo",joule:"#{n} jun",kilocalorie:"#{n} kil\u00f4 calo",kilojoule:"#{n} kil\u00f4 jun","kilowatt hour":"#{n} kil\u00f4o\u00e1t gi\u1edd",gigahertz:"#{n} GHz",hertz:"#{n} Hz",kilohertz:"#{n} kHz",megahertz:"#{n} MHz","astronomical-unit":"#{n} au",centimeter:"#{n} xentim\u00e9t",decimeter:"#{n} \u0111\u1ec1xim\u00e9t",fathom:"#{n} fm",
foot:"#{n} feet",furlong:"#{n} fur",inch:"#{n} inch",kilometer:"#{n} kil\u00f4m\u00e9t","light-year":"#{n} n\u0103m \u00e1nh s\u00e1ng",meter:"#{n} m\u00e9t",micrometer:"#{n} micr\u00f4m\u00e9t",mile:"#{n} d\u1eb7m",millimeter:"#{n} milim\u00e9t",nanometer:"#{n} nanom\u00e9t",nauticalmile:"#{n} h\u1ea3i l\u00fd",parsec:"#{n} parsec",picometer:"#{n} pic\u00f4m\u00e9t",yard:"#{n} yard",lux:"#{n} lux",carat:"#{n} carat",gram:"#{n} gam",kilogram:"#{n} kil\u00f4gam","metric ton":"#{n} MT",microgram:"#{n} micr\u00f4 gam",
milligram:"#{n} miligam",ounce:"#{n} ao-x\u01a1","ounce-troy":"#{n} oz t",pound:"#{n} pao",stone:"#{n} st","long ton":"#{n} t\u1ea5n",gigawatt:"#{n} gigao\u00e1t",horsepower:"#{n} m\u00e3 l\u1ef1c",kilowatt:"#{n} kil\u00f4o\u00e1t",megawatt:"#{n} Megao\u00e1t",milliwatt:"#{n} milio\u00e1t",watt:"#{n} o\u00e1t",hectopascal:"#{n} h\u00e9ct\u00f4 pascal","inch-hg":"#{n} inch th\u1ee7y ng\u00e2n",millibar:"#{n} millibar","millimeter-of-mercury":"#{n} mm Hg","pound-per-square-inch":"#{n} psi",karat:"#{n} karat",
"kilometer/hour":"#{n} kil\u00f4m\u00e9t/gi\u1edd","meters/second":"#{n} m\u00e9t/gi\u00e2y","miles/hour":"#{n} d\u1eb7m/gi\u1edd",celsius:"#{n} \u0111\u1ed9 C",fahrenheit:"#{n} \u0111\u1ed9 F",kelvin:"#{n} \u0111\u1ed9 K","acre-foot":"#{n} ac ft",bushel:"#{n} bu",centiliter:"#{n} xentil\u00edt","cubic-centimeter":"#{n} xentim\u00e9t kh\u1ed1i","cubic foot":"#{n} foot kh\u1ed1i","cubic inch":"#{n} inch kh\u1ed1i","cubic-kilometer":"#{n} kil\u00f4m\u00e9t kh\u1ed1i","cubic meter":"#{n} m\u00e9t kh\u1ed1i",
"cubic-mile":"#{n} d\u1eb7m kh\u1ed1i","cubic-yard":"#{n} yard kh\u1ed1i",cup:"#{n} cup",deciliter:"#{n} \u0111\u1ec1xil\u00edt","us ounce":"#{n} fl oz",gallon:"#{n} gallon",hectoliter:"#{n} hectolit",liter:"#{n} l\u00edt",megaliter:"#{n} megal\u00edt",milliliter:"#{n} milil\u00edt",pint:"#{n} pint",quart:"#{n} quart",tbsp:"#{n} mu\u1ed7ng canh",tsp:"#{n} mu\u1ed7ng c\u00e0 ph\u00ea",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",
gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter",
"liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second","miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons",
"imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints","imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},"short":{"g-force":"#{n} G","meter-per-second-squared":"#{n} m/s\u00b2","arc-minute":"#{n}\u2032","arc-second":"#{n}\u2033",degree:"#{n}\u00b0",radian:"#{n} rad",acre:"#{n} m\u1eabu",hectare:"#{n} ha",
"square centimeter":"#{n} cm\u00b2","square foot":"#{n} feet vu\u00f4ng","square inch":"#{n} in\u00b2","square km":"#{n} km\u00b2","square meter":"#{n} m\u00b2","square mile":"#{n} d\u1eb7m vu\u00f4ng","square yard":"#{n} yd\u00b2","liter-per-kilometer":"#{n} l/km",mpg:"#{n} mpg",bit:"#{n} bit","byte":"#{n} byte",gigabit:"#{n} Gb",gigabyte:"#{n} GB",kilobit:"#{n} kb",kilobyte:"#{n} kB",megabit:"#{n} Mb",megabyte:"#{n} MB",terabit:"#{n} Tb",terabyte:"#{n} TB",day:"#{n} ng\u00e0y",hour:"#{n} gi\u1edd",
microsecond:"#{n} \u03bcs",millisecond:"#{n} ms",minute:"#{n} ph\u00fat",month:"#{n} th\u00e1ng",nanosecond:"#{n} ns",second:"#{n} gi\u00e2y",week:"#{n} tu\u1ea7n",year:"#{n} n\u0103m",ampere:"#{n} A",milliampere:"#{n} mA",ohm:"#{n} \u03a9",volt:"#{n} V",calorie:"#{n} Cal",joule:"#{n} J",kilocalorie:"#{n} kcal",kilojoule:"#{n} kJ","kilowatt hour":"#{n} kWh",gigahertz:"#{n} GHz",hertz:"#{n} Hz",kilohertz:"#{n} kHz",megahertz:"#{n} MHz","astronomical-unit":"#{n} au",centimeter:"#{n} cm",decimeter:"#{n} dm",
fathom:"#{n} fm",foot:"#{n} ft",furlong:"#{n} fur",inch:"#{n} inch",kilometer:"#{n} km","light-year":"#{n} ly",meter:"#{n} m",micrometer:"#{n} \u00b5m",mile:"#{n} d\u1eb7m",millimeter:"#{n} mm",nanometer:"#{n} nm",nauticalmile:"#{n} h\u1ea3i l\u00fd",parsec:"#{n} pc",picometer:"#{n} pm",yard:"#{n} yd",lux:"#{n} lx",carat:"#{n} CD",gram:"#{n} g",kilogram:"#{n} kg","metric ton":"#{n} t",microgram:"#{n} \u00b5g",milligram:"#{n} mg",ounce:"#{n} oz","ounce-troy":"#{n} oz t",pound:"#{n} lb",stone:"#{n} st",
"long ton":"#{n} tn",gigawatt:"#{n} GW",horsepower:"#{n} hp",kilowatt:"#{n} kW",megawatt:"#{n} MW",milliwatt:"#{n} mW",watt:"#{n} W",hectopascal:"#{n} hPa","inch-hg":"#{n} inHg",millibar:"#{n} mbar","millimeter-of-mercury":"#{n} mm Hg","pound-per-square-inch":"#{n} psi",karat:"#{n} kt","kilometer/hour":"#{n} km/h","meters/second":"#{n} m/s","miles/hour":"#{n} mph",celsius:"#{n}\u00b0C",fahrenheit:"#{n}\u00b0F",kelvin:"#{n} K","acre-foot":"#{n} ac ft",bushel:"#{n} bu",centiliter:"#{n} cL","cubic-centimeter":"#{n} cm\u00b3",
"cubic foot":"#{n} ft\u00b3","cubic inch":"#{n} in\u00b3","cubic-kilometer":"#{n} km\u00b3","cubic meter":"#{n} m\u00b3","cubic-mile":"#{n} mi\u00b3","cubic-yard":"#{n} yd\u00b3",cup:"#{n} c",deciliter:"#{n} dL","us ounce":"#{n} fl oz",gallon:"#{n} gal",hectoliter:"#{n} hL",liter:"#{n} l",megaliter:"#{n} ML",milliliter:"#{n} mL",pint:"#{n} pt",quart:"#{n} qt",tbsp:"#{n} tbsp",tsp:"#{n} tsp",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",
petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh","km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn",
"kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp","imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz","imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.data.unitfmt_zh={unitfmt:{"long":{"g-force":"#{n}G\u529b","meter-per-second-squared":"#{n}\u7c73/\u79d2\u00b2","arc-minute":"#{n}\u5f27\u5206","arc-second":"#{n}\u5f27\u79d2",degree:"#{n}\u5ea6",radian:"#{n}\u5f27\u5ea6",acre:"#{n}\u82f1\u4ea9",hectare:"#{n}\u516c\u9877","square centimeter":"#{n}\u5e73\u65b9\u5398\u7c73","square foot":"#{n}\u5e73\u65b9\u82f1\u5c3a","square inch":"#{n}\u5e73\u65b9\u82f1\u5bf8","square km":"#{n}\u5e73\u65b9\u516c\u91cc","square meter":"#{n}\u5e73\u65b9\u7c73",
"square mile":"#{n}\u5e73\u65b9\u82f1\u91cc","square yard":"#{n}\u5e73\u65b9\u7801","liter-per-kilometer":"#{n}\u5347\u6bcf\u516c\u91cc",mpg:"#{n}\u82f1\u91cc\u6bcf\u52a0\u4ed1",bit:"#{n}\u6bd4\u7279","byte":"#{n}\u5b57\u8282",gigabit:"#{n}\u5409\u6bd4\u7279",gigabyte:"#{n}\u5409\u5b57\u8282",kilobit:"#{n}\u5343\u6bd4\u7279",kilobyte:"#{n}\u5343\u5b57\u8282",megabit:"#{n}\u5146\u6bd4\u7279",megabyte:"#{n}\u5146\u5b57\u8282",terabit:"#{n}\u592a\u6bd4\u7279",terabyte:"#{n}\u592a\u5b57\u8282",day:"#{n}\u5929",
hour:"#{n}\u5c0f\u65f6",microsecond:"#{n}\u5fae\u79d2",millisecond:"#{n}\u6beb\u79d2",minute:"#{n}\u5206\u949f",month:"#{n}\u4e2a\u6708",nanosecond:"#{n}\u7eb3\u79d2",second:"#{n}\u79d2\u949f",week:"#{n}\u5468",year:"#{n}\u5e74",ampere:"#{n}\u5b89\u57f9",milliampere:"#{n}\u6beb\u5b89",ohm:"#{n}\u6b27\u59c6",volt:"#{n}\u4f0f\u7279",calorie:"#{n}\u5361\u8def\u91cc",joule:"#{n}\u7126\u8033",kilocalorie:"#{n}\u5343\u5361",kilojoule:"#{n}\u5343\u7126","kilowatt hour":"#{n}\u5343\u74e6\u65f6",gigahertz:"#{n}\u5409\u8d6b",
hertz:"#{n}\u8d6b\u5179",kilohertz:"#{n}\u5343\u8d6b",megahertz:"#{n}\u5146\u8d6b","astronomical-unit":"#{n}\u5929\u6587\u5355\u4f4d",centimeter:"#{n}\u5398\u7c73",decimeter:"#{n}\u5206\u7c73",fathom:"#{n} fm",foot:"#{n}\u82f1\u5c3a",furlong:"#{n} fur",inch:"#{n}\u82f1\u5bf8",kilometer:"#{n}\u516c\u91cc","light-year":"#{n}\u5149\u5e74",meter:"#{n}\u7c73",micrometer:"#{n}\u5fae\u7c73",mile:"#{n}\u82f1\u91cc",millimeter:"#{n}\u6beb\u7c73",nanometer:"#{n}\u7eb3\u7c73",nauticalmile:"#{n}\u6d77\u91cc",
parsec:"#{n}\u79d2\u5dee\u8ddd",picometer:"#{n}\u76ae\u7c73",yard:"#{n}\u7801",lux:"#{n}\u52d2\u514b\u65af",carat:"#{n}\u514b\u62c9",gram:"#{n}\u514b",kilogram:"#{n}\u5343\u514b","metric ton":"#{n}\u516c\u5428",microgram:"#{n}\u5fae\u514b",milligram:"#{n}\u6beb\u514b",ounce:"#{n}\u76ce\u53f8","ounce-troy":"#{n}\u91d1\u8861\u5236\u76ce\u53f8",pound:"#{n}\u78c5",stone:"#{n} st","long ton":"#{n}\u5428",gigawatt:"#{n}\u5409\u74e6",horsepower:"#{n}\u9a6c\u529b",kilowatt:"#{n}\u5343\u74e6",megawatt:"#{n}\u5146\u74e6",
milliwatt:"#{n}\u6beb\u74e6",watt:"#{n}\u74e6\u7279",hectopascal:"#{n}\u767e\u5e15\u65af\u5361","inch-hg":"#{n}\u82f1\u5bf8\u6c5e\u67f1",millibar:"#{n}\u6beb\u5df4","millimeter-of-mercury":"#{n}\u6beb\u7c73\u6c5e\u67f1","pound-per-square-inch":"#{n}\u78c5\u6bcf\u5e73\u65b9\u82f1\u5bf8",karat:"#{n}\u514b\u62c9","kilometer/hour":"#{n}\u5343\u7c73\u6bcf\u5c0f\u65f6","meters/second":"#{n}\u7c73\u6bcf\u79d2","miles/hour":"#{n}\u82f1\u91cc\u6bcf\u5c0f\u65f6",celsius:"#{n}\u6444\u6c0f\u5ea6",fahrenheit:"#{n}\u534e\u6c0f\u5ea6",
kelvin:"#{n}\u5f00\u5c14\u6587","acre-foot":"#{n}\u82f1\u4ea9\u82f1\u5c3a",bushel:"#{n} bu",centiliter:"#{n}\u5398\u5347","cubic-centimeter":"#{n}\u7acb\u65b9\u5398\u7c73","cubic foot":"#{n}\u7acb\u65b9\u82f1\u5c3a","cubic inch":"#{n}\u7acb\u65b9\u82f1\u5bf8","cubic-kilometer":"#{n}\u7acb\u65b9\u516c\u91cc","cubic meter":"#{n}\u7acb\u65b9\u7c73","cubic-mile":"#{n}\u7acb\u65b9\u82f1\u91cc","cubic-yard":"#{n}\u7acb\u65b9\u7801",cup:"#{n}\u676f",deciliter:"#{n}\u5206\u5347","us ounce":"#{n}\u6db2\u76ce\u53f8",
gallon:"#{n}\u52a0\u4ed1",hectoliter:"#{n}\u516c\u77f3",liter:"#{n}\u516c\u5347",megaliter:"#{n}\u5146\u5347",milliliter:"#{n}\u6beb\u5347",pint:"#{n}\u54c1\u8131",quart:"#{n}\u5938\u8131",tbsp:"#{n}\u6c64\u5319",tsp:"#{n}\u8336\u5319",decameter:"1#{n} decameter|#{n} decameters",hectometer:"1#{n} hectometer|#{n} hectometers",megameter:"1#{n} megameter|#{n} megameters",gigameter:"1#{n} gigameter|#{n} gigameters",petabit:"1#{n} petabit|#{n} petabits",petabyte:"1#{n} petabyte|#{n} petabytes",BTU:"1#{n} BTU|#{n} BTU",
millijoule:"1#{n} millijoule|#{n} millijoules","watt hour":"1#{n} watt hour|#{n} watt hours",megajoule:"1#{n} megajoule|#{n} megajoules",gigajoule:"1#{n} gigajoule|#{n} gigajoules","megawatt hour":"1#{n} megawatt hour|#{n} megawatt hours","gigawatt hour":"1#{n} gigawatt hour|#{n} gigawatt hours","km/liter":"1#{n} kilometer per liter|#{n} kilometers per liter","liter/100km":"1#{n} liter per 100km|#{n} liters per 100km","mpg(imp)":"1#{n} mile per gallon (Imp)|#{n} miles per gallon (Imp)","short ton":"1#{n} short ton|#{n} short tons",
"feet/second":"1#{n} foot per second|#{n} feet per second",knot:"1#{n} knot|#{n} knots","kilometer/second":"1#{n} kilometer per second|#{n} kilometers per second","miles/second":"1#{n} mile per second|#{n} miles per second",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial teaspoon|#{n} imperial teaspoons","imperial tbsp":"1#{n} imperial tablespoon|#{n} imperial tablespoons","imperial ounce":"1#{n} imperial ounce|#{n} imperial ounces","imperial pint":"1#{n} imperial pint|#{n} imperial pints",
"imperial quart":"1#{n} imperial quart|#{n} imperial quarts","imperial gallon":"1#{n} imperial gallon|#{n} imperial gallons"},"short":{"g-force":"#{n} G","meter-per-second-squared":"#{n}\u7c73/\u79d2\u00b2","arc-minute":"#{n}\u5f27\u5206","arc-second":"#{n}\u5f27\u79d2",degree:"#{n}\u00b0",radian:"#{n}\u5f27\u5ea6",acre:"#{n}\u82f1\u4ea9",hectare:"#{n} ha","square centimeter":"#{n}\u5e73\u65b9\u5398\u7c73","square foot":"#{n} ft\u00b2","square inch":"#{n}\u5e73\u65b9\u82f1\u5bf8","square km":"#{n}\u5e73\u65b9\u516c\u91cc",
"square meter":"#{n}\u5e73\u65b9\u7c73","square mile":"#{n}\u5e73\u65b9\u82f1\u91cc","square yard":"#{n}\u5e73\u65b9\u7801","liter-per-kilometer":"#{n}\u5347/\u516c\u91cc",mpg:"#{n}\u82f1\u91cc/\u52a0\u4ed1",bit:"#{n}\u6bd4\u7279","byte":"#{n}\u5b57\u8282",gigabit:"#{n}\u5409\u6bd4\u7279",gigabyte:"#{n}\u5409\u5b57\u8282",kilobit:"#{n}\u5343\u6bd4\u7279",kilobyte:"#{n}\u5343\u5b57\u8282",megabit:"#{n}\u5146\u6bd4\u7279",megabyte:"#{n}\u5146\u5b57\u8282",terabit:"#{n}\u592a\u6bd4\u7279",terabyte:"#{n}\u592a\u5b57\u8282",
day:"#{n}\u5929",hour:"#{n}\u5c0f\u65f6",microsecond:"#{n}\u5fae\u79d2",millisecond:"#{n}\u6beb\u79d2",minute:"#{n}\u5206\u949f",month:"#{n}\u4e2a\u6708",nanosecond:"#{n}\u7eb3\u79d2",second:"#{n}\u79d2",week:"#{n}\u5468",year:"#{n}\u5e74",ampere:"#{n}\u5b89",milliampere:"#{n}\u6beb\u5b89",ohm:"#{n}\u6b27",volt:"#{n}\u4f0f",calorie:"#{n}\u5361",joule:"#{n}\u7126\u8033",kilocalorie:"#{n}\u5343\u5361",kilojoule:"#{n}\u5343\u7126","kilowatt hour":"#{n}\u5343\u74e6\u65f6",gigahertz:"#{n}\u5409\u8d6b",
hertz:"#{n}\u8d6b",kilohertz:"#{n}\u5343\u8d6b",megahertz:"#{n}\u5146\u8d6b","astronomical-unit":"#{n}\u5929\u6587\u5355\u4f4d",centimeter:"#{n}\u5398\u7c73",decimeter:"#{n}\u5206\u7c73",fathom:"#{n} fm",foot:"#{n}\u82f1\u5c3a",furlong:"#{n} fur",inch:"#{n}\u82f1\u5bf8",kilometer:"#{n}\u516c\u91cc","light-year":"#{n} ly",meter:"#{n} m",micrometer:"#{n}\u5fae\u7c73",mile:"#{n}\u82f1\u91cc",millimeter:"#{n}\u6beb\u7c73",nanometer:"#{n}\u7eb3\u7c73",nauticalmile:"#{n}\u6d77\u91cc",parsec:"#{n}\u79d2\u5dee\u8ddd",
picometer:"#{n} pm",yard:"#{n} yd",lux:"#{n}\u52d2\u514b\u65af",carat:"#{n}\u514b\u62c9",gram:"#{n}\u514b",kilogram:"#{n}\u5343\u514b","metric ton":"#{n}\u516c\u5428",microgram:"#{n}\u5fae\u514b",milligram:"#{n}\u6beb\u514b",ounce:"#{n}\u76ce\u53f8","ounce-troy":"#{n}\u91d1\u8861\u5236\u76ce\u53f8",pound:"#{n}\u78c5",stone:"#{n} st","long ton":"#{n}\u5428",gigawatt:"#{n}\u5409\u74e6",horsepower:"#{n}\u9a6c\u529b",kilowatt:"#{n}\u5343\u74e6",megawatt:"#{n}\u5146\u74e6",milliwatt:"#{n}\u6beb\u74e6",
watt:"#{n}\u74e6",hectopascal:"#{n}\u767e\u5e15","inch-hg":"#{n}\u82f1\u5bf8\u6c5e\u67f1",millibar:"#{n}\u6beb\u5df4","millimeter-of-mercury":"#{n}\u6beb\u7c73\u6c5e\u67f1","pound-per-square-inch":"#{n}\u78c5/\u5e73\u65b9\u82f1\u5bf8",karat:"#{n}\u514b\u62c9","kilometer/hour":"#{n}\u5343\u7c73/\u5c0f\u65f6","meters/second":"#{n}\u7c73/\u79d2","miles/hour":"#{n}\u82f1\u91cc/\u5c0f\u65f6",celsius:"#{n}\u00b0C",fahrenheit:"#{n}\u00b0F",kelvin:"#{n}K","acre-foot":"#{n}\u82f1\u4ea9\u82f1\u5c3a",bushel:"#{n} bu",
centiliter:"#{n}\u5398\u5347","cubic-centimeter":"#{n}\u7acb\u65b9\u5398\u7c73","cubic foot":"#{n}\u7acb\u65b9\u82f1\u5c3a","cubic inch":"#{n}\u7acb\u65b9\u82f1\u5bf8","cubic-kilometer":"#{n}\u7acb\u65b9\u516c\u91cc","cubic meter":"#{n}\u7acb\u65b9\u7c73","cubic-mile":"#{n}\u7acb\u65b9\u82f1\u91cc","cubic-yard":"#{n}\u7acb\u65b9\u7801",cup:"#{n}\u676f",deciliter:"#{n}\u5206\u5347","us ounce":"#{n}\u6db2\u76ce\u53f8",gallon:"#{n}\u52a0\u4ed1",hectoliter:"#{n}\u516c\u77f3",liter:"#{n}\u5347",megaliter:"#{n}\u5146\u5347",
milliliter:"#{n}\u6beb\u5347",pint:"#{n}\u54c1\u8131",quart:"#{n}\u5938\u8131",tbsp:"#{n}\u6c64\u5319",tsp:"#{n}\u8336\u5319",decameter:"1#{n} dam|#{n} dam",hectometer:"1#{n} hm|#{n} hm",megameter:"1#{n} Mm|#{n} Mm",gigameter:"1#{n} Gm|#{n} Gm",petabit:"1#{n} pb|#{n} pb",petabyte:"1#{n} pB|#{n} pB",BTU:"1#{n} BTU|#{n} BTU",millijoule:"1#{n} mJ|#{n} mJ","watt hour":"1#{n} Wh|#{n} Wh",megajoule:"1#{n} MJ|#{n} MJ",gigajoule:"1#{n} GJ|#{n} GJ","megawatt hour":"1#{n} MWh|#{n} MWh","gigawatt hour":"1#{n} GWh|#{n} GWh",
"km/liter":"1#{n} km/l|#{n} km/l","liter/100km":"1#{n} L/100km|#{n} L/100km","mpg(imp)":"1#{n} mpg(Imp).|#{n} mmpg(Imp)","short ton":"1#{n} short ton|#{n} short tons","feet/second":"1#{n} ft/s|#{n} ft/s",knot:"1#{n} kn|#{n} kn","kilometer/second":"1#{n}  km/s|#{n}  km/s","miles/second":"1#{n} mps|#{n}  mps",decade:"1#{n} decade|#{n} decades",century:"1#{n} century|#{n} centuries","imperial tsp":"1#{n} imperial tsp|#{n} imperial tsp","imperial tbsp":"1#{n} imperial tbsp|#{n} imperial tbsp","imperial ounce":"1#{n} imperial oz|#{n} imperial oz",
"imperial pint":"1#{n} imperial pt|#{n} imperial pt","imperial quart":"1#{n} imperial qt|#{n} imperial qt","imperial gallon":"1#{n} imperial gal|#{n} imperial gal"}}};
ilib.UnitFmt=function $ilib$UnitFmt$($options$$){var $sync$$=true,$loadParams$$=void 0;this.length="long";this.scale=true;this.measurementType="undefined";this.convert=true;this.locale=new ilib.Locale;if($options$$){if($options$$.locale)this.locale=typeof $options$$.locale==="string"?new ilib.Locale($options$$.locale):$options$$.locale;if(typeof $options$$.sync==="boolean")$sync$$=$options$$.sync;if(typeof $options$$.loadParams!=="undefined")$loadParams$$=$options$$.loadParams;if($options$$.length)this.length=
$options$$.length;if(typeof $options$$.autoScale==="boolean")this.scale=$options$$.autoScale;if(typeof $options$$.autoConvert==="boolean")this.convert=$options$$.autoConvert;if(typeof $options$$.useNative==="boolean")this.useNative=$options$$.useNative;if($options$$.measurementSystem)this.measurementSystem=$options$$.measurementSystem;if(typeof $options$$.maxFractionDigits==="number")this.maxFractionDigits=$options$$.maxFractionDigits;if(typeof $options$$.minFractionDigits==="number")this.minFractionDigits=
$options$$.minFractionDigits;this.roundingMode=$options$$.roundingMode}if(!ilib.UnitFmt.cache)ilib.UnitFmt.cache={};ilib.loadData({object:ilib.UnitFmt,locale:this.locale,name:"unitfmt.json",sync:$sync$$,loadParams:$loadParams$$,callback:ilib.bind(this,function($format$$){this.template=$format$$.unitfmt[this.length];if($options$$&&typeof $options$$.onLoad==="function")$options$$.onLoad(this)})})};
ilib.UnitFmt.prototype={getLocale:function $ilib$UnitFmt$$getLocale$(){return this.locale},getTemplate:function $ilib$UnitFmt$$getTemplate$(){return this.template},toString:function $ilib$UnitFmt$$toString$(){return this.getTemplate()},getScale:function $ilib$UnitFmt$$getScale$(){return this.scale},getMeasurementSystem:function $ilib$UnitFmt$$getMeasurementSystem$(){return this.measurementSystem},format:function $ilib$UnitFmt$$format$($measurement$$1_u$$){var $measurement$$1_u$$=this.convert?$measurement$$1_u$$.localize(this.locale.getSpec()):
$measurement$$1_u$$,$measurement$$1_u$$=this.scale?$measurement$$1_u$$.scale(this.measurementSystem):$measurement$$1_u$$,$formatted$$=new ilib.String(this.template[$measurement$$1_u$$.getUnit()]);$formatted$$.setLocale(this.locale,true,void 0,void 0);var $numFmt$$=new ilib.NumFmt({locale:this.locale,useNative:this.useNative,maxFractionDigits:this.maxFractionDigits,minFractionDigits:this.minFractionDigits,roundingMode:this.roundingMode}),$formatted$$=$formatted$$.formatChoice($measurement$$1_u$$.amount,
{n:$numFmt$$.format($measurement$$1_u$$.amount)});return $formatted$$.length>0?$formatted$$:$measurement$$1_u$$.amount+" "+$measurement$$1_u$$.unit}};
ilib.Measurement.Length=function $ilib$Measurement$Length$($options$$){this.unit="meter";this.amount=0;this.aliases=ilib.Measurement.Length.aliases;if($options$$){if(typeof $options$$.unit!=="undefined"){this.originalUnit=$options$$.unit;this.unit=this.aliases[$options$$.unit]||$options$$.unit}if(typeof $options$$.amount==="object")if($options$$.amount.getMeasure()==="length")this.amount=ilib.Measurement.Length.convert(this.unit,$options$$.amount.getUnit(),$options$$.amount.getAmount());else throw"Cannot convert unit "+
$options$$.amount.unit+" to a length";else if(typeof $options$$.amount!=="undefined")this.amount=parseFloat($options$$.amount)}if(typeof ilib.Measurement.Length.ratios[this.unit]==="undefined")throw"Unknown unit: "+$options$$.unit;};
ilib.Measurement.Length.ratios={micrometer:[1,1,0.001,1.0E-4,3.93701E-5,1.0E-5,3.28084E-6,1.09361E-6,1.0E-6,1.0E-7,1.0E-8,1.0E-9,6.21373E-10,5.39957E-10,1.0E-12,1.0E-15],millimeter:[2,1E3,1,0.1,0.0393701,0.01,0.00328084,0.00109361,0.001,1.0E-4,1.0E-5,1.0E-6,6.21373E-7,5.39957E-7,1.0E-9,1.0E-12],centimeter:[3,1E4,10,1,0.393701,0.1,0.0328084,0.0109361,0.01,0.001,1.0E-4,1.0E-5,6.21373E-6,5.39957E-6,1.0E-8,1.0E-9],inch:[4,25399.986,25.399986,2.5399986,1,0.25399986,0.083333333,0.027777778,0.025399986,
0.0025399986,2.5399986E-4,2.5399986E-5,1.5783E-5,1.3715E-5,2.5399986E-8,2.5399986E-11],decimeter:[5,1E5,100,10,3.93701,1,0.328084,0.109361,0.1,0.01,0.001,1.0E-4,6.21373E-5,5.39957E-5,1.0E-7,1.0E-8],foot:[6,304799.99,304.79999,30.479999,12,3.0479999,1,0.33333333,0.30479999,0.030479999,0.0030479999,3.0479999E-4,1.89394E-4,1.64579E-4,3.0479999E-7,3.0479999E-10],yard:[7,914402.758,914.402758,91.4402758,36,9.14402758,3,1,0.914402758,0.0914402758,0.00914402758,9.14402758E-4,5.68182E-4,4.93737E-4,9.14402758E-7,
9.14402758E-10],meter:[8,1E6,1E3,100,39.3701,10,3.28084,1.09361,1,0.1,0.01,0.001,6.213712E-4,5.39957E-4,1.0E-6,1.0E-7],decameter:[9,1E7,1E4,1E3,393.701,100,32.8084,10.9361,10,1,0.1,0.01,0.00621373,0.00539957,1.0E-5,1.0E-6],hectometer:[10,1E8,1E5,1E4,3937.01,1E3,328.084,109.361,100,10,1,0.1,0.0621373,0.0539957,1.0E-4,1.0E-5],kilometer:[11,1E9,1E6,1E5,39370.1,1E4,3280.84,1093.61,1E3,100,10,1,0.621373,0.539957,0.001,1.0E-4],mile:[12,160934E4,1609340,160934,63360,16093.4,5280,1760,1609.34,160.934,16.0934,
1.60934,1,0.868976,0.00160934,1.60934E-6],nauticalmile:[13,1852E6,1852E3,185200,72913.4,18520,6076.12,2025.37,1852,185.2,18.52,1.852,1.15078,1,0.001852,1.852E-6],megameter:[14,1E12,1E9,1E6,39370100,1E5,3280840,1093610,1E4,1E3,100,10,621.373,539.957,1,0.001],gigameter:[15,1E15,1E12,1E9,393701E5,1E8,328084E4,109361E4,1E7,1E6,1E5,1E4,621373,539957,1E3,1]};
ilib.Measurement.Length.metricSystem={micrometer:1,millimeter:2,centimeter:3,decimeter:5,meter:8,decameter:9,hectometer:10,kilometer:11,megameter:14,gigameter:15};ilib.Measurement.Length.imperialSystem={inch:4,foot:6,yard:7,mile:12,nauticalmile:13};ilib.Measurement.Length.uscustomarySystem={inch:4,foot:6,yard:7,mile:12,nauticalmile:13};
ilib.Measurement.Length.metricToUScustomary={micrometer:"inch",millimeter:"inch",centimeter:"inch",decimeter:"inch",meter:"yard",decameter:"yard",hectometer:"mile",kilometer:"mile",megameter:"nauticalmile",gigameter:"nauticalmile"};ilib.Measurement.Length.usCustomaryToMetric={inch:"centimeter",foot:"centimeter",yard:"meter",mile:"kilometer",nauticalmile:"kilometer"};ilib.Measurement.Length.prototype=new ilib.Measurement({});ilib.Measurement.Length.prototype.parent=ilib.Measurement;
ilib.Measurement.Length.prototype.constructor=ilib.Measurement.Length;ilib.Measurement.Length.prototype.getMeasure=function $ilib$Measurement$Length$$getMeasure$(){return"length"};ilib.Measurement.Length.prototype.localize=function $ilib$Measurement$Length$$localize$($locale$$){return new ilib.Measurement.Length({unit:$locale$$==="en-US"||$locale$$==="en-GB"?ilib.Measurement.Length.metricToUScustomary[this.unit]||this.unit:ilib.Measurement.Length.usCustomaryToMetric[this.unit]||this.unit,amount:this})};
ilib.Measurement.Length.prototype.convert=function $ilib$Measurement$Length$$convert$($to$$){return!$to$$||typeof ilib.Measurement.Length.ratios[this.normalizeUnits($to$$)]==="undefined"?void 0:new ilib.Measurement({unit:$to$$,amount:this})};
ilib.Measurement.Length.prototype.scale=function $ilib$Measurement$Length$$scale$($mSystem_measurementsystem$$){if($mSystem_measurementsystem$$==="metric"||typeof $mSystem_measurementsystem$$==="undefined"&&typeof ilib.Measurement.Length.metricSystem[this.unit]!=="undefined")$mSystem_measurementsystem$$=ilib.Measurement.Length.metricSystem;else if($mSystem_measurementsystem$$==="imperial"||typeof $mSystem_measurementsystem$$==="undefined"&&typeof ilib.Measurement.Length.imperialSystem[this.unit]!==
"undefined")$mSystem_measurementsystem$$=ilib.Measurement.Length.imperialSystem;else if($mSystem_measurementsystem$$==="uscustomary"||typeof $mSystem_measurementsystem$$==="undefined"&&typeof ilib.Measurement.Length.uscustomarySystem[this.unit]!=="undefined")$mSystem_measurementsystem$$=ilib.Measurement.Length.uscustomarySystem;else return new ilib.Measurement.Length({unit:this.unit,amount:this.amount});var $length$$=this.amount,$munit$$=this.unit,$fromRow$$=ilib.Measurement.Length.ratios[this.unit],
$m$$;for($m$$ in $mSystem_measurementsystem$$){var $tmp$$=this.amount*$fromRow$$[$mSystem_measurementsystem$$[$m$$]];if($tmp$$<1)break;$length$$=$tmp$$;$munit$$=$m$$}return new ilib.Measurement.Length({unit:$munit$$,amount:$length$$})};
ilib.Measurement.Length.aliases={miles:"mile",mile:"mile",nauticalmiles:"nauticalmile","nautical mile":"nauticalmile","nautical miles":"nauticalmile",nauticalmile:"nauticalmile",yards:"yard",yard:"yard",feet:"foot",foot:"foot",inches:"inch",inch:"inch",meters:"meter",metre:"meter",metres:"meter",m:"meter",meter:"meter",micrometers:"micrometer",micrometres:"micrometer",micrometre:"micrometer","\u00b5m":"micrometer",micrometer:"micrometer",millimeters:"millimeter",millimetres:"millimeter",millimetre:"millimeter",
mm:"millimeter",millimeter:"millimeter",centimeters:"centimeter",centimetres:"centimeter",centimetre:"centimeter",cm:"centimeter",centimeter:"centimeter",decimeters:"decimeter",decimetres:"decimeter",decimetre:"decimeter",dm:"decimeter",decimeter:"decimeter",decameters:"decameter",decametres:"decameter",decametre:"decameter",dam:"decameter",decameter:"decameter",hectometers:"hectometer",hectometres:"hectometer",hectometre:"hectometer",hm:"hectometer",hectometer:"hectometer",kilometers:"kilometer",
kilometres:"kilometer",kilometre:"kilometer",km:"kilometer",kilometer:"kilometer",megameters:"megameter",megametres:"megameter",megametre:"megameter",Mm:"megameter",megameter:"megameter",gigameters:"gigameter",gigametres:"gigameter",gigametre:"gigameter",Gm:"gigameter",gigameter:"gigameter"};
ilib.Measurement.Length.convert=function $ilib$Measurement$Length$convert$($to$$,$from$$,$length$$){$from$$=ilib.Measurement.Length.aliases[$from$$]||$from$$;$to$$=ilib.Measurement.Length.aliases[$to$$]||$to$$;return typeof $from$$==="undefined"||typeof $to$$==="undefined"?void 0:$length$$*ilib.Measurement.Length.ratios[$from$$][ilib.Measurement.Length.ratios[$to$$][0]]};
ilib.Measurement.Length.getMeasures=function $ilib$Measurement$Length$getMeasures$(){var $ret$$=[],$m$$;for($m$$ in ilib.Measurement.Length.ratios)$ret$$.push($m$$);return $ret$$};ilib.Measurement._constructors.length=ilib.Measurement.Length;
ilib.Measurement.Speed=function $ilib$Measurement$Speed$($options$$){this.unit="meters/second";this.amount=0;this.aliases=ilib.Measurement.Speed.aliases;if($options$$){if(typeof $options$$.unit!=="undefined"){this.originalUnit=$options$$.unit;this.unit=this.aliases[$options$$.unit]||$options$$.unit}if(typeof $options$$.amount==="object")if($options$$.amount.getMeasure()==="speed")this.amount=ilib.Measurement.Speed.convert(this.unit,$options$$.amount.getUnit(),$options$$.amount.getAmount());else throw"Cannot convert units "+
$options$$.amount.unit+" to a speed";else if(typeof $options$$.amount!=="undefined")this.amount=parseFloat($options$$.amount)}if(typeof ilib.Measurement.Speed.ratios[this.unit]==="undefined")throw"Unknown unit: "+$options$$.unit;};
ilib.Measurement.Speed.ratios={"kilometer/hour":[1,1,0.911344,0.621371,0.539957,0.277778,2.77778E-4,1.72603109E-4],"feet/second":[2,1.09728,1,0.681818,0.592484,0.3048,3.048E-4,1.89393939E-4],"miles/hour":[3,1.60934,1.46667,1,0.868976,0.44704,4.4704E-4,2.77777778E-4],knot:[4,1.852,1.68781,1.15078,1,0.514444,5.14444E-4,3.19660958E-4],"meters/second":[5,3.6,3.28084,2.236936,1.94384,1,0.001,6.21371192E-4],"kilometer/second":[6,3600,3280.8399,2236.93629,1943.84449,1E3,1,0.621371192],"miles/second":[7,
5793.6384,5280,3600,3128.31447,1609.344,1.609344,1]};ilib.Measurement.Speed.metricSystem={"kilometer/hour":1,"meters/second":5,"kilometer/second":6};ilib.Measurement.Speed.imperialSystem={"feet/second":2,"miles/hour":3,knot:4,"miles/second":7};ilib.Measurement.Speed.uscustomarySystem={"feet/second":2,"miles/hour":3,knot:4,"miles/second":7};ilib.Measurement.Speed.metricToUScustomary={"kilometer/hour":"miles/hour","meters/second":"feet/second","kilometer/second":"miles/second"};
ilib.Measurement.Speed.UScustomaryTometric={"miles/hour":"kilometer/hour","feet/second":"meters/second","miles/second":"kilometer/second",knot:"kilometer/hour"};ilib.Measurement.Speed.prototype=new ilib.Measurement({});ilib.Measurement.Speed.prototype.parent=ilib.Measurement;ilib.Measurement.Speed.prototype.constructor=ilib.Measurement.Speed;ilib.Measurement.Speed.prototype.getMeasure=function $ilib$Measurement$Speed$$getMeasure$(){return"speed"};
ilib.Measurement.Speed.prototype.convert=function $ilib$Measurement$Speed$$convert$($to$$){return!$to$$||typeof ilib.Measurement.Speed.ratios[this.normalizeUnits($to$$)]==="undefined"?void 0:new ilib.Measurement({unit:$to$$,amount:this})};
ilib.Measurement.Speed.prototype.scale=function $ilib$Measurement$Speed$$scale$($mSystem$$1_measurementsystem$$){if($mSystem$$1_measurementsystem$$==="metric"||typeof $mSystem$$1_measurementsystem$$==="undefined"&&typeof ilib.Measurement.Speed.metricSystem[this.unit]!=="undefined")$mSystem$$1_measurementsystem$$=ilib.Measurement.Speed.metricSystem;else if($mSystem$$1_measurementsystem$$==="imperial"||typeof $mSystem$$1_measurementsystem$$==="undefined"&&typeof ilib.Measurement.Speed.imperialSystem[this.unit]!==
"undefined")$mSystem$$1_measurementsystem$$=ilib.Measurement.Speed.imperialSystem;else if($mSystem$$1_measurementsystem$$==="uscustomary"||typeof $mSystem$$1_measurementsystem$$==="undefined"&&typeof ilib.Measurement.Speed.uscustomarySystem[this.unit]!=="undefined")$mSystem$$1_measurementsystem$$=ilib.Measurement.Speed.uscustomarySystem;else return new ilib.Measurement.Speed({unit:this.unit,amount:this.amount});var $speed$$=this.amount,$munit$$=this.unit,$fromRow$$=ilib.Measurement.Speed.ratios[this.unit],
$m$$;for($m$$ in $mSystem$$1_measurementsystem$$){var $tmp$$=this.amount*$fromRow$$[$mSystem$$1_measurementsystem$$[$m$$]];if($tmp$$<1)break;$speed$$=$tmp$$;$munit$$=$m$$}return new ilib.Measurement.Speed({unit:$munit$$,amount:$speed$$})};
ilib.Measurement.Speed.prototype.localize=function $ilib$Measurement$Speed$$localize$($locale$$){return new ilib.Measurement.Speed({unit:$locale$$==="en-US"||$locale$$==="en-GB"?ilib.Measurement.Speed.metricToUScustomary[this.unit]||this.unit:ilib.Measurement.Speed.UScustomaryTometric[this.unit]||this.unit,amount:this})};
ilib.Measurement.Speed.aliases={"foot/sec":"feet/second","foot/s":"feet/second","feet/s":"feet/second","f/s":"feet/second","feet/second":"feet/second","feet/sec":"feet/second","meter/sec":"meters/second","meter/s":"meters/second","meters/s":"meters/second","metre/sec":"meters/second","metre/s":"meters/second","metres/s":"meters/second","mt/sec":"meters/second","m/sec":"meters/second","mt/s":"meters/second","m/s":"meters/second",mps:"meters/second","meters/second":"meters/second","meters/sec":"meters/second",
"kilometer/hour":"kilometer/hour","km/hour":"kilometer/hour","kilometers/hour":"kilometer/hour",kmh:"kilometer/hour","km/h":"kilometer/hour","kilometer/h":"kilometer/hour","kilometers/h":"kilometer/hour","km/hr":"kilometer/hour","kilometer/hr":"kilometer/hour","kilometers/hr":"kilometer/hour","kilometre/hour":"kilometer/hour",mph:"miles/hour","mile/hour":"miles/hour","mile/hr":"miles/hour","mile/h":"miles/hour","miles/h":"miles/hour","miles/hr":"miles/hour","miles/hour":"miles/hour",kn:"knot",kt:"knot",
kts:"knot",knots:"knot","nm/h":"knot","nm/hr":"knot","nauticalmile/h":"knot","nauticalmile/hr":"knot","nauticalmile/hour":"knot","nauticalmiles/hr":"knot","nauticalmiles/hour":"knot",knot:"knot","kilometer/second":"kilometer/second","kilometer/sec":"kilometer/second","kilometre/sec":"kilometer/second","Kilometre/sec":"kilometer/second","kilometers/second":"kilometer/second","kilometers/sec":"kilometer/second","kilometres/sec":"kilometer/second","Kilometres/sec":"kilometer/second","km/sec":"kilometer/second",
"Km/s":"kilometer/second","km/s":"kilometer/second","miles/second":"miles/second","miles/sec":"miles/second","miles/s":"miles/second","mile/s":"miles/second","mile/sec":"miles/second","Mile/s":"miles/second"};ilib.Measurement.Speed.convert=function $ilib$Measurement$Speed$convert$($to$$,$from$$,$speed$$){$from$$=ilib.Measurement.Speed.aliases[$from$$]||$from$$;$to$$=ilib.Measurement.Speed.aliases[$to$$]||$to$$;return typeof $from$$==="undefined"||typeof $to$$==="undefined"?void 0:$speed$$*ilib.Measurement.Speed.ratios[$from$$][ilib.Measurement.Speed.ratios[$to$$][0]]};
ilib.Measurement.Speed.getMeasures=function $ilib$Measurement$Speed$getMeasures$(){var $ret$$=[],$m$$;for($m$$ in ilib.Measurement.Speed.ratios)$ret$$.push($m$$);return $ret$$};ilib.Measurement._constructors.speed=ilib.Measurement.Speed;
ilib.Measurement.DigitalStorage=function $ilib$Measurement$DigitalStorage$($options$$){this.unit="bit";this.amount=0;this.aliases=ilib.Measurement.DigitalStorage.aliases;if($options$$){if(typeof $options$$.unit!=="undefined"){this.originalUnit=$options$$.unit;this.unit=this.aliases[$options$$.unit]||$options$$.unit}if(typeof $options$$.amount==="object")if($options$$.amount.getMeasure()==="digitalStorage")this.amount=ilib.Measurement.DigitalStorage.convert(this.unit,$options$$.amount.getUnit(),$options$$.amount.getAmount());
else throw"Cannot convert unit "+$options$$.amount.unit+" to a digitalStorage";else if(typeof $options$$.amount!=="undefined")this.amount=parseFloat($options$$.amount)}if(typeof ilib.Measurement.DigitalStorage.ratios[this.unit]==="undefined")throw"Unknown unit: "+$options$$.unit;};
ilib.Measurement.DigitalStorage.ratios={bit:[1,1,0.125,9.765625E-4,1.220703125E-4,9.536743164E-7,1.192092896E-7,9.313225746E-10,1.164153218E-10,9.094947017E-13,1.136868377E-13,8.881784197E-16,1.110223025E-16],"byte":[2,8,1,0.0078125,9.765625E-4,7.629394531E-6,9.536743164E-7,7.450580597E-9,9.313225746E-10,7.275957614E-12,9.094947017E-13,7.105427358E-15,8.881784197E-16],kilobit:[3,1024,128,1,0.125,9.765625E-4,1.220703125E-4,9.536743164E-7,1.192092896E-7,9.313225746E-10,1.164153218E-10,9.094947017E-13,
1.136868377E-13],kilobyte:[4,8192,1024,8,1,0.0078125,9.765625E-4,7.629394531E-6,9.536743164E-7,7.450580597E-9,9.313225746E-10,7.275957614E-12,9.094947017E-13],megabit:[5,1048576,131072,1024,128,1,0.125,9.765625E-4,1.220703125E-4,9.536743164E-7,1.192092896E-7,9.313225746E-10,1.164153218E-10],megabyte:[6,8388608,1048576,8192,1024,8,1,0.0078125,9.765625E-4,7.629394531E-6,9.536743164E-7,7.450580597E-9,9.313225746E-10],gigabit:[7,1073741824,134217728,1048576,131072,1024,128,1,0.125,9.765625E-4,1.220703125E-4,
9.536743164E-7,1.192092896E-7],gigabyte:[8,8589934592,1073741824,8388608,1048576,8192,1024,8,1,0.0078125,9.765625E-4,7.629394531E-6,9.536743164E-7],terabit:[9,1099511628E3,137438953472,1073741824,134217728,1048576,131072,1024,128,1,0.125,9.765625E-4,1.220703125E-4],terabyte:[10,8796093022E3,1099511628E3,8589934592,1073741824,8388608,1048576,8192,1024,8,1,0.0078125,9.765625E-4],petabit:[11,1125899907E6,1407374884E5,1099511628E3,137438953472,1073741824,134217728,1048576,131072,1024,128,1,0.125],petabyte:[12,
9007199255E6,1125899907E6,8796093022E3,1099511628E3,8589934592,1073741824,8388608,1048576,8192,1024,8,1]};ilib.Measurement.DigitalStorage.prototype=new ilib.Measurement({});ilib.Measurement.DigitalStorage.prototype.parent=ilib.Measurement;ilib.Measurement.DigitalStorage.prototype.constructor=ilib.Measurement.DigitalStorage;ilib.Measurement.DigitalStorage.prototype.getMeasure=function $ilib$Measurement$DigitalStorage$$getMeasure$(){return"digitalStorage"};
ilib.Measurement.DigitalStorage.prototype.convert=function $ilib$Measurement$DigitalStorage$$convert$($to$$){return!$to$$||typeof ilib.Measurement.DigitalStorage.ratios[this.normalizeUnits($to$$)]==="undefined"?void 0:new ilib.Measurement({unit:$to$$,amount:this})};ilib.Measurement.DigitalStorage.prototype.localize=function $ilib$Measurement$DigitalStorage$$localize$(){return new ilib.Measurement.DigitalStorage({unit:this.unit,amount:this.amount})};
ilib.Measurement.DigitalStorage.prototype.scale=function $ilib$Measurement$DigitalStorage$$scale$(){var $fromRow$$=ilib.Measurement.DigitalStorage.ratios[this.unit],$dStorage$$=this.amount,$munit$$=this.unit,$i$$=1,$m$$;for($m$$ in ilib.Measurement.DigitalStorage.ratios){var $tmp$$=this.amount*$fromRow$$[$i$$];if($tmp$$<1)break;$dStorage$$=$tmp$$;$munit$$=$m$$;++$i$$}return new ilib.Measurement.DigitalStorage({unit:$munit$$,amount:$dStorage$$})};
ilib.Measurement.DigitalStorage.aliases={bits:"bit",bit:"bit",Bits:"bit",Bit:"bit","byte":"byte",bytes:"byte",Byte:"byte",Bytes:"byte",kilobits:"kilobit",Kilobits:"kilobit",KiloBits:"kilobit",kiloBits:"kilobit",kilobit:"kilobit",Kilobit:"kilobit",kiloBit:"kilobit",KiloBit:"kilobit",kb:"kilobit",Kb:"kilobit",kilobyte:"kilobyte",Kilobyte:"kilobyte",kiloByte:"kilobyte",KiloByte:"kilobyte",kilobytes:"kilobyte",Kilobytes:"kilobyte",kiloBytes:"kilobyte",KiloBytes:"kilobyte",kB:"kilobyte",KB:"kilobyte",
megabit:"megabit",Megabit:"megabit",megaBit:"megabit",MegaBit:"megabit",megabits:"megabit",Megabits:"megabit",megaBits:"megabit",MegaBits:"megabit",Mb:"megabit",mb:"megabit",megabyte:"megabyte",Megabyte:"megabyte",megaByte:"megabyte",MegaByte:"megabyte",megabytes:"megabyte",Megabytes:"megabyte",megaBytes:"megabyte",MegaBytes:"megabyte",MB:"megabyte",mB:"megabyte",gigabit:"gigabit",Gigabit:"gigabit",gigaBit:"gigabit",GigaBit:"gigabit",gigabits:"gigabit",Gigabits:"gigabit",gigaBits:"gigabyte",GigaBits:"gigabit",
Gb:"gigabit",gb:"gigabit",gigabyte:"gigabyte",Gigabyte:"gigabyte",gigaByte:"gigabyte",GigaByte:"gigabyte",gigabytes:"gigabyte",Gigabytes:"gigabyte",gigaBytes:"gigabyte",GigaBytes:"gigabyte",GB:"gigabyte",gB:"gigabyte",terabit:"terabit",Terabit:"terabit",teraBit:"terabit",TeraBit:"terabit",terabits:"terabit",Terabits:"terabit",teraBits:"terabit",TeraBits:"terabit",tb:"terabit",Tb:"terabit",terabyte:"terabyte",Terabyte:"terabyte",teraByte:"terabyte",TeraByte:"terabyte",terabytes:"terabyte",Terabytes:"terabyte",
teraBytes:"terabyte",TeraBytes:"terabyte",TB:"terabyte",tB:"terabyte",petabit:"petabit",Petabit:"petabit",petaBit:"petabit",PetaBit:"petabit",petabits:"petabit",Petabits:"petabit",petaBits:"petabit",PetaBits:"petabit",pb:"petabit",Pb:"petabit",petabyte:"petabyte",Petabyte:"petabyte",petaByte:"petabyte",PetaByte:"petabyte",petabytes:"petabyte",Petabytes:"petabyte",petaBytes:"petabyte",PetaBytes:"petabyte",PB:"petabyte",pB:"petabyte"};
ilib.Measurement.DigitalStorage.convert=function $ilib$Measurement$DigitalStorage$convert$($to$$,$from$$,$digitalStorage$$){$from$$=ilib.Measurement.DigitalStorage.aliases[$from$$]||$from$$;$to$$=ilib.Measurement.DigitalStorage.aliases[$to$$]||$to$$;return typeof $from$$==="undefined"||typeof $to$$==="undefined"?void 0:$digitalStorage$$*ilib.Measurement.DigitalStorage.ratios[$from$$][ilib.Measurement.DigitalStorage.ratios[$to$$][0]]};
ilib.Measurement.DigitalStorage.getMeasures=function $ilib$Measurement$DigitalStorage$getMeasures$(){var $ret$$=[],$m$$;for($m$$ in ilib.Measurement.DigitalStorage.ratios)$ret$$.push($m$$);return $ret$$};ilib.Measurement._constructors.digitalStorage=ilib.Measurement.DigitalStorage;
ilib.Measurement.Temperature=function $ilib$Measurement$Temperature$($options$$){this.unit="celsius";this.amount=0;this.aliases=ilib.Measurement.Temperature.aliases;if($options$$){if(typeof $options$$.unit!=="undefined"){this.originalUnit=$options$$.unit;this.unit=this.aliases[$options$$.unit]||$options$$.unit}if(typeof $options$$.amount==="object")if($options$$.amount.getMeasure()==="temperature")this.amount=ilib.Measurement.Temperature.convert(this.unit,$options$$.amount.getUnit(),$options$$.amount.getAmount());
else throw"Cannot convert unit "+$options$$.amount.unit+" to a temperature";else if(typeof $options$$.amount!=="undefined")this.amount=parseFloat($options$$.amount)}};ilib.Measurement.Temperature.prototype=new ilib.Measurement({});ilib.Measurement.Temperature.prototype.parent=ilib.Measurement;ilib.Measurement.Temperature.prototype.constructor=ilib.Measurement.Temperature;ilib.Measurement.Temperature.prototype.getMeasure=function $ilib$Measurement$Temperature$$getMeasure$(){return"temperature"};
ilib.Measurement.Temperature.aliases={Celsius:"celsius",celsius:"celsius",C:"celsius",centegrade:"celsius",Centegrade:"celsius",centigrade:"celsius",Centigrade:"celsius",fahrenheit:"fahrenheit",Fahrenheit:"fahrenheit",F:"fahrenheit",kelvin:"kelvin",K:"kelvin",Kelvin:"kelvin","\u00b0F":"fahrenheit","\u2109":"fahrenheit","\u2103":"celsius","\u00b0C":"celsius"};
ilib.Measurement.Temperature.prototype.convert=function $ilib$Measurement$Temperature$$convert$($to$$){return!$to$$||typeof ilib.Measurement.Temperature.ratios[this.normalizeUnits($to$$)]==="undefined"?void 0:new ilib.Measurement({unit:$to$$,amount:this})};
ilib.Measurement.Temperature.convert=function $ilib$Measurement$Temperature$convert$($to$$,$from$$,$temperature$$){var $result$$=0,$from$$=ilib.Measurement.Temperature.aliases[$from$$]||$from$$,$to$$=ilib.Measurement.Temperature.aliases[$to$$]||$to$$;if($from$$===$to$$)return $temperature$$;$from$$==="celsius"?$to$$==="fahrenheit"?$result$$=$temperature$$*9/5+32:$to$$==="kelvin"&&($result$$=$temperature$$+273.15):$from$$==="fahrenheit"?$to$$==="celsius"?$result$$=5/9*($temperature$$-32):$to$$==="kelvin"&&
($result$$=($temperature$$+459.67)*5/9):$from$$==="kelvin"&&($to$$==="celsius"?$result$$=$temperature$$-273.15:$to$$==="fahrenheit"&&($result$$=$temperature$$*9/5-459.67));return $result$$};ilib.Measurement.Temperature.prototype.scale=function $ilib$Measurement$Temperature$$scale$(){return new ilib.Measurement.Temperature({unit:this.unit,amount:this.amount})};ilib.Measurement.Temperature.getMeasures=function $ilib$Measurement$Temperature$getMeasures$(){return["celsius","kelvin","fahrenheit"]};
ilib.Measurement.Temperature.metricToUScustomary={celsius:"fahrenheit"};ilib.Measurement.Temperature.usCustomaryToMetric={fahrenheit:"celsius"};ilib.Measurement.Temperature.prototype.localize=function $ilib$Measurement$Temperature$$localize$($locale$$){return new ilib.Measurement.Temperature({unit:$locale$$==="en-US"?ilib.Measurement.Temperature.metricToUScustomary[this.unit]||this.unit:ilib.Measurement.Temperature.usCustomaryToMetric[this.unit]||this.unit,amount:this})};
ilib.Measurement._constructors.temperature=ilib.Measurement.Temperature;ilib.Measurement.Unknown=function $ilib$Measurement$Unknown$($options$$){if($options$$){this.unit=$options$$.unit;this.amount=$options$$.amount}};ilib.Measurement.Unknown.prototype=new ilib.Measurement({});ilib.Measurement.Unknown.prototype.parent=ilib.Measurement;ilib.Measurement.Unknown.prototype.constructor=ilib.Measurement.Unknown;ilib.Measurement.Unknown.aliases={unknown:"unknown"};
ilib.Measurement.Unknown.prototype.getMeasure=function $ilib$Measurement$Unknown$$getMeasure$(){return"unknown"};ilib.Measurement.Unknown.prototype.convert=function $ilib$Measurement$Unknown$$convert$(){};ilib.Measurement.Unknown.convert=function $ilib$Measurement$Unknown$convert$(){};ilib.Measurement.Unknown.prototype.localize=function $ilib$Measurement$Unknown$$localize$(){return new ilib.Measurement.Unknown({unit:this.unit,amount:this.amount})};
ilib.Measurement.Unknown.prototype.scale=function $ilib$Measurement$Unknown$$scale$(){return new ilib.Measurement.Unknown({unit:this.unit,amount:this.amount})};ilib.Measurement.Unknown.getMeasures=function $ilib$Measurement$Unknown$getMeasures$(){return[]};ilib.Measurement._constructors.unknown=ilib.Measurement.Unknown;
ilib.Measurement.Time=function $ilib$Measurement$Time$($options$$){this.unit="ns";this.amount=0;this.aliases=ilib.Measurement.Time.aliases;if($options$$){if(typeof $options$$.unit!=="undefined"){this.originalUnit=$options$$.unit;this.unit=this.aliases[$options$$.unit]||$options$$.unit}if(typeof $options$$.amount==="object")if($options$$.amount.getMeasure()==="time")this.amount=ilib.Measurement.Time.convert(this.unit,$options$$.amount.getUnit(),$options$$.amount.getAmount());else throw"Cannot convert units "+
$options$$.amount.unit+" to a time";else if(typeof $options$$.amount!=="undefined")this.amount=parseFloat($options$$.amount)}if(typeof ilib.Measurement.Time.ratios[this.unit]==="undefined")throw"Unknown unit: "+$options$$.unit;};
ilib.Measurement.Time.ratios={nanosecond:[1,1,0.001,1.0E-6,1.0E-9,1.6667E-11,2.7778E-13,1.1574E-14,1.6534E-15,3.8027E-16,3.1689E-17,3.1689E-18,3.1689E-19],microsecond:[2,1E3,1,0.001,1.0E-6,1.6667E-8,2.7778E-10,1.1574E-11,1.6534E-12,3.8027E-13,3.1689E-14,3.1689E-15,3.1689E-16],millisecond:[3,1E6,1E3,1,0.001,1.6667E-5,2.7778E-7,1.1574E-8,1.6534E-9,3.8027E-10,3.1689E-11,3.1689E-12,3.1689E-13],second:[4,1E9,1E6,1E3,1,0.0166667,2.77778E-4,1.1574E-5,1.6534E-6,3.8027E-7,3.1689E-8,3.1689E-9,3.1689E-10],minute:[5,
6E10,6E7,6E4,60,1,0.0166667,6.94444E-4,9.9206E-5,2.2816E-5,1.9013E-6,1.9013E-7,1.9013E-8],hour:[6,36E11,36E8,36E5,3600,60,1,0.0416667,0.00595238,0.00136895,1.1408E-4,1.1408E-5,1.1408E-6],day:[7,864E11,864E8,864E5,86400,1440,24,1,0.142857,0.0328549,0.00273791,2.73791E-4,2.7379E-5],week:[8,6048E11,6048E8,6048E5,604800,10080,168,7,1,0.229984,0.0191654,0.00191654,1.91654E-4],month:[9,263E13,263E10,263E7,263E4,43829.1,730.484,30.4368,4.34812,1,0.0833333,0.00833333,8.33333E-4],year:[10,3156E13,3156E10,
3156E7,3156E4,525949,8765.81,365.242,52.1775,12,1,0.1,0.01],decade:[11,3156E14,3156E11,3156E8,3156E5,5259E3,87658.1,3652.42,521.775,120,10,1,0.1],century:[12,3156E15,3156E15,3156E9,3156E6,5259E4,876581,36524.2,5217.75,1200,100,10,1]};ilib.Measurement.Time.prototype=new ilib.Measurement({});ilib.Measurement.Time.prototype.parent=ilib.Measurement;ilib.Measurement.Time.prototype.constructor=ilib.Measurement.Time;ilib.Measurement.Time.prototype.getMeasure=function $ilib$Measurement$Time$$getMeasure$(){return"time"};
ilib.Measurement.Time.prototype.convert=function $ilib$Measurement$Time$$convert$($to$$){return!$to$$||typeof ilib.Measurement.Time.ratios[this.normalizeUnits($to$$)]==="undefined"?void 0:new ilib.Measurement({unit:$to$$,amount:this})};
ilib.Measurement.Time.aliases={ns:"nanosecond",NS:"nanosecond",nS:"nanosecond",Ns:"nanosecond",Nanosecond:"nanosecond",Nanoseconds:"nanosecond",nanosecond:"nanosecond",nanoseconds:"nanosecond",NanoSecond:"nanosecond",NanoSeconds:"nanosecond","\u03bcs":"microsecond","\u03bcS":"microsecond",microsecond:"microsecond",microseconds:"microsecond",Microsecond:"microsecond",Microseconds:"microsecond",MicroSecond:"microsecond",MicroSeconds:"microsecond",ms:"millisecond",MS:"millisecond",mS:"millisecond",Ms:"millisecond",
millisecond:"millisecond",milliseconds:"millisecond",Millisecond:"millisecond",Milliseconds:"millisecond",MilliSecond:"millisecond",MilliSeconds:"millisecond",s:"second",S:"second",sec:"second",second:"second",seconds:"second",Second:"second",Seconds:"second",min:"minute",Min:"minute",minute:"minute",minutes:"minute",Minute:"minute",Minutes:"minute",h:"hour",H:"hour",hr:"hour",Hr:"hour",hR:"hour",HR:"hour",hour:"hour",hours:"hour",Hour:"hour",Hours:"hour",Hrs:"hour",hrs:"hour",day:"day",days:"day",
Day:"day",Days:"day",week:"week",weeks:"week",Week:"week",Weeks:"week",month:"month",Month:"month",months:"month",Months:"month",year:"year",years:"year",Year:"year",Years:"year",yr:"year",Yr:"year",yrs:"year",Yrs:"year",decade:"decade",decades:"decade",Decade:"decade",Decades:"decade",century:"century",centuries:"century",Century:"century",Centuries:"century"};
ilib.Measurement.Time.convert=function $ilib$Measurement$Time$convert$($to$$,$from$$,$time$$){$from$$=ilib.Measurement.Time.aliases[$from$$]||$from$$;$to$$=ilib.Measurement.Time.aliases[$to$$]||$to$$;return typeof $from$$==="undefined"||typeof $to$$==="undefined"?void 0:$time$$*ilib.Measurement.Time.ratios[$from$$][ilib.Measurement.Time.ratios[$to$$][0]]};ilib.Measurement.Time.prototype.localize=function $ilib$Measurement$Time$$localize$(){return new ilib.Measurement.Time({unit:this.unit,amount:this.amount})};
ilib.Measurement.Time.prototype.scale=function $ilib$Measurement$Time$$scale$(){var $fromRow$$=ilib.Measurement.Time.ratios[this.unit],$time$$=this.amount,$munit$$=this.unit,$i$$=1,$m$$;for($m$$ in ilib.Measurement.Time.ratios){var $tmp$$=this.amount*$fromRow$$[$i$$];if($tmp$$<1)break;$time$$=$tmp$$;$munit$$=$m$$;++$i$$}return new ilib.Measurement.Time({unit:$munit$$,amount:$time$$})};
ilib.Measurement.Time.getMeasures=function $ilib$Measurement$Time$getMeasures$(){var $ret$$=[],$m$$;for($m$$ in ilib.Measurement.Time.ratios)$ret$$.push($m$$);return $ret$$};ilib.Measurement._constructors.time=ilib.Measurement.Time;
ilib.Measurement.Mass=function $ilib$Measurement$Mass$($options$$){this.unit="ns";this.amount=0;this.aliases=ilib.Measurement.Mass.aliases;if($options$$){if(typeof $options$$.unit!=="undefined"){this.originalUnit=$options$$.unit;this.unit=this.aliases[$options$$.unit]||$options$$.unit}if(typeof $options$$.amount==="object")if($options$$.amount.getMeasure()==="mass")this.amount=ilib.Measurement.Mass.convert(this.unit,$options$$.amount.getUnit(),$options$$.amount.getAmount());else throw"Cannot convert units "+
$options$$.amount.unit+" to a mass";else if(typeof $options$$.amount!=="undefined")this.amount=parseFloat($options$$.amount)}if(typeof ilib.Measurement.Mass.ratios[this.unit]==="undefined")throw"Unknown unit: "+$options$$.unit;};
ilib.Measurement.Mass.ratios={microgram:[1,1,0.001,1.0E-6,3.5274E-8,2.2046E-9,1.0E-9,1.5747E-10,1.1023E-12,1.0E-12,9.8421E-13],milligram:[2,1E3,1,0.001,3.5274E-5,2.2046E-6,1.0E-6,1.5747E-7,1.1023E-9,1.0E-9,9.8421E-10],gram:[3,1E6,1E3,1,0.035274,0.00220462,0.001,1.57473E-4,1.1023E-6,1.0E-6,9.8421E-7],ounce:[4,2835E4,28349.5,28.3495,1,0.0625,0.0283495,0.00446429,3.125E-5,2.835E-5,2.7902E-5],pound:[5,4536E5,453592,453.592,16,1,0.453592,0.0714286,5.0E-4,4.53592E-4,4.46429E-4],kilogram:[6,1E9,1E6,1E3,
35.274,2.20462,1,0.157473,0.00110231,0.001,9.84207E-4],stone:[7,635E7,635E4,6350.29,224,14,6.35029,1,0.007,0.00635029,0.00625],"short ton":[8,9072E8,9072E5,907185,32E3,2E3,907.185,142.857,1,0.907185,0.892857],"metric ton":[9,1E12,1E9,1E6,35274,2204.62,1E3,157.473,1.10231,1,0.984207],"long ton":[10,1016E9,1016E6,1016E3,35840,2240,1016.05,160,1.12,1.01605,1]};ilib.Measurement.Mass.metricSystem={microgram:1,milligram:2,gram:3,kilogram:6,"metric ton":9};
ilib.Measurement.Mass.imperialSystem={ounce:4,pound:5,stone:7,"long ton":10};ilib.Measurement.Mass.uscustomarySystem={ounce:4,pound:5,"short ton":8};ilib.Measurement.Mass.metricToUScustomary={microgram:"ounce",milligram:"ounce",gram:"ounce",kilogram:"pound","metric ton":"long ton"};ilib.Measurement.Mass.metricToImperial={microgram:"ounce",milligram:"ounce",gram:"ounce",kilogram:"pound","metric ton":"short ton"};
ilib.Measurement.Mass.imperialToMetric={ounce:"gram",pound:"kilogram",stone:"kilogram","short ton":"metric ton"};ilib.Measurement.Mass.imperialToUScustomary={ounce:"ounce",pound:"pound",stone:"stone","short ton":"long ton"};ilib.Measurement.Mass.uScustomaryToImperial={ounce:"ounce",pound:"pound",stone:"stone","long ton":"short ton"};ilib.Measurement.Mass.uScustomarylToMetric={ounce:"gram",pound:"kilogram",stone:"kilogram","long ton":"metric ton"};ilib.Measurement.Mass.prototype=new ilib.Measurement({});
ilib.Measurement.Mass.prototype.parent=ilib.Measurement;ilib.Measurement.Mass.prototype.constructor=ilib.Measurement.Mass;
ilib.Measurement.Mass.prototype.localize=function $ilib$Measurement$Mass$$localize$($locale$$){return new ilib.Measurement.Mass({unit:$locale$$==="en-US"?ilib.Measurement.Mass.metricToUScustomary[this.unit]||ilib.Measurement.Mass.imperialToUScustomary[this.unit]||this.unit:$locale$$==="en-GB"?ilib.Measurement.Mass.metricToImperial[this.unit]||ilib.Measurement.Mass.uScustomaryToImperial[this.unit]||this.unit:ilib.Measurement.Mass.uScustomarylToMetric[this.unit]||ilib.Measurement.Mass.imperialToUScustomary[this.unit]||
this.unit,amount:this})};ilib.Measurement.Mass.prototype.getMeasure=function $ilib$Measurement$Mass$$getMeasure$(){return"mass"};ilib.Measurement.Mass.prototype.convert=function $ilib$Measurement$Mass$$convert$($to$$){return!$to$$||typeof ilib.Measurement.Mass.ratios[this.normalizeUnits($to$$)]==="undefined"?void 0:new ilib.Measurement({unit:$to$$,amount:this})};
ilib.Measurement.Mass.aliases={"\u00b5g":"microgram",microgram:"microgram",mcg:"microgram",milligram:"milligram",mg:"milligram",milligrams:"milligram",Milligram:"milligram",Milligrams:"milligram",MilliGram:"milligram",MilliGrams:"milligram",g:"gram",gram:"gram",grams:"gram",Gram:"gram",Grams:"gram",ounce:"ounce",oz:"ounce",Ounce:"ounce","\u2125":"ounce",pound:"pound",poundm:"pound","\u2114":"pound",lb:"pound",pounds:"pound",Pound:"pound",Pounds:"pound",kilogram:"kilogram",kg:"kilogram",kilograms:"kilogram",
"kilo grams":"kilogram","kilo gram":"kilogram",Kilogram:"kilogram",Kilograms:"kilogram",KiloGram:"kilogram",KiloGrams:"kilogram","Kilo gram":"kilogram","Kilo grams":"kilogram","Kilo Gram":"kilogram","Kilo Grams":"kilogram",stone:"stone",st:"stone",stones:"stone",Stone:"stone","short ton":"short ton","Short ton":"short ton","Short Ton":"short ton","metric ton":"metric ton",metricton:"metric ton",t:"metric ton",tonne:"metric ton",Tonne:"metric ton","Metric Ton":"metric ton",MetricTon:"metric ton","long ton":"long ton",
longton:"long ton",Longton:"long ton","Long ton":"long ton","Long Ton":"long ton",ton:"long ton",Ton:"long ton"};ilib.Measurement.Mass.convert=function $ilib$Measurement$Mass$convert$($to$$,$from$$,$mass$$){$from$$=ilib.Measurement.Mass.aliases[$from$$]||$from$$;$to$$=ilib.Measurement.Mass.aliases[$to$$]||$to$$;return typeof $from$$==="undefined"||typeof $to$$==="undefined"?void 0:$mass$$*ilib.Measurement.Mass.ratios[$from$$][ilib.Measurement.Mass.ratios[$to$$][0]]};
ilib.Measurement.Mass.prototype.scale=function $ilib$Measurement$Mass$$scale$($mSystem$$2_measurementsystem$$){if($mSystem$$2_measurementsystem$$==="metric"||typeof $mSystem$$2_measurementsystem$$==="undefined"&&typeof ilib.Measurement.Mass.metricSystem[this.unit]!=="undefined")$mSystem$$2_measurementsystem$$=ilib.Measurement.Mass.metricSystem;else if($mSystem$$2_measurementsystem$$==="imperial"||typeof $mSystem$$2_measurementsystem$$==="undefined"&&typeof ilib.Measurement.Mass.imperialSystem[this.unit]!==
"undefined")$mSystem$$2_measurementsystem$$=ilib.Measurement.Mass.imperialSystem;else if($mSystem$$2_measurementsystem$$==="uscustomary"||typeof $mSystem$$2_measurementsystem$$==="undefined"&&typeof ilib.Measurement.Mass.uscustomarySystem[this.unit]!=="undefined")$mSystem$$2_measurementsystem$$=ilib.Measurement.Mass.uscustomarySystem;else return new ilib.Measurement.Mass({unit:this.unit,amount:this.amount});var $mass$$=this.amount,$munit$$=this.amount,$fromRow$$=ilib.Measurement.Mass.ratios[this.unit],
$m$$;for($m$$ in $mSystem$$2_measurementsystem$$){var $tmp$$=this.amount*$fromRow$$[$mSystem$$2_measurementsystem$$[$m$$]];if($tmp$$<1)break;$mass$$=$tmp$$;$munit$$=$m$$}return new ilib.Measurement.Mass({unit:$munit$$,amount:$mass$$})};ilib.Measurement.Mass.getMeasures=function $ilib$Measurement$Mass$getMeasures$(){var $ret$$=[],$m$$;for($m$$ in ilib.Measurement.Mass.ratios)$ret$$.push($m$$);return $ret$$};ilib.Measurement._constructors.mass=ilib.Measurement.Mass;
ilib.Measurement.Area=function $ilib$Measurement$Area$($options$$){this.unit="square km";this.amount=0;this.aliases=ilib.Measurement.Area.aliases;if($options$$){if(typeof $options$$.unit!=="undefined"){this.originalUnit=$options$$.unit;this.unit=this.aliases[$options$$.unit]||$options$$.unit}if(typeof $options$$.amount==="object")if($options$$.amount.getMeasure()==="area")this.amount=ilib.Measurement.Area.convert(this.unit,$options$$.amount.getUnit(),$options$$.amount.getAmount());else throw"Cannot convert unit "+
$options$$.amount.unit+" to area";else if(typeof $options$$.amount!=="undefined")this.amount=parseFloat($options$$.amount)}if(typeof ilib.Measurement.Area.ratios[this.unit]==="undefined")throw"Unknown unit: "+$options$$.unit;};
ilib.Measurement.Area.ratios={"square centimeter":[1,1,1.0E-4,1.0E-8,1.0E-10,0.15500031,0.00107639104,1.19599005E-4,2.47105381E-8,3.86102159E-11],"square meter":[2,1E4,1,1.0E-4,1.0E-6,1550,10.7639,1.19599,2.47105E-4,3.861E-7],hectare:[3,1E8,1E4,1,0.01,155E5,107639,11959.9,2.47105,0.00386102],"square km":[4,1E10,1E6,100,1,155E7,1076E4,1196E3,247.105,0.386102],"square inch":[5,6.4516,6.4516E-4,6.4516E-8,6.4516E-10,1,7.71605E-4,7.716051E-4,1.5942E-7,2.491E-10],"square foot":[6,929.0304,0.092903,9.2903E-6,
9.2903E-8,144,1,0.111111,2.2957E-5,3.587E-8],"square yard":[7,8361.2736,0.836127,8.3613E-5,8.3613E-7,1296,9,1,2.06612E-4,3.2283E-7],acre:[8,4.04685642E7,4046.86,0.404686,0.00404686,6273E3,43560,4840,1,0.0015625],"square mile":[9,25899881100,259E4,258.999,2.58999,4014E6,2788E4,3098E3,640,1]};ilib.Measurement.Area.prototype=new ilib.Measurement({});ilib.Measurement.Area.prototype.parent=ilib.Measurement;ilib.Measurement.Area.prototype.constructor=ilib.Measurement.Area;
ilib.Measurement.Area.prototype.getMeasure=function $ilib$Measurement$Area$$getMeasure$(){return"area"};ilib.Measurement.Area.prototype.convert=function $ilib$Measurement$Area$$convert$($to$$){return!$to$$||typeof ilib.Measurement.Area.ratios[this.normalizeUnits($to$$)]==="undefined"?void 0:new ilib.Measurement({unit:$to$$,amount:this})};
ilib.Measurement.Area.aliases={"square centimeter":"square centimeter","square cm":"square centimeter","sq cm":"square centimeter","Square Cm":"square centimeter","square Centimeters":"square centimeter","square Centimeter":"square centimeter","square Centimetre":"square centimeter","square Centimetres":"square centimeter","square centimeters":"square centimeter","Square km":"square km","Square kilometre":"square km","square kilometer":"square km","square kilometre":"square km","square kilometers":"square km",
"square kilometres":"square km","square km":"square km","sq km":"square km",km2:"square km",Hectare:"hectare",hectare:"hectare",ha:"hectare","Square meter":"square meter","Square meters":"square meter","square meter":"square meter","square meters":"square meter","Square metre":"square meter","Square metres":"square meter","square metres":"square meter","Square Metres":"square meter",sqm:"square meter",m2:"square meter","Square mile":"square mile","Square miles":"square mile","square mile":"square mile",
"square miles":"square mile","square mi":"square mile","Square mi":"square mile","sq mi":"square mile",mi2:"square mile",Acre:"acre",acre:"acre",Acres:"acre",acres:"acre","Square yard":"square yard","Square yards":"square yard","square yard":"square yard","square yards":"square yard",yd2:"square yard","Square foot":"square foot","square foot":"square foot","Square feet":"square foot","Square Feet":"square foot","sq ft":"square foot",ft2:"square foot","Square inch":"square inch","square inch":"square inch",
"Square inches":"square inch","square inches":"square inch",in2:"square inch"};ilib.Measurement.Area.convert=function $ilib$Measurement$Area$convert$($to$$,$from$$,$area$$){$from$$=ilib.Measurement.Area.aliases[$from$$]||$from$$;$to$$=ilib.Measurement.Area.aliases[$to$$]||$to$$;return typeof $from$$==="undefined"||typeof $to$$==="undefined"?void 0:$area$$*ilib.Measurement.Area.ratios[$from$$][ilib.Measurement.Area.ratios[$to$$][0]]};
ilib.Measurement.Area.getMeasures=function $ilib$Measurement$Area$getMeasures$(){var $ret$$=[],$m$$;for($m$$ in ilib.Measurement.Area.ratios)$ret$$.push($m$$);return $ret$$};ilib.Measurement.Area.metricSystem={"square centimeter":1,"square meter":2,hectare:3,"square km":4};ilib.Measurement.Area.imperialSystem={"square inch":5,"square foot":6,"square yard":7,acre:8,"square mile":9};ilib.Measurement.Area.uscustomarySystem={"square inch":5,"square foot":6,"square yard":7,acre:8,"square mile":9};
ilib.Measurement.Area.metricToUScustomary={"square centimeter":"square inch","square meter":"square yard",hectare:"acre","square km":"square mile"};ilib.Measurement.Area.usCustomaryToMetric={"square inch":"square centimeter","square foot":"square meter","square yard":"square meter",acre:"hectare","square mile":"square km"};
ilib.Measurement.Area.prototype.scale=function $ilib$Measurement$Area$$scale$($area$$2_measurementsystem$$){var $fromRow$$=ilib.Measurement.Area.ratios[this.unit],$mSystem$$;if($area$$2_measurementsystem$$==="metric"||typeof $area$$2_measurementsystem$$==="undefined"&&typeof ilib.Measurement.Area.metricSystem[this.unit]!=="undefined")$mSystem$$=ilib.Measurement.Area.metricSystem;else if($area$$2_measurementsystem$$==="uscustomary"||typeof $area$$2_measurementsystem$$==="undefined"&&typeof ilib.Measurement.Area.metricSystem[this.unit]!==
"undefined")$mSystem$$=ilib.Measurement.Area.uscustomarySystem;else if($area$$2_measurementsystem$$==="imperial"||typeof $area$$2_measurementsystem$$==="undefined"&&typeof ilib.Measurement.Area.metricSystem[this.unit]!=="undefined")$mSystem$$=ilib.Measurement.Area.imperialSystem;var $area$$2_measurementsystem$$=this.amount,$munit$$=this.unit,$m$$;for($m$$ in $mSystem$$){var $tmp$$=this.amount*$fromRow$$[$mSystem$$[$m$$]];if($tmp$$<1)break;$area$$2_measurementsystem$$=$tmp$$;$munit$$=$m$$}return new ilib.Measurement.Area({unit:$munit$$,
amount:$area$$2_measurementsystem$$})};ilib.Measurement.Area.prototype.localize=function $ilib$Measurement$Area$$localize$($locale$$){return new ilib.Measurement.Area({unit:$locale$$==="en-US"||$locale$$==="en-GB"?ilib.Measurement.Area.metricToUScustomary[this.unit]||this.unit:ilib.Measurement.Area.usCustomaryToMetric[this.unit]||this.unit,amount:this})};ilib.Measurement._constructors.area=ilib.Measurement.Area;
ilib.Measurement.FuelConsumption=function $ilib$Measurement$FuelConsumption$($options$$){this.unit="km/liter";this.amount=0;this.aliases=ilib.Measurement.FuelConsumption.aliases;if($options$$){if(typeof $options$$.unit!=="undefined"){this.originalUnit=$options$$.unit;this.unit=this.aliases[$options$$.unit]||$options$$.unit}if(typeof $options$$.amount==="object")if($options$$.amount.getMeasure()==="fuelconsumption")this.amount=ilib.Measurement.FuelConsumption.convert(this.unit,$options$$.amount.getUnit(),
$options$$.amount.getAmount());else throw"Cannot convert unit "+$options$$.amount.unit+" to fuelconsumption";else if(typeof $options$$.amount!=="undefined")this.amount=parseFloat($options$$.amount)}};ilib.Measurement.FuelConsumption.ratios=["km/liter","liter/100km","mpg","mpg(imp)"];ilib.Measurement.FuelConsumption.prototype=new ilib.Measurement({});ilib.Measurement.FuelConsumption.prototype.parent=ilib.Measurement;ilib.Measurement.FuelConsumption.prototype.constructor=ilib.Measurement.FuelConsumption;
ilib.Measurement.FuelConsumption.prototype.getMeasure=function $ilib$Measurement$FuelConsumption$$getMeasure$(){return"fuelconsumption"};ilib.Measurement.FuelConsumption.prototype.convert=function $ilib$Measurement$FuelConsumption$$convert$($to$$){return!$to$$||typeof ilib.Measurement.FuelConsumption.ratios[this.normalizeUnits($to$$)]==="undefined"?void 0:new ilib.Measurement({unit:$to$$,amount:this})};
ilib.Measurement.FuelConsumption.aliases={"Km/liter":"km/liter","KM/Liter":"km/liter","KM/L":"km/liter","Kilometers Per Liter":"km/liter","kilometers per liter":"km/liter","km/l":"km/liter","Kilometers/Liter":"km/liter","Kilometer/Liter":"km/liter","kilometers/liter":"km/liter","kilometer/liter":"km/liter","km/liter":"km/liter","Liter/100km":"liter/100km","Liters/100km":"liter/100km","Liter/100kms":"liter/100km","Liters/100kms":"liter/100km","liter/100km":"liter/100km","liters/100kms":"liter/100km",
"liters/100km":"liter/100km","liter/100kms":"liter/100km","Liter/100KM":"liter/100km","Liters/100KM":"liter/100km","L/100km":"liter/100km","L/100KM":"liter/100km","l/100KM":"liter/100km","l/100km":"liter/100km","l/100kms":"liter/100km","MPG(US)":"mpg","USMPG ":"mpg",mpg:"mpg",mpgUS:"mpg","mpg(US)":"mpg","mpg(us)":"mpg","mpg-us":"mpg","mpg Imp":"mpg(imp)","MPG(imp)":"mpg(imp)","mpg(imp)":"mpg(imp)","mpg-imp":"mpg(imp)"};ilib.Measurement.FuelConsumption.metricToUScustomary={"km/liter":"mpg","liter/100km":"mpg"};
ilib.Measurement.FuelConsumption.metricToImperial={"km/liter":"mpg(imp)","liter/100km":"mpg(imp)"};ilib.Measurement.FuelConsumption.imperialToMetric={"mpg(imp)":"km/liter"};ilib.Measurement.FuelConsumption.imperialToUScustomary={"mpg(imp)":"mpg"};ilib.Measurement.FuelConsumption.uScustomaryToImperial={mpg:"mpg(imp)"};ilib.Measurement.FuelConsumption.uScustomarylToMetric={mpg:"km/liter"};
ilib.Measurement.FuelConsumption.prototype.localize=function $ilib$Measurement$FuelConsumption$$localize$($locale$$){return new ilib.Measurement.FuelConsumption({unit:$locale$$==="en-US"?ilib.Measurement.FuelConsumption.metricToUScustomary[this.unit]||ilib.Measurement.FuelConsumption.imperialToUScustomary[this.unit]||this.unit:$locale$$==="en-GB"?ilib.Measurement.FuelConsumption.metricToImperial[this.unit]||ilib.Measurement.FuelConsumption.uScustomaryToImperial[this.unit]||this.unit:ilib.Measurement.FuelConsumption.uScustomarylToMetric[this.unit]||
ilib.Measurement.FuelConsumption.imperialToUScustomary[this.unit]||this.unit,amount:this})};
ilib.Measurement.FuelConsumption.convert=function $ilib$Measurement$FuelConsumption$convert$($to$$,$from$$,$fuelConsumption$$){var $from$$=ilib.Measurement.FuelConsumption.aliases[$from$$]||$from$$,$to$$=ilib.Measurement.FuelConsumption.aliases[$to$$]||$to$$,$returnValue$$=0;switch($from$$){case "km/liter":switch($to$$){case "km/liter":$returnValue$$=$fuelConsumption$$*1;break;case "liter/100km":$returnValue$$=100/$fuelConsumption$$;break;case "mpg":$returnValue$$=$fuelConsumption$$*2.35215;break;
case "mpg(imp)":$returnValue$$=$fuelConsumption$$*2.82481}break;case "liter/100km":switch($to$$){case "km/liter":$returnValue$$=100/$fuelConsumption$$;break;case "liter/100km":$returnValue$$=$fuelConsumption$$*1;break;case "mpg":$returnValue$$=235.215/$fuelConsumption$$;break;case "mpg(imp)":$returnValue$$=282.481/$fuelConsumption$$}break;case "mpg":switch($to$$){case "km/liter":$returnValue$$=$fuelConsumption$$*0.425144;break;case "liter/100km":$returnValue$$=235.215/$fuelConsumption$$;break;case "mpg":$returnValue$$=
1*$fuelConsumption$$;break;case "mpg(imp)":$returnValue$$=1.20095*$fuelConsumption$$}break;case "mpg(imp)":switch($to$$){case "km/liter":$returnValue$$=$fuelConsumption$$*0.354006;break;case "liter/100km":$returnValue$$=282.481/$fuelConsumption$$;break;case "mpg":$returnValue$$=0.832674*$fuelConsumption$$;break;case "mpg(imp)":$returnValue$$=1*$fuelConsumption$$}}return $returnValue$$};
ilib.Measurement.FuelConsumption.prototype.scale=function $ilib$Measurement$FuelConsumption$$scale$(){return new ilib.Measurement.FuelConsumption({unit:this.unit,amount:this.amount})};ilib.Measurement.FuelConsumption.getMeasures=function $ilib$Measurement$FuelConsumption$getMeasures$(){var $ret$$=[];$ret$$.push("km/liter");$ret$$.push("liter/100km");$ret$$.push("mpg");$ret$$.push("mpg(imp)");return $ret$$};ilib.Measurement._constructors.fuelconsumption=ilib.Measurement.FuelConsumption;
ilib.Measurement.Volume=function $ilib$Measurement$Volume$($options$$){this.unit="cubic meter";this.amount=0;this.aliases=ilib.Measurement.Volume.aliases;if($options$$){if(typeof $options$$.unit!=="undefined"){this.originalUnit=$options$$.unit;this.unit=this.aliases[$options$$.unit]||$options$$.unit}if(typeof $options$$.amount==="object")if($options$$.amount.getMeasure()==="volume")this.amount=ilib.Measurement.Volume.convert(this.unit,$options$$.amount.getUnit(),$options$$.amount.getAmount());else throw"Cannot convert unit "+
$options$$.amount.unit+" to a volume";else if(typeof $options$$.amount!=="undefined")this.amount=parseFloat($options$$.amount)}if(typeof ilib.Measurement.Volume.ratios[this.unit]==="undefined")throw"Unknown unit: "+$options$$.unit;};
ilib.Measurement.Volume.ratios={tsp:[1,1,0.333333,0.300781,0.166667,0.0208333,0.0104167,0.00130208,0.00130208,1.74063E-4,4.92892,0.00492892,4.9289E-6,0.832674,0.277558,0.173474,0.00867369,0.00433684,0.00108421],tbsp:[2,3,1,0.902344,0.5,0.0625,0.0312,0.015625,0.00390625,5.2219E-4,14.7868,0.0147868,1.4787E-5,2.49802,0.832674,0.520421,0.0260211,0.0130105,0.00325263],"cubic inch":[3,3.32468,1.10823,1,0.554113,0.0692641,0.034632,0.017316,0.004329,5.78704E-4,16.3871,0.0163871,1.6387E-5,2.76837,0.92279,
0.576744,0.0288372,0.0144186,0.00360465],"us ounce":[4,6,2,1.80469,1,0.125,0.0625,0.0078125,0.0078125,0.00104438,29.5735,0.0295735,2.9574E-5,4.99604,1.04084,1.04084,0.0520421,0.0260211,0.00650526],cup:[5,48,16,14.4375,8,1,0.5,0.25,0.0625,0.00835503,236.588,0.236588,2.36588E-4,39.9683,13.3228,8.32674,0.416337,0.208168,0.0520421],pint:[6,96,32,28.875,16,2,1,0.5,0.125,0.0167101,473.176,0.473176,4.73176E-4,79.9367,26.6456,16.6535,0.832674,0.416337,0.104084],quart:[7,192,64,57.75,32,4,2,1,0.25,0.0334201,
946.353,0.946353,9.46353E-4,159.873,53.2911,33.307,1.66535,0.832674,0.208168],gallon:[8,768,256,231,128,16,8,4,1,0.133681,3785.41,3.78541,0.00378541,639.494,213.165,133.228,6.66139,3.3307,0.832674],"cubic foot":[9,5745.04,1915.01,1728,957.506,119.688,59.8442,29.9221,7.48052,1,28316.8,28.3168,0.0283168,4783.74,1594.58,996.613,49.8307,24.9153,6.22883],milliliter:[10,0.202884,0.067628,0.0610237,0.033814,0.00422675,0.00211338,0.00105669,2.64172E-4,3.5315E-5,1,0.001,1.0E-6,0.168936,0.0563121,0.0351951,
0.00175975,8.79877E-4,2.19969E-4],liter:[11,202.884,67.628,61.0237,33.814,4.22675,2.11338,1.05669,0.264172,0.0353147,1E3,1,0.001,56.3121,56.3121,35.191,1.75975,0.879877,0.219969],"cubic meter":[12,202884,67628,61023.7,33814,4226.75,2113.38,1056.69,264.172,35.3147,1E6,1E3,1,168936,56312.1,35195.1,1759.75,879.877,219.969],"imperial tsp":[13,1.20095,0.200158,0.361223,0.600475,0.0250198,0.0125099,0.00625495,0.00156374,2.09041E-4,5.91939,0.00591939,5.9194E-6,1,0.333333,0.208333,0.0104167,0.00520833,0.00130208],
"imperial tbsp":[14,3.60285,1.20095,1.08367,0.600475,0.0750594,0.0375297,0.0187649,0.00469121,6.27124E-4,17.7582,0.0177582,1.7758E-5,3,1,0.625,0.03125,0.015625,0.00390625],"imperial ounce":[15,5.76456,1.92152,1.73387,0.96076,0.120095,0.0600475,0.0300238,0.00750594,0.0010034,28.4131,0.0284131,2.8413E-5,4.8,1.6,1,0.05,0.025,0.00625],"imperial pint":[16,115.291,38.4304,34.6774,19.2152,2.4019,1.20095,0.600475,0.150119,0.020068,568.261,0.568261,5.68261E-4,96,32,20,1,0.5,0.125],"imperial quart":[17,230.582,
76.8608,69.3549,38.4304,4.8038,2.4019,1.20095,0.300238,0.0401359,1136.52,1.13652,0.00113652,192,64,40,2,1,0.25],"imperial gallon":[18,922.33,307.443,277.42,153.722,19.2152,9.6076,4.8038,1.20095,0.160544,4546.09,4.54609,0.00454609,768,256,160,8,4,1]};ilib.Measurement.Volume.prototype=new ilib.Measurement({});ilib.Measurement.Volume.prototype.parent=ilib.Measurement;ilib.Measurement.Volume.prototype.constructor=ilib.Measurement.Volume;ilib.Measurement.Volume.prototype.getMeasure=function $ilib$Measurement$Volume$$getMeasure$(){return"volume"};
ilib.Measurement.Volume.prototype.convert=function $ilib$Measurement$Volume$$convert$($to$$){return!$to$$||typeof ilib.Measurement.Volume.ratios[this.normalizeUnits($to$$)]==="undefined"?void 0:new ilib.Measurement({unit:$to$$,amount:this})};
ilib.Measurement.Volume.aliases={"US gal":"gallon","US gallon":"gallon","US Gal":"gallon","US Gallons":"gallon","Gal(US)":"gallon","gal(US)":"gallon",gallon:"gallon",quart:"quart","US quart":"quart","US quarts":"quart","US Quart":"quart","US Quarts":"quart","US qt":"quart","Qt(US)":"quart","qt(US)":"quart","US pint":"pint","US Pint":"pint",pint:"pint","pint(US)":"pint","Pint(US)":"pint","US cup":"cup","US Cup":"cup","cup(US)":"cup","Cup(US)":"cup",cup:"cup","us ounce":"us ounce","US ounce":"us ounce",
"\u2125":"us ounce","US Oz":"us ounce","oz(US)":"us ounce","Oz(US)":"us ounce","US tbsp":"tbsp",tbsp:"tbsp","tbsp(US)":"tbsp","US tablespoon":"tbsp","US tsp":"tsp","tsp(US)":"tsp",tsp:"tsp","Cubic meter":"cubic meter","cubic meter":"cubic meter","Cubic metre":"cubic meter","cubic metre":"cubic meter",m3:"cubic meter",Liter:"liter",Liters:"liter",liter:"liter",L:"liter",l:"liter",Milliliter:"milliliter",ML:"milliliter",ml:"milliliter",milliliter:"milliliter",mL:"milliliter","Imperial gal":"imperial gallon",
"imperial gallon":"imperial gallon","Imperial gallon":"imperial gallon","gallon(imperial)":"imperial gallon","gal(imperial)":"imperial gallon","Imperial quart":"imperial quart","imperial quart":"imperial quart","Imperial Quart":"imperial quart","IMperial qt":"imperial quart","qt(Imperial)":"imperial quart","quart(imperial)":"imperial quart","Imperial pint":"imperial pint","imperial pint":"imperial pint","pint(Imperial)":"imperial pint","imperial oz":"imperial ounce","imperial ounce":"imperial ounce",
"Imperial Ounce":"imperial ounce","Imperial tbsp":"imperial tbsp","imperial tbsp":"imperial tbsp","tbsp(Imperial)":"imperial tbsp","Imperial tsp":"imperial tsp","imperial tsp":"imperial tsp","tsp(Imperial)":"imperial tsp","Cubic foot":"cubic foot","cubic foot":"cubic foot","Cubic Foot":"cubic foot","Cubic feet":"cubic foot","cubic Feet":"cubic foot","cubic ft":"cubic foot",ft3:"cubic foot","Cubic inch":"cubic inch","Cubic inches":"cubic inch","cubic inches":"cubic inch","cubic inch":"cubic inch",
"cubic in":"cubic inch","cu in":"cubic inch","cu inch":"cubic inch","inch\u00b3":"cubic inch","in\u00b3":"cubic inch","inch^3":"cubic inch","in^3":"cubic inch","c.i":"cubic inch",CI:"cubic inch",cui:"cubic inch"};
ilib.Measurement.Volume.convert=function $ilib$Measurement$Volume$convert$($to$$,$from$$,$volume$$){$from$$=ilib.Measurement.Volume.aliases[$from$$]||$from$$;$to$$=ilib.Measurement.Volume.aliases[$to$$]||$to$$;return typeof $from$$==="undefined"||typeof $to$$==="undefined"?void 0:$volume$$*ilib.Measurement.Volume.ratios[$from$$][ilib.Measurement.Volume.ratios[$to$$][0]]};
ilib.Measurement.Volume.getMeasures=function $ilib$Measurement$Volume$getMeasures$(){var $ret$$=[],$m$$;for($m$$ in ilib.Measurement.Volume.ratios)$ret$$.push($m$$);return $ret$$};ilib.Measurement.Volume.metricSystem={milliliter:10,liter:11,"cubic meter":12};ilib.Measurement.Volume.imperialSystem={"imperial tsp":13,"imperial tbsp":14,"imperial ounce":15,"imperial pint":16,"imperial quart":17,"imperial gallon":18};
ilib.Measurement.Volume.uscustomarySystem={tsp:1,tbsp:2,"cubic inch":3,"us ounce":4,cup:5,pint:6,quart:7,gallon:8,"cubic foot":9};ilib.Measurement.Volume.metricToUScustomary={milliliter:"tsp",liter:"quart","cubic meter":"cubic foot"};ilib.Measurement.Volume.metricToImperial={milliliter:"imperial tsp",liter:"imperial quart","cubic meter":"imperial gallon"};
ilib.Measurement.Volume.imperialToMetric={"imperial tsp":"milliliter","imperial tbsp":"milliliter","imperial ounce":"milliliter","imperial pint":"liter","imperial quart":"liter","imperial gallon":"cubic meter"};ilib.Measurement.Volume.imperialToUScustomary={"imperial tsp":"tsp","imperial tbsp":"tbsp","imperial ounce":"us ounce","imperial pint":"pint","imperial quart":"quart","imperial gallon":"gallon"};
ilib.Measurement.Volume.uScustomaryToImperial={tsp:"imperial tsp",tbsp:"imperial tbsp","cubic inch":"imperial tbsp","us ounce":"imperial ounce",cup:"imperial ounce",pint:"imperial pint",quart:"imperial quart",gallon:"imperial gallon","cubic foot":"imperial gallon"};ilib.Measurement.Volume.uScustomarylToMetric={tsp:"milliliter",tbsp:"milliliter","cubic inch":"milliliter","us ounce":"milliliter",cup:"milliliter",pint:"liter",quart:"liter",gallon:"cubic meter","cubic foot":"cubic meter"};
ilib.Measurement.Volume.prototype.localize=function $ilib$Measurement$Volume$$localize$($locale$$){return new ilib.Measurement.Volume({unit:$locale$$==="en-US"?ilib.Measurement.Volume.metricToUScustomary[this.unit]||ilib.Measurement.Volume.imperialToUScustomary[this.unit]||this.unit:$locale$$==="en-GB"?ilib.Measurement.Volume.metricToImperial[this.unit]||ilib.Measurement.Volume.uScustomaryToImperial[this.unit]||this.unit:ilib.Measurement.Volume.uScustomarylToMetric[this.unit]||ilib.Measurement.Volume.imperialToUScustomary[this.unit]||
this.unit,amount:this})};
ilib.Measurement.Volume.prototype.scale=function $ilib$Measurement$Volume$$scale$($measurementsystem$$10_volume$$){var $fromRow$$=ilib.Measurement.Volume.ratios[this.unit],$mSystem$$;if($measurementsystem$$10_volume$$==="metric"||typeof $measurementsystem$$10_volume$$==="undefined"&&typeof ilib.Measurement.Volume.metricSystem[this.unit]!=="undefined")$mSystem$$=ilib.Measurement.Volume.metricSystem;else if($measurementsystem$$10_volume$$==="uscustomary"||typeof $measurementsystem$$10_volume$$==="undefined"&&
typeof ilib.Measurement.Volume.uscustomarySystem[this.unit]!=="undefined")$mSystem$$=ilib.Measurement.Volume.uscustomarySystem;else if($measurementsystem$$10_volume$$==="imperial"||typeof $measurementsystem$$10_volume$$==="undefined"&&typeof ilib.Measurement.Volume.imperialSystem[this.unit]!=="undefined")$mSystem$$=ilib.Measurement.Volume.imperialSystem;var $measurementsystem$$10_volume$$=this.amount,$munit$$=this.unit,$m$$;for($m$$ in $mSystem$$){var $tmp$$=this.amount*$fromRow$$[$mSystem$$[$m$$]];
if($tmp$$<1)break;$measurementsystem$$10_volume$$=$tmp$$;$munit$$=$m$$}return new ilib.Measurement.Volume({unit:$munit$$,amount:$measurementsystem$$10_volume$$})};ilib.Measurement._constructors.volume=ilib.Measurement.Volume;
ilib.Measurement.Energy=function $ilib$Measurement$Energy$($options$$){this.unit="ns";this.amount=0;this.aliases=ilib.Measurement.Energy.aliases;if($options$$){if(typeof $options$$.unit!=="undefined"){this.originalUnit=$options$$.unit;this.unit=this.aliases[$options$$.unit]||$options$$.unit}if(typeof $options$$.amount==="object")if($options$$.amount.getMeasure()==="energy")this.amount=ilib.Measurement.Energy.convert(this.unit,$options$$.amount.getUnit(),$options$$.amount.getAmount());else throw"Cannot convert units "+
$options$$.amount.unit+" to a energy";else if(typeof $options$$.amount!=="undefined")this.amount=parseFloat($options$$.amount)}if(typeof ilib.Measurement.Energy.ratios[this.unit]==="undefined")throw"Unknown unit: "+$options$$.unit;};
ilib.Measurement.Energy.ratios={millijoule:[1,1,0.001,9.4781707775E-7,1.0E-6,2.7777777778E-7,2.3884589663E-7,1.0E-9,2.7777777778E-10,1.0E-12,2.7777777778E-13,2.7777777778E-16],joule:[2,1E3,1,9.4781707775E-4,0.001,2.7777777778E-4,2.3884589663E-4,1.0E-6,2.7777777778E-7,1.0E-9,2.7777777778E-10,2.7777777778E-13],BTU:[3,1055055.9,1055.0559,1,1.0550559,0.29307108333,0.25199577243,0.0010550559,2.9307108333E-4,1.0550559E-6,2.9307108333E-7,2.9307108333E-10],kilojoule:[4,1E6,1E3,0.94781707775,1,0.27777777778,
0.23884589663,0.001,2.7777777778E-4,1.0E-6,2.7777777778E-7,2.7777777778E-10],"watt hour":[5,36E5,3600,3.4121414799,3.6,1,0.85984522786,0.0036,0.001,3.6E-6,1.0E-6,1.0E-9],calorie:[6,486800,4186.8,3.9683205411,4.1868,1.163,1,0.0041868,0.001163,4.1868E-6,1.163E-6,1.163E-9],megajoule:[7,1E9,1E6,947.81707775,1E3,277.77777778,238.84589663,1,0.27777777778,0.001,2.7777777778E-4,2.7777777778E-7],"kilowatt hour":[8,36E8,36E5,3412.1414799,3600,1E3,859.84522786,3.6,1,0.0036,0.001,1.0E-6],gigajoule:[9,1E12,1E9,
947817.07775,1E6,277777.77778,238845.89663,1E3,277.77777778,1,0.27777777778,2.7777777778E-4],"megawatt hour":[10,36E11,36E8,3412141.4799,36E5,1E6,859845.22786,3600,1E3,3.6,1,0.001],"gigawatt hour":[11,36E14,36E11,3.4121414799E9,36E8,1E9,8.5984522786E8,36E5,1E6,3600,1E3,1]};ilib.Measurement.Energy.prototype=new ilib.Measurement({});ilib.Measurement.Energy.prototype.parent=ilib.Measurement;ilib.Measurement.Energy.prototype.constructor=ilib.Measurement.Energy;
ilib.Measurement.Energy.prototype.getMeasure=function $ilib$Measurement$Energy$$getMeasure$(){return"energy"};ilib.Measurement.Energy.prototype.convert=function $ilib$Measurement$Energy$$convert$($to$$){return!$to$$||typeof ilib.Measurement.Energy.ratios[this.normalizeUnits($to$$)]==="undefined"?void 0:new ilib.Measurement({unit:$to$$,amount:this})};
ilib.Measurement.Energy.aliases={"milli joule":"millijoule",millijoule:"millijoule",MilliJoule:"millijoule",milliJ:"millijoule",joule:"joule",J:"joule",j:"joule",Joule:"joule",Joules:"joule",joules:"joule",BTU:"BTU",btu:"BTU","British thermal unit":"BTU","british thermal unit":"BTU","kilo joule":"kilojoule",kJ:"kilojoule",kj:"kilojoule",Kj:"kilojoule",kiloJoule:"kilojoule",kilojoule:"kilojoule",kjoule:"kilojoule","watt hour":"watt hour",Wh:"watt hour",wh:"watt hour","watt-hour":"watt hour",calorie:"calorie",
Cal:"calorie",cal:"calorie",Calorie:"calorie",calories:"calorie","mega joule":"megajoule",MJ:"megajoule",megajoule:"megajoule",megajoules:"megajoule",Megajoules:"megajoule",megaJoules:"megajoule",MegaJoules:"megajoule",megaJoule:"megajoule",MegaJoule:"megajoule","kilo Watt hour":"kilowatt hour",kWh:"kilowatt hour",kiloWh:"kilowatt hour",KiloWh:"kilowatt hour","KiloWatt-hour":"kilowatt hour","kilowatt hour":"kilowatt hour","kilowatt-hour":"kilowatt hour","KiloWatt-hours":"kilowatt hour","kilowatt-hours":"kilowatt hour",
"Kilo Watt-hour":"kilowatt hour","Kilo Watt-hours":"kilowatt hour","giga joule":"gigajoule",gJ:"gigajoule",GJ:"gigajoule",GigaJoule:"gigajoule",gigaJoule:"gigajoule",gigajoule:"gigajoule",GigaJoules:"gigajoule",gigaJoules:"gigajoule",Gigajoules:"gigajoule",gigajoules:"gigajoule","mega watt hour":"megawatt hour",MWh:"megawatt hour",MegaWh:"megawatt hour",megaWh:"megawatt hour",megaWatthour:"megawatt hour","megaWatt-hour":"megawatt hour","mega Watt-hour":"megawatt hour","megaWatt hour":"megawatt hour",
"megawatt hour":"megawatt hour","mega Watt hour":"megawatt hour","giga watt hour":"gigawatt hour",gWh:"gigawatt hour",GWh:"gigawatt hour",gigaWh:"gigawatt hour","gigaWatt-hour":"gigawatt hour","gigawatt-hour":"gigawatt hour","gigaWatt hour":"gigawatt hour","gigawatt hour":"gigawatt hour",gigawatthour:"gigawatt hour"};
ilib.Measurement.Energy.convert=function $ilib$Measurement$Energy$convert$($to$$,$from$$,$energy$$){$from$$=ilib.Measurement.Energy.aliases[$from$$]||$from$$;$to$$=ilib.Measurement.Energy.aliases[$to$$]||$to$$;return typeof $from$$==="undefined"||typeof $to$$==="undefined"?void 0:$energy$$*ilib.Measurement.Energy.ratios[$from$$][ilib.Measurement.Energy.ratios[$to$$][0]]};
ilib.Measurement.Energy.getMeasures=function $ilib$Measurement$Energy$getMeasures$(){var $ret$$=[],$m$$;for($m$$ in ilib.Measurement.Energy.ratios)$ret$$.push($m$$);return $ret$$};ilib.Measurement.Energy.metricJouleSystem={millijoule:1,joule:2,kilojoule:4,megajoule:7,gigajoule:9};ilib.Measurement.Energy.metricWattHourSystem={"watt hour":5,"kilowatt hour":8,"megawatt hour":10,"gigawatt hour":11};ilib.Measurement.Energy.imperialSystem={BTU:3};ilib.Measurement.Energy.uscustomarySystem={calorie:6};
ilib.Measurement.Energy.metricToImperial={millijoule:"BTU",joule:"BTU",kilojoule:"BTU",megajoule:"BTU",gigajoule:"BTU"};ilib.Measurement.Energy.imperialToMetric={BTU:"joule"};ilib.Measurement.Energy.prototype.localize=function $ilib$Measurement$Energy$$localize$($locale$$){return new ilib.Measurement.Energy({unit:$locale$$==="en-GB"?ilib.Measurement.Energy.metricToImperial[this.unit]||this.unit:ilib.Measurement.Energy.imperialToMetric[this.unit]||this.unit,amount:this})};
ilib.Measurement.Energy.prototype.scale=function $ilib$Measurement$Energy$$scale$($energy$$1_measurementsystem$$){var $fromRow$$=ilib.Measurement.Energy.ratios[this.unit],$mSystem$$;if($energy$$1_measurementsystem$$==="metric"&&typeof ilib.Measurement.Energy.metricJouleSystem[this.unit]!=="undefined"||typeof $energy$$1_measurementsystem$$==="undefined"&&typeof ilib.Measurement.Energy.metricJouleSystem[this.unit]!=="undefined")$mSystem$$=ilib.Measurement.Energy.metricJouleSystem;else if($energy$$1_measurementsystem$$===
"metric"&&typeof ilib.Measurement.Energy.metricWattHourSystem[this.unit]!=="undefined"||typeof $energy$$1_measurementsystem$$==="undefined"&&typeof ilib.Measurement.Energy.metricWattHourSystem[this.unit]!=="undefined")$mSystem$$=ilib.Measurement.Energy.metricWattHourSystem;else if($energy$$1_measurementsystem$$==="uscustomary"||typeof $energy$$1_measurementsystem$$==="undefined"&&typeof ilib.Measurement.Energy.uscustomarySystem[this.unit]!=="undefined")$mSystem$$=ilib.Measurement.Energy.uscustomarySystem;
else if($energy$$1_measurementsystem$$==="imperial"||typeof $energy$$1_measurementsystem$$==="undefined"&&typeof ilib.Measurement.Energy.imperialSystem[this.unit]!=="undefined")$mSystem$$=ilib.Measurement.Energy.imperialSystem;var $energy$$1_measurementsystem$$=this.amount,$munit$$=this.unit,$m$$;for($m$$ in $mSystem$$){var $tmp$$=this.amount*$fromRow$$[$mSystem$$[$m$$]];if($tmp$$<1)break;$energy$$1_measurementsystem$$=$tmp$$;$munit$$=$m$$}return new ilib.Measurement.Energy({unit:$munit$$,amount:$energy$$1_measurementsystem$$})};
ilib.Measurement._constructors.energy=ilib.Measurement.Energy;