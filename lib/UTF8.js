var Charset=require("./Charset.js");var Charmap=require("./Charmap.js");var IString=require("./IString.js");var UTF8=function(options){this.charset=new Charset({name:"UTF-8"})};UTF8.prototype=new Charmap();UTF8.prototype.parent=Charmap;UTF8.prototype.constructor=UTF8;UTF8.prototype.validate=function(bytes){var i=0;while(i<bytes.length){if((bytes[i]&128)===0){i++}else{var len;if((bytes[i]&192)===192){len=2}else if((bytes[i]&224)===224){len=3}else if((bytes[i]&240)===240){len=4}else{return false}if(i+len>bytes.length){return false}for(var j=1;j<len;j++){if((bytes[i+j]&128)!==128){return false}}i+=len}}return true};UTF8.prototype.mapToUnicode=function(bytes){if(typeof Buffer!=="undefined"){var b=new Buffer(bytes);return b.toString("utf8")}var ret="";var i=0;while(i<bytes.length){if(bytes[i]===0){i=bytes.length}else if((bytes[i]&128)===0){ret+=String.fromCharCode(bytes[i++])}else if((bytes[i]&224)===192){if(i+1>=bytes.length||(bytes[i+1]&128)!==128){throw"invalid utf-8 bytes"}ret+=String.fromCharCode((bytes[i]&31)<<6|bytes[i+1]&63);i+=2}else if((bytes[i]&240)===224){if(i+2>=bytes.length||(bytes[i+1]&128)!==128||(bytes[i+2]&128)!==128){throw"invalid utf-8 bytes"}ret+=String.fromCharCode((bytes[i]&15)<<12|(bytes[i+1]&63)<<6|bytes[i+2]&63);i+=3}else if((bytes[i]&248)===240){if(i+3>=bytes.length||(bytes[i+1]&128)!==128||(bytes[i+2]&128)!==128||(bytes[i+3]&128)!==128){throw"invalid utf-8 bytes"}ret+=IString.fromCodePoint((bytes[i]&7)<<18|(bytes[i+1]&63)<<12|(bytes[i+2]&63)<<6|bytes[i+3]&63);i+=4}else{throw"invalid utf-8 bytes"}}return ret};UTF8.prototype.mapToNative=function(str){if(typeof Buffer!=="undefined"){var b=new Buffer(str,"utf8");return new Uint8Array(b)}var istr=str instanceof IString?str:new IString(str);var it=istr.iterator();var ret=new Uint8Array(istr.length*4+1);var i=0;while(it.hasNext()){var c=it.next();if(c>127){if(c>2047){if(c>65535){ret[i]=240|c>>18&3;ret[i+1]=128|c>>12&63;ret[i+2]=128|c>>6&63;ret[i+3]=128|c&63;i+=4}else{ret[i]=224|c>>12&15;ret[i+1]=128|c>>6&63;ret[i+2]=128|c&63;i+=3}}else{ret[i]=192|c>>6&31;ret[i+1]=128|c&63;i+=2}}else{ret[i++]=c&127}}ret[i]=0;return ret};Charmap._algorithms["UTF-8"]=UTF8;module.exports=UTF8;