var ilib=require("./ilib.js");var Utils=require("./Utils.js");var Locale=require("./Locale.js");var LocaleInfo=require("./LocaleInfo.js");var ResBundle=require("./ResBundle.js");var Country=function(options){var sync=true,loadParams=undefined,locale,localeinfo;if(options){if(options.locale){this.locale=typeof options.locale==="string"?new Locale(options.locale):options.locale}if(typeof options.sync!=="undefined"){sync=options.sync}if(options.loadParams){loadParams=options.loadParams}}this.locale=this.locale||new Locale();localeinfo=new LocaleInfo(this.locale);if(localeinfo.getRegionName()===undefined){locale="en-US"}else{locale=this.locale}if(!this.countryToCode){Utils.loadData({name:"ctrynames.json",object:Country,locale:locale,sync:sync,loadParams:loadParams,callback:ilib.bind(this,function(countries){this.countryToCode=countries;this._loadLocinfo(options&&options.onLoad)})})}else{this._loadLocinfo(options&&options.onLoad)}};Country.getAvailableCode=function(){var ret=[],country,countries=new ResBundle({name:"ctrynames"}).getResObj();for(country in countries){if(country&&countries[country]){ret.push(countries[country])}}return ret};Country.getAvailableCountry=function(){var ret=[],country,countries=new ResBundle({name:"ctrynames"}).getResObj();for(country in countries){if(country&&countries[country]){ret.push(country)}}return ret};Country.prototype={_loadLocinfo:function(onLoad){new LocaleInfo(this.locale,{onLoad:ilib.bind(this,function(li){var temp=this.countryToCode,ctry;this.codeToCountry={};this.locinfo=li;for(ctry in temp){if(ctry&&temp[ctry]){this.codeToCountry[temp[ctry]]=ctry}}if(typeof onLoad==="function"){onLoad(this)}})})},getCode:function(ctryname){if(!this.countryToCode[ctryname]){throw"Country "+ctryname+" is unknown"}return this.countryToCode[ctryname]},getName:function(code){if(!this.codeToCountry[code]){throw"Country "+code+" is unknown"}return this.codeToCountry[code]},getLocale:function(){return this.locale}};module.exports=Country;